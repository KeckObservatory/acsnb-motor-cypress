ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2iz
  20              		.section	.text.Current_Read_Task,"ax",%progbits
  21              		.align	2
  22              		.global	Current_Read_Task
  23              		.code	16
  24              		.thumb_func
  25              		.type	Current_Read_Task, %function
  26              	Current_Read_Task:
  27              	.LFB35:
  28              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original non-RTOS version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  12:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  13:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  14:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  15:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  16:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  17:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  18:main.c        **** *******************************************************************************/
  19:main.c        **** #include <FreeRTOS.h>
  20:main.c        **** #include <semphr.h>
  21:main.c        **** #include <task.h>
  22:main.c        **** #include <I2C_I2C.h>
  23:main.c        **** #include <stdbool.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <math.h>
  26:main.c        **** #include "INA219.h"
  27:main.c        **** 
  28:main.c        **** /* Firmware revision as of 2019-07-10 PMR */
  29:main.c        **** #define FIRMWARE_REV_0 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 2


  30:main.c        **** #define FIRMWARE_REV_1 0
  31:main.c        **** #define FIRMWARE_REV_2 6
  32:main.c        **** 
  33:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  34:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  35:main.c        **** 
  36:main.c        **** /* --------------------------------------------------------------------- 
  37:main.c        ****  * CONSTANTS
  38:main.c        ****  * --------------------------------------------------------------------- */
  39:main.c        **** 
  40:main.c        **** /* Interrupt priorities (not to be confused with RTOS task priorities) */
  41:main.c        **** #define NESTED_ISR                             (1u)
  42:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  43:main.c        **** #define HIGHER_PRIORITY                        (2u)
  44:main.c        **** 
  45:main.c        **** /* Interrupt prototypes */
  46:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  47:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  48:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  49:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  50:main.c        **** 
  51:main.c        **** /* --------------------------------------------------------------------- 
  52:main.c        ****  * WDT Defines
  53:main.c        ****  *
  54:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  55:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  56:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  57:main.c        ****  * --------------------------------------------------------------------- */
  58:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  59:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  60:main.c        **** 
  61:main.c        **** /* --------------------------------------------------------------------- 
  62:main.c        ****  * PWM Defines
  63:main.c        ****  * --------------------------------------------------------------------- */
  64:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  65:main.c        **** #define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * (PWM_15KHZ_PERIOD/100))
  66:main.c        **** #define PWM_IDLE                               (50.0)
  67:main.c        **** 
  68:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  69:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  70:main.c        **** #define INA219_CAL_VALUE                       (8192)
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  74:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  75:main.c        **** 
  76:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  77:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  78:main.c        **** 
  79:main.c        **** /* --------------------------------------------------------------------- 
  80:main.c        ****  * PID Defines
  81:main.c        ****  * --------------------------------------------------------------------- */
  82:main.c        **** #define PID_MANUAL                             (0)
  83:main.c        **** #define PID_AUTOMATIC                          (1)
  84:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (25)
  85:main.c        **** bool inAuto = false;
  86:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 3


  87:main.c        **** volatile int8 Jog, LastJog;
  88:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  89:main.c        **** int32 PID_Setpoint, PID_EffectiveSetpoint;
  90:main.c        **** uint8 PID_EffSetDelta;
  91:main.c        **** uint32 lastTime;
  92:main.c        **** float Output;
  93:main.c        **** float ITerm;
  94:main.c        **** volatile int32 Position, LastPosition;
  95:main.c        **** float refKp, refKi, refKd;
  96:main.c        **** float kp, ki, kd;
  97:main.c        **** uint32 refSampleTime = 5; // Default to 5ms
  98:main.c        **** float outMax_Total, outMax_ITerm;
  99:main.c        **** float pwmLimit, pwmMax, pwmMin;    
 100:main.c        **** bool homingDone = true;
 101:main.c        **** 
 102:main.c        **** /* --------------------------------------------------------------------- 
 103:main.c        ****  * ENCODER PROPERTIES
 104:main.c        ****  *
 105:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 106:main.c        ****  *
 107:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 108:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 109:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 110:main.c        ****  * flag and resetting the counter to 0 again.
 111:main.c        ****  *
 112:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 113:main.c        ****  * --------------------------------------------------------------------- */
 114:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 115:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 116:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 117:main.c        **** 
 118:main.c        **** 
 119:main.c        **** /* --------------------------------------------------------------------- 
 120:main.c        ****  * RTOS INTERFACES
 121:main.c        ****  * --------------------------------------------------------------------- */
 122:main.c        **** /* Define macros for delaying a task by an amount, returning control back to the OS.
 123:main.c        ****    We have to sleep in OS ticks, so compute how many that is and sleep that long.
 124:main.c        ****    Minimum sleep time is 1ms. */
 125:main.c        **** #define Sleep(MSToSleep)    vTaskDelay( ( MSToSleep * 1000 ) / configTICK_RATE_HZ )
 126:main.c        **** 
 127:main.c        **** 
 128:main.c        **** /* --------------------------------------------------------------------- 
 129:main.c        ****  * GLOBALS
 130:main.c        ****  * --------------------------------------------------------------------- */
 131:main.c        **** /* Coarse reporting of state back to the node box software */
 132:main.c        **** typedef enum {    
 133:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 134:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 135:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 136:main.c        ****     csMAX    
 137:main.c        **** } ConfigStates_t;
 138:main.c        **** 
 139:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 140:main.c        **** 
 141:main.c        **** /* Fault codes, these are bit encoded into a uint8 */
 142:main.c        **** typedef enum {
 143:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 4


 144:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 145:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 146:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 147:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 148:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 149:main.c        ****     fsX2           = 0b00100000,    /* */
 150:main.c        ****     fsX3           = 0b01000000,    /* */
 151:main.c        ****     fsX4           = 0b10000000     /* */
 152:main.c        **** } FaultStates_t;
 153:main.c        **** 
 154:main.c        **** volatile ConfigStates_t ConfigState;
 155:main.c        **** volatile uint8 FaultState;
 156:main.c        **** volatile uint8 ConfigSequence;
 157:main.c        **** volatile uint16 ChecksumErrors;
 158:main.c        **** volatile int16 Current;
 159:main.c        **** volatile float PWM;
 160:main.c        **** uint8 CurrentI2Cinbuf[20];
 161:main.c        **** 
 162:main.c        **** /* Task stack information */
 163:main.c        **** volatile UBaseType_t uxHighWaterMark_PID;
 164:main.c        **** volatile UBaseType_t uxHighWaterMark_Current;
 165:main.c        **** volatile UBaseType_t uxHighWaterMark_Comm;
 166:main.c        **** 
 167:main.c        **** /* Message buffer lock */
 168:main.c        **** SemaphoreHandle_t Lock;
 169:main.c        **** 
 170:main.c        **** /* --------------------------------------------------------------------- 
 171:main.c        ****  * SPI MESSAGING
 172:main.c        ****  * --------------------------------------------------------------------- */
 173:main.c        **** /* V2 protocol 
 174:main.c        **** 
 175:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 176:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 177:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 178:main.c        **** */
 179:main.c        ****     
 180:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 181:main.c        **** #define MAX_MESSAGE_SIZE 30
 182:main.c        ****     
 183:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 184:main.c        ****    talking.  1000 ticks is 1 second of not talking. */
 185:main.c        **** #define MAX_LAST_MESSAGE_TIME_TICKS 1000
 186:main.c        **** uint32 LastMessageTimeTick;
 187:main.c        **** 
 188:main.c        **** /* Opcodes that can come from the node box software */
 189:main.c        **** typedef enum {
 190:main.c        ****     opUNDEFINED = 0,
 191:main.c        ****     opConfig    = 1,
 192:main.c        ****     opStatus    = 2,
 193:main.c        ****     opError     = 3,
 194:main.c        ****     opMAX       
 195:main.c        **** } rxMessage_opcodes_t;    
 196:main.c        **** 
 197:main.c        **** /* Sanity check for opcodes */
 198:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 199:main.c        **** 
 200:main.c        **** typedef struct { 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 5


 201:main.c        ****     uint8 checksum;        
 202:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 203:main.c        ****     uint8 opcode;     /* Operation (generic overlay for previewing opcode value) */
 204:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 205:main.c        **** 
 206:main.c        **** /* Configuration message, 19 bytes */
 207:main.c        **** typedef struct {
 208:main.c        ****     uint8 checksum;        
 209:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 210:main.c        ****     uint8 opcode;     /* Operation: 01 == config */        
 211:main.c        ****     uint8 sequence;   /* Configuration message sequence number */
 212:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 213:main.c        ****     float Ki;
 214:main.c        ****     float Kd;
 215:main.c        ****     uint8 limit_Total;/* Total drive output limit, +/- percentage */
 216:main.c        ****     uint8 limit_ITerm;/* PID I term output limit, also +/- percentage */
 217:main.c        ****     uint8 effsetdelta;/* PID effective setpoint increment delta, nominally 25 steps */
 218:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 219:main.c        **** 
 220:main.c        **** /* Status message, contains desired position and such values, 12 bytes */
 221:main.c        **** typedef struct {
 222:main.c        ****     uint8  checksum;        
 223:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 224:main.c        ****     uint8  opcode;     /* Operation: 02 == status */
 225:main.c        ****     uint8  enable;     /* Enable/disable PID algorithm */
 226:main.c        ****     int32 setpoint;    /* Setpoint (desired actuator position) */
 227:main.c        ****     int8   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 228:main.c        ****     uint8  clearfaults;/* Set to nonzero to clear all the current faults */
 229:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 230:main.c        ****    
 231:main.c        **** 
 232:main.c        **** 
 233:main.c        **** /* Wrap the message with an array of bytes */
 234:main.c        **** union {
 235:main.c        ****     uint8               buf[MAX_MESSAGE_SIZE];
 236:main.c        ****     rxMessage_overlay_t overlay;
 237:main.c        ****     rxMessage_config_t  config;
 238:main.c        ****     rxMessage_status_t  status;  
 239:main.c        **** } rxMessage;
 240:main.c        **** 
 241:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 18 byt
 242:main.c        **** typedef struct  {  
 243:main.c        ****     uint8  checksum;   /* Message checksum */    
 244:main.c        ****     uint8  version0;   /* Version byte 0 */ 
 245:main.c        ****     uint8  version1;   /* Version byte 1 */
 246:main.c        ****     uint8  version2;   /* Version byte 2 */
 247:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 248:main.c        ****     uint8  opcode;     /* Echo back of the opcode this response is for, operation: 02 == status */
 249:main.c        ****     uint8  state;      /* Enum value for current device configuration state */ 
 250:main.c        ****     uint8  fault;      /* Bit encoded fields for current fault status */
 251:main.c        ****     uint8  sequence;   /* Echo back the config sequence number currently set */
 252:main.c        ****     uint16 checksum_errors; /* Count of checksum errors */
 253:main.c        ****     int16 current;     /* Motor current consumption (mA) */
 254:main.c        ****     int32 position;    /* Actual actuator position, signed value */ 
 255:main.c        ****     float pwm;         /* PWM value the motor is moving at */     
 256:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 257:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 6


 258:main.c        **** /* Wrap the message with an array of bytes */
 259:main.c        **** union {    
 260:main.c        ****     uint8       buf[MAX_MESSAGE_SIZE];
 261:main.c        ****     txMessage_t msg;
 262:main.c        **** } txMessage;
 263:main.c        **** 
 264:main.c        **** /* State machine definition for transmit side of messaging */
 265:main.c        **** typedef enum {
 266:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 267:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 268:main.c        **** } txMessageStates_t;
 269:main.c        **** 
 270:main.c        **** txMessageStates_t txMessageState;
 271:main.c        **** 
 272:main.c        **** 
 273:main.c        **** /******************************************************************************/
 274:main.c        **** /* Function prototypes */
 275:main.c        **** int32 GetPosition(void);
 276:main.c        **** /******************************************************************************/
 277:main.c        **** 
 278:main.c        **** 
 279:main.c        **** 
 280:main.c        **** /*******************************************************************************
 281:main.c        **** * Function Name: setupFreeRTOS
 282:main.c        **** ********************************************************************************
 283:main.c        **** * Summary:
 284:main.c        **** *  Hooks the tick and service handlers for the RTOS at runtime.
 285:main.c        **** *
 286:main.c        **** * Parameters: None
 287:main.c        **** * Return: None
 288:main.c        **** *******************************************************************************/
 289:main.c        **** 
 290:main.c        **** extern void xPortPendSVHandler(void);
 291:main.c        **** extern void xPortSysTickHandler(void);
 292:main.c        **** extern void vPortSVCHandler(void);
 293:main.c        **** 
 294:main.c        **** void setupFreeRTOS(void) {
 295:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 296:main.c        ****     
 297:main.c        ****     /* Handler for Cortex Supervisor Call (SVC, formerly SWI) - address 11 */
 298:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SVCall_IRQn, (cyisraddress)vPortSVCHandler );
 299:main.c        ****     
 300:main.c        ****     /* Handler for Cortex PendSV Call - address 14 */
 301:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + PendSV_IRQn, (cyisraddress)xPortPendSVHandler );    
 302:main.c        ****     
 303:main.c        ****     /* Handler for Cortex SYSTICK - address 15 */
 304:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SysTick_IRQn, (cyisraddress)xPortSysTickHandler );
 305:main.c        **** }
 306:main.c        **** 
 307:main.c        **** 
 308:main.c        **** /*******************************************************************************
 309:main.c        **** * Function Name: AssertFault
 310:main.c        **** ********************************************************************************
 311:main.c        **** * Summary:
 312:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 313:main.c        **** *  all faults.
 314:main.c        **** *
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 7


 315:main.c        **** * Parameters: FaultStates_t of the fault detected.
 316:main.c        **** * Return: None
 317:main.c        **** *******************************************************************************/
 318:main.c        **** void AssertFault(FaultStates_t fault) {
 319:main.c        ****  
 320:main.c        ****     switch (fault) {
 321:main.c        ****      
 322:main.c        ****         /* Clears all asserted faults */
 323:main.c        ****         case fsNONE:
 324:main.c        ****             FaultState = fsNONE;
 325:main.c        ****             break;        
 326:main.c        ****         
 327:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 328:main.c        ****         default:
 329:main.c        ****             FaultState |= fault;
 330:main.c        ****             break;        
 331:main.c        ****     }    
 332:main.c        **** }
 333:main.c        **** 
 334:main.c        **** 
 335:main.c        **** /*******************************************************************************
 336:main.c        **** * Function Name: ClearFault
 337:main.c        **** ********************************************************************************
 338:main.c        **** * Summary:
 339:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 340:main.c        **** *  all faults.
 341:main.c        **** *
 342:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 343:main.c        **** * Return: None
 344:main.c        **** *******************************************************************************/
 345:main.c        **** void ClearFault(FaultStates_t fault) {
 346:main.c        ****  
 347:main.c        ****     switch (fault) {
 348:main.c        ****      
 349:main.c        ****         /* Clears all asserted faults */
 350:main.c        ****         case fsNONE:
 351:main.c        ****             FaultState = fsNONE;
 352:main.c        ****             break;        
 353:main.c        ****         
 354:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 355:main.c        ****         default:
 356:main.c        ****             FaultState &= ~fault;
 357:main.c        ****             break;        
 358:main.c        ****     }    
 359:main.c        **** }
 360:main.c        **** 
 361:main.c        **** 
 362:main.c        **** /*******************************************************************************
 363:main.c        **** * Function Name: Current_Read_Task
 364:main.c        **** ********************************************************************************
 365:main.c        **** * Summary:
 366:main.c        **** *  RTOS task to read the motor current consumption.
 367:main.c        **** *
 368:main.c        **** * Parameters: None
 369:main.c        **** * Return: None
 370:main.c        **** *******************************************************************************/
 371:main.c        **** void Current_Read_Task(void *arg) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 8


  29              		.loc 1 371 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 372:main.c        ****     
 373:main.c        ****     volatile uint32 err;
 374:main.c        ****     float CurrentTemp;
 375:main.c        ****     
 376:main.c        ****     /* Initial high water mark reading */
 377:main.c        ****     uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
  38              		.loc 1 377 0
  39 0002 0020     		movs	r0, #0
  40              	.LVL1:
  41 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
  42              	.LVL2:
  43 0008 0C4B     		ldr	r3, .L3
  44 000a 1860     		str	r0, [r3]
 378:main.c        ****     
 379:main.c        ****     /* Start I2C for Current Monitor */
 380:main.c        ****     I2C_Start();
  45              		.loc 1 380 0
  46 000c FFF7FEFF 		bl	I2C_Start
  47              	.LVL3:
 381:main.c        ****     Init_INA(INA219_I2C_ADDR);
  48              		.loc 1 381 0
  49 0010 4020     		movs	r0, #64
  50 0012 FFF7FEFF 		bl	Init_INA
  51              	.LVL4:
  52              	.L2:
 382:main.c        ****     
 383:main.c        ****     while (1) {
 384:main.c        ****         CurrentTemp = getCurrent_mA(INA219_I2C_ADDR);
  53              		.loc 1 384 0 discriminator 1
  54 0016 4020     		movs	r0, #64
  55 0018 FFF7FEFF 		bl	getCurrent_mA
  56              	.LVL5:
 385:main.c        ****                 
 386:main.c        ****         Current = (int16_t) CurrentTemp;
  57              		.loc 1 386 0 discriminator 1
  58 001c FFF7FEFF 		bl	__aeabi_f2iz
  59              	.LVL6:
  60 0020 00B2     		sxth	r0, r0
  61 0022 074B     		ldr	r3, .L3+4
  62 0024 1880     		strh	r0, [r3]
 387:main.c        ****         //AssertFault(fsCurrentRead);
 388:main.c        ****         
 389:main.c        ****         /* Read the current at 2Hz */        
 390:main.c        ****         Sleep(500);
  63              		.loc 1 390 0 discriminator 1
  64 0026 FA20     		movs	r0, #250
  65 0028 4000     		lsls	r0, r0, #1
  66 002a FFF7FEFF 		bl	vTaskDelay
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 9


  67              	.LVL7:
 391:main.c        ****         
 392:main.c        ****         /* Get our task stack usage high water mark */    
 393:main.c        ****         uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );   
  68              		.loc 1 393 0 discriminator 1
  69 002e 0020     		movs	r0, #0
  70 0030 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
  71              	.LVL8:
  72 0034 014B     		ldr	r3, .L3
  73 0036 1860     		str	r0, [r3]
  74 0038 EDE7     		b	.L2
  75              	.L4:
  76 003a C046     		.align	2
  77              	.L3:
  78 003c 00000000 		.word	uxHighWaterMark_Current
  79 0040 00000000 		.word	Current
  80              		.cfi_endproc
  81              	.LFE35:
  82              		.size	Current_Read_Task, .-Current_Read_Task
  83              		.section	.text.RSTIsrHandler,"ax",%progbits
  84              		.align	2
  85              		.global	RSTIsrHandler
  86              		.code	16
  87              		.thumb_func
  88              		.type	RSTIsrHandler, %function
  89              	RSTIsrHandler:
  90              	.LFB46:
 394:main.c        ****     }
 395:main.c        **** }
 396:main.c        **** 
 397:main.c        **** /*******************************************************************************
 398:main.c        **** * Function Name: Comm_Task
 399:main.c        **** ********************************************************************************
 400:main.c        **** * Summary:
 401:main.c        **** *  RTOS task to perform the SPI communications.
 402:main.c        **** *
 403:main.c        **** * Parameters: None
 404:main.c        **** * Return: None
 405:main.c        **** *******************************************************************************/
 406:main.c        **** void Comm_Task(void *arg) {
 407:main.c        ****  
 408:main.c        ****     rxMessage_opcodes_t opcode;
 409:main.c        ****     uint8 size;
 410:main.c        ****     uint8 i;
 411:main.c        ****     uint8 checksum;
 412:main.c        ****     uint8 limit;    
 413:main.c        ****     
 414:main.c        ****     /* Initial high water mark reading */
 415:main.c        ****     uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );  
 416:main.c        ****     
 417:main.c        ****     while (1) {
 418:main.c        ****         //PROBE_Write(1);
 419:main.c        ****         
 420:main.c        ****         /* If the SPI is moving data out right now, skip any touching of the message buffer */
 421:main.c        ****         if (!SPI_1_SpiIsBusBusy()) {
 422:main.c        ****         
 423:main.c        ****             /* In certain states, this thread is responsible for loading the outbound messaging */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 10


 424:main.c        ****             switch (txMessageState) {
 425:main.c        ****              
 426:main.c        ****                 /* Output buffer is clear and ready for loading, rxMessage is (probably) good and n
 427:main.c        ****                 case txmsClear:
 428:main.c        **** 
 429:main.c        ****                     /* Take the lock, set the fields, and release the lock.  If we can't get the lo
 430:main.c        ****                        we have missed this messaging cycle have to skip it.
 431:main.c        ****                        2018-12-18 PMR: At the moment, this is the only task taking the lock so it w
 432:main.c        ****                                        Sometime in the future we might need the lock so I am leavin
 433:main.c        ****                     */
 434:main.c        ****                     if( xSemaphoreTake( Lock, ( TickType_t ) 4 ) == pdTRUE ) {
 435:main.c        ****                         
 436:main.c        ****                         /* Get a few items out of the message before checking the sum */
 437:main.c        ****                         size     = rxMessage.overlay.size;
 438:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 439:main.c        ****                         
 440:main.c        ****                         /* Make sure the size makes sense.  If we have to reset the size it's proba
 441:main.c        ****                         if (size > sizeof(txMessage.buf))
 442:main.c        ****                             size = sizeof(txMessage.buf);                            
 443:main.c        ****                     
 444:main.c        ****                         /* Calculate the checksum by summing the bytes of the entire message, it sh
 445:main.c        ****                         for (i = 0, checksum = 0; i < size; i++)
 446:main.c        ****                             checksum += rxMessage.buf[i]; 
 447:main.c        **** 
 448:main.c        ****                         /* Checksum fault, don't try to process the messgage */
 449:main.c        ****                         if ((checksum & 0xFF) != 0) {
 450:main.c        ****                             
 451:main.c        ****                             txMessage.msg.opcode = opcode;
 452:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 453:main.c        ****                             ChecksumErrors++;
 454:main.c        ****                             
 455:main.c        ****                         /* Message looks fine, process it */
 456:main.c        ****                         } else {
 457:main.c        **** 
 458:main.c        ****                             /* Message opcode must be valid before trying to process the message co
 459:main.c        ****                             if ( rxMessageOpcodeValid(opcode) ) {                            
 460:main.c        ****                             
 461:main.c        ****                                 switch (opcode) {
 462:main.c        ****                                 
 463:main.c        ****                                     case opConfig:
 464:main.c        ****                                         /* Special message to establish settings on the device such
 465:main.c        ****                                     
 466:main.c        ****                                         /* Update the 'reference' values passed down from the serve
 467:main.c        ****                                            values are time interval adjusted */
 468:main.c        ****                                         refKp = rxMessage.config.Kp;
 469:main.c        ****                                         refKi = rxMessage.config.Ki;
 470:main.c        ****                                         refKd = rxMessage.config.Kd;      
 471:main.c        ****                                     
 472:main.c        ****                                         /* PID effective setpoint increment delta value */         
 473:main.c        ****                                         PID_EffSetDelta = rxMessage.config.effsetdelta;
 474:main.c        ****                                            
 475:main.c        ****                                         /* Setup the output limits and stop a jog if one was in pro
 476:main.c        ****                                         Jog = 0;
 477:main.c        ****                                     
 478:main.c        ****                                         /* Clip the limits to 100% duty cycle */
 479:main.c        ****                                         limit = rxMessage.config.limit_Total;
 480:main.c        ****                                         if (limit > 100)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 11


 481:main.c        ****                                             limit = 100;
 482:main.c        ****                                     
 483:main.c        ****                                         outMax_Total = limit;                                      
 484:main.c        ****                                         
 485:main.c        ****                                         limit = rxMessage.config.limit_ITerm;                      
 486:main.c        ****                                         if (limit > 100)
 487:main.c        ****                                             limit = 100;
 488:main.c        ****                                         
 489:main.c        ****                                         outMax_ITerm = limit;
 490:main.c        ****                                         
 491:main.c        ****                                         /* Convert the configured output maximum also into a PWM va
 492:main.c        ****                                         could be set from manual control of the PWM.  
 493:main.c        **** 
 494:main.c        ****                                         outMax_Total ranges from 0 to 100% of power delivery, which
 495:main.c        ****                                         convert it into a value symmetrically above and below the "
 496:main.c        ****                                         point value of 50 */    
 497:main.c        ****                                         pwmLimit = (outMax_Total/100 * 50);
 498:main.c        ****                                         pwmMax = 50 + pwmLimit;
 499:main.c        ****                                         pwmMin = 50 - pwmLimit;
 500:main.c        ****                                     
 501:main.c        ****                                         /* We have received a config message, so signal to the PID 
 502:main.c        ****                                         ConfigState = csReady;  
 503:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 504:main.c        ****                                     
 505:main.c        ****                                         /* Clear all the faults when reconfigured */
 506:main.c        ****                                         ClearFault(fsNONE);
 507:main.c        ****                                         break;
 508:main.c        **** 
 509:main.c        ****                                     case opStatus:
 510:main.c        ****                                         /* The normal message telling us where to go, how much to j
 511:main.c        ****                                         PID_Enabled = (bool) rxMessage.status.enable;
 512:main.c        ****                                         
 513:main.c        ****                                         /* If we are commanded to move somewhere else, remember whe
 514:main.c        ****                                         if (PID_Setpoint != rxMessage.status.setpoint) {
 515:main.c        ****                                             
 516:main.c        ****                                             /* Remember where we started */
 517:main.c        ****                                             LastPosition = GetPosition();
 518:main.c        ****                                             
 519:main.c        ****                                             /* Update destination */
 520:main.c        ****                                             PID_Setpoint = rxMessage.status.setpoint;
 521:main.c        ****                                             
 522:main.c        ****                                             /* Initialize the effective setpoint to be equal to whe
 523:main.c        ****                                             it will be incremented/decremented when the PID algorit
 524:main.c        ****                                             PID_EffectiveSetpoint = LastPosition;                  
 525:main.c        ****                                             
 526:main.c        ****                                             /* Reset counting of index marks */
 527:main.c        ****                                             Index_Counter_1_WriteCounter(0);
 528:main.c        ****                                         }                                        
 529:main.c        ****                                     
 530:main.c        ****                                         /* PWM jog value ranges from -50 to 50, where -50 is max-re
 531:main.c        ****                                         Jog = rxMessage.status.jog;                                
 532:main.c        ****                                         break;
 533:main.c        ****                                     
 534:main.c        ****                                     /* No other opcodes are valid */
 535:main.c        ****                                     default:
 536:main.c        ****                                         break;
 537:main.c        ****                                 }                           
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 12


 538:main.c        ****                             }                            
 539:main.c        ****                         }
 540:main.c        ****                         
 541:main.c        ****                         /* Get a fresh copy of the position information */
 542:main.c        ****                         Position = GetPosition();
 543:main.c        ****                         
 544:main.c        ****                         /* Fill out the common reponse the same way every time, as a status respons
 545:main.c        ****                         txMessage.msg.checksum = 0;
 546:main.c        ****                         txMessage.msg.version0 = FIRMWARE_REV_0;
 547:main.c        ****                         txMessage.msg.version1 = FIRMWARE_REV_1;
 548:main.c        ****                         txMessage.msg.version2 = FIRMWARE_REV_2;
 549:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 550:main.c        ****                         txMessage.msg.opcode   = opStatus;
 551:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 552:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 553:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 554:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 555:main.c        ****                         txMessage.msg.position = Position;
 556:main.c        ****                         txMessage.msg.pwm      = PWM;
 557:main.c        ****                         txMessage.msg.current  = Current;                            
 558:main.c        ****                         
 559:main.c        ****                         /* Set the checksum in the response */
 560:main.c        ****                         for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 561:main.c        ****                             checksum += txMessage.buf[i]; 
 562:main.c        ****                             
 563:main.c        ****                         /* Take the 2's complement of the sum and put it back in the message */
 564:main.c        ****                         txMessage.msg.checksum = ~checksum + 1;
 565:main.c        ****                             
 566:main.c        ****                         /* Copy the readied buffer out to the FIFO */
 567:main.c        ****                         //TODO: should we clear this here, or at the end of the transmit complete i
 568:main.c        ****                         SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 569:main.c        **** 
 570:main.c        ****                         /* Indicate it's loaded for use */
 571:main.c        ****                         txMessageState = txmsLoaded;
 572:main.c        ****                         
 573:main.c        ****                         /* Clear all the faults if told to */
 574:main.c        ****                         if ((bool) rxMessage.status.clearfaults)
 575:main.c        ****                             ClearFault(fsNONE);
 576:main.c        ****                     
 577:main.c        ****                         /* Release the lock */
 578:main.c        ****                         xSemaphoreGive( Lock );
 579:main.c        ****                     }            
 580:main.c        ****                 
 581:main.c        ****                     break;
 582:main.c        ****             
 583:main.c        ****                 /* A message was already readied for transmission, nothing to do here */
 584:main.c        ****                 case txmsLoaded:
 585:main.c        ****                     
 586:main.c        ****                     break;
 587:main.c        ****             }
 588:main.c        ****             
 589:main.c        ****         }
 590:main.c        ****         
 591:main.c        ****         //PROBE_Write(0);
 592:main.c        ****         
 593:main.c        ****         /* Quick sleep, a whole messaging sequence will take maybe 1.5ms */
 594:main.c        ****         Sleep(1);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 13


 595:main.c        ****         
 596:main.c        ****         /* Get our task stack usage high water mark */    
 597:main.c        ****         uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );
 598:main.c        ****     }
 599:main.c        **** }
 600:main.c        ****     
 601:main.c        **** 
 602:main.c        **** 
 603:main.c        **** 
 604:main.c        **** /*******************************************************************************
 605:main.c        **** * Function Name: PWM_Set
 606:main.c        **** ********************************************************************************
 607:main.c        **** * Summary:
 608:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 609:main.c        **** *
 610:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 611:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 612:main.c        **** * Return: None
 613:main.c        **** *******************************************************************************/
 614:main.c        **** void PWM_Set(float dutycycle) {
 615:main.c        ****     
 616:main.c        ****     float drive = dutycycle;
 617:main.c        ****     
 618:main.c        ****     /* Clip to the max PWM drive +/- around 50 */
 619:main.c        ****     if (drive > pwmMax) {
 620:main.c        ****         drive = pwmMax;
 621:main.c        ****     } else if (drive < pwmMin) {
 622:main.c        ****         drive = pwmMin;
 623:main.c        ****     }
 624:main.c        ****     
 625:main.c        ****     PWM_1_WriteCompare(PWM_PCT_TO_COMPARE(drive));    
 626:main.c        **** }
 627:main.c        **** 
 628:main.c        **** /*******************************************************************************
 629:main.c        **** * Function Name: GetPosition
 630:main.c        **** ********************************************************************************
 631:main.c        **** * Summary:
 632:main.c        **** *  Get the physical position value and compensate for negative locations.
 633:main.c        **** *
 634:main.c        **** * Parameters: None
 635:main.c        **** * Return: int32 (signed!) position value
 636:main.c        **** *******************************************************************************/
 637:main.c        **** int32 GetPosition(void) {
 638:main.c        ****     
 639:main.c        ****     static volatile uint32 RawPosition;
 640:main.c        ****     static volatile int32 result;
 641:main.c        ****     
 642:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 643:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 644:main.c        ****     
 645:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 646:main.c        ****        underflow and make that into a negative value */
 647:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 648:main.c        ****         
 649:main.c        ****         result = (-1) * ((int32) ENCODER_MAX - (int32) RawPosition);
 650:main.c        ****         
 651:main.c        ****     } else {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 14


 652:main.c        ****      
 653:main.c        ****         /* Value is "positive", treat it normally */
 654:main.c        ****         result = (int32) RawPosition;
 655:main.c        ****     }
 656:main.c        ****     
 657:main.c        ****     /* Update the master copy of position information */
 658:main.c        ****     Position = result;
 659:main.c        ****     return result;
 660:main.c        **** }
 661:main.c        **** 
 662:main.c        **** 
 663:main.c        **** 
 664:main.c        **** /*******************************************************************************
 665:main.c        **** * Function Name: PID_Initialize
 666:main.c        **** ********************************************************************************
 667:main.c        **** * Summary:
 668:main.c        **** *  Setup and reset the PID terms.
 669:main.c        **** *
 670:main.c        **** * Parameters: None
 671:main.c        **** * Return: None
 672:main.c        **** *******************************************************************************/
 673:main.c        **** void PID_Initialize(void) {
 674:main.c        ****     
 675:main.c        ****     /* Get up-to-date position */
 676:main.c        ****     Position = GetPosition();
 677:main.c        ****     LastPosition = Position;
 678:main.c        ****     
 679:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 680:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 681:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 682:main.c        ****     
 683:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 684:main.c        ****        switching from manual to auto frequently */
 685:main.c        ****     ITerm = 0;
 686:main.c        **** }    
 687:main.c        **** 
 688:main.c        **** 
 689:main.c        **** /*******************************************************************************
 690:main.c        **** * Function Name: PID_SetTunings
 691:main.c        **** ********************************************************************************
 692:main.c        **** * Summary:
 693:main.c        **** *  Setup the p, i, and d gain values and scale to the sample time.
 694:main.c        **** *
 695:main.c        **** * Parameters: Sample time in ms, and Kp, Ki, Kd gains.
 696:main.c        **** * Return: None
 697:main.c        **** *******************************************************************************/
 698:main.c        **** void PID_SetTunings(uint32 newSampleTime, float newKp, float newKi, float newKd) {
 699:main.c        ****     
 700:main.c        ****     if (newSampleTime > 0) {
 701:main.c        ****     
 702:main.c        ****         float sampleTimeInSec = ((float) newSampleTime) / 1000;
 703:main.c        ****     
 704:main.c        ****         kp = newKp;
 705:main.c        ****         ki = newKi * sampleTimeInSec;
 706:main.c        ****         kd = newKd / sampleTimeInSec;        
 707:main.c        ****     }
 708:main.c        **** }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 15


 709:main.c        **** 
 710:main.c        **** 
 711:main.c        **** /*******************************************************************************
 712:main.c        **** * Function Name: PID_Compute
 713:main.c        **** ********************************************************************************
 714:main.c        **** * Summary:
 715:main.c        **** *  Execute a pass through the PID process to create a duty cycle output.
 716:main.c        **** *
 717:main.c        **** * Parameters: Current time and current destination.
 718:main.c        **** * Return: PWM output, in percentage.
 719:main.c        **** *******************************************************************************/
 720:main.c        **** float PID_Compute(uint32 now, uint32 setpoint) {
 721:main.c        ****     
 722:main.c        ****     int32 error, dPosition;
 723:main.c        ****     uint32 timeChange;
 724:main.c        ****         
 725:main.c        ****     if(!inAuto) 
 726:main.c        ****         return 0;
 727:main.c        ****     
 728:main.c        ****     /* Get most up-to-date current position */
 729:main.c        ****     Position = GetPosition();
 730:main.c        ****     
 731:main.c        ****     /* How much time has elapsed since the last pass? */
 732:main.c        ****     timeChange = (now - lastTime);
 733:main.c        ****     
 734:main.c        ****     /* Only do the PID calc if at LEAST 5ms has elapsed */
 735:main.c        ****     if (timeChange >= refSampleTime) {
 736:main.c        **** 
 737:main.c        ****         /* Adjust the gains to the most recent sampling time.  Do it continuously to make sure the 
 738:main.c        ****            in case the cycle runs longer than the normal 5ms. */
 739:main.c        ****         PID_SetTunings(timeChange, refKp, refKi, refKd);
 740:main.c        ****         
 741:main.c        ****         /* Compute all the working error variables */
 742:main.c        ****         error = setpoint - Position;
 743:main.c        ****         ITerm += (ki * error);
 744:main.c        ****         
 745:main.c        ****         /* Clip the I term at a max value for just that term (windup guard) */
 746:main.c        ****         if (ITerm > outMax_ITerm) {
 747:main.c        ****             ITerm = outMax_ITerm;
 748:main.c        ****         } else if (ITerm < -outMax_ITerm) {
 749:main.c        ****             ITerm = -outMax_ITerm;
 750:main.c        ****         }
 751:main.c        ****         
 752:main.c        ****         /* Calculate the error term */
 753:main.c        ****         dPosition = (Position - LastPosition);
 754:main.c        **** 
 755:main.c        ****         /* Compute PID Output */
 756:main.c        ****         Output = (kp * error) + ITerm - (kd * dPosition);
 757:main.c        ****         
 758:main.c        ****         /* Clip the output */
 759:main.c        ****         if (Output> outMax_Total) {
 760:main.c        ****             Output = outMax_Total;
 761:main.c        ****         } else if (Output < -outMax_Total) {
 762:main.c        ****             Output = -outMax_Total;
 763:main.c        ****         }
 764:main.c        **** 
 765:main.c        ****         /* Remember some variables for next time */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 16


 766:main.c        ****         LastPosition = Position;
 767:main.c        ****         lastTime = now;        
 768:main.c        ****     }
 769:main.c        ****     
 770:main.c        ****     return Output;    
 771:main.c        **** }
 772:main.c        ****  
 773:main.c        **** /*******************************************************************************
 774:main.c        **** * Function Name: PID_SetMode
 775:main.c        **** ********************************************************************************
 776:main.c        **** * Summary:
 777:main.c        **** *  Sets the PID into automatic or manual mode.
 778:main.c        **** *
 779:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 780:main.c        **** * Return: None
 781:main.c        **** *******************************************************************************/
 782:main.c        **** void PID_SetMode(uint32 Mode) {
 783:main.c        ****     
 784:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 785:main.c        ****     
 786:main.c        ****     if (newAuto && !inAuto) {  
 787:main.c        ****         /*we just went from manual to auto*/
 788:main.c        ****         PID_Initialize();
 789:main.c        ****     }
 790:main.c        ****     
 791:main.c        ****     inAuto = newAuto;
 792:main.c        **** } 
 793:main.c        ****     
 794:main.c        **** /*******************************************************************************
 795:main.c        **** * Function Name: PID_SetDrive
 796:main.c        **** ********************************************************************************
 797:main.c        **** * Summary:
 798:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 799:main.c        **** *
 800:main.c        **** * Parameters: Percentage output to drive the PWM.
 801:main.c        **** * Return: None
 802:main.c        **** *******************************************************************************/
 803:main.c        **** void PID_SetDrive(float percent) {
 804:main.c        **** 
 805:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 806:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 807:main.c        ****     float dutycycle = (percent + 100) / 2;    
 808:main.c        ****     
 809:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 810:main.c        ****     PWM_Set(dutycycle);  
 811:main.c        **** }
 812:main.c        **** 
 813:main.c        **** 
 814:main.c        **** 
 815:main.c        **** 
 816:main.c        **** /*******************************************************************************
 817:main.c        **** * Function Name: PID_Task
 818:main.c        **** ********************************************************************************
 819:main.c        **** * Summary:
 820:main.c        **** *  RTOS task to perform the PID calculations.
 821:main.c        **** *
 822:main.c        **** * Parameters: None
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 17


 823:main.c        **** * Return: None
 824:main.c        **** *******************************************************************************/
 825:main.c        **** void PID_Task(void *arg) {
 826:main.c        ****     
 827:main.c        ****     /* Sleep this thread 5ms at a time */
 828:main.c        ****     uint32 sleeptime = 5;    
 829:main.c        ****     uint32 now;
 830:main.c        ****     float percent; 
 831:main.c        ****     int32 CurrentPosition, DeltaPosition;
 832:main.c        ****     uint32 CurrentIndexCount;
 833:main.c        ****     
 834:main.c        ****     /* Initial high water mark reading */
 835:main.c        ****     uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );
 836:main.c        ****     
 837:main.c        ****     /* Initial values */
 838:main.c        **** 
 839:main.c        ****     /* These are the 'reference' values passed down from the server, not to be used in-the-raw beca
 840:main.c        ****        values are time interval adjusted */
 841:main.c        ****     refKp = 0;
 842:main.c        ****     refKi = 0;
 843:main.c        ****     refKd = 0;
 844:main.c        ****     
 845:main.c        ****     /* Setup the PID subsystem */
 846:main.c        ****     PID_Initialize();
 847:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);    
 848:main.c        ****     PID_SetMode(PID_MANUAL);
 849:main.c        ****     
 850:main.c        ****     /* Initially default to 100% output max until config tells us otherwise */
 851:main.c        ****     outMax_Total = 100;
 852:main.c        ****     outMax_ITerm = 100;
 853:main.c        **** 
 854:main.c        ****     /* Init the PWM limits the same way, full maximums */
 855:main.c        ****     pwmLimit = 50;   // This is a + or - value
 856:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 857:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 858:main.c        ****     
 859:main.c        ****     /* Start counting time at 0ms */
 860:main.c        ****     now = 0;
 861:main.c        ****     
 862:main.c        ****     /* Start off disabled */
 863:main.c        ****     PID_Setpoint = 0;  
 864:main.c        ****     PID_EffectiveSetpoint = 0;
 865:main.c        ****     PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 866:main.c        ****     PID_Was_Enabled = false;
 867:main.c        ****     PID_Enabled = false;
 868:main.c        ****     
 869:main.c        ****     while (1) {
 870:main.c        ****         
 871:main.c        ****         PROBE_Write(1);
 872:main.c        ****               
 873:main.c        ****         /* ------------------------------------------------------------------------------------ */
 874:main.c        ****         /* At the top of the PID loop, refresh the counter of the watchdog to indicate the RTOS 
 875:main.c        ****            thread is still alive.  Were the RTOS to crash or the motion thread to die, the CPU 
 876:main.c        ****            will be reset after 2 seconds. */
 877:main.c        ****         WDT_COUNT1_REFRESH();        
 878:main.c        ****         /* ------------------------------------------------------------------------------------ */
 879:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 18


 880:main.c        ****         
 881:main.c        ****         /* If the server hasn't talked to us in a while (no messages on the SPI), 
 882:main.c        ****            take preventative action and abandon any moves in progress.  When the uint32
 883:main.c        ****            overflows, "now" will be (temporarily) less than the last timestamped message,
 884:main.c        ****            so handle that too */
 885:main.c        ****         now = xTaskGetTickCount();
 886:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 887:main.c        ****              (now < LastMessageTimeTick) ) {
 888:main.c        ****             
 889:main.c        ****             /* Stop all motion */
 890:main.c        ****             PWM_Set(PWM_JOG_NEUTRAL);
 891:main.c        ****             PID_Enabled = false;
 892:main.c        ****             
 893:main.c        ****             /* Clear the values that would drive motion on the next message arrival.  Assume the ne
 894:main.c        ****                in which case we want to be neutral. */
 895:main.c        ****             Jog = 0;
 896:main.c        **** 
 897:main.c        ****         /* Only run the PID algorithm if we have been configured by the nodebox software */
 898:main.c        ****         } else if (ConfigState == csReady) {
 899:main.c        ****             
 900:main.c        ****             /* Enable the drive outputs for the home and index once configured, otherwise they
 901:main.c        ****                can screw up the boot pins on the BeagleBoneBlack */
 902:main.c        ****             HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 903:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 904:main.c        ****         
 905:main.c        ****             /* If the server is asking us to jog, do that instead of PID */
 906:main.c        ****             if (!PID_Enabled) {                   
 907:main.c        ****                 
 908:main.c        ****                 /* When we start homing, it looks like a big negative jog.  Setup to watch the inde
 909:main.c        ****                    so we can assert faults if they aren't changing. */                
 910:main.c        ****                 if ((Jog != LastJog) && (Jog != 0)) {
 911:main.c        ****                     
 912:main.c        ****                     /* Update the 'last' jog value, so we don't fall into this reset code over and 
 913:main.c        ****                     LastJog = Jog;
 914:main.c        ****                     
 915:main.c        ****                     /* Remember where we started */
 916:main.c        ****                     LastPosition = GetPosition();
 917:main.c        ****                     
 918:main.c        ****                     /* Reset counting of index marks */
 919:main.c        ****                     Index_Counter_1_WriteCounter(0);
 920:main.c        ****                 }                
 921:main.c        ****                 
 922:main.c        ****                 /* Drive in the direction and speed the server told us */
 923:main.c        ****                 PWM_Set(PWM_JOG_NEUTRAL + Jog);
 924:main.c        **** 
 925:main.c        ****                 /* Watch for stuck signals while we are moving */
 926:main.c        ****                 if ( Jog != 0 ) {
 927:main.c        ****                 
 928:main.c        ****                     /* If we have moved a good distance away from the origin point, compare index c
 929:main.c        ****                        looking for discrepancy. */
 930:main.c        ****                     CurrentPosition = GetPosition();
 931:main.c        ****                     DeltaPosition = labs( CurrentPosition - LastPosition );
 932:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 933:main.c        ****                     
 934:main.c        ****                     /* Look for index failure: the index counter should have incremented by at leas
 935:main.c        ****                        homing is complete */
 936:main.c        ****                     if (homingDone) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 19


 937:main.c        ****                         if (CurrentIndexCount == 0)
 938:main.c        ****                             if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 939:main.c        ****                                 AssertFault(fsIndex);        
 940:main.c        ****                     }
 941:main.c        ****                     
 942:main.c        ****                     /* Look for encoder failure: the encoders should register some amount of moveme
 943:main.c        ****                        but only if homing is totally done */
 944:main.c        ****                     if (homingDone) {
 945:main.c        ****                         if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 946:main.c        ****                             AssertFault(fsEncoder);
 947:main.c        ****                     }
 948:main.c        ****                 }
 949:main.c        ****                 
 950:main.c        ****             }
 951:main.c        ****             
 952:main.c        ****             /* Handle mode switching */
 953:main.c        ****             if (!PID_Was_Enabled && PID_Enabled) {
 954:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 955:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 956:main.c        ****                 PID_SetMode(PID_MANUAL);                
 957:main.c        ****             } else {
 958:main.c        ****                 // No mode change happened   
 959:main.c        ****             }
 960:main.c        ****             
 961:main.c        ****             /* Save value for next cycle */
 962:main.c        ****             PID_Was_Enabled = PID_Enabled;
 963:main.c        ****             
 964:main.c        ****             /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer
 965:main.c        ****             actual setpoint, incremented once per cycle of this algorithm.  
 966:main.c        ****         
 967:main.c        ****             Consider a move of +2000 counts from position 0 to 2000: 
 968:main.c        ****             
 969:main.c        ****             1) The setpoint will change to 2000.
 970:main.c        ****             2) The effective setpoint is initialized to the current position, plus 25 counts = 2025
 971:main.c        ****             3) Calculate the PID and return.
 972:main.c        ****             4) The next time PID_Compute is called, increment the effective setpoint by 25 counts =
 973:main.c        ****             5) Calculate the PID and return.
 974:main.c        ****             6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.       
 975:main.c        ****             */
 976:main.c        **** 
 977:main.c        ****             if (PID_Enabled) {
 978:main.c        ****                 
 979:main.c        ****                 if (PID_EffSetDelta == 0) {
 980:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;
 981:main.c        ****                 } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 982:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;                                          
 983:main.c        ****                 } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 984:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 985:main.c        ****                 } else {
 986:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 987:main.c        ****                 }
 988:main.c        ****                 
 989:main.c        ****                 /* Run the PID algorithm against the effective setpoint */
 990:main.c        ****                 percent = PID_Compute(now, PID_EffectiveSetpoint);
 991:main.c        ****             
 992:main.c        ****                 /* Use the global PWM value to communicate back the percentage of drive to the serv
 993:main.c        ****                 PWM = percent;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 20


 994:main.c        ****                 
 995:main.c        ****                 /* Put the PID drive percentage out on the wire */
 996:main.c        ****                 PID_SetDrive(percent);
 997:main.c        ****                 
 998:main.c        ****             } else {
 999:main.c        ****                 /* If disabled, just return 0 */
1000:main.c        ****                 PWM = 0;
1001:main.c        ****             }
1002:main.c        ****             
1003:main.c        ****         }
1004:main.c        ****         
1005:main.c        ****         PROBE_Write(0);
1006:main.c        ****         
1007:main.c        ****         /* Run the loop every 5ms, which is 200Hz update rate */
1008:main.c        ****         Sleep(sleeptime);
1009:main.c        **** 
1010:main.c        ****         /* Get our task stack usage high water mark */    
1011:main.c        ****         uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );        
1012:main.c        ****     }
1013:main.c        ****    
1014:main.c        **** }
1015:main.c        **** 
1016:main.c        **** 
1017:main.c        **** 
1018:main.c        **** /*******************************************************************************
1019:main.c        **** * Function Name: main
1020:main.c        **** ********************************************************************************
1021:main.c        **** * Summary:
1022:main.c        **** *  Setup tasks, interrupts, and get the RTOS running.
1023:main.c        **** *
1024:main.c        **** * Parameters: None
1025:main.c        **** * Return: NEVER!
1026:main.c        **** *******************************************************************************/
1027:main.c        **** int main(void) {
1028:main.c        ****     
1029:main.c        ****     uint8 s;
1030:main.c        ****     setupFreeRTOS();
1031:main.c        **** 
1032:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
1033:main.c        ****        microprocessor   There is a race condition here: unless the actuator is on a home
1034:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
1035:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
1036:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
1037:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
1038:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
1039:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
1040:main.c        **** 
1041:main.c        ****     /* Create tasks.  Priority value is set such that higher numbers have higher priority.
1042:main.c        ****     https://www.freertos.org/RTOS-task-priority.html
1043:main.c        ****     */
1044:main.c        ****     
1045:main.c        ****     xTaskCreate(
1046:main.c        ****         PID_Task,       /* Task function */
1047:main.c        ****         "PID",          /* Task name (string) */
1048:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 24 bytes) */
1049:main.c        ****         0,              /* No param passed to task function */
1050:main.c        ****         3,              /* High priority */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 21


1051:main.c        ****         0 );            /* Not using the task handle */    
1052:main.c        ****     
1053:main.c        ****     xTaskCreate(
1054:main.c        ****         Comm_Task,       /* Task function */
1055:main.c        ****         "Communications", /* Task name (string) */
1056:main.c        ****         100,            /* Task stack, allocated from heap (measured 12/27 to be 78 bytes)  */
1057:main.c        ****         0,              /* No param passed to task function */
1058:main.c        ****         2,              /* Medium priority */
1059:main.c        ****         0 );            /* Not using the task handle */    
1060:main.c        **** 
1061:main.c        ****     xTaskCreate(
1062:main.c        ****         Current_Read_Task, /* Task function */
1063:main.c        ****         "Read Current", /* Task name (string) */
1064:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 40 bytes) */
1065:main.c        ****         0,              /* No param passed to task function */
1066:main.c        ****         1,              /* Low priority */
1067:main.c        ****         0 );            /* Not using the task handle */    
1068:main.c        ****     
1069:main.c        ****     /********************************************************************** 
1070:main.c        ****     * Message buffer mutex
1071:main.c        ****     **********************************************************************/
1072:main.c        ****     Lock = xSemaphoreCreateMutex();
1073:main.c        **** 
1074:main.c        ****     /* If we can't create the lock, flash the light and hold here */
1075:main.c        ****     if( Lock == NULL ) {
1076:main.c        ****         s = 1;
1077:main.c        ****         
1078:main.c        ****         while(1) {
1079:main.c        ****             s = !s;
1080:main.c        ****             LED_Write(s); 
1081:main.c        ****             CyDelay(1000u);                    
1082:main.c        ****         }
1083:main.c        ****     }
1084:main.c        ****     
1085:main.c        ****     
1086:main.c        ****     /********************************************************************** 
1087:main.c        ****     * Interrupts
1088:main.c        ****     **********************************************************************/
1089:main.c        ****     
1090:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
1091:main.c        ****     isr_home_StartEx(HomeIsrHandler);
1092:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
1093:main.c        ****     
1094:main.c        ****     /* Setup the SPI slave select interrupt ISR */
1095:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
1096:main.c        ****     
1097:main.c        ****     /* Changes initial priority for the interrupts */
1098:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
1099:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
1100:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
1101:main.c        **** 
1102:main.c        ****     /* Enable the global interrupt */
1103:main.c        ****     CyGlobalIntEnable;
1104:main.c        ****     
1105:main.c        ****     
1106:main.c        ****     
1107:main.c        ****     /********************************************************************** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 22


1108:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
1109:main.c        ****     **********************************************************************/
1110:main.c        **** 
1111:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
1112:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
1113:main.c        ****        when you hit a breakpoint. */
1114:main.c        **** 
1115:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
1116:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
1117:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
1118:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
1119:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
1120:main.c        **** 	
1121:main.c        **** 	/* Enable WDT counter 1 */
1122:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
1123:main.c        **** 	
1124:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
1125:main.c        **** 	CySysWdtLock();
1126:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
1127:main.c        **** 	CySysWdtUnlock();        
1128:main.c        **** #endif    
1129:main.c        **** 
1130:main.c        ****     
1131:main.c        ****     /*********************************************************************** 
1132:main.c        ****     * Start the various subsystems.
1133:main.c        ****     ***********************************************************************/
1134:main.c        ****     I2C_Start();
1135:main.c        ****     CyDelay(100u);
1136:main.c        ****     SPI_1_Start();
1137:main.c        ****     
1138:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
1139:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
1140:main.c        ****     PWM_1_Start();
1141:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
1142:main.c        ****     PWM_Set(PWM_IDLE);   
1143:main.c        ****     
1144:main.c        ****     /* Default the jog value to neutral (no movement) */
1145:main.c        ****     Jog = 0;
1146:main.c        ****     
1147:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
1148:main.c        ****     homingDone = false;
1149:main.c        ****    
1150:main.c        ****     /* Start counting the quadrature encoding */
1151:main.c        ****     Counter_1_Start();    
1152:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
1153:main.c        ****     LastPosition = ENCODER_MAX;
1154:main.c        ****     
1155:main.c        ****     /* Clear and start the index mark counter */
1156:main.c        ****     Index_Counter_1_Start();
1157:main.c        ****     Index_Counter_1_WriteCounter(0);
1158:main.c        ****      
1159:main.c        ****     /* Set some initial values */
1160:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
1161:main.c        ****     
1162:main.c        ****     /* Start off unconfigured */
1163:main.c        ****     ConfigState = csUnconfig;  
1164:main.c        ****     ConfigSequence = 0;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 23


1165:main.c        ****     ChecksumErrors = 0;
1166:main.c        ****    
1167:main.c        ****     /***********************************************************************
1168:main.c        ****     * Start the RTOS task scheduler
1169:main.c        ****     ***********************************************************************/
1170:main.c        ****     vTaskStartScheduler();
1171:main.c        ****    
1172:main.c        ****     /***********************************************************************
1173:main.c        ****     *  We should never reach this
1174:main.c        ****     ***********************************************************************/
1175:main.c        ****     return 1;       
1176:main.c        **** }
1177:main.c        **** 
1178:main.c        **** /*******************************************************************************
1179:main.c        **** * Function Name: RSTIsrHandler
1180:main.c        **** ********************************************************************************
1181:main.c        **** * Summary:
1182:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1183:main.c        **** *  Clears a pending Interrupt.
1184:main.c        **** *  Clears a pin Interrupt.
1185:main.c        **** *
1186:main.c        **** * Parameters: None
1187:main.c        **** * Return: None
1188:main.c        **** *******************************************************************************/
1189:main.c        **** CY_ISR(RSTIsrHandler) {
  91              		.loc 1 1189 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 10B5     		push	{r4, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
1190:main.c        ****     
1191:main.c        ****     /* Clear pending Interrupt */
1192:main.c        ****     isr_rst_encoder_ClearPending(); 
  99              		.loc 1 1192 0
 100 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
 101              	.LVL9:
1193:main.c        ****     
1194:main.c        ****     /* Clear pin Interrupt */
1195:main.c        ****     Reset_Encoder_ClearInterrupt();
 102              		.loc 1 1195 0
 103 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
 104              	.LVL10:
1196:main.c        ****     
1197:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1198:main.c        ****     Counter_1_WriteCounter(0);
 105              		.loc 1 1198 0
 106 000a 0020     		movs	r0, #0
 107 000c FFF7FEFF 		bl	Counter_1_WriteCounter
 108              	.LVL11:
1199:main.c        ****     
1200:main.c        ****     /* Clear the index counter */
1201:main.c        ****     Index_Counter_1_WriteCounter(0);  
 109              		.loc 1 1201 0
 110 0010 0020     		movs	r0, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 24


 111 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 112              	.LVL12:
1202:main.c        ****     
1203:main.c        ****     /* When we hit the index mark, homing is complete */
1204:main.c        ****     homingDone = true;    
 113              		.loc 1 1204 0
 114 0016 0122     		movs	r2, #1
 115 0018 014B     		ldr	r3, .L6
 116 001a 1A70     		strb	r2, [r3]
1205:main.c        **** }
 117              		.loc 1 1205 0
 118              		@ sp needed
 119 001c 10BD     		pop	{r4, pc}
 120              	.L7:
 121 001e C046     		.align	2
 122              	.L6:
 123 0020 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE46:
 126              		.size	RSTIsrHandler, .-RSTIsrHandler
 127              		.section	.text.HomeIsrHandler,"ax",%progbits
 128              		.align	2
 129              		.global	HomeIsrHandler
 130              		.code	16
 131              		.thumb_func
 132              		.type	HomeIsrHandler, %function
 133              	HomeIsrHandler:
 134              	.LFB47:
1206:main.c        **** 
1207:main.c        **** /*******************************************************************************
1208:main.c        **** * Function Name: HomeIsrHandler
1209:main.c        **** ********************************************************************************
1210:main.c        **** * Summary:
1211:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1212:main.c        **** *  Clears a pending Interrupt.
1213:main.c        **** *  Clears a pin Interrupt.
1214:main.c        **** *
1215:main.c        **** * Parameters: None
1216:main.c        **** * Return: None
1217:main.c        **** *******************************************************************************/
1218:main.c        **** CY_ISR(HomeIsrHandler) {
 135              		.loc 1 1218 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
1219:main.c        ****     
1220:main.c        ****     /* Clear pending Interrupt */
1221:main.c        ****     isr_home_ClearPending(); 
 143              		.loc 1 1221 0
 144 0002 FFF7FEFF 		bl	isr_home_ClearPending
 145              	.LVL13:
1222:main.c        ****     
1223:main.c        ****     /* Clear pin Interrupt */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 25


1224:main.c        ****     HOME_IN_ClearInterrupt();
 146              		.loc 1 1224 0
 147 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
 148              	.LVL14:
1225:main.c        **** 
1226:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1227:main.c        ****     Counter_1_WriteCounter(0);
 149              		.loc 1 1227 0
 150 000a 0020     		movs	r0, #0
 151 000c FFF7FEFF 		bl	Counter_1_WriteCounter
 152              	.LVL15:
1228:main.c        ****     
1229:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1230:main.c        ****     homingDone = false;
 153              		.loc 1 1230 0
 154 0010 0022     		movs	r2, #0
 155 0012 014B     		ldr	r3, .L9
 156 0014 1A70     		strb	r2, [r3]
1231:main.c        **** }
 157              		.loc 1 1231 0
 158              		@ sp needed
 159 0016 10BD     		pop	{r4, pc}
 160              	.L10:
 161              		.align	2
 162              	.L9:
 163 0018 00000000 		.word	.LANCHOR0
 164              		.cfi_endproc
 165              	.LFE47:
 166              		.size	HomeIsrHandler, .-HomeIsrHandler
 167              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 168              		.align	2
 169              		.global	SPI_SS_IsrHandler
 170              		.code	16
 171              		.thumb_func
 172              		.type	SPI_SS_IsrHandler, %function
 173              	SPI_SS_IsrHandler:
 174              	.LFB48:
1232:main.c        **** 
1233:main.c        **** 
1234:main.c        **** /*******************************************************************************
1235:main.c        **** * Function Name: SPI_SS_IsrHandler
1236:main.c        **** ********************************************************************************
1237:main.c        **** * Summary:
1238:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1239:main.c        **** *  Clears a pin Interrupt.
1240:main.c        **** *
1241:main.c        **** * Parameters: None
1242:main.c        **** * Return: None
1243:main.c        **** *******************************************************************************/
1244:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 175              		.loc 1 1244 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 10B5     		push	{r4, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 26


 182              		.cfi_offset 14, -4
1245:main.c        ****     
1246:main.c        ****     uint32 i;
1247:main.c        ****     
1248:main.c        ****     /* Clear SPI slave select pin Interrupt */
1249:main.c        ****     spi_ss_ClearInterrupt();
 183              		.loc 1 1249 0
 184 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 185              	.LVL16:
1250:main.c        ****     
1251:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1252:main.c        ****     if (!spi_ss_Read()) 
 186              		.loc 1 1252 0
 187 0006 FFF7FEFF 		bl	spi_ss_Read
 188              	.LVL17:
 189 000a 0028     		cmp	r0, #0
 190 000c 1CD0     		beq	.L11
1253:main.c        ****         return;
1254:main.c        ****    
1255:main.c        ****     /* Update the last message tick timer */
1256:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
 191              		.loc 1 1256 0
 192 000e FFF7FEFF 		bl	xTaskGetTickCount
 193              	.LVL18:
 194 0012 0E4B     		ldr	r3, .L16
 195 0014 1860     		str	r0, [r3]
1257:main.c        **** 
1258:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1259:main.c        ****        check the messaging state before resetting the buffers */
1260:main.c        ****     switch (txMessageState) {
 196              		.loc 1 1260 0
 197 0016 0E4B     		ldr	r3, .L16+4
 198 0018 1B78     		ldrb	r3, [r3]
 199 001a 012B     		cmp	r3, #1
 200 001c 14D1     		bne	.L11
1261:main.c        ****      
1262:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1263:main.c        ****         case txmsClear:
1264:main.c        ****             break;
1265:main.c        ****      
1266:main.c        ****         /* A message was readied for transmission */
1267:main.c        ****         case txmsLoaded:
1268:main.c        ****          
1269:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1270:main.c        ****             
1271:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1272:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 201              		.loc 1 1272 0
 202 001e 1E22     		movs	r2, #30
 203 0020 0021     		movs	r1, #0
 204 0022 0C48     		ldr	r0, .L16+8
 205 0024 FFF7FEFF 		bl	memset
 206              	.LVL19:
1273:main.c        **** 
1274:main.c        ****             /* Message from the master is completely clocked in by now */     
1275:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 207              		.loc 1 1275 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 27


 208 0028 0024     		movs	r4, #0
 209 002a 04E0     		b	.L14
 210              	.LVL20:
 211              	.L15:
1276:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 212              		.loc 1 1276 0 discriminator 3
 213 002c FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 214              	.LVL21:
 215 0030 094B     		ldr	r3, .L16+12
 216 0032 1855     		strb	r0, [r3, r4]
1275:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 217              		.loc 1 1275 0 discriminator 3
 218 0034 0134     		adds	r4, r4, #1
 219              	.LVL22:
 220              	.L14:
1275:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 221              		.loc 1 1275 0 is_stmt 0 discriminator 1
 222 0036 1D2C     		cmp	r4, #29
 223 0038 F8D9     		bls	.L15
1277:main.c        ****             }
1278:main.c        ****             
1279:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1280:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 224              		.loc 1 1280 0 is_stmt 1
 225 003a FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 226              	.LVL23:
1281:main.c        ****             
1282:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1283:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 227              		.loc 1 1283 0
 228 003e FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 229              	.LVL24:
1284:main.c        ****             
1285:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1286:main.c        ****             txMessageState = txmsClear;        
 230              		.loc 1 1286 0
 231 0042 0022     		movs	r2, #0
 232 0044 024B     		ldr	r3, .L16+4
 233 0046 1A70     		strb	r2, [r3]
 234              	.LVL25:
 235              	.L11:
1287:main.c        ****             break;
1288:main.c        ****             
1289:main.c        ****     } 
1290:main.c        **** }
 236              		.loc 1 1290 0
 237              		@ sp needed
 238 0048 10BD     		pop	{r4, pc}
 239              	.L17:
 240 004a C046     		.align	2
 241              	.L16:
 242 004c 00000000 		.word	LastMessageTimeTick
 243 0050 00000000 		.word	txMessageState
 244 0054 00000000 		.word	txMessage
 245 0058 00000000 		.word	rxMessage
 246              		.cfi_endproc
 247              	.LFE48:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 28


 248              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 249              		.section	.text.setupFreeRTOS,"ax",%progbits
 250              		.align	2
 251              		.global	setupFreeRTOS
 252              		.code	16
 253              		.thumb_func
 254              		.type	setupFreeRTOS, %function
 255              	setupFreeRTOS:
 256              	.LFB32:
 294:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 257              		.loc 1 294 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 10B5     		push	{r4, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 4, -8
 264              		.cfi_offset 14, -4
 298:main.c        ****     
 265              		.loc 1 298 0
 266 0002 0649     		ldr	r1, .L19
 267 0004 0B20     		movs	r0, #11
 268 0006 FFF7FEFF 		bl	CyIntSetSysVector
 269              	.LVL26:
 301:main.c        ****     
 270              		.loc 1 301 0
 271 000a 0549     		ldr	r1, .L19+4
 272 000c 0E20     		movs	r0, #14
 273 000e FFF7FEFF 		bl	CyIntSetSysVector
 274              	.LVL27:
 304:main.c        **** }
 275              		.loc 1 304 0
 276 0012 0449     		ldr	r1, .L19+8
 277 0014 0F20     		movs	r0, #15
 278 0016 FFF7FEFF 		bl	CyIntSetSysVector
 279              	.LVL28:
 305:main.c        **** 
 280              		.loc 1 305 0
 281              		@ sp needed
 282 001a 10BD     		pop	{r4, pc}
 283              	.L20:
 284              		.align	2
 285              	.L19:
 286 001c 00000000 		.word	vPortSVCHandler
 287 0020 00000000 		.word	xPortPendSVHandler
 288 0024 00000000 		.word	xPortSysTickHandler
 289              		.cfi_endproc
 290              	.LFE32:
 291              		.size	setupFreeRTOS, .-setupFreeRTOS
 292              		.section	.text.AssertFault,"ax",%progbits
 293              		.align	2
 294              		.global	AssertFault
 295              		.code	16
 296              		.thumb_func
 297              		.type	AssertFault, %function
 298              	AssertFault:
 299              	.LFB33:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 29


 318:main.c        ****  
 300              		.loc 1 318 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305              	.LVL29:
 320:main.c        ****      
 306              		.loc 1 320 0
 307 0000 0028     		cmp	r0, #0
 308 0002 03D1     		bne	.L25
 324:main.c        ****             break;        
 309              		.loc 1 324 0
 310 0004 0022     		movs	r2, #0
 311 0006 044B     		ldr	r3, .L26
 312 0008 1A70     		strb	r2, [r3]
 325:main.c        ****         
 313              		.loc 1 325 0
 314 000a 03E0     		b	.L21
 315              	.L25:
 329:main.c        ****             break;        
 316              		.loc 1 329 0
 317 000c 024B     		ldr	r3, .L26
 318 000e 1A78     		ldrb	r2, [r3]
 319 0010 1043     		orrs	r0, r2
 320              	.LVL30:
 321 0012 1870     		strb	r0, [r3]
 322              	.L21:
 332:main.c        **** 
 323              		.loc 1 332 0
 324              		@ sp needed
 325 0014 7047     		bx	lr
 326              	.L27:
 327 0016 C046     		.align	2
 328              	.L26:
 329 0018 00000000 		.word	FaultState
 330              		.cfi_endproc
 331              	.LFE33:
 332              		.size	AssertFault, .-AssertFault
 333              		.section	.text.ClearFault,"ax",%progbits
 334              		.align	2
 335              		.global	ClearFault
 336              		.code	16
 337              		.thumb_func
 338              		.type	ClearFault, %function
 339              	ClearFault:
 340              	.LFB34:
 345:main.c        ****  
 341              		.loc 1 345 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL31:
 347:main.c        ****      
 347              		.loc 1 347 0
 348 0000 0028     		cmp	r0, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 30


 349 0002 03D1     		bne	.L32
 351:main.c        ****             break;        
 350              		.loc 1 351 0
 351 0004 0022     		movs	r2, #0
 352 0006 044B     		ldr	r3, .L33
 353 0008 1A70     		strb	r2, [r3]
 352:main.c        ****         
 354              		.loc 1 352 0
 355 000a 03E0     		b	.L28
 356              	.L32:
 356:main.c        ****             break;        
 357              		.loc 1 356 0
 358 000c 024A     		ldr	r2, .L33
 359 000e 1378     		ldrb	r3, [r2]
 360 0010 8343     		bics	r3, r0
 361 0012 1370     		strb	r3, [r2]
 362              	.L28:
 359:main.c        **** 
 363              		.loc 1 359 0
 364              		@ sp needed
 365 0014 7047     		bx	lr
 366              	.L34:
 367 0016 C046     		.align	2
 368              	.L33:
 369 0018 00000000 		.word	FaultState
 370              		.cfi_endproc
 371              	.LFE34:
 372              		.size	ClearFault, .-ClearFault
 373              		.global	__aeabi_fcmpgt
 374              		.global	__aeabi_fcmplt
 375              		.global	__aeabi_fmul
 376              		.global	__aeabi_f2uiz
 377              		.section	.text.PWM_Set,"ax",%progbits
 378              		.align	2
 379              		.global	PWM_Set
 380              		.code	16
 381              		.thumb_func
 382              		.type	PWM_Set, %function
 383              	PWM_Set:
 384              	.LFB37:
 614:main.c        ****     
 385              		.loc 1 614 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LVL32:
 390 0000 70B5     		push	{r4, r5, r6, lr}
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 4, -16
 393              		.cfi_offset 5, -12
 394              		.cfi_offset 6, -8
 395              		.cfi_offset 14, -4
 396 0002 051C     		adds	r5, r0, #0
 397              	.LVL33:
 619:main.c        ****         drive = pwmMax;
 398              		.loc 1 619 0
 399 0004 0C4B     		ldr	r3, .L37
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 31


 400 0006 1C68     		ldr	r4, [r3]
 401 0008 211C     		adds	r1, r4, #0
 402 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 403              	.LVL34:
 404 000e 0028     		cmp	r0, #0
 405 0010 08D1     		bne	.L36
 621:main.c        ****         drive = pwmMin;
 406              		.loc 1 621 0
 407 0012 0A4B     		ldr	r3, .L37+4
 408 0014 1C68     		ldr	r4, [r3]
 409 0016 211C     		adds	r1, r4, #0
 410 0018 281C     		adds	r0, r5, #0
 411 001a FFF7FEFF 		bl	__aeabi_fcmplt
 412              	.LVL35:
 413 001e 0028     		cmp	r0, #0
 414 0020 00D1     		bne	.L36
 616:main.c        ****     
 415              		.loc 1 616 0
 416 0022 2C1C     		adds	r4, r5, #0
 417              	.L36:
 418              	.LVL36:
 625:main.c        **** }
 419              		.loc 1 625 0
 420 0024 8321     		movs	r1, #131
 421 0026 C905     		lsls	r1, r1, #23
 422 0028 201C     		adds	r0, r4, #0
 423 002a FFF7FEFF 		bl	__aeabi_fmul
 424              	.LVL37:
 425 002e FFF7FEFF 		bl	__aeabi_f2uiz
 426              	.LVL38:
 427 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 428              	.LVL39:
 626:main.c        **** 
 429              		.loc 1 626 0
 430              		@ sp needed
 431              	.LVL40:
 432              	.LVL41:
 433 0036 70BD     		pop	{r4, r5, r6, pc}
 434              	.L38:
 435              		.align	2
 436              	.L37:
 437 0038 00000000 		.word	pwmMax
 438 003c 00000000 		.word	pwmMin
 439              		.cfi_endproc
 440              	.LFE37:
 441              		.size	PWM_Set, .-PWM_Set
 442              		.section	.text.GetPosition,"ax",%progbits
 443              		.align	2
 444              		.global	GetPosition
 445              		.code	16
 446              		.thumb_func
 447              		.type	GetPosition, %function
 448              	GetPosition:
 449              	.LFB38:
 637:main.c        ****     
 450              		.loc 1 637 0
 451              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 32


 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454 0000 10B5     		push	{r4, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 643:main.c        ****     
 458              		.loc 1 643 0
 459 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 460              	.LVL42:
 461 0006 0B4B     		ldr	r3, .L42
 462 0008 1860     		str	r0, [r3]
 647:main.c        ****         
 463              		.loc 1 647 0
 464 000a 1A68     		ldr	r2, [r3]
 465 000c 0A4B     		ldr	r3, .L42+4
 466 000e 9A42     		cmp	r2, r3
 467 0010 06D9     		bls	.L40
 649:main.c        ****         
 468              		.loc 1 649 0
 469 0012 084A     		ldr	r2, .L42
 470 0014 1368     		ldr	r3, [r2]
 471 0016 0949     		ldr	r1, .L42+8
 472 0018 8C46     		mov	ip, r1
 473 001a 6344     		add	r3, r3, ip
 474 001c 5360     		str	r3, [r2, #4]
 475 001e 02E0     		b	.L41
 476              	.L40:
 654:main.c        ****     }
 477              		.loc 1 654 0
 478 0020 044B     		ldr	r3, .L42
 479 0022 1A68     		ldr	r2, [r3]
 480 0024 5A60     		str	r2, [r3, #4]
 481              	.L41:
 658:main.c        ****     return result;
 482              		.loc 1 658 0
 483 0026 034B     		ldr	r3, .L42
 484 0028 5968     		ldr	r1, [r3, #4]
 485 002a 054A     		ldr	r2, .L42+12
 486 002c 1160     		str	r1, [r2]
 659:main.c        **** }
 487              		.loc 1 659 0
 488 002e 5868     		ldr	r0, [r3, #4]
 660:main.c        **** 
 489              		.loc 1 660 0
 490              		@ sp needed
 491 0030 10BD     		pop	{r4, pc}
 492              	.L43:
 493 0032 C046     		.align	2
 494              	.L42:
 495 0034 00000000 		.word	.LANCHOR1
 496 0038 FFFFEF00 		.word	15728639
 497 003c 010000FF 		.word	-16777215
 498 0040 00000000 		.word	Position
 499              		.cfi_endproc
 500              	.LFE38:
 501              		.size	GetPosition, .-GetPosition
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 33


 502              		.global	__aeabi_ui2f
 503              		.global	__aeabi_fdiv
 504              		.global	__aeabi_fadd
 505              		.global	__aeabi_fsub
 506              		.section	.text.Comm_Task,"ax",%progbits
 507              		.align	2
 508              		.global	Comm_Task
 509              		.code	16
 510              		.thumb_func
 511              		.type	Comm_Task, %function
 512              	Comm_Task:
 513              	.LFB36:
 406:main.c        ****  
 514              		.loc 1 406 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL43:
 519 0000 10B5     		push	{r4, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
 522              		.cfi_offset 14, -4
 415:main.c        ****     
 523              		.loc 1 415 0
 524 0002 0020     		movs	r0, #0
 525              	.LVL44:
 526 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 527              	.LVL45:
 528 0008 954B     		ldr	r3, .L64
 529 000a 1860     		str	r0, [r3]
 530              	.L60:
 421:main.c        ****         
 531              		.loc 1 421 0
 532 000c 954B     		ldr	r3, .L64+4
 533 000e 1B68     		ldr	r3, [r3]
 534 0010 DB07     		lsls	r3, r3, #31
 535 0012 00D5     		bpl	.LCB423
 536 0014 1BE1     		b	.L45	@long jump
 537              	.LCB423:
 424:main.c        ****              
 538              		.loc 1 424 0
 539 0016 944B     		ldr	r3, .L64+8
 540 0018 1B78     		ldrb	r3, [r3]
 541 001a 002B     		cmp	r3, #0
 542 001c 00D0     		beq	.LCB428
 543 001e 16E1     		b	.L45	@long jump
 544              	.LCB428:
 434:main.c        ****                         
 545              		.loc 1 434 0
 546 0020 924B     		ldr	r3, .L64+12
 547 0022 1868     		ldr	r0, [r3]
 548 0024 0421     		movs	r1, #4
 549 0026 FFF7FEFF 		bl	xQueueSemaphoreTake
 550              	.LVL46:
 551 002a 0128     		cmp	r0, #1
 552 002c 00D0     		beq	.LCB435
 553 002e 0EE1     		b	.L45	@long jump
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 34


 554              	.LCB435:
 437:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 555              		.loc 1 437 0
 556 0030 8F4B     		ldr	r3, .L64+16
 557 0032 5878     		ldrb	r0, [r3, #1]
 558              	.LVL47:
 438:main.c        ****                         
 559              		.loc 1 438 0
 560 0034 9C78     		ldrb	r4, [r3, #2]
 561              	.LVL48:
 441:main.c        ****                             size = sizeof(txMessage.buf);                            
 562              		.loc 1 441 0
 563 0036 1E28     		cmp	r0, #30
 564 0038 00D9     		bls	.L47
 442:main.c        ****                     
 565              		.loc 1 442 0
 566 003a 1E20     		movs	r0, #30
 567              	.LVL49:
 568              	.L47:
 445:main.c        ****                             checksum += rxMessage.buf[i]; 
 569              		.loc 1 445 0
 570 003c 0022     		movs	r2, #0
 571 003e 0023     		movs	r3, #0
 572 0040 05E0     		b	.L48
 573              	.LVL50:
 574              	.L49:
 446:main.c        **** 
 575              		.loc 1 446 0 discriminator 3
 576 0042 8B49     		ldr	r1, .L64+16
 577 0044 C95C     		ldrb	r1, [r1, r3]
 578 0046 5218     		adds	r2, r2, r1
 579              	.LVL51:
 580 0048 D2B2     		uxtb	r2, r2
 581              	.LVL52:
 445:main.c        ****                             checksum += rxMessage.buf[i]; 
 582              		.loc 1 445 0 discriminator 3
 583 004a 0133     		adds	r3, r3, #1
 584              	.LVL53:
 585 004c DBB2     		uxtb	r3, r3
 586              	.LVL54:
 587              	.L48:
 445:main.c        ****                             checksum += rxMessage.buf[i]; 
 588              		.loc 1 445 0 is_stmt 0 discriminator 1
 589 004e 9842     		cmp	r0, r3
 590 0050 F7D8     		bhi	.L49
 449:main.c        ****                             
 591              		.loc 1 449 0 is_stmt 1
 592 0052 002A     		cmp	r2, #0
 593 0054 09D0     		beq	.L50
 451:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 594              		.loc 1 451 0
 595 0056 874B     		ldr	r3, .L64+20
 596              	.LVL55:
 597 0058 5C71     		strb	r4, [r3, #5]
 452:main.c        ****                             ChecksumErrors++;
 598              		.loc 1 452 0
 599 005a 1522     		movs	r2, #21
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 35


 600              	.LVL56:
 601 005c 1A71     		strb	r2, [r3, #4]
 453:main.c        ****                             
 602              		.loc 1 453 0
 603 005e 864A     		ldr	r2, .L64+24
 604 0060 1388     		ldrh	r3, [r2]
 605 0062 0133     		adds	r3, r3, #1
 606 0064 9BB2     		uxth	r3, r3
 607 0066 1380     		strh	r3, [r2]
 608 0068 9BE0     		b	.L51
 609              	.LVL57:
 610              	.L50:
 459:main.c        ****                             
 611              		.loc 1 459 0
 612 006a 631E     		subs	r3, r4, #1
 613              	.LVL58:
 614 006c DBB2     		uxtb	r3, r3
 615 006e 022B     		cmp	r3, #2
 616 0070 00D9     		bls	.LCB501
 617 0072 96E0     		b	.L51	@long jump
 618              	.LCB501:
 461:main.c        ****                                 
 619              		.loc 1 461 0
 620 0074 012C     		cmp	r4, #1
 621 0076 02D0     		beq	.L52
 622 0078 022C     		cmp	r4, #2
 623 007a 60D0     		beq	.L53
 624 007c 91E0     		b	.L51
 625              	.L52:
 468:main.c        ****                                         refKi = rxMessage.config.Ki;
 626              		.loc 1 468 0
 627 007e 7C4B     		ldr	r3, .L64+16
 628 0080 1A79     		ldrb	r2, [r3, #4]
 629              	.LVL59:
 630 0082 5979     		ldrb	r1, [r3, #5]
 631 0084 0902     		lsls	r1, r1, #8
 632 0086 1143     		orrs	r1, r2
 633 0088 9A79     		ldrb	r2, [r3, #6]
 634 008a 1204     		lsls	r2, r2, #16
 635 008c 0A43     		orrs	r2, r1
 636 008e 1100     		movs	r1, r2
 637 0090 DA79     		ldrb	r2, [r3, #7]
 638 0092 1206     		lsls	r2, r2, #24
 639 0094 0A43     		orrs	r2, r1
 640 0096 7949     		ldr	r1, .L64+28
 641 0098 0A60     		str	r2, [r1]
 469:main.c        ****                                         refKd = rxMessage.config.Kd;      
 642              		.loc 1 469 0
 643 009a 1A7A     		ldrb	r2, [r3, #8]
 644 009c 597A     		ldrb	r1, [r3, #9]
 645 009e 0902     		lsls	r1, r1, #8
 646 00a0 1143     		orrs	r1, r2
 647 00a2 9A7A     		ldrb	r2, [r3, #10]
 648 00a4 1204     		lsls	r2, r2, #16
 649 00a6 0A43     		orrs	r2, r1
 650 00a8 1100     		movs	r1, r2
 651 00aa DA7A     		ldrb	r2, [r3, #11]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 36


 652 00ac 1206     		lsls	r2, r2, #24
 653 00ae 0A43     		orrs	r2, r1
 654 00b0 7349     		ldr	r1, .L64+32
 655 00b2 0A60     		str	r2, [r1]
 470:main.c        ****                                     
 656              		.loc 1 470 0
 657 00b4 1A7B     		ldrb	r2, [r3, #12]
 658 00b6 597B     		ldrb	r1, [r3, #13]
 659 00b8 0902     		lsls	r1, r1, #8
 660 00ba 1143     		orrs	r1, r2
 661 00bc 9A7B     		ldrb	r2, [r3, #14]
 662 00be 1204     		lsls	r2, r2, #16
 663 00c0 0A43     		orrs	r2, r1
 664 00c2 1100     		movs	r1, r2
 665 00c4 DA7B     		ldrb	r2, [r3, #15]
 666 00c6 1206     		lsls	r2, r2, #24
 667 00c8 0A43     		orrs	r2, r1
 668 00ca 6E49     		ldr	r1, .L64+36
 669 00cc 0A60     		str	r2, [r1]
 473:main.c        ****                                            
 670              		.loc 1 473 0
 671 00ce 997C     		ldrb	r1, [r3, #18]
 672 00d0 6D4A     		ldr	r2, .L64+40
 673 00d2 1170     		strb	r1, [r2]
 476:main.c        ****                                     
 674              		.loc 1 476 0
 675 00d4 0021     		movs	r1, #0
 676 00d6 6D4A     		ldr	r2, .L64+44
 677 00d8 1170     		strb	r1, [r2]
 479:main.c        ****                                         if (limit > 100)
 678              		.loc 1 479 0
 679 00da 187C     		ldrb	r0, [r3, #16]
 680              	.LVL60:
 480:main.c        ****                                             limit = 100;
 681              		.loc 1 480 0
 682 00dc 6428     		cmp	r0, #100
 683 00de 00D9     		bls	.L54
 481:main.c        ****                                     
 684              		.loc 1 481 0
 685 00e0 6420     		movs	r0, #100
 686              	.LVL61:
 687              	.L54:
 483:main.c        ****                                         
 688              		.loc 1 483 0
 689 00e2 FFF7FEFF 		bl	__aeabi_ui2f
 690              	.LVL62:
 691 00e6 041C     		adds	r4, r0, #0
 692              	.LVL63:
 693 00e8 694B     		ldr	r3, .L64+48
 694 00ea 1860     		str	r0, [r3]
 485:main.c        ****                                         if (limit > 100)
 695              		.loc 1 485 0
 696 00ec 604B     		ldr	r3, .L64+16
 697 00ee 587C     		ldrb	r0, [r3, #17]
 698              	.LVL64:
 486:main.c        ****                                             limit = 100;
 699              		.loc 1 486 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 37


 700 00f0 6428     		cmp	r0, #100
 701 00f2 00D9     		bls	.L55
 487:main.c        ****                                         
 702              		.loc 1 487 0
 703 00f4 6420     		movs	r0, #100
 704              	.LVL65:
 705              	.L55:
 489:main.c        ****                                         
 706              		.loc 1 489 0
 707 00f6 FFF7FEFF 		bl	__aeabi_ui2f
 708              	.LVL66:
 709 00fa 664B     		ldr	r3, .L64+52
 710 00fc 1860     		str	r0, [r3]
 497:main.c        ****                                         pwmMax = 50 + pwmLimit;
 711              		.loc 1 497 0
 712 00fe 6649     		ldr	r1, .L64+56
 713 0100 201C     		adds	r0, r4, #0
 714 0102 FFF7FEFF 		bl	__aeabi_fdiv
 715              	.LVL67:
 716 0106 6549     		ldr	r1, .L64+60
 717 0108 FFF7FEFF 		bl	__aeabi_fmul
 718              	.LVL68:
 719 010c 041C     		adds	r4, r0, #0
 720 010e 644B     		ldr	r3, .L64+64
 721 0110 1860     		str	r0, [r3]
 498:main.c        ****                                         pwmMin = 50 - pwmLimit;
 722              		.loc 1 498 0
 723 0112 6249     		ldr	r1, .L64+60
 724 0114 FFF7FEFF 		bl	__aeabi_fadd
 725              	.LVL69:
 726 0118 624B     		ldr	r3, .L64+68
 727 011a 1860     		str	r0, [r3]
 499:main.c        ****                                     
 728              		.loc 1 499 0
 729 011c 211C     		adds	r1, r4, #0
 730 011e 5F48     		ldr	r0, .L64+60
 731 0120 FFF7FEFF 		bl	__aeabi_fsub
 732              	.LVL70:
 733 0124 604B     		ldr	r3, .L64+72
 734 0126 1860     		str	r0, [r3]
 502:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 735              		.loc 1 502 0
 736 0128 0222     		movs	r2, #2
 737 012a 604B     		ldr	r3, .L64+76
 738 012c 1A70     		strb	r2, [r3]
 503:main.c        ****                                     
 739              		.loc 1 503 0
 740 012e 504B     		ldr	r3, .L64+16
 741 0130 DA78     		ldrb	r2, [r3, #3]
 742 0132 5F4B     		ldr	r3, .L64+80
 743 0134 1A70     		strb	r2, [r3]
 506:main.c        ****                                         break;
 744              		.loc 1 506 0
 745 0136 0020     		movs	r0, #0
 746 0138 FFF7FEFF 		bl	ClearFault
 747              	.LVL71:
 507:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 38


 748              		.loc 1 507 0
 749 013c 31E0     		b	.L51
 750              	.LVL72:
 751              	.L53:
 511:main.c        ****                                         
 752              		.loc 1 511 0
 753 013e 4C48     		ldr	r0, .L64+16
 754              	.LVL73:
 755 0140 C378     		ldrb	r3, [r0, #3]
 756 0142 5A1E     		subs	r2, r3, #1
 757 0144 9341     		sbcs	r3, r3, r2
 758              	.LVL74:
 759 0146 5B4A     		ldr	r2, .L64+84
 760 0148 1370     		strb	r3, [r2]
 514:main.c        ****                                             
 761              		.loc 1 514 0
 762 014a 0379     		ldrb	r3, [r0, #4]
 763 014c 4279     		ldrb	r2, [r0, #5]
 764 014e 1202     		lsls	r2, r2, #8
 765 0150 1A43     		orrs	r2, r3
 766 0152 8379     		ldrb	r3, [r0, #6]
 767 0154 1B04     		lsls	r3, r3, #16
 768 0156 1343     		orrs	r3, r2
 769 0158 1A00     		movs	r2, r3
 770 015a C379     		ldrb	r3, [r0, #7]
 771 015c 1B06     		lsls	r3, r3, #24
 772 015e 1343     		orrs	r3, r2
 773 0160 554A     		ldr	r2, .L64+88
 774 0162 1268     		ldr	r2, [r2]
 775 0164 9342     		cmp	r3, r2
 776 0166 17D0     		beq	.L56
 517:main.c        ****                                             
 777              		.loc 1 517 0
 778 0168 FFF7FEFF 		bl	GetPosition
 779              	.LVL75:
 780 016c 534C     		ldr	r4, .L64+92
 781              	.LVL76:
 782 016e 2060     		str	r0, [r4]
 520:main.c        ****                                             
 783              		.loc 1 520 0
 784 0170 3F48     		ldr	r0, .L64+16
 785 0172 0379     		ldrb	r3, [r0, #4]
 786 0174 4279     		ldrb	r2, [r0, #5]
 787 0176 1202     		lsls	r2, r2, #8
 788 0178 1A43     		orrs	r2, r3
 789 017a 8379     		ldrb	r3, [r0, #6]
 790 017c 1B04     		lsls	r3, r3, #16
 791 017e 1343     		orrs	r3, r2
 792 0180 1A00     		movs	r2, r3
 793 0182 C379     		ldrb	r3, [r0, #7]
 794 0184 1B06     		lsls	r3, r3, #24
 795 0186 1343     		orrs	r3, r2
 796 0188 4B4A     		ldr	r2, .L64+88
 797 018a 1360     		str	r3, [r2]
 524:main.c        ****                                             
 798              		.loc 1 524 0
 799 018c 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 39


 800 018e 4C4B     		ldr	r3, .L64+96
 801 0190 1A60     		str	r2, [r3]
 527:main.c        ****                                         }                                        
 802              		.loc 1 527 0
 803 0192 0020     		movs	r0, #0
 804 0194 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 805              	.LVL77:
 806              	.L56:
 531:main.c        ****                                         break;
 807              		.loc 1 531 0
 808 0198 354B     		ldr	r3, .L64+16
 809 019a 0822     		movs	r2, #8
 810 019c 9A56     		ldrsb	r2, [r3, r2]
 811 019e 3B4B     		ldr	r3, .L64+44
 812 01a0 1A70     		strb	r2, [r3]
 813              	.L51:
 542:main.c        ****                         
 814              		.loc 1 542 0
 815 01a2 FFF7FEFF 		bl	GetPosition
 816              	.LVL78:
 817 01a6 4749     		ldr	r1, .L64+100
 818 01a8 0860     		str	r0, [r1]
 545:main.c        ****                         txMessage.msg.version0 = FIRMWARE_REV_0;
 819              		.loc 1 545 0
 820 01aa 324B     		ldr	r3, .L64+20
 821 01ac 0022     		movs	r2, #0
 822 01ae 1A70     		strb	r2, [r3]
 546:main.c        ****                         txMessage.msg.version1 = FIRMWARE_REV_1;
 823              		.loc 1 546 0
 824 01b0 5A70     		strb	r2, [r3, #1]
 547:main.c        ****                         txMessage.msg.version2 = FIRMWARE_REV_2;
 825              		.loc 1 547 0
 826 01b2 9A70     		strb	r2, [r3, #2]
 548:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 827              		.loc 1 548 0
 828 01b4 0632     		adds	r2, r2, #6
 829 01b6 DA70     		strb	r2, [r3, #3]
 549:main.c        ****                         txMessage.msg.opcode   = opStatus;
 830              		.loc 1 549 0
 831 01b8 0F32     		adds	r2, r2, #15
 832 01ba 1A71     		strb	r2, [r3, #4]
 550:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 833              		.loc 1 550 0
 834 01bc 133A     		subs	r2, r2, #19
 835 01be 5A71     		strb	r2, [r3, #5]
 551:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 836              		.loc 1 551 0
 837 01c0 3A4A     		ldr	r2, .L64+76
 838 01c2 1278     		ldrb	r2, [r2]
 839 01c4 9A71     		strb	r2, [r3, #6]
 552:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 840              		.loc 1 552 0
 841 01c6 404A     		ldr	r2, .L64+104
 842 01c8 1278     		ldrb	r2, [r2]
 843 01ca DA71     		strb	r2, [r3, #7]
 553:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 844              		.loc 1 553 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 40


 845 01cc 2A4A     		ldr	r2, .L64+24
 846 01ce 1288     		ldrh	r2, [r2]
 847 01d0 92B2     		uxth	r2, r2
 848 01d2 5A72     		strb	r2, [r3, #9]
 849 01d4 120A     		lsrs	r2, r2, #8
 850 01d6 9A72     		strb	r2, [r3, #10]
 554:main.c        ****                         txMessage.msg.position = Position;
 851              		.loc 1 554 0
 852 01d8 354A     		ldr	r2, .L64+80
 853 01da 1278     		ldrb	r2, [r2]
 854 01dc 1A72     		strb	r2, [r3, #8]
 555:main.c        ****                         txMessage.msg.pwm      = PWM;
 855              		.loc 1 555 0
 856 01de 0A68     		ldr	r2, [r1]
 857 01e0 5A73     		strb	r2, [r3, #13]
 858 01e2 100A     		lsrs	r0, r2, #8
 859 01e4 9873     		strb	r0, [r3, #14]
 860 01e6 100C     		lsrs	r0, r2, #16
 861 01e8 D873     		strb	r0, [r3, #15]
 862 01ea 120E     		lsrs	r2, r2, #24
 863 01ec 1A74     		strb	r2, [r3, #16]
 556:main.c        ****                         txMessage.msg.current  = Current;                            
 864              		.loc 1 556 0
 865 01ee 374A     		ldr	r2, .L64+108
 866 01f0 1268     		ldr	r2, [r2]
 867 01f2 5A74     		strb	r2, [r3, #17]
 868 01f4 100A     		lsrs	r0, r2, #8
 869 01f6 9874     		strb	r0, [r3, #18]
 870 01f8 100C     		lsrs	r0, r2, #16
 871 01fa D874     		strb	r0, [r3, #19]
 872 01fc 120E     		lsrs	r2, r2, #24
 873 01fe 1A75     		strb	r2, [r3, #20]
 557:main.c        ****                         
 874              		.loc 1 557 0
 875 0200 334A     		ldr	r2, .L64+112
 876 0202 1288     		ldrh	r2, [r2]
 877 0204 DA72     		strb	r2, [r3, #11]
 878 0206 120A     		lsrs	r2, r2, #8
 879 0208 1A73     		strb	r2, [r3, #12]
 880              	.LVL79:
 560:main.c        ****                             checksum += txMessage.buf[i]; 
 881              		.loc 1 560 0
 882 020a 0022     		movs	r2, #0
 883 020c 0023     		movs	r3, #0
 884 020e 05E0     		b	.L57
 885              	.LVL80:
 886              	.L58:
 561:main.c        ****                             
 887              		.loc 1 561 0 discriminator 3
 888 0210 1849     		ldr	r1, .L64+20
 889 0212 C95C     		ldrb	r1, [r1, r3]
 890 0214 5218     		adds	r2, r2, r1
 891              	.LVL81:
 892 0216 D2B2     		uxtb	r2, r2
 893              	.LVL82:
 560:main.c        ****                             checksum += txMessage.buf[i]; 
 894              		.loc 1 560 0 discriminator 3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 41


 895 0218 0133     		adds	r3, r3, #1
 896              	.LVL83:
 897 021a DBB2     		uxtb	r3, r3
 898              	.LVL84:
 899              	.L57:
 560:main.c        ****                             checksum += txMessage.buf[i]; 
 900              		.loc 1 560 0 is_stmt 0 discriminator 1
 901 021c 142B     		cmp	r3, #20
 902 021e F7D9     		bls	.L58
 564:main.c        ****                             
 903              		.loc 1 564 0 is_stmt 1
 904 0220 1448     		ldr	r0, .L64+20
 905 0222 5242     		rsbs	r2, r2, #0
 906              	.LVL85:
 907 0224 0270     		strb	r2, [r0]
 568:main.c        **** 
 908              		.loc 1 568 0
 909 0226 1E21     		movs	r1, #30
 910 0228 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 911              	.LVL86:
 571:main.c        ****                         
 912              		.loc 1 571 0
 913 022c 0122     		movs	r2, #1
 914 022e 0E4B     		ldr	r3, .L64+8
 915 0230 1A70     		strb	r2, [r3]
 574:main.c        ****                             ClearFault(fsNONE);
 916              		.loc 1 574 0
 917 0232 0F4B     		ldr	r3, .L64+16
 918 0234 5B7A     		ldrb	r3, [r3, #9]
 919 0236 002B     		cmp	r3, #0
 920 0238 02D0     		beq	.L59
 575:main.c        ****                     
 921              		.loc 1 575 0
 922 023a 0020     		movs	r0, #0
 923 023c FFF7FEFF 		bl	ClearFault
 924              	.LVL87:
 925              	.L59:
 578:main.c        ****                     }            
 926              		.loc 1 578 0
 927 0240 0A4B     		ldr	r3, .L64+12
 928 0242 1868     		ldr	r0, [r3]
 929 0244 0023     		movs	r3, #0
 930 0246 0022     		movs	r2, #0
 931 0248 0021     		movs	r1, #0
 932 024a FFF7FEFF 		bl	xQueueGenericSend
 933              	.LVL88:
 934              	.L45:
 594:main.c        ****         
 935              		.loc 1 594 0
 936 024e 0120     		movs	r0, #1
 937 0250 FFF7FEFF 		bl	vTaskDelay
 938              	.LVL89:
 597:main.c        ****     }
 939              		.loc 1 597 0
 940 0254 0020     		movs	r0, #0
 941 0256 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 942              	.LVL90:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 42


 943 025a 014B     		ldr	r3, .L64
 944 025c 1860     		str	r0, [r3]
 598:main.c        **** }
 945              		.loc 1 598 0
 946 025e D5E6     		b	.L60
 947              	.L65:
 948              		.align	2
 949              	.L64:
 950 0260 00000000 		.word	uxHighWaterMark_Comm
 951 0264 24000740 		.word	1074200612
 952 0268 00000000 		.word	txMessageState
 953 026c 00000000 		.word	Lock
 954 0270 00000000 		.word	rxMessage
 955 0274 00000000 		.word	txMessage
 956 0278 00000000 		.word	ChecksumErrors
 957 027c 00000000 		.word	refKp
 958 0280 00000000 		.word	refKi
 959 0284 00000000 		.word	refKd
 960 0288 00000000 		.word	PID_EffSetDelta
 961 028c 00000000 		.word	Jog
 962 0290 00000000 		.word	outMax_Total
 963 0294 00000000 		.word	outMax_ITerm
 964 0298 0000C842 		.word	1120403456
 965 029c 00004842 		.word	1112014848
 966 02a0 00000000 		.word	pwmLimit
 967 02a4 00000000 		.word	pwmMax
 968 02a8 00000000 		.word	pwmMin
 969 02ac 00000000 		.word	ConfigState
 970 02b0 00000000 		.word	ConfigSequence
 971 02b4 00000000 		.word	PID_Enabled
 972 02b8 00000000 		.word	PID_Setpoint
 973 02bc 00000000 		.word	LastPosition
 974 02c0 00000000 		.word	PID_EffectiveSetpoint
 975 02c4 00000000 		.word	Position
 976 02c8 00000000 		.word	FaultState
 977 02cc 00000000 		.word	PWM
 978 02d0 00000000 		.word	Current
 979              		.cfi_endproc
 980              	.LFE36:
 981              		.size	Comm_Task, .-Comm_Task
 982              		.section	.text.PID_Initialize,"ax",%progbits
 983              		.align	2
 984              		.global	PID_Initialize
 985              		.code	16
 986              		.thumb_func
 987              		.type	PID_Initialize, %function
 988              	PID_Initialize:
 989              	.LFB39:
 673:main.c        ****     
 990              		.loc 1 673 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994 0000 10B5     		push	{r4, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 4, -8
 997              		.cfi_offset 14, -4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 43


 676:main.c        ****     LastPosition = Position;
 998              		.loc 1 676 0
 999 0002 FFF7FEFF 		bl	GetPosition
 1000              	.LVL91:
 1001 0006 064B     		ldr	r3, .L67
 1002 0008 1860     		str	r0, [r3]
 677:main.c        ****     
 1003              		.loc 1 677 0
 1004 000a 1A68     		ldr	r2, [r3]
 1005 000c 054B     		ldr	r3, .L67+4
 1006 000e 1A60     		str	r2, [r3]
 681:main.c        ****     
 1007              		.loc 1 681 0
 1008 0010 1A68     		ldr	r2, [r3]
 1009 0012 054B     		ldr	r3, .L67+8
 1010 0014 1A60     		str	r2, [r3]
 685:main.c        **** }    
 1011              		.loc 1 685 0
 1012 0016 0022     		movs	r2, #0
 1013 0018 044B     		ldr	r3, .L67+12
 1014 001a 1A60     		str	r2, [r3]
 686:main.c        **** 
 1015              		.loc 1 686 0
 1016              		@ sp needed
 1017 001c 10BD     		pop	{r4, pc}
 1018              	.L68:
 1019 001e C046     		.align	2
 1020              	.L67:
 1021 0020 00000000 		.word	Position
 1022 0024 00000000 		.word	LastPosition
 1023 0028 00000000 		.word	PID_EffectiveSetpoint
 1024 002c 00000000 		.word	ITerm
 1025              		.cfi_endproc
 1026              	.LFE39:
 1027              		.size	PID_Initialize, .-PID_Initialize
 1028              		.section	.text.PID_SetTunings,"ax",%progbits
 1029              		.align	2
 1030              		.global	PID_SetTunings
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	PID_SetTunings, %function
 1034              	PID_SetTunings:
 1035              	.LFB40:
 698:main.c        ****     
 1036              		.loc 1 698 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL92:
 1041 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1042              		.cfi_def_cfa_offset 24
 1043              		.cfi_offset 3, -24
 1044              		.cfi_offset 4, -20
 1045              		.cfi_offset 5, -16
 1046              		.cfi_offset 6, -12
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 44


 1049 0002 0E1C     		adds	r6, r1, #0
 1050 0004 151C     		adds	r5, r2, #0
 1051 0006 1C1C     		adds	r4, r3, #0
 700:main.c        ****     
 1052              		.loc 1 700 0
 1053 0008 0028     		cmp	r0, #0
 1054 000a 12D0     		beq	.L69
 1055              	.LBB2:
 702:main.c        ****     
 1056              		.loc 1 702 0
 1057 000c FFF7FEFF 		bl	__aeabi_ui2f
 1058              	.LVL93:
 1059 0010 0849     		ldr	r1, .L71
 1060 0012 FFF7FEFF 		bl	__aeabi_fdiv
 1061              	.LVL94:
 1062 0016 071C     		adds	r7, r0, #0
 1063              	.LVL95:
 704:main.c        ****         ki = newKi * sampleTimeInSec;
 1064              		.loc 1 704 0
 1065 0018 074B     		ldr	r3, .L71+4
 1066 001a 1E60     		str	r6, [r3]
 705:main.c        ****         kd = newKd / sampleTimeInSec;        
 1067              		.loc 1 705 0
 1068 001c 291C     		adds	r1, r5, #0
 1069 001e FFF7FEFF 		bl	__aeabi_fmul
 1070              	.LVL96:
 1071 0022 064B     		ldr	r3, .L71+8
 1072 0024 1860     		str	r0, [r3]
 706:main.c        ****     }
 1073              		.loc 1 706 0
 1074 0026 391C     		adds	r1, r7, #0
 1075 0028 201C     		adds	r0, r4, #0
 1076 002a FFF7FEFF 		bl	__aeabi_fdiv
 1077              	.LVL97:
 1078 002e 044B     		ldr	r3, .L71+12
 1079 0030 1860     		str	r0, [r3]
 1080              	.LVL98:
 1081              	.L69:
 1082              	.LBE2:
 708:main.c        **** 
 1083              		.loc 1 708 0
 1084              		@ sp needed
 1085              	.LVL99:
 1086              	.LVL100:
 1087              	.LVL101:
 1088 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1089              	.L72:
 1090              		.align	2
 1091              	.L71:
 1092 0034 00007A44 		.word	1148846080
 1093 0038 00000000 		.word	kp
 1094 003c 00000000 		.word	ki
 1095 0040 00000000 		.word	kd
 1096              		.cfi_endproc
 1097              	.LFE40:
 1098              		.size	PID_SetTunings, .-PID_SetTunings
 1099              		.global	__aeabi_i2f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 45


 1100              		.section	.text.PID_Compute,"ax",%progbits
 1101              		.align	2
 1102              		.global	PID_Compute
 1103              		.code	16
 1104              		.thumb_func
 1105              		.type	PID_Compute, %function
 1106              	PID_Compute:
 1107              	.LFB41:
 720:main.c        ****     
 1108              		.loc 1 720 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              	.LVL102:
 1113 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1114              		.cfi_def_cfa_offset 24
 1115              		.cfi_offset 3, -24
 1116              		.cfi_offset 4, -20
 1117              		.cfi_offset 5, -16
 1118              		.cfi_offset 6, -12
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 0400     		movs	r4, r0
 1122 0004 0D00     		movs	r5, r1
 725:main.c        ****         return 0;
 1123              		.loc 1 725 0
 1124 0006 3D4B     		ldr	r3, .L91
 1125 0008 1B7A     		ldrb	r3, [r3, #8]
 1126 000a 002B     		cmp	r3, #0
 1127 000c 74D0     		beq	.L84
 729:main.c        ****     
 1128              		.loc 1 729 0
 1129 000e FFF7FEFF 		bl	GetPosition
 1130              	.LVL103:
 1131 0012 3B4B     		ldr	r3, .L91+4
 1132 0014 1860     		str	r0, [r3]
 732:main.c        ****     
 1133              		.loc 1 732 0
 1134 0016 3B4B     		ldr	r3, .L91+8
 1135 0018 1868     		ldr	r0, [r3]
 1136 001a 201A     		subs	r0, r4, r0
 1137              	.LVL104:
 735:main.c        **** 
 1138              		.loc 1 735 0
 1139 001c 3A4B     		ldr	r3, .L91+12
 1140 001e 5B68     		ldr	r3, [r3, #4]
 1141 0020 9842     		cmp	r0, r3
 1142 0022 66D3     		bcc	.L75
 739:main.c        ****         
 1143              		.loc 1 739 0
 1144 0024 394B     		ldr	r3, .L91+16
 1145 0026 1B68     		ldr	r3, [r3]
 1146 0028 394A     		ldr	r2, .L91+20
 1147 002a 1268     		ldr	r2, [r2]
 1148 002c 3949     		ldr	r1, .L91+24
 1149 002e 0968     		ldr	r1, [r1]
 1150 0030 FFF7FEFF 		bl	PID_SetTunings
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 46


 1151              	.LVL105:
 742:main.c        ****         ITerm += (ki * error);
 1152              		.loc 1 742 0
 1153 0034 324B     		ldr	r3, .L91+4
 1154 0036 1868     		ldr	r0, [r3]
 1155 0038 281A     		subs	r0, r5, r0
 1156              	.LVL106:
 743:main.c        ****         
 1157              		.loc 1 743 0
 1158 003a FFF7FEFF 		bl	__aeabi_i2f
 1159              	.LVL107:
 1160 003e 071C     		adds	r7, r0, #0
 1161 0040 354B     		ldr	r3, .L91+28
 1162 0042 1968     		ldr	r1, [r3]
 1163 0044 FFF7FEFF 		bl	__aeabi_fmul
 1164              	.LVL108:
 1165 0048 344D     		ldr	r5, .L91+32
 1166              	.LVL109:
 1167 004a 2968     		ldr	r1, [r5]
 1168 004c FFF7FEFF 		bl	__aeabi_fadd
 1169              	.LVL110:
 1170 0050 061C     		adds	r6, r0, #0
 1171 0052 2860     		str	r0, [r5]
 746:main.c        ****             ITerm = outMax_ITerm;
 1172              		.loc 1 746 0
 1173 0054 324B     		ldr	r3, .L91+36
 1174 0056 1D68     		ldr	r5, [r3]
 1175 0058 291C     		adds	r1, r5, #0
 1176 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 1177              	.LVL111:
 1178 005e 0028     		cmp	r0, #0
 1179 0060 02D0     		beq	.L89
 747:main.c        ****         } else if (ITerm < -outMax_ITerm) {
 1180              		.loc 1 747 0
 1181 0062 2E4B     		ldr	r3, .L91+32
 1182 0064 1D60     		str	r5, [r3]
 1183 0066 0BE0     		b	.L78
 1184              	.L89:
 748:main.c        ****             ITerm = -outMax_ITerm;
 1185              		.loc 1 748 0
 1186 0068 8023     		movs	r3, #128
 1187 006a 1B06     		lsls	r3, r3, #24
 1188 006c 9C46     		mov	ip, r3
 1189 006e 6544     		add	r5, r5, ip
 1190 0070 291C     		adds	r1, r5, #0
 1191 0072 301C     		adds	r0, r6, #0
 1192 0074 FFF7FEFF 		bl	__aeabi_fcmplt
 1193              	.LVL112:
 1194 0078 0028     		cmp	r0, #0
 1195 007a 01D0     		beq	.L78
 749:main.c        ****         }
 1196              		.loc 1 749 0
 1197 007c 274B     		ldr	r3, .L91+32
 1198 007e 1D60     		str	r5, [r3]
 1199              	.L78:
 753:main.c        **** 
 1200              		.loc 1 753 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 47


 1201 0080 1F4B     		ldr	r3, .L91+4
 1202 0082 1B68     		ldr	r3, [r3]
 1203 0084 274A     		ldr	r2, .L91+40
 1204 0086 1568     		ldr	r5, [r2]
 1205 0088 5D1B     		subs	r5, r3, r5
 1206              	.LVL113:
 756:main.c        ****         
 1207              		.loc 1 756 0
 1208 008a 274B     		ldr	r3, .L91+44
 1209 008c 1968     		ldr	r1, [r3]
 1210 008e 381C     		adds	r0, r7, #0
 1211 0090 FFF7FEFF 		bl	__aeabi_fmul
 1212              	.LVL114:
 1213 0094 214B     		ldr	r3, .L91+32
 1214 0096 1968     		ldr	r1, [r3]
 1215 0098 FFF7FEFF 		bl	__aeabi_fadd
 1216              	.LVL115:
 1217 009c 061C     		adds	r6, r0, #0
 1218 009e 2800     		movs	r0, r5
 1219 00a0 FFF7FEFF 		bl	__aeabi_i2f
 1220              	.LVL116:
 1221 00a4 214B     		ldr	r3, .L91+48
 1222 00a6 1968     		ldr	r1, [r3]
 1223 00a8 FFF7FEFF 		bl	__aeabi_fmul
 1224              	.LVL117:
 1225 00ac 011C     		adds	r1, r0, #0
 1226 00ae 301C     		adds	r0, r6, #0
 1227 00b0 FFF7FEFF 		bl	__aeabi_fsub
 1228              	.LVL118:
 1229 00b4 061C     		adds	r6, r0, #0
 1230 00b6 1E4B     		ldr	r3, .L91+52
 1231 00b8 1860     		str	r0, [r3]
 759:main.c        ****             Output = outMax_Total;
 1232              		.loc 1 759 0
 1233 00ba 1E4B     		ldr	r3, .L91+56
 1234 00bc 1D68     		ldr	r5, [r3]
 1235              	.LVL119:
 1236 00be 291C     		adds	r1, r5, #0
 1237 00c0 FFF7FEFF 		bl	__aeabi_fcmpgt
 1238              	.LVL120:
 1239 00c4 0028     		cmp	r0, #0
 1240 00c6 02D0     		beq	.L90
 760:main.c        ****         } else if (Output < -outMax_Total) {
 1241              		.loc 1 760 0
 1242 00c8 194B     		ldr	r3, .L91+52
 1243 00ca 1D60     		str	r5, [r3]
 1244 00cc 0BE0     		b	.L82
 1245              	.L90:
 761:main.c        ****             Output = -outMax_Total;
 1246              		.loc 1 761 0
 1247 00ce 8023     		movs	r3, #128
 1248 00d0 1B06     		lsls	r3, r3, #24
 1249 00d2 9C46     		mov	ip, r3
 1250 00d4 6544     		add	r5, r5, ip
 1251 00d6 291C     		adds	r1, r5, #0
 1252 00d8 301C     		adds	r0, r6, #0
 1253 00da FFF7FEFF 		bl	__aeabi_fcmplt
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 48


 1254              	.LVL121:
 1255 00de 0028     		cmp	r0, #0
 1256 00e0 01D0     		beq	.L82
 762:main.c        ****         }
 1257              		.loc 1 762 0
 1258 00e2 134B     		ldr	r3, .L91+52
 1259 00e4 1D60     		str	r5, [r3]
 1260              	.L82:
 766:main.c        ****         lastTime = now;        
 1261              		.loc 1 766 0
 1262 00e6 064B     		ldr	r3, .L91+4
 1263 00e8 1A68     		ldr	r2, [r3]
 1264 00ea 0E4B     		ldr	r3, .L91+40
 1265 00ec 1A60     		str	r2, [r3]
 767:main.c        ****     }
 1266              		.loc 1 767 0
 1267 00ee 054B     		ldr	r3, .L91+8
 1268 00f0 1C60     		str	r4, [r3]
 1269              	.L75:
 770:main.c        **** }
 1270              		.loc 1 770 0
 1271 00f2 0F4B     		ldr	r3, .L91+52
 1272 00f4 1868     		ldr	r0, [r3]
 1273 00f6 00E0     		b	.L74
 1274              	.LVL122:
 1275              	.L84:
 726:main.c        ****     
 1276              		.loc 1 726 0
 1277 00f8 0020     		movs	r0, #0
 1278              	.LVL123:
 1279              	.L74:
 771:main.c        ****  
 1280              		.loc 1 771 0
 1281              		@ sp needed
 1282              	.LVL124:
 1283 00fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1284              	.L92:
 1285              		.align	2
 1286              	.L91:
 1287 00fc 00000000 		.word	.LANCHOR1
 1288 0100 00000000 		.word	Position
 1289 0104 00000000 		.word	lastTime
 1290 0108 00000000 		.word	.LANCHOR0
 1291 010c 00000000 		.word	refKd
 1292 0110 00000000 		.word	refKi
 1293 0114 00000000 		.word	refKp
 1294 0118 00000000 		.word	ki
 1295 011c 00000000 		.word	ITerm
 1296 0120 00000000 		.word	outMax_ITerm
 1297 0124 00000000 		.word	LastPosition
 1298 0128 00000000 		.word	kp
 1299 012c 00000000 		.word	kd
 1300 0130 00000000 		.word	Output
 1301 0134 00000000 		.word	outMax_Total
 1302              		.cfi_endproc
 1303              	.LFE41:
 1304              		.size	PID_Compute, .-PID_Compute
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 49


 1305              		.section	.text.PID_SetMode,"ax",%progbits
 1306              		.align	2
 1307              		.global	PID_SetMode
 1308              		.code	16
 1309              		.thumb_func
 1310              		.type	PID_SetMode, %function
 1311              	PID_SetMode:
 1312              	.LFB42:
 782:main.c        ****     
 1313              		.loc 1 782 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 1317              	.LVL125:
 1318 0000 10B5     		push	{r4, lr}
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 4, -8
 1321              		.cfi_offset 14, -4
 784:main.c        ****     
 1322              		.loc 1 784 0
 1323 0002 441E     		subs	r4, r0, #1
 1324 0004 6342     		rsbs	r3, r4, #0
 1325 0006 5C41     		adcs	r4, r4, r3
 1326 0008 E4B2     		uxtb	r4, r4
 1327              	.LVL126:
 786:main.c        ****         /*we just went from manual to auto*/
 1328              		.loc 1 786 0
 1329 000a 0128     		cmp	r0, #1
 1330 000c 05D1     		bne	.L94
 786:main.c        ****         /*we just went from manual to auto*/
 1331              		.loc 1 786 0 is_stmt 0 discriminator 1
 1332 000e 044B     		ldr	r3, .L95
 1333 0010 1B7A     		ldrb	r3, [r3, #8]
 1334 0012 002B     		cmp	r3, #0
 1335 0014 01D1     		bne	.L94
 788:main.c        ****     }
 1336              		.loc 1 788 0 is_stmt 1
 1337 0016 FFF7FEFF 		bl	PID_Initialize
 1338              	.LVL127:
 1339              	.L94:
 791:main.c        **** } 
 1340              		.loc 1 791 0
 1341 001a 014B     		ldr	r3, .L95
 1342 001c 1C72     		strb	r4, [r3, #8]
 792:main.c        ****     
 1343              		.loc 1 792 0
 1344              		@ sp needed
 1345              	.LVL128:
 1346 001e 10BD     		pop	{r4, pc}
 1347              	.L96:
 1348              		.align	2
 1349              	.L95:
 1350 0020 00000000 		.word	.LANCHOR1
 1351              		.cfi_endproc
 1352              	.LFE42:
 1353              		.size	PID_SetMode, .-PID_SetMode
 1354              		.section	.text.PID_SetDrive,"ax",%progbits
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 50


 1355              		.align	2
 1356              		.global	PID_SetDrive
 1357              		.code	16
 1358              		.thumb_func
 1359              		.type	PID_SetDrive, %function
 1360              	PID_SetDrive:
 1361              	.LFB43:
 803:main.c        **** 
 1362              		.loc 1 803 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              	.LVL129:
 1367 0000 10B5     		push	{r4, lr}
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 4, -8
 1370              		.cfi_offset 14, -4
 807:main.c        ****     
 1371              		.loc 1 807 0
 1372 0002 0549     		ldr	r1, .L98
 1373 0004 FFF7FEFF 		bl	__aeabi_fadd
 1374              	.LVL130:
 1375 0008 FC21     		movs	r1, #252
 1376 000a 8905     		lsls	r1, r1, #22
 1377 000c FFF7FEFF 		bl	__aeabi_fmul
 1378              	.LVL131:
 810:main.c        **** }
 1379              		.loc 1 810 0
 1380 0010 FFF7FEFF 		bl	PWM_Set
 1381              	.LVL132:
 811:main.c        **** 
 1382              		.loc 1 811 0
 1383              		@ sp needed
 1384 0014 10BD     		pop	{r4, pc}
 1385              	.L99:
 1386 0016 C046     		.align	2
 1387              	.L98:
 1388 0018 0000C842 		.word	1120403456
 1389              		.cfi_endproc
 1390              	.LFE43:
 1391              		.size	PID_SetDrive, .-PID_SetDrive
 1392              		.section	.text.PID_Task,"ax",%progbits
 1393              		.align	2
 1394              		.global	PID_Task
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	PID_Task, %function
 1398              	PID_Task:
 1399              	.LFB44:
 825:main.c        ****     
 1400              		.loc 1 825 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              	.LVL133:
 1405 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1406              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 51


 1407              		.cfi_offset 3, -24
 1408              		.cfi_offset 4, -20
 1409              		.cfi_offset 5, -16
 1410              		.cfi_offset 6, -12
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413              	.LVL134:
 835:main.c        ****     
 1414              		.loc 1 835 0
 1415 0002 0020     		movs	r0, #0
 1416              	.LVL135:
 1417 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1418              	.LVL136:
 1419 0008 774B     		ldr	r3, .L115
 1420 000a 1860     		str	r0, [r3]
 841:main.c        ****     refKi = 0;
 1421              		.loc 1 841 0
 1422 000c 774D     		ldr	r5, .L115+4
 1423 000e 0024     		movs	r4, #0
 1424 0010 2C60     		str	r4, [r5]
 842:main.c        ****     refKd = 0;
 1425              		.loc 1 842 0
 1426 0012 774E     		ldr	r6, .L115+8
 1427 0014 3460     		str	r4, [r6]
 843:main.c        ****     
 1428              		.loc 1 843 0
 1429 0016 774F     		ldr	r7, .L115+12
 1430 0018 3C60     		str	r4, [r7]
 846:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);    
 1431              		.loc 1 846 0
 1432 001a FFF7FEFF 		bl	PID_Initialize
 1433              	.LVL137:
 847:main.c        ****     PID_SetMode(PID_MANUAL);
 1434              		.loc 1 847 0
 1435 001e 3B68     		ldr	r3, [r7]
 1436 0020 3268     		ldr	r2, [r6]
 1437 0022 2968     		ldr	r1, [r5]
 1438 0024 0520     		movs	r0, #5
 1439 0026 FFF7FEFF 		bl	PID_SetTunings
 1440              	.LVL138:
 848:main.c        ****     
 1441              		.loc 1 848 0
 1442 002a 0020     		movs	r0, #0
 1443 002c FFF7FEFF 		bl	PID_SetMode
 1444              	.LVL139:
 851:main.c        ****     outMax_ITerm = 100;
 1445              		.loc 1 851 0
 1446 0030 714B     		ldr	r3, .L115+16
 1447 0032 724A     		ldr	r2, .L115+20
 1448 0034 1360     		str	r3, [r2]
 852:main.c        **** 
 1449              		.loc 1 852 0
 1450 0036 724A     		ldr	r2, .L115+24
 1451 0038 1360     		str	r3, [r2]
 855:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 1452              		.loc 1 855 0
 1453 003a 7249     		ldr	r1, .L115+28
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 52


 1454 003c 724A     		ldr	r2, .L115+32
 1455 003e 1160     		str	r1, [r2]
 856:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 1456              		.loc 1 856 0
 1457 0040 724A     		ldr	r2, .L115+36
 1458 0042 1360     		str	r3, [r2]
 857:main.c        ****     
 1459              		.loc 1 857 0
 1460 0044 724B     		ldr	r3, .L115+40
 1461 0046 1C60     		str	r4, [r3]
 1462              	.LVL140:
 863:main.c        ****     PID_EffectiveSetpoint = 0;
 1463              		.loc 1 863 0
 1464 0048 0023     		movs	r3, #0
 1465 004a 724A     		ldr	r2, .L115+44
 1466 004c 1360     		str	r3, [r2]
 864:main.c        ****     PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1467              		.loc 1 864 0
 1468 004e 724A     		ldr	r2, .L115+48
 1469 0050 1360     		str	r3, [r2]
 865:main.c        ****     PID_Was_Enabled = false;
 1470              		.loc 1 865 0
 1471 0052 1921     		movs	r1, #25
 1472 0054 714A     		ldr	r2, .L115+52
 1473 0056 1170     		strb	r1, [r2]
 866:main.c        ****     PID_Enabled = false;
 1474              		.loc 1 866 0
 1475 0058 714A     		ldr	r2, .L115+56
 1476 005a 1370     		strb	r3, [r2]
 867:main.c        ****     
 1477              		.loc 1 867 0
 1478 005c 714A     		ldr	r2, .L115+60
 1479 005e 1370     		strb	r3, [r2]
 1480              	.LVL141:
 1481              	.L114:
 871:main.c        ****               
 1482              		.loc 1 871 0
 1483 0060 0120     		movs	r0, #1
 1484 0062 FFF7FEFF 		bl	PROBE_Write
 1485              	.LVL142:
 877:main.c        ****         /* ------------------------------------------------------------------------------------ */
 1486              		.loc 1 877 0
 1487 0066 8020     		movs	r0, #128
 1488 0068 0001     		lsls	r0, r0, #4
 1489 006a FFF7FEFF 		bl	CySysWdtResetCounters
 1490              	.LVL143:
 885:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 1491              		.loc 1 885 0
 1492 006e FFF7FEFF 		bl	xTaskGetTickCount
 1493              	.LVL144:
 1494 0072 0400     		movs	r4, r0
 1495              	.LVL145:
 886:main.c        ****              (now < LastMessageTimeTick) ) {
 1496              		.loc 1 886 0
 1497 0074 6C4B     		ldr	r3, .L115+64
 1498 0076 1B68     		ldr	r3, [r3]
 1499 0078 FA22     		movs	r2, #250
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 53


 1500 007a 9200     		lsls	r2, r2, #2
 1501 007c 9A18     		adds	r2, r3, r2
 1502 007e 9042     		cmp	r0, r2
 1503 0080 01D8     		bhi	.L101
 886:main.c        ****              (now < LastMessageTimeTick) ) {
 1504              		.loc 1 886 0 is_stmt 0 discriminator 1
 1505 0082 9842     		cmp	r0, r3
 1506 0084 08D2     		bcs	.L102
 1507              	.L101:
 890:main.c        ****             PID_Enabled = false;
 1508              		.loc 1 890 0 is_stmt 1
 1509 0086 5F48     		ldr	r0, .L115+28
 1510              	.LVL146:
 1511 0088 FFF7FEFF 		bl	PWM_Set
 1512              	.LVL147:
 891:main.c        ****             
 1513              		.loc 1 891 0
 1514 008c 0023     		movs	r3, #0
 1515 008e 654A     		ldr	r2, .L115+60
 1516 0090 1370     		strb	r3, [r2]
 895:main.c        **** 
 1517              		.loc 1 895 0
 1518 0092 664A     		ldr	r2, .L115+68
 1519 0094 1370     		strb	r3, [r2]
 1520 0096 9BE0     		b	.L103
 1521              	.LVL148:
 1522              	.L102:
 898:main.c        ****             
 1523              		.loc 1 898 0
 1524 0098 654B     		ldr	r3, .L115+72
 1525 009a 1B78     		ldrb	r3, [r3]
 1526 009c 022B     		cmp	r3, #2
 1527 009e 00D0     		beq	.LCB1352
 1528 00a0 96E0     		b	.L103	@long jump
 1529              	.LCB1352:
 902:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1530              		.loc 1 902 0
 1531 00a2 0620     		movs	r0, #6
 1532              	.LVL149:
 1533 00a4 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1534              	.LVL150:
 903:main.c        ****         
 1535              		.loc 1 903 0
 1536 00a8 0620     		movs	r0, #6
 1537 00aa FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1538              	.LVL151:
 906:main.c        ****                 
 1539              		.loc 1 906 0
 1540 00ae 5D4B     		ldr	r3, .L115+60
 1541 00b0 1B78     		ldrb	r3, [r3]
 1542 00b2 002B     		cmp	r3, #0
 1543 00b4 44D1     		bne	.L104
 910:main.c        ****                     
 1544              		.loc 1 910 0
 1545 00b6 5D4B     		ldr	r3, .L115+68
 1546 00b8 1A78     		ldrb	r2, [r3]
 1547 00ba 52B2     		sxtb	r2, r2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 54


 1548 00bc 5D4B     		ldr	r3, .L115+76
 1549 00be 1B78     		ldrb	r3, [r3]
 1550 00c0 5BB2     		sxtb	r3, r3
 1551 00c2 9A42     		cmp	r2, r3
 1552 00c4 0FD0     		beq	.L105
 910:main.c        ****                     
 1553              		.loc 1 910 0 is_stmt 0 discriminator 1
 1554 00c6 594B     		ldr	r3, .L115+68
 1555 00c8 1B78     		ldrb	r3, [r3]
 1556 00ca 002B     		cmp	r3, #0
 1557 00cc 0BD0     		beq	.L105
 913:main.c        ****                     
 1558              		.loc 1 913 0 is_stmt 1
 1559 00ce 574B     		ldr	r3, .L115+68
 1560 00d0 1B78     		ldrb	r3, [r3]
 1561 00d2 5BB2     		sxtb	r3, r3
 1562 00d4 574A     		ldr	r2, .L115+76
 1563 00d6 1370     		strb	r3, [r2]
 916:main.c        ****                     
 1564              		.loc 1 916 0
 1565 00d8 FFF7FEFF 		bl	GetPosition
 1566              	.LVL152:
 1567 00dc 564B     		ldr	r3, .L115+80
 1568 00de 1860     		str	r0, [r3]
 919:main.c        ****                 }                
 1569              		.loc 1 919 0
 1570 00e0 0020     		movs	r0, #0
 1571 00e2 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1572              	.LVL153:
 1573              	.L105:
 923:main.c        **** 
 1574              		.loc 1 923 0
 1575 00e6 514D     		ldr	r5, .L115+68
 1576 00e8 2878     		ldrb	r0, [r5]
 1577 00ea 40B2     		sxtb	r0, r0
 1578 00ec 3230     		adds	r0, r0, #50
 1579 00ee FFF7FEFF 		bl	__aeabi_i2f
 1580              	.LVL154:
 1581 00f2 FFF7FEFF 		bl	PWM_Set
 1582              	.LVL155:
 926:main.c        ****                 
 1583              		.loc 1 926 0
 1584 00f6 2B78     		ldrb	r3, [r5]
 1585 00f8 002B     		cmp	r3, #0
 1586 00fa 21D0     		beq	.L104
 930:main.c        ****                     DeltaPosition = labs( CurrentPosition - LastPosition );
 1587              		.loc 1 930 0
 1588 00fc FFF7FEFF 		bl	GetPosition
 1589              	.LVL156:
 931:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 1590              		.loc 1 931 0
 1591 0100 4D4B     		ldr	r3, .L115+80
 1592 0102 1B68     		ldr	r3, [r3]
 1593 0104 C01A     		subs	r0, r0, r3
 1594              	.LVL157:
 1595 0106 C317     		asrs	r3, r0, #31
 1596 0108 C518     		adds	r5, r0, r3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 55


 1597 010a 5D40     		eors	r5, r3
 1598              	.LVL158:
 932:main.c        ****                     
 1599              		.loc 1 932 0
 1600 010c FFF7FEFF 		bl	Index_Counter_1_ReadCounter
 1601              	.LVL159:
 1602 0110 0600     		movs	r6, r0
 1603              	.LVL160:
 936:main.c        ****                         if (CurrentIndexCount == 0)
 1604              		.loc 1 936 0
 1605 0112 4A4B     		ldr	r3, .L115+84
 1606 0114 1B78     		ldrb	r3, [r3]
 1607 0116 002B     		cmp	r3, #0
 1608 0118 07D0     		beq	.L106
 937:main.c        ****                             if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 1609              		.loc 1 937 0
 1610 011a 0028     		cmp	r0, #0
 1611 011c 05D1     		bne	.L106
 938:main.c        ****                                 AssertFault(fsIndex);        
 1612              		.loc 1 938 0
 1613 011e 484B     		ldr	r3, .L115+88
 1614 0120 9D42     		cmp	r5, r3
 1615 0122 02DD     		ble	.L106
 939:main.c        ****                     }
 1616              		.loc 1 939 0
 1617 0124 0420     		movs	r0, #4
 1618              	.LVL161:
 1619 0126 FFF7FEFF 		bl	AssertFault
 1620              	.LVL162:
 1621              	.L106:
 944:main.c        ****                         if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 1622              		.loc 1 944 0
 1623 012a 444B     		ldr	r3, .L115+84
 1624 012c 1B78     		ldrb	r3, [r3]
 1625 012e 002B     		cmp	r3, #0
 1626 0130 06D0     		beq	.L104
 945:main.c        ****                             AssertFault(fsEncoder);
 1627              		.loc 1 945 0
 1628 0132 002E     		cmp	r6, #0
 1629 0134 04D0     		beq	.L104
 945:main.c        ****                             AssertFault(fsEncoder);
 1630              		.loc 1 945 0 is_stmt 0 discriminator 1
 1631 0136 012D     		cmp	r5, #1
 1632 0138 02DC     		bgt	.L104
 946:main.c        ****                     }
 1633              		.loc 1 946 0 is_stmt 1
 1634 013a 0220     		movs	r0, #2
 1635 013c FFF7FEFF 		bl	AssertFault
 1636              	.LVL163:
 1637              	.L104:
 953:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1638              		.loc 1 953 0
 1639 0140 374B     		ldr	r3, .L115+56
 1640 0142 1B78     		ldrb	r3, [r3]
 1641 0144 002B     		cmp	r3, #0
 1642 0146 07D1     		bne	.L107
 953:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 56


 1643              		.loc 1 953 0 is_stmt 0 discriminator 1
 1644 0148 364A     		ldr	r2, .L115+60
 1645 014a 1278     		ldrb	r2, [r2]
 1646 014c 002A     		cmp	r2, #0
 1647 014e 03D0     		beq	.L107
 954:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 1648              		.loc 1 954 0 is_stmt 1
 1649 0150 0120     		movs	r0, #1
 1650 0152 FFF7FEFF 		bl	PID_SetMode
 1651              	.LVL164:
 1652 0156 08E0     		b	.L108
 1653              	.L107:
 955:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1654              		.loc 1 955 0
 1655 0158 324A     		ldr	r2, .L115+60
 1656 015a 1278     		ldrb	r2, [r2]
 1657 015c 002A     		cmp	r2, #0
 1658 015e 04D1     		bne	.L108
 955:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1659              		.loc 1 955 0 is_stmt 0 discriminator 1
 1660 0160 002B     		cmp	r3, #0
 1661 0162 02D0     		beq	.L108
 956:main.c        ****             } else {
 1662              		.loc 1 956 0 is_stmt 1
 1663 0164 0020     		movs	r0, #0
 1664 0166 FFF7FEFF 		bl	PID_SetMode
 1665              	.LVL165:
 1666              	.L108:
 962:main.c        ****             
 1667              		.loc 1 962 0
 1668 016a 2E4B     		ldr	r3, .L115+60
 1669 016c 1B78     		ldrb	r3, [r3]
 1670 016e 2C4A     		ldr	r2, .L115+56
 1671 0170 1370     		strb	r3, [r2]
 977:main.c        ****                 
 1672              		.loc 1 977 0
 1673 0172 002B     		cmp	r3, #0
 1674 0174 29D0     		beq	.L109
 979:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;
 1675              		.loc 1 979 0
 1676 0176 294B     		ldr	r3, .L115+52
 1677 0178 1B78     		ldrb	r3, [r3]
 1678 017a 002B     		cmp	r3, #0
 1679 017c 04D1     		bne	.L110
 980:main.c        ****                 } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1680              		.loc 1 980 0
 1681 017e 254B     		ldr	r3, .L115+44
 1682 0180 1A68     		ldr	r2, [r3]
 1683 0182 254B     		ldr	r3, .L115+48
 1684 0184 1A60     		str	r2, [r3]
 1685 0186 16E0     		b	.L111
 1686              	.L110:
 981:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;                                          
 1687              		.loc 1 981 0
 1688 0188 234A     		ldr	r2, .L115+48
 1689 018a 1168     		ldr	r1, [r2]
 1690 018c 214A     		ldr	r2, .L115+44
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 57


 1691 018e 1068     		ldr	r0, [r2]
 1692 0190 0A1A     		subs	r2, r1, r0
 1693 0192 D517     		asrs	r5, r2, #31
 1694 0194 5219     		adds	r2, r2, r5
 1695 0196 6A40     		eors	r2, r5
 1696 0198 5D00     		lsls	r5, r3, #1
 1697 019a AA42     		cmp	r2, r5
 1698 019c 02DC     		bgt	.L112
 982:main.c        ****                 } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1699              		.loc 1 982 0
 1700 019e 1E4B     		ldr	r3, .L115+48
 1701 01a0 1860     		str	r0, [r3]
 1702 01a2 08E0     		b	.L111
 1703              	.L112:
 983:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1704              		.loc 1 983 0
 1705 01a4 8142     		cmp	r1, r0
 1706 01a6 03DA     		bge	.L113
 984:main.c        ****                 } else {
 1707              		.loc 1 984 0
 1708 01a8 CB18     		adds	r3, r1, r3
 1709 01aa 1B4A     		ldr	r2, .L115+48
 1710 01ac 1360     		str	r3, [r2]
 1711 01ae 02E0     		b	.L111
 1712              	.L113:
 986:main.c        ****                 }
 1713              		.loc 1 986 0
 1714 01b0 CB1A     		subs	r3, r1, r3
 1715 01b2 194A     		ldr	r2, .L115+48
 1716 01b4 1360     		str	r3, [r2]
 1717              	.L111:
 990:main.c        ****             
 1718              		.loc 1 990 0
 1719 01b6 184B     		ldr	r3, .L115+48
 1720 01b8 1968     		ldr	r1, [r3]
 1721 01ba 2000     		movs	r0, r4
 1722 01bc FFF7FEFF 		bl	PID_Compute
 1723              	.LVL166:
 993:main.c        ****                 
 1724              		.loc 1 993 0
 1725 01c0 204B     		ldr	r3, .L115+92
 1726 01c2 1860     		str	r0, [r3]
 996:main.c        ****                 
 1727              		.loc 1 996 0
 1728 01c4 FFF7FEFF 		bl	PID_SetDrive
 1729              	.LVL167:
 1730 01c8 02E0     		b	.L103
 1731              	.L109:
1000:main.c        ****             }
 1732              		.loc 1 1000 0
 1733 01ca 0022     		movs	r2, #0
 1734 01cc 1D4B     		ldr	r3, .L115+92
 1735 01ce 1A60     		str	r2, [r3]
 1736              	.L103:
1005:main.c        ****         
 1737              		.loc 1 1005 0
 1738 01d0 0020     		movs	r0, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 58


 1739 01d2 FFF7FEFF 		bl	PROBE_Write
 1740              	.LVL168:
1008:main.c        **** 
 1741              		.loc 1 1008 0
 1742 01d6 0520     		movs	r0, #5
 1743 01d8 FFF7FEFF 		bl	vTaskDelay
 1744              	.LVL169:
1011:main.c        ****     }
 1745              		.loc 1 1011 0
 1746 01dc 0020     		movs	r0, #0
 1747 01de FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1748              	.LVL170:
 1749 01e2 014B     		ldr	r3, .L115
 1750 01e4 1860     		str	r0, [r3]
1012:main.c        ****    
 1751              		.loc 1 1012 0
 1752 01e6 3BE7     		b	.L114
 1753              	.L116:
 1754              		.align	2
 1755              	.L115:
 1756 01e8 00000000 		.word	uxHighWaterMark_PID
 1757 01ec 00000000 		.word	refKp
 1758 01f0 00000000 		.word	refKi
 1759 01f4 00000000 		.word	refKd
 1760 01f8 0000C842 		.word	1120403456
 1761 01fc 00000000 		.word	outMax_Total
 1762 0200 00000000 		.word	outMax_ITerm
 1763 0204 00004842 		.word	1112014848
 1764 0208 00000000 		.word	pwmLimit
 1765 020c 00000000 		.word	pwmMax
 1766 0210 00000000 		.word	pwmMin
 1767 0214 00000000 		.word	PID_Setpoint
 1768 0218 00000000 		.word	PID_EffectiveSetpoint
 1769 021c 00000000 		.word	PID_EffSetDelta
 1770 0220 00000000 		.word	PID_Was_Enabled
 1771 0224 00000000 		.word	PID_Enabled
 1772 0228 00000000 		.word	LastMessageTimeTick
 1773 022c 00000000 		.word	Jog
 1774 0230 00000000 		.word	ConfigState
 1775 0234 00000000 		.word	LastJog
 1776 0238 00000000 		.word	LastPosition
 1777 023c 00000000 		.word	.LANCHOR0
 1778 0240 204E0000 		.word	20000
 1779 0244 00000000 		.word	PWM
 1780              		.cfi_endproc
 1781              	.LFE44:
 1782              		.size	PID_Task, .-PID_Task
 1783              		.section	.text.main,"ax",%progbits
 1784              		.align	2
 1785              		.global	main
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	main, %function
 1789              	main:
 1790              	.LFB45:
1027:main.c        ****     
 1791              		.loc 1 1027 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 59


 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795 0000 30B5     		push	{r4, r5, lr}
 1796              		.cfi_def_cfa_offset 12
 1797              		.cfi_offset 4, -12
 1798              		.cfi_offset 5, -8
 1799              		.cfi_offset 14, -4
 1800 0002 83B0     		sub	sp, sp, #12
 1801              		.cfi_def_cfa_offset 24
1030:main.c        **** 
 1802              		.loc 1 1030 0
 1803 0004 FFF7FEFF 		bl	setupFreeRTOS
 1804              	.LVL171:
1038:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1805              		.loc 1 1038 0
 1806 0008 0120     		movs	r0, #1
 1807 000a FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1808              	.LVL172:
1039:main.c        **** 
 1809              		.loc 1 1039 0
 1810 000e 0120     		movs	r0, #1
 1811 0010 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1812              	.LVL173:
1045:main.c        ****         PID_Task,       /* Task function */
 1813              		.loc 1 1045 0
 1814 0014 0024     		movs	r4, #0
 1815 0016 0194     		str	r4, [sp, #4]
 1816 0018 0323     		movs	r3, #3
 1817 001a 0093     		str	r3, [sp]
 1818 001c 0023     		movs	r3, #0
 1819 001e 4022     		movs	r2, #64
 1820 0020 3649     		ldr	r1, .L120
 1821 0022 3748     		ldr	r0, .L120+4
 1822 0024 FFF7FEFF 		bl	xTaskCreate
 1823              	.LVL174:
1053:main.c        ****         Comm_Task,       /* Task function */
 1824              		.loc 1 1053 0
 1825 0028 0194     		str	r4, [sp, #4]
 1826 002a 0223     		movs	r3, #2
 1827 002c 0093     		str	r3, [sp]
 1828 002e 0023     		movs	r3, #0
 1829 0030 6422     		movs	r2, #100
 1830 0032 3449     		ldr	r1, .L120+8
 1831 0034 3448     		ldr	r0, .L120+12
 1832 0036 FFF7FEFF 		bl	xTaskCreate
 1833              	.LVL175:
1061:main.c        ****         Current_Read_Task, /* Task function */
 1834              		.loc 1 1061 0
 1835 003a 0194     		str	r4, [sp, #4]
 1836 003c 0123     		movs	r3, #1
 1837 003e 0093     		str	r3, [sp]
 1838 0040 0023     		movs	r3, #0
 1839 0042 4022     		movs	r2, #64
 1840 0044 3149     		ldr	r1, .L120+16
 1841 0046 3248     		ldr	r0, .L120+20
 1842 0048 FFF7FEFF 		bl	xTaskCreate
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 60


 1843              	.LVL176:
1072:main.c        **** 
 1844              		.loc 1 1072 0
 1845 004c 0120     		movs	r0, #1
 1846 004e FFF7FEFF 		bl	xQueueCreateMutex
 1847              	.LVL177:
 1848 0052 304B     		ldr	r3, .L120+24
 1849 0054 1860     		str	r0, [r3]
1075:main.c        ****         s = 1;
 1850              		.loc 1 1075 0
 1851 0056 0028     		cmp	r0, #0
 1852 0058 0BD1     		bne	.L118
 1853 005a 0134     		adds	r4, r4, #1
 1854              	.L119:
 1855              	.LVL178:
1079:main.c        ****             LED_Write(s); 
 1856              		.loc 1 1079 0 discriminator 1
 1857 005c 6342     		rsbs	r3, r4, #0
 1858 005e 5C41     		adcs	r4, r4, r3
 1859              	.LVL179:
 1860 0060 E4B2     		uxtb	r4, r4
 1861              	.LVL180:
1080:main.c        ****             CyDelay(1000u);                    
 1862              		.loc 1 1080 0 discriminator 1
 1863 0062 2000     		movs	r0, r4
 1864 0064 FFF7FEFF 		bl	LED_Write
 1865              	.LVL181:
1081:main.c        ****         }
 1866              		.loc 1 1081 0 discriminator 1
 1867 0068 FA20     		movs	r0, #250
 1868 006a 8000     		lsls	r0, r0, #2
 1869 006c FFF7FEFF 		bl	CyDelay
 1870              	.LVL182:
 1871 0070 F4E7     		b	.L119
 1872              	.LVL183:
 1873              	.L118:
1091:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 1874              		.loc 1 1091 0
 1875 0072 2948     		ldr	r0, .L120+28
 1876 0074 FFF7FEFF 		bl	isr_home_StartEx
 1877              	.LVL184:
1092:main.c        ****     
 1878              		.loc 1 1092 0
 1879 0078 2848     		ldr	r0, .L120+32
 1880 007a FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1881              	.LVL185:
1095:main.c        ****     
 1882              		.loc 1 1095 0
 1883 007e 2848     		ldr	r0, .L120+36
 1884 0080 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1885              	.LVL186:
1098:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
 1886              		.loc 1 1098 0
 1887 0084 0320     		movs	r0, #3
 1888 0086 FFF7FEFF 		bl	isr_home_SetPriority
 1889              	.LVL187:
1099:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 61


 1890              		.loc 1 1099 0
 1891 008a 0220     		movs	r0, #2
 1892 008c FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1893              	.LVL188:
1100:main.c        **** 
 1894              		.loc 1 1100 0
 1895 0090 0320     		movs	r0, #3
 1896 0092 FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1897              	.LVL189:
1103:main.c        ****     
 1898              		.loc 1 1103 0
 1899              		.syntax divided
 1900              	@ 1103 "main.c" 1
 1901 0096 62B6     		CPSIE   i
 1902              	@ 0 "" 2
1134:main.c        ****     CyDelay(100u);
 1903              		.loc 1 1134 0
 1904              		.thumb
 1905              		.syntax unified
 1906 0098 FFF7FEFF 		bl	I2C_Start
 1907              	.LVL190:
1135:main.c        ****     SPI_1_Start();
 1908              		.loc 1 1135 0
 1909 009c 6420     		movs	r0, #100
 1910 009e FFF7FEFF 		bl	CyDelay
 1911              	.LVL191:
1136:main.c        ****     
 1912              		.loc 1 1136 0
 1913 00a2 FFF7FEFF 		bl	SPI_1_Start
 1914              	.LVL192:
1140:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1915              		.loc 1 1140 0
 1916 00a6 FFF7FEFF 		bl	PWM_1_Start
 1917              	.LVL193:
1141:main.c        ****     PWM_Set(PWM_IDLE);   
 1918              		.loc 1 1141 0
 1919 00aa C820     		movs	r0, #200
 1920 00ac C000     		lsls	r0, r0, #3
 1921 00ae FFF7FEFF 		bl	PWM_1_WritePeriod
 1922              	.LVL194:
1142:main.c        ****     
 1923              		.loc 1 1142 0
 1924 00b2 1C48     		ldr	r0, .L120+40
 1925 00b4 FFF7FEFF 		bl	PWM_Set
 1926              	.LVL195:
1145:main.c        ****     
 1927              		.loc 1 1145 0
 1928 00b8 0024     		movs	r4, #0
 1929 00ba 1B4B     		ldr	r3, .L120+44
 1930 00bc 1C70     		strb	r4, [r3]
1148:main.c        ****    
 1931              		.loc 1 1148 0
 1932 00be 1B4B     		ldr	r3, .L120+48
 1933 00c0 1C70     		strb	r4, [r3]
1151:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1934              		.loc 1 1151 0
 1935 00c2 FFF7FEFF 		bl	Counter_1_Start
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 62


 1936              	.LVL196:
1152:main.c        ****     LastPosition = ENCODER_MAX;
 1937              		.loc 1 1152 0
 1938 00c6 1A4D     		ldr	r5, .L120+52
 1939 00c8 2800     		movs	r0, r5
 1940 00ca FFF7FEFF 		bl	Counter_1_WriteCounter
 1941              	.LVL197:
1153:main.c        ****     
 1942              		.loc 1 1153 0
 1943 00ce 194B     		ldr	r3, .L120+56
 1944 00d0 1D60     		str	r5, [r3]
1156:main.c        ****     Index_Counter_1_WriteCounter(0);
 1945              		.loc 1 1156 0
 1946 00d2 FFF7FEFF 		bl	Index_Counter_1_Start
 1947              	.LVL198:
1157:main.c        ****      
 1948              		.loc 1 1157 0
 1949 00d6 0020     		movs	r0, #0
 1950 00d8 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1951              	.LVL199:
1160:main.c        ****     
 1952              		.loc 1 1160 0
 1953 00dc FFF7FEFF 		bl	xTaskGetTickCount
 1954              	.LVL200:
 1955 00e0 154B     		ldr	r3, .L120+60
 1956 00e2 1860     		str	r0, [r3]
1163:main.c        ****     ConfigSequence = 0;
 1957              		.loc 1 1163 0
 1958 00e4 0122     		movs	r2, #1
 1959 00e6 154B     		ldr	r3, .L120+64
 1960 00e8 1A70     		strb	r2, [r3]
1164:main.c        ****     ChecksumErrors = 0;
 1961              		.loc 1 1164 0
 1962 00ea 154B     		ldr	r3, .L120+68
 1963 00ec 1C70     		strb	r4, [r3]
1165:main.c        ****    
 1964              		.loc 1 1165 0
 1965 00ee 154B     		ldr	r3, .L120+72
 1966 00f0 1C80     		strh	r4, [r3]
1170:main.c        ****    
 1967              		.loc 1 1170 0
 1968 00f2 FFF7FEFF 		bl	vTaskStartScheduler
 1969              	.LVL201:
1176:main.c        **** 
 1970              		.loc 1 1176 0
 1971 00f6 0120     		movs	r0, #1
 1972 00f8 03B0     		add	sp, sp, #12
 1973              		@ sp needed
 1974 00fa 30BD     		pop	{r4, r5, pc}
 1975              	.L121:
 1976              		.align	2
 1977              	.L120:
 1978 00fc 00000000 		.word	.LC89
 1979 0100 00000000 		.word	PID_Task
 1980 0104 04000000 		.word	.LC92
 1981 0108 00000000 		.word	Comm_Task
 1982 010c 14000000 		.word	.LC95
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 63


 1983 0110 00000000 		.word	Current_Read_Task
 1984 0114 00000000 		.word	Lock
 1985 0118 00000000 		.word	HomeIsrHandler
 1986 011c 00000000 		.word	RSTIsrHandler
 1987 0120 00000000 		.word	SPI_SS_IsrHandler
 1988 0124 00004842 		.word	1112014848
 1989 0128 00000000 		.word	Jog
 1990 012c 00000000 		.word	.LANCHOR0
 1991 0130 FFFFFF00 		.word	16777215
 1992 0134 00000000 		.word	LastPosition
 1993 0138 00000000 		.word	LastMessageTimeTick
 1994 013c 00000000 		.word	ConfigState
 1995 0140 00000000 		.word	ConfigSequence
 1996 0144 00000000 		.word	ChecksumErrors
 1997              		.cfi_endproc
 1998              	.LFE45:
 1999              		.size	main, .-main
 2000              		.comm	txMessageState,1,1
 2001              		.comm	txMessage,30,4
 2002              		.comm	rxMessage,30,4
 2003              		.comm	LastMessageTimeTick,4,4
 2004              		.comm	Lock,4,4
 2005              		.comm	uxHighWaterMark_Comm,4,4
 2006              		.comm	uxHighWaterMark_Current,4,4
 2007              		.comm	uxHighWaterMark_PID,4,4
 2008              		.comm	CurrentI2Cinbuf,20,4
 2009              		.comm	PWM,4,4
 2010              		.comm	Current,2,2
 2011              		.comm	ChecksumErrors,2,2
 2012              		.comm	ConfigSequence,1,1
 2013              		.comm	FaultState,1,1
 2014              		.comm	ConfigState,1,1
 2015              		.global	homingDone
 2016              		.comm	pwmMin,4,4
 2017              		.comm	pwmMax,4,4
 2018              		.comm	pwmLimit,4,4
 2019              		.comm	outMax_ITerm,4,4
 2020              		.comm	outMax_Total,4,4
 2021              		.global	refSampleTime
 2022              		.comm	kd,4,4
 2023              		.comm	ki,4,4
 2024              		.comm	kp,4,4
 2025              		.comm	refKd,4,4
 2026              		.comm	refKi,4,4
 2027              		.comm	refKp,4,4
 2028              		.comm	LastPosition,4,4
 2029              		.comm	Position,4,4
 2030              		.comm	ITerm,4,4
 2031              		.comm	Output,4,4
 2032              		.comm	lastTime,4,4
 2033              		.comm	PID_EffSetDelta,1,1
 2034              		.comm	PID_EffectiveSetpoint,4,4
 2035              		.comm	PID_Setpoint,4,4
 2036              		.comm	PID_Was_Enabled,1,1
 2037              		.comm	PID_Enabled,1,1
 2038              		.comm	LastJog,1,1
 2039              		.comm	Jog,1,1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 64


 2040              		.global	inAuto
 2041              		.data
 2042              		.align	2
 2043              		.set	.LANCHOR0,. + 0
 2044              		.type	homingDone, %object
 2045              		.size	homingDone, 1
 2046              	homingDone:
 2047 0000 01       		.byte	1
 2048 0001 000000   		.space	3
 2049              		.type	refSampleTime, %object
 2050              		.size	refSampleTime, 4
 2051              	refSampleTime:
 2052 0004 05000000 		.word	5
 2053              		.section	.rodata.str1.4,"aMS",%progbits,1
 2054              		.align	2
 2055              	.LC89:
 2056 0000 50494400 		.ascii	"PID\000"
 2057              	.LC92:
 2058 0004 436F6D6D 		.ascii	"Communications\000"
 2058      756E6963 
 2058      6174696F 
 2058      6E7300
 2059 0013 00       		.space	1
 2060              	.LC95:
 2061 0014 52656164 		.ascii	"Read Current\000"
 2061      20437572 
 2061      72656E74 
 2061      00
 2062              		.bss
 2063              		.align	2
 2064              		.set	.LANCHOR1,. + 0
 2065              		.type	RawPosition.7593, %object
 2066              		.size	RawPosition.7593, 4
 2067              	RawPosition.7593:
 2068 0000 00000000 		.space	4
 2069              		.type	result.7594, %object
 2070              		.size	result.7594, 4
 2071              	result.7594:
 2072 0004 00000000 		.space	4
 2073              		.type	inAuto, %object
 2074              		.size	inAuto, 1
 2075              	inAuto:
 2076 0008 00       		.space	1
 2077              		.text
 2078              	.Letext0:
 2079              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2080              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2081              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2082              		.file 5 ".\\FreeRTOS/portmacro.h"
 2083              		.file 6 ".\\FreeRTOS/queue.h"
 2084              		.file 7 ".\\FreeRTOS/semphr.h"
 2085              		.file 8 ".\\FreeRTOS/task.h"
 2086              		.file 9 "Generated_Source\\PSoC4/I2C.h"
 2087              		.file 10 "INA219.h"
 2088              		.file 11 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 2089              		.file 12 "Generated_Source\\PSoC4/Reset_Encoder.h"
 2090              		.file 13 "Generated_Source\\PSoC4/Counter_1.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 65


 2091              		.file 14 "Generated_Source\\PSoC4/Index_Counter_1.h"
 2092              		.file 15 "Generated_Source\\PSoC4/isr_home.h"
 2093              		.file 16 "Generated_Source\\PSoC4/HOME_IN.h"
 2094              		.file 17 "Generated_Source\\PSoC4/spi_ss.h"
 2095              		.file 18 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 2096              		.file 19 "Generated_Source\\PSoC4/CyLib.h"
 2097              		.file 20 "Generated_Source\\PSoC4/PWM_1.h"
 2098              		.file 21 "Generated_Source\\PSoC4/PROBE.h"
 2099              		.file 22 "Generated_Source\\PSoC4/CyLFClk.h"
 2100              		.file 23 "Generated_Source\\PSoC4/HOME_OUT.h"
 2101              		.file 24 "Generated_Source\\PSoC4/INDEX_OUT.h"
 2102              		.file 25 "Generated_Source\\PSoC4/LED.h"
 2103              		.file 26 "Generated_Source\\PSoC4/isr_spi_ss.h"
 2104              		.file 27 "Generated_Source\\PSoC4/SPI_1.h"
 2105              		.file 28 "Generated_Source\\PSoC4/core_cm0_psoc4.h"
 2106              		.section	.debug_info,"",%progbits
 2107              	.Ldebug_info0:
 2108 0000 9A130000 		.4byte	0x139a
 2109 0004 0400     		.2byte	0x4
 2110 0006 00000000 		.4byte	.Ldebug_abbrev0
 2111 000a 04       		.byte	0x4
 2112 000b 01       		.uleb128 0x1
 2113 000c 92020000 		.4byte	.LASF206
 2114 0010 0C       		.byte	0xc
 2115 0011 2C000000 		.4byte	.LASF207
 2116 0015 EC0A0000 		.4byte	.LASF208
 2117 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2118 001d 00000000 		.4byte	0
 2119 0021 00000000 		.4byte	.Ldebug_line0
 2120 0025 02       		.uleb128 0x2
 2121 0026 04       		.byte	0x4
 2122 0027 04       		.byte	0x4
 2123 0028 8F010000 		.4byte	.LASF0
 2124 002c 03       		.uleb128 0x3
 2125 002d 04       		.byte	0x4
 2126 002e 05       		.byte	0x5
 2127 002f 696E7400 		.ascii	"int\000"
 2128 0033 02       		.uleb128 0x2
 2129 0034 04       		.byte	0x4
 2130 0035 07       		.byte	0x7
 2131 0036 74000000 		.4byte	.LASF1
 2132 003a 02       		.uleb128 0x2
 2133 003b 08       		.byte	0x8
 2134 003c 05       		.byte	0x5
 2135 003d 55050000 		.4byte	.LASF2
 2136 0041 02       		.uleb128 0x2
 2137 0042 08       		.byte	0x8
 2138 0043 04       		.byte	0x4
 2139 0044 A4060000 		.4byte	.LASF3
 2140 0048 02       		.uleb128 0x2
 2141 0049 01       		.byte	0x1
 2142 004a 06       		.byte	0x6
 2143 004b F2090000 		.4byte	.LASF4
 2144 004f 04       		.uleb128 0x4
 2145 0050 3A080000 		.4byte	.LASF6
 2146 0054 02       		.byte	0x2
 2147 0055 1D       		.byte	0x1d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 66


 2148 0056 5A000000 		.4byte	0x5a
 2149 005a 02       		.uleb128 0x2
 2150 005b 01       		.byte	0x1
 2151 005c 08       		.byte	0x8
 2152 005d 17090000 		.4byte	.LASF5
 2153 0061 04       		.uleb128 0x4
 2154 0062 81050000 		.4byte	.LASF7
 2155 0066 02       		.byte	0x2
 2156 0067 29       		.byte	0x29
 2157 0068 6C000000 		.4byte	0x6c
 2158 006c 02       		.uleb128 0x2
 2159 006d 02       		.byte	0x2
 2160 006e 05       		.byte	0x5
 2161 006f 14070000 		.4byte	.LASF8
 2162 0073 02       		.uleb128 0x2
 2163 0074 02       		.byte	0x2
 2164 0075 07       		.byte	0x7
 2165 0076 FE090000 		.4byte	.LASF9
 2166 007a 02       		.uleb128 0x2
 2167 007b 04       		.byte	0x4
 2168 007c 05       		.byte	0x5
 2169 007d 5C070000 		.4byte	.LASF10
 2170 0081 04       		.uleb128 0x4
 2171 0082 35090000 		.4byte	.LASF11
 2172 0086 02       		.byte	0x2
 2173 0087 41       		.byte	0x41
 2174 0088 8C000000 		.4byte	0x8c
 2175 008c 02       		.uleb128 0x2
 2176 008d 04       		.byte	0x4
 2177 008e 07       		.byte	0x7
 2178 008f 9A080000 		.4byte	.LASF12
 2179 0093 02       		.uleb128 0x2
 2180 0094 08       		.byte	0x8
 2181 0095 07       		.byte	0x7
 2182 0096 E9010000 		.4byte	.LASF13
 2183 009a 04       		.uleb128 0x4
 2184 009b C1040000 		.4byte	.LASF14
 2185 009f 03       		.byte	0x3
 2186 00a0 18       		.byte	0x18
 2187 00a1 4F000000 		.4byte	0x4f
 2188 00a5 04       		.uleb128 0x4
 2189 00a6 DA010000 		.4byte	.LASF15
 2190 00aa 03       		.byte	0x3
 2191 00ab 20       		.byte	0x20
 2192 00ac 61000000 		.4byte	0x61
 2193 00b0 04       		.uleb128 0x4
 2194 00b1 53010000 		.4byte	.LASF16
 2195 00b5 03       		.byte	0x3
 2196 00b6 30       		.byte	0x30
 2197 00b7 81000000 		.4byte	0x81
 2198 00bb 05       		.uleb128 0x5
 2199 00bc 3C0A0000 		.4byte	.LASF17
 2200 00c0 04       		.byte	0x4
 2201 00c1 E401     		.2byte	0x1e4
 2202 00c3 5A000000 		.4byte	0x5a
 2203 00c7 05       		.uleb128 0x5
 2204 00c8 94040000 		.4byte	.LASF18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 67


 2205 00cc 04       		.byte	0x4
 2206 00cd E501     		.2byte	0x1e5
 2207 00cf 73000000 		.4byte	0x73
 2208 00d3 05       		.uleb128 0x5
 2209 00d4 DF050000 		.4byte	.LASF19
 2210 00d8 04       		.byte	0x4
 2211 00d9 E601     		.2byte	0x1e6
 2212 00db 8C000000 		.4byte	0x8c
 2213 00df 05       		.uleb128 0x5
 2214 00e0 9B040000 		.4byte	.LASF20
 2215 00e4 04       		.byte	0x4
 2216 00e5 E701     		.2byte	0x1e7
 2217 00e7 48000000 		.4byte	0x48
 2218 00eb 05       		.uleb128 0x5
 2219 00ec A1000000 		.4byte	.LASF21
 2220 00f0 04       		.byte	0x4
 2221 00f1 E801     		.2byte	0x1e8
 2222 00f3 6C000000 		.4byte	0x6c
 2223 00f7 05       		.uleb128 0x5
 2224 00f8 B1010000 		.4byte	.LASF22
 2225 00fc 04       		.byte	0x4
 2226 00fd E901     		.2byte	0x1e9
 2227 00ff 7A000000 		.4byte	0x7a
 2228 0103 02       		.uleb128 0x2
 2229 0104 08       		.byte	0x8
 2230 0105 04       		.byte	0x4
 2231 0106 420A0000 		.4byte	.LASF23
 2232 010a 02       		.uleb128 0x2
 2233 010b 01       		.byte	0x1
 2234 010c 08       		.byte	0x8
 2235 010d 44040000 		.4byte	.LASF24
 2236 0111 06       		.uleb128 0x6
 2237 0112 BB000000 		.4byte	0xbb
 2238 0116 06       		.uleb128 0x6
 2239 0117 C7000000 		.4byte	0xc7
 2240 011b 05       		.uleb128 0x5
 2241 011c C3060000 		.4byte	.LASF25
 2242 0120 04       		.byte	0x4
 2243 0121 9002     		.2byte	0x290
 2244 0123 27010000 		.4byte	0x127
 2245 0127 06       		.uleb128 0x6
 2246 0128 D3000000 		.4byte	0xd3
 2247 012c 05       		.uleb128 0x5
 2248 012d BD050000 		.4byte	.LASF26
 2249 0131 04       		.byte	0x4
 2250 0132 A002     		.2byte	0x2a0
 2251 0134 38010000 		.4byte	0x138
 2252 0138 07       		.uleb128 0x7
 2253 0139 04       		.byte	0x4
 2254 013a 3E010000 		.4byte	0x13e
 2255 013e 08       		.uleb128 0x8
 2256 013f 02       		.uleb128 0x2
 2257 0140 04       		.byte	0x4
 2258 0141 07       		.byte	0x7
 2259 0142 91080000 		.4byte	.LASF27
 2260 0146 09       		.uleb128 0x9
 2261 0147 04       		.byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 68


 2262 0148 0A       		.uleb128 0xa
 2263 0149 BE060000 		.4byte	.LASF209
 2264 014d 01       		.byte	0x1
 2265 014e 48000000 		.4byte	0x48
 2266 0152 1C       		.byte	0x1c
 2267 0153 17       		.byte	0x17
 2268 0154 77010000 		.4byte	0x177
 2269 0158 0B       		.uleb128 0xb
 2270 0159 8D070000 		.4byte	.LASF28
 2271 015d 72       		.sleb128 -14
 2272 015e 0B       		.uleb128 0xb
 2273 015f 250A0000 		.4byte	.LASF29
 2274 0163 73       		.sleb128 -13
 2275 0164 0B       		.uleb128 0xb
 2276 0165 57090000 		.4byte	.LASF30
 2277 0169 7B       		.sleb128 -5
 2278 016a 0B       		.uleb128 0xb
 2279 016b 12010000 		.4byte	.LASF31
 2280 016f 7E       		.sleb128 -2
 2281 0170 0B       		.uleb128 0xb
 2282 0171 75080000 		.4byte	.LASF32
 2283 0175 7F       		.sleb128 -1
 2284 0176 00       		.byte	0
 2285 0177 04       		.uleb128 0x4
 2286 0178 6E050000 		.4byte	.LASF33
 2287 017c 05       		.byte	0x5
 2288 017d 38       		.byte	0x38
 2289 017e 7A000000 		.4byte	0x7a
 2290 0182 04       		.uleb128 0x4
 2291 0183 49040000 		.4byte	.LASF34
 2292 0187 05       		.byte	0x5
 2293 0188 39       		.byte	0x39
 2294 0189 8C000000 		.4byte	0x8c
 2295 018d 04       		.uleb128 0x4
 2296 018e 7B060000 		.4byte	.LASF35
 2297 0192 05       		.byte	0x5
 2298 0193 3F       		.byte	0x3f
 2299 0194 B0000000 		.4byte	0xb0
 2300 0198 04       		.uleb128 0x4
 2301 0199 A7040000 		.4byte	.LASF36
 2302 019d 06       		.byte	0x6
 2303 019e 2E       		.byte	0x2e
 2304 019f 46010000 		.4byte	0x146
 2305 01a3 04       		.uleb128 0x4
 2306 01a4 A1070000 		.4byte	.LASF37
 2307 01a8 07       		.byte	0x7
 2308 01a9 25       		.byte	0x25
 2309 01aa 98010000 		.4byte	0x198
 2310 01ae 06       		.uleb128 0x6
 2311 01af 82010000 		.4byte	0x182
 2312 01b3 0C       		.uleb128 0xc
 2313 01b4 01       		.byte	0x1
 2314 01b5 5A000000 		.4byte	0x5a
 2315 01b9 01       		.byte	0x1
 2316 01ba 84       		.byte	0x84
 2317 01bb D8010000 		.4byte	0x1d8
 2318 01bf 0D       		.uleb128 0xd
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 69


 2319 01c0 C9060000 		.4byte	.LASF38
 2320 01c4 00       		.byte	0
 2321 01c5 0D       		.uleb128 0xd
 2322 01c6 61000000 		.4byte	.LASF39
 2323 01ca 01       		.byte	0x1
 2324 01cb 0D       		.uleb128 0xd
 2325 01cc 30010000 		.4byte	.LASF40
 2326 01d0 02       		.byte	0x2
 2327 01d1 0D       		.uleb128 0xd
 2328 01d2 65070000 		.4byte	.LASF41
 2329 01d6 03       		.byte	0x3
 2330 01d7 00       		.byte	0
 2331 01d8 04       		.uleb128 0x4
 2332 01d9 86060000 		.4byte	.LASF42
 2333 01dd 01       		.byte	0x1
 2334 01de 89       		.byte	0x89
 2335 01df B3010000 		.4byte	0x1b3
 2336 01e3 0C       		.uleb128 0xc
 2337 01e4 01       		.byte	0x1
 2338 01e5 5A000000 		.4byte	0x5a
 2339 01e9 01       		.byte	0x1
 2340 01ea 8E       		.byte	0x8e
 2341 01eb 26020000 		.4byte	0x226
 2342 01ef 0D       		.uleb128 0xd
 2343 01f0 EB040000 		.4byte	.LASF43
 2344 01f4 00       		.byte	0
 2345 01f5 0D       		.uleb128 0xd
 2346 01f6 57030000 		.4byte	.LASF44
 2347 01fa 01       		.byte	0x1
 2348 01fb 0D       		.uleb128 0xd
 2349 01fc 57000000 		.4byte	.LASF45
 2350 0200 02       		.byte	0x2
 2351 0201 0D       		.uleb128 0xd
 2352 0202 D0040000 		.4byte	.LASF46
 2353 0206 04       		.byte	0x4
 2354 0207 0D       		.uleb128 0xd
 2355 0208 06070000 		.4byte	.LASF47
 2356 020c 08       		.byte	0x8
 2357 020d 0D       		.uleb128 0xd
 2358 020e 63050000 		.4byte	.LASF48
 2359 0212 10       		.byte	0x10
 2360 0213 0D       		.uleb128 0xd
 2361 0214 63090000 		.4byte	.LASF49
 2362 0218 20       		.byte	0x20
 2363 0219 0D       		.uleb128 0xd
 2364 021a 68090000 		.4byte	.LASF50
 2365 021e 40       		.byte	0x40
 2366 021f 0D       		.uleb128 0xd
 2367 0220 6D090000 		.4byte	.LASF51
 2368 0224 80       		.byte	0x80
 2369 0225 00       		.byte	0
 2370 0226 04       		.uleb128 0x4
 2371 0227 C80A0000 		.4byte	.LASF52
 2372 022b 01       		.byte	0x1
 2373 022c 98       		.byte	0x98
 2374 022d E3010000 		.4byte	0x1e3
 2375 0231 0C       		.uleb128 0xc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 70


 2376 0232 01       		.byte	0x1
 2377 0233 5A000000 		.4byte	0x5a
 2378 0237 01       		.byte	0x1
 2379 0238 BD       		.byte	0xbd
 2380 0239 5C020000 		.4byte	0x25c
 2381 023d 0D       		.uleb128 0xd
 2382 023e 40090000 		.4byte	.LASF53
 2383 0242 00       		.byte	0
 2384 0243 0D       		.uleb128 0xd
 2385 0244 740A0000 		.4byte	.LASF54
 2386 0248 01       		.byte	0x1
 2387 0249 0D       		.uleb128 0xd
 2388 024a 44080000 		.4byte	.LASF55
 2389 024e 02       		.byte	0x2
 2390 024f 0D       		.uleb128 0xd
 2391 0250 79050000 		.4byte	.LASF56
 2392 0254 03       		.byte	0x3
 2393 0255 0D       		.uleb128 0xd
 2394 0256 65080000 		.4byte	.LASF57
 2395 025a 04       		.byte	0x4
 2396 025b 00       		.byte	0
 2397 025c 04       		.uleb128 0x4
 2398 025d 5C010000 		.4byte	.LASF58
 2399 0261 01       		.byte	0x1
 2400 0262 C3       		.byte	0xc3
 2401 0263 31020000 		.4byte	0x231
 2402 0267 0E       		.uleb128 0xe
 2403 0268 03       		.byte	0x3
 2404 0269 01       		.byte	0x1
 2405 026a C8       		.byte	0xc8
 2406 026b 94020000 		.4byte	0x294
 2407 026f 0F       		.uleb128 0xf
 2408 0270 A8010000 		.4byte	.LASF59
 2409 0274 01       		.byte	0x1
 2410 0275 C9       		.byte	0xc9
 2411 0276 BB000000 		.4byte	0xbb
 2412 027a 00       		.byte	0
 2413 027b 0F       		.uleb128 0xf
 2414 027c DA050000 		.4byte	.LASF60
 2415 0280 01       		.byte	0x1
 2416 0281 CA       		.byte	0xca
 2417 0282 BB000000 		.4byte	0xbb
 2418 0286 01       		.byte	0x1
 2419 0287 0F       		.uleb128 0xf
 2420 0288 A0040000 		.4byte	.LASF61
 2421 028c 01       		.byte	0x1
 2422 028d CB       		.byte	0xcb
 2423 028e BB000000 		.4byte	0xbb
 2424 0292 02       		.byte	0x2
 2425 0293 00       		.byte	0
 2426 0294 04       		.uleb128 0x4
 2427 0295 02040000 		.4byte	.LASF62
 2428 0299 01       		.byte	0x1
 2429 029a CC       		.byte	0xcc
 2430 029b 67020000 		.4byte	0x267
 2431 029f 0E       		.uleb128 0xe
 2432 02a0 13       		.byte	0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 71


 2433 02a1 01       		.byte	0x1
 2434 02a2 CF       		.byte	0xcf
 2435 02a3 1D030000 		.4byte	0x31d
 2436 02a7 0F       		.uleb128 0xf
 2437 02a8 A8010000 		.4byte	.LASF59
 2438 02ac 01       		.byte	0x1
 2439 02ad D0       		.byte	0xd0
 2440 02ae BB000000 		.4byte	0xbb
 2441 02b2 00       		.byte	0
 2442 02b3 0F       		.uleb128 0xf
 2443 02b4 DA050000 		.4byte	.LASF60
 2444 02b8 01       		.byte	0x1
 2445 02b9 D1       		.byte	0xd1
 2446 02ba BB000000 		.4byte	0xbb
 2447 02be 01       		.byte	0x1
 2448 02bf 0F       		.uleb128 0xf
 2449 02c0 A0040000 		.4byte	.LASF61
 2450 02c4 01       		.byte	0x1
 2451 02c5 D2       		.byte	0xd2
 2452 02c6 BB000000 		.4byte	0xbb
 2453 02ca 02       		.byte	0x2
 2454 02cb 0F       		.uleb128 0xf
 2455 02cc EF060000 		.4byte	.LASF63
 2456 02d0 01       		.byte	0x1
 2457 02d1 D3       		.byte	0xd3
 2458 02d2 BB000000 		.4byte	0xbb
 2459 02d6 03       		.byte	0x3
 2460 02d7 10       		.uleb128 0x10
 2461 02d8 4B7000   		.ascii	"Kp\000"
 2462 02db 01       		.byte	0x1
 2463 02dc D4       		.byte	0xd4
 2464 02dd 25000000 		.4byte	0x25
 2465 02e1 04       		.byte	0x4
 2466 02e2 10       		.uleb128 0x10
 2467 02e3 4B6900   		.ascii	"Ki\000"
 2468 02e6 01       		.byte	0x1
 2469 02e7 D5       		.byte	0xd5
 2470 02e8 25000000 		.4byte	0x25
 2471 02ec 08       		.byte	0x8
 2472 02ed 10       		.uleb128 0x10
 2473 02ee 4B6400   		.ascii	"Kd\000"
 2474 02f1 01       		.byte	0x1
 2475 02f2 D6       		.byte	0xd6
 2476 02f3 25000000 		.4byte	0x25
 2477 02f7 0C       		.byte	0xc
 2478 02f8 0F       		.uleb128 0xf
 2479 02f9 C9090000 		.4byte	.LASF64
 2480 02fd 01       		.byte	0x1
 2481 02fe D7       		.byte	0xd7
 2482 02ff BB000000 		.4byte	0xbb
 2483 0303 10       		.byte	0x10
 2484 0304 0F       		.uleb128 0xf
 2485 0305 20030000 		.4byte	.LASF65
 2486 0309 01       		.byte	0x1
 2487 030a D8       		.byte	0xd8
 2488 030b BB000000 		.4byte	0xbb
 2489 030f 11       		.byte	0x11
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 72


 2490 0310 0F       		.uleb128 0xf
 2491 0311 4B000000 		.4byte	.LASF66
 2492 0315 01       		.byte	0x1
 2493 0316 D9       		.byte	0xd9
 2494 0317 BB000000 		.4byte	0xbb
 2495 031b 12       		.byte	0x12
 2496 031c 00       		.byte	0
 2497 031d 04       		.uleb128 0x4
 2498 031e 28070000 		.4byte	.LASF67
 2499 0322 01       		.byte	0x1
 2500 0323 DA       		.byte	0xda
 2501 0324 9F020000 		.4byte	0x29f
 2502 0328 0E       		.uleb128 0xe
 2503 0329 0A       		.byte	0xa
 2504 032a 01       		.byte	0x1
 2505 032b DD       		.byte	0xdd
 2506 032c 85030000 		.4byte	0x385
 2507 0330 0F       		.uleb128 0xf
 2508 0331 A8010000 		.4byte	.LASF59
 2509 0335 01       		.byte	0x1
 2510 0336 DE       		.byte	0xde
 2511 0337 BB000000 		.4byte	0xbb
 2512 033b 00       		.byte	0
 2513 033c 0F       		.uleb128 0xf
 2514 033d DA050000 		.4byte	.LASF60
 2515 0341 01       		.byte	0x1
 2516 0342 DF       		.byte	0xdf
 2517 0343 BB000000 		.4byte	0xbb
 2518 0347 01       		.byte	0x1
 2519 0348 0F       		.uleb128 0xf
 2520 0349 A0040000 		.4byte	.LASF61
 2521 034d 01       		.byte	0x1
 2522 034e E0       		.byte	0xe0
 2523 034f BB000000 		.4byte	0xbb
 2524 0353 02       		.byte	0x2
 2525 0354 0F       		.uleb128 0xf
 2526 0355 51020000 		.4byte	.LASF68
 2527 0359 01       		.byte	0x1
 2528 035a E1       		.byte	0xe1
 2529 035b BB000000 		.4byte	0xbb
 2530 035f 03       		.byte	0x3
 2531 0360 0F       		.uleb128 0xf
 2532 0361 F0070000 		.4byte	.LASF69
 2533 0365 01       		.byte	0x1
 2534 0366 E2       		.byte	0xe2
 2535 0367 F7000000 		.4byte	0xf7
 2536 036b 04       		.byte	0x4
 2537 036c 10       		.uleb128 0x10
 2538 036d 6A6F6700 		.ascii	"jog\000"
 2539 0371 01       		.byte	0x1
 2540 0372 E3       		.byte	0xe3
 2541 0373 DF000000 		.4byte	0xdf
 2542 0377 08       		.byte	0x8
 2543 0378 0F       		.uleb128 0xf
 2544 0379 95000000 		.4byte	.LASF70
 2545 037d 01       		.byte	0x1
 2546 037e E4       		.byte	0xe4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 73


 2547 037f BB000000 		.4byte	0xbb
 2548 0383 09       		.byte	0x9
 2549 0384 00       		.byte	0
 2550 0385 04       		.uleb128 0x4
 2551 0386 70010000 		.4byte	.LASF71
 2552 038a 01       		.byte	0x1
 2553 038b E5       		.byte	0xe5
 2554 038c 28030000 		.4byte	0x328
 2555 0390 11       		.uleb128 0x11
 2556 0391 1E       		.byte	0x1e
 2557 0392 01       		.byte	0x1
 2558 0393 EA       		.byte	0xea
 2559 0394 C5030000 		.4byte	0x3c5
 2560 0398 12       		.uleb128 0x12
 2561 0399 62756600 		.ascii	"buf\000"
 2562 039d 01       		.byte	0x1
 2563 039e EB       		.byte	0xeb
 2564 039f C5030000 		.4byte	0x3c5
 2565 03a3 13       		.uleb128 0x13
 2566 03a4 55040000 		.4byte	.LASF72
 2567 03a8 01       		.byte	0x1
 2568 03a9 EC       		.byte	0xec
 2569 03aa 94020000 		.4byte	0x294
 2570 03ae 13       		.uleb128 0x13
 2571 03af FF060000 		.4byte	.LASF73
 2572 03b3 01       		.byte	0x1
 2573 03b4 ED       		.byte	0xed
 2574 03b5 1D030000 		.4byte	0x31d
 2575 03b9 13       		.uleb128 0x13
 2576 03ba C9040000 		.4byte	.LASF74
 2577 03be 01       		.byte	0x1
 2578 03bf EE       		.byte	0xee
 2579 03c0 85030000 		.4byte	0x385
 2580 03c4 00       		.byte	0
 2581 03c5 14       		.uleb128 0x14
 2582 03c6 BB000000 		.4byte	0xbb
 2583 03ca D5030000 		.4byte	0x3d5
 2584 03ce 15       		.uleb128 0x15
 2585 03cf 3F010000 		.4byte	0x13f
 2586 03d3 1D       		.byte	0x1d
 2587 03d4 00       		.byte	0
 2588 03d5 0E       		.uleb128 0xe
 2589 03d6 15       		.byte	0x15
 2590 03d7 01       		.byte	0x1
 2591 03d8 F2       		.byte	0xf2
 2592 03d9 7A040000 		.4byte	0x47a
 2593 03dd 0F       		.uleb128 0xf
 2594 03de A8010000 		.4byte	.LASF59
 2595 03e2 01       		.byte	0x1
 2596 03e3 F3       		.byte	0xf3
 2597 03e4 BB000000 		.4byte	0xbb
 2598 03e8 00       		.byte	0
 2599 03e9 0F       		.uleb128 0xf
 2600 03ea E7030000 		.4byte	.LASF75
 2601 03ee 01       		.byte	0x1
 2602 03ef F4       		.byte	0xf4
 2603 03f0 BB000000 		.4byte	0xbb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 74


 2604 03f4 01       		.byte	0x1
 2605 03f5 0F       		.uleb128 0xf
 2606 03f6 F0030000 		.4byte	.LASF76
 2607 03fa 01       		.byte	0x1
 2608 03fb F5       		.byte	0xf5
 2609 03fc BB000000 		.4byte	0xbb
 2610 0400 02       		.byte	0x2
 2611 0401 0F       		.uleb128 0xf
 2612 0402 F9030000 		.4byte	.LASF77
 2613 0406 01       		.byte	0x1
 2614 0407 F6       		.byte	0xf6
 2615 0408 BB000000 		.4byte	0xbb
 2616 040c 03       		.byte	0x3
 2617 040d 0F       		.uleb128 0xf
 2618 040e DA050000 		.4byte	.LASF60
 2619 0412 01       		.byte	0x1
 2620 0413 F7       		.byte	0xf7
 2621 0414 BB000000 		.4byte	0xbb
 2622 0418 04       		.byte	0x4
 2623 0419 0F       		.uleb128 0xf
 2624 041a A0040000 		.4byte	.LASF61
 2625 041e 01       		.byte	0x1
 2626 041f F8       		.byte	0xf8
 2627 0420 BB000000 		.4byte	0xbb
 2628 0424 05       		.byte	0x5
 2629 0425 0F       		.uleb128 0xf
 2630 0426 C3090000 		.4byte	.LASF78
 2631 042a 01       		.byte	0x1
 2632 042b F9       		.byte	0xf9
 2633 042c BB000000 		.4byte	0xbb
 2634 0430 06       		.byte	0x6
 2635 0431 0F       		.uleb128 0xf
 2636 0432 AB0A0000 		.4byte	.LASF79
 2637 0436 01       		.byte	0x1
 2638 0437 FA       		.byte	0xfa
 2639 0438 BB000000 		.4byte	0xbb
 2640 043c 07       		.byte	0x7
 2641 043d 0F       		.uleb128 0xf
 2642 043e EF060000 		.4byte	.LASF63
 2643 0442 01       		.byte	0x1
 2644 0443 FB       		.byte	0xfb
 2645 0444 BB000000 		.4byte	0xbb
 2646 0448 08       		.byte	0x8
 2647 0449 0F       		.uleb128 0xf
 2648 044a CA050000 		.4byte	.LASF80
 2649 044e 01       		.byte	0x1
 2650 044f FC       		.byte	0xfc
 2651 0450 C7000000 		.4byte	0xc7
 2652 0454 09       		.byte	0x9
 2653 0455 0F       		.uleb128 0xf
 2654 0456 340A0000 		.4byte	.LASF81
 2655 045a 01       		.byte	0x1
 2656 045b FD       		.byte	0xfd
 2657 045c EB000000 		.4byte	0xeb
 2658 0460 0B       		.byte	0xb
 2659 0461 0F       		.uleb128 0xf
 2660 0462 BF0A0000 		.4byte	.LASF82
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 75


 2661 0466 01       		.byte	0x1
 2662 0467 FE       		.byte	0xfe
 2663 0468 F7000000 		.4byte	0xf7
 2664 046c 0D       		.byte	0xd
 2665 046d 10       		.uleb128 0x10
 2666 046e 70776D00 		.ascii	"pwm\000"
 2667 0472 01       		.byte	0x1
 2668 0473 FF       		.byte	0xff
 2669 0474 25000000 		.4byte	0x25
 2670 0478 11       		.byte	0x11
 2671 0479 00       		.byte	0
 2672 047a 05       		.uleb128 0x5
 2673 047b E4070000 		.4byte	.LASF83
 2674 047f 01       		.byte	0x1
 2675 0480 0001     		.2byte	0x100
 2676 0482 D5030000 		.4byte	0x3d5
 2677 0486 16       		.uleb128 0x16
 2678 0487 1E       		.byte	0x1e
 2679 0488 01       		.byte	0x1
 2680 0489 0301     		.2byte	0x103
 2681 048b A8040000 		.4byte	0x4a8
 2682 048f 17       		.uleb128 0x17
 2683 0490 62756600 		.ascii	"buf\000"
 2684 0494 01       		.byte	0x1
 2685 0495 0401     		.2byte	0x104
 2686 0497 C5030000 		.4byte	0x3c5
 2687 049b 17       		.uleb128 0x17
 2688 049c 6D736700 		.ascii	"msg\000"
 2689 04a0 01       		.byte	0x1
 2690 04a1 0501     		.2byte	0x105
 2691 04a3 7A040000 		.4byte	0x47a
 2692 04a7 00       		.byte	0
 2693 04a8 18       		.uleb128 0x18
 2694 04a9 01       		.byte	0x1
 2695 04aa 5A000000 		.4byte	0x5a
 2696 04ae 01       		.byte	0x1
 2697 04af 0901     		.2byte	0x109
 2698 04b1 C2040000 		.4byte	0x4c2
 2699 04b5 0D       		.uleb128 0xd
 2700 04b6 3C000000 		.4byte	.LASF84
 2701 04ba 00       		.byte	0
 2702 04bb 0D       		.uleb128 0xd
 2703 04bc E6050000 		.4byte	.LASF85
 2704 04c0 01       		.byte	0x1
 2705 04c1 00       		.byte	0
 2706 04c2 05       		.uleb128 0x5
 2707 04c3 EF000000 		.4byte	.LASF86
 2708 04c7 01       		.byte	0x1
 2709 04c8 0C01     		.2byte	0x10c
 2710 04ca A8040000 		.4byte	0x4a8
 2711 04ce 19       		.uleb128 0x19
 2712 04cf 00000000 		.4byte	.LASF97
 2713 04d3 01       		.byte	0x1
 2714 04d4 7301     		.2byte	0x173
 2715 04d6 00000000 		.4byte	.LFB35
 2716 04da 44000000 		.4byte	.LFE35-.LFB35
 2717 04de 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 76


 2718 04df 9C       		.byte	0x9c
 2719 04e0 79050000 		.4byte	0x579
 2720 04e4 1A       		.uleb128 0x1a
 2721 04e5 61726700 		.ascii	"arg\000"
 2722 04e9 01       		.byte	0x1
 2723 04ea 7301     		.2byte	0x173
 2724 04ec 46010000 		.4byte	0x146
 2725 04f0 00000000 		.4byte	.LLST0
 2726 04f4 1B       		.uleb128 0x1b
 2727 04f5 65727200 		.ascii	"err\000"
 2728 04f9 01       		.byte	0x1
 2729 04fa 7501     		.2byte	0x175
 2730 04fc 27010000 		.4byte	0x127
 2731 0500 1C       		.uleb128 0x1c
 2732 0501 B3030000 		.4byte	.LASF90
 2733 0505 01       		.byte	0x1
 2734 0506 7601     		.2byte	0x176
 2735 0508 25000000 		.4byte	0x25
 2736 050c 21000000 		.4byte	.LLST1
 2737 0510 1D       		.uleb128 0x1d
 2738 0511 08000000 		.4byte	.LVL2
 2739 0515 A1110000 		.4byte	0x11a1
 2740 0519 23050000 		.4byte	0x523
 2741 051d 1E       		.uleb128 0x1e
 2742 051e 01       		.uleb128 0x1
 2743 051f 50       		.byte	0x50
 2744 0520 01       		.uleb128 0x1
 2745 0521 30       		.byte	0x30
 2746 0522 00       		.byte	0
 2747 0523 1F       		.uleb128 0x1f
 2748 0524 10000000 		.4byte	.LVL3
 2749 0528 AD110000 		.4byte	0x11ad
 2750 052c 1D       		.uleb128 0x1d
 2751 052d 16000000 		.4byte	.LVL4
 2752 0531 B8110000 		.4byte	0x11b8
 2753 0535 40050000 		.4byte	0x540
 2754 0539 1E       		.uleb128 0x1e
 2755 053a 01       		.uleb128 0x1
 2756 053b 50       		.byte	0x50
 2757 053c 02       		.uleb128 0x2
 2758 053d 08       		.byte	0x8
 2759 053e 40       		.byte	0x40
 2760 053f 00       		.byte	0
 2761 0540 1D       		.uleb128 0x1d
 2762 0541 1C000000 		.4byte	.LVL5
 2763 0545 C3110000 		.4byte	0x11c3
 2764 0549 54050000 		.4byte	0x554
 2765 054d 1E       		.uleb128 0x1e
 2766 054e 01       		.uleb128 0x1
 2767 054f 50       		.byte	0x50
 2768 0550 02       		.uleb128 0x2
 2769 0551 08       		.byte	0x8
 2770 0552 40       		.byte	0x40
 2771 0553 00       		.byte	0
 2772 0554 1D       		.uleb128 0x1d
 2773 0555 2E000000 		.4byte	.LVL7
 2774 0559 CE110000 		.4byte	0x11ce
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 77


 2775 055d 69050000 		.4byte	0x569
 2776 0561 1E       		.uleb128 0x1e
 2777 0562 01       		.uleb128 0x1
 2778 0563 50       		.byte	0x50
 2779 0564 03       		.uleb128 0x3
 2780 0565 0A       		.byte	0xa
 2781 0566 F401     		.2byte	0x1f4
 2782 0568 00       		.byte	0
 2783 0569 20       		.uleb128 0x20
 2784 056a 34000000 		.4byte	.LVL8
 2785 056e A1110000 		.4byte	0x11a1
 2786 0572 1E       		.uleb128 0x1e
 2787 0573 01       		.uleb128 0x1
 2788 0574 50       		.byte	0x50
 2789 0575 01       		.uleb128 0x1
 2790 0576 30       		.byte	0x30
 2791 0577 00       		.byte	0
 2792 0578 00       		.byte	0
 2793 0579 21       		.uleb128 0x21
 2794 057a B10A0000 		.4byte	.LASF87
 2795 057e 01       		.byte	0x1
 2796 057f A504     		.2byte	0x4a5
 2797 0581 00000000 		.4byte	.LFB46
 2798 0585 24000000 		.4byte	.LFE46-.LFB46
 2799 0589 01       		.uleb128 0x1
 2800 058a 9C       		.byte	0x9c
 2801 058b C4050000 		.4byte	0x5c4
 2802 058f 1F       		.uleb128 0x1f
 2803 0590 06000000 		.4byte	.LVL9
 2804 0594 DA110000 		.4byte	0x11da
 2805 0598 1F       		.uleb128 0x1f
 2806 0599 0A000000 		.4byte	.LVL10
 2807 059d E5110000 		.4byte	0x11e5
 2808 05a1 1D       		.uleb128 0x1d
 2809 05a2 10000000 		.4byte	.LVL11
 2810 05a6 F0110000 		.4byte	0x11f0
 2811 05aa B4050000 		.4byte	0x5b4
 2812 05ae 1E       		.uleb128 0x1e
 2813 05af 01       		.uleb128 0x1
 2814 05b0 50       		.byte	0x50
 2815 05b1 01       		.uleb128 0x1
 2816 05b2 30       		.byte	0x30
 2817 05b3 00       		.byte	0
 2818 05b4 20       		.uleb128 0x20
 2819 05b5 16000000 		.4byte	.LVL12
 2820 05b9 FB110000 		.4byte	0x11fb
 2821 05bd 1E       		.uleb128 0x1e
 2822 05be 01       		.uleb128 0x1
 2823 05bf 50       		.byte	0x50
 2824 05c0 01       		.uleb128 0x1
 2825 05c1 30       		.byte	0x30
 2826 05c2 00       		.byte	0
 2827 05c3 00       		.byte	0
 2828 05c4 21       		.uleb128 0x21
 2829 05c5 E0000000 		.4byte	.LASF88
 2830 05c9 01       		.byte	0x1
 2831 05ca C204     		.2byte	0x4c2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 78


 2832 05cc 00000000 		.4byte	.LFB47
 2833 05d0 1C000000 		.4byte	.LFE47-.LFB47
 2834 05d4 01       		.uleb128 0x1
 2835 05d5 9C       		.byte	0x9c
 2836 05d6 FC050000 		.4byte	0x5fc
 2837 05da 1F       		.uleb128 0x1f
 2838 05db 06000000 		.4byte	.LVL13
 2839 05df 06120000 		.4byte	0x1206
 2840 05e3 1F       		.uleb128 0x1f
 2841 05e4 0A000000 		.4byte	.LVL14
 2842 05e8 11120000 		.4byte	0x1211
 2843 05ec 20       		.uleb128 0x20
 2844 05ed 10000000 		.4byte	.LVL15
 2845 05f1 F0110000 		.4byte	0x11f0
 2846 05f5 1E       		.uleb128 0x1e
 2847 05f6 01       		.uleb128 0x1
 2848 05f7 50       		.byte	0x50
 2849 05f8 01       		.uleb128 0x1
 2850 05f9 30       		.byte	0x30
 2851 05fa 00       		.byte	0
 2852 05fb 00       		.byte	0
 2853 05fc 21       		.uleb128 0x21
 2854 05fd 51060000 		.4byte	.LASF89
 2855 0601 01       		.byte	0x1
 2856 0602 DC04     		.2byte	0x4dc
 2857 0604 00000000 		.4byte	.LFB48
 2858 0608 5C000000 		.4byte	.LFE48-.LFB48
 2859 060c 01       		.uleb128 0x1
 2860 060d 9C       		.byte	0x9c
 2861 060e 78060000 		.4byte	0x678
 2862 0612 22       		.uleb128 0x22
 2863 0613 6900     		.ascii	"i\000"
 2864 0615 01       		.byte	0x1
 2865 0616 DE04     		.2byte	0x4de
 2866 0618 D3000000 		.4byte	0xd3
 2867 061c 34000000 		.4byte	.LLST2
 2868 0620 1F       		.uleb128 0x1f
 2869 0621 06000000 		.4byte	.LVL16
 2870 0625 1C120000 		.4byte	0x121c
 2871 0629 1F       		.uleb128 0x1f
 2872 062a 0A000000 		.4byte	.LVL17
 2873 062e 27120000 		.4byte	0x1227
 2874 0632 1F       		.uleb128 0x1f
 2875 0633 12000000 		.4byte	.LVL18
 2876 0637 32120000 		.4byte	0x1232
 2877 063b 1D       		.uleb128 0x1d
 2878 063c 28000000 		.4byte	.LVL19
 2879 0640 3E120000 		.4byte	0x123e
 2880 0644 5C060000 		.4byte	0x65c
 2881 0648 1E       		.uleb128 0x1e
 2882 0649 01       		.uleb128 0x1
 2883 064a 50       		.byte	0x50
 2884 064b 05       		.uleb128 0x5
 2885 064c 03       		.byte	0x3
 2886 064d 00000000 		.4byte	txMessage
 2887 0651 1E       		.uleb128 0x1e
 2888 0652 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 79


 2889 0653 51       		.byte	0x51
 2890 0654 01       		.uleb128 0x1
 2891 0655 30       		.byte	0x30
 2892 0656 1E       		.uleb128 0x1e
 2893 0657 01       		.uleb128 0x1
 2894 0658 52       		.byte	0x52
 2895 0659 01       		.uleb128 0x1
 2896 065a 4E       		.byte	0x4e
 2897 065b 00       		.byte	0
 2898 065c 1F       		.uleb128 0x1f
 2899 065d 30000000 		.4byte	.LVL21
 2900 0661 47120000 		.4byte	0x1247
 2901 0665 1F       		.uleb128 0x1f
 2902 0666 3E000000 		.4byte	.LVL23
 2903 066a 53120000 		.4byte	0x1253
 2904 066e 1F       		.uleb128 0x1f
 2905 066f 42000000 		.4byte	.LVL24
 2906 0673 5F120000 		.4byte	0x125f
 2907 0677 00       		.byte	0
 2908 0678 21       		.uleb128 0x21
 2909 0679 10020000 		.4byte	.LASF91
 2910 067d 01       		.byte	0x1
 2911 067e 2601     		.2byte	0x126
 2912 0680 00000000 		.4byte	.LFB32
 2913 0684 28000000 		.4byte	.LFE32-.LFB32
 2914 0688 01       		.uleb128 0x1
 2915 0689 9C       		.byte	0x9c
 2916 068a C4060000 		.4byte	0x6c4
 2917 068e 1D       		.uleb128 0x1d
 2918 068f 0A000000 		.4byte	.LVL26
 2919 0693 6B120000 		.4byte	0x126b
 2920 0697 A1060000 		.4byte	0x6a1
 2921 069b 1E       		.uleb128 0x1e
 2922 069c 01       		.uleb128 0x1
 2923 069d 50       		.byte	0x50
 2924 069e 01       		.uleb128 0x1
 2925 069f 3B       		.byte	0x3b
 2926 06a0 00       		.byte	0
 2927 06a1 1D       		.uleb128 0x1d
 2928 06a2 12000000 		.4byte	.LVL27
 2929 06a6 6B120000 		.4byte	0x126b
 2930 06aa B4060000 		.4byte	0x6b4
 2931 06ae 1E       		.uleb128 0x1e
 2932 06af 01       		.uleb128 0x1
 2933 06b0 50       		.byte	0x50
 2934 06b1 01       		.uleb128 0x1
 2935 06b2 3E       		.byte	0x3e
 2936 06b3 00       		.byte	0
 2937 06b4 20       		.uleb128 0x20
 2938 06b5 1A000000 		.4byte	.LVL28
 2939 06b9 6B120000 		.4byte	0x126b
 2940 06bd 1E       		.uleb128 0x1e
 2941 06be 01       		.uleb128 0x1
 2942 06bf 50       		.byte	0x50
 2943 06c0 01       		.uleb128 0x1
 2944 06c1 3F       		.byte	0x3f
 2945 06c2 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 80


 2946 06c3 00       		.byte	0
 2947 06c4 21       		.uleb128 0x21
 2948 06c5 83010000 		.4byte	.LASF92
 2949 06c9 01       		.byte	0x1
 2950 06ca 3E01     		.2byte	0x13e
 2951 06cc 00000000 		.4byte	.LFB33
 2952 06d0 1C000000 		.4byte	.LFE33-.LFB33
 2953 06d4 01       		.uleb128 0x1
 2954 06d5 9C       		.byte	0x9c
 2955 06d6 EB060000 		.4byte	0x6eb
 2956 06da 23       		.uleb128 0x23
 2957 06db AB0A0000 		.4byte	.LASF79
 2958 06df 01       		.byte	0x1
 2959 06e0 3E01     		.2byte	0x13e
 2960 06e2 26020000 		.4byte	0x226
 2961 06e6 53000000 		.4byte	.LLST3
 2962 06ea 00       		.byte	0
 2963 06eb 21       		.uleb128 0x21
 2964 06ec 07010000 		.4byte	.LASF93
 2965 06f0 01       		.byte	0x1
 2966 06f1 5901     		.2byte	0x159
 2967 06f3 00000000 		.4byte	.LFB34
 2968 06f7 1C000000 		.4byte	.LFE34-.LFB34
 2969 06fb 01       		.uleb128 0x1
 2970 06fc 9C       		.byte	0x9c
 2971 06fd 10070000 		.4byte	0x710
 2972 0701 24       		.uleb128 0x24
 2973 0702 AB0A0000 		.4byte	.LASF79
 2974 0706 01       		.byte	0x1
 2975 0707 5901     		.2byte	0x159
 2976 0709 26020000 		.4byte	0x226
 2977 070d 01       		.uleb128 0x1
 2978 070e 50       		.byte	0x50
 2979 070f 00       		.byte	0
 2980 0710 25       		.uleb128 0x25
 2981 0711 69040000 		.4byte	.LASF94
 2982 0715 01       		.byte	0x1
 2983 0716 6602     		.2byte	0x266
 2984 0718 00000000 		.4byte	.LFB37
 2985 071c 40000000 		.4byte	.LFE37-.LFB37
 2986 0720 01       		.uleb128 0x1
 2987 0721 9C       		.byte	0x9c
 2988 0722 50070000 		.4byte	0x750
 2989 0726 23       		.uleb128 0x23
 2990 0727 81090000 		.4byte	.LASF95
 2991 072b 01       		.byte	0x1
 2992 072c 6602     		.2byte	0x266
 2993 072e 25000000 		.4byte	0x25
 2994 0732 74000000 		.4byte	.LLST4
 2995 0736 1C       		.uleb128 0x1c
 2996 0737 6D030000 		.4byte	.LASF96
 2997 073b 01       		.byte	0x1
 2998 073c 6802     		.2byte	0x268
 2999 073e 25000000 		.4byte	0x25
 3000 0742 A2000000 		.4byte	.LLST5
 3001 0746 1F       		.uleb128 0x1f
 3002 0747 36000000 		.4byte	.LVL39
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 81


 3003 074b 76120000 		.4byte	0x1276
 3004 074f 00       		.byte	0
 3005 0750 26       		.uleb128 0x26
 3006 0751 F9070000 		.4byte	.LASF98
 3007 0755 01       		.byte	0x1
 3008 0756 7D02     		.2byte	0x27d
 3009 0758 F7000000 		.4byte	0xf7
 3010 075c 00000000 		.4byte	.LFB38
 3011 0760 44000000 		.4byte	.LFE38-.LFB38
 3012 0764 01       		.uleb128 0x1
 3013 0765 9C       		.byte	0x9c
 3014 0766 98070000 		.4byte	0x798
 3015 076a 27       		.uleb128 0x27
 3016 076b D8070000 		.4byte	.LASF99
 3017 076f 01       		.byte	0x1
 3018 0770 7F02     		.2byte	0x27f
 3019 0772 27010000 		.4byte	0x127
 3020 0776 05       		.uleb128 0x5
 3021 0777 03       		.byte	0x3
 3022 0778 00000000 		.4byte	RawPosition.7593
 3023 077c 27       		.uleb128 0x27
 3024 077d E2010000 		.4byte	.LASF100
 3025 0781 01       		.byte	0x1
 3026 0782 8002     		.2byte	0x280
 3027 0784 98070000 		.4byte	0x798
 3028 0788 05       		.uleb128 0x5
 3029 0789 03       		.byte	0x3
 3030 078a 04000000 		.4byte	result.7594
 3031 078e 1F       		.uleb128 0x1f
 3032 078f 06000000 		.4byte	.LVL42
 3033 0793 82120000 		.4byte	0x1282
 3034 0797 00       		.byte	0
 3035 0798 06       		.uleb128 0x6
 3036 0799 F7000000 		.4byte	0xf7
 3037 079d 19       		.uleb128 0x19
 3038 079e 6B080000 		.4byte	.LASF101
 3039 07a2 01       		.byte	0x1
 3040 07a3 9601     		.2byte	0x196
 3041 07a5 00000000 		.4byte	.LFB36
 3042 07a9 D4020000 		.4byte	.LFE36-.LFB36
 3043 07ad 01       		.uleb128 0x1
 3044 07ae 9C       		.byte	0x9c
 3045 07af DE080000 		.4byte	0x8de
 3046 07b3 1A       		.uleb128 0x1a
 3047 07b4 61726700 		.ascii	"arg\000"
 3048 07b8 01       		.byte	0x1
 3049 07b9 9601     		.2byte	0x196
 3050 07bb 46010000 		.4byte	0x146
 3051 07bf CB000000 		.4byte	.LLST6
 3052 07c3 1C       		.uleb128 0x1c
 3053 07c4 A0040000 		.4byte	.LASF61
 3054 07c8 01       		.byte	0x1
 3055 07c9 9801     		.2byte	0x198
 3056 07cb 5C020000 		.4byte	0x25c
 3057 07cf EC000000 		.4byte	.LLST7
 3058 07d3 1C       		.uleb128 0x1c
 3059 07d4 DA050000 		.4byte	.LASF60
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 82


 3060 07d8 01       		.byte	0x1
 3061 07d9 9901     		.2byte	0x199
 3062 07db BB000000 		.4byte	0xbb
 3063 07df 0A010000 		.4byte	.LLST8
 3064 07e3 22       		.uleb128 0x22
 3065 07e4 6900     		.ascii	"i\000"
 3066 07e6 01       		.byte	0x1
 3067 07e7 9A01     		.2byte	0x19a
 3068 07e9 BB000000 		.4byte	0xbb
 3069 07ed 28010000 		.4byte	.LLST9
 3070 07f1 1C       		.uleb128 0x1c
 3071 07f2 A8010000 		.4byte	.LASF59
 3072 07f6 01       		.byte	0x1
 3073 07f7 9B01     		.2byte	0x19b
 3074 07f9 BB000000 		.4byte	0xbb
 3075 07fd 7F010000 		.4byte	.LLST10
 3076 0801 1C       		.uleb128 0x1c
 3077 0802 D0000000 		.4byte	.LASF102
 3078 0806 01       		.byte	0x1
 3079 0807 9C01     		.2byte	0x19c
 3080 0809 BB000000 		.4byte	0xbb
 3081 080d E1010000 		.4byte	.LLST11
 3082 0811 1D       		.uleb128 0x1d
 3083 0812 08000000 		.4byte	.LVL45
 3084 0816 A1110000 		.4byte	0x11a1
 3085 081a 24080000 		.4byte	0x824
 3086 081e 1E       		.uleb128 0x1e
 3087 081f 01       		.uleb128 0x1
 3088 0820 50       		.byte	0x50
 3089 0821 01       		.uleb128 0x1
 3090 0822 30       		.byte	0x30
 3091 0823 00       		.byte	0
 3092 0824 1D       		.uleb128 0x1d
 3093 0825 2A000000 		.4byte	.LVL46
 3094 0829 8D120000 		.4byte	0x128d
 3095 082d 37080000 		.4byte	0x837
 3096 0831 1E       		.uleb128 0x1e
 3097 0832 01       		.uleb128 0x1
 3098 0833 51       		.byte	0x51
 3099 0834 01       		.uleb128 0x1
 3100 0835 34       		.byte	0x34
 3101 0836 00       		.byte	0
 3102 0837 1D       		.uleb128 0x1d
 3103 0838 3C010000 		.4byte	.LVL71
 3104 083c EB060000 		.4byte	0x6eb
 3105 0840 4A080000 		.4byte	0x84a
 3106 0844 1E       		.uleb128 0x1e
 3107 0845 01       		.uleb128 0x1
 3108 0846 50       		.byte	0x50
 3109 0847 01       		.uleb128 0x1
 3110 0848 30       		.byte	0x30
 3111 0849 00       		.byte	0
 3112 084a 1F       		.uleb128 0x1f
 3113 084b 6C010000 		.4byte	.LVL75
 3114 084f 50070000 		.4byte	0x750
 3115 0853 1D       		.uleb128 0x1d
 3116 0854 98010000 		.4byte	.LVL77
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 83


 3117 0858 FB110000 		.4byte	0x11fb
 3118 085c 66080000 		.4byte	0x866
 3119 0860 1E       		.uleb128 0x1e
 3120 0861 01       		.uleb128 0x1
 3121 0862 50       		.byte	0x50
 3122 0863 01       		.uleb128 0x1
 3123 0864 30       		.byte	0x30
 3124 0865 00       		.byte	0
 3125 0866 1F       		.uleb128 0x1f
 3126 0867 A6010000 		.4byte	.LVL78
 3127 086b 50070000 		.4byte	0x750
 3128 086f 1D       		.uleb128 0x1d
 3129 0870 2C020000 		.4byte	.LVL86
 3130 0874 99120000 		.4byte	0x1299
 3131 0878 8B080000 		.4byte	0x88b
 3132 087c 1E       		.uleb128 0x1e
 3133 087d 01       		.uleb128 0x1
 3134 087e 50       		.byte	0x50
 3135 087f 05       		.uleb128 0x5
 3136 0880 03       		.byte	0x3
 3137 0881 00000000 		.4byte	txMessage
 3138 0885 1E       		.uleb128 0x1e
 3139 0886 01       		.uleb128 0x1
 3140 0887 51       		.byte	0x51
 3141 0888 01       		.uleb128 0x1
 3142 0889 4E       		.byte	0x4e
 3143 088a 00       		.byte	0
 3144 088b 1D       		.uleb128 0x1d
 3145 088c 40020000 		.4byte	.LVL87
 3146 0890 EB060000 		.4byte	0x6eb
 3147 0894 9E080000 		.4byte	0x89e
 3148 0898 1E       		.uleb128 0x1e
 3149 0899 01       		.uleb128 0x1
 3150 089a 50       		.byte	0x50
 3151 089b 01       		.uleb128 0x1
 3152 089c 30       		.byte	0x30
 3153 089d 00       		.byte	0
 3154 089e 1D       		.uleb128 0x1d
 3155 089f 4E020000 		.4byte	.LVL88
 3156 08a3 A5120000 		.4byte	0x12a5
 3157 08a7 BB080000 		.4byte	0x8bb
 3158 08ab 1E       		.uleb128 0x1e
 3159 08ac 01       		.uleb128 0x1
 3160 08ad 51       		.byte	0x51
 3161 08ae 01       		.uleb128 0x1
 3162 08af 30       		.byte	0x30
 3163 08b0 1E       		.uleb128 0x1e
 3164 08b1 01       		.uleb128 0x1
 3165 08b2 52       		.byte	0x52
 3166 08b3 01       		.uleb128 0x1
 3167 08b4 30       		.byte	0x30
 3168 08b5 1E       		.uleb128 0x1e
 3169 08b6 01       		.uleb128 0x1
 3170 08b7 53       		.byte	0x53
 3171 08b8 01       		.uleb128 0x1
 3172 08b9 30       		.byte	0x30
 3173 08ba 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 84


 3174 08bb 1D       		.uleb128 0x1d
 3175 08bc 54020000 		.4byte	.LVL89
 3176 08c0 CE110000 		.4byte	0x11ce
 3177 08c4 CE080000 		.4byte	0x8ce
 3178 08c8 1E       		.uleb128 0x1e
 3179 08c9 01       		.uleb128 0x1
 3180 08ca 50       		.byte	0x50
 3181 08cb 01       		.uleb128 0x1
 3182 08cc 31       		.byte	0x31
 3183 08cd 00       		.byte	0
 3184 08ce 20       		.uleb128 0x20
 3185 08cf 5A020000 		.4byte	.LVL90
 3186 08d3 A1110000 		.4byte	0x11a1
 3187 08d7 1E       		.uleb128 0x1e
 3188 08d8 01       		.uleb128 0x1
 3189 08d9 50       		.byte	0x50
 3190 08da 01       		.uleb128 0x1
 3191 08db 30       		.byte	0x30
 3192 08dc 00       		.byte	0
 3193 08dd 00       		.byte	0
 3194 08de 21       		.uleb128 0x21
 3195 08df 110A0000 		.4byte	.LASF103
 3196 08e3 01       		.byte	0x1
 3197 08e4 A102     		.2byte	0x2a1
 3198 08e6 00000000 		.4byte	.LFB39
 3199 08ea 30000000 		.4byte	.LFE39-.LFB39
 3200 08ee 01       		.uleb128 0x1
 3201 08ef 9C       		.byte	0x9c
 3202 08f0 FE080000 		.4byte	0x8fe
 3203 08f4 1F       		.uleb128 0x1f
 3204 08f5 06000000 		.4byte	.LVL91
 3205 08f9 50070000 		.4byte	0x750
 3206 08fd 00       		.byte	0
 3207 08fe 25       		.uleb128 0x25
 3208 08ff 95060000 		.4byte	.LASF104
 3209 0903 01       		.byte	0x1
 3210 0904 BA02     		.2byte	0x2ba
 3211 0906 00000000 		.4byte	.LFB40
 3212 090a 44000000 		.4byte	.LFE40-.LFB40
 3213 090e 01       		.uleb128 0x1
 3214 090f 9C       		.byte	0x9c
 3215 0910 6F090000 		.4byte	0x96f
 3216 0914 23       		.uleb128 0x23
 3217 0915 E1060000 		.4byte	.LASF105
 3218 0919 01       		.byte	0x1
 3219 091a BA02     		.2byte	0x2ba
 3220 091c D3000000 		.4byte	0xd3
 3221 0920 FF010000 		.4byte	.LLST12
 3222 0924 23       		.uleb128 0x23
 3223 0925 B3000000 		.4byte	.LASF106
 3224 0929 01       		.byte	0x1
 3225 092a BA02     		.2byte	0x2ba
 3226 092c 25000000 		.4byte	0x25
 3227 0930 20020000 		.4byte	.LLST13
 3228 0934 23       		.uleb128 0x23
 3229 0935 AD000000 		.4byte	.LASF107
 3230 0939 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 85


 3231 093a BA02     		.2byte	0x2ba
 3232 093c 25000000 		.4byte	0x25
 3233 0940 4E020000 		.4byte	.LLST14
 3234 0944 23       		.uleb128 0x23
 3235 0945 A7000000 		.4byte	.LASF108
 3236 0949 01       		.byte	0x1
 3237 094a BA02     		.2byte	0x2ba
 3238 094c 25000000 		.4byte	0x25
 3239 0950 7C020000 		.4byte	.LLST15
 3240 0954 28       		.uleb128 0x28
 3241 0955 0C000000 		.4byte	.LBB2
 3242 0959 26000000 		.4byte	.LBE2-.LBB2
 3243 095d 1C       		.uleb128 0x1c
 3244 095e 6B070000 		.4byte	.LASF109
 3245 0962 01       		.byte	0x1
 3246 0963 BE02     		.2byte	0x2be
 3247 0965 25000000 		.4byte	0x25
 3248 0969 AA020000 		.4byte	.LLST16
 3249 096d 00       		.byte	0
 3250 096e 00       		.byte	0
 3251 096f 29       		.uleb128 0x29
 3252 0970 D5060000 		.4byte	.LASF110
 3253 0974 01       		.byte	0x1
 3254 0975 D002     		.2byte	0x2d0
 3255 0977 25000000 		.4byte	0x25
 3256 097b 00000000 		.4byte	.LFB41
 3257 097f 38010000 		.4byte	.LFE41-.LFB41
 3258 0983 01       		.uleb128 0x1
 3259 0984 9C       		.byte	0x9c
 3260 0985 EC090000 		.4byte	0x9ec
 3261 0989 1A       		.uleb128 0x1a
 3262 098a 6E6F7700 		.ascii	"now\000"
 3263 098e 01       		.byte	0x1
 3264 098f D002     		.2byte	0x2d0
 3265 0991 D3000000 		.4byte	0xd3
 3266 0995 C8020000 		.4byte	.LLST17
 3267 0999 23       		.uleb128 0x23
 3268 099a F0070000 		.4byte	.LASF69
 3269 099e 01       		.byte	0x1
 3270 099f D002     		.2byte	0x2d0
 3271 09a1 D3000000 		.4byte	0xd3
 3272 09a5 0A030000 		.4byte	.LLST18
 3273 09a9 1C       		.uleb128 0x1c
 3274 09aa 01010000 		.4byte	.LASF111
 3275 09ae 01       		.byte	0x1
 3276 09af D202     		.2byte	0x2d2
 3277 09b1 F7000000 		.4byte	0xf7
 3278 09b5 4F030000 		.4byte	.LLST19
 3279 09b9 1C       		.uleb128 0x1c
 3280 09ba 1E070000 		.4byte	.LASF112
 3281 09be 01       		.byte	0x1
 3282 09bf D202     		.2byte	0x2d2
 3283 09c1 F7000000 		.4byte	0xf7
 3284 09c5 62030000 		.4byte	.LLST20
 3285 09c9 1C       		.uleb128 0x1c
 3286 09ca 4A050000 		.4byte	.LASF113
 3287 09ce 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 86


 3288 09cf D302     		.2byte	0x2d3
 3289 09d1 D3000000 		.4byte	0xd3
 3290 09d5 75030000 		.4byte	.LLST21
 3291 09d9 1F       		.uleb128 0x1f
 3292 09da 12000000 		.4byte	.LVL103
 3293 09de 50070000 		.4byte	0x750
 3294 09e2 1F       		.uleb128 0x1f
 3295 09e3 34000000 		.4byte	.LVL105
 3296 09e7 FE080000 		.4byte	0x8fe
 3297 09eb 00       		.byte	0
 3298 09ec 21       		.uleb128 0x21
 3299 09ed 5D040000 		.4byte	.LASF114
 3300 09f1 01       		.byte	0x1
 3301 09f2 0E03     		.2byte	0x30e
 3302 09f4 00000000 		.4byte	.LFB42
 3303 09f8 24000000 		.4byte	.LFE42-.LFB42
 3304 09fc 01       		.uleb128 0x1
 3305 09fd 9C       		.byte	0x9c
 3306 09fe 2C0A0000 		.4byte	0xa2c
 3307 0a02 23       		.uleb128 0x23
 3308 0a03 57070000 		.4byte	.LASF115
 3309 0a07 01       		.byte	0x1
 3310 0a08 0E03     		.2byte	0x30e
 3311 0a0a D3000000 		.4byte	0xd3
 3312 0a0e 88030000 		.4byte	.LLST22
 3313 0a12 1C       		.uleb128 0x1c
 3314 0a13 6C000000 		.4byte	.LASF116
 3315 0a17 01       		.byte	0x1
 3316 0a18 1003     		.2byte	0x310
 3317 0a1a 2C0A0000 		.4byte	0xa2c
 3318 0a1e A9030000 		.4byte	.LLST23
 3319 0a22 1F       		.uleb128 0x1f
 3320 0a23 1A000000 		.4byte	.LVL127
 3321 0a27 DE080000 		.4byte	0x8de
 3322 0a2b 00       		.byte	0
 3323 0a2c 02       		.uleb128 0x2
 3324 0a2d 01       		.byte	0x1
 3325 0a2e 02       		.byte	0x2
 3326 0a2f 51030000 		.4byte	.LASF117
 3327 0a33 25       		.uleb128 0x25
 3328 0a34 39030000 		.4byte	.LASF118
 3329 0a38 01       		.byte	0x1
 3330 0a39 2303     		.2byte	0x323
 3331 0a3b 00000000 		.4byte	.LFB43
 3332 0a3f 1C000000 		.4byte	.LFE43-.LFB43
 3333 0a43 01       		.uleb128 0x1
 3334 0a44 9C       		.byte	0x9c
 3335 0a45 730A0000 		.4byte	0xa73
 3336 0a49 23       		.uleb128 0x23
 3337 0a4a 03090000 		.4byte	.LASF119
 3338 0a4e 01       		.byte	0x1
 3339 0a4f 2303     		.2byte	0x323
 3340 0a51 25000000 		.4byte	0x25
 3341 0a55 CB030000 		.4byte	.LLST24
 3342 0a59 1C       		.uleb128 0x1c
 3343 0a5a 81090000 		.4byte	.LASF95
 3344 0a5e 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 87


 3345 0a5f 2703     		.2byte	0x327
 3346 0a61 25000000 		.4byte	0x25
 3347 0a65 EE030000 		.4byte	.LLST25
 3348 0a69 1F       		.uleb128 0x1f
 3349 0a6a 14000000 		.4byte	.LVL132
 3350 0a6e 10070000 		.4byte	0x710
 3351 0a72 00       		.byte	0
 3352 0a73 19       		.uleb128 0x19
 3353 0a74 97090000 		.4byte	.LASF120
 3354 0a78 01       		.byte	0x1
 3355 0a79 3903     		.2byte	0x339
 3356 0a7b 00000000 		.4byte	.LFB44
 3357 0a7f 48020000 		.4byte	.LFE44-.LFB44
 3358 0a83 01       		.uleb128 0x1
 3359 0a84 9C       		.byte	0x9c
 3360 0a85 6F0C0000 		.4byte	0xc6f
 3361 0a89 1A       		.uleb128 0x1a
 3362 0a8a 61726700 		.ascii	"arg\000"
 3363 0a8e 01       		.byte	0x1
 3364 0a8f 3903     		.2byte	0x339
 3365 0a91 46010000 		.4byte	0x146
 3366 0a95 01040000 		.4byte	.LLST26
 3367 0a99 2A       		.uleb128 0x2a
 3368 0a9a 96050000 		.4byte	.LASF121
 3369 0a9e 01       		.byte	0x1
 3370 0a9f 3C03     		.2byte	0x33c
 3371 0aa1 D3000000 		.4byte	0xd3
 3372 0aa5 05       		.byte	0x5
 3373 0aa6 22       		.uleb128 0x22
 3374 0aa7 6E6F7700 		.ascii	"now\000"
 3375 0aab 01       		.byte	0x1
 3376 0aac 3D03     		.2byte	0x33d
 3377 0aae D3000000 		.4byte	0xd3
 3378 0ab2 22040000 		.4byte	.LLST27
 3379 0ab6 1C       		.uleb128 0x1c
 3380 0ab7 03090000 		.4byte	.LASF119
 3381 0abb 01       		.byte	0x1
 3382 0abc 3E03     		.2byte	0x33e
 3383 0abe 25000000 		.4byte	0x25
 3384 0ac2 62040000 		.4byte	.LLST28
 3385 0ac6 1C       		.uleb128 0x1c
 3386 0ac7 12000000 		.4byte	.LASF122
 3387 0acb 01       		.byte	0x1
 3388 0acc 3F03     		.2byte	0x33f
 3389 0ace F7000000 		.4byte	0xf7
 3390 0ad2 75040000 		.4byte	.LLST29
 3391 0ad6 1C       		.uleb128 0x1c
 3392 0ad7 1E0B0000 		.4byte	.LASF123
 3393 0adb 01       		.byte	0x1
 3394 0adc 3F03     		.2byte	0x33f
 3395 0ade F7000000 		.4byte	0xf7
 3396 0ae2 88040000 		.4byte	.LLST30
 3397 0ae6 1C       		.uleb128 0x1c
 3398 0ae7 DD080000 		.4byte	.LASF124
 3399 0aeb 01       		.byte	0x1
 3400 0aec 4003     		.2byte	0x340
 3401 0aee D3000000 		.4byte	0xd3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 88


 3402 0af2 9B040000 		.4byte	.LLST31
 3403 0af6 1D       		.uleb128 0x1d
 3404 0af7 08000000 		.4byte	.LVL136
 3405 0afb A1110000 		.4byte	0x11a1
 3406 0aff 090B0000 		.4byte	0xb09
 3407 0b03 1E       		.uleb128 0x1e
 3408 0b04 01       		.uleb128 0x1
 3409 0b05 50       		.byte	0x50
 3410 0b06 01       		.uleb128 0x1
 3411 0b07 30       		.byte	0x30
 3412 0b08 00       		.byte	0
 3413 0b09 1F       		.uleb128 0x1f
 3414 0b0a 1E000000 		.4byte	.LVL137
 3415 0b0e DE080000 		.4byte	0x8de
 3416 0b12 1D       		.uleb128 0x1d
 3417 0b13 2A000000 		.4byte	.LVL138
 3418 0b17 FE080000 		.4byte	0x8fe
 3419 0b1b 250B0000 		.4byte	0xb25
 3420 0b1f 1E       		.uleb128 0x1e
 3421 0b20 01       		.uleb128 0x1
 3422 0b21 50       		.byte	0x50
 3423 0b22 01       		.uleb128 0x1
 3424 0b23 35       		.byte	0x35
 3425 0b24 00       		.byte	0
 3426 0b25 1D       		.uleb128 0x1d
 3427 0b26 30000000 		.4byte	.LVL139
 3428 0b2a EC090000 		.4byte	0x9ec
 3429 0b2e 390B0000 		.4byte	0xb39
 3430 0b32 1E       		.uleb128 0x1e
 3431 0b33 01       		.uleb128 0x1
 3432 0b34 50       		.byte	0x50
 3433 0b35 02       		.uleb128 0x2
 3434 0b36 74       		.byte	0x74
 3435 0b37 00       		.sleb128 0
 3436 0b38 00       		.byte	0
 3437 0b39 1D       		.uleb128 0x1d
 3438 0b3a 66000000 		.4byte	.LVL142
 3439 0b3e B1120000 		.4byte	0x12b1
 3440 0b42 4C0B0000 		.4byte	0xb4c
 3441 0b46 1E       		.uleb128 0x1e
 3442 0b47 01       		.uleb128 0x1
 3443 0b48 50       		.byte	0x50
 3444 0b49 01       		.uleb128 0x1
 3445 0b4a 31       		.byte	0x31
 3446 0b4b 00       		.byte	0
 3447 0b4c 1D       		.uleb128 0x1d
 3448 0b4d 6E000000 		.4byte	.LVL143
 3449 0b51 BC120000 		.4byte	0x12bc
 3450 0b55 610B0000 		.4byte	0xb61
 3451 0b59 1E       		.uleb128 0x1e
 3452 0b5a 01       		.uleb128 0x1
 3453 0b5b 50       		.byte	0x50
 3454 0b5c 03       		.uleb128 0x3
 3455 0b5d 0A       		.byte	0xa
 3456 0b5e 0008     		.2byte	0x800
 3457 0b60 00       		.byte	0
 3458 0b61 1F       		.uleb128 0x1f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 89


 3459 0b62 72000000 		.4byte	.LVL144
 3460 0b66 32120000 		.4byte	0x1232
 3461 0b6a 1F       		.uleb128 0x1f
 3462 0b6b 8C000000 		.4byte	.LVL147
 3463 0b6f 10070000 		.4byte	0x710
 3464 0b73 1D       		.uleb128 0x1d
 3465 0b74 A8000000 		.4byte	.LVL150
 3466 0b78 C7120000 		.4byte	0x12c7
 3467 0b7c 860B0000 		.4byte	0xb86
 3468 0b80 1E       		.uleb128 0x1e
 3469 0b81 01       		.uleb128 0x1
 3470 0b82 50       		.byte	0x50
 3471 0b83 01       		.uleb128 0x1
 3472 0b84 36       		.byte	0x36
 3473 0b85 00       		.byte	0
 3474 0b86 1D       		.uleb128 0x1d
 3475 0b87 AE000000 		.4byte	.LVL151
 3476 0b8b D2120000 		.4byte	0x12d2
 3477 0b8f 990B0000 		.4byte	0xb99
 3478 0b93 1E       		.uleb128 0x1e
 3479 0b94 01       		.uleb128 0x1
 3480 0b95 50       		.byte	0x50
 3481 0b96 01       		.uleb128 0x1
 3482 0b97 36       		.byte	0x36
 3483 0b98 00       		.byte	0
 3484 0b99 1F       		.uleb128 0x1f
 3485 0b9a DC000000 		.4byte	.LVL152
 3486 0b9e 50070000 		.4byte	0x750
 3487 0ba2 1D       		.uleb128 0x1d
 3488 0ba3 E6000000 		.4byte	.LVL153
 3489 0ba7 FB110000 		.4byte	0x11fb
 3490 0bab B50B0000 		.4byte	0xbb5
 3491 0baf 1E       		.uleb128 0x1e
 3492 0bb0 01       		.uleb128 0x1
 3493 0bb1 50       		.byte	0x50
 3494 0bb2 01       		.uleb128 0x1
 3495 0bb3 30       		.byte	0x30
 3496 0bb4 00       		.byte	0
 3497 0bb5 1F       		.uleb128 0x1f
 3498 0bb6 F6000000 		.4byte	.LVL155
 3499 0bba 10070000 		.4byte	0x710
 3500 0bbe 1F       		.uleb128 0x1f
 3501 0bbf 00010000 		.4byte	.LVL156
 3502 0bc3 50070000 		.4byte	0x750
 3503 0bc7 1F       		.uleb128 0x1f
 3504 0bc8 10010000 		.4byte	.LVL159
 3505 0bcc DD120000 		.4byte	0x12dd
 3506 0bd0 1D       		.uleb128 0x1d
 3507 0bd1 2A010000 		.4byte	.LVL162
 3508 0bd5 C4060000 		.4byte	0x6c4
 3509 0bd9 E30B0000 		.4byte	0xbe3
 3510 0bdd 1E       		.uleb128 0x1e
 3511 0bde 01       		.uleb128 0x1
 3512 0bdf 50       		.byte	0x50
 3513 0be0 01       		.uleb128 0x1
 3514 0be1 34       		.byte	0x34
 3515 0be2 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 90


 3516 0be3 1D       		.uleb128 0x1d
 3517 0be4 40010000 		.4byte	.LVL163
 3518 0be8 C4060000 		.4byte	0x6c4
 3519 0bec F60B0000 		.4byte	0xbf6
 3520 0bf0 1E       		.uleb128 0x1e
 3521 0bf1 01       		.uleb128 0x1
 3522 0bf2 50       		.byte	0x50
 3523 0bf3 01       		.uleb128 0x1
 3524 0bf4 32       		.byte	0x32
 3525 0bf5 00       		.byte	0
 3526 0bf6 1D       		.uleb128 0x1d
 3527 0bf7 56010000 		.4byte	.LVL164
 3528 0bfb EC090000 		.4byte	0x9ec
 3529 0bff 090C0000 		.4byte	0xc09
 3530 0c03 1E       		.uleb128 0x1e
 3531 0c04 01       		.uleb128 0x1
 3532 0c05 50       		.byte	0x50
 3533 0c06 01       		.uleb128 0x1
 3534 0c07 31       		.byte	0x31
 3535 0c08 00       		.byte	0
 3536 0c09 1D       		.uleb128 0x1d
 3537 0c0a 6A010000 		.4byte	.LVL165
 3538 0c0e EC090000 		.4byte	0x9ec
 3539 0c12 1C0C0000 		.4byte	0xc1c
 3540 0c16 1E       		.uleb128 0x1e
 3541 0c17 01       		.uleb128 0x1
 3542 0c18 50       		.byte	0x50
 3543 0c19 01       		.uleb128 0x1
 3544 0c1a 30       		.byte	0x30
 3545 0c1b 00       		.byte	0
 3546 0c1c 1D       		.uleb128 0x1d
 3547 0c1d C0010000 		.4byte	.LVL166
 3548 0c21 6F090000 		.4byte	0x96f
 3549 0c25 300C0000 		.4byte	0xc30
 3550 0c29 1E       		.uleb128 0x1e
 3551 0c2a 01       		.uleb128 0x1
 3552 0c2b 50       		.byte	0x50
 3553 0c2c 02       		.uleb128 0x2
 3554 0c2d 74       		.byte	0x74
 3555 0c2e 00       		.sleb128 0
 3556 0c2f 00       		.byte	0
 3557 0c30 1F       		.uleb128 0x1f
 3558 0c31 C8010000 		.4byte	.LVL167
 3559 0c35 330A0000 		.4byte	0xa33
 3560 0c39 1D       		.uleb128 0x1d
 3561 0c3a D6010000 		.4byte	.LVL168
 3562 0c3e B1120000 		.4byte	0x12b1
 3563 0c42 4C0C0000 		.4byte	0xc4c
 3564 0c46 1E       		.uleb128 0x1e
 3565 0c47 01       		.uleb128 0x1
 3566 0c48 50       		.byte	0x50
 3567 0c49 01       		.uleb128 0x1
 3568 0c4a 30       		.byte	0x30
 3569 0c4b 00       		.byte	0
 3570 0c4c 1D       		.uleb128 0x1d
 3571 0c4d DC010000 		.4byte	.LVL169
 3572 0c51 CE110000 		.4byte	0x11ce
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 91


 3573 0c55 5F0C0000 		.4byte	0xc5f
 3574 0c59 1E       		.uleb128 0x1e
 3575 0c5a 01       		.uleb128 0x1
 3576 0c5b 50       		.byte	0x50
 3577 0c5c 01       		.uleb128 0x1
 3578 0c5d 35       		.byte	0x35
 3579 0c5e 00       		.byte	0
 3580 0c5f 20       		.uleb128 0x20
 3581 0c60 E2010000 		.4byte	.LVL170
 3582 0c64 A1110000 		.4byte	0x11a1
 3583 0c68 1E       		.uleb128 0x1e
 3584 0c69 01       		.uleb128 0x1
 3585 0c6a 50       		.byte	0x50
 3586 0c6b 01       		.uleb128 0x1
 3587 0c6c 30       		.byte	0x30
 3588 0c6d 00       		.byte	0
 3589 0c6e 00       		.byte	0
 3590 0c6f 26       		.uleb128 0x26
 3591 0c70 200A0000 		.4byte	.LASF125
 3592 0c74 01       		.byte	0x1
 3593 0c75 0304     		.2byte	0x403
 3594 0c77 2C000000 		.4byte	0x2c
 3595 0c7b 00000000 		.4byte	.LFB45
 3596 0c7f 48010000 		.4byte	.LFE45-.LFB45
 3597 0c83 01       		.uleb128 0x1
 3598 0c84 9C       		.byte	0x9c
 3599 0c85 C50E0000 		.4byte	0xec5
 3600 0c89 22       		.uleb128 0x22
 3601 0c8a 7300     		.ascii	"s\000"
 3602 0c8c 01       		.byte	0x1
 3603 0c8d 0504     		.2byte	0x405
 3604 0c8f BB000000 		.4byte	0xbb
 3605 0c93 B9040000 		.4byte	.LLST32
 3606 0c97 1F       		.uleb128 0x1f
 3607 0c98 08000000 		.4byte	.LVL171
 3608 0c9c 78060000 		.4byte	0x678
 3609 0ca0 1D       		.uleb128 0x1d
 3610 0ca1 0E000000 		.4byte	.LVL172
 3611 0ca5 C7120000 		.4byte	0x12c7
 3612 0ca9 B30C0000 		.4byte	0xcb3
 3613 0cad 1E       		.uleb128 0x1e
 3614 0cae 01       		.uleb128 0x1
 3615 0caf 50       		.byte	0x50
 3616 0cb0 01       		.uleb128 0x1
 3617 0cb1 31       		.byte	0x31
 3618 0cb2 00       		.byte	0
 3619 0cb3 1D       		.uleb128 0x1d
 3620 0cb4 14000000 		.4byte	.LVL173
 3621 0cb8 D2120000 		.4byte	0x12d2
 3622 0cbc C60C0000 		.4byte	0xcc6
 3623 0cc0 1E       		.uleb128 0x1e
 3624 0cc1 01       		.uleb128 0x1
 3625 0cc2 50       		.byte	0x50
 3626 0cc3 01       		.uleb128 0x1
 3627 0cc4 31       		.byte	0x31
 3628 0cc5 00       		.byte	0
 3629 0cc6 1D       		.uleb128 0x1d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 92


 3630 0cc7 28000000 		.4byte	.LVL174
 3631 0ccb E8120000 		.4byte	0x12e8
 3632 0ccf FF0C0000 		.4byte	0xcff
 3633 0cd3 1E       		.uleb128 0x1e
 3634 0cd4 01       		.uleb128 0x1
 3635 0cd5 50       		.byte	0x50
 3636 0cd6 05       		.uleb128 0x5
 3637 0cd7 03       		.byte	0x3
 3638 0cd8 00000000 		.4byte	PID_Task
 3639 0cdc 1E       		.uleb128 0x1e
 3640 0cdd 01       		.uleb128 0x1
 3641 0cde 51       		.byte	0x51
 3642 0cdf 05       		.uleb128 0x5
 3643 0ce0 03       		.byte	0x3
 3644 0ce1 00000000 		.4byte	.LC89
 3645 0ce5 1E       		.uleb128 0x1e
 3646 0ce6 01       		.uleb128 0x1
 3647 0ce7 52       		.byte	0x52
 3648 0ce8 02       		.uleb128 0x2
 3649 0ce9 08       		.byte	0x8
 3650 0cea 40       		.byte	0x40
 3651 0ceb 1E       		.uleb128 0x1e
 3652 0cec 01       		.uleb128 0x1
 3653 0ced 53       		.byte	0x53
 3654 0cee 02       		.uleb128 0x2
 3655 0cef 74       		.byte	0x74
 3656 0cf0 00       		.sleb128 0
 3657 0cf1 1E       		.uleb128 0x1e
 3658 0cf2 02       		.uleb128 0x2
 3659 0cf3 7D       		.byte	0x7d
 3660 0cf4 00       		.sleb128 0
 3661 0cf5 01       		.uleb128 0x1
 3662 0cf6 33       		.byte	0x33
 3663 0cf7 1E       		.uleb128 0x1e
 3664 0cf8 02       		.uleb128 0x2
 3665 0cf9 7D       		.byte	0x7d
 3666 0cfa 04       		.sleb128 4
 3667 0cfb 02       		.uleb128 0x2
 3668 0cfc 74       		.byte	0x74
 3669 0cfd 00       		.sleb128 0
 3670 0cfe 00       		.byte	0
 3671 0cff 1D       		.uleb128 0x1d
 3672 0d00 3A000000 		.4byte	.LVL175
 3673 0d04 E8120000 		.4byte	0x12e8
 3674 0d08 380D0000 		.4byte	0xd38
 3675 0d0c 1E       		.uleb128 0x1e
 3676 0d0d 01       		.uleb128 0x1
 3677 0d0e 50       		.byte	0x50
 3678 0d0f 05       		.uleb128 0x5
 3679 0d10 03       		.byte	0x3
 3680 0d11 00000000 		.4byte	Comm_Task
 3681 0d15 1E       		.uleb128 0x1e
 3682 0d16 01       		.uleb128 0x1
 3683 0d17 51       		.byte	0x51
 3684 0d18 05       		.uleb128 0x5
 3685 0d19 03       		.byte	0x3
 3686 0d1a 04000000 		.4byte	.LC92
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 93


 3687 0d1e 1E       		.uleb128 0x1e
 3688 0d1f 01       		.uleb128 0x1
 3689 0d20 52       		.byte	0x52
 3690 0d21 02       		.uleb128 0x2
 3691 0d22 08       		.byte	0x8
 3692 0d23 64       		.byte	0x64
 3693 0d24 1E       		.uleb128 0x1e
 3694 0d25 01       		.uleb128 0x1
 3695 0d26 53       		.byte	0x53
 3696 0d27 02       		.uleb128 0x2
 3697 0d28 74       		.byte	0x74
 3698 0d29 00       		.sleb128 0
 3699 0d2a 1E       		.uleb128 0x1e
 3700 0d2b 02       		.uleb128 0x2
 3701 0d2c 7D       		.byte	0x7d
 3702 0d2d 00       		.sleb128 0
 3703 0d2e 01       		.uleb128 0x1
 3704 0d2f 32       		.byte	0x32
 3705 0d30 1E       		.uleb128 0x1e
 3706 0d31 02       		.uleb128 0x2
 3707 0d32 7D       		.byte	0x7d
 3708 0d33 04       		.sleb128 4
 3709 0d34 02       		.uleb128 0x2
 3710 0d35 74       		.byte	0x74
 3711 0d36 00       		.sleb128 0
 3712 0d37 00       		.byte	0
 3713 0d38 1D       		.uleb128 0x1d
 3714 0d39 4C000000 		.4byte	.LVL176
 3715 0d3d E8120000 		.4byte	0x12e8
 3716 0d41 710D0000 		.4byte	0xd71
 3717 0d45 1E       		.uleb128 0x1e
 3718 0d46 01       		.uleb128 0x1
 3719 0d47 50       		.byte	0x50
 3720 0d48 05       		.uleb128 0x5
 3721 0d49 03       		.byte	0x3
 3722 0d4a 00000000 		.4byte	Current_Read_Task
 3723 0d4e 1E       		.uleb128 0x1e
 3724 0d4f 01       		.uleb128 0x1
 3725 0d50 51       		.byte	0x51
 3726 0d51 05       		.uleb128 0x5
 3727 0d52 03       		.byte	0x3
 3728 0d53 14000000 		.4byte	.LC95
 3729 0d57 1E       		.uleb128 0x1e
 3730 0d58 01       		.uleb128 0x1
 3731 0d59 52       		.byte	0x52
 3732 0d5a 02       		.uleb128 0x2
 3733 0d5b 08       		.byte	0x8
 3734 0d5c 40       		.byte	0x40
 3735 0d5d 1E       		.uleb128 0x1e
 3736 0d5e 01       		.uleb128 0x1
 3737 0d5f 53       		.byte	0x53
 3738 0d60 02       		.uleb128 0x2
 3739 0d61 74       		.byte	0x74
 3740 0d62 00       		.sleb128 0
 3741 0d63 1E       		.uleb128 0x1e
 3742 0d64 02       		.uleb128 0x2
 3743 0d65 7D       		.byte	0x7d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 94


 3744 0d66 00       		.sleb128 0
 3745 0d67 01       		.uleb128 0x1
 3746 0d68 31       		.byte	0x31
 3747 0d69 1E       		.uleb128 0x1e
 3748 0d6a 02       		.uleb128 0x2
 3749 0d6b 7D       		.byte	0x7d
 3750 0d6c 04       		.sleb128 4
 3751 0d6d 02       		.uleb128 0x2
 3752 0d6e 74       		.byte	0x74
 3753 0d6f 00       		.sleb128 0
 3754 0d70 00       		.byte	0
 3755 0d71 1D       		.uleb128 0x1d
 3756 0d72 52000000 		.4byte	.LVL177
 3757 0d76 F4120000 		.4byte	0x12f4
 3758 0d7a 840D0000 		.4byte	0xd84
 3759 0d7e 1E       		.uleb128 0x1e
 3760 0d7f 01       		.uleb128 0x1
 3761 0d80 50       		.byte	0x50
 3762 0d81 01       		.uleb128 0x1
 3763 0d82 31       		.byte	0x31
 3764 0d83 00       		.byte	0
 3765 0d84 1D       		.uleb128 0x1d
 3766 0d85 68000000 		.4byte	.LVL181
 3767 0d89 00130000 		.4byte	0x1300
 3768 0d8d 980D0000 		.4byte	0xd98
 3769 0d91 1E       		.uleb128 0x1e
 3770 0d92 01       		.uleb128 0x1
 3771 0d93 50       		.byte	0x50
 3772 0d94 02       		.uleb128 0x2
 3773 0d95 74       		.byte	0x74
 3774 0d96 00       		.sleb128 0
 3775 0d97 00       		.byte	0
 3776 0d98 1D       		.uleb128 0x1d
 3777 0d99 70000000 		.4byte	.LVL182
 3778 0d9d 0B130000 		.4byte	0x130b
 3779 0da1 AD0D0000 		.4byte	0xdad
 3780 0da5 1E       		.uleb128 0x1e
 3781 0da6 01       		.uleb128 0x1
 3782 0da7 50       		.byte	0x50
 3783 0da8 03       		.uleb128 0x3
 3784 0da9 0A       		.byte	0xa
 3785 0daa E803     		.2byte	0x3e8
 3786 0dac 00       		.byte	0
 3787 0dad 1D       		.uleb128 0x1d
 3788 0dae 78000000 		.4byte	.LVL184
 3789 0db2 16130000 		.4byte	0x1316
 3790 0db6 C40D0000 		.4byte	0xdc4
 3791 0dba 1E       		.uleb128 0x1e
 3792 0dbb 01       		.uleb128 0x1
 3793 0dbc 50       		.byte	0x50
 3794 0dbd 05       		.uleb128 0x5
 3795 0dbe 03       		.byte	0x3
 3796 0dbf 00000000 		.4byte	HomeIsrHandler
 3797 0dc3 00       		.byte	0
 3798 0dc4 1D       		.uleb128 0x1d
 3799 0dc5 7E000000 		.4byte	.LVL185
 3800 0dc9 21130000 		.4byte	0x1321
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 95


 3801 0dcd DB0D0000 		.4byte	0xddb
 3802 0dd1 1E       		.uleb128 0x1e
 3803 0dd2 01       		.uleb128 0x1
 3804 0dd3 50       		.byte	0x50
 3805 0dd4 05       		.uleb128 0x5
 3806 0dd5 03       		.byte	0x3
 3807 0dd6 00000000 		.4byte	RSTIsrHandler
 3808 0dda 00       		.byte	0
 3809 0ddb 1D       		.uleb128 0x1d
 3810 0ddc 84000000 		.4byte	.LVL186
 3811 0de0 2C130000 		.4byte	0x132c
 3812 0de4 F20D0000 		.4byte	0xdf2
 3813 0de8 1E       		.uleb128 0x1e
 3814 0de9 01       		.uleb128 0x1
 3815 0dea 50       		.byte	0x50
 3816 0deb 05       		.uleb128 0x5
 3817 0dec 03       		.byte	0x3
 3818 0ded 00000000 		.4byte	SPI_SS_IsrHandler
 3819 0df1 00       		.byte	0
 3820 0df2 1D       		.uleb128 0x1d
 3821 0df3 8A000000 		.4byte	.LVL187
 3822 0df7 37130000 		.4byte	0x1337
 3823 0dfb 050E0000 		.4byte	0xe05
 3824 0dff 1E       		.uleb128 0x1e
 3825 0e00 01       		.uleb128 0x1
 3826 0e01 50       		.byte	0x50
 3827 0e02 01       		.uleb128 0x1
 3828 0e03 33       		.byte	0x33
 3829 0e04 00       		.byte	0
 3830 0e05 1D       		.uleb128 0x1d
 3831 0e06 90000000 		.4byte	.LVL188
 3832 0e0a 42130000 		.4byte	0x1342
 3833 0e0e 180E0000 		.4byte	0xe18
 3834 0e12 1E       		.uleb128 0x1e
 3835 0e13 01       		.uleb128 0x1
 3836 0e14 50       		.byte	0x50
 3837 0e15 01       		.uleb128 0x1
 3838 0e16 32       		.byte	0x32
 3839 0e17 00       		.byte	0
 3840 0e18 1D       		.uleb128 0x1d
 3841 0e19 96000000 		.4byte	.LVL189
 3842 0e1d 4D130000 		.4byte	0x134d
 3843 0e21 2B0E0000 		.4byte	0xe2b
 3844 0e25 1E       		.uleb128 0x1e
 3845 0e26 01       		.uleb128 0x1
 3846 0e27 50       		.byte	0x50
 3847 0e28 01       		.uleb128 0x1
 3848 0e29 33       		.byte	0x33
 3849 0e2a 00       		.byte	0
 3850 0e2b 1F       		.uleb128 0x1f
 3851 0e2c 9C000000 		.4byte	.LVL190
 3852 0e30 AD110000 		.4byte	0x11ad
 3853 0e34 1D       		.uleb128 0x1d
 3854 0e35 A2000000 		.4byte	.LVL191
 3855 0e39 0B130000 		.4byte	0x130b
 3856 0e3d 480E0000 		.4byte	0xe48
 3857 0e41 1E       		.uleb128 0x1e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 96


 3858 0e42 01       		.uleb128 0x1
 3859 0e43 50       		.byte	0x50
 3860 0e44 02       		.uleb128 0x2
 3861 0e45 08       		.byte	0x8
 3862 0e46 64       		.byte	0x64
 3863 0e47 00       		.byte	0
 3864 0e48 1F       		.uleb128 0x1f
 3865 0e49 A6000000 		.4byte	.LVL192
 3866 0e4d 58130000 		.4byte	0x1358
 3867 0e51 1F       		.uleb128 0x1f
 3868 0e52 AA000000 		.4byte	.LVL193
 3869 0e56 63130000 		.4byte	0x1363
 3870 0e5a 1D       		.uleb128 0x1d
 3871 0e5b B2000000 		.4byte	.LVL194
 3872 0e5f 6F130000 		.4byte	0x136f
 3873 0e63 6F0E0000 		.4byte	0xe6f
 3874 0e67 1E       		.uleb128 0x1e
 3875 0e68 01       		.uleb128 0x1
 3876 0e69 50       		.byte	0x50
 3877 0e6a 03       		.uleb128 0x3
 3878 0e6b 0A       		.byte	0xa
 3879 0e6c 4006     		.2byte	0x640
 3880 0e6e 00       		.byte	0
 3881 0e6f 1F       		.uleb128 0x1f
 3882 0e70 B8000000 		.4byte	.LVL195
 3883 0e74 10070000 		.4byte	0x710
 3884 0e78 1F       		.uleb128 0x1f
 3885 0e79 C6000000 		.4byte	.LVL196
 3886 0e7d 7B130000 		.4byte	0x137b
 3887 0e81 1D       		.uleb128 0x1d
 3888 0e82 CE000000 		.4byte	.LVL197
 3889 0e86 F0110000 		.4byte	0x11f0
 3890 0e8a 950E0000 		.4byte	0xe95
 3891 0e8e 1E       		.uleb128 0x1e
 3892 0e8f 01       		.uleb128 0x1
 3893 0e90 50       		.byte	0x50
 3894 0e91 02       		.uleb128 0x2
 3895 0e92 75       		.byte	0x75
 3896 0e93 00       		.sleb128 0
 3897 0e94 00       		.byte	0
 3898 0e95 1F       		.uleb128 0x1f
 3899 0e96 D6000000 		.4byte	.LVL198
 3900 0e9a 86130000 		.4byte	0x1386
 3901 0e9e 1D       		.uleb128 0x1d
 3902 0e9f DC000000 		.4byte	.LVL199
 3903 0ea3 FB110000 		.4byte	0x11fb
 3904 0ea7 B20E0000 		.4byte	0xeb2
 3905 0eab 1E       		.uleb128 0x1e
 3906 0eac 01       		.uleb128 0x1
 3907 0ead 50       		.byte	0x50
 3908 0eae 02       		.uleb128 0x2
 3909 0eaf 74       		.byte	0x74
 3910 0eb0 00       		.sleb128 0
 3911 0eb1 00       		.byte	0
 3912 0eb2 1F       		.uleb128 0x1f
 3913 0eb3 E0000000 		.4byte	.LVL200
 3914 0eb7 32120000 		.4byte	0x1232
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 97


 3915 0ebb 1F       		.uleb128 0x1f
 3916 0ebc F6000000 		.4byte	.LVL201
 3917 0ec0 91130000 		.4byte	0x1391
 3918 0ec4 00       		.byte	0
 3919 0ec5 2B       		.uleb128 0x2b
 3920 0ec6 66030000 		.4byte	.LASF126
 3921 0eca 01       		.byte	0x1
 3922 0ecb 55       		.byte	0x55
 3923 0ecc 2C0A0000 		.4byte	0xa2c
 3924 0ed0 05       		.uleb128 0x5
 3925 0ed1 03       		.byte	0x3
 3926 0ed2 00000000 		.4byte	inAuto
 3927 0ed6 2C       		.uleb128 0x2c
 3928 0ed7 4A6F6700 		.ascii	"Jog\000"
 3929 0edb 01       		.byte	0x1
 3930 0edc 57       		.byte	0x57
 3931 0edd E70E0000 		.4byte	0xee7
 3932 0ee1 05       		.uleb128 0x5
 3933 0ee2 03       		.byte	0x3
 3934 0ee3 00000000 		.4byte	Jog
 3935 0ee7 06       		.uleb128 0x6
 3936 0ee8 DF000000 		.4byte	0xdf
 3937 0eec 2B       		.uleb128 0x2b
 3938 0eed 28010000 		.4byte	.LASF127
 3939 0ef1 01       		.byte	0x1
 3940 0ef2 57       		.byte	0x57
 3941 0ef3 E70E0000 		.4byte	0xee7
 3942 0ef7 05       		.uleb128 0x5
 3943 0ef8 03       		.byte	0x3
 3944 0ef9 00000000 		.4byte	LastJog
 3945 0efd 2B       		.uleb128 0x2b
 3946 0efe 4B070000 		.4byte	.LASF128
 3947 0f02 01       		.byte	0x1
 3948 0f03 58       		.byte	0x58
 3949 0f04 2C0A0000 		.4byte	0xa2c
 3950 0f08 05       		.uleb128 0x5
 3951 0f09 03       		.byte	0x3
 3952 0f0a 00000000 		.4byte	PID_Enabled
 3953 0f0e 2B       		.uleb128 0x2b
 3954 0f0f 3B070000 		.4byte	.LASF129
 3955 0f13 01       		.byte	0x1
 3956 0f14 58       		.byte	0x58
 3957 0f15 2C0A0000 		.4byte	0xa2c
 3958 0f19 05       		.uleb128 0x5
 3959 0f1a 03       		.byte	0x3
 3960 0f1b 00000000 		.4byte	PID_Was_Enabled
 3961 0f1f 2B       		.uleb128 0x2b
 3962 0f20 2D080000 		.4byte	.LASF130
 3963 0f24 01       		.byte	0x1
 3964 0f25 59       		.byte	0x59
 3965 0f26 F7000000 		.4byte	0xf7
 3966 0f2a 05       		.uleb128 0x5
 3967 0f2b 03       		.byte	0x3
 3968 0f2c 00000000 		.4byte	PID_Setpoint
 3969 0f30 2B       		.uleb128 0x2b
 3970 0f31 D60A0000 		.4byte	.LASF131
 3971 0f35 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 98


 3972 0f36 59       		.byte	0x59
 3973 0f37 F7000000 		.4byte	0xf7
 3974 0f3b 05       		.uleb128 0x5
 3975 0f3c 03       		.byte	0x3
 3976 0f3d 00000000 		.4byte	PID_EffectiveSetpoint
 3977 0f41 2B       		.uleb128 0x2b
 3978 0f42 00020000 		.4byte	.LASF132
 3979 0f46 01       		.byte	0x1
 3980 0f47 5A       		.byte	0x5a
 3981 0f48 BB000000 		.4byte	0xbb
 3982 0f4c 05       		.uleb128 0x5
 3983 0f4d 03       		.byte	0x3
 3984 0f4e 00000000 		.4byte	PID_EffSetDelta
 3985 0f52 2B       		.uleb128 0x2b
 3986 0f53 1E020000 		.4byte	.LASF133
 3987 0f57 01       		.byte	0x1
 3988 0f58 5B       		.byte	0x5b
 3989 0f59 D3000000 		.4byte	0xd3
 3990 0f5d 05       		.uleb128 0x5
 3991 0f5e 03       		.byte	0x3
 3992 0f5f 00000000 		.4byte	lastTime
 3993 0f63 2B       		.uleb128 0x2b
 3994 0f64 F8060000 		.4byte	.LASF134
 3995 0f68 01       		.byte	0x1
 3996 0f69 5C       		.byte	0x5c
 3997 0f6a 25000000 		.4byte	0x25
 3998 0f6e 05       		.uleb128 0x5
 3999 0f6f 03       		.byte	0x3
 4000 0f70 00000000 		.4byte	Output
 4001 0f74 2B       		.uleb128 0x2b
 4002 0f75 4B020000 		.4byte	.LASF135
 4003 0f79 01       		.byte	0x1
 4004 0f7a 5D       		.byte	0x5d
 4005 0f7b 25000000 		.4byte	0x25
 4006 0f7f 05       		.uleb128 0x5
 4007 0f80 03       		.byte	0x3
 4008 0f81 00000000 		.4byte	ITerm
 4009 0f85 2B       		.uleb128 0x2b
 4010 0f86 3B040000 		.4byte	.LASF136
 4011 0f8a 01       		.byte	0x1
 4012 0f8b 5E       		.byte	0x5e
 4013 0f8c 98070000 		.4byte	0x798
 4014 0f90 05       		.uleb128 0x5
 4015 0f91 03       		.byte	0x3
 4016 0f92 00000000 		.4byte	Position
 4017 0f96 2B       		.uleb128 0x2b
 4018 0f97 0F060000 		.4byte	.LASF137
 4019 0f9b 01       		.byte	0x1
 4020 0f9c 5E       		.byte	0x5e
 4021 0f9d 98070000 		.4byte	0x798
 4022 0fa1 05       		.uleb128 0x5
 4023 0fa2 03       		.byte	0x3
 4024 0fa3 00000000 		.4byte	LastPosition
 4025 0fa7 2B       		.uleb128 0x2b
 4026 0fa8 BD090000 		.4byte	.LASF138
 4027 0fac 01       		.byte	0x1
 4028 0fad 5F       		.byte	0x5f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 99


 4029 0fae 25000000 		.4byte	0x25
 4030 0fb2 05       		.uleb128 0x5
 4031 0fb3 03       		.byte	0x3
 4032 0fb4 00000000 		.4byte	refKp
 4033 0fb8 2B       		.uleb128 0x2b
 4034 0fb9 91090000 		.4byte	.LASF139
 4035 0fbd 01       		.byte	0x1
 4036 0fbe 5F       		.byte	0x5f
 4037 0fbf 25000000 		.4byte	0x25
 4038 0fc3 05       		.uleb128 0x5
 4039 0fc4 03       		.byte	0x3
 4040 0fc5 00000000 		.4byte	refKi
 4041 0fc9 2B       		.uleb128 0x2b
 4042 0fca 8B090000 		.4byte	.LASF140
 4043 0fce 01       		.byte	0x1
 4044 0fcf 5F       		.byte	0x5f
 4045 0fd0 25000000 		.4byte	0x25
 4046 0fd4 05       		.uleb128 0x5
 4047 0fd5 03       		.byte	0x3
 4048 0fd6 00000000 		.4byte	refKd
 4049 0fda 2C       		.uleb128 0x2c
 4050 0fdb 6B7000   		.ascii	"kp\000"
 4051 0fde 01       		.byte	0x1
 4052 0fdf 60       		.byte	0x60
 4053 0fe0 25000000 		.4byte	0x25
 4054 0fe4 05       		.uleb128 0x5
 4055 0fe5 03       		.byte	0x3
 4056 0fe6 00000000 		.4byte	kp
 4057 0fea 2C       		.uleb128 0x2c
 4058 0feb 6B6900   		.ascii	"ki\000"
 4059 0fee 01       		.byte	0x1
 4060 0fef 60       		.byte	0x60
 4061 0ff0 25000000 		.4byte	0x25
 4062 0ff4 05       		.uleb128 0x5
 4063 0ff5 03       		.byte	0x3
 4064 0ff6 00000000 		.4byte	ki
 4065 0ffa 2C       		.uleb128 0x2c
 4066 0ffb 6B6400   		.ascii	"kd\000"
 4067 0ffe 01       		.byte	0x1
 4068 0fff 60       		.byte	0x60
 4069 1000 25000000 		.4byte	0x25
 4070 1004 05       		.uleb128 0x5
 4071 1005 03       		.byte	0x3
 4072 1006 00000000 		.4byte	kd
 4073 100a 2B       		.uleb128 0x2b
 4074 100b 01060000 		.4byte	.LASF141
 4075 100f 01       		.byte	0x1
 4076 1010 61       		.byte	0x61
 4077 1011 D3000000 		.4byte	0xd3
 4078 1015 05       		.uleb128 0x5
 4079 1016 03       		.byte	0x3
 4080 1017 00000000 		.4byte	refSampleTime
 4081 101b 2B       		.uleb128 0x2b
 4082 101c 2C030000 		.4byte	.LASF142
 4083 1020 01       		.byte	0x1
 4084 1021 62       		.byte	0x62
 4085 1022 25000000 		.4byte	0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 100


 4086 1026 05       		.uleb128 0x5
 4087 1027 03       		.byte	0x3
 4088 1028 00000000 		.4byte	outMax_Total
 4089 102c 2B       		.uleb128 0x2b
 4090 102d 05080000 		.4byte	.LASF143
 4091 1031 01       		.byte	0x1
 4092 1032 62       		.byte	0x62
 4093 1033 25000000 		.4byte	0x25
 4094 1037 05       		.uleb128 0x5
 4095 1038 03       		.byte	0x3
 4096 1039 00000000 		.4byte	outMax_ITerm
 4097 103d 2B       		.uleb128 0x2b
 4098 103e 33000000 		.4byte	.LASF144
 4099 1042 01       		.byte	0x1
 4100 1043 63       		.byte	0x63
 4101 1044 25000000 		.4byte	0x25
 4102 1048 05       		.uleb128 0x5
 4103 1049 03       		.byte	0x3
 4104 104a 00000000 		.4byte	pwmLimit
 4105 104e 2B       		.uleb128 0x2b
 4106 104f 26080000 		.4byte	.LASF145
 4107 1053 01       		.byte	0x1
 4108 1054 63       		.byte	0x63
 4109 1055 25000000 		.4byte	0x25
 4110 1059 05       		.uleb128 0x5
 4111 105a 03       		.byte	0x3
 4112 105b 00000000 		.4byte	pwmMax
 4113 105f 2B       		.uleb128 0x2b
 4114 1060 27020000 		.4byte	.LASF146
 4115 1064 01       		.byte	0x1
 4116 1065 63       		.byte	0x63
 4117 1066 25000000 		.4byte	0x25
 4118 106a 05       		.uleb128 0x5
 4119 106b 03       		.byte	0x3
 4120 106c 00000000 		.4byte	pwmMin
 4121 1070 2B       		.uleb128 0x2b
 4122 1071 8B050000 		.4byte	.LASF147
 4123 1075 01       		.byte	0x1
 4124 1076 64       		.byte	0x64
 4125 1077 2C0A0000 		.4byte	0xa2c
 4126 107b 05       		.uleb128 0x5
 4127 107c 03       		.byte	0x3
 4128 107d 00000000 		.4byte	homingDone
 4129 1081 2B       		.uleb128 0x2b
 4130 1082 86020000 		.4byte	.LASF148
 4131 1086 01       		.byte	0x1
 4132 1087 9A       		.byte	0x9a
 4133 1088 92100000 		.4byte	0x1092
 4134 108c 05       		.uleb128 0x5
 4135 108d 03       		.byte	0x3
 4136 108e 00000000 		.4byte	ConfigState
 4137 1092 06       		.uleb128 0x6
 4138 1093 D8010000 		.4byte	0x1d8
 4139 1097 2B       		.uleb128 0x2b
 4140 1098 4C090000 		.4byte	.LASF149
 4141 109c 01       		.byte	0x1
 4142 109d 9B       		.byte	0x9b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 101


 4143 109e 11010000 		.4byte	0x111
 4144 10a2 05       		.uleb128 0x5
 4145 10a3 03       		.byte	0x3
 4146 10a4 00000000 		.4byte	FaultState
 4147 10a8 2B       		.uleb128 0x2b
 4148 10a9 72090000 		.4byte	.LASF150
 4149 10ad 01       		.byte	0x1
 4150 10ae 9C       		.byte	0x9c
 4151 10af 11010000 		.4byte	0x111
 4152 10b3 05       		.uleb128 0x5
 4153 10b4 03       		.byte	0x3
 4154 10b5 00000000 		.4byte	ConfigSequence
 4155 10b9 2B       		.uleb128 0x2b
 4156 10ba 82080000 		.4byte	.LASF151
 4157 10be 01       		.byte	0x1
 4158 10bf 9D       		.byte	0x9d
 4159 10c0 16010000 		.4byte	0x116
 4160 10c4 05       		.uleb128 0x5
 4161 10c5 03       		.byte	0x3
 4162 10c6 00000000 		.4byte	ChecksumErrors
 4163 10ca 2B       		.uleb128 0x2b
 4164 10cb 81000000 		.4byte	.LASF152
 4165 10cf 01       		.byte	0x1
 4166 10d0 9E       		.byte	0x9e
 4167 10d1 DB100000 		.4byte	0x10db
 4168 10d5 05       		.uleb128 0x5
 4169 10d6 03       		.byte	0x3
 4170 10d7 00000000 		.4byte	Current
 4171 10db 06       		.uleb128 0x6
 4172 10dc EB000000 		.4byte	0xeb
 4173 10e0 2C       		.uleb128 0x2c
 4174 10e1 50574D00 		.ascii	"PWM\000"
 4175 10e5 01       		.byte	0x1
 4176 10e6 9F       		.byte	0x9f
 4177 10e7 F1100000 		.4byte	0x10f1
 4178 10eb 05       		.uleb128 0x5
 4179 10ec 03       		.byte	0x3
 4180 10ed 00000000 		.4byte	PWM
 4181 10f1 06       		.uleb128 0x6
 4182 10f2 25000000 		.4byte	0x25
 4183 10f6 14       		.uleb128 0x14
 4184 10f7 BB000000 		.4byte	0xbb
 4185 10fb 06110000 		.4byte	0x1106
 4186 10ff 15       		.uleb128 0x15
 4187 1100 3F010000 		.4byte	0x13f
 4188 1104 13       		.byte	0x13
 4189 1105 00       		.byte	0
 4190 1106 2B       		.uleb128 0x2b
 4191 1107 F1050000 		.4byte	.LASF153
 4192 110b 01       		.byte	0x1
 4193 110c A0       		.byte	0xa0
 4194 110d F6100000 		.4byte	0x10f6
 4195 1111 05       		.uleb128 0x5
 4196 1112 03       		.byte	0x3
 4197 1113 00000000 		.4byte	CurrentI2Cinbuf
 4198 1117 2B       		.uleb128 0x2b
 4199 1118 12080000 		.4byte	.LASF154
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 102


 4200 111c 01       		.byte	0x1
 4201 111d A3       		.byte	0xa3
 4202 111e AE010000 		.4byte	0x1ae
 4203 1122 05       		.uleb128 0x5
 4204 1123 03       		.byte	0x3
 4205 1124 00000000 		.4byte	uxHighWaterMark_PID
 4206 1128 2B       		.uleb128 0x2b
 4207 1129 63060000 		.4byte	.LASF155
 4208 112d 01       		.byte	0x1
 4209 112e A4       		.byte	0xa4
 4210 112f AE010000 		.4byte	0x1ae
 4211 1133 05       		.uleb128 0x5
 4212 1134 03       		.byte	0x3
 4213 1135 00000000 		.4byte	uxHighWaterMark_Current
 4214 1139 2B       		.uleb128 0x2b
 4215 113a 5F0A0000 		.4byte	.LASF156
 4216 113e 01       		.byte	0x1
 4217 113f A5       		.byte	0xa5
 4218 1140 AE010000 		.4byte	0x1ae
 4219 1144 05       		.uleb128 0x5
 4220 1145 03       		.byte	0x3
 4221 1146 00000000 		.4byte	uxHighWaterMark_Comm
 4222 114a 2B       		.uleb128 0x2b
 4223 114b 46000000 		.4byte	.LASF157
 4224 114f 01       		.byte	0x1
 4225 1150 A8       		.byte	0xa8
 4226 1151 A3010000 		.4byte	0x1a3
 4227 1155 05       		.uleb128 0x5
 4228 1156 03       		.byte	0x3
 4229 1157 00000000 		.4byte	Lock
 4230 115b 2B       		.uleb128 0x2b
 4231 115c 3D060000 		.4byte	.LASF158
 4232 1160 01       		.byte	0x1
 4233 1161 BA       		.byte	0xba
 4234 1162 D3000000 		.4byte	0xd3
 4235 1166 05       		.uleb128 0x5
 4236 1167 03       		.byte	0x3
 4237 1168 00000000 		.4byte	LastMessageTimeTick
 4238 116c 2B       		.uleb128 0x2b
 4239 116d 22000000 		.4byte	.LASF159
 4240 1171 01       		.byte	0x1
 4241 1172 EF       		.byte	0xef
 4242 1173 90030000 		.4byte	0x390
 4243 1177 05       		.uleb128 0x5
 4244 1178 03       		.byte	0x3
 4245 1179 00000000 		.4byte	rxMessage
 4246 117d 2D       		.uleb128 0x2d
 4247 117e 1C060000 		.4byte	.LASF160
 4248 1182 01       		.byte	0x1
 4249 1183 0601     		.2byte	0x106
 4250 1185 86040000 		.4byte	0x486
 4251 1189 05       		.uleb128 0x5
 4252 118a 03       		.byte	0x3
 4253 118b 00000000 		.4byte	txMessage
 4254 118f 2D       		.uleb128 0x2d
 4255 1190 B3070000 		.4byte	.LASF161
 4256 1194 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 103


 4257 1195 0E01     		.2byte	0x10e
 4258 1197 C2040000 		.4byte	0x4c2
 4259 119b 05       		.uleb128 0x5
 4260 119c 03       		.byte	0x3
 4261 119d 00000000 		.4byte	txMessageState
 4262 11a1 2E       		.uleb128 0x2e
 4263 11a2 58020000 		.4byte	.LASF162
 4264 11a6 58020000 		.4byte	.LASF162
 4265 11aa 08       		.byte	0x8
 4266 11ab 8E05     		.2byte	0x58e
 4267 11ad 2F       		.uleb128 0x2f
 4268 11ae 1E010000 		.4byte	.LASF163
 4269 11b2 1E010000 		.4byte	.LASF163
 4270 11b6 09       		.byte	0x9
 4271 11b7 72       		.byte	0x72
 4272 11b8 2F       		.uleb128 0x2f
 4273 11b9 32040000 		.4byte	.LASF164
 4274 11bd 32040000 		.4byte	.LASF164
 4275 11c1 0A       		.byte	0xa
 4276 11c2 6A       		.byte	0x6a
 4277 11c3 2F       		.uleb128 0x2f
 4278 11c4 B0060000 		.4byte	.LASF165
 4279 11c8 B0060000 		.4byte	.LASF165
 4280 11cc 0A       		.byte	0xa
 4281 11cd 70       		.byte	0x70
 4282 11ce 2E       		.uleb128 0x2e
 4283 11cf 46030000 		.4byte	.LASF166
 4284 11d3 46030000 		.4byte	.LASF166
 4285 11d7 08       		.byte	0x8
 4286 11d8 ED02     		.2byte	0x2ed
 4287 11da 2F       		.uleb128 0x2f
 4288 11db F2040000 		.4byte	.LASF167
 4289 11df F2040000 		.4byte	.LASF167
 4290 11e3 0B       		.byte	0xb
 4291 11e4 28       		.byte	0x28
 4292 11e5 2F       		.uleb128 0x2f
 4293 11e6 A0090000 		.4byte	.LASF168
 4294 11ea A0090000 		.4byte	.LASF168
 4295 11ee 0C       		.byte	0xc
 4296 11ef 39       		.byte	0x39
 4297 11f0 2F       		.uleb128 0x2f
 4298 11f1 26060000 		.4byte	.LASF169
 4299 11f5 26060000 		.4byte	.LASF169
 4300 11f9 0D       		.byte	0xd
 4301 11fa 5A       		.byte	0x5a
 4302 11fb 2F       		.uleb128 0x2f
 4303 11fc 2E020000 		.4byte	.LASF170
 4304 1200 2E020000 		.4byte	.LASF170
 4305 1204 0E       		.byte	0xe
 4306 1205 5A       		.byte	0x5a
 4307 1206 2F       		.uleb128 0x2f
 4308 1207 950A0000 		.4byte	.LASF171
 4309 120b 950A0000 		.4byte	.LASF171
 4310 120f 0F       		.byte	0xf
 4311 1210 28       		.byte	0x28
 4312 1211 2F       		.uleb128 0x2f
 4313 1212 B9000000 		.4byte	.LASF172
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 104


 4314 1216 B9000000 		.4byte	.LASF172
 4315 121a 10       		.byte	0x10
 4316 121b 39       		.byte	0x39
 4317 121c 2F       		.uleb128 0x2f
 4318 121d 9D030000 		.4byte	.LASF173
 4319 1221 9D030000 		.4byte	.LASF173
 4320 1225 11       		.byte	0x11
 4321 1226 39       		.byte	0x39
 4322 1227 2F       		.uleb128 0x2f
 4323 1228 CE010000 		.4byte	.LASF174
 4324 122c CE010000 		.4byte	.LASF174
 4325 1230 11       		.byte	0x11
 4326 1231 32       		.byte	0x32
 4327 1232 2E       		.uleb128 0x2e
 4328 1233 38050000 		.4byte	.LASF175
 4329 1237 38050000 		.4byte	.LASF175
 4330 123b 08       		.byte	0x8
 4331 123c 3E05     		.2byte	0x53e
 4332 123e 30       		.uleb128 0x30
 4333 123f B6050000 		.4byte	.LASF210
 4334 1243 B6050000 		.4byte	.LASF210
 4335 1247 2E       		.uleb128 0x2e
 4336 1248 4D080000 		.4byte	.LASF176
 4337 124c 4D080000 		.4byte	.LASF176
 4338 1250 12       		.byte	0x12
 4339 1251 3D03     		.2byte	0x33d
 4340 1253 2E       		.uleb128 0x2e
 4341 1254 71040000 		.4byte	.LASF177
 4342 1258 71040000 		.4byte	.LASF177
 4343 125c 12       		.byte	0x12
 4344 125d 3F03     		.2byte	0x33f
 4345 125f 2E       		.uleb128 0x2e
 4346 1260 38010000 		.4byte	.LASF178
 4347 1264 38010000 		.4byte	.LASF178
 4348 1268 12       		.byte	0x12
 4349 1269 4703     		.2byte	0x347
 4350 126b 2F       		.uleb128 0x2f
 4351 126c 7B070000 		.4byte	.LASF179
 4352 1270 7B070000 		.4byte	.LASF179
 4353 1274 13       		.byte	0x13
 4354 1275 BA       		.byte	0xba
 4355 1276 2E       		.uleb128 0x2e
 4356 1277 D8040000 		.4byte	.LASF180
 4357 127b D8040000 		.4byte	.LASF180
 4358 127f 14       		.byte	0x14
 4359 1280 5501     		.2byte	0x155
 4360 1282 2F       		.uleb128 0x2f
 4361 1283 BF030000 		.4byte	.LASF181
 4362 1287 BF030000 		.4byte	.LASF181
 4363 128b 0D       		.byte	0xd
 4364 128c 5D       		.byte	0x5d
 4365 128d 2E       		.uleb128 0x2e
 4366 128e 73030000 		.4byte	.LASF182
 4367 1292 73030000 		.4byte	.LASF182
 4368 1296 06       		.byte	0x6
 4369 1297 8805     		.2byte	0x588
 4370 1299 2E       		.uleb128 0x2e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 105


 4371 129a 87030000 		.4byte	.LASF183
 4372 129e 87030000 		.4byte	.LASF183
 4373 12a2 12       		.byte	0x12
 4374 12a3 4503     		.2byte	0x345
 4375 12a5 2E       		.uleb128 0x2e
 4376 12a6 D5030000 		.4byte	.LASF184
 4377 12aa D5030000 		.4byte	.LASF184
 4378 12ae 06       		.byte	0x6
 4379 12af 8802     		.2byte	0x288
 4380 12b1 2F       		.uleb128 0x2f
 4381 12b2 D5090000 		.4byte	.LASF185
 4382 12b6 D5090000 		.4byte	.LASF185
 4383 12ba 15       		.byte	0x15
 4384 12bb 33       		.byte	0x33
 4385 12bc 2F       		.uleb128 0x2f
 4386 12bd A0050000 		.4byte	.LASF186
 4387 12c1 A0050000 		.4byte	.LASF186
 4388 12c5 16       		.byte	0x16
 4389 12c6 77       		.byte	0x77
 4390 12c7 2F       		.uleb128 0x2f
 4391 12c8 C2070000 		.4byte	.LASF187
 4392 12cc C2070000 		.4byte	.LASF187
 4393 12d0 17       		.byte	0x17
 4394 12d1 36       		.byte	0x36
 4395 12d2 2F       		.uleb128 0x2f
 4396 12d3 B7010000 		.4byte	.LASF188
 4397 12d7 B7010000 		.4byte	.LASF188
 4398 12db 18       		.byte	0x18
 4399 12dc 36       		.byte	0x36
 4400 12dd 2F       		.uleb128 0x2f
 4401 12de C1080000 		.4byte	.LASF189
 4402 12e2 C1080000 		.4byte	.LASF189
 4403 12e6 0E       		.byte	0xe
 4404 12e7 5D       		.byte	0x5d
 4405 12e8 2E       		.uleb128 0x2e
 4406 12e9 B5040000 		.4byte	.LASF190
 4407 12ed B5040000 		.4byte	.LASF190
 4408 12f1 08       		.byte	0x8
 4409 12f2 4101     		.2byte	0x141
 4410 12f4 2E       		.uleb128 0x2e
 4411 12f5 0F050000 		.4byte	.LASF191
 4412 12f9 0F050000 		.4byte	.LASF191
 4413 12fd 06       		.byte	0x6
 4414 12fe 8405     		.2byte	0x584
 4415 1300 2F       		.uleb128 0x2f
 4416 1301 D6000000 		.4byte	.LASF192
 4417 1305 D6000000 		.4byte	.LASF192
 4418 1309 19       		.byte	0x19
 4419 130a 33       		.byte	0x33
 4420 130b 2F       		.uleb128 0x2f
 4421 130c 8C040000 		.4byte	.LASF193
 4422 1310 8C040000 		.4byte	.LASF193
 4423 1314 13       		.byte	0x13
 4424 1315 D9       		.byte	0xd9
 4425 1316 2F       		.uleb128 0x2f
 4426 1317 E1090000 		.4byte	.LASF194
 4427 131b E1090000 		.4byte	.LASF194
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 106


 4428 131f 0F       		.byte	0xf
 4429 1320 18       		.byte	0x18
 4430 1321 2F       		.uleb128 0x2f
 4431 1322 7D0A0000 		.4byte	.LASF195
 4432 1326 7D0A0000 		.4byte	.LASF195
 4433 132a 0B       		.byte	0xb
 4434 132b 18       		.byte	0x18
 4435 132c 2F       		.uleb128 0x2f
 4436 132d 95010000 		.4byte	.LASF196
 4437 1331 95010000 		.4byte	.LASF196
 4438 1335 1A       		.byte	0x1a
 4439 1336 18       		.byte	0x18
 4440 1337 2F       		.uleb128 0x2f
 4441 1338 AC080000 		.4byte	.LASF197
 4442 133c AC080000 		.4byte	.LASF197
 4443 1340 0F       		.byte	0xf
 4444 1341 20       		.byte	0x20
 4445 1342 2F       		.uleb128 0x2f
 4446 1343 16040000 		.4byte	.LASF198
 4447 1347 16040000 		.4byte	.LASF198
 4448 134b 0B       		.byte	0xb
 4449 134c 20       		.byte	0x20
 4450 134d 2F       		.uleb128 0x2f
 4451 134e 21050000 		.4byte	.LASF199
 4452 1352 21050000 		.4byte	.LASF199
 4453 1356 1A       		.byte	0x1a
 4454 1357 20       		.byte	0x20
 4455 1358 2F       		.uleb128 0x2f
 4456 1359 0B090000 		.4byte	.LASF200
 4457 135d 0B090000 		.4byte	.LASF200
 4458 1361 1B       		.byte	0x1b
 4459 1362 72       		.byte	0x72
 4460 1363 2E       		.uleb128 0x2e
 4461 1364 89000000 		.4byte	.LASF201
 4462 1368 89000000 		.4byte	.LASF201
 4463 136c 14       		.byte	0x14
 4464 136d 3201     		.2byte	0x132
 4465 136f 2E       		.uleb128 0x2e
 4466 1370 74020000 		.4byte	.LASF202
 4467 1374 74020000 		.4byte	.LASF202
 4468 1378 14       		.byte	0x14
 4469 1379 5001     		.2byte	0x150
 4470 137b 2F       		.uleb128 0x2f
 4471 137c 25090000 		.4byte	.LASF203
 4472 1380 25090000 		.4byte	.LASF203
 4473 1384 0D       		.byte	0xd
 4474 1385 4F       		.byte	0x4f
 4475 1386 2F       		.uleb128 0x2f
 4476 1387 490A0000 		.4byte	.LASF204
 4477 138b 490A0000 		.4byte	.LASF204
 4478 138f 0E       		.byte	0xe
 4479 1390 4F       		.byte	0x4f
 4480 1391 2E       		.uleb128 0x2e
 4481 1392 EF080000 		.4byte	.LASF205
 4482 1396 EF080000 		.4byte	.LASF205
 4483 139a 08       		.byte	0x8
 4484 139b 8E04     		.2byte	0x48e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 107


 4485 139d 00       		.byte	0
 4486              		.section	.debug_abbrev,"",%progbits
 4487              	.Ldebug_abbrev0:
 4488 0000 01       		.uleb128 0x1
 4489 0001 11       		.uleb128 0x11
 4490 0002 01       		.byte	0x1
 4491 0003 25       		.uleb128 0x25
 4492 0004 0E       		.uleb128 0xe
 4493 0005 13       		.uleb128 0x13
 4494 0006 0B       		.uleb128 0xb
 4495 0007 03       		.uleb128 0x3
 4496 0008 0E       		.uleb128 0xe
 4497 0009 1B       		.uleb128 0x1b
 4498 000a 0E       		.uleb128 0xe
 4499 000b 55       		.uleb128 0x55
 4500 000c 17       		.uleb128 0x17
 4501 000d 11       		.uleb128 0x11
 4502 000e 01       		.uleb128 0x1
 4503 000f 10       		.uleb128 0x10
 4504 0010 17       		.uleb128 0x17
 4505 0011 00       		.byte	0
 4506 0012 00       		.byte	0
 4507 0013 02       		.uleb128 0x2
 4508 0014 24       		.uleb128 0x24
 4509 0015 00       		.byte	0
 4510 0016 0B       		.uleb128 0xb
 4511 0017 0B       		.uleb128 0xb
 4512 0018 3E       		.uleb128 0x3e
 4513 0019 0B       		.uleb128 0xb
 4514 001a 03       		.uleb128 0x3
 4515 001b 0E       		.uleb128 0xe
 4516 001c 00       		.byte	0
 4517 001d 00       		.byte	0
 4518 001e 03       		.uleb128 0x3
 4519 001f 24       		.uleb128 0x24
 4520 0020 00       		.byte	0
 4521 0021 0B       		.uleb128 0xb
 4522 0022 0B       		.uleb128 0xb
 4523 0023 3E       		.uleb128 0x3e
 4524 0024 0B       		.uleb128 0xb
 4525 0025 03       		.uleb128 0x3
 4526 0026 08       		.uleb128 0x8
 4527 0027 00       		.byte	0
 4528 0028 00       		.byte	0
 4529 0029 04       		.uleb128 0x4
 4530 002a 16       		.uleb128 0x16
 4531 002b 00       		.byte	0
 4532 002c 03       		.uleb128 0x3
 4533 002d 0E       		.uleb128 0xe
 4534 002e 3A       		.uleb128 0x3a
 4535 002f 0B       		.uleb128 0xb
 4536 0030 3B       		.uleb128 0x3b
 4537 0031 0B       		.uleb128 0xb
 4538 0032 49       		.uleb128 0x49
 4539 0033 13       		.uleb128 0x13
 4540 0034 00       		.byte	0
 4541 0035 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 108


 4542 0036 05       		.uleb128 0x5
 4543 0037 16       		.uleb128 0x16
 4544 0038 00       		.byte	0
 4545 0039 03       		.uleb128 0x3
 4546 003a 0E       		.uleb128 0xe
 4547 003b 3A       		.uleb128 0x3a
 4548 003c 0B       		.uleb128 0xb
 4549 003d 3B       		.uleb128 0x3b
 4550 003e 05       		.uleb128 0x5
 4551 003f 49       		.uleb128 0x49
 4552 0040 13       		.uleb128 0x13
 4553 0041 00       		.byte	0
 4554 0042 00       		.byte	0
 4555 0043 06       		.uleb128 0x6
 4556 0044 35       		.uleb128 0x35
 4557 0045 00       		.byte	0
 4558 0046 49       		.uleb128 0x49
 4559 0047 13       		.uleb128 0x13
 4560 0048 00       		.byte	0
 4561 0049 00       		.byte	0
 4562 004a 07       		.uleb128 0x7
 4563 004b 0F       		.uleb128 0xf
 4564 004c 00       		.byte	0
 4565 004d 0B       		.uleb128 0xb
 4566 004e 0B       		.uleb128 0xb
 4567 004f 49       		.uleb128 0x49
 4568 0050 13       		.uleb128 0x13
 4569 0051 00       		.byte	0
 4570 0052 00       		.byte	0
 4571 0053 08       		.uleb128 0x8
 4572 0054 15       		.uleb128 0x15
 4573 0055 00       		.byte	0
 4574 0056 27       		.uleb128 0x27
 4575 0057 19       		.uleb128 0x19
 4576 0058 00       		.byte	0
 4577 0059 00       		.byte	0
 4578 005a 09       		.uleb128 0x9
 4579 005b 0F       		.uleb128 0xf
 4580 005c 00       		.byte	0
 4581 005d 0B       		.uleb128 0xb
 4582 005e 0B       		.uleb128 0xb
 4583 005f 00       		.byte	0
 4584 0060 00       		.byte	0
 4585 0061 0A       		.uleb128 0xa
 4586 0062 04       		.uleb128 0x4
 4587 0063 01       		.byte	0x1
 4588 0064 03       		.uleb128 0x3
 4589 0065 0E       		.uleb128 0xe
 4590 0066 0B       		.uleb128 0xb
 4591 0067 0B       		.uleb128 0xb
 4592 0068 49       		.uleb128 0x49
 4593 0069 13       		.uleb128 0x13
 4594 006a 3A       		.uleb128 0x3a
 4595 006b 0B       		.uleb128 0xb
 4596 006c 3B       		.uleb128 0x3b
 4597 006d 0B       		.uleb128 0xb
 4598 006e 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 109


 4599 006f 13       		.uleb128 0x13
 4600 0070 00       		.byte	0
 4601 0071 00       		.byte	0
 4602 0072 0B       		.uleb128 0xb
 4603 0073 28       		.uleb128 0x28
 4604 0074 00       		.byte	0
 4605 0075 03       		.uleb128 0x3
 4606 0076 0E       		.uleb128 0xe
 4607 0077 1C       		.uleb128 0x1c
 4608 0078 0D       		.uleb128 0xd
 4609 0079 00       		.byte	0
 4610 007a 00       		.byte	0
 4611 007b 0C       		.uleb128 0xc
 4612 007c 04       		.uleb128 0x4
 4613 007d 01       		.byte	0x1
 4614 007e 0B       		.uleb128 0xb
 4615 007f 0B       		.uleb128 0xb
 4616 0080 49       		.uleb128 0x49
 4617 0081 13       		.uleb128 0x13
 4618 0082 3A       		.uleb128 0x3a
 4619 0083 0B       		.uleb128 0xb
 4620 0084 3B       		.uleb128 0x3b
 4621 0085 0B       		.uleb128 0xb
 4622 0086 01       		.uleb128 0x1
 4623 0087 13       		.uleb128 0x13
 4624 0088 00       		.byte	0
 4625 0089 00       		.byte	0
 4626 008a 0D       		.uleb128 0xd
 4627 008b 28       		.uleb128 0x28
 4628 008c 00       		.byte	0
 4629 008d 03       		.uleb128 0x3
 4630 008e 0E       		.uleb128 0xe
 4631 008f 1C       		.uleb128 0x1c
 4632 0090 0B       		.uleb128 0xb
 4633 0091 00       		.byte	0
 4634 0092 00       		.byte	0
 4635 0093 0E       		.uleb128 0xe
 4636 0094 13       		.uleb128 0x13
 4637 0095 01       		.byte	0x1
 4638 0096 0B       		.uleb128 0xb
 4639 0097 0B       		.uleb128 0xb
 4640 0098 3A       		.uleb128 0x3a
 4641 0099 0B       		.uleb128 0xb
 4642 009a 3B       		.uleb128 0x3b
 4643 009b 0B       		.uleb128 0xb
 4644 009c 01       		.uleb128 0x1
 4645 009d 13       		.uleb128 0x13
 4646 009e 00       		.byte	0
 4647 009f 00       		.byte	0
 4648 00a0 0F       		.uleb128 0xf
 4649 00a1 0D       		.uleb128 0xd
 4650 00a2 00       		.byte	0
 4651 00a3 03       		.uleb128 0x3
 4652 00a4 0E       		.uleb128 0xe
 4653 00a5 3A       		.uleb128 0x3a
 4654 00a6 0B       		.uleb128 0xb
 4655 00a7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 110


 4656 00a8 0B       		.uleb128 0xb
 4657 00a9 49       		.uleb128 0x49
 4658 00aa 13       		.uleb128 0x13
 4659 00ab 38       		.uleb128 0x38
 4660 00ac 0B       		.uleb128 0xb
 4661 00ad 00       		.byte	0
 4662 00ae 00       		.byte	0
 4663 00af 10       		.uleb128 0x10
 4664 00b0 0D       		.uleb128 0xd
 4665 00b1 00       		.byte	0
 4666 00b2 03       		.uleb128 0x3
 4667 00b3 08       		.uleb128 0x8
 4668 00b4 3A       		.uleb128 0x3a
 4669 00b5 0B       		.uleb128 0xb
 4670 00b6 3B       		.uleb128 0x3b
 4671 00b7 0B       		.uleb128 0xb
 4672 00b8 49       		.uleb128 0x49
 4673 00b9 13       		.uleb128 0x13
 4674 00ba 38       		.uleb128 0x38
 4675 00bb 0B       		.uleb128 0xb
 4676 00bc 00       		.byte	0
 4677 00bd 00       		.byte	0
 4678 00be 11       		.uleb128 0x11
 4679 00bf 17       		.uleb128 0x17
 4680 00c0 01       		.byte	0x1
 4681 00c1 0B       		.uleb128 0xb
 4682 00c2 0B       		.uleb128 0xb
 4683 00c3 3A       		.uleb128 0x3a
 4684 00c4 0B       		.uleb128 0xb
 4685 00c5 3B       		.uleb128 0x3b
 4686 00c6 0B       		.uleb128 0xb
 4687 00c7 01       		.uleb128 0x1
 4688 00c8 13       		.uleb128 0x13
 4689 00c9 00       		.byte	0
 4690 00ca 00       		.byte	0
 4691 00cb 12       		.uleb128 0x12
 4692 00cc 0D       		.uleb128 0xd
 4693 00cd 00       		.byte	0
 4694 00ce 03       		.uleb128 0x3
 4695 00cf 08       		.uleb128 0x8
 4696 00d0 3A       		.uleb128 0x3a
 4697 00d1 0B       		.uleb128 0xb
 4698 00d2 3B       		.uleb128 0x3b
 4699 00d3 0B       		.uleb128 0xb
 4700 00d4 49       		.uleb128 0x49
 4701 00d5 13       		.uleb128 0x13
 4702 00d6 00       		.byte	0
 4703 00d7 00       		.byte	0
 4704 00d8 13       		.uleb128 0x13
 4705 00d9 0D       		.uleb128 0xd
 4706 00da 00       		.byte	0
 4707 00db 03       		.uleb128 0x3
 4708 00dc 0E       		.uleb128 0xe
 4709 00dd 3A       		.uleb128 0x3a
 4710 00de 0B       		.uleb128 0xb
 4711 00df 3B       		.uleb128 0x3b
 4712 00e0 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 111


 4713 00e1 49       		.uleb128 0x49
 4714 00e2 13       		.uleb128 0x13
 4715 00e3 00       		.byte	0
 4716 00e4 00       		.byte	0
 4717 00e5 14       		.uleb128 0x14
 4718 00e6 01       		.uleb128 0x1
 4719 00e7 01       		.byte	0x1
 4720 00e8 49       		.uleb128 0x49
 4721 00e9 13       		.uleb128 0x13
 4722 00ea 01       		.uleb128 0x1
 4723 00eb 13       		.uleb128 0x13
 4724 00ec 00       		.byte	0
 4725 00ed 00       		.byte	0
 4726 00ee 15       		.uleb128 0x15
 4727 00ef 21       		.uleb128 0x21
 4728 00f0 00       		.byte	0
 4729 00f1 49       		.uleb128 0x49
 4730 00f2 13       		.uleb128 0x13
 4731 00f3 2F       		.uleb128 0x2f
 4732 00f4 0B       		.uleb128 0xb
 4733 00f5 00       		.byte	0
 4734 00f6 00       		.byte	0
 4735 00f7 16       		.uleb128 0x16
 4736 00f8 17       		.uleb128 0x17
 4737 00f9 01       		.byte	0x1
 4738 00fa 0B       		.uleb128 0xb
 4739 00fb 0B       		.uleb128 0xb
 4740 00fc 3A       		.uleb128 0x3a
 4741 00fd 0B       		.uleb128 0xb
 4742 00fe 3B       		.uleb128 0x3b
 4743 00ff 05       		.uleb128 0x5
 4744 0100 01       		.uleb128 0x1
 4745 0101 13       		.uleb128 0x13
 4746 0102 00       		.byte	0
 4747 0103 00       		.byte	0
 4748 0104 17       		.uleb128 0x17
 4749 0105 0D       		.uleb128 0xd
 4750 0106 00       		.byte	0
 4751 0107 03       		.uleb128 0x3
 4752 0108 08       		.uleb128 0x8
 4753 0109 3A       		.uleb128 0x3a
 4754 010a 0B       		.uleb128 0xb
 4755 010b 3B       		.uleb128 0x3b
 4756 010c 05       		.uleb128 0x5
 4757 010d 49       		.uleb128 0x49
 4758 010e 13       		.uleb128 0x13
 4759 010f 00       		.byte	0
 4760 0110 00       		.byte	0
 4761 0111 18       		.uleb128 0x18
 4762 0112 04       		.uleb128 0x4
 4763 0113 01       		.byte	0x1
 4764 0114 0B       		.uleb128 0xb
 4765 0115 0B       		.uleb128 0xb
 4766 0116 49       		.uleb128 0x49
 4767 0117 13       		.uleb128 0x13
 4768 0118 3A       		.uleb128 0x3a
 4769 0119 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 112


 4770 011a 3B       		.uleb128 0x3b
 4771 011b 05       		.uleb128 0x5
 4772 011c 01       		.uleb128 0x1
 4773 011d 13       		.uleb128 0x13
 4774 011e 00       		.byte	0
 4775 011f 00       		.byte	0
 4776 0120 19       		.uleb128 0x19
 4777 0121 2E       		.uleb128 0x2e
 4778 0122 01       		.byte	0x1
 4779 0123 3F       		.uleb128 0x3f
 4780 0124 19       		.uleb128 0x19
 4781 0125 03       		.uleb128 0x3
 4782 0126 0E       		.uleb128 0xe
 4783 0127 3A       		.uleb128 0x3a
 4784 0128 0B       		.uleb128 0xb
 4785 0129 3B       		.uleb128 0x3b
 4786 012a 05       		.uleb128 0x5
 4787 012b 27       		.uleb128 0x27
 4788 012c 19       		.uleb128 0x19
 4789 012d 8701     		.uleb128 0x87
 4790 012f 19       		.uleb128 0x19
 4791 0130 11       		.uleb128 0x11
 4792 0131 01       		.uleb128 0x1
 4793 0132 12       		.uleb128 0x12
 4794 0133 06       		.uleb128 0x6
 4795 0134 40       		.uleb128 0x40
 4796 0135 18       		.uleb128 0x18
 4797 0136 9642     		.uleb128 0x2116
 4798 0138 19       		.uleb128 0x19
 4799 0139 01       		.uleb128 0x1
 4800 013a 13       		.uleb128 0x13
 4801 013b 00       		.byte	0
 4802 013c 00       		.byte	0
 4803 013d 1A       		.uleb128 0x1a
 4804 013e 05       		.uleb128 0x5
 4805 013f 00       		.byte	0
 4806 0140 03       		.uleb128 0x3
 4807 0141 08       		.uleb128 0x8
 4808 0142 3A       		.uleb128 0x3a
 4809 0143 0B       		.uleb128 0xb
 4810 0144 3B       		.uleb128 0x3b
 4811 0145 05       		.uleb128 0x5
 4812 0146 49       		.uleb128 0x49
 4813 0147 13       		.uleb128 0x13
 4814 0148 02       		.uleb128 0x2
 4815 0149 17       		.uleb128 0x17
 4816 014a 00       		.byte	0
 4817 014b 00       		.byte	0
 4818 014c 1B       		.uleb128 0x1b
 4819 014d 34       		.uleb128 0x34
 4820 014e 00       		.byte	0
 4821 014f 03       		.uleb128 0x3
 4822 0150 08       		.uleb128 0x8
 4823 0151 3A       		.uleb128 0x3a
 4824 0152 0B       		.uleb128 0xb
 4825 0153 3B       		.uleb128 0x3b
 4826 0154 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 113


 4827 0155 49       		.uleb128 0x49
 4828 0156 13       		.uleb128 0x13
 4829 0157 00       		.byte	0
 4830 0158 00       		.byte	0
 4831 0159 1C       		.uleb128 0x1c
 4832 015a 34       		.uleb128 0x34
 4833 015b 00       		.byte	0
 4834 015c 03       		.uleb128 0x3
 4835 015d 0E       		.uleb128 0xe
 4836 015e 3A       		.uleb128 0x3a
 4837 015f 0B       		.uleb128 0xb
 4838 0160 3B       		.uleb128 0x3b
 4839 0161 05       		.uleb128 0x5
 4840 0162 49       		.uleb128 0x49
 4841 0163 13       		.uleb128 0x13
 4842 0164 02       		.uleb128 0x2
 4843 0165 17       		.uleb128 0x17
 4844 0166 00       		.byte	0
 4845 0167 00       		.byte	0
 4846 0168 1D       		.uleb128 0x1d
 4847 0169 898201   		.uleb128 0x4109
 4848 016c 01       		.byte	0x1
 4849 016d 11       		.uleb128 0x11
 4850 016e 01       		.uleb128 0x1
 4851 016f 31       		.uleb128 0x31
 4852 0170 13       		.uleb128 0x13
 4853 0171 01       		.uleb128 0x1
 4854 0172 13       		.uleb128 0x13
 4855 0173 00       		.byte	0
 4856 0174 00       		.byte	0
 4857 0175 1E       		.uleb128 0x1e
 4858 0176 8A8201   		.uleb128 0x410a
 4859 0179 00       		.byte	0
 4860 017a 02       		.uleb128 0x2
 4861 017b 18       		.uleb128 0x18
 4862 017c 9142     		.uleb128 0x2111
 4863 017e 18       		.uleb128 0x18
 4864 017f 00       		.byte	0
 4865 0180 00       		.byte	0
 4866 0181 1F       		.uleb128 0x1f
 4867 0182 898201   		.uleb128 0x4109
 4868 0185 00       		.byte	0
 4869 0186 11       		.uleb128 0x11
 4870 0187 01       		.uleb128 0x1
 4871 0188 31       		.uleb128 0x31
 4872 0189 13       		.uleb128 0x13
 4873 018a 00       		.byte	0
 4874 018b 00       		.byte	0
 4875 018c 20       		.uleb128 0x20
 4876 018d 898201   		.uleb128 0x4109
 4877 0190 01       		.byte	0x1
 4878 0191 11       		.uleb128 0x11
 4879 0192 01       		.uleb128 0x1
 4880 0193 31       		.uleb128 0x31
 4881 0194 13       		.uleb128 0x13
 4882 0195 00       		.byte	0
 4883 0196 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 114


 4884 0197 21       		.uleb128 0x21
 4885 0198 2E       		.uleb128 0x2e
 4886 0199 01       		.byte	0x1
 4887 019a 3F       		.uleb128 0x3f
 4888 019b 19       		.uleb128 0x19
 4889 019c 03       		.uleb128 0x3
 4890 019d 0E       		.uleb128 0xe
 4891 019e 3A       		.uleb128 0x3a
 4892 019f 0B       		.uleb128 0xb
 4893 01a0 3B       		.uleb128 0x3b
 4894 01a1 05       		.uleb128 0x5
 4895 01a2 27       		.uleb128 0x27
 4896 01a3 19       		.uleb128 0x19
 4897 01a4 11       		.uleb128 0x11
 4898 01a5 01       		.uleb128 0x1
 4899 01a6 12       		.uleb128 0x12
 4900 01a7 06       		.uleb128 0x6
 4901 01a8 40       		.uleb128 0x40
 4902 01a9 18       		.uleb128 0x18
 4903 01aa 9742     		.uleb128 0x2117
 4904 01ac 19       		.uleb128 0x19
 4905 01ad 01       		.uleb128 0x1
 4906 01ae 13       		.uleb128 0x13
 4907 01af 00       		.byte	0
 4908 01b0 00       		.byte	0
 4909 01b1 22       		.uleb128 0x22
 4910 01b2 34       		.uleb128 0x34
 4911 01b3 00       		.byte	0
 4912 01b4 03       		.uleb128 0x3
 4913 01b5 08       		.uleb128 0x8
 4914 01b6 3A       		.uleb128 0x3a
 4915 01b7 0B       		.uleb128 0xb
 4916 01b8 3B       		.uleb128 0x3b
 4917 01b9 05       		.uleb128 0x5
 4918 01ba 49       		.uleb128 0x49
 4919 01bb 13       		.uleb128 0x13
 4920 01bc 02       		.uleb128 0x2
 4921 01bd 17       		.uleb128 0x17
 4922 01be 00       		.byte	0
 4923 01bf 00       		.byte	0
 4924 01c0 23       		.uleb128 0x23
 4925 01c1 05       		.uleb128 0x5
 4926 01c2 00       		.byte	0
 4927 01c3 03       		.uleb128 0x3
 4928 01c4 0E       		.uleb128 0xe
 4929 01c5 3A       		.uleb128 0x3a
 4930 01c6 0B       		.uleb128 0xb
 4931 01c7 3B       		.uleb128 0x3b
 4932 01c8 05       		.uleb128 0x5
 4933 01c9 49       		.uleb128 0x49
 4934 01ca 13       		.uleb128 0x13
 4935 01cb 02       		.uleb128 0x2
 4936 01cc 17       		.uleb128 0x17
 4937 01cd 00       		.byte	0
 4938 01ce 00       		.byte	0
 4939 01cf 24       		.uleb128 0x24
 4940 01d0 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 115


 4941 01d1 00       		.byte	0
 4942 01d2 03       		.uleb128 0x3
 4943 01d3 0E       		.uleb128 0xe
 4944 01d4 3A       		.uleb128 0x3a
 4945 01d5 0B       		.uleb128 0xb
 4946 01d6 3B       		.uleb128 0x3b
 4947 01d7 05       		.uleb128 0x5
 4948 01d8 49       		.uleb128 0x49
 4949 01d9 13       		.uleb128 0x13
 4950 01da 02       		.uleb128 0x2
 4951 01db 18       		.uleb128 0x18
 4952 01dc 00       		.byte	0
 4953 01dd 00       		.byte	0
 4954 01de 25       		.uleb128 0x25
 4955 01df 2E       		.uleb128 0x2e
 4956 01e0 01       		.byte	0x1
 4957 01e1 3F       		.uleb128 0x3f
 4958 01e2 19       		.uleb128 0x19
 4959 01e3 03       		.uleb128 0x3
 4960 01e4 0E       		.uleb128 0xe
 4961 01e5 3A       		.uleb128 0x3a
 4962 01e6 0B       		.uleb128 0xb
 4963 01e7 3B       		.uleb128 0x3b
 4964 01e8 05       		.uleb128 0x5
 4965 01e9 27       		.uleb128 0x27
 4966 01ea 19       		.uleb128 0x19
 4967 01eb 11       		.uleb128 0x11
 4968 01ec 01       		.uleb128 0x1
 4969 01ed 12       		.uleb128 0x12
 4970 01ee 06       		.uleb128 0x6
 4971 01ef 40       		.uleb128 0x40
 4972 01f0 18       		.uleb128 0x18
 4973 01f1 9642     		.uleb128 0x2116
 4974 01f3 19       		.uleb128 0x19
 4975 01f4 01       		.uleb128 0x1
 4976 01f5 13       		.uleb128 0x13
 4977 01f6 00       		.byte	0
 4978 01f7 00       		.byte	0
 4979 01f8 26       		.uleb128 0x26
 4980 01f9 2E       		.uleb128 0x2e
 4981 01fa 01       		.byte	0x1
 4982 01fb 3F       		.uleb128 0x3f
 4983 01fc 19       		.uleb128 0x19
 4984 01fd 03       		.uleb128 0x3
 4985 01fe 0E       		.uleb128 0xe
 4986 01ff 3A       		.uleb128 0x3a
 4987 0200 0B       		.uleb128 0xb
 4988 0201 3B       		.uleb128 0x3b
 4989 0202 05       		.uleb128 0x5
 4990 0203 27       		.uleb128 0x27
 4991 0204 19       		.uleb128 0x19
 4992 0205 49       		.uleb128 0x49
 4993 0206 13       		.uleb128 0x13
 4994 0207 11       		.uleb128 0x11
 4995 0208 01       		.uleb128 0x1
 4996 0209 12       		.uleb128 0x12
 4997 020a 06       		.uleb128 0x6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 116


 4998 020b 40       		.uleb128 0x40
 4999 020c 18       		.uleb128 0x18
 5000 020d 9742     		.uleb128 0x2117
 5001 020f 19       		.uleb128 0x19
 5002 0210 01       		.uleb128 0x1
 5003 0211 13       		.uleb128 0x13
 5004 0212 00       		.byte	0
 5005 0213 00       		.byte	0
 5006 0214 27       		.uleb128 0x27
 5007 0215 34       		.uleb128 0x34
 5008 0216 00       		.byte	0
 5009 0217 03       		.uleb128 0x3
 5010 0218 0E       		.uleb128 0xe
 5011 0219 3A       		.uleb128 0x3a
 5012 021a 0B       		.uleb128 0xb
 5013 021b 3B       		.uleb128 0x3b
 5014 021c 05       		.uleb128 0x5
 5015 021d 49       		.uleb128 0x49
 5016 021e 13       		.uleb128 0x13
 5017 021f 02       		.uleb128 0x2
 5018 0220 18       		.uleb128 0x18
 5019 0221 00       		.byte	0
 5020 0222 00       		.byte	0
 5021 0223 28       		.uleb128 0x28
 5022 0224 0B       		.uleb128 0xb
 5023 0225 01       		.byte	0x1
 5024 0226 11       		.uleb128 0x11
 5025 0227 01       		.uleb128 0x1
 5026 0228 12       		.uleb128 0x12
 5027 0229 06       		.uleb128 0x6
 5028 022a 00       		.byte	0
 5029 022b 00       		.byte	0
 5030 022c 29       		.uleb128 0x29
 5031 022d 2E       		.uleb128 0x2e
 5032 022e 01       		.byte	0x1
 5033 022f 3F       		.uleb128 0x3f
 5034 0230 19       		.uleb128 0x19
 5035 0231 03       		.uleb128 0x3
 5036 0232 0E       		.uleb128 0xe
 5037 0233 3A       		.uleb128 0x3a
 5038 0234 0B       		.uleb128 0xb
 5039 0235 3B       		.uleb128 0x3b
 5040 0236 05       		.uleb128 0x5
 5041 0237 27       		.uleb128 0x27
 5042 0238 19       		.uleb128 0x19
 5043 0239 49       		.uleb128 0x49
 5044 023a 13       		.uleb128 0x13
 5045 023b 11       		.uleb128 0x11
 5046 023c 01       		.uleb128 0x1
 5047 023d 12       		.uleb128 0x12
 5048 023e 06       		.uleb128 0x6
 5049 023f 40       		.uleb128 0x40
 5050 0240 18       		.uleb128 0x18
 5051 0241 9642     		.uleb128 0x2116
 5052 0243 19       		.uleb128 0x19
 5053 0244 01       		.uleb128 0x1
 5054 0245 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 117


 5055 0246 00       		.byte	0
 5056 0247 00       		.byte	0
 5057 0248 2A       		.uleb128 0x2a
 5058 0249 34       		.uleb128 0x34
 5059 024a 00       		.byte	0
 5060 024b 03       		.uleb128 0x3
 5061 024c 0E       		.uleb128 0xe
 5062 024d 3A       		.uleb128 0x3a
 5063 024e 0B       		.uleb128 0xb
 5064 024f 3B       		.uleb128 0x3b
 5065 0250 05       		.uleb128 0x5
 5066 0251 49       		.uleb128 0x49
 5067 0252 13       		.uleb128 0x13
 5068 0253 1C       		.uleb128 0x1c
 5069 0254 0B       		.uleb128 0xb
 5070 0255 00       		.byte	0
 5071 0256 00       		.byte	0
 5072 0257 2B       		.uleb128 0x2b
 5073 0258 34       		.uleb128 0x34
 5074 0259 00       		.byte	0
 5075 025a 03       		.uleb128 0x3
 5076 025b 0E       		.uleb128 0xe
 5077 025c 3A       		.uleb128 0x3a
 5078 025d 0B       		.uleb128 0xb
 5079 025e 3B       		.uleb128 0x3b
 5080 025f 0B       		.uleb128 0xb
 5081 0260 49       		.uleb128 0x49
 5082 0261 13       		.uleb128 0x13
 5083 0262 3F       		.uleb128 0x3f
 5084 0263 19       		.uleb128 0x19
 5085 0264 02       		.uleb128 0x2
 5086 0265 18       		.uleb128 0x18
 5087 0266 00       		.byte	0
 5088 0267 00       		.byte	0
 5089 0268 2C       		.uleb128 0x2c
 5090 0269 34       		.uleb128 0x34
 5091 026a 00       		.byte	0
 5092 026b 03       		.uleb128 0x3
 5093 026c 08       		.uleb128 0x8
 5094 026d 3A       		.uleb128 0x3a
 5095 026e 0B       		.uleb128 0xb
 5096 026f 3B       		.uleb128 0x3b
 5097 0270 0B       		.uleb128 0xb
 5098 0271 49       		.uleb128 0x49
 5099 0272 13       		.uleb128 0x13
 5100 0273 3F       		.uleb128 0x3f
 5101 0274 19       		.uleb128 0x19
 5102 0275 02       		.uleb128 0x2
 5103 0276 18       		.uleb128 0x18
 5104 0277 00       		.byte	0
 5105 0278 00       		.byte	0
 5106 0279 2D       		.uleb128 0x2d
 5107 027a 34       		.uleb128 0x34
 5108 027b 00       		.byte	0
 5109 027c 03       		.uleb128 0x3
 5110 027d 0E       		.uleb128 0xe
 5111 027e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 118


 5112 027f 0B       		.uleb128 0xb
 5113 0280 3B       		.uleb128 0x3b
 5114 0281 05       		.uleb128 0x5
 5115 0282 49       		.uleb128 0x49
 5116 0283 13       		.uleb128 0x13
 5117 0284 3F       		.uleb128 0x3f
 5118 0285 19       		.uleb128 0x19
 5119 0286 02       		.uleb128 0x2
 5120 0287 18       		.uleb128 0x18
 5121 0288 00       		.byte	0
 5122 0289 00       		.byte	0
 5123 028a 2E       		.uleb128 0x2e
 5124 028b 2E       		.uleb128 0x2e
 5125 028c 00       		.byte	0
 5126 028d 3F       		.uleb128 0x3f
 5127 028e 19       		.uleb128 0x19
 5128 028f 3C       		.uleb128 0x3c
 5129 0290 19       		.uleb128 0x19
 5130 0291 6E       		.uleb128 0x6e
 5131 0292 0E       		.uleb128 0xe
 5132 0293 03       		.uleb128 0x3
 5133 0294 0E       		.uleb128 0xe
 5134 0295 3A       		.uleb128 0x3a
 5135 0296 0B       		.uleb128 0xb
 5136 0297 3B       		.uleb128 0x3b
 5137 0298 05       		.uleb128 0x5
 5138 0299 00       		.byte	0
 5139 029a 00       		.byte	0
 5140 029b 2F       		.uleb128 0x2f
 5141 029c 2E       		.uleb128 0x2e
 5142 029d 00       		.byte	0
 5143 029e 3F       		.uleb128 0x3f
 5144 029f 19       		.uleb128 0x19
 5145 02a0 3C       		.uleb128 0x3c
 5146 02a1 19       		.uleb128 0x19
 5147 02a2 6E       		.uleb128 0x6e
 5148 02a3 0E       		.uleb128 0xe
 5149 02a4 03       		.uleb128 0x3
 5150 02a5 0E       		.uleb128 0xe
 5151 02a6 3A       		.uleb128 0x3a
 5152 02a7 0B       		.uleb128 0xb
 5153 02a8 3B       		.uleb128 0x3b
 5154 02a9 0B       		.uleb128 0xb
 5155 02aa 00       		.byte	0
 5156 02ab 00       		.byte	0
 5157 02ac 30       		.uleb128 0x30
 5158 02ad 2E       		.uleb128 0x2e
 5159 02ae 00       		.byte	0
 5160 02af 3F       		.uleb128 0x3f
 5161 02b0 19       		.uleb128 0x19
 5162 02b1 3C       		.uleb128 0x3c
 5163 02b2 19       		.uleb128 0x19
 5164 02b3 6E       		.uleb128 0x6e
 5165 02b4 0E       		.uleb128 0xe
 5166 02b5 03       		.uleb128 0x3
 5167 02b6 0E       		.uleb128 0xe
 5168 02b7 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 119


 5169 02b8 00       		.byte	0
 5170 02b9 00       		.byte	0
 5171              		.section	.debug_loc,"",%progbits
 5172              	.Ldebug_loc0:
 5173              	.LLST0:
 5174 0000 00000000 		.4byte	.LVL0
 5175 0004 04000000 		.4byte	.LVL1
 5176 0008 0100     		.2byte	0x1
 5177 000a 50       		.byte	0x50
 5178 000b 04000000 		.4byte	.LVL1
 5179 000f 44000000 		.4byte	.LFE35
 5180 0013 0400     		.2byte	0x4
 5181 0015 F3       		.byte	0xf3
 5182 0016 01       		.uleb128 0x1
 5183 0017 50       		.byte	0x50
 5184 0018 9F       		.byte	0x9f
 5185 0019 00000000 		.4byte	0
 5186 001d 00000000 		.4byte	0
 5187              	.LLST1:
 5188 0021 1C000000 		.4byte	.LVL5
 5189 0025 1F000000 		.4byte	.LVL6-1
 5190 0029 0100     		.2byte	0x1
 5191 002b 50       		.byte	0x50
 5192 002c 00000000 		.4byte	0
 5193 0030 00000000 		.4byte	0
 5194              	.LLST2:
 5195 0034 28000000 		.4byte	.LVL19
 5196 0038 2C000000 		.4byte	.LVL20
 5197 003c 0200     		.2byte	0x2
 5198 003e 30       		.byte	0x30
 5199 003f 9F       		.byte	0x9f
 5200 0040 2C000000 		.4byte	.LVL20
 5201 0044 48000000 		.4byte	.LVL25
 5202 0048 0100     		.2byte	0x1
 5203 004a 54       		.byte	0x54
 5204 004b 00000000 		.4byte	0
 5205 004f 00000000 		.4byte	0
 5206              	.LLST3:
 5207 0053 00000000 		.4byte	.LVL29
 5208 0057 12000000 		.4byte	.LVL30
 5209 005b 0100     		.2byte	0x1
 5210 005d 50       		.byte	0x50
 5211 005e 12000000 		.4byte	.LVL30
 5212 0062 1C000000 		.4byte	.LFE33
 5213 0066 0400     		.2byte	0x4
 5214 0068 F3       		.byte	0xf3
 5215 0069 01       		.uleb128 0x1
 5216 006a 50       		.byte	0x50
 5217 006b 9F       		.byte	0x9f
 5218 006c 00000000 		.4byte	0
 5219 0070 00000000 		.4byte	0
 5220              	.LLST4:
 5221 0074 00000000 		.4byte	.LVL32
 5222 0078 0D000000 		.4byte	.LVL34-1
 5223 007c 0100     		.2byte	0x1
 5224 007e 50       		.byte	0x50
 5225 007f 0D000000 		.4byte	.LVL34-1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 120


 5226 0083 36000000 		.4byte	.LVL41
 5227 0087 0100     		.2byte	0x1
 5228 0089 55       		.byte	0x55
 5229 008a 36000000 		.4byte	.LVL41
 5230 008e 40000000 		.4byte	.LFE37
 5231 0092 0600     		.2byte	0x6
 5232 0094 F3       		.byte	0xf3
 5233 0095 03       		.uleb128 0x3
 5234 0096 F5       		.byte	0xf5
 5235 0097 00       		.uleb128 0
 5236 0098 25       		.uleb128 0x25
 5237 0099 9F       		.byte	0x9f
 5238 009a 00000000 		.4byte	0
 5239 009e 00000000 		.4byte	0
 5240              	.LLST5:
 5241 00a2 04000000 		.4byte	.LVL33
 5242 00a6 0D000000 		.4byte	.LVL34-1
 5243 00aa 0100     		.2byte	0x1
 5244 00ac 50       		.byte	0x50
 5245 00ad 0D000000 		.4byte	.LVL34-1
 5246 00b1 24000000 		.4byte	.LVL36
 5247 00b5 0100     		.2byte	0x1
 5248 00b7 55       		.byte	0x55
 5249 00b8 24000000 		.4byte	.LVL36
 5250 00bc 36000000 		.4byte	.LVL40
 5251 00c0 0100     		.2byte	0x1
 5252 00c2 54       		.byte	0x54
 5253 00c3 00000000 		.4byte	0
 5254 00c7 00000000 		.4byte	0
 5255              	.LLST6:
 5256 00cb 00000000 		.4byte	.LVL43
 5257 00cf 04000000 		.4byte	.LVL44
 5258 00d3 0100     		.2byte	0x1
 5259 00d5 50       		.byte	0x50
 5260 00d6 04000000 		.4byte	.LVL44
 5261 00da D4020000 		.4byte	.LFE36
 5262 00de 0400     		.2byte	0x4
 5263 00e0 F3       		.byte	0xf3
 5264 00e1 01       		.uleb128 0x1
 5265 00e2 50       		.byte	0x50
 5266 00e3 9F       		.byte	0x9f
 5267 00e4 00000000 		.4byte	0
 5268 00e8 00000000 		.4byte	0
 5269              	.LLST7:
 5270 00ec 36000000 		.4byte	.LVL48
 5271 00f0 E8000000 		.4byte	.LVL63
 5272 00f4 0100     		.2byte	0x1
 5273 00f6 54       		.byte	0x54
 5274 00f7 3E010000 		.4byte	.LVL72
 5275 00fb 6E010000 		.4byte	.LVL76
 5276 00ff 0100     		.2byte	0x1
 5277 0101 54       		.byte	0x54
 5278 0102 00000000 		.4byte	0
 5279 0106 00000000 		.4byte	0
 5280              	.LLST8:
 5281 010a 34000000 		.4byte	.LVL47
 5282 010e DC000000 		.4byte	.LVL60
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 121


 5283 0112 0100     		.2byte	0x1
 5284 0114 50       		.byte	0x50
 5285 0115 3E010000 		.4byte	.LVL72
 5286 0119 40010000 		.4byte	.LVL73
 5287 011d 0100     		.2byte	0x1
 5288 011f 50       		.byte	0x50
 5289 0120 00000000 		.4byte	0
 5290 0124 00000000 		.4byte	0
 5291              	.LLST9:
 5292 0128 3C000000 		.4byte	.LVL49
 5293 012c 42000000 		.4byte	.LVL50
 5294 0130 0200     		.2byte	0x2
 5295 0132 30       		.byte	0x30
 5296 0133 9F       		.byte	0x9f
 5297 0134 42000000 		.4byte	.LVL50
 5298 0138 4C000000 		.4byte	.LVL53
 5299 013c 0100     		.2byte	0x1
 5300 013e 53       		.byte	0x53
 5301 013f 4E000000 		.4byte	.LVL54
 5302 0143 58000000 		.4byte	.LVL55
 5303 0147 0100     		.2byte	0x1
 5304 0149 53       		.byte	0x53
 5305 014a 6A000000 		.4byte	.LVL57
 5306 014e 6C000000 		.4byte	.LVL58
 5307 0152 0100     		.2byte	0x1
 5308 0154 53       		.byte	0x53
 5309 0155 0A020000 		.4byte	.LVL79
 5310 0159 10020000 		.4byte	.LVL80
 5311 015d 0200     		.2byte	0x2
 5312 015f 30       		.byte	0x30
 5313 0160 9F       		.byte	0x9f
 5314 0161 10020000 		.4byte	.LVL80
 5315 0165 1A020000 		.4byte	.LVL83
 5316 0169 0100     		.2byte	0x1
 5317 016b 53       		.byte	0x53
 5318 016c 1C020000 		.4byte	.LVL84
 5319 0170 2B020000 		.4byte	.LVL86-1
 5320 0174 0100     		.2byte	0x1
 5321 0176 53       		.byte	0x53
 5322 0177 00000000 		.4byte	0
 5323 017b 00000000 		.4byte	0
 5324              	.LLST10:
 5325 017f 3C000000 		.4byte	.LVL49
 5326 0183 42000000 		.4byte	.LVL50
 5327 0187 0200     		.2byte	0x2
 5328 0189 30       		.byte	0x30
 5329 018a 9F       		.byte	0x9f
 5330 018b 42000000 		.4byte	.LVL50
 5331 018f 48000000 		.4byte	.LVL51
 5332 0193 0100     		.2byte	0x1
 5333 0195 52       		.byte	0x52
 5334 0196 4A000000 		.4byte	.LVL52
 5335 019a 5C000000 		.4byte	.LVL56
 5336 019e 0100     		.2byte	0x1
 5337 01a0 52       		.byte	0x52
 5338 01a1 6A000000 		.4byte	.LVL57
 5339 01a5 82000000 		.4byte	.LVL59
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 122


 5340 01a9 0100     		.2byte	0x1
 5341 01ab 52       		.byte	0x52
 5342 01ac 3E010000 		.4byte	.LVL72
 5343 01b0 46010000 		.4byte	.LVL74
 5344 01b4 0100     		.2byte	0x1
 5345 01b6 52       		.byte	0x52
 5346 01b7 0A020000 		.4byte	.LVL79
 5347 01bb 10020000 		.4byte	.LVL80
 5348 01bf 0200     		.2byte	0x2
 5349 01c1 30       		.byte	0x30
 5350 01c2 9F       		.byte	0x9f
 5351 01c3 10020000 		.4byte	.LVL80
 5352 01c7 16020000 		.4byte	.LVL81
 5353 01cb 0100     		.2byte	0x1
 5354 01cd 52       		.byte	0x52
 5355 01ce 18020000 		.4byte	.LVL82
 5356 01d2 24020000 		.4byte	.LVL85
 5357 01d6 0100     		.2byte	0x1
 5358 01d8 52       		.byte	0x52
 5359 01d9 00000000 		.4byte	0
 5360 01dd 00000000 		.4byte	0
 5361              	.LLST11:
 5362 01e1 DC000000 		.4byte	.LVL60
 5363 01e5 E5000000 		.4byte	.LVL62-1
 5364 01e9 0100     		.2byte	0x1
 5365 01eb 50       		.byte	0x50
 5366 01ec F0000000 		.4byte	.LVL64
 5367 01f0 F9000000 		.4byte	.LVL66-1
 5368 01f4 0100     		.2byte	0x1
 5369 01f6 50       		.byte	0x50
 5370 01f7 00000000 		.4byte	0
 5371 01fb 00000000 		.4byte	0
 5372              	.LLST12:
 5373 01ff 00000000 		.4byte	.LVL92
 5374 0203 0F000000 		.4byte	.LVL93-1
 5375 0207 0100     		.2byte	0x1
 5376 0209 50       		.byte	0x50
 5377 020a 0F000000 		.4byte	.LVL93-1
 5378 020e 44000000 		.4byte	.LFE40
 5379 0212 0400     		.2byte	0x4
 5380 0214 F3       		.byte	0xf3
 5381 0215 01       		.uleb128 0x1
 5382 0216 50       		.byte	0x50
 5383 0217 9F       		.byte	0x9f
 5384 0218 00000000 		.4byte	0
 5385 021c 00000000 		.4byte	0
 5386              	.LLST13:
 5387 0220 00000000 		.4byte	.LVL92
 5388 0224 0F000000 		.4byte	.LVL93-1
 5389 0228 0100     		.2byte	0x1
 5390 022a 51       		.byte	0x51
 5391 022b 0F000000 		.4byte	.LVL93-1
 5392 022f 32000000 		.4byte	.LVL101
 5393 0233 0100     		.2byte	0x1
 5394 0235 56       		.byte	0x56
 5395 0236 32000000 		.4byte	.LVL101
 5396 023a 44000000 		.4byte	.LFE40
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 123


 5397 023e 0600     		.2byte	0x6
 5398 0240 F3       		.byte	0xf3
 5399 0241 03       		.uleb128 0x3
 5400 0242 F5       		.byte	0xf5
 5401 0243 01       		.uleb128 0x1
 5402 0244 25       		.uleb128 0x25
 5403 0245 9F       		.byte	0x9f
 5404 0246 00000000 		.4byte	0
 5405 024a 00000000 		.4byte	0
 5406              	.LLST14:
 5407 024e 00000000 		.4byte	.LVL92
 5408 0252 0F000000 		.4byte	.LVL93-1
 5409 0256 0100     		.2byte	0x1
 5410 0258 52       		.byte	0x52
 5411 0259 0F000000 		.4byte	.LVL93-1
 5412 025d 32000000 		.4byte	.LVL100
 5413 0261 0100     		.2byte	0x1
 5414 0263 55       		.byte	0x55
 5415 0264 32000000 		.4byte	.LVL100
 5416 0268 44000000 		.4byte	.LFE40
 5417 026c 0600     		.2byte	0x6
 5418 026e F3       		.byte	0xf3
 5419 026f 03       		.uleb128 0x3
 5420 0270 F5       		.byte	0xf5
 5421 0271 02       		.uleb128 0x2
 5422 0272 25       		.uleb128 0x25
 5423 0273 9F       		.byte	0x9f
 5424 0274 00000000 		.4byte	0
 5425 0278 00000000 		.4byte	0
 5426              	.LLST15:
 5427 027c 00000000 		.4byte	.LVL92
 5428 0280 0F000000 		.4byte	.LVL93-1
 5429 0284 0100     		.2byte	0x1
 5430 0286 53       		.byte	0x53
 5431 0287 0F000000 		.4byte	.LVL93-1
 5432 028b 32000000 		.4byte	.LVL99
 5433 028f 0100     		.2byte	0x1
 5434 0291 54       		.byte	0x54
 5435 0292 32000000 		.4byte	.LVL99
 5436 0296 44000000 		.4byte	.LFE40
 5437 029a 0600     		.2byte	0x6
 5438 029c F3       		.byte	0xf3
 5439 029d 03       		.uleb128 0x3
 5440 029e F5       		.byte	0xf5
 5441 029f 03       		.uleb128 0x3
 5442 02a0 25       		.uleb128 0x25
 5443 02a1 9F       		.byte	0x9f
 5444 02a2 00000000 		.4byte	0
 5445 02a6 00000000 		.4byte	0
 5446              	.LLST16:
 5447 02aa 18000000 		.4byte	.LVL95
 5448 02ae 21000000 		.4byte	.LVL96-1
 5449 02b2 0100     		.2byte	0x1
 5450 02b4 50       		.byte	0x50
 5451 02b5 21000000 		.4byte	.LVL96-1
 5452 02b9 32000000 		.4byte	.LVL98
 5453 02bd 0100     		.2byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 124


 5454 02bf 57       		.byte	0x57
 5455 02c0 00000000 		.4byte	0
 5456 02c4 00000000 		.4byte	0
 5457              	.LLST17:
 5458 02c8 00000000 		.4byte	.LVL102
 5459 02cc 11000000 		.4byte	.LVL103-1
 5460 02d0 0100     		.2byte	0x1
 5461 02d2 50       		.byte	0x50
 5462 02d3 11000000 		.4byte	.LVL103-1
 5463 02d7 F8000000 		.4byte	.LVL122
 5464 02db 0100     		.2byte	0x1
 5465 02dd 54       		.byte	0x54
 5466 02de F8000000 		.4byte	.LVL122
 5467 02e2 FA000000 		.4byte	.LVL123
 5468 02e6 0100     		.2byte	0x1
 5469 02e8 50       		.byte	0x50
 5470 02e9 FA000000 		.4byte	.LVL123
 5471 02ed FA000000 		.4byte	.LVL124
 5472 02f1 0100     		.2byte	0x1
 5473 02f3 54       		.byte	0x54
 5474 02f4 FA000000 		.4byte	.LVL124
 5475 02f8 38010000 		.4byte	.LFE41
 5476 02fc 0400     		.2byte	0x4
 5477 02fe F3       		.byte	0xf3
 5478 02ff 01       		.uleb128 0x1
 5479 0300 50       		.byte	0x50
 5480 0301 9F       		.byte	0x9f
 5481 0302 00000000 		.4byte	0
 5482 0306 00000000 		.4byte	0
 5483              	.LLST18:
 5484 030a 00000000 		.4byte	.LVL102
 5485 030e 11000000 		.4byte	.LVL103-1
 5486 0312 0100     		.2byte	0x1
 5487 0314 51       		.byte	0x51
 5488 0315 11000000 		.4byte	.LVL103-1
 5489 0319 4A000000 		.4byte	.LVL109
 5490 031d 0100     		.2byte	0x1
 5491 031f 55       		.byte	0x55
 5492 0320 4A000000 		.4byte	.LVL109
 5493 0324 F8000000 		.4byte	.LVL122
 5494 0328 0400     		.2byte	0x4
 5495 032a F3       		.byte	0xf3
 5496 032b 01       		.uleb128 0x1
 5497 032c 51       		.byte	0x51
 5498 032d 9F       		.byte	0x9f
 5499 032e F8000000 		.4byte	.LVL122
 5500 0332 FA000000 		.4byte	.LVL123
 5501 0336 0100     		.2byte	0x1
 5502 0338 51       		.byte	0x51
 5503 0339 FA000000 		.4byte	.LVL123
 5504 033d 38010000 		.4byte	.LFE41
 5505 0341 0400     		.2byte	0x4
 5506 0343 F3       		.byte	0xf3
 5507 0344 01       		.uleb128 0x1
 5508 0345 51       		.byte	0x51
 5509 0346 9F       		.byte	0x9f
 5510 0347 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 125


 5511 034b 00000000 		.4byte	0
 5512              	.LLST19:
 5513 034f 3A000000 		.4byte	.LVL106
 5514 0353 3D000000 		.4byte	.LVL107-1
 5515 0357 0100     		.2byte	0x1
 5516 0359 50       		.byte	0x50
 5517 035a 00000000 		.4byte	0
 5518 035e 00000000 		.4byte	0
 5519              	.LLST20:
 5520 0362 8A000000 		.4byte	.LVL113
 5521 0366 BE000000 		.4byte	.LVL119
 5522 036a 0100     		.2byte	0x1
 5523 036c 55       		.byte	0x55
 5524 036d 00000000 		.4byte	0
 5525 0371 00000000 		.4byte	0
 5526              	.LLST21:
 5527 0375 1C000000 		.4byte	.LVL104
 5528 0379 33000000 		.4byte	.LVL105-1
 5529 037d 0100     		.2byte	0x1
 5530 037f 50       		.byte	0x50
 5531 0380 00000000 		.4byte	0
 5532 0384 00000000 		.4byte	0
 5533              	.LLST22:
 5534 0388 00000000 		.4byte	.LVL125
 5535 038c 19000000 		.4byte	.LVL127-1
 5536 0390 0100     		.2byte	0x1
 5537 0392 50       		.byte	0x50
 5538 0393 19000000 		.4byte	.LVL127-1
 5539 0397 24000000 		.4byte	.LFE42
 5540 039b 0400     		.2byte	0x4
 5541 039d F3       		.byte	0xf3
 5542 039e 01       		.uleb128 0x1
 5543 039f 50       		.byte	0x50
 5544 03a0 9F       		.byte	0x9f
 5545 03a1 00000000 		.4byte	0
 5546 03a5 00000000 		.4byte	0
 5547              	.LLST23:
 5548 03a9 0A000000 		.4byte	.LVL126
 5549 03ad 1E000000 		.4byte	.LVL128
 5550 03b1 0100     		.2byte	0x1
 5551 03b3 54       		.byte	0x54
 5552 03b4 1E000000 		.4byte	.LVL128
 5553 03b8 24000000 		.4byte	.LFE42
 5554 03bc 0500     		.2byte	0x5
 5555 03be 03       		.byte	0x3
 5556 03bf 00000000 		.4byte	inAuto
 5557 03c3 00000000 		.4byte	0
 5558 03c7 00000000 		.4byte	0
 5559              	.LLST24:
 5560 03cb 00000000 		.4byte	.LVL129
 5561 03cf 07000000 		.4byte	.LVL130-1
 5562 03d3 0100     		.2byte	0x1
 5563 03d5 50       		.byte	0x50
 5564 03d6 07000000 		.4byte	.LVL130-1
 5565 03da 1C000000 		.4byte	.LFE43
 5566 03de 0600     		.2byte	0x6
 5567 03e0 F3       		.byte	0xf3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 126


 5568 03e1 03       		.uleb128 0x3
 5569 03e2 F5       		.byte	0xf5
 5570 03e3 00       		.uleb128 0
 5571 03e4 25       		.uleb128 0x25
 5572 03e5 9F       		.byte	0x9f
 5573 03e6 00000000 		.4byte	0
 5574 03ea 00000000 		.4byte	0
 5575              	.LLST25:
 5576 03ee 10000000 		.4byte	.LVL131
 5577 03f2 13000000 		.4byte	.LVL132-1
 5578 03f6 0100     		.2byte	0x1
 5579 03f8 50       		.byte	0x50
 5580 03f9 00000000 		.4byte	0
 5581 03fd 00000000 		.4byte	0
 5582              	.LLST26:
 5583 0401 00000000 		.4byte	.LVL133
 5584 0405 04000000 		.4byte	.LVL135
 5585 0409 0100     		.2byte	0x1
 5586 040b 50       		.byte	0x50
 5587 040c 04000000 		.4byte	.LVL135
 5588 0410 48020000 		.4byte	.LFE44
 5589 0414 0400     		.2byte	0x4
 5590 0416 F3       		.byte	0xf3
 5591 0417 01       		.uleb128 0x1
 5592 0418 50       		.byte	0x50
 5593 0419 9F       		.byte	0x9f
 5594 041a 00000000 		.4byte	0
 5595 041e 00000000 		.4byte	0
 5596              	.LLST27:
 5597 0422 48000000 		.4byte	.LVL140
 5598 0426 60000000 		.4byte	.LVL141
 5599 042a 0200     		.2byte	0x2
 5600 042c 30       		.byte	0x30
 5601 042d 9F       		.byte	0x9f
 5602 042e 74000000 		.4byte	.LVL145
 5603 0432 88000000 		.4byte	.LVL146
 5604 0436 0100     		.2byte	0x1
 5605 0438 50       		.byte	0x50
 5606 0439 88000000 		.4byte	.LVL146
 5607 043d 98000000 		.4byte	.LVL148
 5608 0441 0100     		.2byte	0x1
 5609 0443 54       		.byte	0x54
 5610 0444 98000000 		.4byte	.LVL148
 5611 0448 A4000000 		.4byte	.LVL149
 5612 044c 0100     		.2byte	0x1
 5613 044e 50       		.byte	0x50
 5614 044f A4000000 		.4byte	.LVL149
 5615 0453 48020000 		.4byte	.LFE44
 5616 0457 0100     		.2byte	0x1
 5617 0459 54       		.byte	0x54
 5618 045a 00000000 		.4byte	0
 5619 045e 00000000 		.4byte	0
 5620              	.LLST28:
 5621 0462 C0010000 		.4byte	.LVL166
 5622 0466 C7010000 		.4byte	.LVL167-1
 5623 046a 0100     		.2byte	0x1
 5624 046c 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 127


 5625 046d 00000000 		.4byte	0
 5626 0471 00000000 		.4byte	0
 5627              	.LLST29:
 5628 0475 00010000 		.4byte	.LVL156
 5629 0479 06010000 		.4byte	.LVL157
 5630 047d 0100     		.2byte	0x1
 5631 047f 50       		.byte	0x50
 5632 0480 00000000 		.4byte	0
 5633 0484 00000000 		.4byte	0
 5634              	.LLST30:
 5635 0488 0C010000 		.4byte	.LVL158
 5636 048c 40010000 		.4byte	.LVL163
 5637 0490 0100     		.2byte	0x1
 5638 0492 55       		.byte	0x55
 5639 0493 00000000 		.4byte	0
 5640 0497 00000000 		.4byte	0
 5641              	.LLST31:
 5642 049b 12010000 		.4byte	.LVL160
 5643 049f 26010000 		.4byte	.LVL161
 5644 04a3 0100     		.2byte	0x1
 5645 04a5 50       		.byte	0x50
 5646 04a6 26010000 		.4byte	.LVL161
 5647 04aa 40010000 		.4byte	.LVL163
 5648 04ae 0100     		.2byte	0x1
 5649 04b0 56       		.byte	0x56
 5650 04b1 00000000 		.4byte	0
 5651 04b5 00000000 		.4byte	0
 5652              	.LLST32:
 5653 04b9 5C000000 		.4byte	.LVL178
 5654 04bd 60000000 		.4byte	.LVL179
 5655 04c1 0100     		.2byte	0x1
 5656 04c3 54       		.byte	0x54
 5657 04c4 62000000 		.4byte	.LVL180
 5658 04c8 72000000 		.4byte	.LVL183
 5659 04cc 0100     		.2byte	0x1
 5660 04ce 54       		.byte	0x54
 5661 04cf 00000000 		.4byte	0
 5662 04d3 00000000 		.4byte	0
 5663              		.section	.debug_aranges,"",%progbits
 5664 0000 9C000000 		.4byte	0x9c
 5665 0004 0200     		.2byte	0x2
 5666 0006 00000000 		.4byte	.Ldebug_info0
 5667 000a 04       		.byte	0x4
 5668 000b 00       		.byte	0
 5669 000c 0000     		.2byte	0
 5670 000e 0000     		.2byte	0
 5671 0010 00000000 		.4byte	.LFB35
 5672 0014 44000000 		.4byte	.LFE35-.LFB35
 5673 0018 00000000 		.4byte	.LFB46
 5674 001c 24000000 		.4byte	.LFE46-.LFB46
 5675 0020 00000000 		.4byte	.LFB47
 5676 0024 1C000000 		.4byte	.LFE47-.LFB47
 5677 0028 00000000 		.4byte	.LFB48
 5678 002c 5C000000 		.4byte	.LFE48-.LFB48
 5679 0030 00000000 		.4byte	.LFB32
 5680 0034 28000000 		.4byte	.LFE32-.LFB32
 5681 0038 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 128


 5682 003c 1C000000 		.4byte	.LFE33-.LFB33
 5683 0040 00000000 		.4byte	.LFB34
 5684 0044 1C000000 		.4byte	.LFE34-.LFB34
 5685 0048 00000000 		.4byte	.LFB37
 5686 004c 40000000 		.4byte	.LFE37-.LFB37
 5687 0050 00000000 		.4byte	.LFB38
 5688 0054 44000000 		.4byte	.LFE38-.LFB38
 5689 0058 00000000 		.4byte	.LFB36
 5690 005c D4020000 		.4byte	.LFE36-.LFB36
 5691 0060 00000000 		.4byte	.LFB39
 5692 0064 30000000 		.4byte	.LFE39-.LFB39
 5693 0068 00000000 		.4byte	.LFB40
 5694 006c 44000000 		.4byte	.LFE40-.LFB40
 5695 0070 00000000 		.4byte	.LFB41
 5696 0074 38010000 		.4byte	.LFE41-.LFB41
 5697 0078 00000000 		.4byte	.LFB42
 5698 007c 24000000 		.4byte	.LFE42-.LFB42
 5699 0080 00000000 		.4byte	.LFB43
 5700 0084 1C000000 		.4byte	.LFE43-.LFB43
 5701 0088 00000000 		.4byte	.LFB44
 5702 008c 48020000 		.4byte	.LFE44-.LFB44
 5703 0090 00000000 		.4byte	.LFB45
 5704 0094 48010000 		.4byte	.LFE45-.LFB45
 5705 0098 00000000 		.4byte	0
 5706 009c 00000000 		.4byte	0
 5707              		.section	.debug_ranges,"",%progbits
 5708              	.Ldebug_ranges0:
 5709 0000 00000000 		.4byte	.LFB35
 5710 0004 44000000 		.4byte	.LFE35
 5711 0008 00000000 		.4byte	.LFB46
 5712 000c 24000000 		.4byte	.LFE46
 5713 0010 00000000 		.4byte	.LFB47
 5714 0014 1C000000 		.4byte	.LFE47
 5715 0018 00000000 		.4byte	.LFB48
 5716 001c 5C000000 		.4byte	.LFE48
 5717 0020 00000000 		.4byte	.LFB32
 5718 0024 28000000 		.4byte	.LFE32
 5719 0028 00000000 		.4byte	.LFB33
 5720 002c 1C000000 		.4byte	.LFE33
 5721 0030 00000000 		.4byte	.LFB34
 5722 0034 1C000000 		.4byte	.LFE34
 5723 0038 00000000 		.4byte	.LFB37
 5724 003c 40000000 		.4byte	.LFE37
 5725 0040 00000000 		.4byte	.LFB38
 5726 0044 44000000 		.4byte	.LFE38
 5727 0048 00000000 		.4byte	.LFB36
 5728 004c D4020000 		.4byte	.LFE36
 5729 0050 00000000 		.4byte	.LFB39
 5730 0054 30000000 		.4byte	.LFE39
 5731 0058 00000000 		.4byte	.LFB40
 5732 005c 44000000 		.4byte	.LFE40
 5733 0060 00000000 		.4byte	.LFB41
 5734 0064 38010000 		.4byte	.LFE41
 5735 0068 00000000 		.4byte	.LFB42
 5736 006c 24000000 		.4byte	.LFE42
 5737 0070 00000000 		.4byte	.LFB43
 5738 0074 1C000000 		.4byte	.LFE43
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 129


 5739 0078 00000000 		.4byte	.LFB44
 5740 007c 48020000 		.4byte	.LFE44
 5741 0080 00000000 		.4byte	.LFB45
 5742 0084 48010000 		.4byte	.LFE45
 5743 0088 00000000 		.4byte	0
 5744 008c 00000000 		.4byte	0
 5745              		.section	.debug_line,"",%progbits
 5746              	.Ldebug_line0:
 5747 0000 49050000 		.section	.debug_str,"MS",%progbits,1
 5747      02009802 
 5747      00000201 
 5747      FB0E0D00 
 5747      01010101 
 5748              	.LASF97:
 5749 0000 43757272 		.ascii	"Current_Read_Task\000"
 5749      656E745F 
 5749      52656164 
 5749      5F546173 
 5749      6B00
 5750              	.LASF122:
 5751 0012 43757272 		.ascii	"CurrentPosition\000"
 5751      656E7450 
 5751      6F736974 
 5751      696F6E00 
 5752              	.LASF159:
 5753 0022 72784D65 		.ascii	"rxMessage\000"
 5753      73736167 
 5753      6500
 5754              	.LASF207:
 5755 002c 6D61696E 		.ascii	"main.c\000"
 5755      2E6300
 5756              	.LASF144:
 5757 0033 70776D4C 		.ascii	"pwmLimit\000"
 5757      696D6974 
 5757      00
 5758              	.LASF84:
 5759 003c 74786D73 		.ascii	"txmsClear\000"
 5759      436C6561 
 5759      7200
 5760              	.LASF157:
 5761 0046 4C6F636B 		.ascii	"Lock\000"
 5761      00
 5762              	.LASF66:
 5763 004b 65666673 		.ascii	"effsetdelta\000"
 5763      65746465 
 5763      6C746100 
 5764              	.LASF45:
 5765 0057 6673456E 		.ascii	"fsEncoder\000"
 5765      636F6465 
 5765      7200
 5766              	.LASF39:
 5767 0061 6373556E 		.ascii	"csUnconfig\000"
 5767      636F6E66 
 5767      696700
 5768              	.LASF116:
 5769 006c 6E657741 		.ascii	"newAuto\000"
 5769      75746F00 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 130


 5770              	.LASF1:
 5771 0074 756E7369 		.ascii	"unsigned int\000"
 5771      676E6564 
 5771      20696E74 
 5771      00
 5772              	.LASF152:
 5773 0081 43757272 		.ascii	"Current\000"
 5773      656E7400 
 5774              	.LASF201:
 5775 0089 50574D5F 		.ascii	"PWM_1_Start\000"
 5775      315F5374 
 5775      61727400 
 5776              	.LASF70:
 5777 0095 636C6561 		.ascii	"clearfaults\000"
 5777      72666175 
 5777      6C747300 
 5778              	.LASF21:
 5779 00a1 696E7431 		.ascii	"int16\000"
 5779      3600
 5780              	.LASF108:
 5781 00a7 6E65774B 		.ascii	"newKd\000"
 5781      6400
 5782              	.LASF107:
 5783 00ad 6E65774B 		.ascii	"newKi\000"
 5783      6900
 5784              	.LASF106:
 5785 00b3 6E65774B 		.ascii	"newKp\000"
 5785      7000
 5786              	.LASF172:
 5787 00b9 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 5787      5F494E5F 
 5787      436C6561 
 5787      72496E74 
 5787      65727275 
 5788              	.LASF102:
 5789 00d0 6C696D69 		.ascii	"limit\000"
 5789      7400
 5790              	.LASF192:
 5791 00d6 4C45445F 		.ascii	"LED_Write\000"
 5791      57726974 
 5791      6500
 5792              	.LASF88:
 5793 00e0 486F6D65 		.ascii	"HomeIsrHandler\000"
 5793      49737248 
 5793      616E646C 
 5793      657200
 5794              	.LASF86:
 5795 00ef 74784D65 		.ascii	"txMessageStates_t\000"
 5795      73736167 
 5795      65537461 
 5795      7465735F 
 5795      7400
 5796              	.LASF111:
 5797 0101 6572726F 		.ascii	"error\000"
 5797      7200
 5798              	.LASF93:
 5799 0107 436C6561 		.ascii	"ClearFault\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 131


 5799      72466175 
 5799      6C7400
 5800              	.LASF31:
 5801 0112 50656E64 		.ascii	"PendSV_IRQn\000"
 5801      53565F49 
 5801      52516E00 
 5802              	.LASF163:
 5803 011e 4932435F 		.ascii	"I2C_Start\000"
 5803      53746172 
 5803      7400
 5804              	.LASF127:
 5805 0128 4C617374 		.ascii	"LastJog\000"
 5805      4A6F6700 
 5806              	.LASF40:
 5807 0130 63735265 		.ascii	"csReady\000"
 5807      61647900 
 5808              	.LASF178:
 5809 0138 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 5809      315F5370 
 5809      69556172 
 5809      74436C65 
 5809      61725478 
 5810              	.LASF16:
 5811 0153 75696E74 		.ascii	"uint32_t\000"
 5811      33325F74 
 5811      00
 5812              	.LASF58:
 5813 015c 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 5813      73736167 
 5813      655F6F70 
 5813      636F6465 
 5813      735F7400 
 5814              	.LASF71:
 5815 0170 72784D65 		.ascii	"rxMessage_status_t\000"
 5815      73736167 
 5815      655F7374 
 5815      61747573 
 5815      5F7400
 5816              	.LASF92:
 5817 0183 41737365 		.ascii	"AssertFault\000"
 5817      72744661 
 5817      756C7400 
 5818              	.LASF0:
 5819 018f 666C6F61 		.ascii	"float\000"
 5819      7400
 5820              	.LASF196:
 5821 0195 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 5821      7370695F 
 5821      73735F53 
 5821      74617274 
 5821      457800
 5822              	.LASF59:
 5823 01a8 63686563 		.ascii	"checksum\000"
 5823      6B73756D 
 5823      00
 5824              	.LASF22:
 5825 01b1 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 132


 5825      3200
 5826              	.LASF188:
 5827 01b7 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 5827      585F4F55 
 5827      545F5365 
 5827      74447269 
 5827      76654D6F 
 5828              	.LASF174:
 5829 01ce 7370695F 		.ascii	"spi_ss_Read\000"
 5829      73735F52 
 5829      65616400 
 5830              	.LASF15:
 5831 01da 696E7431 		.ascii	"int16_t\000"
 5831      365F7400 
 5832              	.LASF100:
 5833 01e2 72657375 		.ascii	"result\000"
 5833      6C7400
 5834              	.LASF13:
 5835 01e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 5835      206C6F6E 
 5835      6720756E 
 5835      7369676E 
 5835      65642069 
 5836              	.LASF132:
 5837 0200 5049445F 		.ascii	"PID_EffSetDelta\000"
 5837      45666653 
 5837      65744465 
 5837      6C746100 
 5838              	.LASF91:
 5839 0210 73657475 		.ascii	"setupFreeRTOS\000"
 5839      70467265 
 5839      6552544F 
 5839      5300
 5840              	.LASF133:
 5841 021e 6C617374 		.ascii	"lastTime\000"
 5841      54696D65 
 5841      00
 5842              	.LASF146:
 5843 0227 70776D4D 		.ascii	"pwmMin\000"
 5843      696E00
 5844              	.LASF170:
 5845 022e 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 5845      785F436F 
 5845      756E7465 
 5845      725F315F 
 5845      57726974 
 5846              	.LASF135:
 5847 024b 49546572 		.ascii	"ITerm\000"
 5847      6D00
 5848              	.LASF68:
 5849 0251 656E6162 		.ascii	"enable\000"
 5849      6C6500
 5850              	.LASF162:
 5851 0258 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 5851      736B4765 
 5851      74537461 
 5851      636B4869 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 133


 5851      67685761 
 5852              	.LASF202:
 5853 0274 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 5853      315F5772 
 5853      69746550 
 5853      6572696F 
 5853      6400
 5854              	.LASF148:
 5855 0286 436F6E66 		.ascii	"ConfigState\000"
 5855      69675374 
 5855      61746500 
 5856              	.LASF206:
 5857 0292 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5857      43313120 
 5857      352E342E 
 5857      31203230 
 5857      31363036 
 5858 02c5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5858      20726576 
 5858      6973696F 
 5858      6E203233 
 5858      37373135 
 5859 02f8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5859      66756E63 
 5859      74696F6E 
 5859      2D736563 
 5859      74696F6E 
 5860              	.LASF65:
 5861 0320 6C696D69 		.ascii	"limit_ITerm\000"
 5861      745F4954 
 5861      65726D00 
 5862              	.LASF142:
 5863 032c 6F75744D 		.ascii	"outMax_Total\000"
 5863      61785F54 
 5863      6F74616C 
 5863      00
 5864              	.LASF118:
 5865 0339 5049445F 		.ascii	"PID_SetDrive\000"
 5865      53657444 
 5865      72697665 
 5865      00
 5866              	.LASF166:
 5867 0346 76546173 		.ascii	"vTaskDelay\000"
 5867      6B44656C 
 5867      617900
 5868              	.LASF117:
 5869 0351 5F426F6F 		.ascii	"_Bool\000"
 5869      6C00
 5870              	.LASF44:
 5871 0357 6673556E 		.ascii	"fsUnconfigured\000"
 5871      636F6E66 
 5871      69677572 
 5871      656400
 5872              	.LASF126:
 5873 0366 696E4175 		.ascii	"inAuto\000"
 5873      746F00
 5874              	.LASF96:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 134


 5875 036d 64726976 		.ascii	"drive\000"
 5875      6500
 5876              	.LASF182:
 5877 0373 78517565 		.ascii	"xQueueSemaphoreTake\000"
 5877      75655365 
 5877      6D617068 
 5877      6F726554 
 5877      616B6500 
 5878              	.LASF183:
 5879 0387 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 5879      315F5370 
 5879      69556172 
 5879      74507574 
 5879      41727261 
 5880              	.LASF173:
 5881 039d 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 5881      73735F43 
 5881      6C656172 
 5881      496E7465 
 5881      72727570 
 5882              	.LASF90:
 5883 03b3 43757272 		.ascii	"CurrentTemp\000"
 5883      656E7454 
 5883      656D7000 
 5884              	.LASF181:
 5885 03bf 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 5885      7465725F 
 5885      315F5265 
 5885      6164436F 
 5885      756E7465 
 5886              	.LASF184:
 5887 03d5 78517565 		.ascii	"xQueueGenericSend\000"
 5887      75654765 
 5887      6E657269 
 5887      6353656E 
 5887      6400
 5888              	.LASF75:
 5889 03e7 76657273 		.ascii	"version0\000"
 5889      696F6E30 
 5889      00
 5890              	.LASF76:
 5891 03f0 76657273 		.ascii	"version1\000"
 5891      696F6E31 
 5891      00
 5892              	.LASF77:
 5893 03f9 76657273 		.ascii	"version2\000"
 5893      696F6E32 
 5893      00
 5894              	.LASF62:
 5895 0402 72784D65 		.ascii	"rxMessage_overlay_t\000"
 5895      73736167 
 5895      655F6F76 
 5895      65726C61 
 5895      795F7400 
 5896              	.LASF198:
 5897 0416 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 5897      7273745F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 135


 5897      656E636F 
 5897      6465725F 
 5897      53657450 
 5898              	.LASF164:
 5899 0432 496E6974 		.ascii	"Init_INA\000"
 5899      5F494E41 
 5899      00
 5900              	.LASF136:
 5901 043b 506F7369 		.ascii	"Position\000"
 5901      74696F6E 
 5901      00
 5902              	.LASF24:
 5903 0444 63686172 		.ascii	"char\000"
 5903      00
 5904              	.LASF34:
 5905 0449 55426173 		.ascii	"UBaseType_t\000"
 5905      65547970 
 5905      655F7400 
 5906              	.LASF72:
 5907 0455 6F766572 		.ascii	"overlay\000"
 5907      6C617900 
 5908              	.LASF114:
 5909 045d 5049445F 		.ascii	"PID_SetMode\000"
 5909      5365744D 
 5909      6F646500 
 5910              	.LASF94:
 5911 0469 50574D5F 		.ascii	"PWM_Set\000"
 5911      53657400 
 5912              	.LASF177:
 5913 0471 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 5913      315F5370 
 5913      69556172 
 5913      74436C65 
 5913      61725278 
 5914              	.LASF193:
 5915 048c 43794465 		.ascii	"CyDelay\000"
 5915      6C617900 
 5916              	.LASF18:
 5917 0494 75696E74 		.ascii	"uint16\000"
 5917      313600
 5918              	.LASF20:
 5919 049b 696E7438 		.ascii	"int8\000"
 5919      00
 5920              	.LASF61:
 5921 04a0 6F70636F 		.ascii	"opcode\000"
 5921      646500
 5922              	.LASF36:
 5923 04a7 51756575 		.ascii	"QueueHandle_t\000"
 5923      6548616E 
 5923      646C655F 
 5923      7400
 5924              	.LASF190:
 5925 04b5 78546173 		.ascii	"xTaskCreate\000"
 5925      6B437265 
 5925      61746500 
 5926              	.LASF14:
 5927 04c1 75696E74 		.ascii	"uint8_t\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 136


 5927      385F7400 
 5928              	.LASF74:
 5929 04c9 73746174 		.ascii	"status\000"
 5929      757300
 5930              	.LASF46:
 5931 04d0 6673496E 		.ascii	"fsIndex\000"
 5931      64657800 
 5932              	.LASF180:
 5933 04d8 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 5933      315F5772 
 5933      69746543 
 5933      6F6D7061 
 5933      726500
 5934              	.LASF43:
 5935 04eb 66734E4F 		.ascii	"fsNONE\000"
 5935      4E4500
 5936              	.LASF167:
 5937 04f2 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 5937      7273745F 
 5937      656E636F 
 5937      6465725F 
 5937      436C6561 
 5938              	.LASF191:
 5939 050f 78517565 		.ascii	"xQueueCreateMutex\000"
 5939      75654372 
 5939      65617465 
 5939      4D757465 
 5939      7800
 5940              	.LASF199:
 5941 0521 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 5941      7370695F 
 5941      73735F53 
 5941      65745072 
 5941      696F7269 
 5942              	.LASF175:
 5943 0538 78546173 		.ascii	"xTaskGetTickCount\000"
 5943      6B476574 
 5943      5469636B 
 5943      436F756E 
 5943      7400
 5944              	.LASF113:
 5945 054a 74696D65 		.ascii	"timeChange\000"
 5945      4368616E 
 5945      676500
 5946              	.LASF2:
 5947 0555 6C6F6E67 		.ascii	"long long int\000"
 5947      206C6F6E 
 5947      6720696E 
 5947      7400
 5948              	.LASF48:
 5949 0563 66734368 		.ascii	"fsChecksum\000"
 5949      65636B73 
 5949      756D00
 5950              	.LASF33:
 5951 056e 42617365 		.ascii	"BaseType_t\000"
 5951      54797065 
 5951      5F7400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 137


 5952              	.LASF56:
 5953 0579 6F704572 		.ascii	"opError\000"
 5953      726F7200 
 5954              	.LASF7:
 5955 0581 5F5F696E 		.ascii	"__int16_t\000"
 5955      7431365F 
 5955      7400
 5956              	.LASF147:
 5957 058b 686F6D69 		.ascii	"homingDone\000"
 5957      6E67446F 
 5957      6E6500
 5958              	.LASF121:
 5959 0596 736C6565 		.ascii	"sleeptime\000"
 5959      7074696D 
 5959      6500
 5960              	.LASF186:
 5961 05a0 43795379 		.ascii	"CySysWdtResetCounters\000"
 5961      73576474 
 5961      52657365 
 5961      74436F75 
 5961      6E746572 
 5962              	.LASF210:
 5963 05b6 6D656D73 		.ascii	"memset\000"
 5963      657400
 5964              	.LASF26:
 5965 05bd 63796973 		.ascii	"cyisraddress\000"
 5965      72616464 
 5965      72657373 
 5965      00
 5966              	.LASF80:
 5967 05ca 63686563 		.ascii	"checksum_errors\000"
 5967      6B73756D 
 5967      5F657272 
 5967      6F727300 
 5968              	.LASF60:
 5969 05da 73697A65 		.ascii	"size\000"
 5969      00
 5970              	.LASF19:
 5971 05df 75696E74 		.ascii	"uint32\000"
 5971      333200
 5972              	.LASF85:
 5973 05e6 74786D73 		.ascii	"txmsLoaded\000"
 5973      4C6F6164 
 5973      656400
 5974              	.LASF153:
 5975 05f1 43757272 		.ascii	"CurrentI2Cinbuf\000"
 5975      656E7449 
 5975      3243696E 
 5975      62756600 
 5976              	.LASF141:
 5977 0601 72656653 		.ascii	"refSampleTime\000"
 5977      616D706C 
 5977      6554696D 
 5977      6500
 5978              	.LASF137:
 5979 060f 4C617374 		.ascii	"LastPosition\000"
 5979      506F7369 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 138


 5979      74696F6E 
 5979      00
 5980              	.LASF160:
 5981 061c 74784D65 		.ascii	"txMessage\000"
 5981      73736167 
 5981      6500
 5982              	.LASF169:
 5983 0626 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 5983      7465725F 
 5983      315F5772 
 5983      69746543 
 5983      6F756E74 
 5984              	.LASF158:
 5985 063d 4C617374 		.ascii	"LastMessageTimeTick\000"
 5985      4D657373 
 5985      61676554 
 5985      696D6554 
 5985      69636B00 
 5986              	.LASF89:
 5987 0651 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 5987      53535F49 
 5987      73724861 
 5987      6E646C65 
 5987      7200
 5988              	.LASF155:
 5989 0663 75784869 		.ascii	"uxHighWaterMark_Current\000"
 5989      67685761 
 5989      7465724D 
 5989      61726B5F 
 5989      43757272 
 5990              	.LASF35:
 5991 067b 5469636B 		.ascii	"TickType_t\000"
 5991      54797065 
 5991      5F7400
 5992              	.LASF42:
 5993 0686 436F6E66 		.ascii	"ConfigStates_t\000"
 5993      69675374 
 5993      61746573 
 5993      5F7400
 5994              	.LASF104:
 5995 0695 5049445F 		.ascii	"PID_SetTunings\000"
 5995      53657454 
 5995      756E696E 
 5995      677300
 5996              	.LASF3:
 5997 06a4 6C6F6E67 		.ascii	"long double\000"
 5997      20646F75 
 5997      626C6500 
 5998              	.LASF165:
 5999 06b0 67657443 		.ascii	"getCurrent_mA\000"
 5999      75727265 
 5999      6E745F6D 
 5999      4100
 6000              	.LASF209:
 6001 06be 4952516E 		.ascii	"IRQn\000"
 6001      00
 6002              	.LASF25:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 139


 6003 06c3 72656733 		.ascii	"reg32\000"
 6003      3200
 6004              	.LASF38:
 6005 06c9 6373554E 		.ascii	"csUNDEFINED\000"
 6005      44454649 
 6005      4E454400 
 6006              	.LASF110:
 6007 06d5 5049445F 		.ascii	"PID_Compute\000"
 6007      436F6D70 
 6007      75746500 
 6008              	.LASF105:
 6009 06e1 6E657753 		.ascii	"newSampleTime\000"
 6009      616D706C 
 6009      6554696D 
 6009      6500
 6010              	.LASF63:
 6011 06ef 73657175 		.ascii	"sequence\000"
 6011      656E6365 
 6011      00
 6012              	.LASF134:
 6013 06f8 4F757470 		.ascii	"Output\000"
 6013      757400
 6014              	.LASF73:
 6015 06ff 636F6E66 		.ascii	"config\000"
 6015      696700
 6016              	.LASF47:
 6017 0706 66734375 		.ascii	"fsCurrentRead\000"
 6017      7272656E 
 6017      74526561 
 6017      6400
 6018              	.LASF8:
 6019 0714 73686F72 		.ascii	"short int\000"
 6019      7420696E 
 6019      7400
 6020              	.LASF112:
 6021 071e 64506F73 		.ascii	"dPosition\000"
 6021      6974696F 
 6021      6E00
 6022              	.LASF67:
 6023 0728 72784D65 		.ascii	"rxMessage_config_t\000"
 6023      73736167 
 6023      655F636F 
 6023      6E666967 
 6023      5F7400
 6024              	.LASF129:
 6025 073b 5049445F 		.ascii	"PID_Was_Enabled\000"
 6025      5761735F 
 6025      456E6162 
 6025      6C656400 
 6026              	.LASF128:
 6027 074b 5049445F 		.ascii	"PID_Enabled\000"
 6027      456E6162 
 6027      6C656400 
 6028              	.LASF115:
 6029 0757 4D6F6465 		.ascii	"Mode\000"
 6029      00
 6030              	.LASF10:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 140


 6031 075c 6C6F6E67 		.ascii	"long int\000"
 6031      20696E74 
 6031      00
 6032              	.LASF41:
 6033 0765 63734D41 		.ascii	"csMAX\000"
 6033      5800
 6034              	.LASF109:
 6035 076b 73616D70 		.ascii	"sampleTimeInSec\000"
 6035      6C655469 
 6035      6D65496E 
 6035      53656300 
 6036              	.LASF179:
 6037 077b 4379496E 		.ascii	"CyIntSetSysVector\000"
 6037      74536574 
 6037      53797356 
 6037      6563746F 
 6037      7200
 6038              	.LASF28:
 6039 078d 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6039      61736B61 
 6039      626C6549 
 6039      6E745F49 
 6039      52516E00 
 6040              	.LASF37:
 6041 07a1 53656D61 		.ascii	"SemaphoreHandle_t\000"
 6041      70686F72 
 6041      6548616E 
 6041      646C655F 
 6041      7400
 6042              	.LASF161:
 6043 07b3 74784D65 		.ascii	"txMessageState\000"
 6043      73736167 
 6043      65537461 
 6043      746500
 6044              	.LASF187:
 6045 07c2 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 6045      5F4F5554 
 6045      5F536574 
 6045      44726976 
 6045      654D6F64 
 6046              	.LASF99:
 6047 07d8 52617750 		.ascii	"RawPosition\000"
 6047      6F736974 
 6047      696F6E00 
 6048              	.LASF83:
 6049 07e4 74784D65 		.ascii	"txMessage_t\000"
 6049      73736167 
 6049      655F7400 
 6050              	.LASF69:
 6051 07f0 73657470 		.ascii	"setpoint\000"
 6051      6F696E74 
 6051      00
 6052              	.LASF98:
 6053 07f9 47657450 		.ascii	"GetPosition\000"
 6053      6F736974 
 6053      696F6E00 
 6054              	.LASF143:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 141


 6055 0805 6F75744D 		.ascii	"outMax_ITerm\000"
 6055      61785F49 
 6055      5465726D 
 6055      00
 6056              	.LASF154:
 6057 0812 75784869 		.ascii	"uxHighWaterMark_PID\000"
 6057      67685761 
 6057      7465724D 
 6057      61726B5F 
 6057      50494400 
 6058              	.LASF145:
 6059 0826 70776D4D 		.ascii	"pwmMax\000"
 6059      617800
 6060              	.LASF130:
 6061 082d 5049445F 		.ascii	"PID_Setpoint\000"
 6061      53657470 
 6061      6F696E74 
 6061      00
 6062              	.LASF6:
 6063 083a 5F5F7569 		.ascii	"__uint8_t\000"
 6063      6E74385F 
 6063      7400
 6064              	.LASF55:
 6065 0844 6F705374 		.ascii	"opStatus\000"
 6065      61747573 
 6065      00
 6066              	.LASF176:
 6067 084d 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 6067      315F5370 
 6067      69556172 
 6067      74526561 
 6067      64527844 
 6068              	.LASF57:
 6069 0865 6F704D41 		.ascii	"opMAX\000"
 6069      5800
 6070              	.LASF101:
 6071 086b 436F6D6D 		.ascii	"Comm_Task\000"
 6071      5F546173 
 6071      6B00
 6072              	.LASF32:
 6073 0875 53797354 		.ascii	"SysTick_IRQn\000"
 6073      69636B5F 
 6073      4952516E 
 6073      00
 6074              	.LASF151:
 6075 0882 43686563 		.ascii	"ChecksumErrors\000"
 6075      6B73756D 
 6075      4572726F 
 6075      727300
 6076              	.LASF27:
 6077 0891 73697A65 		.ascii	"sizetype\000"
 6077      74797065 
 6077      00
 6078              	.LASF12:
 6079 089a 6C6F6E67 		.ascii	"long unsigned int\000"
 6079      20756E73 
 6079      69676E65 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 142


 6079      6420696E 
 6079      7400
 6080              	.LASF197:
 6081 08ac 6973725F 		.ascii	"isr_home_SetPriority\000"
 6081      686F6D65 
 6081      5F536574 
 6081      5072696F 
 6081      72697479 
 6082              	.LASF189:
 6083 08c1 496E6465 		.ascii	"Index_Counter_1_ReadCounter\000"
 6083      785F436F 
 6083      756E7465 
 6083      725F315F 
 6083      52656164 
 6084              	.LASF124:
 6085 08dd 43757272 		.ascii	"CurrentIndexCount\000"
 6085      656E7449 
 6085      6E646578 
 6085      436F756E 
 6085      7400
 6086              	.LASF205:
 6087 08ef 76546173 		.ascii	"vTaskStartScheduler\000"
 6087      6B537461 
 6087      72745363 
 6087      68656475 
 6087      6C657200 
 6088              	.LASF119:
 6089 0903 70657263 		.ascii	"percent\000"
 6089      656E7400 
 6090              	.LASF200:
 6091 090b 5350495F 		.ascii	"SPI_1_Start\000"
 6091      315F5374 
 6091      61727400 
 6092              	.LASF5:
 6093 0917 756E7369 		.ascii	"unsigned char\000"
 6093      676E6564 
 6093      20636861 
 6093      7200
 6094              	.LASF203:
 6095 0925 436F756E 		.ascii	"Counter_1_Start\000"
 6095      7465725F 
 6095      315F5374 
 6095      61727400 
 6096              	.LASF11:
 6097 0935 5F5F7569 		.ascii	"__uint32_t\000"
 6097      6E743332 
 6097      5F7400
 6098              	.LASF53:
 6099 0940 6F70554E 		.ascii	"opUNDEFINED\000"
 6099      44454649 
 6099      4E454400 
 6100              	.LASF149:
 6101 094c 4661756C 		.ascii	"FaultState\000"
 6101      74537461 
 6101      746500
 6102              	.LASF30:
 6103 0957 53564361 		.ascii	"SVCall_IRQn\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 143


 6103      6C6C5F49 
 6103      52516E00 
 6104              	.LASF49:
 6105 0963 66735832 		.ascii	"fsX2\000"
 6105      00
 6106              	.LASF50:
 6107 0968 66735833 		.ascii	"fsX3\000"
 6107      00
 6108              	.LASF51:
 6109 096d 66735834 		.ascii	"fsX4\000"
 6109      00
 6110              	.LASF150:
 6111 0972 436F6E66 		.ascii	"ConfigSequence\000"
 6111      69675365 
 6111      7175656E 
 6111      636500
 6112              	.LASF95:
 6113 0981 64757479 		.ascii	"dutycycle\000"
 6113      6379636C 
 6113      6500
 6114              	.LASF140:
 6115 098b 7265664B 		.ascii	"refKd\000"
 6115      6400
 6116              	.LASF139:
 6117 0991 7265664B 		.ascii	"refKi\000"
 6117      6900
 6118              	.LASF120:
 6119 0997 5049445F 		.ascii	"PID_Task\000"
 6119      5461736B 
 6119      00
 6120              	.LASF168:
 6121 09a0 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 6121      745F456E 
 6121      636F6465 
 6121      725F436C 
 6121      65617249 
 6122              	.LASF138:
 6123 09bd 7265664B 		.ascii	"refKp\000"
 6123      7000
 6124              	.LASF78:
 6125 09c3 73746174 		.ascii	"state\000"
 6125      6500
 6126              	.LASF64:
 6127 09c9 6C696D69 		.ascii	"limit_Total\000"
 6127      745F546F 
 6127      74616C00 
 6128              	.LASF185:
 6129 09d5 50524F42 		.ascii	"PROBE_Write\000"
 6129      455F5772 
 6129      69746500 
 6130              	.LASF194:
 6131 09e1 6973725F 		.ascii	"isr_home_StartEx\000"
 6131      686F6D65 
 6131      5F537461 
 6131      72744578 
 6131      00
 6132              	.LASF4:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 144


 6133 09f2 7369676E 		.ascii	"signed char\000"
 6133      65642063 
 6133      68617200 
 6134              	.LASF9:
 6135 09fe 73686F72 		.ascii	"short unsigned int\000"
 6135      7420756E 
 6135      7369676E 
 6135      65642069 
 6135      6E7400
 6136              	.LASF103:
 6137 0a11 5049445F 		.ascii	"PID_Initialize\000"
 6137      496E6974 
 6137      69616C69 
 6137      7A6500
 6138              	.LASF125:
 6139 0a20 6D61696E 		.ascii	"main\000"
 6139      00
 6140              	.LASF29:
 6141 0a25 48617264 		.ascii	"HardFault_IRQn\000"
 6141      4661756C 
 6141      745F4952 
 6141      516E00
 6142              	.LASF81:
 6143 0a34 63757272 		.ascii	"current\000"
 6143      656E7400 
 6144              	.LASF17:
 6145 0a3c 75696E74 		.ascii	"uint8\000"
 6145      3800
 6146              	.LASF23:
 6147 0a42 646F7562 		.ascii	"double\000"
 6147      6C6500
 6148              	.LASF204:
 6149 0a49 496E6465 		.ascii	"Index_Counter_1_Start\000"
 6149      785F436F 
 6149      756E7465 
 6149      725F315F 
 6149      53746172 
 6150              	.LASF156:
 6151 0a5f 75784869 		.ascii	"uxHighWaterMark_Comm\000"
 6151      67685761 
 6151      7465724D 
 6151      61726B5F 
 6151      436F6D6D 
 6152              	.LASF54:
 6153 0a74 6F70436F 		.ascii	"opConfig\000"
 6153      6E666967 
 6153      00
 6154              	.LASF195:
 6155 0a7d 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 6155      7273745F 
 6155      656E636F 
 6155      6465725F 
 6155      53746172 
 6156              	.LASF171:
 6157 0a95 6973725F 		.ascii	"isr_home_ClearPending\000"
 6157      686F6D65 
 6157      5F436C65 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccd0rBj2.s 			page 145


 6157      61725065 
 6157      6E64696E 
 6158              	.LASF79:
 6159 0aab 6661756C 		.ascii	"fault\000"
 6159      7400
 6160              	.LASF87:
 6161 0ab1 52535449 		.ascii	"RSTIsrHandler\000"
 6161      73724861 
 6161      6E646C65 
 6161      7200
 6162              	.LASF82:
 6163 0abf 706F7369 		.ascii	"position\000"
 6163      74696F6E 
 6163      00
 6164              	.LASF52:
 6165 0ac8 4661756C 		.ascii	"FaultStates_t\000"
 6165      74537461 
 6165      7465735F 
 6165      7400
 6166              	.LASF131:
 6167 0ad6 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 6167      45666665 
 6167      63746976 
 6167      65536574 
 6167      706F696E 
 6168              	.LASF208:
 6169 0aec 433A5C70 		.ascii	"C:\\proj\\acsnb-motor-cypress\\QuadEncoderRTOS.cyds"
 6169      726F6A5C 
 6169      6163736E 
 6169      622D6D6F 
 6169      746F722D 
 6170 0b1c 6E00     		.ascii	"n\000"
 6171              	.LASF123:
 6172 0b1e 44656C74 		.ascii	"DeltaPosition\000"
 6172      61506F73 
 6172      6974696F 
 6172      6E00
 6173              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
