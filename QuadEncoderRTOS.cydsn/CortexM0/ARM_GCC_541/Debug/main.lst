ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB43:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 04/07/23 PMR  Rev: 0-2-1 add move timer to messaging, fix jog function
  12:main.c        **** * 02/08/23 PMR  Rev: 0-2-0 rework PID algorithm based on Galil findings
  13:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  14:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  15:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  16:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  17:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  18:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  19:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  20:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  21:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  22:main.c        **** *******************************************************************************/
  23:main.c        **** #include <I2C_I2C.h>
  24:main.c        **** #include <stdbool.h>
  25:main.c        **** #include <stdlib.h>
  26:main.c        **** #include <math.h>
  27:main.c        **** #include "pid.h"
  28:main.c        **** #include "INA219.h"
  29:main.c        **** 
  30:main.c        **** /* Firmware revision as of 2023-04-07 */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 2


  31:main.c        **** #define FIRMWARE_REV_0 0
  32:main.c        **** #define FIRMWARE_REV_1 2
  33:main.c        **** #define FIRMWARE_REV_2 1
  34:main.c        **** 
  35:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  36:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  37:main.c        **** 
  38:main.c        **** /* For the ACS test set, the drives are wired backwards!  Use a polarity of -1 in that case. */
  39:main.c        **** //#define DRIVE_POLARITY -1
  40:main.c        **** #define DRIVE_POLARITY 1
  41:main.c        **** 
  42:main.c        **** /* --------------------------------------------------------------------- 
  43:main.c        ****  * CONSTANTS
  44:main.c        ****  * --------------------------------------------------------------------- */
  45:main.c        **** 
  46:main.c        **** /* Interrupt priorities */
  47:main.c        **** #define NESTED_ISR                             (1u)
  48:main.c        **** #define HIGHER_PRIORITY                        (2u)
  49:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  50:main.c        **** 
  51:main.c        **** /* Interrupt prototypes */
  52:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  53:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  54:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  55:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  56:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  57:main.c        **** 
  58:main.c        **** /* --------------------------------------------------------------------- 
  59:main.c        ****  * WDT Defines
  60:main.c        ****  *
  61:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  62:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  63:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  64:main.c        ****  * --------------------------------------------------------------------- */
  65:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  66:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  67:main.c        **** 
  68:main.c        **** /* --------------------------------------------------------------------- 
  69:main.c        ****  * PWM Defines
  70:main.c        ****  * --------------------------------------------------------------------- */
  71:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  72:main.c        **** #define PWM_NEUTRAL_OLD                        (PWM_15KHZ_PERIOD/2)
  73:main.c        **** #define PWM_SET_NEUTRAL                        (0)
  74:main.c        **** 
  75:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  76:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  77:main.c        **** #define INA219_CAL_VALUE                       (8192)
  78:main.c        **** 
  79:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  80:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  81:main.c        **** 
  82:main.c        **** /* --------------------------------------------------------------------- 
  83:main.c        ****  * PID Defines
  84:main.c        ****  * --------------------------------------------------------------------- */
  85:main.c        **** #define PID_MANUAL                             (0)
  86:main.c        **** #define PID_AUTOMATIC                          (1)
  87:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (250)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 3


  88:main.c        **** #define OVERRIDE_PID_CONSTANTS                 1
  89:main.c        **** #define ITERM_90PCT_FIT_CONSTANT               (13)
  90:main.c        **** 
  91:main.c        **** bool inAuto = false;
  92:main.c        **** 
  93:main.c        **** volatile int8_t Jog;
  94:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  95:main.c        **** int32_t PID_Setpoint, PID_EffectiveSetpoint;
  96:main.c        **** uint8_t PID_EffSetDelta;
  97:main.c        **** uint32_t lastTime;
  98:main.c        **** 
  99:main.c        **** volatile int32_t Position, LastPosition;
 100:main.c        **** volatile int32_t Output;
 101:main.c        **** volatile uint16_t limitOutput;
 102:main.c        **** volatile uint16_t limitIterm;
 103:main.c        **** 
 104:main.c        **** bool homingDone = true;
 105:main.c        **** 
 106:main.c        **** /* --------------------------------------------------------------------- 
 107:main.c        ****  * Move timer defines
 108:main.c        ****  * 
 109:main.c        ****  * Wait for 30 samples of position to be the same before declaring a move
 110:main.c        ****  * done.
 111:main.c        ****  * --------------------------------------------------------------------- */
 112:main.c        **** #define LAST_MOVE_TIME_SAMPLE_COUNT 30
 113:main.c        **** 
 114:main.c        **** /* Use UptimeMicroseconds to calculate how long a move elapsed */
 115:main.c        **** uint32_t LastMoveStartTimeUsec = 0;
 116:main.c        **** uint32_t LastMoveEndTimeUsec = 0;
 117:main.c        **** 
 118:main.c        **** /* Counter for how many samples elapsed since the move was complete */
 119:main.c        **** uint16_t LastMoveStableCount = 0;
 120:main.c        **** 
 121:main.c        **** /* Time value in microseconds for how long the last move took */
 122:main.c        **** uint32_t LastMoveTimeUsec = 0;
 123:main.c        **** 
 124:main.c        **** /* Set this flag when a new move comes down from the ACS */
 125:main.c        **** bool NewCommandedMove = false;
 126:main.c        **** 
 127:main.c        **** /* --------------------------------------------------------------------- 
 128:main.c        ****  * Timekeeping defines
 129:main.c        ****  * --------------------------------------------------------------------- */
 130:main.c        **** volatile uint64_t UptimeMicroseconds = 0;
 131:main.c        **** volatile uint64_t UptimeMicrosecondsAccumulator = 0;
 132:main.c        **** volatile uint64_t UptimeMilliseconds = 0;
 133:main.c        **** volatile uint64_t UptimeMillisecondsAccumulator = 0;
 134:main.c        **** volatile uint64_t UptimeSeconds = 0;
 135:main.c        **** 
 136:main.c        **** /* --------------------------------------------------------------------- 
 137:main.c        ****  * ENCODER PROPERTIES
 138:main.c        ****  *
 139:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 140:main.c        ****  *
 141:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 142:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 143:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 144:main.c        ****  * flag and resetting the counter to 0 again.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 4


 145:main.c        ****  *
 146:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 147:main.c        ****  * --------------------------------------------------------------------- */
 148:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 149:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 150:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 151:main.c        **** 
 152:main.c        **** /* --------------------------------------------------------------------- 
 153:main.c        ****  * GLOBALS
 154:main.c        ****  * --------------------------------------------------------------------- */
 155:main.c        **** /* Coarse reporting of state back to the node box software */
 156:main.c        **** typedef enum {    
 157:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 158:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 159:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 160:main.c        ****     csMAX    
 161:main.c        **** } ConfigStates_t;
 162:main.c        **** 
 163:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 164:main.c        **** 
 165:main.c        **** /* Fault codes, these are bit encoded into a uint8_t */
 166:main.c        **** typedef enum {
 167:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 168:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 169:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 170:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 171:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 172:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 173:main.c        ****     fsX2           = 0b00100000,    /* */
 174:main.c        ****     fsX3           = 0b01000000,    /* */
 175:main.c        ****     fsX4           = 0b10000000     /* */
 176:main.c        **** } FaultStates_t;
 177:main.c        **** 
 178:main.c        **** volatile ConfigStates_t ConfigState;
 179:main.c        **** volatile uint8_t FaultState;
 180:main.c        **** volatile uint8_t ConfigSequence;
 181:main.c        **** volatile uint16_t ChecksumErrors;
 182:main.c        **** volatile int16_t MotorCurrent;
 183:main.c        **** uint8_t CurrentI2Cinbuf[20];
 184:main.c        **** 
 185:main.c        **** /* --------------------------------------------------------------------- 
 186:main.c        ****  * SPI MESSAGING
 187:main.c        ****  * --------------------------------------------------------------------- */
 188:main.c        **** /* V2 protocol 
 189:main.c        **** 
 190:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 191:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 192:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 193:main.c        **** */
 194:main.c        ****     
 195:main.c        **** /* Set this to be at least the size of the status response message */
 196:main.c        **** #define MAX_MESSAGE_SIZE 31
 197:main.c        ****     
 198:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 199:main.c        ****    talking.  Nominally 1 second max of not talking. */
 200:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 201:main.c        **** uint32_t LastMessageTimeSeconds;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 5


 202:main.c        **** 
 203:main.c        **** /* Opcodes that can come from the node box software */
 204:main.c        **** typedef enum {
 205:main.c        ****     opUNDEFINED = 0,
 206:main.c        ****     opConfig    = 1,
 207:main.c        ****     opStatus    = 2,
 208:main.c        ****     opSetEnc    = 3,
 209:main.c        ****     opMAX       
 210:main.c        **** } rxMessage_opcodes_t;    
 211:main.c        **** 
 212:main.c        **** /* Sanity check for opcodes */
 213:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 214:main.c        **** 
 215:main.c        **** typedef struct { 
 216:main.c        ****     uint8_t checksum;        
 217:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 218:main.c        ****     uint8_t opcode;     /* Operation (generic overlay for previewing opcode value) */
 219:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 220:main.c        **** 
 221:main.c        **** /* Configuration message, 22 bytes */
 222:main.c        **** typedef struct {
 223:main.c        ****     uint8_t checksum;        
 224:main.c        ****     uint8_t size;        /* Size of the message bytes, including opcode and size and checksum */
 225:main.c        ****     uint8_t opcode;      /* Operation: 01 == config */        
 226:main.c        ****     uint8_t sequence;    /* Configuration message sequence number */
 227:main.c        ****     
 228:main.c        ****     uint32_t overrideKp; /* If nonzero, override the PID P term */
 229:main.c        ****     uint32_t overrideKi; /* If nonzero, override the PID I term */
 230:main.c        ****     uint32_t overrideKd; /* If nonzero, override the PID D term */
 231:main.c        ****     
 232:main.c        ****     uint16_t limitOutput;/* Drive output limit, ranges from 0 to 800 */
 233:main.c        ****     uint16_t limitIterm; /* PID I term output limit, ranges from 0 to 800 */
 234:main.c        ****     uint16_t effsetdelta;/* PID effective setpoint increment delta, nominally 250 steps */
 235:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 236:main.c        **** 
 237:main.c        **** /* Status message, contains desired position and such values, 10 bytes */
 238:main.c        **** typedef struct {
 239:main.c        ****     uint8_t  checksum;        
 240:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 241:main.c        ****     uint8_t  opcode;     /* Operation: 02 == status */
 242:main.c        ****     uint8_t  enable;     /* Enable/disable PID algorithm */
 243:main.c        ****     int32_t  setpoint;   /* Setpoint (desired actuator position) */
 244:main.c        ****     int8_t   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 245:main.c        ****     uint8_t  clearfaults;/* Set to nonzero to clear all the current faults */
 246:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 247:main.c        ****    
 248:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 249:main.c        **** typedef struct {
 250:main.c        ****     uint8_t  checksum;        
 251:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 252:main.c        ****     uint8_t  opcode;     /* Operation: 03 == set encoders */
 253:main.c        ****     int32_t  setpoint;   /* Setpoint (force an actuator logical position) */
 254:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** /* Wrap the message with an array of bytes */
 258:main.c        **** union {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 6


 259:main.c        ****     uint8_t             buf[MAX_MESSAGE_SIZE];
 260:main.c        ****     rxMessage_overlay_t overlay;
 261:main.c        ****     rxMessage_config_t  config;
 262:main.c        ****     rxMessage_status_t  status;  
 263:main.c        ****     rxMessage_setenc_t  setenc;
 264:main.c        **** } rxMessage;
 265:main.c        **** 
 266:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (31 bytes) */
 267:main.c        **** typedef struct  {  
 268:main.c        ****     uint8_t  checksum;        /* Message checksum */    
 269:main.c        ****     uint8_t  version0;        /* Version byte 0 */ 
 270:main.c        ****     uint8_t  version1;        /* Version byte 1 */
 271:main.c        ****     uint8_t  version2;        /* Version byte 2 */
 272:main.c        ****     uint8_t  size;            /* Size of the message bytes, including opcode and size and checksum 
 273:main.c        ****     uint8_t  opcode;          /* Echo back of the opcode this response is for, operation: 02 == sta
 274:main.c        ****     uint8_t  state;           /* Enum value for current device configuration state */ 
 275:main.c        ****     uint8_t  fault;           /* Bit encoded fields for current fault status */
 276:main.c        ****     uint8_t  sequence;        /* Echo back the config sequence number currently set */
 277:main.c        ****     uint16_t checksum_errors; /* Count of checksum errors */
 278:main.c        ****     int16_t  motor_current;   /* Motor current consumption (mA) */
 279:main.c        ****     int32_t  position;        /* Actual actuator position, signed value */ 
 280:main.c        ****     int16_t  pwm;             /* PWM value the motor is moving at */     
 281:main.c        ****     int32_t  iterm;           /* Instantaneous PID iterm value */
 282:main.c        ****     uint32_t last_move_time;  /* Amount of time for the last move, in us */
 283:main.c        ****     int32_t  iterm_delay;     /* Hold-off time remaining before iterm kicks in */
 284:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 285:main.c        **** 
 286:main.c        **** /* Wrap the message with an array of bytes */
 287:main.c        **** union {    
 288:main.c        ****     uint8_t     buf[MAX_MESSAGE_SIZE];
 289:main.c        ****     txMessage_t msg;
 290:main.c        **** } txMessage;
 291:main.c        **** 
 292:main.c        **** /* State machine definition for transmit side of messaging */
 293:main.c        **** typedef enum {
 294:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 295:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 296:main.c        **** } txMessageStates_t;
 297:main.c        **** 
 298:main.c        **** txMessageStates_t txMessageState;
 299:main.c        **** 
 300:main.c        **** 
 301:main.c        **** 
 302:main.c        **** /* --------------------------------------------------------------------- 
 303:main.c        ****  * Function prototypes
 304:main.c        ****  * --------------------------------------------------------------------- */
 305:main.c        **** int32_t GetPosition(void);
 306:main.c        **** void runRateGroup1_PID(void);
 307:main.c        **** void runRateGroup3_SPI(void);
 308:main.c        **** void MotorCurrentRead(void);
 309:main.c        **** 
 310:main.c        **** 
 311:main.c        **** /*******************************************************************************
 312:main.c        **** * Function Name: AssertFault
 313:main.c        **** ********************************************************************************
 314:main.c        **** * Summary:
 315:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 7


 316:main.c        **** *  all faults.
 317:main.c        **** *
 318:main.c        **** * Parameters: FaultStates_t of the fault detected.
 319:main.c        **** * Return: None
 320:main.c        **** *******************************************************************************/
 321:main.c        **** void AssertFault(FaultStates_t fault) {
 322:main.c        ****  
 323:main.c        ****     switch (fault) {
 324:main.c        ****      
 325:main.c        ****         /* Clears all asserted faults */
 326:main.c        ****         case fsNONE:
 327:main.c        ****             FaultState = fsNONE;
 328:main.c        ****             break;        
 329:main.c        ****         
 330:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 331:main.c        ****         default:
 332:main.c        ****             FaultState |= fault;
 333:main.c        ****             break;        
 334:main.c        ****     }    
 335:main.c        **** }
 336:main.c        **** 
 337:main.c        **** 
 338:main.c        **** /*******************************************************************************
 339:main.c        **** * Function Name: ClearFault
 340:main.c        **** ********************************************************************************
 341:main.c        **** * Summary:
 342:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 343:main.c        **** *  all faults.
 344:main.c        **** *
 345:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 346:main.c        **** * Return: None
 347:main.c        **** *******************************************************************************/
 348:main.c        **** void ClearFault(FaultStates_t fault) {
 349:main.c        ****  
 350:main.c        ****     switch (fault) {
 351:main.c        ****      
 352:main.c        ****         /* Clears all asserted faults */
 353:main.c        ****         case fsNONE:
 354:main.c        ****             FaultState = fsNONE;
 355:main.c        ****             break;        
 356:main.c        ****         
 357:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 358:main.c        ****         default:
 359:main.c        ****             FaultState &= ~fault;
 360:main.c        ****             break;        
 361:main.c        ****     }    
 362:main.c        **** }
 363:main.c        **** 
 364:main.c        **** 
 365:main.c        **** /*******************************************************************************
 366:main.c        **** * Function Name: MotorCurrentRead
 367:main.c        **** ********************************************************************************
 368:main.c        **** * Summary:
 369:main.c        **** *  Read the motor current consumption.
 370:main.c        **** *
 371:main.c        **** * Parameters: None
 372:main.c        **** * Return: None
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 8


 373:main.c        **** *******************************************************************************/
 374:main.c        **** void MotorCurrentRead(void) {
 375:main.c        ****     
 376:main.c        ****     //TODO: Convert this to integer math
 377:main.c        ****     float c;
 378:main.c        ****     
 379:main.c        ****     c = getCurrent_mA(INA219_I2C_ADDR);
 380:main.c        ****     
 381:main.c        ****     /* Assign the global MotorCurrent value */
 382:main.c        ****     MotorCurrent = (int16_t) c;       
 383:main.c        **** }
 384:main.c        **** 
 385:main.c        **** 
 386:main.c        **** /*******************************************************************************
 387:main.c        **** * Function Name: Comm_Task
 388:main.c        **** ********************************************************************************
 389:main.c        **** * Summary:
 390:main.c        **** *  Task to perform the SPI communications.
 391:main.c        **** *
 392:main.c        **** * Parameters: None
 393:main.c        **** * Return: None
 394:main.c        **** *******************************************************************************/
 395:main.c        **** void runRateGroup3_SPI(void) {
 396:main.c        ****  
 397:main.c        ****     rxMessage_opcodes_t opcode;
 398:main.c        ****     uint8_t size;
 399:main.c        ****     uint8_t i;
 400:main.c        ****     uint8_t checksum;
 401:main.c        ****     int32_t distance;
 402:main.c        ****     
 403:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 404:main.c        ****        get to it next cycle! */
 405:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 406:main.c        ****         return;
 407:main.c        ****     
 408:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 409:main.c        ****     switch (txMessageState) {
 410:main.c        ****      
 411:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 412:main.c        ****         case txmsClear:
 413:main.c        ****                 
 414:main.c        ****             /* Get a few items out of the message before checking the sum */
 415:main.c        ****             size     = rxMessage.overlay.size;
 416:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 417:main.c        ****             
 418:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 419:main.c        ****             if (size > sizeof(txMessage.buf))
 420:main.c        ****                 size = sizeof(txMessage.buf);                            
 421:main.c        ****         
 422:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 423:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 424:main.c        ****                 checksum += rxMessage.buf[i]; 
 425:main.c        **** 
 426:main.c        ****             /* Checksum fault, don't try to process the messgage */
 427:main.c        ****             if ((checksum & 0xFF) != 0) {
 428:main.c        ****                 
 429:main.c        ****                 txMessage.msg.opcode = opcode;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 9


 430:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 431:main.c        ****                 ChecksumErrors++;
 432:main.c        ****                 
 433:main.c        ****             /* Message looks fine, process it */
 434:main.c        ****             } else {
 435:main.c        **** 
 436:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 437:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 438:main.c        ****                 
 439:main.c        ****                     switch (opcode) {
 440:main.c        ****                     
 441:main.c        ****                         case opConfig:
 442:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 443:main.c        ****                         
 444:main.c        ****                             /* Remember where we were when the init was sent */
 445:main.c        ****                             LastPosition = GetPosition();
 446:main.c        ****                            
 447:main.c        ****                             /* Initialize the setpoints to be equal to where we are right now.*/
 448:main.c        ****                             PID_Setpoint = LastPosition;
 449:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 450:main.c        ****                             
 451:main.c        ****                             /* Disable PID if it's on */
 452:main.c        ****                             PID_Was_Enabled = false;
 453:main.c        ****                             PID_Enabled = false;
 454:main.c        **** 
 455:main.c        ****                             /* Stop a jog if one was in progress */
 456:main.c        ****                             Jog = 0;
 457:main.c        ****                             
 458:main.c        ****                             /* Output and Iterm limits */
 459:main.c        ****                             limitOutput = rxMessage.config.limitOutput;
 460:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 461:main.c        ****                                 
 462:main.c        ****                                 
 463:main.c        ****                             /* Update the PID values passed down from the server */
 464:main.c        ****                         
 465:main.c        **** #ifndef OVERRIDE_PID_CONSTANTS
 466:main.c        ****                             kp = rxMessage.config.Kp;
 467:main.c        ****                             ki = rxMessage.config.Ki;
 468:main.c        ****                             kd = rxMessage.config.Kd;      
 469:main.c        ****                         
 470:main.c        ****                             /* PID effective setpoint increment delta value */                     
 471:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
 472:main.c        **** #endif
 473:main.c        ****                         
 474:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 475:main.c        ****                             ConfigState = csReady;  
 476:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 477:main.c        ****                         
 478:main.c        ****                             /* Clear all the faults when reconfigured */
 479:main.c        ****                             ClearFault(fsNONE);
 480:main.c        ****                             break;
 481:main.c        **** 
 482:main.c        ****                         case opStatus:
 483:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 484:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 485:main.c        ****                             
 486:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 10


 487:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
 488:main.c        ****                                 
 489:main.c        ****                                 /* This is a new move, start timing! */
 490:main.c        ****                                 NewCommandedMove = true;
 491:main.c        ****                                 LastMoveStartTimeUsec = UptimeMicroseconds;
 492:main.c        ****                                 
 493:main.c        ****                                 /* Remember where we started */
 494:main.c        ****                                 LastPosition = GetPosition();
 495:main.c        ****                                 
 496:main.c        ****                                 /* Update destination */
 497:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 498:main.c        ****                                 
 499:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 500:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 501:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 502:main.c        ****                                 
 503:main.c        ****                                 /* Reset counting of index marks */
 504:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 505:main.c        ****                                 
 506:main.c        ****                                 
 507:main.c        ****                                 /* The demand has changed.  Hold off the integrator for a certain a
 508:main.c        ****                                 dictated by the size of the move (if it's more than 50 counts) */
 509:main.c        ****                                 distance = PID_Setpoint - LastPosition;                            
 510:main.c        ****                                 if (distance < 0) {
 511:main.c        ****                                     distance = -distance;
 512:main.c        ****                                 }
 513:main.c        ****                                 
 514:main.c        ****                                 if (distance > 50) {                                
 515:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 516:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 517:main.c        ****                                 } else {
 518:main.c        ****                                     iterm_delay = 0;
 519:main.c        ****                                 }
 520:main.c        ****                                 
 521:main.c        ****                                 /* The demand has changed, reset the iterm to discharge any build u
 522:main.c        ****                                 iterm = 0;
 523:main.c        ****                             }                                        
 524:main.c        ****                         
 525:main.c        ****                             /* PWM jog value ranges from -100 to 100, where -100 is max-reverse cur
 526:main.c        ****                             100 is max-forward, 0 is neutral/no movement */
 527:main.c        ****                             Jog = rxMessage.status.jog;                                            
 528:main.c        ****                             break;
 529:main.c        ****                         
 530:main.c        ****                         case opSetEnc:
 531:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 532:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);
 533:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 534:main.c        ****                             break;                                        
 535:main.c        ****                             
 536:main.c        ****                         /* No other opcodes are valid */
 537:main.c        ****                         default:
 538:main.c        ****                             break;
 539:main.c        ****                     }                           
 540:main.c        ****                 }                            
 541:main.c        ****             }
 542:main.c        ****             
 543:main.c        ****             /* Get a fresh copy of the position information */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 11


 544:main.c        ****             Position = GetPosition();
 545:main.c        ****             
 546:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 547:main.c        ****             txMessage.msg.checksum        = 0;
 548:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 549:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 550:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 551:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 552:main.c        ****             txMessage.msg.opcode          = opStatus;
 553:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 554:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 555:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 556:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 557:main.c        ****             txMessage.msg.position        = Position;
 558:main.c        ****             txMessage.msg.pwm             = Output;
 559:main.c        ****             txMessage.msg.iterm           = iterm;
 560:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 561:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 562:main.c        ****             txMessage.msg.iterm_delay     = iterm_delay;
 563:main.c        ****             
 564:main.c        ****             /* Set the checksum in the response */
 565:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 566:main.c        ****                 checksum += txMessage.buf[i]; 
 567:main.c        ****                 
 568:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
 569:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 570:main.c        ****                 
 571:main.c        ****             /* Copy the readied buffer out to the FIFO */
 572:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 573:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 574:main.c        **** 
 575:main.c        ****             /* Indicate it's loaded for use */
 576:main.c        ****             txMessageState = txmsLoaded;
 577:main.c        ****             
 578:main.c        ****             /* Clear all the faults if told to */
 579:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 580:main.c        ****                 ClearFault(fsNONE);
 581:main.c        ****         
 582:main.c        ****             break;
 583:main.c        ****     
 584:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 585:main.c        ****         case txmsLoaded:                
 586:main.c        ****             break;
 587:main.c        ****                 
 588:main.c        ****     } // End of message state case statement
 589:main.c        **** 
 590:main.c        **** }
 591:main.c        ****     
 592:main.c        **** 
 593:main.c        **** /*******************************************************************************
 594:main.c        **** * Function Name: PWM_Set
 595:main.c        **** ********************************************************************************
 596:main.c        **** * Summary:
 597:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 598:main.c        **** *
 599:main.c        **** * Parameters: Duty cycle, from -800 to 800 where 0 is neutral (no movement).
 600:main.c        **** * 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 12


 601:main.c        **** * Return: None
 602:main.c        **** *******************************************************************************/
 603:main.c        **** void PWM_Set(int32_t output) {    
 604:main.c        ****         
 605:main.c        ****     /* output varies from -800 to 800, which needs to be expressed as 0 to 1600 
 606:main.c        ****        for the PWM */
 607:main.c        ****     PWM_1_WriteCompare((PWM_15KHZ_PERIOD/2) + (DRIVE_POLARITY * output));    
 608:main.c        **** }
 609:main.c        **** 
 610:main.c        **** 
 611:main.c        **** /*******************************************************************************
 612:main.c        **** * Function Name: GetPosition
 613:main.c        **** ********************************************************************************
 614:main.c        **** * Summary:
 615:main.c        **** *  Get the physical position value and compensate for negative locations.
 616:main.c        **** *
 617:main.c        **** * Parameters: None
 618:main.c        **** * Return: int32_t (signed!) position value
 619:main.c        **** *******************************************************************************/
 620:main.c        **** int32_t GetPosition(void) {
 621:main.c        ****     
 622:main.c        ****     static volatile uint32_t RawPosition;
 623:main.c        ****     static volatile int32_t result;
 624:main.c        ****     
 625:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 626:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 627:main.c        ****     
 628:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 629:main.c        ****        underflow and make that into a negative value */
 630:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 631:main.c        ****         
 632:main.c        ****         result = (-1) * ((int32_t) ENCODER_MAX - (int32_t) RawPosition);
 633:main.c        ****         
 634:main.c        ****     } else {
 635:main.c        ****      
 636:main.c        ****         /* Value is "positive", treat it normally */
 637:main.c        ****         result = (int32_t) RawPosition;
 638:main.c        ****     }
 639:main.c        ****     
 640:main.c        ****     /* Update the master copy of position information */
 641:main.c        ****     Position = result;
 642:main.c        ****     return result;
 643:main.c        **** }
 644:main.c        **** 
 645:main.c        **** 
 646:main.c        **** /*******************************************************************************
 647:main.c        **** * Function Name: PID_Initialize
 648:main.c        **** ********************************************************************************
 649:main.c        **** * Summary:
 650:main.c        **** *  Setup and reset the PID terms.
 651:main.c        **** *
 652:main.c        **** * Parameters: None
 653:main.c        **** * Return: None
 654:main.c        **** *******************************************************************************/
 655:main.c        **** void PID_Initialize(void) {
 656:main.c        ****     
 657:main.c        ****     /* Get up-to-date position */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 13


 658:main.c        ****     Position = GetPosition();
 659:main.c        ****     LastPosition = Position;
 660:main.c        ****     
 661:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 662:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 663:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 664:main.c        ****     
 665:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 666:main.c        ****        switching from manual to auto frequently */
 667:main.c        ****     iterm = 0;
 668:main.c        **** }    
 669:main.c        **** 
 670:main.c        **** 
 671:main.c        **** /*******************************************************************************
 672:main.c        **** * Function Name: PID_SetMode
 673:main.c        **** ********************************************************************************
 674:main.c        **** * Summary:
 675:main.c        **** *  Sets the PID into automatic or manual mode.
 676:main.c        **** *
 677:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 678:main.c        **** * Return: None
 679:main.c        **** *******************************************************************************/
 680:main.c        **** void PID_SetMode(uint32_t Mode) {
 681:main.c        ****     
 682:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 683:main.c        ****     
 684:main.c        ****     if (newAuto && !inAuto) {  
 685:main.c        ****         /*we just went from manual to auto*/
 686:main.c        ****         PID_Initialize();
 687:main.c        ****     }
 688:main.c        ****     
 689:main.c        ****     inAuto = newAuto;
 690:main.c        **** } 
 691:main.c        **** 
 692:main.c        **** 
 693:main.c        **** /*******************************************************************************
 694:main.c        **** * Function Name: runRateGroup1_PID
 695:main.c        **** ********************************************************************************
 696:main.c        **** * Summary:
 697:main.c        **** *  Task to perform the PID calculations.
 698:main.c        **** *
 699:main.c        **** * Parameters: None
 700:main.c        **** * Return: None
 701:main.c        **** *******************************************************************************/
 702:main.c        **** void runRateGroup1_PID(void) {
 703:main.c        ****      
 704:main.c        ****     /////////////////////////////////////////////////////
 705:main.c        ****     // TESTING ONLY
 706:main.c        ****     //ConfigState = csReady;
 707:main.c        ****     //PID_Enabled = true;
 708:main.c        ****     /////////////////////////////////////////////////////
 709:main.c        **** 
 710:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 711:main.c        ****        take preventative action and abandon any moves in progress. */
 712:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 713:main.c        ****         
 714:main.c        ****         /* Stop all motion */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 14


 715:main.c        ****         PWM_Set(PWM_SET_NEUTRAL);
 716:main.c        ****         PID_Enabled = false;
 717:main.c        ****         
 718:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the 
 719:main.c        ****         next message might be a config, in which case we want to be neutral. */
 720:main.c        ****         Jog = 0;
 721:main.c        **** 
 722:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 723:main.c        ****     } else if (ConfigState == csReady) {
 724:main.c        ****         
 725:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 726:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 727:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 728:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 729:main.c        **** 
 730:main.c        ****         /* Handle mode switching */
 731:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 732:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 733:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 734:main.c        ****             PID_SetMode(PID_MANUAL);                
 735:main.c        ****         } else {
 736:main.c        ****             // No mode change happened   
 737:main.c        ****         }
 738:main.c        ****         
 739:main.c        ****         /* Save value for next cycle */
 740:main.c        ****         PID_Was_Enabled = PID_Enabled;
 741:main.c        ****         
 742:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 743:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 744:main.c        ****     
 745:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 746:main.c        ****         
 747:main.c        ****         1) The setpoint will change to 2000.
 748:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 749:main.c        ****         3) Calculate the PID and return.
 750:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 751:main.c        ****         5) Calculate the PID and return.
 752:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 753:main.c        ****         */
 754:main.c        ****         
 755:main.c        ****         if (PID_Enabled) {
 756:main.c        ****             
 757:main.c        ****             if (PID_EffSetDelta == 0) {
 758:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 759:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 760:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 761:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 762:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 763:main.c        ****             } else {
 764:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 765:main.c        ****             }
 766:main.c        ****             
 767:main.c        ****             /* Get most up-to-date current position */
 768:main.c        ****             Position = GetPosition();
 769:main.c        ****             
 770:main.c        ****             /* Run the PID algorithm once */
 771:main.c        ****             Output = PID_UpdateValues(PID_EffectiveSetpoint, Position);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 15


 772:main.c        ****             
 773:main.c        ****             /* Put the PID output value out on the wire */
 774:main.c        ****             PWM_Set(Output);
 775:main.c        ****             
 776:main.c        ****             /* Calculate how long the last commanded move has taken */
 777:main.c        ****             if (NewCommandedMove) {
 778:main.c        ****                 
 779:main.c        ****                 if (Position == PID_Setpoint) {
 780:main.c        ****                     
 781:main.c        ****                     /* We are at the set point, but it's not known if the motion is stable yet, we 
 782:main.c        ****                     Therefore, count how many times we have held at this location.  When it exceeds
 783:main.c        ****                     use the time we first reached this position as the move's end time. */
 784:main.c        ****                     if (LastMoveStableCount == LAST_MOVE_TIME_SAMPLE_COUNT) {
 785:main.c        ****                         
 786:main.c        ****                         /* We have arrived at the set point and have been here for 6ms (30 counts o
 787:main.c        ****                         good and calculate how long this move took */
 788:main.c        ****                         LastMoveTimeUsec = LastMoveEndTimeUsec - LastMoveStartTimeUsec;
 789:main.c        ****                         
 790:main.c        ****                         /* Clear the flag for this particular move */ 
 791:main.c        ****                         NewCommandedMove = false;
 792:main.c        ****                         
 793:main.c        ****                     } else {
 794:main.c        ****                         
 795:main.c        ****                         /* We have reached the destination but it is not yet proven stable. Increme
 796:main.c        ****                         It will be reset to zero if we deviate from this position. */              
 797:main.c        ****                         LastMoveStableCount += 1;
 798:main.c        **** 
 799:main.c        ****                         /* If the stable count is exactly 1, then this might be the start of a new 
 800:main.c        ****                         note the time.  This is potentially the END TIME of a move.  The start time
 801:main.c        ****                         when the node box sent a new set point. */
 802:main.c        ****                         if (LastMoveStableCount == 1) {
 803:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 804:main.c        ****                         }                    
 805:main.c        ****                     }                
 806:main.c        ****                     
 807:main.c        ****                 } else {
 808:main.c        ****                     
 809:main.c        ****                     /* Reset the stable counter, because we are not at the commanded location */
 810:main.c        ****                     LastMoveStableCount = 0;                
 811:main.c        ****                 }
 812:main.c        ****             }
 813:main.c        **** 
 814:main.c        ****         } else {
 815:main.c        ****             
 816:main.c        ****             /* If the server is asking us to jog, do that instead of PID.  Drive in the direction 
 817:main.c        ****             and speed the server told us.  Translate the jog percentage, from -100 to +100, into 
 818:main.c        ****             PWM_Set values from -800 to 800 */
 819:main.c        ****             Output = (Jog * 8);
 820:main.c        ****             
 821:main.c        ****             /* Put the new jog value on the wire, instead of a PID value */
 822:main.c        ****             PWM_Set(Output);            
 823:main.c        ****         }        
 824:main.c        ****         
 825:main.c        ****     } else {
 826:main.c        ****         
 827:main.c        ****         /* Config state is not ready (configured), inhibit all motion */
 828:main.c        ****         PWM_Set(PWM_SET_NEUTRAL);        
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 16


 829:main.c        ****     }
 830:main.c        **** }
 831:main.c        **** 
 832:main.c        **** 
 833:main.c        **** /*******************************************************************************
 834:main.c        **** * Function Name: main
 835:main.c        **** ********************************************************************************
 836:main.c        **** * Summary:
 837:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 838:main.c        **** *
 839:main.c        **** * Parameters: None
 840:main.c        **** * Return: NEVER!
 841:main.c        **** *******************************************************************************/
 842:main.c        **** int main(void) {
 843:main.c        ****     
 844:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 845:main.c        ****        microprocessor.  There is a race condition here: unless the actuator is on a home
 846:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 847:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 848:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 849:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 850:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 851:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 852:main.c        **** 
 853:main.c        ****     
 854:main.c        ****     /********************************************************************** 
 855:main.c        ****     * Interrupts
 856:main.c        ****     **********************************************************************/
 857:main.c        ****     
 858:main.c        ****     /* BRMS timer interrupt */
 859:main.c        ****     Timer_BRMS_Start();
 860:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 861:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 862:main.c        **** 
 863:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 864:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 865:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 866:main.c        **** 
 867:main.c        ****     /* Encoder interrupt */
 868:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 869:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 870:main.c        ****     
 871:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 872:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 873:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 874:main.c        **** 
 875:main.c        ****     /* Enable the global interrupt */
 876:main.c        ****     CyGlobalIntEnable;
 877:main.c        ****     
 878:main.c        ****     /********************************************************************** 
 879:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 880:main.c        ****     **********************************************************************/
 881:main.c        **** 
 882:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 883:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 884:main.c        ****        when you hit a breakpoint. */
 885:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 17


 886:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 887:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 888:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
 889:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 890:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 891:main.c        **** 	
 892:main.c        **** 	/* Enable WDT counter 1 */
 893:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
 894:main.c        **** 	
 895:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
 896:main.c        **** 	CySysWdtLock();
 897:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 898:main.c        **** 	CySysWdtUnlock();        
 899:main.c        **** #endif    
 900:main.c        **** 
 901:main.c        ****     
 902:main.c        ****     /*********************************************************************** 
 903:main.c        ****     * Start the various subsystems.
 904:main.c        ****     ***********************************************************************/
 905:main.c        ****     I2C_Start();
 906:main.c        ****     
 907:main.c        ****     /* Start I2C for the Motor Current monitor */
 908:main.c        ****     //Init_INA(INA219_I2C_ADDR);
 909:main.c        ****     
 910:main.c        ****     CyDelay(100u);
 911:main.c        ****     SPI_1_Start();
 912:main.c        ****     
 913:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
 914:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
 915:main.c        ****     PWM_1_Start();
 916:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 917:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);   
 918:main.c        ****     
 919:main.c        ****     /* Default the jog value to neutral (no movement) */
 920:main.c        ****     Jog = 0;
 921:main.c        ****     
 922:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
 923:main.c        ****     homingDone = false;
 924:main.c        ****    
 925:main.c        ****     /* Start counting the quadrature encoding */
 926:main.c        ****     Counter_1_Start();    
 927:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 928:main.c        ****     LastPosition = ENCODER_MAX;
 929:main.c        ****     
 930:main.c        ****     /* Clear and start the index mark counter */
 931:main.c        ****     Index_Counter_1_Start();
 932:main.c        ****     Index_Counter_1_WriteCounter(0);
 933:main.c        ****      
 934:main.c        ****     /* Start off unconfigured */
 935:main.c        ****     ConfigState = csUnconfig;  
 936:main.c        ****     ConfigSequence = 0;
 937:main.c        ****     ChecksumErrors = 0;
 938:main.c        ****     
 939:main.c        ****     /***************************/
 940:main.c        ****     /* Setup the PID subsystem */
 941:main.c        ****     PID_Initialize();
 942:main.c        ****     PID_SetMode(PID_MANUAL);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 18


 943:main.c        ****     
 944:main.c        ****     /* Initially default to full output max until config tells us otherwise */
 945:main.c        ****     limitOutput = 800;
 946:main.c        ****     limitIterm = 800;
 947:main.c        ****     
 948:main.c        ****     /* Start off disabled */
 949:main.c        ****     PID_Setpoint          = 0;  
 950:main.c        ****     PID_EffectiveSetpoint = 0;
 951:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 952:main.c        ****     PID_Was_Enabled       = false;
 953:main.c        ****     PID_Enabled           = false;
 954:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);
 955:main.c        ****   
 956:main.c        ****     /* Set the encoder direction sense based on the drive polarity */
 957:main.c        ****     if (DRIVE_POLARITY == 1) {
 958:main.c        ****         EncoderDirection_Write(1);
 959:main.c        ****     } else {
 960:main.c        ****         EncoderDirection_Write(0);
 961:main.c        ****     }
 962:main.c        ****     
 963:main.c        ****     /***********************************************************************
 964:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
 965:main.c        ****     * constantly interrupted by the task scheduler.
 966:main.c        ****     ***********************************************************************/
 967:main.c        ****     while (1) {
 968:main.c        **** 
 969:main.c        ****         //TODO: Enable/disable this mechanism based on some input from the SPI master,
 970:main.c        ****         //      which might be the ACS test set, or the beagle bone node box.  Disable it for
 971:main.c        ****         //      now to prevent multi-mastering of the I2C bus, which doesn't work.
 972:main.c        ****         /*
 973:main.c        ****         PROBE_Write(1);
 974:main.c        ****         MotorCurrentRead();
 975:main.c        ****         PROBE_Write(0);
 976:main.c        ****         */
 977:main.c        ****         
 978:main.c        ****         /*
 979:main.c        ****         if (UptimeMicroseconds > (LastUptimeMicroseconds + 500)) {
 980:main.c        ****             LastUptimeMicroseconds = UptimeMicroseconds;
 981:main.c        ****             
 982:main.c        ****             if (toggle) {
 983:main.c        ****                 PROBE_Write(1);
 984:main.c        ****                 toggle = false;
 985:main.c        ****             } else {
 986:main.c        ****                 PROBE_Write(0);
 987:main.c        ****                 toggle = true;
 988:main.c        ****             }
 989:main.c        ****         }
 990:main.c        ****         */
 991:main.c        ****         
 992:main.c        ****         
 993:main.c        ****         /* Use the LED as a heartbeat */
 994:main.c        ****         if (UptimeSeconds % 2) {
 995:main.c        ****             LED_Write(1);
 996:main.c        ****         } else {
 997:main.c        ****             LED_Write(0);
 998:main.c        ****         } 
 999:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 19


1000:main.c        ****         // Delay 10ms before next loop iteration
1001:main.c        ****         CyDelay(10);         
1002:main.c        ****         
1003:main.c        ****         
1004:main.c        ****    
1005:main.c        ****     /* ------------------------------------------------------------------------------------ */
1006:main.c        ****     /* Every loop, refresh the counter of the watchdog to indicate the system is still alive
1007:main.c        ****        and not stalled out in some interrupt somewhre.  Were the BRMS to stop working or the 
1008:main.c        ****        motion thread to die, the CPU will be reset after 2 seconds. */
1009:main.c        **** ////    WDT_COUNT1_REFRESH();        
1010:main.c        ****     /* ------------------------------------------------------------------------------------ */
1011:main.c        ****         
1012:main.c        ****     }
1013:main.c        ****       
1014:main.c        ****     
1015:main.c        ****     /***********************************************************************
1016:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
1017:main.c        ****     ***********************************************************************/
1018:main.c        ****     return 1;       
1019:main.c        **** }
1020:main.c        **** 
1021:main.c        **** 
1022:main.c        **** /*******************************************************************************
1023:main.c        **** * Function Name: BRMS_Interrupt
1024:main.c        **** ********************************************************************************
1025:main.c        **** * Summary:
1026:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
1027:main.c        **** *
1028:main.c        **** * Parameters: None
1029:main.c        **** * Return: None
1030:main.c        **** *******************************************************************************/
1031:main.c        **** CY_ISR(BRMS_Interrupt) {
1032:main.c        ****     
1033:main.c        ****     static uint32_t brmsTask;                 // The BRMS schedule counter
1034:main.c        **** 
1035:main.c        ****     static uint32_t brmsRG1Mask = 0b00000001; // Rate group 1 mask
1036:main.c        ****     static uint32_t brmsRG2Mask = 0b00000010; // Rate group 2 mask
1037:main.c        ****     static uint32_t brmsRG3Mask = 0b00000100; // Rate group 3 mask
1038:main.c        ****     static uint32_t brmsRG4Mask = 0b00001000; // Rate group 4 mask
1039:main.c        ****     static uint32_t brmsRG5Mask = 0b00010000; // Rate group 5 mask
1040:main.c        ****     
1041:main.c        ****     /* Clears the timer interrupt */
1042:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
1043:main.c        **** 
1044:main.c        ****     PROBE_Write(1);
1045:main.c        ****     
1046:main.c        ****     /* Use this 200us interrupt as a clock mechanism */
1047:main.c        ****     UptimeMicroseconds += 200;
1048:main.c        ****     UptimeMicrosecondsAccumulator += 200;
1049:main.c        ****     
1050:main.c        ****     /* Count milliseconds */
1051:main.c        ****     if (UptimeMicrosecondsAccumulator > 1000) {
1052:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1053:main.c        ****         UptimeMilliseconds += 1;
1054:main.c        ****         UptimeMillisecondsAccumulator += 1;
1055:main.c        ****     }
1056:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 20


1057:main.c        ****     /* Count seconds */
1058:main.c        ****     if (UptimeMillisecondsAccumulator > 1000) {
1059:main.c        ****         UptimeMillisecondsAccumulator = 0;
1060:main.c        ****         UptimeSeconds += 1;
1061:main.c        ****     }
1062:main.c        ****     
1063:main.c        ****     /* Increment the BRMS task counter infinitely */
1064:main.c        ****     brmsTask++;
1065:main.c        **** 
1066:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
1067:main.c        ****        sequentially until one results in a "true" value.  
1068:main.c        ****     
1069:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1070:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1071:main.c        ****     
1072:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
1073:main.c        ****        value ends in 0bxx10. 
1074:main.c        ****     
1075:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1076:main.c        ****        ends in 0bx100.  
1077:main.c        ****     
1078:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1079:main.c        ****     
1080:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1081:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1082:main.c        ****        interrupt returns.
1083:main.c        ****     */
1084:main.c        ****     if (brmsTask & brmsRG1Mask) {
1085:main.c        ****         
1086:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1087:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1088:main.c        ****            to a 2.5KHz update rate. */
1089:main.c        ****         runRateGroup1_PID();
1090:main.c        ****         
1091:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1092:main.c        ****         
1093:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1094:main.c        ****         //runRateGroup2_TBD();           
1095:main.c        ****         
1096:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1097:main.c        ****         
1098:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1099:main.c        ****         runRateGroup3_SPI();
1100:main.c        ****         
1101:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1102:main.c        ****      
1103:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1104:main.c        ****         //runRateGroup4_TBD();
1105:main.c        **** 
1106:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1107:main.c        ****      
1108:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1109:main.c        ****         //runRateGroup5_TBD();
1110:main.c        ****     }
1111:main.c        ****     
1112:main.c        ****     PROBE_Write(0);
1113:main.c        ****    
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 21


1114:main.c        **** }
1115:main.c        **** 
1116:main.c        **** 
1117:main.c        **** /*******************************************************************************
1118:main.c        **** * Function Name: RSTIsrHandler
1119:main.c        **** ********************************************************************************
1120:main.c        **** * Summary:
1121:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1122:main.c        **** *  Clears a pending Interrupt.
1123:main.c        **** *  Clears a pin Interrupt.
1124:main.c        **** *
1125:main.c        **** * Parameters: None
1126:main.c        **** * Return: None
1127:main.c        **** *******************************************************************************/
1128:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1128 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1129:main.c        ****     
1130:main.c        ****     /* Clear pending Interrupt */
1131:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1131 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1132:main.c        ****     
1133:main.c        ****     /* Clear pin Interrupt */
1134:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1134 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1135:main.c        ****     
1136:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1137:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1137 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1138:main.c        ****     
1139:main.c        ****     /* Clear the index counter */
1140:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1140 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1141:main.c        ****     
1142:main.c        ****     /* When we hit the index mark, homing is complete */
1143:main.c        ****     homingDone = true;    
  50              		.loc 1 1143 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1144:main.c        **** }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 22


  54              		.loc 1 1144 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE43:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
  70              	HomeIsrHandler:
  71              	.LFB44:
1145:main.c        **** 
1146:main.c        **** 
1147:main.c        **** /*******************************************************************************
1148:main.c        **** * Function Name: HomeIsrHandler
1149:main.c        **** ********************************************************************************
1150:main.c        **** * Summary:
1151:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1152:main.c        **** *  Clears a pending Interrupt.
1153:main.c        **** *  Clears a pin Interrupt.
1154:main.c        **** *
1155:main.c        **** * Parameters: None
1156:main.c        **** * Return: None
1157:main.c        **** *******************************************************************************/
1158:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1158 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1159:main.c        ****     
1160:main.c        ****     /* Clear pending Interrupt */
1161:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1161 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1162:main.c        ****     
1163:main.c        ****     /* Clear pin Interrupt */
1164:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1164 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  85              	.LVL5:
1165:main.c        **** 
1166:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1167:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1167 0
  87 000a 0020     		movs	r0, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 23


  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1168:main.c        ****     
1169:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1170:main.c        ****     homingDone = false;
  90              		.loc 1 1170 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1171:main.c        **** }
  94              		.loc 1 1171 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 0018 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE44:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB45:
1172:main.c        **** 
1173:main.c        **** 
1174:main.c        **** /*******************************************************************************
1175:main.c        **** * Function Name: SPI_SS_IsrHandler
1176:main.c        **** ********************************************************************************
1177:main.c        **** * Summary:
1178:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1179:main.c        **** *  Clears a pin Interrupt.
1180:main.c        **** *
1181:main.c        **** * Parameters: None
1182:main.c        **** * Return: None
1183:main.c        **** *******************************************************************************/
1184:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1184 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1185:main.c        ****     
1186:main.c        ****     uint32_t i;
1187:main.c        ****     
1188:main.c        ****     /* Clear SPI slave select pin Interrupt */
1189:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1189 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 24


1190:main.c        ****     
1191:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1192:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1192 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1193:main.c        ****         return;
1194:main.c        ****    
1195:main.c        ****     /* Update the last message tick timer */
1196:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1196 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
 132 0014 0E4B     		ldr	r3, .L12+4
 133 0016 1A60     		str	r2, [r3]
1197:main.c        **** 
1198:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1199:main.c        ****        check the messaging state before resetting the buffers */
1200:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1200 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1201:main.c        ****      
1202:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1203:main.c        ****         case txmsClear:
1204:main.c        ****             break;
1205:main.c        ****      
1206:main.c        ****         /* A message was readied for transmission */
1207:main.c        ****         case txmsLoaded:
1208:main.c        ****          
1209:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1210:main.c        ****             
1211:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1212:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1212 0
 140 0020 1F22     		movs	r2, #31
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1213:main.c        **** 
1214:main.c        ****             /* Message from the master is completely clocked in by now */     
1215:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1215 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
 148              	.LVL10:
 149              	.L11:
1216:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1216 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 25


 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1215:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1215 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1215:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1215 0 is_stmt 0 discriminator 1
 160 0038 1E2C     		cmp	r4, #30
 161 003a F8D9     		bls	.L11
1217:main.c        ****             }
1218:main.c        ****             
1219:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1220:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1220 0 is_stmt 1
 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 164              	.LVL13:
1221:main.c        ****             
1222:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1223:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1223 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1224:main.c        ****             
1225:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1226:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1226 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1227:main.c        ****             break;
1228:main.c        ****             
1229:main.c        ****     } 
1230:main.c        ****         
1231:main.c        **** }
 174              		.loc 1 1231 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE45:
 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 26


 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 321:main.c        ****  
 196              		.loc 1 321 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
 323:main.c        ****      
 202              		.loc 1 323 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 327:main.c        ****             break;        
 205              		.loc 1 327 0
 206 0004 0022     		movs	r2, #0
 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 328:main.c        ****         
 209              		.loc 1 328 0
 210 000a 03E0     		b	.L14
 211              	.L18:
 332:main.c        ****             break;        
 212              		.loc 1 332 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 335:main.c        **** 
 219              		.loc 1 335 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 348:main.c        ****  
 237              		.loc 1 348 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 27


 350:main.c        ****      
 243              		.loc 1 350 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 354:main.c        ****             break;        
 246              		.loc 1 354 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 355:main.c        ****         
 250              		.loc 1 355 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 359:main.c        ****             break;        
 253              		.loc 1 359 0
 254 000c 024A     		ldr	r2, .L26
 255 000e 1378     		ldrb	r3, [r2]
 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 362:main.c        **** 
 259              		.loc 1 362 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.global	__aeabi_f2iz
 270              		.section	.text.MotorCurrentRead,"ax",%progbits
 271              		.align	2
 272              		.global	MotorCurrentRead
 273              		.code	16
 274              		.thumb_func
 275              		.type	MotorCurrentRead, %function
 276              	MotorCurrentRead:
 277              	.LFB34:
 374:main.c        ****     
 278              		.loc 1 374 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 379:main.c        ****     
 286              		.loc 1 379 0
 287 0002 4020     		movs	r0, #64
 288 0004 FFF7FEFF 		bl	getCurrent_mA
 289              	.LVL19:
 382:main.c        **** }
 290              		.loc 1 382 0
 291 0008 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 28


 292              	.LVL20:
 293 000c 00B2     		sxth	r0, r0
 294 000e 014B     		ldr	r3, .L29
 295 0010 1880     		strh	r0, [r3]
 383:main.c        **** 
 296              		.loc 1 383 0
 297              		@ sp needed
 298 0012 10BD     		pop	{r4, pc}
 299              	.L30:
 300              		.align	2
 301              	.L29:
 302 0014 00000000 		.word	MotorCurrent
 303              		.cfi_endproc
 304              	.LFE34:
 305              		.size	MotorCurrentRead, .-MotorCurrentRead
 306              		.section	.text.PWM_Set,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_Set
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_Set, %function
 312              	PWM_Set:
 313              	.LFB36:
 603:main.c        ****         
 314              		.loc 1 603 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL21:
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 607:main.c        **** }
 323              		.loc 1 607 0
 324 0002 C823     		movs	r3, #200
 325 0004 9B00     		lsls	r3, r3, #2
 326 0006 9C46     		mov	ip, r3
 327 0008 6044     		add	r0, r0, ip
 328              	.LVL22:
 329 000a FFF7FEFF 		bl	PWM_1_WriteCompare
 330              	.LVL23:
 608:main.c        **** 
 331              		.loc 1 608 0
 332              		@ sp needed
 333 000e 10BD     		pop	{r4, pc}
 334              		.cfi_endproc
 335              	.LFE36:
 336              		.size	PWM_Set, .-PWM_Set
 337              		.section	.text.GetPosition,"ax",%progbits
 338              		.align	2
 339              		.global	GetPosition
 340              		.code	16
 341              		.thumb_func
 342              		.type	GetPosition, %function
 343              	GetPosition:
 344              	.LFB37:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 29


 620:main.c        ****     
 345              		.loc 1 620 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 626:main.c        ****     
 353              		.loc 1 626 0
 354 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 355              	.LVL24:
 356 0006 0B4B     		ldr	r3, .L35
 357 0008 9860     		str	r0, [r3, #8]
 630:main.c        ****         
 358              		.loc 1 630 0
 359 000a 9A68     		ldr	r2, [r3, #8]
 360 000c 0A4B     		ldr	r3, .L35+4
 361 000e 9A42     		cmp	r2, r3
 362 0010 06D9     		bls	.L33
 632:main.c        ****         
 363              		.loc 1 632 0
 364 0012 084A     		ldr	r2, .L35
 365 0014 9368     		ldr	r3, [r2, #8]
 366 0016 0949     		ldr	r1, .L35+8
 367 0018 8C46     		mov	ip, r1
 368 001a 6344     		add	r3, r3, ip
 369 001c D360     		str	r3, [r2, #12]
 370 001e 02E0     		b	.L34
 371              	.L33:
 637:main.c        ****     }
 372              		.loc 1 637 0
 373 0020 044B     		ldr	r3, .L35
 374 0022 9A68     		ldr	r2, [r3, #8]
 375 0024 DA60     		str	r2, [r3, #12]
 376              	.L34:
 641:main.c        ****     return result;
 377              		.loc 1 641 0
 378 0026 034B     		ldr	r3, .L35
 379 0028 D968     		ldr	r1, [r3, #12]
 380 002a 054A     		ldr	r2, .L35+12
 381 002c 1160     		str	r1, [r2]
 642:main.c        **** }
 382              		.loc 1 642 0
 383 002e D868     		ldr	r0, [r3, #12]
 643:main.c        **** 
 384              		.loc 1 643 0
 385              		@ sp needed
 386 0030 10BD     		pop	{r4, pc}
 387              	.L36:
 388 0032 C046     		.align	2
 389              	.L35:
 390 0034 00000000 		.word	.LANCHOR1
 391 0038 FFFFEF00 		.word	15728639
 392 003c 010000FF 		.word	-16777215
 393 0040 00000000 		.word	Position
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 30


 394              		.cfi_endproc
 395              	.LFE37:
 396              		.size	GetPosition, .-GetPosition
 397              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 398              		.align	2
 399              		.global	runRateGroup3_SPI
 400              		.code	16
 401              		.thumb_func
 402              		.type	runRateGroup3_SPI, %function
 403              	runRateGroup3_SPI:
 404              	.LFB35:
 395:main.c        ****  
 405              		.loc 1 395 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0000 70B5     		push	{r4, r5, r6, lr}
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 4, -16
 412              		.cfi_offset 5, -12
 413              		.cfi_offset 6, -8
 414              		.cfi_offset 14, -4
 405:main.c        ****         return;
 415              		.loc 1 405 0
 416 0002 9B4B     		ldr	r3, .L55
 417 0004 1B68     		ldr	r3, [r3]
 418 0006 DB07     		lsls	r3, r3, #31
 419 0008 00D5     		bpl	.LCB323
 420 000a 2FE1     		b	.L37	@long jump
 421              	.LCB323:
 409:main.c        ****      
 422              		.loc 1 409 0
 423 000c 994B     		ldr	r3, .L55+4
 424 000e 1B78     		ldrb	r3, [r3]
 425 0010 002B     		cmp	r3, #0
 426 0012 00D0     		beq	.LCB328
 427 0014 2AE1     		b	.L37	@long jump
 428              	.LCB328:
 415:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 429              		.loc 1 415 0
 430 0016 984B     		ldr	r3, .L55+8
 431 0018 5878     		ldrb	r0, [r3, #1]
 432              	.LVL25:
 416:main.c        ****             
 433              		.loc 1 416 0
 434 001a 9C78     		ldrb	r4, [r3, #2]
 435              	.LVL26:
 419:main.c        ****                 size = sizeof(txMessage.buf);                            
 436              		.loc 1 419 0
 437 001c 1F28     		cmp	r0, #31
 438 001e 00D9     		bls	.L40
 420:main.c        ****         
 439              		.loc 1 420 0
 440 0020 1F20     		movs	r0, #31
 441              	.LVL27:
 442              	.L40:
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 31


 443              		.loc 1 423 0
 444 0022 0022     		movs	r2, #0
 445 0024 0023     		movs	r3, #0
 446 0026 05E0     		b	.L41
 447              	.LVL28:
 448              	.L42:
 424:main.c        **** 
 449              		.loc 1 424 0 discriminator 3
 450 0028 9349     		ldr	r1, .L55+8
 451 002a C95C     		ldrb	r1, [r1, r3]
 452 002c 5218     		adds	r2, r2, r1
 453              	.LVL29:
 454 002e D2B2     		uxtb	r2, r2
 455              	.LVL30:
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
 456              		.loc 1 423 0 discriminator 3
 457 0030 0133     		adds	r3, r3, #1
 458              	.LVL31:
 459 0032 DBB2     		uxtb	r3, r3
 460              	.LVL32:
 461              	.L41:
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
 462              		.loc 1 423 0 is_stmt 0 discriminator 1
 463 0034 9842     		cmp	r0, r3
 464 0036 F7D8     		bhi	.L42
 427:main.c        ****                 
 465              		.loc 1 427 0 is_stmt 1
 466 0038 002A     		cmp	r2, #0
 467 003a 09D0     		beq	.L43
 429:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 468              		.loc 1 429 0
 469 003c 8F4B     		ldr	r3, .L55+12
 470              	.LVL33:
 471 003e 5C71     		strb	r4, [r3, #5]
 430:main.c        ****                 ChecksumErrors++;
 472              		.loc 1 430 0
 473 0040 1F22     		movs	r2, #31
 474              	.LVL34:
 475 0042 1A71     		strb	r2, [r3, #4]
 431:main.c        ****                 
 476              		.loc 1 431 0
 477 0044 8E4A     		ldr	r2, .L55+16
 478 0046 1388     		ldrh	r3, [r2]
 479 0048 0133     		adds	r3, r3, #1
 480 004a 9BB2     		uxth	r3, r3
 481 004c 1380     		strh	r3, [r2]
 482 004e A1E0     		b	.L44
 483              	.LVL35:
 484              	.L43:
 437:main.c        ****                 
 485              		.loc 1 437 0
 486 0050 631E     		subs	r3, r4, #1
 487              	.LVL36:
 488 0052 DBB2     		uxtb	r3, r3
 489 0054 022B     		cmp	r3, #2
 490 0056 00D9     		bls	.LCB394
 491 0058 9CE0     		b	.L44	@long jump
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 32


 492              	.LCB394:
 439:main.c        ****                     
 493              		.loc 1 439 0
 494 005a 022C     		cmp	r4, #2
 495 005c 2CD0     		beq	.L45
 496 005e 032C     		cmp	r4, #3
 497 0060 7CD0     		beq	.L46
 498 0062 012C     		cmp	r4, #1
 499 0064 00D0     		beq	.LCB400
 500 0066 95E0     		b	.L44	@long jump
 501              	.LCB400:
 445:main.c        ****                            
 502              		.loc 1 445 0
 503 0068 FFF7FEFF 		bl	GetPosition
 504              	.LVL37:
 505 006c 854B     		ldr	r3, .L55+20
 506 006e 1860     		str	r0, [r3]
 448:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 507              		.loc 1 448 0
 508 0070 1968     		ldr	r1, [r3]
 509 0072 854A     		ldr	r2, .L55+24
 510 0074 1160     		str	r1, [r2]
 449:main.c        ****                             
 511              		.loc 1 449 0
 512 0076 1A68     		ldr	r2, [r3]
 513 0078 844B     		ldr	r3, .L55+28
 514 007a 1A60     		str	r2, [r3]
 452:main.c        ****                             PID_Enabled = false;
 515              		.loc 1 452 0
 516 007c 0023     		movs	r3, #0
 517 007e 844A     		ldr	r2, .L55+32
 518 0080 1370     		strb	r3, [r2]
 453:main.c        **** 
 519              		.loc 1 453 0
 520 0082 844A     		ldr	r2, .L55+36
 521 0084 1370     		strb	r3, [r2]
 456:main.c        ****                             
 522              		.loc 1 456 0
 523 0086 844A     		ldr	r2, .L55+40
 524 0088 1370     		strb	r3, [r2]
 459:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 525              		.loc 1 459 0
 526 008a 7B4B     		ldr	r3, .L55+8
 527 008c 197C     		ldrb	r1, [r3, #16]
 528 008e 5A7C     		ldrb	r2, [r3, #17]
 529 0090 1202     		lsls	r2, r2, #8
 530 0092 0A43     		orrs	r2, r1
 531 0094 8149     		ldr	r1, .L55+44
 532 0096 0A80     		strh	r2, [r1]
 460:main.c        ****                                 
 533              		.loc 1 460 0
 534 0098 997C     		ldrb	r1, [r3, #18]
 535 009a DA7C     		ldrb	r2, [r3, #19]
 536 009c 1202     		lsls	r2, r2, #8
 537 009e 0A43     		orrs	r2, r1
 538 00a0 7F49     		ldr	r1, .L55+48
 539 00a2 0A80     		strh	r2, [r1]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 33


 475:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 540              		.loc 1 475 0
 541 00a4 0221     		movs	r1, #2
 542 00a6 7F4A     		ldr	r2, .L55+52
 543 00a8 1170     		strb	r1, [r2]
 476:main.c        ****                         
 544              		.loc 1 476 0
 545 00aa DA78     		ldrb	r2, [r3, #3]
 546 00ac 7E4B     		ldr	r3, .L55+56
 547 00ae 1A70     		strb	r2, [r3]
 479:main.c        ****                             break;
 548              		.loc 1 479 0
 549 00b0 0020     		movs	r0, #0
 550 00b2 FFF7FEFF 		bl	ClearFault
 551              	.LVL38:
 480:main.c        **** 
 552              		.loc 1 480 0
 553 00b6 6DE0     		b	.L44
 554              	.LVL39:
 555              	.L45:
 484:main.c        ****                             
 556              		.loc 1 484 0
 557 00b8 6F48     		ldr	r0, .L55+8
 558              	.LVL40:
 559 00ba C378     		ldrb	r3, [r0, #3]
 560 00bc 5A1E     		subs	r2, r3, #1
 561 00be 9341     		sbcs	r3, r3, r2
 562              	.LVL41:
 563 00c0 744A     		ldr	r2, .L55+36
 564 00c2 1370     		strb	r3, [r2]
 487:main.c        ****                                 
 565              		.loc 1 487 0
 566 00c4 0379     		ldrb	r3, [r0, #4]
 567 00c6 4279     		ldrb	r2, [r0, #5]
 568 00c8 1202     		lsls	r2, r2, #8
 569 00ca 1A43     		orrs	r2, r3
 570 00cc 8379     		ldrb	r3, [r0, #6]
 571 00ce 1B04     		lsls	r3, r3, #16
 572 00d0 1343     		orrs	r3, r2
 573 00d2 1A00     		movs	r2, r3
 574 00d4 C379     		ldrb	r3, [r0, #7]
 575 00d6 1B06     		lsls	r3, r3, #24
 576 00d8 1343     		orrs	r3, r2
 577 00da 6B4A     		ldr	r2, .L55+24
 578 00dc 1268     		ldr	r2, [r2]
 579 00de 9342     		cmp	r3, r2
 580 00e0 36D0     		beq	.L48
 490:main.c        ****                                 LastMoveStartTimeUsec = UptimeMicroseconds;
 581              		.loc 1 490 0
 582 00e2 724B     		ldr	r3, .L55+60
 583 00e4 0122     		movs	r2, #1
 584 00e6 1A74     		strb	r2, [r3, #16]
 491:main.c        ****                                 
 585              		.loc 1 491 0
 586 00e8 9869     		ldr	r0, [r3, #24]
 587 00ea D969     		ldr	r1, [r3, #28]
 588 00ec 1862     		str	r0, [r3, #32]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 34


 494:main.c        ****                                 
 589              		.loc 1 494 0
 590 00ee FFF7FEFF 		bl	GetPosition
 591              	.LVL42:
 592 00f2 644C     		ldr	r4, .L55+20
 593              	.LVL43:
 594 00f4 2060     		str	r0, [r4]
 497:main.c        ****                                 
 595              		.loc 1 497 0
 596 00f6 6048     		ldr	r0, .L55+8
 597 00f8 0379     		ldrb	r3, [r0, #4]
 598 00fa 4279     		ldrb	r2, [r0, #5]
 599 00fc 1202     		lsls	r2, r2, #8
 600 00fe 1A43     		orrs	r2, r3
 601 0100 8379     		ldrb	r3, [r0, #6]
 602 0102 1B04     		lsls	r3, r3, #16
 603 0104 1343     		orrs	r3, r2
 604 0106 1A00     		movs	r2, r3
 605 0108 C379     		ldrb	r3, [r0, #7]
 606 010a 1B06     		lsls	r3, r3, #24
 607 010c 1343     		orrs	r3, r2
 608 010e 5E4D     		ldr	r5, .L55+24
 609 0110 2B60     		str	r3, [r5]
 501:main.c        ****                                 
 610              		.loc 1 501 0
 611 0112 2268     		ldr	r2, [r4]
 612 0114 5D4B     		ldr	r3, .L55+28
 613 0116 1A60     		str	r2, [r3]
 504:main.c        ****                                 
 614              		.loc 1 504 0
 615 0118 0020     		movs	r0, #0
 616 011a FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 617              	.LVL44:
 509:main.c        ****                                 if (distance < 0) {
 618              		.loc 1 509 0
 619 011e 2B68     		ldr	r3, [r5]
 620 0120 2268     		ldr	r2, [r4]
 621 0122 9B1A     		subs	r3, r3, r2
 622              	.LVL45:
 510:main.c        ****                                     distance = -distance;
 623              		.loc 1 510 0
 624 0124 00D5     		bpl	.L49
 511:main.c        ****                                 }
 625              		.loc 1 511 0
 626 0126 5B42     		rsbs	r3, r3, #0
 627              	.LVL46:
 628              	.L49:
 514:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 629              		.loc 1 514 0
 630 0128 322B     		cmp	r3, #50
 631 012a 0BDD     		ble	.L50
 515:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 632              		.loc 1 515 0
 633 012c DA17     		asrs	r2, r3, #31
 634 012e 0F21     		movs	r1, #15
 635 0130 0A40     		ands	r2, r1
 636 0132 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 35


 637              	.LVL47:
 638 0134 1B11     		asrs	r3, r3, #4
 639 0136 0D33     		adds	r3, r3, #13
 640 0138 FA22     		movs	r2, #250
 641 013a 9200     		lsls	r2, r2, #2
 642 013c 5343     		muls	r3, r2
 643 013e 5C4A     		ldr	r2, .L55+64
 644 0140 1360     		str	r3, [r2]
 645 0142 02E0     		b	.L51
 646              	.LVL48:
 647              	.L50:
 518:main.c        ****                                 }
 648              		.loc 1 518 0
 649 0144 0022     		movs	r2, #0
 650 0146 5A4B     		ldr	r3, .L55+64
 651              	.LVL49:
 652 0148 1A60     		str	r2, [r3]
 653              	.L51:
 522:main.c        ****                             }                                        
 654              		.loc 1 522 0
 655 014a 0022     		movs	r2, #0
 656 014c 594B     		ldr	r3, .L55+68
 657 014e 1A60     		str	r2, [r3]
 658              	.L48:
 527:main.c        ****                             break;
 659              		.loc 1 527 0
 660 0150 494B     		ldr	r3, .L55+8
 661 0152 0822     		movs	r2, #8
 662 0154 9A56     		ldrsb	r2, [r3, r2]
 663 0156 504B     		ldr	r3, .L55+40
 664 0158 1A70     		strb	r2, [r3]
 528:main.c        ****                         
 665              		.loc 1 528 0
 666 015a 1BE0     		b	.L44
 667              	.LVL50:
 668              	.L46:
 532:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 669              		.loc 1 532 0
 670 015c 464C     		ldr	r4, .L55+8
 671              	.LVL51:
 672 015e 2179     		ldrb	r1, [r4, #4]
 673 0160 6379     		ldrb	r3, [r4, #5]
 674 0162 1B02     		lsls	r3, r3, #8
 675 0164 0B43     		orrs	r3, r1
 676 0166 1A00     		movs	r2, r3
 677              	.LVL52:
 678 0168 A079     		ldrb	r0, [r4, #6]
 679              	.LVL53:
 680 016a 0004     		lsls	r0, r0, #16
 681 016c 0300     		movs	r3, r0
 682 016e 1343     		orrs	r3, r2
 683 0170 E079     		ldrb	r0, [r4, #7]
 684 0172 0006     		lsls	r0, r0, #24
 685 0174 1843     		orrs	r0, r3
 686 0176 FFF7FEFF 		bl	Counter_1_WriteCounter
 687              	.LVL54:
 533:main.c        ****                             break;                                        
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 36


 688              		.loc 1 533 0
 689 017a 2379     		ldrb	r3, [r4, #4]
 690 017c 6279     		ldrb	r2, [r4, #5]
 691 017e 1202     		lsls	r2, r2, #8
 692 0180 1A43     		orrs	r2, r3
 693 0182 A379     		ldrb	r3, [r4, #6]
 694 0184 1B04     		lsls	r3, r3, #16
 695 0186 1343     		orrs	r3, r2
 696 0188 1A00     		movs	r2, r3
 697 018a E379     		ldrb	r3, [r4, #7]
 698 018c 1B06     		lsls	r3, r3, #24
 699 018e 1343     		orrs	r3, r2
 700 0190 3C4A     		ldr	r2, .L55+20
 701 0192 1360     		str	r3, [r2]
 702              	.L44:
 544:main.c        ****             
 703              		.loc 1 544 0
 704 0194 FFF7FEFF 		bl	GetPosition
 705              	.LVL55:
 706 0198 4749     		ldr	r1, .L55+72
 707 019a 0860     		str	r0, [r1]
 547:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 708              		.loc 1 547 0
 709 019c 374B     		ldr	r3, .L55+12
 710 019e 0022     		movs	r2, #0
 711 01a0 1A70     		strb	r2, [r3]
 548:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 712              		.loc 1 548 0
 713 01a2 5A70     		strb	r2, [r3, #1]
 549:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 714              		.loc 1 549 0
 715 01a4 0232     		adds	r2, r2, #2
 716 01a6 9A70     		strb	r2, [r3, #2]
 550:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 717              		.loc 1 550 0
 718 01a8 0120     		movs	r0, #1
 719 01aa D870     		strb	r0, [r3, #3]
 551:main.c        ****             txMessage.msg.opcode          = opStatus;
 720              		.loc 1 551 0
 721 01ac 1E30     		adds	r0, r0, #30
 722 01ae 1871     		strb	r0, [r3, #4]
 552:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 723              		.loc 1 552 0
 724 01b0 5A71     		strb	r2, [r3, #5]
 553:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 725              		.loc 1 553 0
 726 01b2 3C4A     		ldr	r2, .L55+52
 727 01b4 1278     		ldrb	r2, [r2]
 728 01b6 9A71     		strb	r2, [r3, #6]
 554:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 729              		.loc 1 554 0
 730 01b8 404A     		ldr	r2, .L55+76
 731 01ba 1278     		ldrb	r2, [r2]
 732 01bc DA71     		strb	r2, [r3, #7]
 555:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 733              		.loc 1 555 0
 734 01be 304A     		ldr	r2, .L55+16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 37


 735 01c0 1288     		ldrh	r2, [r2]
 736 01c2 92B2     		uxth	r2, r2
 737 01c4 5A72     		strb	r2, [r3, #9]
 738 01c6 120A     		lsrs	r2, r2, #8
 739 01c8 9A72     		strb	r2, [r3, #10]
 556:main.c        ****             txMessage.msg.position        = Position;
 740              		.loc 1 556 0
 741 01ca 374A     		ldr	r2, .L55+56
 742 01cc 1278     		ldrb	r2, [r2]
 743 01ce 1A72     		strb	r2, [r3, #8]
 557:main.c        ****             txMessage.msg.pwm             = Output;
 744              		.loc 1 557 0
 745 01d0 0A68     		ldr	r2, [r1]
 746 01d2 5A73     		strb	r2, [r3, #13]
 747 01d4 100A     		lsrs	r0, r2, #8
 748 01d6 9873     		strb	r0, [r3, #14]
 749 01d8 100C     		lsrs	r0, r2, #16
 750 01da D873     		strb	r0, [r3, #15]
 751 01dc 120E     		lsrs	r2, r2, #24
 752 01de 1A74     		strb	r2, [r3, #16]
 558:main.c        ****             txMessage.msg.iterm           = iterm;
 753              		.loc 1 558 0
 754 01e0 374A     		ldr	r2, .L55+80
 755 01e2 1268     		ldr	r2, [r2]
 756 01e4 92B2     		uxth	r2, r2
 757 01e6 5A74     		strb	r2, [r3, #17]
 758 01e8 120A     		lsrs	r2, r2, #8
 759 01ea 9A74     		strb	r2, [r3, #18]
 559:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 760              		.loc 1 559 0
 761 01ec 314A     		ldr	r2, .L55+68
 762 01ee 1078     		ldrb	r0, [r2]
 763 01f0 D874     		strb	r0, [r3, #19]
 764 01f2 5078     		ldrb	r0, [r2, #1]
 765 01f4 1875     		strb	r0, [r3, #20]
 766 01f6 9078     		ldrb	r0, [r2, #2]
 767 01f8 5875     		strb	r0, [r3, #21]
 768 01fa D278     		ldrb	r2, [r2, #3]
 769 01fc 9A75     		strb	r2, [r3, #22]
 560:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 770              		.loc 1 560 0
 771 01fe 314A     		ldr	r2, .L55+84
 772 0200 1288     		ldrh	r2, [r2]
 773 0202 DA72     		strb	r2, [r3, #11]
 774 0204 120A     		lsrs	r2, r2, #8
 775 0206 1A73     		strb	r2, [r3, #12]
 561:main.c        ****             txMessage.msg.iterm_delay     = iterm_delay;
 776              		.loc 1 561 0
 777 0208 284A     		ldr	r2, .L55+60
 778 020a 2420     		movs	r0, #36
 779 020c 105C     		ldrb	r0, [r2, r0]
 780 020e D875     		strb	r0, [r3, #23]
 781 0210 2520     		movs	r0, #37
 782 0212 105C     		ldrb	r0, [r2, r0]
 783 0214 1876     		strb	r0, [r3, #24]
 784 0216 2620     		movs	r0, #38
 785 0218 105C     		ldrb	r0, [r2, r0]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 38


 786 021a 5876     		strb	r0, [r3, #25]
 787 021c 2720     		movs	r0, #39
 788 021e 125C     		ldrb	r2, [r2, r0]
 789 0220 9A76     		strb	r2, [r3, #26]
 562:main.c        ****             
 790              		.loc 1 562 0
 791 0222 234A     		ldr	r2, .L55+64
 792 0224 1900     		movs	r1, r3
 793 0226 1078     		ldrb	r0, [r2]
 794 0228 D876     		strb	r0, [r3, #27]
 795 022a 5378     		ldrb	r3, [r2, #1]
 796 022c 0B77     		strb	r3, [r1, #28]
 797 022e 9378     		ldrb	r3, [r2, #2]
 798 0230 4B77     		strb	r3, [r1, #29]
 799 0232 D378     		ldrb	r3, [r2, #3]
 800 0234 8B77     		strb	r3, [r1, #30]
 801              	.LVL56:
 565:main.c        ****                 checksum += txMessage.buf[i]; 
 802              		.loc 1 565 0
 803 0236 0022     		movs	r2, #0
 804 0238 0023     		movs	r3, #0
 805 023a 05E0     		b	.L52
 806              	.LVL57:
 807              	.L53:
 566:main.c        ****                 
 808              		.loc 1 566 0 discriminator 3
 809 023c 0F49     		ldr	r1, .L55+12
 810 023e C95C     		ldrb	r1, [r1, r3]
 811 0240 5218     		adds	r2, r2, r1
 812              	.LVL58:
 813 0242 D2B2     		uxtb	r2, r2
 814              	.LVL59:
 565:main.c        ****                 checksum += txMessage.buf[i]; 
 815              		.loc 1 565 0 discriminator 3
 816 0244 0133     		adds	r3, r3, #1
 817              	.LVL60:
 818 0246 DBB2     		uxtb	r3, r3
 819              	.LVL61:
 820              	.L52:
 565:main.c        ****                 checksum += txMessage.buf[i]; 
 821              		.loc 1 565 0 is_stmt 0 discriminator 1
 822 0248 1E2B     		cmp	r3, #30
 823 024a F7D9     		bls	.L53
 569:main.c        ****                 
 824              		.loc 1 569 0 is_stmt 1
 825 024c 0B48     		ldr	r0, .L55+12
 826 024e 5242     		rsbs	r2, r2, #0
 827              	.LVL62:
 828 0250 0270     		strb	r2, [r0]
 573:main.c        **** 
 829              		.loc 1 573 0
 830 0252 1F21     		movs	r1, #31
 831 0254 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 832              	.LVL63:
 576:main.c        ****             
 833              		.loc 1 576 0
 834 0258 0122     		movs	r2, #1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 39


 835 025a 064B     		ldr	r3, .L55+4
 836 025c 1A70     		strb	r2, [r3]
 579:main.c        ****                 ClearFault(fsNONE);
 837              		.loc 1 579 0
 838 025e 064B     		ldr	r3, .L55+8
 839 0260 5B7A     		ldrb	r3, [r3, #9]
 840 0262 002B     		cmp	r3, #0
 841 0264 02D0     		beq	.L37
 580:main.c        ****         
 842              		.loc 1 580 0
 843 0266 0020     		movs	r0, #0
 844 0268 FFF7FEFF 		bl	ClearFault
 845              	.LVL64:
 846              	.L37:
 590:main.c        ****     
 847              		.loc 1 590 0
 848              		@ sp needed
 849 026c 70BD     		pop	{r4, r5, r6, pc}
 850              	.L56:
 851 026e C046     		.align	2
 852              	.L55:
 853 0270 24000740 		.word	1074200612
 854 0274 00000000 		.word	txMessageState
 855 0278 00000000 		.word	rxMessage
 856 027c 00000000 		.word	txMessage
 857 0280 00000000 		.word	ChecksumErrors
 858 0284 00000000 		.word	LastPosition
 859 0288 00000000 		.word	PID_Setpoint
 860 028c 00000000 		.word	PID_EffectiveSetpoint
 861 0290 00000000 		.word	PID_Was_Enabled
 862 0294 00000000 		.word	PID_Enabled
 863 0298 00000000 		.word	Jog
 864 029c 00000000 		.word	limitOutput
 865 02a0 00000000 		.word	limitIterm
 866 02a4 00000000 		.word	ConfigState
 867 02a8 00000000 		.word	ConfigSequence
 868 02ac 00000000 		.word	.LANCHOR1
 869 02b0 00000000 		.word	iterm_delay
 870 02b4 00000000 		.word	iterm
 871 02b8 00000000 		.word	Position
 872 02bc 00000000 		.word	FaultState
 873 02c0 00000000 		.word	Output
 874 02c4 00000000 		.word	MotorCurrent
 875              		.cfi_endproc
 876              	.LFE35:
 877              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 878              		.section	.text.PID_Initialize,"ax",%progbits
 879              		.align	2
 880              		.global	PID_Initialize
 881              		.code	16
 882              		.thumb_func
 883              		.type	PID_Initialize, %function
 884              	PID_Initialize:
 885              	.LFB38:
 655:main.c        ****     
 886              		.loc 1 655 0
 887              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 40


 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890 0000 10B5     		push	{r4, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 4, -8
 893              		.cfi_offset 14, -4
 658:main.c        ****     LastPosition = Position;
 894              		.loc 1 658 0
 895 0002 FFF7FEFF 		bl	GetPosition
 896              	.LVL65:
 897 0006 064B     		ldr	r3, .L58
 898 0008 1860     		str	r0, [r3]
 659:main.c        ****     
 899              		.loc 1 659 0
 900 000a 1A68     		ldr	r2, [r3]
 901 000c 054B     		ldr	r3, .L58+4
 902 000e 1A60     		str	r2, [r3]
 663:main.c        ****     
 903              		.loc 1 663 0
 904 0010 1A68     		ldr	r2, [r3]
 905 0012 054B     		ldr	r3, .L58+8
 906 0014 1A60     		str	r2, [r3]
 667:main.c        **** }    
 907              		.loc 1 667 0
 908 0016 0022     		movs	r2, #0
 909 0018 044B     		ldr	r3, .L58+12
 910 001a 1A60     		str	r2, [r3]
 668:main.c        **** 
 911              		.loc 1 668 0
 912              		@ sp needed
 913 001c 10BD     		pop	{r4, pc}
 914              	.L59:
 915 001e C046     		.align	2
 916              	.L58:
 917 0020 00000000 		.word	Position
 918 0024 00000000 		.word	LastPosition
 919 0028 00000000 		.word	PID_EffectiveSetpoint
 920 002c 00000000 		.word	iterm
 921              		.cfi_endproc
 922              	.LFE38:
 923              		.size	PID_Initialize, .-PID_Initialize
 924              		.section	.text.PID_SetMode,"ax",%progbits
 925              		.align	2
 926              		.global	PID_SetMode
 927              		.code	16
 928              		.thumb_func
 929              		.type	PID_SetMode, %function
 930              	PID_SetMode:
 931              	.LFB39:
 680:main.c        ****     
 932              		.loc 1 680 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              	.LVL66:
 937 0000 10B5     		push	{r4, lr}
 938              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 41


 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
 682:main.c        ****     
 941              		.loc 1 682 0
 942 0002 441E     		subs	r4, r0, #1
 943 0004 6342     		rsbs	r3, r4, #0
 944 0006 5C41     		adcs	r4, r4, r3
 945 0008 E4B2     		uxtb	r4, r4
 946              	.LVL67:
 684:main.c        ****         /*we just went from manual to auto*/
 947              		.loc 1 684 0
 948 000a 0128     		cmp	r0, #1
 949 000c 06D1     		bne	.L61
 684:main.c        ****         /*we just went from manual to auto*/
 950              		.loc 1 684 0 is_stmt 0 discriminator 1
 951 000e 2823     		movs	r3, #40
 952 0010 044A     		ldr	r2, .L62
 953 0012 D35C     		ldrb	r3, [r2, r3]
 954 0014 002B     		cmp	r3, #0
 955 0016 01D1     		bne	.L61
 686:main.c        ****     }
 956              		.loc 1 686 0 is_stmt 1
 957 0018 FFF7FEFF 		bl	PID_Initialize
 958              	.LVL68:
 959              	.L61:
 689:main.c        **** } 
 960              		.loc 1 689 0
 961 001c 2823     		movs	r3, #40
 962 001e 014A     		ldr	r2, .L62
 963 0020 D454     		strb	r4, [r2, r3]
 690:main.c        **** 
 964              		.loc 1 690 0
 965              		@ sp needed
 966              	.LVL69:
 967 0022 10BD     		pop	{r4, pc}
 968              	.L63:
 969              		.align	2
 970              	.L62:
 971 0024 00000000 		.word	.LANCHOR1
 972              		.cfi_endproc
 973              	.LFE39:
 974              		.size	PID_SetMode, .-PID_SetMode
 975              		.section	.text.runRateGroup1_PID,"ax",%progbits
 976              		.align	2
 977              		.global	runRateGroup1_PID
 978              		.code	16
 979              		.thumb_func
 980              		.type	runRateGroup1_PID, %function
 981              	runRateGroup1_PID:
 982              	.LFB40:
 702:main.c        ****      
 983              		.loc 1 702 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987 0000 10B5     		push	{r4, lr}
 988              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 42


 989              		.cfi_offset 4, -8
 990              		.cfi_offset 14, -4
 712:main.c        ****         
 991              		.loc 1 712 0
 992 0002 4D4B     		ldr	r3, .L79
 993 0004 1B68     		ldr	r3, [r3]
 994 0006 0133     		adds	r3, r3, #1
 995 0008 0024     		movs	r4, #0
 996 000a 4C4A     		ldr	r2, .L79+4
 997 000c 1068     		ldr	r0, [r2]
 998 000e 5168     		ldr	r1, [r2, #4]
 999 0010 0029     		cmp	r1, #0
 1000 0012 03D1     		bne	.L78
 1001 0014 A142     		cmp	r1, r4
 1002 0016 0AD1     		bne	.L65
 1003 0018 9842     		cmp	r0, r3
 1004 001a 08D9     		bls	.L65
 1005              	.L78:
 715:main.c        ****         PID_Enabled = false;
 1006              		.loc 1 715 0
 1007 001c 0020     		movs	r0, #0
 1008 001e FFF7FEFF 		bl	PWM_Set
 1009              	.LVL70:
 716:main.c        ****         
 1010              		.loc 1 716 0
 1011 0022 0023     		movs	r3, #0
 1012 0024 464A     		ldr	r2, .L79+8
 1013 0026 1370     		strb	r3, [r2]
 720:main.c        **** 
 1014              		.loc 1 720 0
 1015 0028 464A     		ldr	r2, .L79+12
 1016 002a 1370     		strb	r3, [r2]
 1017 002c 83E0     		b	.L64
 1018              	.L65:
 723:main.c        ****         
 1019              		.loc 1 723 0
 1020 002e 464B     		ldr	r3, .L79+16
 1021 0030 1B78     		ldrb	r3, [r3]
 1022 0032 022B     		cmp	r3, #2
 1023 0034 7CD1     		bne	.L68
 727:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1024              		.loc 1 727 0
 1025 0036 0620     		movs	r0, #6
 1026 0038 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1027              	.LVL71:
 728:main.c        **** 
 1028              		.loc 1 728 0
 1029 003c 0620     		movs	r0, #6
 1030 003e FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1031              	.LVL72:
 731:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1032              		.loc 1 731 0
 1033 0042 424B     		ldr	r3, .L79+20
 1034 0044 1B78     		ldrb	r3, [r3]
 1035 0046 002B     		cmp	r3, #0
 1036 0048 07D1     		bne	.L69
 731:main.c        ****             PID_SetMode(PID_AUTOMATIC);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 43


 1037              		.loc 1 731 0 is_stmt 0 discriminator 1
 1038 004a 3D4A     		ldr	r2, .L79+8
 1039 004c 1278     		ldrb	r2, [r2]
 1040 004e 002A     		cmp	r2, #0
 1041 0050 03D0     		beq	.L69
 732:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 1042              		.loc 1 732 0 is_stmt 1
 1043 0052 0120     		movs	r0, #1
 1044 0054 FFF7FEFF 		bl	PID_SetMode
 1045              	.LVL73:
 1046 0058 08E0     		b	.L70
 1047              	.L69:
 733:main.c        ****             PID_SetMode(PID_MANUAL);                
 1048              		.loc 1 733 0
 1049 005a 394A     		ldr	r2, .L79+8
 1050 005c 1278     		ldrb	r2, [r2]
 1051 005e 002A     		cmp	r2, #0
 1052 0060 04D1     		bne	.L70
 733:main.c        ****             PID_SetMode(PID_MANUAL);                
 1053              		.loc 1 733 0 is_stmt 0 discriminator 1
 1054 0062 002B     		cmp	r3, #0
 1055 0064 02D0     		beq	.L70
 734:main.c        ****         } else {
 1056              		.loc 1 734 0 is_stmt 1
 1057 0066 0020     		movs	r0, #0
 1058 0068 FFF7FEFF 		bl	PID_SetMode
 1059              	.LVL74:
 1060              	.L70:
 740:main.c        ****         
 1061              		.loc 1 740 0
 1062 006c 344B     		ldr	r3, .L79+8
 1063 006e 1B78     		ldrb	r3, [r3]
 1064 0070 364A     		ldr	r2, .L79+20
 1065 0072 1370     		strb	r3, [r2]
 755:main.c        ****             
 1066              		.loc 1 755 0
 1067 0074 002B     		cmp	r3, #0
 1068 0076 51D0     		beq	.L71
 757:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 1069              		.loc 1 757 0
 1070 0078 354B     		ldr	r3, .L79+24
 1071 007a 1B78     		ldrb	r3, [r3]
 1072 007c 002B     		cmp	r3, #0
 1073 007e 04D1     		bne	.L72
 758:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1074              		.loc 1 758 0
 1075 0080 344B     		ldr	r3, .L79+28
 1076 0082 1A68     		ldr	r2, [r3]
 1077 0084 344B     		ldr	r3, .L79+32
 1078 0086 1A60     		str	r2, [r3]
 1079 0088 16E0     		b	.L73
 1080              	.L72:
 759:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 1081              		.loc 1 759 0
 1082 008a 334A     		ldr	r2, .L79+32
 1083 008c 1168     		ldr	r1, [r2]
 1084 008e 314A     		ldr	r2, .L79+28
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 44


 1085 0090 1068     		ldr	r0, [r2]
 1086 0092 0A1A     		subs	r2, r1, r0
 1087 0094 D417     		asrs	r4, r2, #31
 1088 0096 1219     		adds	r2, r2, r4
 1089 0098 6240     		eors	r2, r4
 1090 009a 5C00     		lsls	r4, r3, #1
 1091 009c A242     		cmp	r2, r4
 1092 009e 02DC     		bgt	.L74
 760:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1093              		.loc 1 760 0
 1094 00a0 2D4B     		ldr	r3, .L79+32
 1095 00a2 1860     		str	r0, [r3]
 1096 00a4 08E0     		b	.L73
 1097              	.L74:
 761:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1098              		.loc 1 761 0
 1099 00a6 8142     		cmp	r1, r0
 1100 00a8 03DA     		bge	.L75
 762:main.c        ****             } else {
 1101              		.loc 1 762 0
 1102 00aa CB18     		adds	r3, r1, r3
 1103 00ac 2A4A     		ldr	r2, .L79+32
 1104 00ae 1360     		str	r3, [r2]
 1105 00b0 02E0     		b	.L73
 1106              	.L75:
 764:main.c        ****             }
 1107              		.loc 1 764 0
 1108 00b2 CB1A     		subs	r3, r1, r3
 1109 00b4 284A     		ldr	r2, .L79+32
 1110 00b6 1360     		str	r3, [r2]
 1111              	.L73:
 768:main.c        ****             
 1112              		.loc 1 768 0
 1113 00b8 FFF7FEFF 		bl	GetPosition
 1114              	.LVL75:
 1115 00bc 274B     		ldr	r3, .L79+36
 1116 00be 1860     		str	r0, [r3]
 771:main.c        ****             
 1117              		.loc 1 771 0
 1118 00c0 1968     		ldr	r1, [r3]
 1119 00c2 254B     		ldr	r3, .L79+32
 1120 00c4 1868     		ldr	r0, [r3]
 1121 00c6 FFF7FEFF 		bl	PID_UpdateValues
 1122              	.LVL76:
 1123 00ca 254B     		ldr	r3, .L79+40
 1124 00cc 1860     		str	r0, [r3]
 774:main.c        ****             
 1125              		.loc 1 774 0
 1126 00ce 1868     		ldr	r0, [r3]
 1127 00d0 FFF7FEFF 		bl	PWM_Set
 1128              	.LVL77:
 777:main.c        ****                 
 1129              		.loc 1 777 0
 1130 00d4 194B     		ldr	r3, .L79+4
 1131 00d6 1B7C     		ldrb	r3, [r3, #16]
 1132 00d8 002B     		cmp	r3, #0
 1133 00da 2CD0     		beq	.L64
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 45


 779:main.c        ****                     
 1134              		.loc 1 779 0
 1135 00dc 1F4B     		ldr	r3, .L79+36
 1136 00de 1A68     		ldr	r2, [r3]
 1137 00e0 1C4B     		ldr	r3, .L79+28
 1138 00e2 1B68     		ldr	r3, [r3]
 1139 00e4 9A42     		cmp	r2, r3
 1140 00e6 15D1     		bne	.L76
 784:main.c        ****                         
 1141              		.loc 1 784 0
 1142 00e8 144B     		ldr	r3, .L79+4
 1143 00ea 5B8D     		ldrh	r3, [r3, #42]
 1144 00ec 1E2B     		cmp	r3, #30
 1145 00ee 07D1     		bne	.L77
 788:main.c        ****                         
 1146              		.loc 1 788 0
 1147 00f0 124B     		ldr	r3, .L79+4
 1148 00f2 DA6A     		ldr	r2, [r3, #44]
 1149 00f4 196A     		ldr	r1, [r3, #32]
 1150 00f6 521A     		subs	r2, r2, r1
 1151 00f8 5A62     		str	r2, [r3, #36]
 791:main.c        ****                         
 1152              		.loc 1 791 0
 1153 00fa 0022     		movs	r2, #0
 1154 00fc 1A74     		strb	r2, [r3, #16]
 1155 00fe 1AE0     		b	.L64
 1156              	.L77:
 797:main.c        **** 
 1157              		.loc 1 797 0
 1158 0100 0133     		adds	r3, r3, #1
 1159 0102 9BB2     		uxth	r3, r3
 1160 0104 0D4A     		ldr	r2, .L79+4
 1161 0106 5385     		strh	r3, [r2, #42]
 802:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 1162              		.loc 1 802 0
 1163 0108 012B     		cmp	r3, #1
 1164 010a 14D1     		bne	.L64
 803:main.c        ****                         }                    
 1165              		.loc 1 803 0
 1166 010c 9069     		ldr	r0, [r2, #24]
 1167 010e D169     		ldr	r1, [r2, #28]
 1168 0110 D062     		str	r0, [r2, #44]
 1169 0112 10E0     		b	.L64
 1170              	.L76:
 810:main.c        ****                 }
 1171              		.loc 1 810 0
 1172 0114 0022     		movs	r2, #0
 1173 0116 094B     		ldr	r3, .L79+4
 1174 0118 5A85     		strh	r2, [r3, #42]
 1175 011a 0CE0     		b	.L64
 1176              	.L71:
 819:main.c        ****             
 1177              		.loc 1 819 0
 1178 011c 094B     		ldr	r3, .L79+12
 1179 011e 1B78     		ldrb	r3, [r3]
 1180 0120 5BB2     		sxtb	r3, r3
 1181 0122 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 46


 1182 0124 0E4A     		ldr	r2, .L79+40
 1183 0126 1360     		str	r3, [r2]
 822:main.c        ****         }        
 1184              		.loc 1 822 0
 1185 0128 1068     		ldr	r0, [r2]
 1186 012a FFF7FEFF 		bl	PWM_Set
 1187              	.LVL78:
 1188 012e 02E0     		b	.L64
 1189              	.L68:
 828:main.c        ****     }
 1190              		.loc 1 828 0
 1191 0130 0020     		movs	r0, #0
 1192 0132 FFF7FEFF 		bl	PWM_Set
 1193              	.LVL79:
 1194              	.L64:
 830:main.c        **** 
 1195              		.loc 1 830 0
 1196              		@ sp needed
 1197 0136 10BD     		pop	{r4, pc}
 1198              	.L80:
 1199              		.align	2
 1200              	.L79:
 1201 0138 00000000 		.word	LastMessageTimeSeconds
 1202 013c 00000000 		.word	.LANCHOR1
 1203 0140 00000000 		.word	PID_Enabled
 1204 0144 00000000 		.word	Jog
 1205 0148 00000000 		.word	ConfigState
 1206 014c 00000000 		.word	PID_Was_Enabled
 1207 0150 00000000 		.word	PID_EffSetDelta
 1208 0154 00000000 		.word	PID_Setpoint
 1209 0158 00000000 		.word	PID_EffectiveSetpoint
 1210 015c 00000000 		.word	Position
 1211 0160 00000000 		.word	Output
 1212              		.cfi_endproc
 1213              	.LFE40:
 1214              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1215              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1216              		.align	2
 1217              		.global	BRMS_Interrupt
 1218              		.code	16
 1219              		.thumb_func
 1220              		.type	BRMS_Interrupt, %function
 1221              	BRMS_Interrupt:
 1222              	.LFB42:
1031:main.c        ****     
 1223              		.loc 1 1031 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227 0000 70B5     		push	{r4, r5, r6, lr}
 1228              		.cfi_def_cfa_offset 16
 1229              		.cfi_offset 4, -16
 1230              		.cfi_offset 5, -12
 1231              		.cfi_offset 6, -8
 1232              		.cfi_offset 14, -4
1042:main.c        **** 
 1233              		.loc 1 1042 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 47


 1234 0002 0220     		movs	r0, #2
 1235 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
 1236              	.LVL80:
1044:main.c        ****     
 1237              		.loc 1 1044 0
 1238 0008 0120     		movs	r0, #1
 1239 000a FFF7FEFF 		bl	PROBE_Write
 1240              	.LVL81:
1047:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 1241              		.loc 1 1047 0
 1242 000e 2A4B     		ldr	r3, .L90
 1243 0010 9C69     		ldr	r4, [r3, #24]
 1244 0012 DD69     		ldr	r5, [r3, #28]
 1245 0014 C820     		movs	r0, #200
 1246 0016 0021     		movs	r1, #0
 1247 0018 2418     		adds	r4, r4, r0
 1248 001a 4D41     		adcs	r5, r5, r1
 1249 001c 9C61     		str	r4, [r3, #24]
 1250 001e DD61     		str	r5, [r3, #28]
1048:main.c        ****     
 1251              		.loc 1 1048 0
 1252 0020 1C6B     		ldr	r4, [r3, #48]
 1253 0022 5D6B     		ldr	r5, [r3, #52]
 1254 0024 0019     		adds	r0, r0, r4
 1255 0026 6941     		adcs	r1, r1, r5
 1256 0028 1863     		str	r0, [r3, #48]
 1257 002a 5963     		str	r1, [r3, #52]
1051:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1258              		.loc 1 1051 0
 1259 002c 196B     		ldr	r1, [r3, #48]
 1260 002e 5A6B     		ldr	r2, [r3, #52]
 1261 0030 002A     		cmp	r2, #0
 1262 0032 04D1     		bne	.L88
 1263 0034 16D1     		bne	.L82
 1264 0036 FA23     		movs	r3, #250
 1265 0038 9B00     		lsls	r3, r3, #2
 1266 003a 9942     		cmp	r1, r3
 1267 003c 12D9     		bls	.L82
 1268              	.L88:
1052:main.c        ****         UptimeMilliseconds += 1;
 1269              		.loc 1 1052 0
 1270 003e 1E4B     		ldr	r3, .L90
 1271 0040 0020     		movs	r0, #0
 1272 0042 0021     		movs	r1, #0
 1273 0044 1863     		str	r0, [r3, #48]
 1274 0046 5963     		str	r1, [r3, #52]
1053:main.c        ****         UptimeMillisecondsAccumulator += 1;
 1275              		.loc 1 1053 0
 1276 0048 9C6B     		ldr	r4, [r3, #56]
 1277 004a DD6B     		ldr	r5, [r3, #60]
 1278 004c 0120     		movs	r0, #1
 1279 004e 0021     		movs	r1, #0
 1280 0050 2418     		adds	r4, r4, r0
 1281 0052 4D41     		adcs	r5, r5, r1
 1282 0054 9C63     		str	r4, [r3, #56]
 1283 0056 DD63     		str	r5, [r3, #60]
1054:main.c        ****     }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 48


 1284              		.loc 1 1054 0
 1285 0058 1C6C     		ldr	r4, [r3, #64]
 1286 005a 5D6C     		ldr	r5, [r3, #68]
 1287 005c 0019     		adds	r0, r0, r4
 1288 005e 6941     		adcs	r1, r1, r5
 1289 0060 1864     		str	r0, [r3, #64]
 1290 0062 5964     		str	r1, [r3, #68]
 1291              	.L82:
1058:main.c        ****         UptimeMillisecondsAccumulator = 0;
 1292              		.loc 1 1058 0
 1293 0064 144B     		ldr	r3, .L90
 1294 0066 196C     		ldr	r1, [r3, #64]
 1295 0068 5A6C     		ldr	r2, [r3, #68]
 1296 006a 002A     		cmp	r2, #0
 1297 006c 04D1     		bne	.L89
 1298 006e 10D1     		bne	.L84
 1299 0070 FA23     		movs	r3, #250
 1300 0072 9B00     		lsls	r3, r3, #2
 1301 0074 9942     		cmp	r1, r3
 1302 0076 0CD9     		bls	.L84
 1303              	.L89:
1059:main.c        ****         UptimeSeconds += 1;
 1304              		.loc 1 1059 0
 1305 0078 0F4B     		ldr	r3, .L90
 1306 007a 0020     		movs	r0, #0
 1307 007c 0021     		movs	r1, #0
 1308 007e 1864     		str	r0, [r3, #64]
 1309 0080 5964     		str	r1, [r3, #68]
1060:main.c        ****     }
 1310              		.loc 1 1060 0
 1311 0082 1C68     		ldr	r4, [r3]
 1312 0084 5D68     		ldr	r5, [r3, #4]
 1313 0086 0120     		movs	r0, #1
 1314 0088 0021     		movs	r1, #0
 1315 008a 0019     		adds	r0, r0, r4
 1316 008c 6941     		adcs	r1, r1, r5
 1317 008e 1860     		str	r0, [r3]
 1318 0090 5960     		str	r1, [r3, #4]
 1319              	.L84:
1064:main.c        **** 
 1320              		.loc 1 1064 0
 1321 0092 094A     		ldr	r2, .L90
 1322 0094 936C     		ldr	r3, [r2, #72]
 1323 0096 0133     		adds	r3, r3, #1
 1324 0098 9364     		str	r3, [r2, #72]
1084:main.c        ****         
 1325              		.loc 1 1084 0
 1326 009a DA07     		lsls	r2, r3, #31
 1327 009c 02D5     		bpl	.L86
1089:main.c        ****         
 1328              		.loc 1 1089 0
 1329 009e FFF7FEFF 		bl	runRateGroup1_PID
 1330              	.LVL82:
 1331 00a2 05E0     		b	.L87
 1332              	.L86:
1091:main.c        ****         
 1333              		.loc 1 1091 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 49


 1334 00a4 9A07     		lsls	r2, r3, #30
 1335 00a6 03D4     		bmi	.L87
1096:main.c        ****         
 1336              		.loc 1 1096 0
 1337 00a8 5B07     		lsls	r3, r3, #29
 1338 00aa 01D5     		bpl	.L87
1099:main.c        ****         
 1339              		.loc 1 1099 0
 1340 00ac FFF7FEFF 		bl	runRateGroup3_SPI
 1341              	.LVL83:
 1342              	.L87:
1112:main.c        ****    
 1343              		.loc 1 1112 0
 1344 00b0 0020     		movs	r0, #0
 1345 00b2 FFF7FEFF 		bl	PROBE_Write
 1346              	.LVL84:
1114:main.c        **** 
 1347              		.loc 1 1114 0
 1348              		@ sp needed
 1349 00b6 70BD     		pop	{r4, r5, r6, pc}
 1350              	.L91:
 1351              		.align	2
 1352              	.L90:
 1353 00b8 00000000 		.word	.LANCHOR1
 1354              		.cfi_endproc
 1355              	.LFE42:
 1356              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1357              		.section	.text.main,"ax",%progbits
 1358              		.align	2
 1359              		.global	main
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	main, %function
 1363              	main:
 1364              	.LFB41:
 842:main.c        ****     
 1365              		.loc 1 842 0
 1366              		.cfi_startproc
 1367              		@ Volatile: function does not return.
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370 0000 70B5     		push	{r4, r5, r6, lr}
 1371              		.cfi_def_cfa_offset 16
 1372              		.cfi_offset 4, -16
 1373              		.cfi_offset 5, -12
 1374              		.cfi_offset 6, -8
 1375              		.cfi_offset 14, -4
 850:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1376              		.loc 1 850 0
 1377 0002 0120     		movs	r0, #1
 1378 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1379              	.LVL85:
 851:main.c        **** 
 1380              		.loc 1 851 0
 1381 0008 0120     		movs	r0, #1
 1382 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1383              	.LVL86:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 50


 859:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1384              		.loc 1 859 0
 1385 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1386              	.LVL87:
 860:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1387              		.loc 1 860 0
 1388 0012 3848     		ldr	r0, .L97
 1389 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1390              	.LVL88:
 861:main.c        **** 
 1391              		.loc 1 861 0
 1392 0018 0220     		movs	r0, #2
 1393 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1394              	.LVL89:
 864:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1395              		.loc 1 864 0
 1396 001e 3648     		ldr	r0, .L97+4
 1397 0020 FFF7FEFF 		bl	isr_home_StartEx
 1398              	.LVL90:
 865:main.c        **** 
 1399              		.loc 1 865 0
 1400 0024 0320     		movs	r0, #3
 1401 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1402              	.LVL91:
 868:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1403              		.loc 1 868 0
 1404 002a 3448     		ldr	r0, .L97+8
 1405 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1406              	.LVL92:
 869:main.c        ****     
 1407              		.loc 1 869 0
 1408 0030 0320     		movs	r0, #3
 1409 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1410              	.LVL93:
 872:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 1411              		.loc 1 872 0
 1412 0036 3248     		ldr	r0, .L97+12
 1413 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1414              	.LVL94:
 873:main.c        **** 
 1415              		.loc 1 873 0
 1416 003c 0320     		movs	r0, #3
 1417 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1418              	.LVL95:
 876:main.c        ****     
 1419              		.loc 1 876 0
 1420              		.syntax divided
 1421              	@ 876 "main.c" 1
 1422 0042 62B6     		CPSIE   i
 1423              	@ 0 "" 2
 905:main.c        ****     
 1424              		.loc 1 905 0
 1425              		.thumb
 1426              		.syntax unified
 1427 0044 FFF7FEFF 		bl	I2C_Start
 1428              	.LVL96:
 910:main.c        ****     SPI_1_Start();
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 51


 1429              		.loc 1 910 0
 1430 0048 6420     		movs	r0, #100
 1431 004a FFF7FEFF 		bl	CyDelay
 1432              	.LVL97:
 911:main.c        ****     
 1433              		.loc 1 911 0
 1434 004e FFF7FEFF 		bl	SPI_1_Start
 1435              	.LVL98:
 915:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1436              		.loc 1 915 0
 1437 0052 FFF7FEFF 		bl	PWM_1_Start
 1438              	.LVL99:
 916:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);   
 1439              		.loc 1 916 0
 1440 0056 C820     		movs	r0, #200
 1441 0058 C000     		lsls	r0, r0, #3
 1442 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1443              	.LVL100:
 917:main.c        ****     
 1444              		.loc 1 917 0
 1445 005e 0020     		movs	r0, #0
 1446 0060 FFF7FEFF 		bl	PWM_Set
 1447              	.LVL101:
 920:main.c        ****     
 1448              		.loc 1 920 0
 1449 0064 0024     		movs	r4, #0
 1450 0066 274B     		ldr	r3, .L97+16
 1451 0068 1C70     		strb	r4, [r3]
 923:main.c        ****    
 1452              		.loc 1 923 0
 1453 006a 274B     		ldr	r3, .L97+20
 1454 006c 1C70     		strb	r4, [r3]
 926:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1455              		.loc 1 926 0
 1456 006e FFF7FEFF 		bl	Counter_1_Start
 1457              	.LVL102:
 927:main.c        ****     LastPosition = ENCODER_MAX;
 1458              		.loc 1 927 0
 1459 0072 264D     		ldr	r5, .L97+24
 1460 0074 2800     		movs	r0, r5
 1461 0076 FFF7FEFF 		bl	Counter_1_WriteCounter
 1462              	.LVL103:
 928:main.c        ****     
 1463              		.loc 1 928 0
 1464 007a 254B     		ldr	r3, .L97+28
 1465 007c 1D60     		str	r5, [r3]
 931:main.c        ****     Index_Counter_1_WriteCounter(0);
 1466              		.loc 1 931 0
 1467 007e FFF7FEFF 		bl	Index_Counter_1_Start
 1468              	.LVL104:
 932:main.c        ****      
 1469              		.loc 1 932 0
 1470 0082 0020     		movs	r0, #0
 1471 0084 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1472              	.LVL105:
 935:main.c        ****     ConfigSequence = 0;
 1473              		.loc 1 935 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 52


 1474 0088 0122     		movs	r2, #1
 1475 008a 224B     		ldr	r3, .L97+32
 1476 008c 1A70     		strb	r2, [r3]
 936:main.c        ****     ChecksumErrors = 0;
 1477              		.loc 1 936 0
 1478 008e 224B     		ldr	r3, .L97+36
 1479 0090 1C70     		strb	r4, [r3]
 937:main.c        ****     
 1480              		.loc 1 937 0
 1481 0092 224B     		ldr	r3, .L97+40
 1482 0094 1C80     		strh	r4, [r3]
 941:main.c        ****     PID_SetMode(PID_MANUAL);
 1483              		.loc 1 941 0
 1484 0096 FFF7FEFF 		bl	PID_Initialize
 1485              	.LVL106:
 942:main.c        ****     
 1486              		.loc 1 942 0
 1487 009a 0020     		movs	r0, #0
 1488 009c FFF7FEFF 		bl	PID_SetMode
 1489              	.LVL107:
 945:main.c        ****     limitIterm = 800;
 1490              		.loc 1 945 0
 1491 00a0 C823     		movs	r3, #200
 1492 00a2 9B00     		lsls	r3, r3, #2
 1493 00a4 1E4A     		ldr	r2, .L97+44
 1494 00a6 1380     		strh	r3, [r2]
 946:main.c        ****     
 1495              		.loc 1 946 0
 1496 00a8 1E4A     		ldr	r2, .L97+48
 1497 00aa 1380     		strh	r3, [r2]
 949:main.c        ****     PID_EffectiveSetpoint = 0;
 1498              		.loc 1 949 0
 1499 00ac 1E4B     		ldr	r3, .L97+52
 1500 00ae 1C60     		str	r4, [r3]
 950:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1501              		.loc 1 950 0
 1502 00b0 1E4B     		ldr	r3, .L97+56
 1503 00b2 1C60     		str	r4, [r3]
 951:main.c        ****     PID_Was_Enabled       = false;
 1504              		.loc 1 951 0
 1505 00b4 FA22     		movs	r2, #250
 1506 00b6 1E4B     		ldr	r3, .L97+60
 1507 00b8 1A70     		strb	r2, [r3]
 952:main.c        ****     PID_Enabled           = false;
 1508              		.loc 1 952 0
 1509 00ba 1E4B     		ldr	r3, .L97+64
 1510 00bc 0022     		movs	r2, #0
 1511 00be 1A70     		strb	r2, [r3]
 953:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);
 1512              		.loc 1 953 0
 1513 00c0 1D4B     		ldr	r3, .L97+68
 1514 00c2 1A70     		strb	r2, [r3]
 954:main.c        ****   
 1515              		.loc 1 954 0
 1516 00c4 0020     		movs	r0, #0
 1517 00c6 FFF7FEFF 		bl	PWM_Set
 1518              	.LVL108:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 53


 958:main.c        ****     } else {
 1519              		.loc 1 958 0
 1520 00ca 0120     		movs	r0, #1
 1521 00cc FFF7FEFF 		bl	EncoderDirection_Write
 1522              	.LVL109:
 1523              	.L96:
 994:main.c        ****             LED_Write(1);
 1524              		.loc 1 994 0
 1525 00d0 1A4B     		ldr	r3, .L97+72
 1526 00d2 1A68     		ldr	r2, [r3]
 1527 00d4 5B68     		ldr	r3, [r3, #4]
 1528 00d6 0123     		movs	r3, #1
 1529 00d8 1342     		tst	r3, r2
 1530 00da 03D0     		beq	.L93
 995:main.c        ****         } else {
 1531              		.loc 1 995 0
 1532 00dc 0120     		movs	r0, #1
 1533 00de FFF7FEFF 		bl	LED_Write
 1534              	.LVL110:
 1535 00e2 02E0     		b	.L95
 1536              	.L93:
 997:main.c        ****         } 
 1537              		.loc 1 997 0
 1538 00e4 0020     		movs	r0, #0
 1539 00e6 FFF7FEFF 		bl	LED_Write
 1540              	.LVL111:
 1541              	.L95:
1001:main.c        ****         
 1542              		.loc 1 1001 0
 1543 00ea 0A20     		movs	r0, #10
 1544 00ec FFF7FEFF 		bl	CyDelay
 1545              	.LVL112:
1012:main.c        ****       
 1546              		.loc 1 1012 0
 1547 00f0 EEE7     		b	.L96
 1548              	.L98:
 1549 00f2 C046     		.align	2
 1550              	.L97:
 1551 00f4 00000000 		.word	BRMS_Interrupt
 1552 00f8 00000000 		.word	HomeIsrHandler
 1553 00fc 00000000 		.word	RSTIsrHandler
 1554 0100 00000000 		.word	SPI_SS_IsrHandler
 1555 0104 00000000 		.word	Jog
 1556 0108 00000000 		.word	.LANCHOR0
 1557 010c FFFFFF00 		.word	16777215
 1558 0110 00000000 		.word	LastPosition
 1559 0114 00000000 		.word	ConfigState
 1560 0118 00000000 		.word	ConfigSequence
 1561 011c 00000000 		.word	ChecksumErrors
 1562 0120 00000000 		.word	limitOutput
 1563 0124 00000000 		.word	limitIterm
 1564 0128 00000000 		.word	PID_Setpoint
 1565 012c 00000000 		.word	PID_EffectiveSetpoint
 1566 0130 00000000 		.word	PID_EffSetDelta
 1567 0134 00000000 		.word	PID_Was_Enabled
 1568 0138 00000000 		.word	PID_Enabled
 1569 013c 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 54


 1570              		.cfi_endproc
 1571              	.LFE41:
 1572              		.size	main, .-main
 1573              		.comm	txMessageState,1,1
 1574              		.comm	txMessage,31,4
 1575              		.comm	rxMessage,31,4
 1576              		.comm	LastMessageTimeSeconds,4,4
 1577              		.comm	CurrentI2Cinbuf,20,4
 1578              		.comm	MotorCurrent,2,2
 1579              		.comm	ChecksumErrors,2,2
 1580              		.comm	ConfigSequence,1,1
 1581              		.comm	FaultState,1,1
 1582              		.comm	ConfigState,1,1
 1583              		.global	UptimeSeconds
 1584              		.global	UptimeMillisecondsAccumulator
 1585              		.global	UptimeMilliseconds
 1586              		.global	UptimeMicrosecondsAccumulator
 1587              		.global	UptimeMicroseconds
 1588              		.global	NewCommandedMove
 1589              		.global	LastMoveTimeUsec
 1590              		.global	LastMoveStableCount
 1591              		.global	LastMoveEndTimeUsec
 1592              		.global	LastMoveStartTimeUsec
 1593              		.global	homingDone
 1594              		.comm	limitIterm,2,2
 1595              		.comm	limitOutput,2,2
 1596              		.comm	Output,4,4
 1597              		.comm	LastPosition,4,4
 1598              		.comm	Position,4,4
 1599              		.comm	lastTime,4,4
 1600              		.comm	PID_EffSetDelta,1,1
 1601              		.comm	PID_EffectiveSetpoint,4,4
 1602              		.comm	PID_Setpoint,4,4
 1603              		.comm	PID_Was_Enabled,1,1
 1604              		.comm	PID_Enabled,1,1
 1605              		.comm	Jog,1,1
 1606              		.global	inAuto
 1607              		.data
 1608              		.set	.LANCHOR0,. + 0
 1609              		.type	homingDone, %object
 1610              		.size	homingDone, 1
 1611              	homingDone:
 1612 0000 01       		.byte	1
 1613              		.bss
 1614              		.align	3
 1615              		.set	.LANCHOR1,. + 0
 1616              		.type	UptimeSeconds, %object
 1617              		.size	UptimeSeconds, 8
 1618              	UptimeSeconds:
 1619 0000 00000000 		.space	8
 1619      00000000 
 1620              		.type	RawPosition.7291, %object
 1621              		.size	RawPosition.7291, 4
 1622              	RawPosition.7291:
 1623 0008 00000000 		.space	4
 1624              		.type	result.7292, %object
 1625              		.size	result.7292, 4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 55


 1626              	result.7292:
 1627 000c 00000000 		.space	4
 1628              		.type	NewCommandedMove, %object
 1629              		.size	NewCommandedMove, 1
 1630              	NewCommandedMove:
 1631 0010 00       		.space	1
 1632 0011 00000000 		.space	7
 1632      000000
 1633              		.type	UptimeMicroseconds, %object
 1634              		.size	UptimeMicroseconds, 8
 1635              	UptimeMicroseconds:
 1636 0018 00000000 		.space	8
 1636      00000000 
 1637              		.type	LastMoveStartTimeUsec, %object
 1638              		.size	LastMoveStartTimeUsec, 4
 1639              	LastMoveStartTimeUsec:
 1640 0020 00000000 		.space	4
 1641              		.type	LastMoveTimeUsec, %object
 1642              		.size	LastMoveTimeUsec, 4
 1643              	LastMoveTimeUsec:
 1644 0024 00000000 		.space	4
 1645              		.type	inAuto, %object
 1646              		.size	inAuto, 1
 1647              	inAuto:
 1648 0028 00       		.space	1
 1649 0029 00       		.space	1
 1650              		.type	LastMoveStableCount, %object
 1651              		.size	LastMoveStableCount, 2
 1652              	LastMoveStableCount:
 1653 002a 0000     		.space	2
 1654              		.type	LastMoveEndTimeUsec, %object
 1655              		.size	LastMoveEndTimeUsec, 4
 1656              	LastMoveEndTimeUsec:
 1657 002c 00000000 		.space	4
 1658              		.type	UptimeMicrosecondsAccumulator, %object
 1659              		.size	UptimeMicrosecondsAccumulator, 8
 1660              	UptimeMicrosecondsAccumulator:
 1661 0030 00000000 		.space	8
 1661      00000000 
 1662              		.type	UptimeMilliseconds, %object
 1663              		.size	UptimeMilliseconds, 8
 1664              	UptimeMilliseconds:
 1665 0038 00000000 		.space	8
 1665      00000000 
 1666              		.type	UptimeMillisecondsAccumulator, %object
 1667              		.size	UptimeMillisecondsAccumulator, 8
 1668              	UptimeMillisecondsAccumulator:
 1669 0040 00000000 		.space	8
 1669      00000000 
 1670              		.type	brmsTask.7310, %object
 1671              		.size	brmsTask.7310, 4
 1672              	brmsTask.7310:
 1673 0048 00000000 		.space	4
 1674              		.text
 1675              	.Letext0:
 1676              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1677              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 56


 1678              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1679              		.file 5 "pid.h"
 1680              		.file 6 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1681              		.file 7 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1682              		.file 8 "Generated_Source\\PSoC4/Counter_1.h"
 1683              		.file 9 "Generated_Source\\PSoC4/Index_Counter_1.h"
 1684              		.file 10 "Generated_Source\\PSoC4/isr_home.h"
 1685              		.file 11 "Generated_Source\\PSoC4/HOME_IN.h"
 1686              		.file 12 "Generated_Source\\PSoC4/spi_ss.h"
 1687              		.file 13 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1688              		.file 14 "INA219.h"
 1689              		.file 15 "Generated_Source\\PSoC4/PWM_1.h"
 1690              		.file 16 "Generated_Source\\PSoC4/HOME_OUT.h"
 1691              		.file 17 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1692              		.file 18 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1693              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 1694              		.file 20 "Generated_Source\\PSoC4/isr_brms.h"
 1695              		.file 21 "Generated_Source\\PSoC4/isr_spi_ss.h"
 1696              		.file 22 "Generated_Source\\PSoC4/I2C.h"
 1697              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1698              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1699              		.file 25 "Generated_Source\\PSoC4/EncoderDirection.h"
 1700              		.file 26 "Generated_Source\\PSoC4/LED.h"
 1701              		.section	.debug_info,"",%progbits
 1702              	.Ldebug_info0:
 1703 0000 DA0F0000 		.4byte	0xfda
 1704 0004 0400     		.2byte	0x4
 1705 0006 00000000 		.4byte	.Ldebug_abbrev0
 1706 000a 04       		.byte	0x4
 1707 000b 01       		.uleb128 0x1
 1708 000c 5A020000 		.4byte	.LASF181
 1709 0010 0C       		.byte	0xc
 1710 0011 12000000 		.4byte	.LASF182
 1711 0015 81050000 		.4byte	.LASF183
 1712 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1713 001d 00000000 		.4byte	0
 1714 0021 00000000 		.4byte	.Ldebug_line0
 1715 0025 02       		.uleb128 0x2
 1716 0026 4E060000 		.4byte	.LASF0
 1717 002a 02       		.byte	0x2
 1718 002b 1B       		.byte	0x1b
 1719 002c 30000000 		.4byte	0x30
 1720 0030 03       		.uleb128 0x3
 1721 0031 01       		.byte	0x1
 1722 0032 06       		.byte	0x6
 1723 0033 90090000 		.4byte	.LASF2
 1724 0037 02       		.uleb128 0x2
 1725 0038 25080000 		.4byte	.LASF1
 1726 003c 02       		.byte	0x2
 1727 003d 1D       		.byte	0x1d
 1728 003e 42000000 		.4byte	0x42
 1729 0042 03       		.uleb128 0x3
 1730 0043 01       		.byte	0x1
 1731 0044 08       		.byte	0x8
 1732 0045 B6080000 		.4byte	.LASF3
 1733 0049 02       		.uleb128 0x2
 1734 004a 26050000 		.4byte	.LASF4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 57


 1735 004e 02       		.byte	0x2
 1736 004f 29       		.byte	0x29
 1737 0050 54000000 		.4byte	0x54
 1738 0054 03       		.uleb128 0x3
 1739 0055 02       		.byte	0x2
 1740 0056 05       		.byte	0x5
 1741 0057 E7060000 		.4byte	.LASF5
 1742 005b 02       		.uleb128 0x2
 1743 005c 1E020000 		.4byte	.LASF6
 1744 0060 02       		.byte	0x2
 1745 0061 2B       		.byte	0x2b
 1746 0062 66000000 		.4byte	0x66
 1747 0066 03       		.uleb128 0x3
 1748 0067 02       		.byte	0x2
 1749 0068 07       		.byte	0x7
 1750 0069 9C090000 		.4byte	.LASF7
 1751 006d 02       		.uleb128 0x2
 1752 006e CE000000 		.4byte	.LASF8
 1753 0072 02       		.byte	0x2
 1754 0073 3F       		.byte	0x3f
 1755 0074 78000000 		.4byte	0x78
 1756 0078 03       		.uleb128 0x3
 1757 0079 04       		.byte	0x4
 1758 007a 05       		.byte	0x5
 1759 007b 31070000 		.4byte	.LASF9
 1760 007f 02       		.uleb128 0x2
 1761 0080 C4080000 		.4byte	.LASF10
 1762 0084 02       		.byte	0x2
 1763 0085 41       		.byte	0x41
 1764 0086 8A000000 		.4byte	0x8a
 1765 008a 03       		.uleb128 0x3
 1766 008b 04       		.byte	0x4
 1767 008c 07       		.byte	0x7
 1768 008d 56080000 		.4byte	.LASF11
 1769 0091 03       		.uleb128 0x3
 1770 0092 08       		.byte	0x8
 1771 0093 05       		.byte	0x5
 1772 0094 DB040000 		.4byte	.LASF12
 1773 0098 02       		.uleb128 0x2
 1774 0099 3B030000 		.4byte	.LASF13
 1775 009d 02       		.byte	0x2
 1776 009e 5B       		.byte	0x5b
 1777 009f A3000000 		.4byte	0xa3
 1778 00a3 03       		.uleb128 0x3
 1779 00a4 08       		.byte	0x8
 1780 00a5 07       		.byte	0x7
 1781 00a6 E1010000 		.4byte	.LASF14
 1782 00aa 04       		.uleb128 0x4
 1783 00ab 04       		.byte	0x4
 1784 00ac 05       		.byte	0x5
 1785 00ad 696E7400 		.ascii	"int\000"
 1786 00b1 03       		.uleb128 0x3
 1787 00b2 04       		.byte	0x4
 1788 00b3 07       		.byte	0x7
 1789 00b4 87000000 		.4byte	.LASF15
 1790 00b8 02       		.uleb128 0x2
 1791 00b9 6F010000 		.4byte	.LASF16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 58


 1792 00bd 03       		.byte	0x3
 1793 00be 14       		.byte	0x14
 1794 00bf 25000000 		.4byte	0x25
 1795 00c3 02       		.uleb128 0x2
 1796 00c4 48040000 		.4byte	.LASF17
 1797 00c8 03       		.byte	0x3
 1798 00c9 18       		.byte	0x18
 1799 00ca 37000000 		.4byte	0x37
 1800 00ce 02       		.uleb128 0x2
 1801 00cf D2010000 		.4byte	.LASF18
 1802 00d3 03       		.byte	0x3
 1803 00d4 20       		.byte	0x20
 1804 00d5 49000000 		.4byte	0x49
 1805 00d9 02       		.uleb128 0x2
 1806 00da A7060000 		.4byte	.LASF19
 1807 00de 03       		.byte	0x3
 1808 00df 24       		.byte	0x24
 1809 00e0 5B000000 		.4byte	0x5b
 1810 00e4 02       		.uleb128 0x2
 1811 00e5 68080000 		.4byte	.LASF20
 1812 00e9 03       		.byte	0x3
 1813 00ea 2C       		.byte	0x2c
 1814 00eb 6D000000 		.4byte	0x6d
 1815 00ef 02       		.uleb128 0x2
 1816 00f0 66010000 		.4byte	.LASF21
 1817 00f4 03       		.byte	0x3
 1818 00f5 30       		.byte	0x30
 1819 00f6 7F000000 		.4byte	0x7f
 1820 00fa 02       		.uleb128 0x2
 1821 00fb C4070000 		.4byte	.LASF22
 1822 00ff 03       		.byte	0x3
 1823 0100 3C       		.byte	0x3c
 1824 0101 98000000 		.4byte	0x98
 1825 0105 05       		.uleb128 0x5
 1826 0106 C3050000 		.4byte	.LASF23
 1827 010a 04       		.byte	0x4
 1828 010b FE01     		.2byte	0x1fe
 1829 010d 8A000000 		.4byte	0x8a
 1830 0111 03       		.uleb128 0x3
 1831 0112 04       		.byte	0x4
 1832 0113 04       		.byte	0x4
 1833 0114 A9010000 		.4byte	.LASF24
 1834 0118 03       		.uleb128 0x3
 1835 0119 08       		.byte	0x8
 1836 011a 04       		.byte	0x4
 1837 011b C9090000 		.4byte	.LASF25
 1838 011f 03       		.uleb128 0x3
 1839 0120 01       		.byte	0x1
 1840 0121 08       		.byte	0x8
 1841 0122 D3030000 		.4byte	.LASF26
 1842 0126 05       		.uleb128 0x5
 1843 0127 B0060000 		.4byte	.LASF27
 1844 012b 04       		.byte	0x4
 1845 012c A802     		.2byte	0x2a8
 1846 012e 32010000 		.4byte	0x132
 1847 0132 06       		.uleb128 0x6
 1848 0133 05010000 		.4byte	0x105
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 59


 1849 0137 03       		.uleb128 0x3
 1850 0138 08       		.byte	0x8
 1851 0139 04       		.byte	0x4
 1852 013a 8D060000 		.4byte	.LASF28
 1853 013e 03       		.uleb128 0x3
 1854 013f 04       		.byte	0x4
 1855 0140 07       		.byte	0x7
 1856 0141 4D080000 		.4byte	.LASF29
 1857 0145 06       		.uleb128 0x6
 1858 0146 EF000000 		.4byte	0xef
 1859 014a 07       		.uleb128 0x7
 1860 014b 01       		.byte	0x1
 1861 014c 42000000 		.4byte	0x42
 1862 0150 01       		.byte	0x1
 1863 0151 9C       		.byte	0x9c
 1864 0152 6F010000 		.4byte	0x16f
 1865 0156 08       		.uleb128 0x8
 1866 0157 B6060000 		.4byte	.LASF30
 1867 015b 00       		.byte	0
 1868 015c 08       		.uleb128 0x8
 1869 015d 74000000 		.4byte	.LASF31
 1870 0161 01       		.byte	0x1
 1871 0162 08       		.uleb128 0x8
 1872 0163 43010000 		.4byte	.LASF32
 1873 0167 02       		.byte	0x2
 1874 0168 08       		.uleb128 0x8
 1875 0169 3A070000 		.4byte	.LASF33
 1876 016d 03       		.byte	0x3
 1877 016e 00       		.byte	0
 1878 016f 02       		.uleb128 0x2
 1879 0170 57060000 		.4byte	.LASF34
 1880 0174 01       		.byte	0x1
 1881 0175 A1       		.byte	0xa1
 1882 0176 4A010000 		.4byte	0x14a
 1883 017a 07       		.uleb128 0x7
 1884 017b 01       		.byte	0x1
 1885 017c 42000000 		.4byte	0x42
 1886 0180 01       		.byte	0x1
 1887 0181 A6       		.byte	0xa6
 1888 0182 BD010000 		.4byte	0x1bd
 1889 0186 08       		.uleb128 0x8
 1890 0187 8F040000 		.4byte	.LASF35
 1891 018b 00       		.byte	0
 1892 018c 08       		.uleb128 0x8
 1893 018d 25030000 		.4byte	.LASF36
 1894 0191 01       		.byte	0x1
 1895 0192 08       		.uleb128 0x8
 1896 0193 6A000000 		.4byte	.LASF37
 1897 0197 02       		.byte	0x2
 1898 0198 08       		.uleb128 0x8
 1899 0199 57040000 		.4byte	.LASF38
 1900 019d 04       		.byte	0x4
 1901 019e 08       		.uleb128 0x8
 1902 019f D9060000 		.4byte	.LASF39
 1903 01a3 08       		.byte	0x8
 1904 01a4 08       		.uleb128 0x8
 1905 01a5 03050000 		.4byte	.LASF40
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 60


 1906 01a9 10       		.byte	0x10
 1907 01aa 08       		.uleb128 0x8
 1908 01ab 06090000 		.4byte	.LASF41
 1909 01af 20       		.byte	0x20
 1910 01b0 08       		.uleb128 0x8
 1911 01b1 0B090000 		.4byte	.LASF42
 1912 01b5 40       		.byte	0x40
 1913 01b6 08       		.uleb128 0x8
 1914 01b7 10090000 		.4byte	.LASF43
 1915 01bb 80       		.byte	0x80
 1916 01bc 00       		.byte	0
 1917 01bd 02       		.uleb128 0x2
 1918 01be 580A0000 		.4byte	.LASF44
 1919 01c2 01       		.byte	0x1
 1920 01c3 B0       		.byte	0xb0
 1921 01c4 7A010000 		.4byte	0x17a
 1922 01c8 07       		.uleb128 0x7
 1923 01c9 01       		.byte	0x1
 1924 01ca 42000000 		.4byte	0x42
 1925 01ce 01       		.byte	0x1
 1926 01cf CC       		.byte	0xcc
 1927 01d0 F3010000 		.4byte	0x1f3
 1928 01d4 08       		.uleb128 0x8
 1929 01d5 CF080000 		.4byte	.LASF45
 1930 01d9 00       		.byte	0
 1931 01da 08       		.uleb128 0x8
 1932 01db 040A0000 		.4byte	.LASF46
 1933 01df 01       		.byte	0x1
 1934 01e0 08       		.uleb128 0x8
 1935 01e1 2F080000 		.4byte	.LASF47
 1936 01e5 02       		.byte	0x2
 1937 01e6 08       		.uleb128 0x8
 1938 01e7 DB080000 		.4byte	.LASF48
 1939 01eb 03       		.byte	0x3
 1940 01ec 08       		.uleb128 0x8
 1941 01ed 38080000 		.4byte	.LASF49
 1942 01f1 04       		.byte	0x4
 1943 01f2 00       		.byte	0
 1944 01f3 02       		.uleb128 0x2
 1945 01f4 76010000 		.4byte	.LASF50
 1946 01f8 01       		.byte	0x1
 1947 01f9 D2       		.byte	0xd2
 1948 01fa C8010000 		.4byte	0x1c8
 1949 01fe 09       		.uleb128 0x9
 1950 01ff 03       		.byte	0x3
 1951 0200 01       		.byte	0x1
 1952 0201 D7       		.byte	0xd7
 1953 0202 2B020000 		.4byte	0x22b
 1954 0206 0A       		.uleb128 0xa
 1955 0207 C2010000 		.4byte	.LASF51
 1956 020b 01       		.byte	0x1
 1957 020c D8       		.byte	0xd8
 1958 020d C3000000 		.4byte	0xc3
 1959 0211 00       		.byte	0
 1960 0212 0A       		.uleb128 0xa
 1961 0213 7C050000 		.4byte	.LASF52
 1962 0217 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 61


 1963 0218 D9       		.byte	0xd9
 1964 0219 C3000000 		.4byte	0xc3
 1965 021d 01       		.byte	0x1
 1966 021e 0A       		.uleb128 0xa
 1967 021f 36040000 		.4byte	.LASF53
 1968 0223 01       		.byte	0x1
 1969 0224 DA       		.byte	0xda
 1970 0225 C3000000 		.4byte	0xc3
 1971 0229 02       		.byte	0x2
 1972 022a 00       		.byte	0
 1973 022b 02       		.uleb128 0x2
 1974 022c B6030000 		.4byte	.LASF54
 1975 0230 01       		.byte	0x1
 1976 0231 DB       		.byte	0xdb
 1977 0232 FE010000 		.4byte	0x1fe
 1978 0236 09       		.uleb128 0x9
 1979 0237 16       		.byte	0x16
 1980 0238 01       		.byte	0x1
 1981 0239 DE       		.byte	0xde
 1982 023a B7020000 		.4byte	0x2b7
 1983 023e 0A       		.uleb128 0xa
 1984 023f C2010000 		.4byte	.LASF51
 1985 0243 01       		.byte	0x1
 1986 0244 DF       		.byte	0xdf
 1987 0245 C3000000 		.4byte	0xc3
 1988 0249 00       		.byte	0
 1989 024a 0A       		.uleb128 0xa
 1990 024b 7C050000 		.4byte	.LASF52
 1991 024f 01       		.byte	0x1
 1992 0250 E0       		.byte	0xe0
 1993 0251 C3000000 		.4byte	0xc3
 1994 0255 01       		.byte	0x1
 1995 0256 0A       		.uleb128 0xa
 1996 0257 36040000 		.4byte	.LASF53
 1997 025b 01       		.byte	0x1
 1998 025c E1       		.byte	0xe1
 1999 025d C3000000 		.4byte	0xc3
 2000 0261 02       		.byte	0x2
 2001 0262 0A       		.uleb128 0xa
 2002 0263 C2060000 		.4byte	.LASF55
 2003 0267 01       		.byte	0x1
 2004 0268 E2       		.byte	0xe2
 2005 0269 C3000000 		.4byte	0xc3
 2006 026d 03       		.byte	0x3
 2007 026e 0A       		.uleb128 0xa
 2008 026f 9F080000 		.4byte	.LASF56
 2009 0273 01       		.byte	0x1
 2010 0274 E4       		.byte	0xe4
 2011 0275 EF000000 		.4byte	0xef
 2012 0279 04       		.byte	0x4
 2013 027a 0A       		.uleb128 0xa
 2014 027b 94080000 		.4byte	.LASF57
 2015 027f 01       		.byte	0x1
 2016 0280 E5       		.byte	0xe5
 2017 0281 EF000000 		.4byte	0xef
 2018 0285 08       		.byte	0x8
 2019 0286 0A       		.uleb128 0xa
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 62


 2020 0287 83080000 		.4byte	.LASF58
 2021 028b 01       		.byte	0x1
 2022 028c E6       		.byte	0xe6
 2023 028d EF000000 		.4byte	0xef
 2024 0291 0C       		.byte	0xc
 2025 0292 0A       		.uleb128 0xa
 2026 0293 4E020000 		.4byte	.LASF59
 2027 0297 01       		.byte	0x1
 2028 0298 E8       		.byte	0xe8
 2029 0299 D9000000 		.4byte	0xd9
 2030 029d 10       		.byte	0x10
 2031 029e 0A       		.uleb128 0xa
 2032 029f 3D040000 		.4byte	.LASF60
 2033 02a3 01       		.byte	0x1
 2034 02a4 E9       		.byte	0xe9
 2035 02a5 D9000000 		.4byte	0xd9
 2036 02a9 12       		.byte	0x12
 2037 02aa 0A       		.uleb128 0xa
 2038 02ab 5E000000 		.4byte	.LASF61
 2039 02af 01       		.byte	0x1
 2040 02b0 EA       		.byte	0xea
 2041 02b1 D9000000 		.4byte	0xd9
 2042 02b5 14       		.byte	0x14
 2043 02b6 00       		.byte	0
 2044 02b7 02       		.uleb128 0x2
 2045 02b8 F1060000 		.4byte	.LASF62
 2046 02bc 01       		.byte	0x1
 2047 02bd EB       		.byte	0xeb
 2048 02be 36020000 		.4byte	0x236
 2049 02c2 09       		.uleb128 0x9
 2050 02c3 0A       		.byte	0xa
 2051 02c4 01       		.byte	0x1
 2052 02c5 EE       		.byte	0xee
 2053 02c6 1F030000 		.4byte	0x31f
 2054 02ca 0A       		.uleb128 0xa
 2055 02cb C2010000 		.4byte	.LASF51
 2056 02cf 01       		.byte	0x1
 2057 02d0 EF       		.byte	0xef
 2058 02d1 C3000000 		.4byte	0xc3
 2059 02d5 00       		.byte	0
 2060 02d6 0A       		.uleb128 0xa
 2061 02d7 7C050000 		.4byte	.LASF52
 2062 02db 01       		.byte	0x1
 2063 02dc F0       		.byte	0xf0
 2064 02dd C3000000 		.4byte	0xc3
 2065 02e1 01       		.byte	0x1
 2066 02e2 0A       		.uleb128 0xa
 2067 02e3 36040000 		.4byte	.LASF53
 2068 02e7 01       		.byte	0x1
 2069 02e8 F1       		.byte	0xf1
 2070 02e9 C3000000 		.4byte	0xc3
 2071 02ed 02       		.byte	0x2
 2072 02ee 0A       		.uleb128 0xa
 2073 02ef 29020000 		.4byte	.LASF63
 2074 02f3 01       		.byte	0x1
 2075 02f4 F2       		.byte	0xf2
 2076 02f5 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 63


 2077 02f9 03       		.byte	0x3
 2078 02fa 0A       		.uleb128 0xa
 2079 02fb CD070000 		.4byte	.LASF64
 2080 02ff 01       		.byte	0x1
 2081 0300 F3       		.byte	0xf3
 2082 0301 E4000000 		.4byte	0xe4
 2083 0305 04       		.byte	0x4
 2084 0306 0B       		.uleb128 0xb
 2085 0307 6A6F6700 		.ascii	"jog\000"
 2086 030b 01       		.byte	0x1
 2087 030c F4       		.byte	0xf4
 2088 030d B8000000 		.4byte	0xb8
 2089 0311 08       		.byte	0x8
 2090 0312 0A       		.uleb128 0xa
 2091 0313 C2000000 		.4byte	.LASF65
 2092 0317 01       		.byte	0x1
 2093 0318 F5       		.byte	0xf5
 2094 0319 C3000000 		.4byte	0xc3
 2095 031d 09       		.byte	0x9
 2096 031e 00       		.byte	0
 2097 031f 02       		.uleb128 0x2
 2098 0320 8A010000 		.4byte	.LASF66
 2099 0324 01       		.byte	0x1
 2100 0325 F6       		.byte	0xf6
 2101 0326 C2020000 		.4byte	0x2c2
 2102 032a 09       		.uleb128 0x9
 2103 032b 07       		.byte	0x7
 2104 032c 01       		.byte	0x1
 2105 032d F9       		.byte	0xf9
 2106 032e 63030000 		.4byte	0x363
 2107 0332 0A       		.uleb128 0xa
 2108 0333 C2010000 		.4byte	.LASF51
 2109 0337 01       		.byte	0x1
 2110 0338 FA       		.byte	0xfa
 2111 0339 C3000000 		.4byte	0xc3
 2112 033d 00       		.byte	0
 2113 033e 0A       		.uleb128 0xa
 2114 033f 7C050000 		.4byte	.LASF52
 2115 0343 01       		.byte	0x1
 2116 0344 FB       		.byte	0xfb
 2117 0345 C3000000 		.4byte	0xc3
 2118 0349 01       		.byte	0x1
 2119 034a 0A       		.uleb128 0xa
 2120 034b 36040000 		.4byte	.LASF53
 2121 034f 01       		.byte	0x1
 2122 0350 FC       		.byte	0xfc
 2123 0351 C3000000 		.4byte	0xc3
 2124 0355 02       		.byte	0x2
 2125 0356 0A       		.uleb128 0xa
 2126 0357 CD070000 		.4byte	.LASF64
 2127 035b 01       		.byte	0x1
 2128 035c FD       		.byte	0xfd
 2129 035d E4000000 		.4byte	0xe4
 2130 0361 03       		.byte	0x3
 2131 0362 00       		.byte	0
 2132 0363 02       		.uleb128 0x2
 2133 0364 60090000 		.4byte	.LASF67
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 64


 2134 0368 01       		.byte	0x1
 2135 0369 FE       		.byte	0xfe
 2136 036a 2A030000 		.4byte	0x32a
 2137 036e 0C       		.uleb128 0xc
 2138 036f 1F       		.byte	0x1f
 2139 0370 01       		.byte	0x1
 2140 0371 0201     		.2byte	0x102
 2141 0373 B4030000 		.4byte	0x3b4
 2142 0377 0D       		.uleb128 0xd
 2143 0378 62756600 		.ascii	"buf\000"
 2144 037c 01       		.byte	0x1
 2145 037d 0301     		.2byte	0x103
 2146 037f B4030000 		.4byte	0x3b4
 2147 0383 0E       		.uleb128 0xe
 2148 0384 40070000 		.4byte	.LASF68
 2149 0388 01       		.byte	0x1
 2150 0389 0401     		.2byte	0x104
 2151 038b 2B020000 		.4byte	0x22b
 2152 038f 0E       		.uleb128 0xe
 2153 0390 D2060000 		.4byte	.LASF69
 2154 0394 01       		.byte	0x1
 2155 0395 0501     		.2byte	0x105
 2156 0397 B7020000 		.4byte	0x2b7
 2157 039b 0E       		.uleb128 0xe
 2158 039c 50040000 		.4byte	.LASF70
 2159 03a0 01       		.byte	0x1
 2160 03a1 0601     		.2byte	0x106
 2161 03a3 1F030000 		.4byte	0x31f
 2162 03a7 0E       		.uleb128 0xe
 2163 03a8 CB010000 		.4byte	.LASF71
 2164 03ac 01       		.byte	0x1
 2165 03ad 0701     		.2byte	0x107
 2166 03af 63030000 		.4byte	0x363
 2167 03b3 00       		.byte	0
 2168 03b4 0F       		.uleb128 0xf
 2169 03b5 C3000000 		.4byte	0xc3
 2170 03b9 C4030000 		.4byte	0x3c4
 2171 03bd 10       		.uleb128 0x10
 2172 03be 3E010000 		.4byte	0x13e
 2173 03c2 1E       		.byte	0x1e
 2174 03c3 00       		.byte	0
 2175 03c4 11       		.uleb128 0x11
 2176 03c5 1F       		.byte	0x1f
 2177 03c6 01       		.byte	0x1
 2178 03c7 0B01     		.2byte	0x10b
 2179 03c9 9E040000 		.4byte	0x49e
 2180 03cd 12       		.uleb128 0x12
 2181 03ce C2010000 		.4byte	.LASF51
 2182 03d2 01       		.byte	0x1
 2183 03d3 0C01     		.2byte	0x10c
 2184 03d5 C3000000 		.4byte	0xc3
 2185 03d9 00       		.byte	0
 2186 03da 12       		.uleb128 0x12
 2187 03db 9B030000 		.4byte	.LASF72
 2188 03df 01       		.byte	0x1
 2189 03e0 0D01     		.2byte	0x10d
 2190 03e2 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 65


 2191 03e6 01       		.byte	0x1
 2192 03e7 12       		.uleb128 0x12
 2193 03e8 A4030000 		.4byte	.LASF73
 2194 03ec 01       		.byte	0x1
 2195 03ed 0E01     		.2byte	0x10e
 2196 03ef C3000000 		.4byte	0xc3
 2197 03f3 02       		.byte	0x2
 2198 03f4 12       		.uleb128 0x12
 2199 03f5 AD030000 		.4byte	.LASF74
 2200 03f9 01       		.byte	0x1
 2201 03fa 0F01     		.2byte	0x10f
 2202 03fc C3000000 		.4byte	0xc3
 2203 0400 03       		.byte	0x3
 2204 0401 12       		.uleb128 0x12
 2205 0402 7C050000 		.4byte	.LASF52
 2206 0406 01       		.byte	0x1
 2207 0407 1001     		.2byte	0x110
 2208 0409 C3000000 		.4byte	0xc3
 2209 040d 04       		.byte	0x4
 2210 040e 12       		.uleb128 0x12
 2211 040f 36040000 		.4byte	.LASF53
 2212 0413 01       		.byte	0x1
 2213 0414 1101     		.2byte	0x111
 2214 0416 C3000000 		.4byte	0xc3
 2215 041a 05       		.byte	0x5
 2216 041b 12       		.uleb128 0x12
 2217 041c 8E080000 		.4byte	.LASF75
 2218 0420 01       		.byte	0x1
 2219 0421 1201     		.2byte	0x112
 2220 0423 C3000000 		.4byte	0xc3
 2221 0427 06       		.byte	0x6
 2222 0428 12       		.uleb128 0x12
 2223 0429 3B0A0000 		.4byte	.LASF76
 2224 042d 01       		.byte	0x1
 2225 042e 1301     		.2byte	0x113
 2226 0430 C3000000 		.4byte	0xc3
 2227 0434 07       		.byte	0x7
 2228 0435 12       		.uleb128 0x12
 2229 0436 C2060000 		.4byte	.LASF55
 2230 043a 01       		.byte	0x1
 2231 043b 1401     		.2byte	0x114
 2232 043d C3000000 		.4byte	0xc3
 2233 0441 08       		.byte	0x8
 2234 0442 12       		.uleb128 0x12
 2235 0443 6C050000 		.4byte	.LASF77
 2236 0447 01       		.byte	0x1
 2237 0448 1501     		.2byte	0x115
 2238 044a D9000000 		.4byte	0xd9
 2239 044e 09       		.byte	0x9
 2240 044f 12       		.uleb128 0x12
 2241 0450 19000000 		.4byte	.LASF78
 2242 0454 01       		.byte	0x1
 2243 0455 1601     		.2byte	0x116
 2244 0457 CE000000 		.4byte	0xce
 2245 045b 0B       		.byte	0xb
 2246 045c 12       		.uleb128 0x12
 2247 045d 4F0A0000 		.4byte	.LASF79
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 66


 2248 0461 01       		.byte	0x1
 2249 0462 1701     		.2byte	0x117
 2250 0464 E4000000 		.4byte	0xe4
 2251 0468 0D       		.byte	0xd
 2252 0469 13       		.uleb128 0x13
 2253 046a 70776D00 		.ascii	"pwm\000"
 2254 046e 01       		.byte	0x1
 2255 046f 1801     		.2byte	0x118
 2256 0471 CE000000 		.4byte	0xce
 2257 0475 11       		.byte	0x11
 2258 0476 12       		.uleb128 0x12
 2259 0477 C3090000 		.4byte	.LASF80
 2260 047b 01       		.byte	0x1
 2261 047c 1901     		.2byte	0x119
 2262 047e E4000000 		.4byte	0xe4
 2263 0482 13       		.byte	0x13
 2264 0483 12       		.uleb128 0x12
 2265 0484 D8030000 		.4byte	.LASF81
 2266 0488 01       		.byte	0x1
 2267 0489 1A01     		.2byte	0x11a
 2268 048b EF000000 		.4byte	0xef
 2269 048f 17       		.byte	0x17
 2270 0490 12       		.uleb128 0x12
 2271 0491 1A050000 		.4byte	.LASF82
 2272 0495 01       		.byte	0x1
 2273 0496 1B01     		.2byte	0x11b
 2274 0498 E4000000 		.4byte	0xe4
 2275 049c 1B       		.byte	0x1b
 2276 049d 00       		.byte	0
 2277 049e 05       		.uleb128 0x5
 2278 049f B8070000 		.4byte	.LASF83
 2279 04a3 01       		.byte	0x1
 2280 04a4 1C01     		.2byte	0x11c
 2281 04a6 C4030000 		.4byte	0x3c4
 2282 04aa 0C       		.uleb128 0xc
 2283 04ab 1F       		.byte	0x1f
 2284 04ac 01       		.byte	0x1
 2285 04ad 1F01     		.2byte	0x11f
 2286 04af CC040000 		.4byte	0x4cc
 2287 04b3 0D       		.uleb128 0xd
 2288 04b4 62756600 		.ascii	"buf\000"
 2289 04b8 01       		.byte	0x1
 2290 04b9 2001     		.2byte	0x120
 2291 04bb B4030000 		.4byte	0x3b4
 2292 04bf 0D       		.uleb128 0xd
 2293 04c0 6D736700 		.ascii	"msg\000"
 2294 04c4 01       		.byte	0x1
 2295 04c5 2101     		.2byte	0x121
 2296 04c7 9E040000 		.4byte	0x49e
 2297 04cb 00       		.byte	0
 2298 04cc 14       		.uleb128 0x14
 2299 04cd 01       		.byte	0x1
 2300 04ce 42000000 		.4byte	0x42
 2301 04d2 01       		.byte	0x1
 2302 04d3 2501     		.2byte	0x125
 2303 04d5 E6040000 		.4byte	0x4e6
 2304 04d9 08       		.uleb128 0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 67


 2305 04da 33000000 		.4byte	.LASF84
 2306 04de 00       		.byte	0
 2307 04df 08       		.uleb128 0x8
 2308 04e0 CA050000 		.4byte	.LASF85
 2309 04e4 01       		.byte	0x1
 2310 04e5 00       		.byte	0
 2311 04e6 05       		.uleb128 0x5
 2312 04e7 08010000 		.4byte	.LASF86
 2313 04eb 01       		.byte	0x1
 2314 04ec 2801     		.2byte	0x128
 2315 04ee CC040000 		.4byte	0x4cc
 2316 04f2 15       		.uleb128 0x15
 2317 04f3 410A0000 		.4byte	.LASF87
 2318 04f7 01       		.byte	0x1
 2319 04f8 6804     		.2byte	0x468
 2320 04fa 00000000 		.4byte	.LFB43
 2321 04fe 24000000 		.4byte	.LFE43-.LFB43
 2322 0502 01       		.uleb128 0x1
 2323 0503 9C       		.byte	0x9c
 2324 0504 3D050000 		.4byte	0x53d
 2325 0508 16       		.uleb128 0x16
 2326 0509 06000000 		.4byte	.LVL0
 2327 050d 290E0000 		.4byte	0xe29
 2328 0511 16       		.uleb128 0x16
 2329 0512 0A000000 		.4byte	.LVL1
 2330 0516 340E0000 		.4byte	0xe34
 2331 051a 17       		.uleb128 0x17
 2332 051b 10000000 		.4byte	.LVL2
 2333 051f 3F0E0000 		.4byte	0xe3f
 2334 0523 2D050000 		.4byte	0x52d
 2335 0527 18       		.uleb128 0x18
 2336 0528 01       		.uleb128 0x1
 2337 0529 50       		.byte	0x50
 2338 052a 01       		.uleb128 0x1
 2339 052b 30       		.byte	0x30
 2340 052c 00       		.byte	0
 2341 052d 19       		.uleb128 0x19
 2342 052e 16000000 		.4byte	.LVL3
 2343 0532 4A0E0000 		.4byte	0xe4a
 2344 0536 18       		.uleb128 0x18
 2345 0537 01       		.uleb128 0x1
 2346 0538 50       		.byte	0x50
 2347 0539 01       		.uleb128 0x1
 2348 053a 30       		.byte	0x30
 2349 053b 00       		.byte	0
 2350 053c 00       		.byte	0
 2351 053d 15       		.uleb128 0x15
 2352 053e F9000000 		.4byte	.LASF88
 2353 0542 01       		.byte	0x1
 2354 0543 8604     		.2byte	0x486
 2355 0545 00000000 		.4byte	.LFB44
 2356 0549 1C000000 		.4byte	.LFE44-.LFB44
 2357 054d 01       		.uleb128 0x1
 2358 054e 9C       		.byte	0x9c
 2359 054f 75050000 		.4byte	0x575
 2360 0553 16       		.uleb128 0x16
 2361 0554 06000000 		.4byte	.LVL4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 68


 2362 0558 550E0000 		.4byte	0xe55
 2363 055c 16       		.uleb128 0x16
 2364 055d 0A000000 		.4byte	.LVL5
 2365 0561 600E0000 		.4byte	0xe60
 2366 0565 19       		.uleb128 0x19
 2367 0566 10000000 		.4byte	.LVL6
 2368 056a 3F0E0000 		.4byte	0xe3f
 2369 056e 18       		.uleb128 0x18
 2370 056f 01       		.uleb128 0x1
 2371 0570 50       		.byte	0x50
 2372 0571 01       		.uleb128 0x1
 2373 0572 30       		.byte	0x30
 2374 0573 00       		.byte	0
 2375 0574 00       		.byte	0
 2376 0575 15       		.uleb128 0x15
 2377 0576 3C060000 		.4byte	.LASF89
 2378 057a 01       		.byte	0x1
 2379 057b A004     		.2byte	0x4a0
 2380 057d 00000000 		.4byte	.LFB45
 2381 0581 60000000 		.4byte	.LFE45-.LFB45
 2382 0585 01       		.uleb128 0x1
 2383 0586 9C       		.byte	0x9c
 2384 0587 E8050000 		.4byte	0x5e8
 2385 058b 1A       		.uleb128 0x1a
 2386 058c 6900     		.ascii	"i\000"
 2387 058e 01       		.byte	0x1
 2388 058f A204     		.2byte	0x4a2
 2389 0591 EF000000 		.4byte	0xef
 2390 0595 00000000 		.4byte	.LLST0
 2391 0599 16       		.uleb128 0x16
 2392 059a 06000000 		.4byte	.LVL7
 2393 059e 6B0E0000 		.4byte	0xe6b
 2394 05a2 16       		.uleb128 0x16
 2395 05a3 0A000000 		.4byte	.LVL8
 2396 05a7 760E0000 		.4byte	0xe76
 2397 05ab 17       		.uleb128 0x17
 2398 05ac 2A000000 		.4byte	.LVL9
 2399 05b0 810E0000 		.4byte	0xe81
 2400 05b4 CC050000 		.4byte	0x5cc
 2401 05b8 18       		.uleb128 0x18
 2402 05b9 01       		.uleb128 0x1
 2403 05ba 50       		.byte	0x50
 2404 05bb 05       		.uleb128 0x5
 2405 05bc 03       		.byte	0x3
 2406 05bd 00000000 		.4byte	txMessage
 2407 05c1 18       		.uleb128 0x18
 2408 05c2 01       		.uleb128 0x1
 2409 05c3 51       		.byte	0x51
 2410 05c4 01       		.uleb128 0x1
 2411 05c5 30       		.byte	0x30
 2412 05c6 18       		.uleb128 0x18
 2413 05c7 01       		.uleb128 0x1
 2414 05c8 52       		.byte	0x52
 2415 05c9 01       		.uleb128 0x1
 2416 05ca 4F       		.byte	0x4f
 2417 05cb 00       		.byte	0
 2418 05cc 16       		.uleb128 0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 69


 2419 05cd 32000000 		.4byte	.LVL11
 2420 05d1 8A0E0000 		.4byte	0xe8a
 2421 05d5 16       		.uleb128 0x16
 2422 05d6 40000000 		.4byte	.LVL13
 2423 05da 960E0000 		.4byte	0xe96
 2424 05de 16       		.uleb128 0x16
 2425 05df 44000000 		.4byte	.LVL14
 2426 05e3 A20E0000 		.4byte	0xea2
 2427 05e7 00       		.byte	0
 2428 05e8 15       		.uleb128 0x15
 2429 05e9 9D010000 		.4byte	.LASF90
 2430 05ed 01       		.byte	0x1
 2431 05ee 4101     		.2byte	0x141
 2432 05f0 00000000 		.4byte	.LFB32
 2433 05f4 1C000000 		.4byte	.LFE32-.LFB32
 2434 05f8 01       		.uleb128 0x1
 2435 05f9 9C       		.byte	0x9c
 2436 05fa 0F060000 		.4byte	0x60f
 2437 05fe 1B       		.uleb128 0x1b
 2438 05ff 3B0A0000 		.4byte	.LASF76
 2439 0603 01       		.byte	0x1
 2440 0604 4101     		.2byte	0x141
 2441 0606 BD010000 		.4byte	0x1bd
 2442 060a 1F000000 		.4byte	.LLST1
 2443 060e 00       		.byte	0
 2444 060f 15       		.uleb128 0x15
 2445 0610 1A010000 		.4byte	.LASF91
 2446 0614 01       		.byte	0x1
 2447 0615 5C01     		.2byte	0x15c
 2448 0617 00000000 		.4byte	.LFB33
 2449 061b 1C000000 		.4byte	.LFE33-.LFB33
 2450 061f 01       		.uleb128 0x1
 2451 0620 9C       		.byte	0x9c
 2452 0621 34060000 		.4byte	0x634
 2453 0625 1C       		.uleb128 0x1c
 2454 0626 3B0A0000 		.4byte	.LASF76
 2455 062a 01       		.byte	0x1
 2456 062b 5C01     		.2byte	0x15c
 2457 062d BD010000 		.4byte	0x1bd
 2458 0631 01       		.uleb128 0x1
 2459 0632 50       		.byte	0x50
 2460 0633 00       		.byte	0
 2461 0634 1D       		.uleb128 0x1d
 2462 0635 44000000 		.4byte	.LASF92
 2463 0639 01       		.byte	0x1
 2464 063a 7601     		.2byte	0x176
 2465 063c 00000000 		.4byte	.LFB34
 2466 0640 18000000 		.4byte	.LFE34-.LFB34
 2467 0644 01       		.uleb128 0x1
 2468 0645 9C       		.byte	0x9c
 2469 0646 69060000 		.4byte	0x669
 2470 064a 1A       		.uleb128 0x1a
 2471 064b 6300     		.ascii	"c\000"
 2472 064d 01       		.byte	0x1
 2473 064e 7901     		.2byte	0x179
 2474 0650 11010000 		.4byte	0x111
 2475 0654 40000000 		.4byte	.LLST2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 70


 2476 0658 19       		.uleb128 0x19
 2477 0659 08000000 		.4byte	.LVL19
 2478 065d AE0E0000 		.4byte	0xeae
 2479 0661 18       		.uleb128 0x18
 2480 0662 01       		.uleb128 0x1
 2481 0663 50       		.byte	0x50
 2482 0664 02       		.uleb128 0x2
 2483 0665 08       		.byte	0x8
 2484 0666 40       		.byte	0x40
 2485 0667 00       		.byte	0
 2486 0668 00       		.byte	0
 2487 0669 15       		.uleb128 0x15
 2488 066a 04040000 		.4byte	.LASF93
 2489 066e 01       		.byte	0x1
 2490 066f 5B02     		.2byte	0x25b
 2491 0671 00000000 		.4byte	.LFB36
 2492 0675 10000000 		.4byte	.LFE36-.LFB36
 2493 0679 01       		.uleb128 0x1
 2494 067a 9C       		.byte	0x9c
 2495 067b A4060000 		.4byte	0x6a4
 2496 067f 1B       		.uleb128 0x1b
 2497 0680 3D000000 		.4byte	.LASF94
 2498 0684 01       		.byte	0x1
 2499 0685 5B02     		.2byte	0x25b
 2500 0687 E4000000 		.4byte	0xe4
 2501 068b 53000000 		.4byte	.LLST3
 2502 068f 19       		.uleb128 0x19
 2503 0690 0E000000 		.4byte	.LVL23
 2504 0694 B90E0000 		.4byte	0xeb9
 2505 0698 18       		.uleb128 0x18
 2506 0699 01       		.uleb128 0x1
 2507 069a 50       		.byte	0x50
 2508 069b 06       		.uleb128 0x6
 2509 069c F3       		.byte	0xf3
 2510 069d 01       		.uleb128 0x1
 2511 069e 50       		.byte	0x50
 2512 069f 23       		.byte	0x23
 2513 06a0 A006     		.uleb128 0x320
 2514 06a2 00       		.byte	0
 2515 06a3 00       		.byte	0
 2516 06a4 1E       		.uleb128 0x1e
 2517 06a5 E2070000 		.4byte	.LASF184
 2518 06a9 01       		.byte	0x1
 2519 06aa 6C02     		.2byte	0x26c
 2520 06ac E4000000 		.4byte	0xe4
 2521 06b0 00000000 		.4byte	.LFB37
 2522 06b4 44000000 		.4byte	.LFE37-.LFB37
 2523 06b8 01       		.uleb128 0x1
 2524 06b9 9C       		.byte	0x9c
 2525 06ba EC060000 		.4byte	0x6ec
 2526 06be 1F       		.uleb128 0x1f
 2527 06bf 89070000 		.4byte	.LASF95
 2528 06c3 01       		.byte	0x1
 2529 06c4 6E02     		.2byte	0x26e
 2530 06c6 45010000 		.4byte	0x145
 2531 06ca 05       		.uleb128 0x5
 2532 06cb 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 71


 2533 06cc 08000000 		.4byte	RawPosition.7291
 2534 06d0 1F       		.uleb128 0x1f
 2535 06d1 DA010000 		.4byte	.LASF96
 2536 06d5 01       		.byte	0x1
 2537 06d6 6F02     		.2byte	0x26f
 2538 06d8 EC060000 		.4byte	0x6ec
 2539 06dc 05       		.uleb128 0x5
 2540 06dd 03       		.byte	0x3
 2541 06de 0C000000 		.4byte	result.7292
 2542 06e2 16       		.uleb128 0x16
 2543 06e3 06000000 		.4byte	.LVL24
 2544 06e7 C50E0000 		.4byte	0xec5
 2545 06eb 00       		.byte	0
 2546 06ec 06       		.uleb128 0x6
 2547 06ed E4000000 		.4byte	0xe4
 2548 06f1 15       		.uleb128 0x15
 2549 06f2 66060000 		.4byte	.LASF97
 2550 06f6 01       		.byte	0x1
 2551 06f7 8B01     		.2byte	0x18b
 2552 06f9 00000000 		.4byte	.LFB35
 2553 06fd C8020000 		.4byte	.LFE35-.LFB35
 2554 0701 01       		.uleb128 0x1
 2555 0702 9C       		.byte	0x9c
 2556 0703 CB070000 		.4byte	0x7cb
 2557 0707 20       		.uleb128 0x20
 2558 0708 36040000 		.4byte	.LASF53
 2559 070c 01       		.byte	0x1
 2560 070d 8D01     		.2byte	0x18d
 2561 070f F3010000 		.4byte	0x1f3
 2562 0713 82000000 		.4byte	.LLST4
 2563 0717 20       		.uleb128 0x20
 2564 0718 7C050000 		.4byte	.LASF52
 2565 071c 01       		.byte	0x1
 2566 071d 8E01     		.2byte	0x18e
 2567 071f C3000000 		.4byte	0xc3
 2568 0723 AC000000 		.4byte	.LLST5
 2569 0727 1A       		.uleb128 0x1a
 2570 0728 6900     		.ascii	"i\000"
 2571 072a 01       		.byte	0x1
 2572 072b 8F01     		.2byte	0x18f
 2573 072d C3000000 		.4byte	0xc3
 2574 0731 D5000000 		.4byte	.LLST6
 2575 0735 20       		.uleb128 0x20
 2576 0736 C2010000 		.4byte	.LASF51
 2577 073a 01       		.byte	0x1
 2578 073b 9001     		.2byte	0x190
 2579 073d C3000000 		.4byte	0xc3
 2580 0741 2C010000 		.4byte	.LLST7
 2581 0745 20       		.uleb128 0x20
 2582 0746 6A070000 		.4byte	.LASF98
 2583 074a 01       		.byte	0x1
 2584 074b 9101     		.2byte	0x191
 2585 074d E4000000 		.4byte	0xe4
 2586 0751 99010000 		.4byte	.LLST8
 2587 0755 16       		.uleb128 0x16
 2588 0756 6C000000 		.4byte	.LVL37
 2589 075a A4060000 		.4byte	0x6a4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 72


 2590 075e 17       		.uleb128 0x17
 2591 075f B6000000 		.4byte	.LVL38
 2592 0763 0F060000 		.4byte	0x60f
 2593 0767 71070000 		.4byte	0x771
 2594 076b 18       		.uleb128 0x18
 2595 076c 01       		.uleb128 0x1
 2596 076d 50       		.byte	0x50
 2597 076e 01       		.uleb128 0x1
 2598 076f 30       		.byte	0x30
 2599 0770 00       		.byte	0
 2600 0771 16       		.uleb128 0x16
 2601 0772 F2000000 		.4byte	.LVL42
 2602 0776 A4060000 		.4byte	0x6a4
 2603 077a 17       		.uleb128 0x17
 2604 077b 1E010000 		.4byte	.LVL44
 2605 077f 4A0E0000 		.4byte	0xe4a
 2606 0783 8D070000 		.4byte	0x78d
 2607 0787 18       		.uleb128 0x18
 2608 0788 01       		.uleb128 0x1
 2609 0789 50       		.byte	0x50
 2610 078a 01       		.uleb128 0x1
 2611 078b 30       		.byte	0x30
 2612 078c 00       		.byte	0
 2613 078d 16       		.uleb128 0x16
 2614 078e 7A010000 		.4byte	.LVL54
 2615 0792 3F0E0000 		.4byte	0xe3f
 2616 0796 16       		.uleb128 0x16
 2617 0797 98010000 		.4byte	.LVL55
 2618 079b A4060000 		.4byte	0x6a4
 2619 079f 17       		.uleb128 0x17
 2620 07a0 58020000 		.4byte	.LVL63
 2621 07a4 D00E0000 		.4byte	0xed0
 2622 07a8 BB070000 		.4byte	0x7bb
 2623 07ac 18       		.uleb128 0x18
 2624 07ad 01       		.uleb128 0x1
 2625 07ae 50       		.byte	0x50
 2626 07af 05       		.uleb128 0x5
 2627 07b0 03       		.byte	0x3
 2628 07b1 00000000 		.4byte	txMessage
 2629 07b5 18       		.uleb128 0x18
 2630 07b6 01       		.uleb128 0x1
 2631 07b7 51       		.byte	0x51
 2632 07b8 01       		.uleb128 0x1
 2633 07b9 4F       		.byte	0x4f
 2634 07ba 00       		.byte	0
 2635 07bb 19       		.uleb128 0x19
 2636 07bc 6C020000 		.4byte	.LVL64
 2637 07c0 0F060000 		.4byte	0x60f
 2638 07c4 18       		.uleb128 0x18
 2639 07c5 01       		.uleb128 0x1
 2640 07c6 50       		.byte	0x50
 2641 07c7 01       		.uleb128 0x1
 2642 07c8 30       		.byte	0x30
 2643 07c9 00       		.byte	0
 2644 07ca 00       		.byte	0
 2645 07cb 15       		.uleb128 0x15
 2646 07cc AF090000 		.4byte	.LASF99
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 73


 2647 07d0 01       		.byte	0x1
 2648 07d1 8F02     		.2byte	0x28f
 2649 07d3 00000000 		.4byte	.LFB38
 2650 07d7 30000000 		.4byte	.LFE38-.LFB38
 2651 07db 01       		.uleb128 0x1
 2652 07dc 9C       		.byte	0x9c
 2653 07dd EB070000 		.4byte	0x7eb
 2654 07e1 16       		.uleb128 0x16
 2655 07e2 06000000 		.4byte	.LVL65
 2656 07e6 A4060000 		.4byte	0x6a4
 2657 07ea 00       		.byte	0
 2658 07eb 15       		.uleb128 0x15
 2659 07ec F8030000 		.4byte	.LASF100
 2660 07f0 01       		.byte	0x1
 2661 07f1 A802     		.2byte	0x2a8
 2662 07f3 00000000 		.4byte	.LFB39
 2663 07f7 28000000 		.4byte	.LFE39-.LFB39
 2664 07fb 01       		.uleb128 0x1
 2665 07fc 9C       		.byte	0x9c
 2666 07fd 2B080000 		.4byte	0x82b
 2667 0801 1B       		.uleb128 0x1b
 2668 0802 20070000 		.4byte	.LASF101
 2669 0806 01       		.byte	0x1
 2670 0807 A802     		.2byte	0x2a8
 2671 0809 EF000000 		.4byte	0xef
 2672 080d B7010000 		.4byte	.LLST9
 2673 0811 20       		.uleb128 0x20
 2674 0812 7F000000 		.4byte	.LASF102
 2675 0816 01       		.byte	0x1
 2676 0817 AA02     		.2byte	0x2aa
 2677 0819 2B080000 		.4byte	0x82b
 2678 081d D8010000 		.4byte	.LLST10
 2679 0821 16       		.uleb128 0x16
 2680 0822 1C000000 		.4byte	.LVL68
 2681 0826 CB070000 		.4byte	0x7cb
 2682 082a 00       		.byte	0
 2683 082b 03       		.uleb128 0x3
 2684 082c 01       		.byte	0x1
 2685 082d 02       		.byte	0x2
 2686 082e 1F030000 		.4byte	.LASF103
 2687 0832 15       		.uleb128 0x15
 2688 0833 B0000000 		.4byte	.LASF104
 2689 0837 01       		.byte	0x1
 2690 0838 BE02     		.2byte	0x2be
 2691 083a 00000000 		.4byte	.LFB40
 2692 083e 64010000 		.4byte	.LFE40-.LFB40
 2693 0842 01       		.uleb128 0x1
 2694 0843 9C       		.byte	0x9c
 2695 0844 DE080000 		.4byte	0x8de
 2696 0848 17       		.uleb128 0x17
 2697 0849 22000000 		.4byte	.LVL70
 2698 084d 69060000 		.4byte	0x669
 2699 0851 5C080000 		.4byte	0x85c
 2700 0855 18       		.uleb128 0x18
 2701 0856 01       		.uleb128 0x1
 2702 0857 50       		.byte	0x50
 2703 0858 02       		.uleb128 0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 74


 2704 0859 74       		.byte	0x74
 2705 085a 00       		.sleb128 0
 2706 085b 00       		.byte	0
 2707 085c 17       		.uleb128 0x17
 2708 085d 3C000000 		.4byte	.LVL71
 2709 0861 DC0E0000 		.4byte	0xedc
 2710 0865 6F080000 		.4byte	0x86f
 2711 0869 18       		.uleb128 0x18
 2712 086a 01       		.uleb128 0x1
 2713 086b 50       		.byte	0x50
 2714 086c 01       		.uleb128 0x1
 2715 086d 36       		.byte	0x36
 2716 086e 00       		.byte	0
 2717 086f 17       		.uleb128 0x17
 2718 0870 42000000 		.4byte	.LVL72
 2719 0874 E70E0000 		.4byte	0xee7
 2720 0878 82080000 		.4byte	0x882
 2721 087c 18       		.uleb128 0x18
 2722 087d 01       		.uleb128 0x1
 2723 087e 50       		.byte	0x50
 2724 087f 01       		.uleb128 0x1
 2725 0880 36       		.byte	0x36
 2726 0881 00       		.byte	0
 2727 0882 17       		.uleb128 0x17
 2728 0883 58000000 		.4byte	.LVL73
 2729 0887 EB070000 		.4byte	0x7eb
 2730 088b 95080000 		.4byte	0x895
 2731 088f 18       		.uleb128 0x18
 2732 0890 01       		.uleb128 0x1
 2733 0891 50       		.byte	0x50
 2734 0892 01       		.uleb128 0x1
 2735 0893 31       		.byte	0x31
 2736 0894 00       		.byte	0
 2737 0895 17       		.uleb128 0x17
 2738 0896 6C000000 		.4byte	.LVL74
 2739 089a EB070000 		.4byte	0x7eb
 2740 089e A9080000 		.4byte	0x8a9
 2741 08a2 18       		.uleb128 0x18
 2742 08a3 01       		.uleb128 0x1
 2743 08a4 50       		.byte	0x50
 2744 08a5 02       		.uleb128 0x2
 2745 08a6 74       		.byte	0x74
 2746 08a7 00       		.sleb128 0
 2747 08a8 00       		.byte	0
 2748 08a9 16       		.uleb128 0x16
 2749 08aa BC000000 		.4byte	.LVL75
 2750 08ae A4060000 		.4byte	0x6a4
 2751 08b2 16       		.uleb128 0x16
 2752 08b3 CA000000 		.4byte	.LVL76
 2753 08b7 F20E0000 		.4byte	0xef2
 2754 08bb 16       		.uleb128 0x16
 2755 08bc D4000000 		.4byte	.LVL77
 2756 08c0 69060000 		.4byte	0x669
 2757 08c4 16       		.uleb128 0x16
 2758 08c5 2E010000 		.4byte	.LVL78
 2759 08c9 69060000 		.4byte	0x669
 2760 08cd 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 75


 2761 08ce 36010000 		.4byte	.LVL79
 2762 08d2 69060000 		.4byte	0x669
 2763 08d6 18       		.uleb128 0x18
 2764 08d7 01       		.uleb128 0x1
 2765 08d8 50       		.byte	0x50
 2766 08d9 02       		.uleb128 0x2
 2767 08da 74       		.byte	0x74
 2768 08db 00       		.sleb128 0
 2769 08dc 00       		.byte	0
 2770 08dd 00       		.byte	0
 2771 08de 15       		.uleb128 0x15
 2772 08df 0C040000 		.4byte	.LASF105
 2773 08e3 01       		.byte	0x1
 2774 08e4 0704     		.2byte	0x407
 2775 08e6 00000000 		.4byte	.LFB42
 2776 08ea BC000000 		.4byte	.LFE42-.LFB42
 2777 08ee 01       		.uleb128 0x1
 2778 08ef 9C       		.byte	0x9c
 2779 08f0 8F090000 		.4byte	0x98f
 2780 08f4 1F       		.uleb128 0x1f
 2781 08f5 55000000 		.4byte	.LASF106
 2782 08f9 01       		.byte	0x1
 2783 08fa 0904     		.2byte	0x409
 2784 08fc EF000000 		.4byte	0xef
 2785 0900 05       		.uleb128 0x5
 2786 0901 03       		.byte	0x3
 2787 0902 48000000 		.4byte	brmsTask.7310
 2788 0906 21       		.uleb128 0x21
 2789 0907 94000000 		.4byte	.LASF107
 2790 090b 01       		.byte	0x1
 2791 090c 0B04     		.2byte	0x40b
 2792 090e 8F090000 		.4byte	0x98f
 2793 0912 01       		.byte	0x1
 2794 0913 21       		.uleb128 0x21
 2795 0914 D6070000 		.4byte	.LASF108
 2796 0918 01       		.byte	0x1
 2797 0919 0C04     		.2byte	0x40c
 2798 091b 94090000 		.4byte	0x994
 2799 091f 02       		.byte	0x2
 2800 0920 21       		.uleb128 0x21
 2801 0921 AC070000 		.4byte	.LASF109
 2802 0925 01       		.byte	0x1
 2803 0926 0D04     		.2byte	0x40d
 2804 0928 99090000 		.4byte	0x999
 2805 092c 04       		.byte	0x4
 2806 092d 21       		.uleb128 0x21
 2807 092e 27000000 		.4byte	.LASF110
 2808 0932 01       		.byte	0x1
 2809 0933 0E04     		.2byte	0x40e
 2810 0935 9E090000 		.4byte	0x99e
 2811 0939 08       		.byte	0x8
 2812 093a 21       		.uleb128 0x21
 2813 093b 25070000 		.4byte	.LASF111
 2814 093f 01       		.byte	0x1
 2815 0940 0F04     		.2byte	0x40f
 2816 0942 EF000000 		.4byte	0xef
 2817 0946 10       		.byte	0x10
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 76


 2818 0947 17       		.uleb128 0x17
 2819 0948 08000000 		.4byte	.LVL80
 2820 094c FD0E0000 		.4byte	0xefd
 2821 0950 5A090000 		.4byte	0x95a
 2822 0954 18       		.uleb128 0x18
 2823 0955 01       		.uleb128 0x1
 2824 0956 50       		.byte	0x50
 2825 0957 01       		.uleb128 0x1
 2826 0958 32       		.byte	0x32
 2827 0959 00       		.byte	0
 2828 095a 17       		.uleb128 0x17
 2829 095b 0E000000 		.4byte	.LVL81
 2830 095f 090F0000 		.4byte	0xf09
 2831 0963 6D090000 		.4byte	0x96d
 2832 0967 18       		.uleb128 0x18
 2833 0968 01       		.uleb128 0x1
 2834 0969 50       		.byte	0x50
 2835 096a 01       		.uleb128 0x1
 2836 096b 31       		.byte	0x31
 2837 096c 00       		.byte	0
 2838 096d 16       		.uleb128 0x16
 2839 096e A2000000 		.4byte	.LVL82
 2840 0972 32080000 		.4byte	0x832
 2841 0976 16       		.uleb128 0x16
 2842 0977 B0000000 		.4byte	.LVL83
 2843 097b F1060000 		.4byte	0x6f1
 2844 097f 19       		.uleb128 0x19
 2845 0980 B6000000 		.4byte	.LVL84
 2846 0984 090F0000 		.4byte	0xf09
 2847 0988 18       		.uleb128 0x18
 2848 0989 01       		.uleb128 0x1
 2849 098a 50       		.byte	0x50
 2850 098b 01       		.uleb128 0x1
 2851 098c 30       		.byte	0x30
 2852 098d 00       		.byte	0
 2853 098e 00       		.byte	0
 2854 098f 22       		.uleb128 0x22
 2855 0990 EF000000 		.4byte	0xef
 2856 0994 22       		.uleb128 0x22
 2857 0995 EF000000 		.4byte	0xef
 2858 0999 22       		.uleb128 0x22
 2859 099a EF000000 		.4byte	0xef
 2860 099e 22       		.uleb128 0x22
 2861 099f EF000000 		.4byte	0xef
 2862 09a3 23       		.uleb128 0x23
 2863 09a4 BE090000 		.4byte	.LASF185
 2864 09a8 01       		.byte	0x1
 2865 09a9 4A03     		.2byte	0x34a
 2866 09ab AA000000 		.4byte	0xaa
 2867 09af 00000000 		.4byte	.LFB41
 2868 09b3 40010000 		.4byte	.LFE41-.LFB41
 2869 09b7 01       		.uleb128 0x1
 2870 09b8 9C       		.byte	0x9c
 2871 09b9 A00B0000 		.4byte	0xba0
 2872 09bd 17       		.uleb128 0x17
 2873 09be 08000000 		.4byte	.LVL85
 2874 09c2 DC0E0000 		.4byte	0xedc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 77


 2875 09c6 D0090000 		.4byte	0x9d0
 2876 09ca 18       		.uleb128 0x18
 2877 09cb 01       		.uleb128 0x1
 2878 09cc 50       		.byte	0x50
 2879 09cd 01       		.uleb128 0x1
 2880 09ce 31       		.byte	0x31
 2881 09cf 00       		.byte	0
 2882 09d0 17       		.uleb128 0x17
 2883 09d1 0E000000 		.4byte	.LVL86
 2884 09d5 E70E0000 		.4byte	0xee7
 2885 09d9 E3090000 		.4byte	0x9e3
 2886 09dd 18       		.uleb128 0x18
 2887 09de 01       		.uleb128 0x1
 2888 09df 50       		.byte	0x50
 2889 09e0 01       		.uleb128 0x1
 2890 09e1 31       		.byte	0x31
 2891 09e2 00       		.byte	0
 2892 09e3 16       		.uleb128 0x16
 2893 09e4 12000000 		.4byte	.LVL87
 2894 09e8 140F0000 		.4byte	0xf14
 2895 09ec 17       		.uleb128 0x17
 2896 09ed 18000000 		.4byte	.LVL88
 2897 09f1 200F0000 		.4byte	0xf20
 2898 09f5 030A0000 		.4byte	0xa03
 2899 09f9 18       		.uleb128 0x18
 2900 09fa 01       		.uleb128 0x1
 2901 09fb 50       		.byte	0x50
 2902 09fc 05       		.uleb128 0x5
 2903 09fd 03       		.byte	0x3
 2904 09fe 00000000 		.4byte	BRMS_Interrupt
 2905 0a02 00       		.byte	0
 2906 0a03 17       		.uleb128 0x17
 2907 0a04 1E000000 		.4byte	.LVL89
 2908 0a08 2B0F0000 		.4byte	0xf2b
 2909 0a0c 160A0000 		.4byte	0xa16
 2910 0a10 18       		.uleb128 0x18
 2911 0a11 01       		.uleb128 0x1
 2912 0a12 50       		.byte	0x50
 2913 0a13 01       		.uleb128 0x1
 2914 0a14 32       		.byte	0x32
 2915 0a15 00       		.byte	0
 2916 0a16 17       		.uleb128 0x17
 2917 0a17 24000000 		.4byte	.LVL90
 2918 0a1b 360F0000 		.4byte	0xf36
 2919 0a1f 2D0A0000 		.4byte	0xa2d
 2920 0a23 18       		.uleb128 0x18
 2921 0a24 01       		.uleb128 0x1
 2922 0a25 50       		.byte	0x50
 2923 0a26 05       		.uleb128 0x5
 2924 0a27 03       		.byte	0x3
 2925 0a28 00000000 		.4byte	HomeIsrHandler
 2926 0a2c 00       		.byte	0
 2927 0a2d 17       		.uleb128 0x17
 2928 0a2e 2A000000 		.4byte	.LVL91
 2929 0a32 410F0000 		.4byte	0xf41
 2930 0a36 400A0000 		.4byte	0xa40
 2931 0a3a 18       		.uleb128 0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 78


 2932 0a3b 01       		.uleb128 0x1
 2933 0a3c 50       		.byte	0x50
 2934 0a3d 01       		.uleb128 0x1
 2935 0a3e 33       		.byte	0x33
 2936 0a3f 00       		.byte	0
 2937 0a40 17       		.uleb128 0x17
 2938 0a41 30000000 		.4byte	.LVL92
 2939 0a45 4C0F0000 		.4byte	0xf4c
 2940 0a49 570A0000 		.4byte	0xa57
 2941 0a4d 18       		.uleb128 0x18
 2942 0a4e 01       		.uleb128 0x1
 2943 0a4f 50       		.byte	0x50
 2944 0a50 05       		.uleb128 0x5
 2945 0a51 03       		.byte	0x3
 2946 0a52 00000000 		.4byte	RSTIsrHandler
 2947 0a56 00       		.byte	0
 2948 0a57 17       		.uleb128 0x17
 2949 0a58 36000000 		.4byte	.LVL93
 2950 0a5c 570F0000 		.4byte	0xf57
 2951 0a60 6A0A0000 		.4byte	0xa6a
 2952 0a64 18       		.uleb128 0x18
 2953 0a65 01       		.uleb128 0x1
 2954 0a66 50       		.byte	0x50
 2955 0a67 01       		.uleb128 0x1
 2956 0a68 33       		.byte	0x33
 2957 0a69 00       		.byte	0
 2958 0a6a 17       		.uleb128 0x17
 2959 0a6b 3C000000 		.4byte	.LVL94
 2960 0a6f 620F0000 		.4byte	0xf62
 2961 0a73 810A0000 		.4byte	0xa81
 2962 0a77 18       		.uleb128 0x18
 2963 0a78 01       		.uleb128 0x1
 2964 0a79 50       		.byte	0x50
 2965 0a7a 05       		.uleb128 0x5
 2966 0a7b 03       		.byte	0x3
 2967 0a7c 00000000 		.4byte	SPI_SS_IsrHandler
 2968 0a80 00       		.byte	0
 2969 0a81 17       		.uleb128 0x17
 2970 0a82 42000000 		.4byte	.LVL95
 2971 0a86 6D0F0000 		.4byte	0xf6d
 2972 0a8a 940A0000 		.4byte	0xa94
 2973 0a8e 18       		.uleb128 0x18
 2974 0a8f 01       		.uleb128 0x1
 2975 0a90 50       		.byte	0x50
 2976 0a91 01       		.uleb128 0x1
 2977 0a92 33       		.byte	0x33
 2978 0a93 00       		.byte	0
 2979 0a94 16       		.uleb128 0x16
 2980 0a95 48000000 		.4byte	.LVL96
 2981 0a99 780F0000 		.4byte	0xf78
 2982 0a9d 17       		.uleb128 0x17
 2983 0a9e 4E000000 		.4byte	.LVL97
 2984 0aa2 830F0000 		.4byte	0xf83
 2985 0aa6 B10A0000 		.4byte	0xab1
 2986 0aaa 18       		.uleb128 0x18
 2987 0aab 01       		.uleb128 0x1
 2988 0aac 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 79


 2989 0aad 02       		.uleb128 0x2
 2990 0aae 08       		.byte	0x8
 2991 0aaf 64       		.byte	0x64
 2992 0ab0 00       		.byte	0
 2993 0ab1 16       		.uleb128 0x16
 2994 0ab2 52000000 		.4byte	.LVL98
 2995 0ab6 8E0F0000 		.4byte	0xf8e
 2996 0aba 16       		.uleb128 0x16
 2997 0abb 56000000 		.4byte	.LVL99
 2998 0abf 990F0000 		.4byte	0xf99
 2999 0ac3 17       		.uleb128 0x17
 3000 0ac4 5E000000 		.4byte	.LVL100
 3001 0ac8 A50F0000 		.4byte	0xfa5
 3002 0acc D80A0000 		.4byte	0xad8
 3003 0ad0 18       		.uleb128 0x18
 3004 0ad1 01       		.uleb128 0x1
 3005 0ad2 50       		.byte	0x50
 3006 0ad3 03       		.uleb128 0x3
 3007 0ad4 0A       		.byte	0xa
 3008 0ad5 4006     		.2byte	0x640
 3009 0ad7 00       		.byte	0
 3010 0ad8 17       		.uleb128 0x17
 3011 0ad9 64000000 		.4byte	.LVL101
 3012 0add 69060000 		.4byte	0x669
 3013 0ae1 EB0A0000 		.4byte	0xaeb
 3014 0ae5 18       		.uleb128 0x18
 3015 0ae6 01       		.uleb128 0x1
 3016 0ae7 50       		.byte	0x50
 3017 0ae8 01       		.uleb128 0x1
 3018 0ae9 30       		.byte	0x30
 3019 0aea 00       		.byte	0
 3020 0aeb 16       		.uleb128 0x16
 3021 0aec 72000000 		.4byte	.LVL102
 3022 0af0 B10F0000 		.4byte	0xfb1
 3023 0af4 17       		.uleb128 0x17
 3024 0af5 7A000000 		.4byte	.LVL103
 3025 0af9 3F0E0000 		.4byte	0xe3f
 3026 0afd 080B0000 		.4byte	0xb08
 3027 0b01 18       		.uleb128 0x18
 3028 0b02 01       		.uleb128 0x1
 3029 0b03 50       		.byte	0x50
 3030 0b04 02       		.uleb128 0x2
 3031 0b05 75       		.byte	0x75
 3032 0b06 00       		.sleb128 0
 3033 0b07 00       		.byte	0
 3034 0b08 16       		.uleb128 0x16
 3035 0b09 82000000 		.4byte	.LVL104
 3036 0b0d BC0F0000 		.4byte	0xfbc
 3037 0b11 17       		.uleb128 0x17
 3038 0b12 88000000 		.4byte	.LVL105
 3039 0b16 4A0E0000 		.4byte	0xe4a
 3040 0b1a 250B0000 		.4byte	0xb25
 3041 0b1e 18       		.uleb128 0x18
 3042 0b1f 01       		.uleb128 0x1
 3043 0b20 50       		.byte	0x50
 3044 0b21 02       		.uleb128 0x2
 3045 0b22 74       		.byte	0x74
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 80


 3046 0b23 00       		.sleb128 0
 3047 0b24 00       		.byte	0
 3048 0b25 16       		.uleb128 0x16
 3049 0b26 9A000000 		.4byte	.LVL106
 3050 0b2a CB070000 		.4byte	0x7cb
 3051 0b2e 17       		.uleb128 0x17
 3052 0b2f A0000000 		.4byte	.LVL107
 3053 0b33 EB070000 		.4byte	0x7eb
 3054 0b37 420B0000 		.4byte	0xb42
 3055 0b3b 18       		.uleb128 0x18
 3056 0b3c 01       		.uleb128 0x1
 3057 0b3d 50       		.byte	0x50
 3058 0b3e 02       		.uleb128 0x2
 3059 0b3f 74       		.byte	0x74
 3060 0b40 00       		.sleb128 0
 3061 0b41 00       		.byte	0
 3062 0b42 17       		.uleb128 0x17
 3063 0b43 CA000000 		.4byte	.LVL108
 3064 0b47 69060000 		.4byte	0x669
 3065 0b4b 560B0000 		.4byte	0xb56
 3066 0b4f 18       		.uleb128 0x18
 3067 0b50 01       		.uleb128 0x1
 3068 0b51 50       		.byte	0x50
 3069 0b52 02       		.uleb128 0x2
 3070 0b53 74       		.byte	0x74
 3071 0b54 00       		.sleb128 0
 3072 0b55 00       		.byte	0
 3073 0b56 17       		.uleb128 0x17
 3074 0b57 D0000000 		.4byte	.LVL109
 3075 0b5b C70F0000 		.4byte	0xfc7
 3076 0b5f 690B0000 		.4byte	0xb69
 3077 0b63 18       		.uleb128 0x18
 3078 0b64 01       		.uleb128 0x1
 3079 0b65 50       		.byte	0x50
 3080 0b66 01       		.uleb128 0x1
 3081 0b67 31       		.byte	0x31
 3082 0b68 00       		.byte	0
 3083 0b69 17       		.uleb128 0x17
 3084 0b6a E2000000 		.4byte	.LVL110
 3085 0b6e D20F0000 		.4byte	0xfd2
 3086 0b72 7C0B0000 		.4byte	0xb7c
 3087 0b76 18       		.uleb128 0x18
 3088 0b77 01       		.uleb128 0x1
 3089 0b78 50       		.byte	0x50
 3090 0b79 01       		.uleb128 0x1
 3091 0b7a 31       		.byte	0x31
 3092 0b7b 00       		.byte	0
 3093 0b7c 17       		.uleb128 0x17
 3094 0b7d EA000000 		.4byte	.LVL111
 3095 0b81 D20F0000 		.4byte	0xfd2
 3096 0b85 900B0000 		.4byte	0xb90
 3097 0b89 18       		.uleb128 0x18
 3098 0b8a 01       		.uleb128 0x1
 3099 0b8b 50       		.byte	0x50
 3100 0b8c 02       		.uleb128 0x2
 3101 0b8d 74       		.byte	0x74
 3102 0b8e 00       		.sleb128 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 81


 3103 0b8f 00       		.byte	0
 3104 0b90 19       		.uleb128 0x19
 3105 0b91 F0000000 		.4byte	.LVL112
 3106 0b95 830F0000 		.4byte	0xf83
 3107 0b99 18       		.uleb128 0x18
 3108 0b9a 01       		.uleb128 0x1
 3109 0b9b 50       		.byte	0x50
 3110 0b9c 01       		.uleb128 0x1
 3111 0b9d 3A       		.byte	0x3a
 3112 0b9e 00       		.byte	0
 3113 0b9f 00       		.byte	0
 3114 0ba0 24       		.uleb128 0x24
 3115 0ba1 C3090000 		.4byte	.LASF80
 3116 0ba5 05       		.byte	0x5
 3117 0ba6 0F       		.byte	0xf
 3118 0ba7 E4000000 		.4byte	0xe4
 3119 0bab 24       		.uleb128 0x24
 3120 0bac 1A050000 		.4byte	.LASF82
 3121 0bb0 05       		.byte	0x5
 3122 0bb1 10       		.byte	0x10
 3123 0bb2 E4000000 		.4byte	0xe4
 3124 0bb6 25       		.uleb128 0x25
 3125 0bb7 34030000 		.4byte	.LASF112
 3126 0bbb 01       		.byte	0x1
 3127 0bbc 5B       		.byte	0x5b
 3128 0bbd 2B080000 		.4byte	0x82b
 3129 0bc1 05       		.uleb128 0x5
 3130 0bc2 03       		.byte	0x3
 3131 0bc3 00000000 		.4byte	inAuto
 3132 0bc7 26       		.uleb128 0x26
 3133 0bc8 4A6F6700 		.ascii	"Jog\000"
 3134 0bcc 01       		.byte	0x1
 3135 0bcd 5D       		.byte	0x5d
 3136 0bce D80B0000 		.4byte	0xbd8
 3137 0bd2 05       		.uleb128 0x5
 3138 0bd3 03       		.byte	0x3
 3139 0bd4 00000000 		.4byte	Jog
 3140 0bd8 06       		.uleb128 0x6
 3141 0bd9 B8000000 		.4byte	0xb8
 3142 0bdd 25       		.uleb128 0x25
 3143 0bde 14070000 		.4byte	.LASF113
 3144 0be2 01       		.byte	0x1
 3145 0be3 5E       		.byte	0x5e
 3146 0be4 2B080000 		.4byte	0x82b
 3147 0be8 05       		.uleb128 0x5
 3148 0be9 03       		.byte	0x3
 3149 0bea 00000000 		.4byte	PID_Enabled
 3150 0bee 25       		.uleb128 0x25
 3151 0bef 04070000 		.4byte	.LASF114
 3152 0bf3 01       		.byte	0x1
 3153 0bf4 5E       		.byte	0x5e
 3154 0bf5 2B080000 		.4byte	0x82b
 3155 0bf9 05       		.uleb128 0x5
 3156 0bfa 03       		.byte	0x3
 3157 0bfb 00000000 		.4byte	PID_Was_Enabled
 3158 0bff 25       		.uleb128 0x25
 3159 0c00 18080000 		.4byte	.LASF115
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 82


 3160 0c04 01       		.byte	0x1
 3161 0c05 5F       		.byte	0x5f
 3162 0c06 E4000000 		.4byte	0xe4
 3163 0c0a 05       		.uleb128 0x5
 3164 0c0b 03       		.byte	0x3
 3165 0c0c 00000000 		.4byte	PID_Setpoint
 3166 0c10 25       		.uleb128 0x25
 3167 0c11 750A0000 		.4byte	.LASF116
 3168 0c15 01       		.byte	0x1
 3169 0c16 5F       		.byte	0x5f
 3170 0c17 E4000000 		.4byte	0xe4
 3171 0c1b 05       		.uleb128 0x5
 3172 0c1c 03       		.byte	0x3
 3173 0c1d 00000000 		.4byte	PID_EffectiveSetpoint
 3174 0c21 25       		.uleb128 0x25
 3175 0c22 F8010000 		.4byte	.LASF117
 3176 0c26 01       		.byte	0x1
 3177 0c27 60       		.byte	0x60
 3178 0c28 C3000000 		.4byte	0xc3
 3179 0c2c 05       		.uleb128 0x5
 3180 0c2d 03       		.byte	0x3
 3181 0c2e 00000000 		.4byte	PID_EffSetDelta
 3182 0c32 25       		.uleb128 0x25
 3183 0c33 08020000 		.4byte	.LASF118
 3184 0c37 01       		.byte	0x1
 3185 0c38 61       		.byte	0x61
 3186 0c39 EF000000 		.4byte	0xef
 3187 0c3d 05       		.uleb128 0x5
 3188 0c3e 03       		.byte	0x3
 3189 0c3f 00000000 		.4byte	lastTime
 3190 0c43 25       		.uleb128 0x25
 3191 0c44 CA030000 		.4byte	.LASF119
 3192 0c48 01       		.byte	0x1
 3193 0c49 63       		.byte	0x63
 3194 0c4a EC060000 		.4byte	0x6ec
 3195 0c4e 05       		.uleb128 0x5
 3196 0c4f 03       		.byte	0x3
 3197 0c50 00000000 		.4byte	Position
 3198 0c54 25       		.uleb128 0x25
 3199 0c55 FD050000 		.4byte	.LASF120
 3200 0c59 01       		.byte	0x1
 3201 0c5a 63       		.byte	0x63
 3202 0c5b EC060000 		.4byte	0x6ec
 3203 0c5f 05       		.uleb128 0x5
 3204 0c60 03       		.byte	0x3
 3205 0c61 00000000 		.4byte	LastPosition
 3206 0c65 25       		.uleb128 0x25
 3207 0c66 CB060000 		.4byte	.LASF121
 3208 0c6a 01       		.byte	0x1
 3209 0c6b 64       		.byte	0x64
 3210 0c6c EC060000 		.4byte	0x6ec
 3211 0c70 05       		.uleb128 0x5
 3212 0c71 03       		.byte	0x3
 3213 0c72 00000000 		.4byte	Output
 3214 0c76 25       		.uleb128 0x25
 3215 0c77 4E020000 		.4byte	.LASF59
 3216 0c7b 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 83


 3217 0c7c 65       		.byte	0x65
 3218 0c7d 870C0000 		.4byte	0xc87
 3219 0c81 05       		.uleb128 0x5
 3220 0c82 03       		.byte	0x3
 3221 0c83 00000000 		.4byte	limitOutput
 3222 0c87 06       		.uleb128 0x6
 3223 0c88 D9000000 		.4byte	0xd9
 3224 0c8c 25       		.uleb128 0x25
 3225 0c8d 3D040000 		.4byte	.LASF60
 3226 0c91 01       		.byte	0x1
 3227 0c92 66       		.byte	0x66
 3228 0c93 870C0000 		.4byte	0xc87
 3229 0c97 05       		.uleb128 0x5
 3230 0c98 03       		.byte	0x3
 3231 0c99 00000000 		.4byte	limitIterm
 3232 0c9d 25       		.uleb128 0x25
 3233 0c9e 24090000 		.4byte	.LASF122
 3234 0ca2 01       		.byte	0x1
 3235 0ca3 68       		.byte	0x68
 3236 0ca4 2B080000 		.4byte	0x82b
 3237 0ca8 05       		.uleb128 0x5
 3238 0ca9 03       		.byte	0x3
 3239 0caa 00000000 		.4byte	homingDone
 3240 0cae 25       		.uleb128 0x25
 3241 0caf 54070000 		.4byte	.LASF123
 3242 0cb3 01       		.byte	0x1
 3243 0cb4 73       		.byte	0x73
 3244 0cb5 EF000000 		.4byte	0xef
 3245 0cb9 05       		.uleb128 0x5
 3246 0cba 03       		.byte	0x3
 3247 0cbb 00000000 		.4byte	LastMoveStartTimeUsec
 3248 0cbf 25       		.uleb128 0x25
 3249 0cc0 2F090000 		.4byte	.LASF124
 3250 0cc4 01       		.byte	0x1
 3251 0cc5 74       		.byte	0x74
 3252 0cc6 EF000000 		.4byte	0xef
 3253 0cca 05       		.uleb128 0x5
 3254 0ccb 03       		.byte	0x3
 3255 0ccc 00000000 		.4byte	LastMoveEndTimeUsec
 3256 0cd0 25       		.uleb128 0x25
 3257 0cd1 2F010000 		.4byte	.LASF125
 3258 0cd5 01       		.byte	0x1
 3259 0cd6 77       		.byte	0x77
 3260 0cd7 D9000000 		.4byte	0xd9
 3261 0cdb 05       		.uleb128 0x5
 3262 0cdc 03       		.byte	0x3
 3263 0cdd 00000000 		.4byte	LastMoveStableCount
 3264 0ce1 25       		.uleb128 0x25
 3265 0ce2 CA040000 		.4byte	.LASF126
 3266 0ce6 01       		.byte	0x1
 3267 0ce7 7A       		.byte	0x7a
 3268 0ce8 EF000000 		.4byte	0xef
 3269 0cec 05       		.uleb128 0x5
 3270 0ced 03       		.byte	0x3
 3271 0cee 00000000 		.4byte	LastMoveTimeUsec
 3272 0cf2 25       		.uleb128 0x25
 3273 0cf3 2B060000 		.4byte	.LASF127
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 84


 3274 0cf7 01       		.byte	0x1
 3275 0cf8 7D       		.byte	0x7d
 3276 0cf9 2B080000 		.4byte	0x82b
 3277 0cfd 05       		.uleb128 0x5
 3278 0cfe 03       		.byte	0x3
 3279 0cff 00000000 		.4byte	NewCommandedMove
 3280 0d03 25       		.uleb128 0x25
 3281 0d04 70080000 		.4byte	.LASF128
 3282 0d08 01       		.byte	0x1
 3283 0d09 82       		.byte	0x82
 3284 0d0a 140D0000 		.4byte	0xd14
 3285 0d0e 05       		.uleb128 0x5
 3286 0d0f 03       		.byte	0x3
 3287 0d10 00000000 		.4byte	UptimeMicroseconds
 3288 0d14 06       		.uleb128 0x6
 3289 0d15 FA000000 		.4byte	0xfa
 3290 0d19 25       		.uleb128 0x25
 3291 0d1a E6090000 		.4byte	.LASF129
 3292 0d1e 01       		.byte	0x1
 3293 0d1f 83       		.byte	0x83
 3294 0d20 140D0000 		.4byte	0xd14
 3295 0d24 05       		.uleb128 0x5
 3296 0d25 03       		.byte	0x3
 3297 0d26 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3298 0d2a 25       		.uleb128 0x25
 3299 0d2b 72030000 		.4byte	.LASF130
 3300 0d2f 01       		.byte	0x1
 3301 0d30 84       		.byte	0x84
 3302 0d31 140D0000 		.4byte	0xd14
 3303 0d35 05       		.uleb128 0x5
 3304 0d36 03       		.byte	0x3
 3305 0d37 00000000 		.4byte	UptimeMilliseconds
 3306 0d3b 25       		.uleb128 0x25
 3307 0d3c 4E050000 		.4byte	.LASF131
 3308 0d40 01       		.byte	0x1
 3309 0d41 85       		.byte	0x85
 3310 0d42 140D0000 		.4byte	0xd14
 3311 0d46 05       		.uleb128 0x5
 3312 0d47 03       		.byte	0x3
 3313 0d48 00000000 		.4byte	UptimeMillisecondsAccumulator
 3314 0d4c 25       		.uleb128 0x25
 3315 0d4d EE070000 		.4byte	.LASF132
 3316 0d51 01       		.byte	0x1
 3317 0d52 86       		.byte	0x86
 3318 0d53 140D0000 		.4byte	0xd14
 3319 0d57 05       		.uleb128 0x5
 3320 0d58 03       		.byte	0x3
 3321 0d59 00000000 		.4byte	UptimeSeconds
 3322 0d5d 25       		.uleb128 0x25
 3323 0d5e 42020000 		.4byte	.LASF133
 3324 0d62 01       		.byte	0x1
 3325 0d63 B2       		.byte	0xb2
 3326 0d64 6E0D0000 		.4byte	0xd6e
 3327 0d68 05       		.uleb128 0x5
 3328 0d69 03       		.byte	0x3
 3329 0d6a 00000000 		.4byte	ConfigState
 3330 0d6e 06       		.uleb128 0x6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 85


 3331 0d6f 6F010000 		.4byte	0x16f
 3332 0d73 25       		.uleb128 0x25
 3333 0d74 E4080000 		.4byte	.LASF134
 3334 0d78 01       		.byte	0x1
 3335 0d79 B3       		.byte	0xb3
 3336 0d7a 840D0000 		.4byte	0xd84
 3337 0d7e 05       		.uleb128 0x5
 3338 0d7f 03       		.byte	0x3
 3339 0d80 00000000 		.4byte	FaultState
 3340 0d84 06       		.uleb128 0x6
 3341 0d85 C3000000 		.4byte	0xc3
 3342 0d89 25       		.uleb128 0x25
 3343 0d8a 15090000 		.4byte	.LASF135
 3344 0d8e 01       		.byte	0x1
 3345 0d8f B4       		.byte	0xb4
 3346 0d90 840D0000 		.4byte	0xd84
 3347 0d94 05       		.uleb128 0x5
 3348 0d95 03       		.byte	0x3
 3349 0d96 00000000 		.4byte	ConfigSequence
 3350 0d9a 25       		.uleb128 0x25
 3351 0d9b 3E080000 		.4byte	.LASF136
 3352 0d9f 01       		.byte	0x1
 3353 0da0 B5       		.byte	0xb5
 3354 0da1 870C0000 		.4byte	0xc87
 3355 0da5 05       		.uleb128 0x5
 3356 0da6 03       		.byte	0x3
 3357 0da7 00000000 		.4byte	ChecksumErrors
 3358 0dab 25       		.uleb128 0x25
 3359 0dac 11020000 		.4byte	.LASF137
 3360 0db0 01       		.byte	0x1
 3361 0db1 B6       		.byte	0xb6
 3362 0db2 BC0D0000 		.4byte	0xdbc
 3363 0db6 05       		.uleb128 0x5
 3364 0db7 03       		.byte	0x3
 3365 0db8 00000000 		.4byte	MotorCurrent
 3366 0dbc 06       		.uleb128 0x6
 3367 0dbd CE000000 		.4byte	0xce
 3368 0dc1 0F       		.uleb128 0xf
 3369 0dc2 C3000000 		.4byte	0xc3
 3370 0dc6 D10D0000 		.4byte	0xdd1
 3371 0dca 10       		.uleb128 0x10
 3372 0dcb 3E010000 		.4byte	0x13e
 3373 0dcf 13       		.byte	0x13
 3374 0dd0 00       		.byte	0
 3375 0dd1 25       		.uleb128 0x25
 3376 0dd2 D5050000 		.4byte	.LASF138
 3377 0dd6 01       		.byte	0x1
 3378 0dd7 B7       		.byte	0xb7
 3379 0dd8 C10D0000 		.4byte	0xdc1
 3380 0ddc 05       		.uleb128 0x5
 3381 0ddd 03       		.byte	0x3
 3382 0dde 00000000 		.4byte	CurrentI2Cinbuf
 3383 0de2 25       		.uleb128 0x25
 3384 0de3 95070000 		.4byte	.LASF139
 3385 0de7 01       		.byte	0x1
 3386 0de8 C9       		.byte	0xc9
 3387 0de9 EF000000 		.4byte	0xef
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 86


 3388 0ded 05       		.uleb128 0x5
 3389 0dee 03       		.byte	0x3
 3390 0def 00000000 		.4byte	LastMessageTimeSeconds
 3391 0df3 27       		.uleb128 0x27
 3392 0df4 08000000 		.4byte	.LASF140
 3393 0df8 01       		.byte	0x1
 3394 0df9 0801     		.2byte	0x108
 3395 0dfb 6E030000 		.4byte	0x36e
 3396 0dff 05       		.uleb128 0x5
 3397 0e00 03       		.byte	0x3
 3398 0e01 00000000 		.4byte	rxMessage
 3399 0e05 27       		.uleb128 0x27
 3400 0e06 0A060000 		.4byte	.LASF141
 3401 0e0a 01       		.byte	0x1
 3402 0e0b 2201     		.2byte	0x122
 3403 0e0d AA040000 		.4byte	0x4aa
 3404 0e11 05       		.uleb128 0x5
 3405 0e12 03       		.byte	0x3
 3406 0e13 00000000 		.4byte	txMessage
 3407 0e17 27       		.uleb128 0x27
 3408 0e18 660A0000 		.4byte	.LASF142
 3409 0e1c 01       		.byte	0x1
 3410 0e1d 2A01     		.2byte	0x12a
 3411 0e1f E6040000 		.4byte	0x4e6
 3412 0e23 05       		.uleb128 0x5
 3413 0e24 03       		.byte	0x3
 3414 0e25 00000000 		.4byte	txMessageState
 3415 0e29 28       		.uleb128 0x28
 3416 0e2a 96040000 		.4byte	.LASF143
 3417 0e2e 96040000 		.4byte	.LASF143
 3418 0e32 06       		.byte	0x6
 3419 0e33 28       		.byte	0x28
 3420 0e34 28       		.uleb128 0x28
 3421 0e35 43090000 		.4byte	.LASF144
 3422 0e39 43090000 		.4byte	.LASF144
 3423 0e3d 07       		.byte	0x7
 3424 0e3e 39       		.byte	0x39
 3425 0e3f 28       		.uleb128 0x28
 3426 0e40 14060000 		.4byte	.LASF145
 3427 0e44 14060000 		.4byte	.LASF145
 3428 0e48 08       		.byte	0x8
 3429 0e49 5A       		.byte	0x5a
 3430 0e4a 28       		.uleb128 0x28
 3431 0e4b 5F040000 		.4byte	.LASF146
 3432 0e4f 5F040000 		.4byte	.LASF146
 3433 0e53 09       		.byte	0x9
 3434 0e54 5A       		.byte	0x5a
 3435 0e55 28       		.uleb128 0x28
 3436 0e56 250A0000 		.4byte	.LASF147
 3437 0e5a 250A0000 		.4byte	.LASF147
 3438 0e5e 0A       		.byte	0xa
 3439 0e5f 28       		.byte	0x28
 3440 0e60 28       		.uleb128 0x28
 3441 0e61 D8000000 		.4byte	.LASF148
 3442 0e65 D8000000 		.4byte	.LASF148
 3443 0e69 0B       		.byte	0xb
 3444 0e6a 39       		.byte	0x39
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 87


 3445 0e6b 28       		.uleb128 0x28
 3446 0e6c 5C030000 		.4byte	.LASF149
 3447 0e70 5C030000 		.4byte	.LASF149
 3448 0e74 0C       		.byte	0xc
 3449 0e75 39       		.byte	0x39
 3450 0e76 28       		.uleb128 0x28
 3451 0e77 0E050000 		.4byte	.LASF150
 3452 0e7b 0E050000 		.4byte	.LASF150
 3453 0e7f 0C       		.byte	0xc
 3454 0e80 32       		.byte	0x32
 3455 0e81 29       		.uleb128 0x29
 3456 0e82 47050000 		.4byte	.LASF186
 3457 0e86 47050000 		.4byte	.LASF186
 3458 0e8a 2A       		.uleb128 0x2a
 3459 0e8b E5050000 		.4byte	.LASF151
 3460 0e8f E5050000 		.4byte	.LASF151
 3461 0e93 0D       		.byte	0xd
 3462 0e94 3D03     		.2byte	0x33d
 3463 0e96 2A       		.uleb128 0x2a
 3464 0e97 1B040000 		.4byte	.LASF152
 3465 0e9b 1B040000 		.4byte	.LASF152
 3466 0e9f 0D       		.byte	0xd
 3467 0ea0 3F03     		.2byte	0x33f
 3468 0ea2 2A       		.uleb128 0x2a
 3469 0ea3 4B010000 		.4byte	.LASF153
 3470 0ea7 4B010000 		.4byte	.LASF153
 3471 0eab 0D       		.byte	0xd
 3472 0eac 4703     		.2byte	0x347
 3473 0eae 28       		.uleb128 0x28
 3474 0eaf 99060000 		.4byte	.LASF154
 3475 0eb3 99060000 		.4byte	.LASF154
 3476 0eb7 0E       		.byte	0xe
 3477 0eb8 70       		.byte	0x70
 3478 0eb9 2A       		.uleb128 0x2a
 3479 0eba 7C040000 		.4byte	.LASF155
 3480 0ebe 7C040000 		.4byte	.LASF155
 3481 0ec2 0F       		.byte	0xf
 3482 0ec3 5501     		.2byte	0x155
 3483 0ec5 28       		.uleb128 0x28
 3484 0ec6 85030000 		.4byte	.LASF156
 3485 0eca 85030000 		.4byte	.LASF156
 3486 0ece 08       		.byte	0x8
 3487 0ecf 5D       		.byte	0x5d
 3488 0ed0 2A       		.uleb128 0x2a
 3489 0ed1 46030000 		.4byte	.LASF157
 3490 0ed5 46030000 		.4byte	.LASF157
 3491 0ed9 0D       		.byte	0xd
 3492 0eda 4503     		.2byte	0x345
 3493 0edc 28       		.uleb128 0x28
 3494 0edd 73070000 		.4byte	.LASF158
 3495 0ee1 73070000 		.4byte	.LASF158
 3496 0ee5 10       		.byte	0x10
 3497 0ee6 36       		.byte	0x36
 3498 0ee7 28       		.uleb128 0x28
 3499 0ee8 30050000 		.4byte	.LASF159
 3500 0eec 30050000 		.4byte	.LASF159
 3501 0ef0 11       		.byte	0x11
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 88


 3502 0ef1 36       		.byte	0x36
 3503 0ef2 28       		.uleb128 0x28
 3504 0ef3 E7030000 		.4byte	.LASF160
 3505 0ef7 E7030000 		.4byte	.LASF160
 3506 0efb 05       		.byte	0x5
 3507 0efc 11       		.byte	0x11
 3508 0efd 2A       		.uleb128 0x2a
 3509 0efe E9040000 		.4byte	.LASF161
 3510 0f02 E9040000 		.4byte	.LASF161
 3511 0f06 12       		.byte	0x12
 3512 0f07 4701     		.2byte	0x147
 3513 0f09 28       		.uleb128 0x28
 3514 0f0a 73090000 		.4byte	.LASF162
 3515 0f0e 73090000 		.4byte	.LASF162
 3516 0f12 13       		.byte	0x13
 3517 0f13 33       		.byte	0x33
 3518 0f14 2A       		.uleb128 0x2a
 3519 0f15 0E030000 		.4byte	.LASF163
 3520 0f19 0E030000 		.4byte	.LASF163
 3521 0f1d 12       		.byte	0x12
 3522 0f1e 3201     		.2byte	0x132
 3523 0f20 28       		.uleb128 0x28
 3524 0f21 FD020000 		.4byte	.LASF164
 3525 0f25 FD020000 		.4byte	.LASF164
 3526 0f29 14       		.byte	0x14
 3527 0f2a 18       		.byte	0x18
 3528 0f2b 28       		.uleb128 0x28
 3529 0f2c 78060000 		.4byte	.LASF165
 3530 0f30 78060000 		.4byte	.LASF165
 3531 0f34 14       		.byte	0x14
 3532 0f35 20       		.byte	0x20
 3533 0f36 28       		.uleb128 0x28
 3534 0f37 7F090000 		.4byte	.LASF166
 3535 0f3b 7F090000 		.4byte	.LASF166
 3536 0f3f 0A       		.byte	0xa
 3537 0f40 18       		.byte	0x18
 3538 0f41 28       		.uleb128 0x28
 3539 0f42 E8020000 		.4byte	.LASF167
 3540 0f46 E8020000 		.4byte	.LASF167
 3541 0f4a 0A       		.byte	0xa
 3542 0f4b 20       		.byte	0x20
 3543 0f4c 28       		.uleb128 0x28
 3544 0f4d 0D0A0000 		.4byte	.LASF168
 3545 0f51 0D0A0000 		.4byte	.LASF168
 3546 0f55 06       		.byte	0x6
 3547 0f56 18       		.byte	0x18
 3548 0f57 28       		.uleb128 0x28
 3549 0f58 FC070000 		.4byte	.LASF169
 3550 0f5c FC070000 		.4byte	.LASF169
 3551 0f60 06       		.byte	0x6
 3552 0f61 20       		.byte	0x20
 3553 0f62 28       		.uleb128 0x28
 3554 0f63 AF010000 		.4byte	.LASF170
 3555 0f67 AF010000 		.4byte	.LASF170
 3556 0f6b 15       		.byte	0x15
 3557 0f6c 18       		.byte	0x18
 3558 0f6d 28       		.uleb128 0x28
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 89


 3559 0f6e B3040000 		.4byte	.LASF171
 3560 0f72 B3040000 		.4byte	.LASF171
 3561 0f76 15       		.byte	0x15
 3562 0f77 20       		.byte	0x20
 3563 0f78 28       		.uleb128 0x28
 3564 0f79 25010000 		.4byte	.LASF172
 3565 0f7d 25010000 		.4byte	.LASF172
 3566 0f81 16       		.byte	0x16
 3567 0f82 72       		.byte	0x72
 3568 0f83 28       		.uleb128 0x28
 3569 0f84 00000000 		.4byte	.LASF173
 3570 0f88 00000000 		.4byte	.LASF173
 3571 0f8c 17       		.byte	0x17
 3572 0f8d EC       		.byte	0xec
 3573 0f8e 28       		.uleb128 0x28
 3574 0f8f AA080000 		.4byte	.LASF174
 3575 0f93 AA080000 		.4byte	.LASF174
 3576 0f97 18       		.byte	0x18
 3577 0f98 72       		.byte	0x72
 3578 0f99 2A       		.uleb128 0x2a
 3579 0f9a 48070000 		.4byte	.LASF175
 3580 0f9e 48070000 		.4byte	.LASF175
 3581 0fa2 0F       		.byte	0xf
 3582 0fa3 3201     		.2byte	0x132
 3583 0fa5 2A       		.uleb128 0x2a
 3584 0fa6 30020000 		.4byte	.LASF176
 3585 0faa 30020000 		.4byte	.LASF176
 3586 0fae 0F       		.byte	0xf
 3587 0faf 5001     		.2byte	0x150
 3588 0fb1 28       		.uleb128 0x28
 3589 0fb2 A0000000 		.4byte	.LASF177
 3590 0fb6 A0000000 		.4byte	.LASF177
 3591 0fba 08       		.byte	0x8
 3592 0fbb 4F       		.byte	0x4f
 3593 0fbc 28       		.uleb128 0x28
 3594 0fbd D0090000 		.4byte	.LASF178
 3595 0fc1 D0090000 		.4byte	.LASF178
 3596 0fc5 09       		.byte	0x9
 3597 0fc6 4F       		.byte	0x4f
 3598 0fc7 28       		.uleb128 0x28
 3599 0fc8 EF080000 		.4byte	.LASF179
 3600 0fcc EF080000 		.4byte	.LASF179
 3601 0fd0 19       		.byte	0x19
 3602 0fd1 2F       		.byte	0x2f
 3603 0fd2 28       		.uleb128 0x28
 3604 0fd3 EF000000 		.4byte	.LASF180
 3605 0fd7 EF000000 		.4byte	.LASF180
 3606 0fdb 1A       		.byte	0x1a
 3607 0fdc 33       		.byte	0x33
 3608 0fdd 00       		.byte	0
 3609              		.section	.debug_abbrev,"",%progbits
 3610              	.Ldebug_abbrev0:
 3611 0000 01       		.uleb128 0x1
 3612 0001 11       		.uleb128 0x11
 3613 0002 01       		.byte	0x1
 3614 0003 25       		.uleb128 0x25
 3615 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 90


 3616 0005 13       		.uleb128 0x13
 3617 0006 0B       		.uleb128 0xb
 3618 0007 03       		.uleb128 0x3
 3619 0008 0E       		.uleb128 0xe
 3620 0009 1B       		.uleb128 0x1b
 3621 000a 0E       		.uleb128 0xe
 3622 000b 55       		.uleb128 0x55
 3623 000c 17       		.uleb128 0x17
 3624 000d 11       		.uleb128 0x11
 3625 000e 01       		.uleb128 0x1
 3626 000f 10       		.uleb128 0x10
 3627 0010 17       		.uleb128 0x17
 3628 0011 00       		.byte	0
 3629 0012 00       		.byte	0
 3630 0013 02       		.uleb128 0x2
 3631 0014 16       		.uleb128 0x16
 3632 0015 00       		.byte	0
 3633 0016 03       		.uleb128 0x3
 3634 0017 0E       		.uleb128 0xe
 3635 0018 3A       		.uleb128 0x3a
 3636 0019 0B       		.uleb128 0xb
 3637 001a 3B       		.uleb128 0x3b
 3638 001b 0B       		.uleb128 0xb
 3639 001c 49       		.uleb128 0x49
 3640 001d 13       		.uleb128 0x13
 3641 001e 00       		.byte	0
 3642 001f 00       		.byte	0
 3643 0020 03       		.uleb128 0x3
 3644 0021 24       		.uleb128 0x24
 3645 0022 00       		.byte	0
 3646 0023 0B       		.uleb128 0xb
 3647 0024 0B       		.uleb128 0xb
 3648 0025 3E       		.uleb128 0x3e
 3649 0026 0B       		.uleb128 0xb
 3650 0027 03       		.uleb128 0x3
 3651 0028 0E       		.uleb128 0xe
 3652 0029 00       		.byte	0
 3653 002a 00       		.byte	0
 3654 002b 04       		.uleb128 0x4
 3655 002c 24       		.uleb128 0x24
 3656 002d 00       		.byte	0
 3657 002e 0B       		.uleb128 0xb
 3658 002f 0B       		.uleb128 0xb
 3659 0030 3E       		.uleb128 0x3e
 3660 0031 0B       		.uleb128 0xb
 3661 0032 03       		.uleb128 0x3
 3662 0033 08       		.uleb128 0x8
 3663 0034 00       		.byte	0
 3664 0035 00       		.byte	0
 3665 0036 05       		.uleb128 0x5
 3666 0037 16       		.uleb128 0x16
 3667 0038 00       		.byte	0
 3668 0039 03       		.uleb128 0x3
 3669 003a 0E       		.uleb128 0xe
 3670 003b 3A       		.uleb128 0x3a
 3671 003c 0B       		.uleb128 0xb
 3672 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 91


 3673 003e 05       		.uleb128 0x5
 3674 003f 49       		.uleb128 0x49
 3675 0040 13       		.uleb128 0x13
 3676 0041 00       		.byte	0
 3677 0042 00       		.byte	0
 3678 0043 06       		.uleb128 0x6
 3679 0044 35       		.uleb128 0x35
 3680 0045 00       		.byte	0
 3681 0046 49       		.uleb128 0x49
 3682 0047 13       		.uleb128 0x13
 3683 0048 00       		.byte	0
 3684 0049 00       		.byte	0
 3685 004a 07       		.uleb128 0x7
 3686 004b 04       		.uleb128 0x4
 3687 004c 01       		.byte	0x1
 3688 004d 0B       		.uleb128 0xb
 3689 004e 0B       		.uleb128 0xb
 3690 004f 49       		.uleb128 0x49
 3691 0050 13       		.uleb128 0x13
 3692 0051 3A       		.uleb128 0x3a
 3693 0052 0B       		.uleb128 0xb
 3694 0053 3B       		.uleb128 0x3b
 3695 0054 0B       		.uleb128 0xb
 3696 0055 01       		.uleb128 0x1
 3697 0056 13       		.uleb128 0x13
 3698 0057 00       		.byte	0
 3699 0058 00       		.byte	0
 3700 0059 08       		.uleb128 0x8
 3701 005a 28       		.uleb128 0x28
 3702 005b 00       		.byte	0
 3703 005c 03       		.uleb128 0x3
 3704 005d 0E       		.uleb128 0xe
 3705 005e 1C       		.uleb128 0x1c
 3706 005f 0B       		.uleb128 0xb
 3707 0060 00       		.byte	0
 3708 0061 00       		.byte	0
 3709 0062 09       		.uleb128 0x9
 3710 0063 13       		.uleb128 0x13
 3711 0064 01       		.byte	0x1
 3712 0065 0B       		.uleb128 0xb
 3713 0066 0B       		.uleb128 0xb
 3714 0067 3A       		.uleb128 0x3a
 3715 0068 0B       		.uleb128 0xb
 3716 0069 3B       		.uleb128 0x3b
 3717 006a 0B       		.uleb128 0xb
 3718 006b 01       		.uleb128 0x1
 3719 006c 13       		.uleb128 0x13
 3720 006d 00       		.byte	0
 3721 006e 00       		.byte	0
 3722 006f 0A       		.uleb128 0xa
 3723 0070 0D       		.uleb128 0xd
 3724 0071 00       		.byte	0
 3725 0072 03       		.uleb128 0x3
 3726 0073 0E       		.uleb128 0xe
 3727 0074 3A       		.uleb128 0x3a
 3728 0075 0B       		.uleb128 0xb
 3729 0076 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 92


 3730 0077 0B       		.uleb128 0xb
 3731 0078 49       		.uleb128 0x49
 3732 0079 13       		.uleb128 0x13
 3733 007a 38       		.uleb128 0x38
 3734 007b 0B       		.uleb128 0xb
 3735 007c 00       		.byte	0
 3736 007d 00       		.byte	0
 3737 007e 0B       		.uleb128 0xb
 3738 007f 0D       		.uleb128 0xd
 3739 0080 00       		.byte	0
 3740 0081 03       		.uleb128 0x3
 3741 0082 08       		.uleb128 0x8
 3742 0083 3A       		.uleb128 0x3a
 3743 0084 0B       		.uleb128 0xb
 3744 0085 3B       		.uleb128 0x3b
 3745 0086 0B       		.uleb128 0xb
 3746 0087 49       		.uleb128 0x49
 3747 0088 13       		.uleb128 0x13
 3748 0089 38       		.uleb128 0x38
 3749 008a 0B       		.uleb128 0xb
 3750 008b 00       		.byte	0
 3751 008c 00       		.byte	0
 3752 008d 0C       		.uleb128 0xc
 3753 008e 17       		.uleb128 0x17
 3754 008f 01       		.byte	0x1
 3755 0090 0B       		.uleb128 0xb
 3756 0091 0B       		.uleb128 0xb
 3757 0092 3A       		.uleb128 0x3a
 3758 0093 0B       		.uleb128 0xb
 3759 0094 3B       		.uleb128 0x3b
 3760 0095 05       		.uleb128 0x5
 3761 0096 01       		.uleb128 0x1
 3762 0097 13       		.uleb128 0x13
 3763 0098 00       		.byte	0
 3764 0099 00       		.byte	0
 3765 009a 0D       		.uleb128 0xd
 3766 009b 0D       		.uleb128 0xd
 3767 009c 00       		.byte	0
 3768 009d 03       		.uleb128 0x3
 3769 009e 08       		.uleb128 0x8
 3770 009f 3A       		.uleb128 0x3a
 3771 00a0 0B       		.uleb128 0xb
 3772 00a1 3B       		.uleb128 0x3b
 3773 00a2 05       		.uleb128 0x5
 3774 00a3 49       		.uleb128 0x49
 3775 00a4 13       		.uleb128 0x13
 3776 00a5 00       		.byte	0
 3777 00a6 00       		.byte	0
 3778 00a7 0E       		.uleb128 0xe
 3779 00a8 0D       		.uleb128 0xd
 3780 00a9 00       		.byte	0
 3781 00aa 03       		.uleb128 0x3
 3782 00ab 0E       		.uleb128 0xe
 3783 00ac 3A       		.uleb128 0x3a
 3784 00ad 0B       		.uleb128 0xb
 3785 00ae 3B       		.uleb128 0x3b
 3786 00af 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 93


 3787 00b0 49       		.uleb128 0x49
 3788 00b1 13       		.uleb128 0x13
 3789 00b2 00       		.byte	0
 3790 00b3 00       		.byte	0
 3791 00b4 0F       		.uleb128 0xf
 3792 00b5 01       		.uleb128 0x1
 3793 00b6 01       		.byte	0x1
 3794 00b7 49       		.uleb128 0x49
 3795 00b8 13       		.uleb128 0x13
 3796 00b9 01       		.uleb128 0x1
 3797 00ba 13       		.uleb128 0x13
 3798 00bb 00       		.byte	0
 3799 00bc 00       		.byte	0
 3800 00bd 10       		.uleb128 0x10
 3801 00be 21       		.uleb128 0x21
 3802 00bf 00       		.byte	0
 3803 00c0 49       		.uleb128 0x49
 3804 00c1 13       		.uleb128 0x13
 3805 00c2 2F       		.uleb128 0x2f
 3806 00c3 0B       		.uleb128 0xb
 3807 00c4 00       		.byte	0
 3808 00c5 00       		.byte	0
 3809 00c6 11       		.uleb128 0x11
 3810 00c7 13       		.uleb128 0x13
 3811 00c8 01       		.byte	0x1
 3812 00c9 0B       		.uleb128 0xb
 3813 00ca 0B       		.uleb128 0xb
 3814 00cb 3A       		.uleb128 0x3a
 3815 00cc 0B       		.uleb128 0xb
 3816 00cd 3B       		.uleb128 0x3b
 3817 00ce 05       		.uleb128 0x5
 3818 00cf 01       		.uleb128 0x1
 3819 00d0 13       		.uleb128 0x13
 3820 00d1 00       		.byte	0
 3821 00d2 00       		.byte	0
 3822 00d3 12       		.uleb128 0x12
 3823 00d4 0D       		.uleb128 0xd
 3824 00d5 00       		.byte	0
 3825 00d6 03       		.uleb128 0x3
 3826 00d7 0E       		.uleb128 0xe
 3827 00d8 3A       		.uleb128 0x3a
 3828 00d9 0B       		.uleb128 0xb
 3829 00da 3B       		.uleb128 0x3b
 3830 00db 05       		.uleb128 0x5
 3831 00dc 49       		.uleb128 0x49
 3832 00dd 13       		.uleb128 0x13
 3833 00de 38       		.uleb128 0x38
 3834 00df 0B       		.uleb128 0xb
 3835 00e0 00       		.byte	0
 3836 00e1 00       		.byte	0
 3837 00e2 13       		.uleb128 0x13
 3838 00e3 0D       		.uleb128 0xd
 3839 00e4 00       		.byte	0
 3840 00e5 03       		.uleb128 0x3
 3841 00e6 08       		.uleb128 0x8
 3842 00e7 3A       		.uleb128 0x3a
 3843 00e8 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 94


 3844 00e9 3B       		.uleb128 0x3b
 3845 00ea 05       		.uleb128 0x5
 3846 00eb 49       		.uleb128 0x49
 3847 00ec 13       		.uleb128 0x13
 3848 00ed 38       		.uleb128 0x38
 3849 00ee 0B       		.uleb128 0xb
 3850 00ef 00       		.byte	0
 3851 00f0 00       		.byte	0
 3852 00f1 14       		.uleb128 0x14
 3853 00f2 04       		.uleb128 0x4
 3854 00f3 01       		.byte	0x1
 3855 00f4 0B       		.uleb128 0xb
 3856 00f5 0B       		.uleb128 0xb
 3857 00f6 49       		.uleb128 0x49
 3858 00f7 13       		.uleb128 0x13
 3859 00f8 3A       		.uleb128 0x3a
 3860 00f9 0B       		.uleb128 0xb
 3861 00fa 3B       		.uleb128 0x3b
 3862 00fb 05       		.uleb128 0x5
 3863 00fc 01       		.uleb128 0x1
 3864 00fd 13       		.uleb128 0x13
 3865 00fe 00       		.byte	0
 3866 00ff 00       		.byte	0
 3867 0100 15       		.uleb128 0x15
 3868 0101 2E       		.uleb128 0x2e
 3869 0102 01       		.byte	0x1
 3870 0103 3F       		.uleb128 0x3f
 3871 0104 19       		.uleb128 0x19
 3872 0105 03       		.uleb128 0x3
 3873 0106 0E       		.uleb128 0xe
 3874 0107 3A       		.uleb128 0x3a
 3875 0108 0B       		.uleb128 0xb
 3876 0109 3B       		.uleb128 0x3b
 3877 010a 05       		.uleb128 0x5
 3878 010b 27       		.uleb128 0x27
 3879 010c 19       		.uleb128 0x19
 3880 010d 11       		.uleb128 0x11
 3881 010e 01       		.uleb128 0x1
 3882 010f 12       		.uleb128 0x12
 3883 0110 06       		.uleb128 0x6
 3884 0111 40       		.uleb128 0x40
 3885 0112 18       		.uleb128 0x18
 3886 0113 9742     		.uleb128 0x2117
 3887 0115 19       		.uleb128 0x19
 3888 0116 01       		.uleb128 0x1
 3889 0117 13       		.uleb128 0x13
 3890 0118 00       		.byte	0
 3891 0119 00       		.byte	0
 3892 011a 16       		.uleb128 0x16
 3893 011b 898201   		.uleb128 0x4109
 3894 011e 00       		.byte	0
 3895 011f 11       		.uleb128 0x11
 3896 0120 01       		.uleb128 0x1
 3897 0121 31       		.uleb128 0x31
 3898 0122 13       		.uleb128 0x13
 3899 0123 00       		.byte	0
 3900 0124 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 95


 3901 0125 17       		.uleb128 0x17
 3902 0126 898201   		.uleb128 0x4109
 3903 0129 01       		.byte	0x1
 3904 012a 11       		.uleb128 0x11
 3905 012b 01       		.uleb128 0x1
 3906 012c 31       		.uleb128 0x31
 3907 012d 13       		.uleb128 0x13
 3908 012e 01       		.uleb128 0x1
 3909 012f 13       		.uleb128 0x13
 3910 0130 00       		.byte	0
 3911 0131 00       		.byte	0
 3912 0132 18       		.uleb128 0x18
 3913 0133 8A8201   		.uleb128 0x410a
 3914 0136 00       		.byte	0
 3915 0137 02       		.uleb128 0x2
 3916 0138 18       		.uleb128 0x18
 3917 0139 9142     		.uleb128 0x2111
 3918 013b 18       		.uleb128 0x18
 3919 013c 00       		.byte	0
 3920 013d 00       		.byte	0
 3921 013e 19       		.uleb128 0x19
 3922 013f 898201   		.uleb128 0x4109
 3923 0142 01       		.byte	0x1
 3924 0143 11       		.uleb128 0x11
 3925 0144 01       		.uleb128 0x1
 3926 0145 31       		.uleb128 0x31
 3927 0146 13       		.uleb128 0x13
 3928 0147 00       		.byte	0
 3929 0148 00       		.byte	0
 3930 0149 1A       		.uleb128 0x1a
 3931 014a 34       		.uleb128 0x34
 3932 014b 00       		.byte	0
 3933 014c 03       		.uleb128 0x3
 3934 014d 08       		.uleb128 0x8
 3935 014e 3A       		.uleb128 0x3a
 3936 014f 0B       		.uleb128 0xb
 3937 0150 3B       		.uleb128 0x3b
 3938 0151 05       		.uleb128 0x5
 3939 0152 49       		.uleb128 0x49
 3940 0153 13       		.uleb128 0x13
 3941 0154 02       		.uleb128 0x2
 3942 0155 17       		.uleb128 0x17
 3943 0156 00       		.byte	0
 3944 0157 00       		.byte	0
 3945 0158 1B       		.uleb128 0x1b
 3946 0159 05       		.uleb128 0x5
 3947 015a 00       		.byte	0
 3948 015b 03       		.uleb128 0x3
 3949 015c 0E       		.uleb128 0xe
 3950 015d 3A       		.uleb128 0x3a
 3951 015e 0B       		.uleb128 0xb
 3952 015f 3B       		.uleb128 0x3b
 3953 0160 05       		.uleb128 0x5
 3954 0161 49       		.uleb128 0x49
 3955 0162 13       		.uleb128 0x13
 3956 0163 02       		.uleb128 0x2
 3957 0164 17       		.uleb128 0x17
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 96


 3958 0165 00       		.byte	0
 3959 0166 00       		.byte	0
 3960 0167 1C       		.uleb128 0x1c
 3961 0168 05       		.uleb128 0x5
 3962 0169 00       		.byte	0
 3963 016a 03       		.uleb128 0x3
 3964 016b 0E       		.uleb128 0xe
 3965 016c 3A       		.uleb128 0x3a
 3966 016d 0B       		.uleb128 0xb
 3967 016e 3B       		.uleb128 0x3b
 3968 016f 05       		.uleb128 0x5
 3969 0170 49       		.uleb128 0x49
 3970 0171 13       		.uleb128 0x13
 3971 0172 02       		.uleb128 0x2
 3972 0173 18       		.uleb128 0x18
 3973 0174 00       		.byte	0
 3974 0175 00       		.byte	0
 3975 0176 1D       		.uleb128 0x1d
 3976 0177 2E       		.uleb128 0x2e
 3977 0178 01       		.byte	0x1
 3978 0179 3F       		.uleb128 0x3f
 3979 017a 19       		.uleb128 0x19
 3980 017b 03       		.uleb128 0x3
 3981 017c 0E       		.uleb128 0xe
 3982 017d 3A       		.uleb128 0x3a
 3983 017e 0B       		.uleb128 0xb
 3984 017f 3B       		.uleb128 0x3b
 3985 0180 05       		.uleb128 0x5
 3986 0181 27       		.uleb128 0x27
 3987 0182 19       		.uleb128 0x19
 3988 0183 11       		.uleb128 0x11
 3989 0184 01       		.uleb128 0x1
 3990 0185 12       		.uleb128 0x12
 3991 0186 06       		.uleb128 0x6
 3992 0187 40       		.uleb128 0x40
 3993 0188 18       		.uleb128 0x18
 3994 0189 9642     		.uleb128 0x2116
 3995 018b 19       		.uleb128 0x19
 3996 018c 01       		.uleb128 0x1
 3997 018d 13       		.uleb128 0x13
 3998 018e 00       		.byte	0
 3999 018f 00       		.byte	0
 4000 0190 1E       		.uleb128 0x1e
 4001 0191 2E       		.uleb128 0x2e
 4002 0192 01       		.byte	0x1
 4003 0193 3F       		.uleb128 0x3f
 4004 0194 19       		.uleb128 0x19
 4005 0195 03       		.uleb128 0x3
 4006 0196 0E       		.uleb128 0xe
 4007 0197 3A       		.uleb128 0x3a
 4008 0198 0B       		.uleb128 0xb
 4009 0199 3B       		.uleb128 0x3b
 4010 019a 05       		.uleb128 0x5
 4011 019b 27       		.uleb128 0x27
 4012 019c 19       		.uleb128 0x19
 4013 019d 49       		.uleb128 0x49
 4014 019e 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 97


 4015 019f 11       		.uleb128 0x11
 4016 01a0 01       		.uleb128 0x1
 4017 01a1 12       		.uleb128 0x12
 4018 01a2 06       		.uleb128 0x6
 4019 01a3 40       		.uleb128 0x40
 4020 01a4 18       		.uleb128 0x18
 4021 01a5 9742     		.uleb128 0x2117
 4022 01a7 19       		.uleb128 0x19
 4023 01a8 01       		.uleb128 0x1
 4024 01a9 13       		.uleb128 0x13
 4025 01aa 00       		.byte	0
 4026 01ab 00       		.byte	0
 4027 01ac 1F       		.uleb128 0x1f
 4028 01ad 34       		.uleb128 0x34
 4029 01ae 00       		.byte	0
 4030 01af 03       		.uleb128 0x3
 4031 01b0 0E       		.uleb128 0xe
 4032 01b1 3A       		.uleb128 0x3a
 4033 01b2 0B       		.uleb128 0xb
 4034 01b3 3B       		.uleb128 0x3b
 4035 01b4 05       		.uleb128 0x5
 4036 01b5 49       		.uleb128 0x49
 4037 01b6 13       		.uleb128 0x13
 4038 01b7 02       		.uleb128 0x2
 4039 01b8 18       		.uleb128 0x18
 4040 01b9 00       		.byte	0
 4041 01ba 00       		.byte	0
 4042 01bb 20       		.uleb128 0x20
 4043 01bc 34       		.uleb128 0x34
 4044 01bd 00       		.byte	0
 4045 01be 03       		.uleb128 0x3
 4046 01bf 0E       		.uleb128 0xe
 4047 01c0 3A       		.uleb128 0x3a
 4048 01c1 0B       		.uleb128 0xb
 4049 01c2 3B       		.uleb128 0x3b
 4050 01c3 05       		.uleb128 0x5
 4051 01c4 49       		.uleb128 0x49
 4052 01c5 13       		.uleb128 0x13
 4053 01c6 02       		.uleb128 0x2
 4054 01c7 17       		.uleb128 0x17
 4055 01c8 00       		.byte	0
 4056 01c9 00       		.byte	0
 4057 01ca 21       		.uleb128 0x21
 4058 01cb 34       		.uleb128 0x34
 4059 01cc 00       		.byte	0
 4060 01cd 03       		.uleb128 0x3
 4061 01ce 0E       		.uleb128 0xe
 4062 01cf 3A       		.uleb128 0x3a
 4063 01d0 0B       		.uleb128 0xb
 4064 01d1 3B       		.uleb128 0x3b
 4065 01d2 05       		.uleb128 0x5
 4066 01d3 49       		.uleb128 0x49
 4067 01d4 13       		.uleb128 0x13
 4068 01d5 1C       		.uleb128 0x1c
 4069 01d6 0B       		.uleb128 0xb
 4070 01d7 00       		.byte	0
 4071 01d8 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 98


 4072 01d9 22       		.uleb128 0x22
 4073 01da 26       		.uleb128 0x26
 4074 01db 00       		.byte	0
 4075 01dc 49       		.uleb128 0x49
 4076 01dd 13       		.uleb128 0x13
 4077 01de 00       		.byte	0
 4078 01df 00       		.byte	0
 4079 01e0 23       		.uleb128 0x23
 4080 01e1 2E       		.uleb128 0x2e
 4081 01e2 01       		.byte	0x1
 4082 01e3 3F       		.uleb128 0x3f
 4083 01e4 19       		.uleb128 0x19
 4084 01e5 03       		.uleb128 0x3
 4085 01e6 0E       		.uleb128 0xe
 4086 01e7 3A       		.uleb128 0x3a
 4087 01e8 0B       		.uleb128 0xb
 4088 01e9 3B       		.uleb128 0x3b
 4089 01ea 05       		.uleb128 0x5
 4090 01eb 27       		.uleb128 0x27
 4091 01ec 19       		.uleb128 0x19
 4092 01ed 49       		.uleb128 0x49
 4093 01ee 13       		.uleb128 0x13
 4094 01ef 8701     		.uleb128 0x87
 4095 01f1 19       		.uleb128 0x19
 4096 01f2 11       		.uleb128 0x11
 4097 01f3 01       		.uleb128 0x1
 4098 01f4 12       		.uleb128 0x12
 4099 01f5 06       		.uleb128 0x6
 4100 01f6 40       		.uleb128 0x40
 4101 01f7 18       		.uleb128 0x18
 4102 01f8 9742     		.uleb128 0x2117
 4103 01fa 19       		.uleb128 0x19
 4104 01fb 01       		.uleb128 0x1
 4105 01fc 13       		.uleb128 0x13
 4106 01fd 00       		.byte	0
 4107 01fe 00       		.byte	0
 4108 01ff 24       		.uleb128 0x24
 4109 0200 34       		.uleb128 0x34
 4110 0201 00       		.byte	0
 4111 0202 03       		.uleb128 0x3
 4112 0203 0E       		.uleb128 0xe
 4113 0204 3A       		.uleb128 0x3a
 4114 0205 0B       		.uleb128 0xb
 4115 0206 3B       		.uleb128 0x3b
 4116 0207 0B       		.uleb128 0xb
 4117 0208 49       		.uleb128 0x49
 4118 0209 13       		.uleb128 0x13
 4119 020a 3F       		.uleb128 0x3f
 4120 020b 19       		.uleb128 0x19
 4121 020c 3C       		.uleb128 0x3c
 4122 020d 19       		.uleb128 0x19
 4123 020e 00       		.byte	0
 4124 020f 00       		.byte	0
 4125 0210 25       		.uleb128 0x25
 4126 0211 34       		.uleb128 0x34
 4127 0212 00       		.byte	0
 4128 0213 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 99


 4129 0214 0E       		.uleb128 0xe
 4130 0215 3A       		.uleb128 0x3a
 4131 0216 0B       		.uleb128 0xb
 4132 0217 3B       		.uleb128 0x3b
 4133 0218 0B       		.uleb128 0xb
 4134 0219 49       		.uleb128 0x49
 4135 021a 13       		.uleb128 0x13
 4136 021b 3F       		.uleb128 0x3f
 4137 021c 19       		.uleb128 0x19
 4138 021d 02       		.uleb128 0x2
 4139 021e 18       		.uleb128 0x18
 4140 021f 00       		.byte	0
 4141 0220 00       		.byte	0
 4142 0221 26       		.uleb128 0x26
 4143 0222 34       		.uleb128 0x34
 4144 0223 00       		.byte	0
 4145 0224 03       		.uleb128 0x3
 4146 0225 08       		.uleb128 0x8
 4147 0226 3A       		.uleb128 0x3a
 4148 0227 0B       		.uleb128 0xb
 4149 0228 3B       		.uleb128 0x3b
 4150 0229 0B       		.uleb128 0xb
 4151 022a 49       		.uleb128 0x49
 4152 022b 13       		.uleb128 0x13
 4153 022c 3F       		.uleb128 0x3f
 4154 022d 19       		.uleb128 0x19
 4155 022e 02       		.uleb128 0x2
 4156 022f 18       		.uleb128 0x18
 4157 0230 00       		.byte	0
 4158 0231 00       		.byte	0
 4159 0232 27       		.uleb128 0x27
 4160 0233 34       		.uleb128 0x34
 4161 0234 00       		.byte	0
 4162 0235 03       		.uleb128 0x3
 4163 0236 0E       		.uleb128 0xe
 4164 0237 3A       		.uleb128 0x3a
 4165 0238 0B       		.uleb128 0xb
 4166 0239 3B       		.uleb128 0x3b
 4167 023a 05       		.uleb128 0x5
 4168 023b 49       		.uleb128 0x49
 4169 023c 13       		.uleb128 0x13
 4170 023d 3F       		.uleb128 0x3f
 4171 023e 19       		.uleb128 0x19
 4172 023f 02       		.uleb128 0x2
 4173 0240 18       		.uleb128 0x18
 4174 0241 00       		.byte	0
 4175 0242 00       		.byte	0
 4176 0243 28       		.uleb128 0x28
 4177 0244 2E       		.uleb128 0x2e
 4178 0245 00       		.byte	0
 4179 0246 3F       		.uleb128 0x3f
 4180 0247 19       		.uleb128 0x19
 4181 0248 3C       		.uleb128 0x3c
 4182 0249 19       		.uleb128 0x19
 4183 024a 6E       		.uleb128 0x6e
 4184 024b 0E       		.uleb128 0xe
 4185 024c 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 100


 4186 024d 0E       		.uleb128 0xe
 4187 024e 3A       		.uleb128 0x3a
 4188 024f 0B       		.uleb128 0xb
 4189 0250 3B       		.uleb128 0x3b
 4190 0251 0B       		.uleb128 0xb
 4191 0252 00       		.byte	0
 4192 0253 00       		.byte	0
 4193 0254 29       		.uleb128 0x29
 4194 0255 2E       		.uleb128 0x2e
 4195 0256 00       		.byte	0
 4196 0257 3F       		.uleb128 0x3f
 4197 0258 19       		.uleb128 0x19
 4198 0259 3C       		.uleb128 0x3c
 4199 025a 19       		.uleb128 0x19
 4200 025b 6E       		.uleb128 0x6e
 4201 025c 0E       		.uleb128 0xe
 4202 025d 03       		.uleb128 0x3
 4203 025e 0E       		.uleb128 0xe
 4204 025f 00       		.byte	0
 4205 0260 00       		.byte	0
 4206 0261 2A       		.uleb128 0x2a
 4207 0262 2E       		.uleb128 0x2e
 4208 0263 00       		.byte	0
 4209 0264 3F       		.uleb128 0x3f
 4210 0265 19       		.uleb128 0x19
 4211 0266 3C       		.uleb128 0x3c
 4212 0267 19       		.uleb128 0x19
 4213 0268 6E       		.uleb128 0x6e
 4214 0269 0E       		.uleb128 0xe
 4215 026a 03       		.uleb128 0x3
 4216 026b 0E       		.uleb128 0xe
 4217 026c 3A       		.uleb128 0x3a
 4218 026d 0B       		.uleb128 0xb
 4219 026e 3B       		.uleb128 0x3b
 4220 026f 05       		.uleb128 0x5
 4221 0270 00       		.byte	0
 4222 0271 00       		.byte	0
 4223 0272 00       		.byte	0
 4224              		.section	.debug_loc,"",%progbits
 4225              	.Ldebug_loc0:
 4226              	.LLST0:
 4227 0000 2A000000 		.4byte	.LVL9
 4228 0004 2E000000 		.4byte	.LVL10
 4229 0008 0200     		.2byte	0x2
 4230 000a 30       		.byte	0x30
 4231 000b 9F       		.byte	0x9f
 4232 000c 2E000000 		.4byte	.LVL10
 4233 0010 4A000000 		.4byte	.LVL15
 4234 0014 0100     		.2byte	0x1
 4235 0016 54       		.byte	0x54
 4236 0017 00000000 		.4byte	0
 4237 001b 00000000 		.4byte	0
 4238              	.LLST1:
 4239 001f 00000000 		.4byte	.LVL16
 4240 0023 12000000 		.4byte	.LVL17
 4241 0027 0100     		.2byte	0x1
 4242 0029 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 101


 4243 002a 12000000 		.4byte	.LVL17
 4244 002e 1C000000 		.4byte	.LFE32
 4245 0032 0400     		.2byte	0x4
 4246 0034 F3       		.byte	0xf3
 4247 0035 01       		.uleb128 0x1
 4248 0036 50       		.byte	0x50
 4249 0037 9F       		.byte	0x9f
 4250 0038 00000000 		.4byte	0
 4251 003c 00000000 		.4byte	0
 4252              	.LLST2:
 4253 0040 08000000 		.4byte	.LVL19
 4254 0044 0B000000 		.4byte	.LVL20-1
 4255 0048 0100     		.2byte	0x1
 4256 004a 50       		.byte	0x50
 4257 004b 00000000 		.4byte	0
 4258 004f 00000000 		.4byte	0
 4259              	.LLST3:
 4260 0053 00000000 		.4byte	.LVL21
 4261 0057 0A000000 		.4byte	.LVL22
 4262 005b 0100     		.2byte	0x1
 4263 005d 50       		.byte	0x50
 4264 005e 0A000000 		.4byte	.LVL22
 4265 0062 0D000000 		.4byte	.LVL23-1
 4266 0066 0400     		.2byte	0x4
 4267 0068 70       		.byte	0x70
 4268 0069 E079     		.sleb128 -800
 4269 006b 9F       		.byte	0x9f
 4270 006c 0D000000 		.4byte	.LVL23-1
 4271 0070 10000000 		.4byte	.LFE36
 4272 0074 0400     		.2byte	0x4
 4273 0076 F3       		.byte	0xf3
 4274 0077 01       		.uleb128 0x1
 4275 0078 50       		.byte	0x50
 4276 0079 9F       		.byte	0x9f
 4277 007a 00000000 		.4byte	0
 4278 007e 00000000 		.4byte	0
 4279              	.LLST4:
 4280 0082 1C000000 		.4byte	.LVL26
 4281 0086 F4000000 		.4byte	.LVL43
 4282 008a 0100     		.2byte	0x1
 4283 008c 54       		.byte	0x54
 4284 008d 5C010000 		.4byte	.LVL50
 4285 0091 5E010000 		.4byte	.LVL51
 4286 0095 0100     		.2byte	0x1
 4287 0097 54       		.byte	0x54
 4288 0098 5E010000 		.4byte	.LVL51
 4289 009c 79010000 		.4byte	.LVL54-1
 4290 00a0 0200     		.2byte	0x2
 4291 00a2 74       		.byte	0x74
 4292 00a3 02       		.sleb128 2
 4293 00a4 00000000 		.4byte	0
 4294 00a8 00000000 		.4byte	0
 4295              	.LLST5:
 4296 00ac 1A000000 		.4byte	.LVL25
 4297 00b0 6B000000 		.4byte	.LVL37-1
 4298 00b4 0100     		.2byte	0x1
 4299 00b6 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 102


 4300 00b7 B8000000 		.4byte	.LVL39
 4301 00bb BA000000 		.4byte	.LVL40
 4302 00bf 0100     		.2byte	0x1
 4303 00c1 50       		.byte	0x50
 4304 00c2 5C010000 		.4byte	.LVL50
 4305 00c6 6A010000 		.4byte	.LVL53
 4306 00ca 0100     		.2byte	0x1
 4307 00cc 50       		.byte	0x50
 4308 00cd 00000000 		.4byte	0
 4309 00d1 00000000 		.4byte	0
 4310              	.LLST6:
 4311 00d5 22000000 		.4byte	.LVL27
 4312 00d9 28000000 		.4byte	.LVL28
 4313 00dd 0200     		.2byte	0x2
 4314 00df 30       		.byte	0x30
 4315 00e0 9F       		.byte	0x9f
 4316 00e1 28000000 		.4byte	.LVL28
 4317 00e5 32000000 		.4byte	.LVL31
 4318 00e9 0100     		.2byte	0x1
 4319 00eb 53       		.byte	0x53
 4320 00ec 34000000 		.4byte	.LVL32
 4321 00f0 3E000000 		.4byte	.LVL33
 4322 00f4 0100     		.2byte	0x1
 4323 00f6 53       		.byte	0x53
 4324 00f7 50000000 		.4byte	.LVL35
 4325 00fb 52000000 		.4byte	.LVL36
 4326 00ff 0100     		.2byte	0x1
 4327 0101 53       		.byte	0x53
 4328 0102 36020000 		.4byte	.LVL56
 4329 0106 3C020000 		.4byte	.LVL57
 4330 010a 0200     		.2byte	0x2
 4331 010c 30       		.byte	0x30
 4332 010d 9F       		.byte	0x9f
 4333 010e 3C020000 		.4byte	.LVL57
 4334 0112 46020000 		.4byte	.LVL60
 4335 0116 0100     		.2byte	0x1
 4336 0118 53       		.byte	0x53
 4337 0119 48020000 		.4byte	.LVL61
 4338 011d 57020000 		.4byte	.LVL63-1
 4339 0121 0100     		.2byte	0x1
 4340 0123 53       		.byte	0x53
 4341 0124 00000000 		.4byte	0
 4342 0128 00000000 		.4byte	0
 4343              	.LLST7:
 4344 012c 22000000 		.4byte	.LVL27
 4345 0130 28000000 		.4byte	.LVL28
 4346 0134 0200     		.2byte	0x2
 4347 0136 30       		.byte	0x30
 4348 0137 9F       		.byte	0x9f
 4349 0138 28000000 		.4byte	.LVL28
 4350 013c 2E000000 		.4byte	.LVL29
 4351 0140 0100     		.2byte	0x1
 4352 0142 52       		.byte	0x52
 4353 0143 30000000 		.4byte	.LVL30
 4354 0147 42000000 		.4byte	.LVL34
 4355 014b 0100     		.2byte	0x1
 4356 014d 52       		.byte	0x52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 103


 4357 014e 50000000 		.4byte	.LVL35
 4358 0152 6B000000 		.4byte	.LVL37-1
 4359 0156 0100     		.2byte	0x1
 4360 0158 52       		.byte	0x52
 4361 0159 B8000000 		.4byte	.LVL39
 4362 015d C0000000 		.4byte	.LVL41
 4363 0161 0100     		.2byte	0x1
 4364 0163 52       		.byte	0x52
 4365 0164 5C010000 		.4byte	.LVL50
 4366 0168 68010000 		.4byte	.LVL52
 4367 016c 0100     		.2byte	0x1
 4368 016e 52       		.byte	0x52
 4369 016f 36020000 		.4byte	.LVL56
 4370 0173 3C020000 		.4byte	.LVL57
 4371 0177 0200     		.2byte	0x2
 4372 0179 30       		.byte	0x30
 4373 017a 9F       		.byte	0x9f
 4374 017b 3C020000 		.4byte	.LVL57
 4375 017f 42020000 		.4byte	.LVL58
 4376 0183 0100     		.2byte	0x1
 4377 0185 52       		.byte	0x52
 4378 0186 44020000 		.4byte	.LVL59
 4379 018a 50020000 		.4byte	.LVL62
 4380 018e 0100     		.2byte	0x1
 4381 0190 52       		.byte	0x52
 4382 0191 00000000 		.4byte	0
 4383 0195 00000000 		.4byte	0
 4384              	.LLST8:
 4385 0199 24010000 		.4byte	.LVL45
 4386 019d 34010000 		.4byte	.LVL47
 4387 01a1 0100     		.2byte	0x1
 4388 01a3 53       		.byte	0x53
 4389 01a4 44010000 		.4byte	.LVL48
 4390 01a8 48010000 		.4byte	.LVL49
 4391 01ac 0100     		.2byte	0x1
 4392 01ae 53       		.byte	0x53
 4393 01af 00000000 		.4byte	0
 4394 01b3 00000000 		.4byte	0
 4395              	.LLST9:
 4396 01b7 00000000 		.4byte	.LVL66
 4397 01bb 1B000000 		.4byte	.LVL68-1
 4398 01bf 0100     		.2byte	0x1
 4399 01c1 50       		.byte	0x50
 4400 01c2 1B000000 		.4byte	.LVL68-1
 4401 01c6 28000000 		.4byte	.LFE39
 4402 01ca 0400     		.2byte	0x4
 4403 01cc F3       		.byte	0xf3
 4404 01cd 01       		.uleb128 0x1
 4405 01ce 50       		.byte	0x50
 4406 01cf 9F       		.byte	0x9f
 4407 01d0 00000000 		.4byte	0
 4408 01d4 00000000 		.4byte	0
 4409              	.LLST10:
 4410 01d8 0A000000 		.4byte	.LVL67
 4411 01dc 22000000 		.4byte	.LVL69
 4412 01e0 0100     		.2byte	0x1
 4413 01e2 54       		.byte	0x54
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 104


 4414 01e3 22000000 		.4byte	.LVL69
 4415 01e7 28000000 		.4byte	.LFE39
 4416 01eb 0500     		.2byte	0x5
 4417 01ed 03       		.byte	0x3
 4418 01ee 00000000 		.4byte	inAuto
 4419 01f2 00000000 		.4byte	0
 4420 01f6 00000000 		.4byte	0
 4421              		.section	.debug_aranges,"",%progbits
 4422 0000 84000000 		.4byte	0x84
 4423 0004 0200     		.2byte	0x2
 4424 0006 00000000 		.4byte	.Ldebug_info0
 4425 000a 04       		.byte	0x4
 4426 000b 00       		.byte	0
 4427 000c 0000     		.2byte	0
 4428 000e 0000     		.2byte	0
 4429 0010 00000000 		.4byte	.LFB43
 4430 0014 24000000 		.4byte	.LFE43-.LFB43
 4431 0018 00000000 		.4byte	.LFB44
 4432 001c 1C000000 		.4byte	.LFE44-.LFB44
 4433 0020 00000000 		.4byte	.LFB45
 4434 0024 60000000 		.4byte	.LFE45-.LFB45
 4435 0028 00000000 		.4byte	.LFB32
 4436 002c 1C000000 		.4byte	.LFE32-.LFB32
 4437 0030 00000000 		.4byte	.LFB33
 4438 0034 1C000000 		.4byte	.LFE33-.LFB33
 4439 0038 00000000 		.4byte	.LFB34
 4440 003c 18000000 		.4byte	.LFE34-.LFB34
 4441 0040 00000000 		.4byte	.LFB36
 4442 0044 10000000 		.4byte	.LFE36-.LFB36
 4443 0048 00000000 		.4byte	.LFB37
 4444 004c 44000000 		.4byte	.LFE37-.LFB37
 4445 0050 00000000 		.4byte	.LFB35
 4446 0054 C8020000 		.4byte	.LFE35-.LFB35
 4447 0058 00000000 		.4byte	.LFB38
 4448 005c 30000000 		.4byte	.LFE38-.LFB38
 4449 0060 00000000 		.4byte	.LFB39
 4450 0064 28000000 		.4byte	.LFE39-.LFB39
 4451 0068 00000000 		.4byte	.LFB40
 4452 006c 64010000 		.4byte	.LFE40-.LFB40
 4453 0070 00000000 		.4byte	.LFB42
 4454 0074 BC000000 		.4byte	.LFE42-.LFB42
 4455 0078 00000000 		.4byte	.LFB41
 4456 007c 40010000 		.4byte	.LFE41-.LFB41
 4457 0080 00000000 		.4byte	0
 4458 0084 00000000 		.4byte	0
 4459              		.section	.debug_ranges,"",%progbits
 4460              	.Ldebug_ranges0:
 4461 0000 00000000 		.4byte	.LFB43
 4462 0004 24000000 		.4byte	.LFE43
 4463 0008 00000000 		.4byte	.LFB44
 4464 000c 1C000000 		.4byte	.LFE44
 4465 0010 00000000 		.4byte	.LFB45
 4466 0014 60000000 		.4byte	.LFE45
 4467 0018 00000000 		.4byte	.LFB32
 4468 001c 1C000000 		.4byte	.LFE32
 4469 0020 00000000 		.4byte	.LFB33
 4470 0024 1C000000 		.4byte	.LFE33
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 105


 4471 0028 00000000 		.4byte	.LFB34
 4472 002c 18000000 		.4byte	.LFE34
 4473 0030 00000000 		.4byte	.LFB36
 4474 0034 10000000 		.4byte	.LFE36
 4475 0038 00000000 		.4byte	.LFB37
 4476 003c 44000000 		.4byte	.LFE37
 4477 0040 00000000 		.4byte	.LFB35
 4478 0044 C8020000 		.4byte	.LFE35
 4479 0048 00000000 		.4byte	.LFB38
 4480 004c 30000000 		.4byte	.LFE38
 4481 0050 00000000 		.4byte	.LFB39
 4482 0054 28000000 		.4byte	.LFE39
 4483 0058 00000000 		.4byte	.LFB40
 4484 005c 64010000 		.4byte	.LFE40
 4485 0060 00000000 		.4byte	.LFB42
 4486 0064 BC000000 		.4byte	.LFE42
 4487 0068 00000000 		.4byte	.LFB41
 4488 006c 40010000 		.4byte	.LFE41
 4489 0070 00000000 		.4byte	0
 4490 0074 00000000 		.4byte	0
 4491              		.section	.debug_line,"",%progbits
 4492              	.Ldebug_line0:
 4493 0000 9F040000 		.section	.debug_str,"MS",%progbits,1
 4493      02007902 
 4493      00000201 
 4493      FB0E0D00 
 4493      01010101 
 4494              	.LASF173:
 4495 0000 43794465 		.ascii	"CyDelay\000"
 4495      6C617900 
 4496              	.LASF140:
 4497 0008 72784D65 		.ascii	"rxMessage\000"
 4497      73736167 
 4497      6500
 4498              	.LASF182:
 4499 0012 6D61696E 		.ascii	"main.c\000"
 4499      2E6300
 4500              	.LASF78:
 4501 0019 6D6F746F 		.ascii	"motor_current\000"
 4501      725F6375 
 4501      7272656E 
 4501      7400
 4502              	.LASF110:
 4503 0027 62726D73 		.ascii	"brmsRG4Mask\000"
 4503      5247344D 
 4503      61736B00 
 4504              	.LASF84:
 4505 0033 74786D73 		.ascii	"txmsClear\000"
 4505      436C6561 
 4505      7200
 4506              	.LASF94:
 4507 003d 6F757470 		.ascii	"output\000"
 4507      757400
 4508              	.LASF92:
 4509 0044 4D6F746F 		.ascii	"MotorCurrentRead\000"
 4509      72437572 
 4509      72656E74 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 106


 4509      52656164 
 4509      00
 4510              	.LASF106:
 4511 0055 62726D73 		.ascii	"brmsTask\000"
 4511      5461736B 
 4511      00
 4512              	.LASF61:
 4513 005e 65666673 		.ascii	"effsetdelta\000"
 4513      65746465 
 4513      6C746100 
 4514              	.LASF37:
 4515 006a 6673456E 		.ascii	"fsEncoder\000"
 4515      636F6465 
 4515      7200
 4516              	.LASF31:
 4517 0074 6373556E 		.ascii	"csUnconfig\000"
 4517      636F6E66 
 4517      696700
 4518              	.LASF102:
 4519 007f 6E657741 		.ascii	"newAuto\000"
 4519      75746F00 
 4520              	.LASF15:
 4521 0087 756E7369 		.ascii	"unsigned int\000"
 4521      676E6564 
 4521      20696E74 
 4521      00
 4522              	.LASF107:
 4523 0094 62726D73 		.ascii	"brmsRG1Mask\000"
 4523      5247314D 
 4523      61736B00 
 4524              	.LASF177:
 4525 00a0 436F756E 		.ascii	"Counter_1_Start\000"
 4525      7465725F 
 4525      315F5374 
 4525      61727400 
 4526              	.LASF104:
 4527 00b0 72756E52 		.ascii	"runRateGroup1_PID\000"
 4527      61746547 
 4527      726F7570 
 4527      315F5049 
 4527      4400
 4528              	.LASF65:
 4529 00c2 636C6561 		.ascii	"clearfaults\000"
 4529      72666175 
 4529      6C747300 
 4530              	.LASF8:
 4531 00ce 5F5F696E 		.ascii	"__int32_t\000"
 4531      7433325F 
 4531      7400
 4532              	.LASF148:
 4533 00d8 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4533      5F494E5F 
 4533      436C6561 
 4533      72496E74 
 4533      65727275 
 4534              	.LASF180:
 4535 00ef 4C45445F 		.ascii	"LED_Write\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 107


 4535      57726974 
 4535      6500
 4536              	.LASF88:
 4537 00f9 486F6D65 		.ascii	"HomeIsrHandler\000"
 4537      49737248 
 4537      616E646C 
 4537      657200
 4538              	.LASF86:
 4539 0108 74784D65 		.ascii	"txMessageStates_t\000"
 4539      73736167 
 4539      65537461 
 4539      7465735F 
 4539      7400
 4540              	.LASF91:
 4541 011a 436C6561 		.ascii	"ClearFault\000"
 4541      72466175 
 4541      6C7400
 4542              	.LASF172:
 4543 0125 4932435F 		.ascii	"I2C_Start\000"
 4543      53746172 
 4543      7400
 4544              	.LASF125:
 4545 012f 4C617374 		.ascii	"LastMoveStableCount\000"
 4545      4D6F7665 
 4545      53746162 
 4545      6C65436F 
 4545      756E7400 
 4546              	.LASF32:
 4547 0143 63735265 		.ascii	"csReady\000"
 4547      61647900 
 4548              	.LASF153:
 4549 014b 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4549      315F5370 
 4549      69556172 
 4549      74436C65 
 4549      61725478 
 4550              	.LASF21:
 4551 0166 75696E74 		.ascii	"uint32_t\000"
 4551      33325F74 
 4551      00
 4552              	.LASF16:
 4553 016f 696E7438 		.ascii	"int8_t\000"
 4553      5F7400
 4554              	.LASF50:
 4555 0176 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4555      73736167 
 4555      655F6F70 
 4555      636F6465 
 4555      735F7400 
 4556              	.LASF66:
 4557 018a 72784D65 		.ascii	"rxMessage_status_t\000"
 4557      73736167 
 4557      655F7374 
 4557      61747573 
 4557      5F7400
 4558              	.LASF90:
 4559 019d 41737365 		.ascii	"AssertFault\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 108


 4559      72744661 
 4559      756C7400 
 4560              	.LASF24:
 4561 01a9 666C6F61 		.ascii	"float\000"
 4561      7400
 4562              	.LASF170:
 4563 01af 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4563      7370695F 
 4563      73735F53 
 4563      74617274 
 4563      457800
 4564              	.LASF51:
 4565 01c2 63686563 		.ascii	"checksum\000"
 4565      6B73756D 
 4565      00
 4566              	.LASF71:
 4567 01cb 73657465 		.ascii	"setenc\000"
 4567      6E6300
 4568              	.LASF18:
 4569 01d2 696E7431 		.ascii	"int16_t\000"
 4569      365F7400 
 4570              	.LASF96:
 4571 01da 72657375 		.ascii	"result\000"
 4571      6C7400
 4572              	.LASF14:
 4573 01e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 4573      206C6F6E 
 4573      6720756E 
 4573      7369676E 
 4573      65642069 
 4574              	.LASF117:
 4575 01f8 5049445F 		.ascii	"PID_EffSetDelta\000"
 4575      45666653 
 4575      65744465 
 4575      6C746100 
 4576              	.LASF118:
 4577 0208 6C617374 		.ascii	"lastTime\000"
 4577      54696D65 
 4577      00
 4578              	.LASF137:
 4579 0211 4D6F746F 		.ascii	"MotorCurrent\000"
 4579      72437572 
 4579      72656E74 
 4579      00
 4580              	.LASF6:
 4581 021e 5F5F7569 		.ascii	"__uint16_t\000"
 4581      6E743136 
 4581      5F7400
 4582              	.LASF63:
 4583 0229 656E6162 		.ascii	"enable\000"
 4583      6C6500
 4584              	.LASF176:
 4585 0230 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4585      315F5772 
 4585      69746550 
 4585      6572696F 
 4585      6400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 109


 4586              	.LASF133:
 4587 0242 436F6E66 		.ascii	"ConfigState\000"
 4587      69675374 
 4587      61746500 
 4588              	.LASF59:
 4589 024e 6C696D69 		.ascii	"limitOutput\000"
 4589      744F7574 
 4589      70757400 
 4590              	.LASF181:
 4591 025a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4591      43313120 
 4591      352E342E 
 4591      31203230 
 4591      31363036 
 4592 028d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4592      20726576 
 4592      6973696F 
 4592      6E203233 
 4592      37373135 
 4593 02c0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4593      66756E63 
 4593      74696F6E 
 4593      2D736563 
 4593      74696F6E 
 4594              	.LASF167:
 4595 02e8 6973725F 		.ascii	"isr_home_SetPriority\000"
 4595      686F6D65 
 4595      5F536574 
 4595      5072696F 
 4595      72697479 
 4596              	.LASF164:
 4597 02fd 6973725F 		.ascii	"isr_brms_StartEx\000"
 4597      62726D73 
 4597      5F537461 
 4597      72744578 
 4597      00
 4598              	.LASF163:
 4599 030e 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4599      725F4252 
 4599      4D535F53 
 4599      74617274 
 4599      00
 4600              	.LASF103:
 4601 031f 5F426F6F 		.ascii	"_Bool\000"
 4601      6C00
 4602              	.LASF36:
 4603 0325 6673556E 		.ascii	"fsUnconfigured\000"
 4603      636F6E66 
 4603      69677572 
 4603      656400
 4604              	.LASF112:
 4605 0334 696E4175 		.ascii	"inAuto\000"
 4605      746F00
 4606              	.LASF13:
 4607 033b 5F5F7569 		.ascii	"__uint64_t\000"
 4607      6E743634 
 4607      5F7400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 110


 4608              	.LASF157:
 4609 0346 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4609      315F5370 
 4609      69556172 
 4609      74507574 
 4609      41727261 
 4610              	.LASF149:
 4611 035c 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4611      73735F43 
 4611      6C656172 
 4611      496E7465 
 4611      72727570 
 4612              	.LASF130:
 4613 0372 55707469 		.ascii	"UptimeMilliseconds\000"
 4613      6D654D69 
 4613      6C6C6973 
 4613      65636F6E 
 4613      647300
 4614              	.LASF156:
 4615 0385 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4615      7465725F 
 4615      315F5265 
 4615      6164436F 
 4615      756E7465 
 4616              	.LASF72:
 4617 039b 76657273 		.ascii	"version0\000"
 4617      696F6E30 
 4617      00
 4618              	.LASF73:
 4619 03a4 76657273 		.ascii	"version1\000"
 4619      696F6E31 
 4619      00
 4620              	.LASF74:
 4621 03ad 76657273 		.ascii	"version2\000"
 4621      696F6E32 
 4621      00
 4622              	.LASF54:
 4623 03b6 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4623      73736167 
 4623      655F6F76 
 4623      65726C61 
 4623      795F7400 
 4624              	.LASF119:
 4625 03ca 506F7369 		.ascii	"Position\000"
 4625      74696F6E 
 4625      00
 4626              	.LASF26:
 4627 03d3 63686172 		.ascii	"char\000"
 4627      00
 4628              	.LASF81:
 4629 03d8 6C617374 		.ascii	"last_move_time\000"
 4629      5F6D6F76 
 4629      655F7469 
 4629      6D6500
 4630              	.LASF160:
 4631 03e7 5049445F 		.ascii	"PID_UpdateValues\000"
 4631      55706461 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 111


 4631      74655661 
 4631      6C756573 
 4631      00
 4632              	.LASF100:
 4633 03f8 5049445F 		.ascii	"PID_SetMode\000"
 4633      5365744D 
 4633      6F646500 
 4634              	.LASF93:
 4635 0404 50574D5F 		.ascii	"PWM_Set\000"
 4635      53657400 
 4636              	.LASF105:
 4637 040c 42524D53 		.ascii	"BRMS_Interrupt\000"
 4637      5F496E74 
 4637      65727275 
 4637      707400
 4638              	.LASF152:
 4639 041b 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4639      315F5370 
 4639      69556172 
 4639      74436C65 
 4639      61725278 
 4640              	.LASF53:
 4641 0436 6F70636F 		.ascii	"opcode\000"
 4641      646500
 4642              	.LASF60:
 4643 043d 6C696D69 		.ascii	"limitIterm\000"
 4643      74497465 
 4643      726D00
 4644              	.LASF17:
 4645 0448 75696E74 		.ascii	"uint8_t\000"
 4645      385F7400 
 4646              	.LASF70:
 4647 0450 73746174 		.ascii	"status\000"
 4647      757300
 4648              	.LASF38:
 4649 0457 6673496E 		.ascii	"fsIndex\000"
 4649      64657800 
 4650              	.LASF146:
 4651 045f 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4651      785F436F 
 4651      756E7465 
 4651      725F315F 
 4651      57726974 
 4652              	.LASF155:
 4653 047c 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4653      315F5772 
 4653      69746543 
 4653      6F6D7061 
 4653      726500
 4654              	.LASF35:
 4655 048f 66734E4F 		.ascii	"fsNONE\000"
 4655      4E4500
 4656              	.LASF143:
 4657 0496 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4657      7273745F 
 4657      656E636F 
 4657      6465725F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 112


 4657      436C6561 
 4658              	.LASF171:
 4659 04b3 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4659      7370695F 
 4659      73735F53 
 4659      65745072 
 4659      696F7269 
 4660              	.LASF126:
 4661 04ca 4C617374 		.ascii	"LastMoveTimeUsec\000"
 4661      4D6F7665 
 4661      54696D65 
 4661      55736563 
 4661      00
 4662              	.LASF12:
 4663 04db 6C6F6E67 		.ascii	"long long int\000"
 4663      206C6F6E 
 4663      6720696E 
 4663      7400
 4664              	.LASF161:
 4665 04e9 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4665      725F4252 
 4665      4D535F43 
 4665      6C656172 
 4665      496E7465 
 4666              	.LASF40:
 4667 0503 66734368 		.ascii	"fsChecksum\000"
 4667      65636B73 
 4667      756D00
 4668              	.LASF150:
 4669 050e 7370695F 		.ascii	"spi_ss_Read\000"
 4669      73735F52 
 4669      65616400 
 4670              	.LASF82:
 4671 051a 69746572 		.ascii	"iterm_delay\000"
 4671      6D5F6465 
 4671      6C617900 
 4672              	.LASF4:
 4673 0526 5F5F696E 		.ascii	"__int16_t\000"
 4673      7431365F 
 4673      7400
 4674              	.LASF159:
 4675 0530 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4675      585F4F55 
 4675      545F5365 
 4675      74447269 
 4675      76654D6F 
 4676              	.LASF186:
 4677 0547 6D656D73 		.ascii	"memset\000"
 4677      657400
 4678              	.LASF131:
 4679 054e 55707469 		.ascii	"UptimeMillisecondsAccumulator\000"
 4679      6D654D69 
 4679      6C6C6973 
 4679      65636F6E 
 4679      64734163 
 4680              	.LASF77:
 4681 056c 63686563 		.ascii	"checksum_errors\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 113


 4681      6B73756D 
 4681      5F657272 
 4681      6F727300 
 4682              	.LASF52:
 4683 057c 73697A65 		.ascii	"size\000"
 4683      00
 4684              	.LASF183:
 4685 0581 433A5C55 		.ascii	"C:\\Users\\prichards\\proj\\acsnb-motor-cypress\\Qu"
 4685      73657273 
 4685      5C707269 
 4685      63686172 
 4685      64735C70 
 4686 05af 6164456E 		.ascii	"adEncoderRTOS.cydsn\000"
 4686      636F6465 
 4686      7252544F 
 4686      532E6379 
 4686      64736E00 
 4687              	.LASF23:
 4688 05c3 75696E74 		.ascii	"uint32\000"
 4688      333200
 4689              	.LASF85:
 4690 05ca 74786D73 		.ascii	"txmsLoaded\000"
 4690      4C6F6164 
 4690      656400
 4691              	.LASF138:
 4692 05d5 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4692      656E7449 
 4692      3243696E 
 4692      62756600 
 4693              	.LASF151:
 4694 05e5 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 4694      315F5370 
 4694      69556172 
 4694      74526561 
 4694      64527844 
 4695              	.LASF120:
 4696 05fd 4C617374 		.ascii	"LastPosition\000"
 4696      506F7369 
 4696      74696F6E 
 4696      00
 4697              	.LASF141:
 4698 060a 74784D65 		.ascii	"txMessage\000"
 4698      73736167 
 4698      6500
 4699              	.LASF145:
 4700 0614 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4700      7465725F 
 4700      315F5772 
 4700      69746543 
 4700      6F756E74 
 4701              	.LASF127:
 4702 062b 4E657743 		.ascii	"NewCommandedMove\000"
 4702      6F6D6D61 
 4702      6E646564 
 4702      4D6F7665 
 4702      00
 4703              	.LASF89:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 114


 4704 063c 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4704      53535F49 
 4704      73724861 
 4704      6E646C65 
 4704      7200
 4705              	.LASF0:
 4706 064e 5F5F696E 		.ascii	"__int8_t\000"
 4706      74385F74 
 4706      00
 4707              	.LASF34:
 4708 0657 436F6E66 		.ascii	"ConfigStates_t\000"
 4708      69675374 
 4708      61746573 
 4708      5F7400
 4709              	.LASF97:
 4710 0666 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4710      61746547 
 4710      726F7570 
 4710      335F5350 
 4710      4900
 4711              	.LASF165:
 4712 0678 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4712      62726D73 
 4712      5F536574 
 4712      5072696F 
 4712      72697479 
 4713              	.LASF28:
 4714 068d 6C6F6E67 		.ascii	"long double\000"
 4714      20646F75 
 4714      626C6500 
 4715              	.LASF154:
 4716 0699 67657443 		.ascii	"getCurrent_mA\000"
 4716      75727265 
 4716      6E745F6D 
 4716      4100
 4717              	.LASF19:
 4718 06a7 75696E74 		.ascii	"uint16_t\000"
 4718      31365F74 
 4718      00
 4719              	.LASF27:
 4720 06b0 72656733 		.ascii	"reg32\000"
 4720      3200
 4721              	.LASF30:
 4722 06b6 6373554E 		.ascii	"csUNDEFINED\000"
 4722      44454649 
 4722      4E454400 
 4723              	.LASF55:
 4724 06c2 73657175 		.ascii	"sequence\000"
 4724      656E6365 
 4724      00
 4725              	.LASF121:
 4726 06cb 4F757470 		.ascii	"Output\000"
 4726      757400
 4727              	.LASF69:
 4728 06d2 636F6E66 		.ascii	"config\000"
 4728      696700
 4729              	.LASF39:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 115


 4730 06d9 66734375 		.ascii	"fsCurrentRead\000"
 4730      7272656E 
 4730      74526561 
 4730      6400
 4731              	.LASF5:
 4732 06e7 73686F72 		.ascii	"short int\000"
 4732      7420696E 
 4732      7400
 4733              	.LASF62:
 4734 06f1 72784D65 		.ascii	"rxMessage_config_t\000"
 4734      73736167 
 4734      655F636F 
 4734      6E666967 
 4734      5F7400
 4735              	.LASF114:
 4736 0704 5049445F 		.ascii	"PID_Was_Enabled\000"
 4736      5761735F 
 4736      456E6162 
 4736      6C656400 
 4737              	.LASF113:
 4738 0714 5049445F 		.ascii	"PID_Enabled\000"
 4738      456E6162 
 4738      6C656400 
 4739              	.LASF101:
 4740 0720 4D6F6465 		.ascii	"Mode\000"
 4740      00
 4741              	.LASF111:
 4742 0725 62726D73 		.ascii	"brmsRG5Mask\000"
 4742      5247354D 
 4742      61736B00 
 4743              	.LASF9:
 4744 0731 6C6F6E67 		.ascii	"long int\000"
 4744      20696E74 
 4744      00
 4745              	.LASF33:
 4746 073a 63734D41 		.ascii	"csMAX\000"
 4746      5800
 4747              	.LASF68:
 4748 0740 6F766572 		.ascii	"overlay\000"
 4748      6C617900 
 4749              	.LASF175:
 4750 0748 50574D5F 		.ascii	"PWM_1_Start\000"
 4750      315F5374 
 4750      61727400 
 4751              	.LASF123:
 4752 0754 4C617374 		.ascii	"LastMoveStartTimeUsec\000"
 4752      4D6F7665 
 4752      53746172 
 4752      7454696D 
 4752      65557365 
 4753              	.LASF98:
 4754 076a 64697374 		.ascii	"distance\000"
 4754      616E6365 
 4754      00
 4755              	.LASF158:
 4756 0773 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4756      5F4F5554 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 116


 4756      5F536574 
 4756      44726976 
 4756      654D6F64 
 4757              	.LASF95:
 4758 0789 52617750 		.ascii	"RawPosition\000"
 4758      6F736974 
 4758      696F6E00 
 4759              	.LASF139:
 4760 0795 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4760      4D657373 
 4760      61676554 
 4760      696D6553 
 4760      65636F6E 
 4761              	.LASF109:
 4762 07ac 62726D73 		.ascii	"brmsRG3Mask\000"
 4762      5247334D 
 4762      61736B00 
 4763              	.LASF83:
 4764 07b8 74784D65 		.ascii	"txMessage_t\000"
 4764      73736167 
 4764      655F7400 
 4765              	.LASF22:
 4766 07c4 75696E74 		.ascii	"uint64_t\000"
 4766      36345F74 
 4766      00
 4767              	.LASF64:
 4768 07cd 73657470 		.ascii	"setpoint\000"
 4768      6F696E74 
 4768      00
 4769              	.LASF108:
 4770 07d6 62726D73 		.ascii	"brmsRG2Mask\000"
 4770      5247324D 
 4770      61736B00 
 4771              	.LASF184:
 4772 07e2 47657450 		.ascii	"GetPosition\000"
 4772      6F736974 
 4772      696F6E00 
 4773              	.LASF132:
 4774 07ee 55707469 		.ascii	"UptimeSeconds\000"
 4774      6D655365 
 4774      636F6E64 
 4774      7300
 4775              	.LASF169:
 4776 07fc 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4776      7273745F 
 4776      656E636F 
 4776      6465725F 
 4776      53657450 
 4777              	.LASF115:
 4778 0818 5049445F 		.ascii	"PID_Setpoint\000"
 4778      53657470 
 4778      6F696E74 
 4778      00
 4779              	.LASF1:
 4780 0825 5F5F7569 		.ascii	"__uint8_t\000"
 4780      6E74385F 
 4780      7400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 117


 4781              	.LASF47:
 4782 082f 6F705374 		.ascii	"opStatus\000"
 4782      61747573 
 4782      00
 4783              	.LASF49:
 4784 0838 6F704D41 		.ascii	"opMAX\000"
 4784      5800
 4785              	.LASF136:
 4786 083e 43686563 		.ascii	"ChecksumErrors\000"
 4786      6B73756D 
 4786      4572726F 
 4786      727300
 4787              	.LASF29:
 4788 084d 73697A65 		.ascii	"sizetype\000"
 4788      74797065 
 4788      00
 4789              	.LASF11:
 4790 0856 6C6F6E67 		.ascii	"long unsigned int\000"
 4790      20756E73 
 4790      69676E65 
 4790      6420696E 
 4790      7400
 4791              	.LASF20:
 4792 0868 696E7433 		.ascii	"int32_t\000"
 4792      325F7400 
 4793              	.LASF128:
 4794 0870 55707469 		.ascii	"UptimeMicroseconds\000"
 4794      6D654D69 
 4794      63726F73 
 4794      65636F6E 
 4794      647300
 4795              	.LASF58:
 4796 0883 6F766572 		.ascii	"overrideKd\000"
 4796      72696465 
 4796      4B6400
 4797              	.LASF75:
 4798 088e 73746174 		.ascii	"state\000"
 4798      6500
 4799              	.LASF57:
 4800 0894 6F766572 		.ascii	"overrideKi\000"
 4800      72696465 
 4800      4B6900
 4801              	.LASF56:
 4802 089f 6F766572 		.ascii	"overrideKp\000"
 4802      72696465 
 4802      4B7000
 4803              	.LASF174:
 4804 08aa 5350495F 		.ascii	"SPI_1_Start\000"
 4804      315F5374 
 4804      61727400 
 4805              	.LASF3:
 4806 08b6 756E7369 		.ascii	"unsigned char\000"
 4806      676E6564 
 4806      20636861 
 4806      7200
 4807              	.LASF10:
 4808 08c4 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 118


 4808      6E743332 
 4808      5F7400
 4809              	.LASF45:
 4810 08cf 6F70554E 		.ascii	"opUNDEFINED\000"
 4810      44454649 
 4810      4E454400 
 4811              	.LASF48:
 4812 08db 6F705365 		.ascii	"opSetEnc\000"
 4812      74456E63 
 4812      00
 4813              	.LASF134:
 4814 08e4 4661756C 		.ascii	"FaultState\000"
 4814      74537461 
 4814      746500
 4815              	.LASF179:
 4816 08ef 456E636F 		.ascii	"EncoderDirection_Write\000"
 4816      64657244 
 4816      69726563 
 4816      74696F6E 
 4816      5F577269 
 4817              	.LASF41:
 4818 0906 66735832 		.ascii	"fsX2\000"
 4818      00
 4819              	.LASF42:
 4820 090b 66735833 		.ascii	"fsX3\000"
 4820      00
 4821              	.LASF43:
 4822 0910 66735834 		.ascii	"fsX4\000"
 4822      00
 4823              	.LASF135:
 4824 0915 436F6E66 		.ascii	"ConfigSequence\000"
 4824      69675365 
 4824      7175656E 
 4824      636500
 4825              	.LASF122:
 4826 0924 686F6D69 		.ascii	"homingDone\000"
 4826      6E67446F 
 4826      6E6500
 4827              	.LASF124:
 4828 092f 4C617374 		.ascii	"LastMoveEndTimeUsec\000"
 4828      4D6F7665 
 4828      456E6454 
 4828      696D6555 
 4828      73656300 
 4829              	.LASF144:
 4830 0943 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 4830      745F456E 
 4830      636F6465 
 4830      725F436C 
 4830      65617249 
 4831              	.LASF67:
 4832 0960 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4832      73736167 
 4832      655F7365 
 4832      74656E63 
 4832      5F7400
 4833              	.LASF162:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 119


 4834 0973 50524F42 		.ascii	"PROBE_Write\000"
 4834      455F5772 
 4834      69746500 
 4835              	.LASF166:
 4836 097f 6973725F 		.ascii	"isr_home_StartEx\000"
 4836      686F6D65 
 4836      5F537461 
 4836      72744578 
 4836      00
 4837              	.LASF2:
 4838 0990 7369676E 		.ascii	"signed char\000"
 4838      65642063 
 4838      68617200 
 4839              	.LASF7:
 4840 099c 73686F72 		.ascii	"short unsigned int\000"
 4840      7420756E 
 4840      7369676E 
 4840      65642069 
 4840      6E7400
 4841              	.LASF99:
 4842 09af 5049445F 		.ascii	"PID_Initialize\000"
 4842      496E6974 
 4842      69616C69 
 4842      7A6500
 4843              	.LASF185:
 4844 09be 6D61696E 		.ascii	"main\000"
 4844      00
 4845              	.LASF80:
 4846 09c3 69746572 		.ascii	"iterm\000"
 4846      6D00
 4847              	.LASF25:
 4848 09c9 646F7562 		.ascii	"double\000"
 4848      6C6500
 4849              	.LASF178:
 4850 09d0 496E6465 		.ascii	"Index_Counter_1_Start\000"
 4850      785F436F 
 4850      756E7465 
 4850      725F315F 
 4850      53746172 
 4851              	.LASF129:
 4852 09e6 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 4852      6D654D69 
 4852      63726F73 
 4852      65636F6E 
 4852      64734163 
 4853              	.LASF46:
 4854 0a04 6F70436F 		.ascii	"opConfig\000"
 4854      6E666967 
 4854      00
 4855              	.LASF168:
 4856 0a0d 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 4856      7273745F 
 4856      656E636F 
 4856      6465725F 
 4856      53746172 
 4857              	.LASF147:
 4858 0a25 6973725F 		.ascii	"isr_home_ClearPending\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc41UOBl.s 			page 120


 4858      686F6D65 
 4858      5F436C65 
 4858      61725065 
 4858      6E64696E 
 4859              	.LASF76:
 4860 0a3b 6661756C 		.ascii	"fault\000"
 4860      7400
 4861              	.LASF87:
 4862 0a41 52535449 		.ascii	"RSTIsrHandler\000"
 4862      73724861 
 4862      6E646C65 
 4862      7200
 4863              	.LASF79:
 4864 0a4f 706F7369 		.ascii	"position\000"
 4864      74696F6E 
 4864      00
 4865              	.LASF44:
 4866 0a58 4661756C 		.ascii	"FaultStates_t\000"
 4866      74537461 
 4866      7465735F 
 4866      7400
 4867              	.LASF142:
 4868 0a66 74784D65 		.ascii	"txMessageState\000"
 4868      73736167 
 4868      65537461 
 4868      746500
 4869              	.LASF116:
 4870 0a75 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 4870      45666665 
 4870      63746976 
 4870      65536574 
 4870      706F696E 
 4871              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
