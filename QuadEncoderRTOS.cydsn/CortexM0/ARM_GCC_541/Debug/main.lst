ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2iz
  20              		.section	.text.Current_Read_Task,"ax",%progbits
  21              		.align	2
  22              		.global	Current_Read_Task
  23              		.code	16
  24              		.thumb_func
  25              		.type	Current_Read_Task, %function
  26              	Current_Read_Task:
  27              	.LFB35:
  28              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original non-RTOS version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  12:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  13:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  14:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  15:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  16:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  17:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  18:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  19:main.c        **** *******************************************************************************/
  20:main.c        **** #include <FreeRTOS.h>
  21:main.c        **** #include <semphr.h>
  22:main.c        **** #include <task.h>
  23:main.c        **** #include <I2C_I2C.h>
  24:main.c        **** #include <stdbool.h>
  25:main.c        **** #include <stdlib.h>
  26:main.c        **** #include <math.h>
  27:main.c        **** #include "INA219.h"
  28:main.c        **** 
  29:main.c        **** /* Firmware revision as of 2020-07-09 PMR */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 2


  30:main.c        **** #define FIRMWARE_REV_0 0
  31:main.c        **** #define FIRMWARE_REV_1 0
  32:main.c        **** #define FIRMWARE_REV_2 7
  33:main.c        **** 
  34:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  35:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  36:main.c        **** 
  37:main.c        **** /* --------------------------------------------------------------------- 
  38:main.c        ****  * CONSTANTS
  39:main.c        ****  * --------------------------------------------------------------------- */
  40:main.c        **** 
  41:main.c        **** /* Interrupt priorities (not to be confused with RTOS task priorities) */
  42:main.c        **** #define NESTED_ISR                             (1u)
  43:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  44:main.c        **** #define HIGHER_PRIORITY                        (2u)
  45:main.c        **** 
  46:main.c        **** /* Interrupt prototypes */
  47:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  48:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  49:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  50:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  51:main.c        **** 
  52:main.c        **** /* --------------------------------------------------------------------- 
  53:main.c        ****  * WDT Defines
  54:main.c        ****  *
  55:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  56:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  57:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  58:main.c        ****  * --------------------------------------------------------------------- */
  59:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  60:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  61:main.c        **** 
  62:main.c        **** /* --------------------------------------------------------------------- 
  63:main.c        ****  * PWM Defines
  64:main.c        ****  * --------------------------------------------------------------------- */
  65:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  66:main.c        **** #define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * (PWM_15KHZ_PERIOD/100))
  67:main.c        **** #define PWM_IDLE                               (50.0)
  68:main.c        **** 
  69:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  70:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  71:main.c        **** #define INA219_CAL_VALUE                       (8192)
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  75:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  76:main.c        **** 
  77:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  78:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  79:main.c        **** 
  80:main.c        **** /* --------------------------------------------------------------------- 
  81:main.c        ****  * PID Defines
  82:main.c        ****  * --------------------------------------------------------------------- */
  83:main.c        **** #define PID_MANUAL                             (0)
  84:main.c        **** #define PID_AUTOMATIC                          (1)
  85:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (25)
  86:main.c        **** bool inAuto = false;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 3


  87:main.c        **** 
  88:main.c        **** volatile int8 Jog, LastJog;
  89:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  90:main.c        **** int32 PID_Setpoint, PID_EffectiveSetpoint;
  91:main.c        **** uint8 PID_EffSetDelta;
  92:main.c        **** uint32 lastTime;
  93:main.c        **** float Output;
  94:main.c        **** float ITerm;
  95:main.c        **** volatile int32 Position, LastPosition;
  96:main.c        **** float refKp, refKi, refKd;
  97:main.c        **** float kp, ki, kd;
  98:main.c        **** uint32 refSampleTime = 5; // Default to 5ms
  99:main.c        **** float outMax_Total, outMax_ITerm;
 100:main.c        **** float pwmLimit, pwmMax, pwmMin;    
 101:main.c        **** bool homingDone = true;
 102:main.c        **** 
 103:main.c        **** /* --------------------------------------------------------------------- 
 104:main.c        ****  * ENCODER PROPERTIES
 105:main.c        ****  *
 106:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 107:main.c        ****  *
 108:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 109:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 110:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 111:main.c        ****  * flag and resetting the counter to 0 again.
 112:main.c        ****  *
 113:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 114:main.c        ****  * --------------------------------------------------------------------- */
 115:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 116:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 117:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 118:main.c        **** 
 119:main.c        **** 
 120:main.c        **** /* --------------------------------------------------------------------- 
 121:main.c        ****  * RTOS INTERFACES
 122:main.c        ****  * --------------------------------------------------------------------- */
 123:main.c        **** /* Define macros for delaying a task by an amount, returning control back to the OS.
 124:main.c        ****    We have to sleep in OS ticks, so compute how many that is and sleep that long.
 125:main.c        ****    Minimum sleep time is 1ms. */
 126:main.c        **** #define Sleep(MSToSleep)    vTaskDelay( ( MSToSleep * 1000 ) / configTICK_RATE_HZ )
 127:main.c        **** 
 128:main.c        **** 
 129:main.c        **** /* --------------------------------------------------------------------- 
 130:main.c        ****  * GLOBALS
 131:main.c        ****  * --------------------------------------------------------------------- */
 132:main.c        **** /* Coarse reporting of state back to the node box software */
 133:main.c        **** typedef enum {    
 134:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 135:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 136:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 137:main.c        ****     csMAX    
 138:main.c        **** } ConfigStates_t;
 139:main.c        **** 
 140:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 141:main.c        **** 
 142:main.c        **** /* Fault codes, these are bit encoded into a uint8 */
 143:main.c        **** typedef enum {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 4


 144:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 145:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 146:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 147:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 148:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 149:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 150:main.c        ****     fsX2           = 0b00100000,    /* */
 151:main.c        ****     fsX3           = 0b01000000,    /* */
 152:main.c        ****     fsX4           = 0b10000000     /* */
 153:main.c        **** } FaultStates_t;
 154:main.c        **** 
 155:main.c        **** volatile ConfigStates_t ConfigState;
 156:main.c        **** volatile uint8 FaultState;
 157:main.c        **** volatile uint8 ConfigSequence;
 158:main.c        **** volatile uint16 ChecksumErrors;
 159:main.c        **** volatile int16 Current;
 160:main.c        **** volatile float PWM;
 161:main.c        **** uint8 CurrentI2Cinbuf[20];
 162:main.c        **** 
 163:main.c        **** /* Task stack information */
 164:main.c        **** volatile UBaseType_t uxHighWaterMark_PID;
 165:main.c        **** volatile UBaseType_t uxHighWaterMark_Current;
 166:main.c        **** volatile UBaseType_t uxHighWaterMark_Comm;
 167:main.c        **** 
 168:main.c        **** /* Message buffer lock */
 169:main.c        **** SemaphoreHandle_t Lock;
 170:main.c        **** 
 171:main.c        **** /* --------------------------------------------------------------------- 
 172:main.c        ****  * SPI MESSAGING
 173:main.c        ****  * --------------------------------------------------------------------- */
 174:main.c        **** /* V2 protocol 
 175:main.c        **** 
 176:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 177:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 178:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 179:main.c        **** */
 180:main.c        ****     
 181:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 182:main.c        **** #define MAX_MESSAGE_SIZE 30
 183:main.c        ****     
 184:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 185:main.c        ****    talking.  1000 ticks is 1 second of not talking. */
 186:main.c        **** #define MAX_LAST_MESSAGE_TIME_TICKS 1000
 187:main.c        **** uint32 LastMessageTimeTick;
 188:main.c        **** 
 189:main.c        **** /* Opcodes that can come from the node box software */
 190:main.c        **** typedef enum {
 191:main.c        ****     opUNDEFINED = 0,
 192:main.c        ****     opConfig    = 1,
 193:main.c        ****     opStatus    = 2,
 194:main.c        ****     opSetEnc    = 3,
 195:main.c        ****     opMAX       
 196:main.c        **** } rxMessage_opcodes_t;    
 197:main.c        **** 
 198:main.c        **** /* Sanity check for opcodes */
 199:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 200:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 5


 201:main.c        **** typedef struct { 
 202:main.c        ****     uint8 checksum;        
 203:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 204:main.c        ****     uint8 opcode;     /* Operation (generic overlay for previewing opcode value) */
 205:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 206:main.c        **** 
 207:main.c        **** /* Configuration message, 19 bytes */
 208:main.c        **** typedef struct {
 209:main.c        ****     uint8 checksum;        
 210:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 211:main.c        ****     uint8 opcode;     /* Operation: 01 == config */        
 212:main.c        ****     uint8 sequence;   /* Configuration message sequence number */
 213:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 214:main.c        ****     float Ki;
 215:main.c        ****     float Kd;
 216:main.c        ****     uint8 limit_Total;/* Total drive output limit, +/- percentage */
 217:main.c        ****     uint8 limit_ITerm;/* PID I term output limit, also +/- percentage */
 218:main.c        ****     uint8 effsetdelta;/* PID effective setpoint increment delta, nominally 25 steps */
 219:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 220:main.c        **** 
 221:main.c        **** /* Status message, contains desired position and such values, 12 bytes */
 222:main.c        **** typedef struct {
 223:main.c        ****     uint8  checksum;        
 224:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 225:main.c        ****     uint8  opcode;     /* Operation: 02 == status */
 226:main.c        ****     uint8  enable;     /* Enable/disable PID algorithm */
 227:main.c        ****     int32  setpoint;   /* Setpoint (desired actuator position) */
 228:main.c        ****     int8   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 229:main.c        ****     uint8  clearfaults;/* Set to nonzero to clear all the current faults */
 230:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 231:main.c        ****    
 232:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 233:main.c        **** typedef struct {
 234:main.c        ****     uint8  checksum;        
 235:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 236:main.c        ****     uint8  opcode;     /* Operation: 03 == set encoders */
 237:main.c        ****     int32  setpoint;   /* Setpoint (force an actuator logical position) */
 238:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 239:main.c        **** 
 240:main.c        **** 
 241:main.c        **** /* Wrap the message with an array of bytes */
 242:main.c        **** union {
 243:main.c        ****     uint8               buf[MAX_MESSAGE_SIZE];
 244:main.c        ****     rxMessage_overlay_t overlay;
 245:main.c        ****     rxMessage_config_t  config;
 246:main.c        ****     rxMessage_status_t  status;  
 247:main.c        ****     rxMessage_setenc_t  setenc;
 248:main.c        **** } rxMessage;
 249:main.c        **** 
 250:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 18 byt
 251:main.c        **** typedef struct  {  
 252:main.c        ****     uint8  checksum;   /* Message checksum */    
 253:main.c        ****     uint8  version0;   /* Version byte 0 */ 
 254:main.c        ****     uint8  version1;   /* Version byte 1 */
 255:main.c        ****     uint8  version2;   /* Version byte 2 */
 256:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 257:main.c        ****     uint8  opcode;     /* Echo back of the opcode this response is for, operation: 02 == status */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 6


 258:main.c        ****     uint8  state;      /* Enum value for current device configuration state */ 
 259:main.c        ****     uint8  fault;      /* Bit encoded fields for current fault status */
 260:main.c        ****     uint8  sequence;   /* Echo back the config sequence number currently set */
 261:main.c        ****     uint16 checksum_errors; /* Count of checksum errors */
 262:main.c        ****     int16 current;     /* Motor current consumption (mA) */
 263:main.c        ****     int32 position;    /* Actual actuator position, signed value */ 
 264:main.c        ****     float pwm;         /* PWM value the motor is moving at */     
 265:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 266:main.c        **** 
 267:main.c        **** /* Wrap the message with an array of bytes */
 268:main.c        **** union {    
 269:main.c        ****     uint8       buf[MAX_MESSAGE_SIZE];
 270:main.c        ****     txMessage_t msg;
 271:main.c        **** } txMessage;
 272:main.c        **** 
 273:main.c        **** /* State machine definition for transmit side of messaging */
 274:main.c        **** typedef enum {
 275:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 276:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 277:main.c        **** } txMessageStates_t;
 278:main.c        **** 
 279:main.c        **** txMessageStates_t txMessageState;
 280:main.c        **** 
 281:main.c        **** 
 282:main.c        **** /******************************************************************************/
 283:main.c        **** /* Function prototypes */
 284:main.c        **** int32 GetPosition(void);
 285:main.c        **** /******************************************************************************/
 286:main.c        **** 
 287:main.c        **** 
 288:main.c        **** 
 289:main.c        **** /*******************************************************************************
 290:main.c        **** * Function Name: setupFreeRTOS
 291:main.c        **** ********************************************************************************
 292:main.c        **** * Summary:
 293:main.c        **** *  Hooks the tick and service handlers for the RTOS at runtime.
 294:main.c        **** *
 295:main.c        **** * Parameters: None
 296:main.c        **** * Return: None
 297:main.c        **** *******************************************************************************/
 298:main.c        **** 
 299:main.c        **** extern void xPortPendSVHandler(void);
 300:main.c        **** extern void xPortSysTickHandler(void);
 301:main.c        **** extern void vPortSVCHandler(void);
 302:main.c        **** 
 303:main.c        **** void setupFreeRTOS(void) {
 304:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 305:main.c        ****     
 306:main.c        ****     /* Handler for Cortex Supervisor Call (SVC, formerly SWI) - address 11 */
 307:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SVCall_IRQn, (cyisraddress)vPortSVCHandler );
 308:main.c        ****     
 309:main.c        ****     /* Handler for Cortex PendSV Call - address 14 */
 310:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + PendSV_IRQn, (cyisraddress)xPortPendSVHandler );    
 311:main.c        ****     
 312:main.c        ****     /* Handler for Cortex SYSTICK - address 15 */
 313:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SysTick_IRQn, (cyisraddress)xPortSysTickHandler );
 314:main.c        **** }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 7


 315:main.c        **** 
 316:main.c        **** 
 317:main.c        **** /*******************************************************************************
 318:main.c        **** * Function Name: AssertFault
 319:main.c        **** ********************************************************************************
 320:main.c        **** * Summary:
 321:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 322:main.c        **** *  all faults.
 323:main.c        **** *
 324:main.c        **** * Parameters: FaultStates_t of the fault detected.
 325:main.c        **** * Return: None
 326:main.c        **** *******************************************************************************/
 327:main.c        **** void AssertFault(FaultStates_t fault) {
 328:main.c        ****  
 329:main.c        ****     switch (fault) {
 330:main.c        ****      
 331:main.c        ****         /* Clears all asserted faults */
 332:main.c        ****         case fsNONE:
 333:main.c        ****             FaultState = fsNONE;
 334:main.c        ****             break;        
 335:main.c        ****         
 336:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 337:main.c        ****         default:
 338:main.c        ****             FaultState |= fault;
 339:main.c        ****             break;        
 340:main.c        ****     }    
 341:main.c        **** }
 342:main.c        **** 
 343:main.c        **** 
 344:main.c        **** /*******************************************************************************
 345:main.c        **** * Function Name: ClearFault
 346:main.c        **** ********************************************************************************
 347:main.c        **** * Summary:
 348:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 349:main.c        **** *  all faults.
 350:main.c        **** *
 351:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 352:main.c        **** * Return: None
 353:main.c        **** *******************************************************************************/
 354:main.c        **** void ClearFault(FaultStates_t fault) {
 355:main.c        ****  
 356:main.c        ****     switch (fault) {
 357:main.c        ****      
 358:main.c        ****         /* Clears all asserted faults */
 359:main.c        ****         case fsNONE:
 360:main.c        ****             FaultState = fsNONE;
 361:main.c        ****             break;        
 362:main.c        ****         
 363:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 364:main.c        ****         default:
 365:main.c        ****             FaultState &= ~fault;
 366:main.c        ****             break;        
 367:main.c        ****     }    
 368:main.c        **** }
 369:main.c        **** 
 370:main.c        **** 
 371:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 8


 372:main.c        **** * Function Name: Current_Read_Task
 373:main.c        **** ********************************************************************************
 374:main.c        **** * Summary:
 375:main.c        **** *  RTOS task to read the motor current consumption.
 376:main.c        **** *
 377:main.c        **** * Parameters: None
 378:main.c        **** * Return: None
 379:main.c        **** *******************************************************************************/
 380:main.c        **** void Current_Read_Task(void *arg) {
  29              		.loc 1 380 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 381:main.c        ****     
 382:main.c        ****     float CurrentTemp;
 383:main.c        ****     
 384:main.c        ****     /* Initial high water mark reading */
 385:main.c        ****     uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
  38              		.loc 1 385 0
  39 0002 0020     		movs	r0, #0
  40              	.LVL1:
  41 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
  42              	.LVL2:
  43 0008 0C4B     		ldr	r3, .L3
  44 000a 1860     		str	r0, [r3]
 386:main.c        ****     
 387:main.c        ****     /* Start I2C for Current Monitor */
 388:main.c        ****     I2C_Start();
  45              		.loc 1 388 0
  46 000c FFF7FEFF 		bl	I2C_Start
  47              	.LVL3:
 389:main.c        ****     Init_INA(INA219_I2C_ADDR);
  48              		.loc 1 389 0
  49 0010 4020     		movs	r0, #64
  50 0012 FFF7FEFF 		bl	Init_INA
  51              	.LVL4:
  52              	.L2:
 390:main.c        ****     
 391:main.c        ****     while (1) {
 392:main.c        ****         CurrentTemp = getCurrent_mA(INA219_I2C_ADDR);
  53              		.loc 1 392 0 discriminator 1
  54 0016 4020     		movs	r0, #64
  55 0018 FFF7FEFF 		bl	getCurrent_mA
  56              	.LVL5:
 393:main.c        ****                 
 394:main.c        ****         Current = (int16_t) CurrentTemp;
  57              		.loc 1 394 0 discriminator 1
  58 001c FFF7FEFF 		bl	__aeabi_f2iz
  59              	.LVL6:
  60 0020 00B2     		sxth	r0, r0
  61 0022 074B     		ldr	r3, .L3+4
  62 0024 1880     		strh	r0, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 9


 395:main.c        ****         //AssertFault(fsCurrentRead);
 396:main.c        ****         
 397:main.c        ****         /* Read the current at 2Hz */        
 398:main.c        ****         Sleep(500);
  63              		.loc 1 398 0 discriminator 1
  64 0026 FA20     		movs	r0, #250
  65 0028 4000     		lsls	r0, r0, #1
  66 002a FFF7FEFF 		bl	vTaskDelay
  67              	.LVL7:
 399:main.c        ****         
 400:main.c        ****         /* Get our task stack usage high water mark */    
 401:main.c        ****         uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );   
  68              		.loc 1 401 0 discriminator 1
  69 002e 0020     		movs	r0, #0
  70 0030 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
  71              	.LVL8:
  72 0034 014B     		ldr	r3, .L3
  73 0036 1860     		str	r0, [r3]
  74 0038 EDE7     		b	.L2
  75              	.L4:
  76 003a C046     		.align	2
  77              	.L3:
  78 003c 00000000 		.word	uxHighWaterMark_Current
  79 0040 00000000 		.word	Current
  80              		.cfi_endproc
  81              	.LFE35:
  82              		.size	Current_Read_Task, .-Current_Read_Task
  83              		.section	.text.RSTIsrHandler,"ax",%progbits
  84              		.align	2
  85              		.global	RSTIsrHandler
  86              		.code	16
  87              		.thumb_func
  88              		.type	RSTIsrHandler, %function
  89              	RSTIsrHandler:
  90              	.LFB46:
 402:main.c        ****     }
 403:main.c        **** }
 404:main.c        **** 
 405:main.c        **** /*******************************************************************************
 406:main.c        **** * Function Name: Comm_Task
 407:main.c        **** ********************************************************************************
 408:main.c        **** * Summary:
 409:main.c        **** *  RTOS task to perform the SPI communications.
 410:main.c        **** *
 411:main.c        **** * Parameters: None
 412:main.c        **** * Return: None
 413:main.c        **** *******************************************************************************/
 414:main.c        **** void Comm_Task(void *arg) {
 415:main.c        ****  
 416:main.c        ****     rxMessage_opcodes_t opcode;
 417:main.c        ****     uint8 size;
 418:main.c        ****     uint8 i;
 419:main.c        ****     uint8 checksum;
 420:main.c        ****     uint8 limit;    
 421:main.c        ****     
 422:main.c        ****     /* Initial high water mark reading */
 423:main.c        ****     uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );  
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 10


 424:main.c        ****     
 425:main.c        ****     while (1) {
 426:main.c        ****         //PROBE_Write(1);
 427:main.c        ****         
 428:main.c        ****         /* If the SPI is moving data out right now, skip any touching of the message buffer */
 429:main.c        ****         if (!SPI_1_SpiIsBusBusy()) {
 430:main.c        ****         
 431:main.c        ****             /* In certain states, this thread is responsible for loading the outbound messaging */
 432:main.c        ****             switch (txMessageState) {
 433:main.c        ****              
 434:main.c        ****                 /* Output buffer is clear and ready for loading, rxMessage is (probably) good and n
 435:main.c        ****                 case txmsClear:
 436:main.c        **** 
 437:main.c        ****                     /* Take the lock, set the fields, and release the lock.  If we can't get the lo
 438:main.c        ****                        we have missed this messaging cycle have to skip it.
 439:main.c        ****                        2018-12-18 PMR: At the moment, this is the only task taking the lock so it w
 440:main.c        ****                                        Sometime in the future we might need the lock so I am leavin
 441:main.c        ****                     */
 442:main.c        ****                     if( xSemaphoreTake( Lock, ( TickType_t ) 4 ) == pdTRUE ) {
 443:main.c        ****                         
 444:main.c        ****                         /* Get a few items out of the message before checking the sum */
 445:main.c        ****                         size     = rxMessage.overlay.size;
 446:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 447:main.c        ****                         
 448:main.c        ****                         /* Make sure the size makes sense.  If we have to reset the size it's proba
 449:main.c        ****                         if (size > sizeof(txMessage.buf))
 450:main.c        ****                             size = sizeof(txMessage.buf);                            
 451:main.c        ****                     
 452:main.c        ****                         /* Calculate the checksum by summing the bytes of the entire message, it sh
 453:main.c        ****                         for (i = 0, checksum = 0; i < size; i++)
 454:main.c        ****                             checksum += rxMessage.buf[i]; 
 455:main.c        **** 
 456:main.c        ****                         /* Checksum fault, don't try to process the messgage */
 457:main.c        ****                         if ((checksum & 0xFF) != 0) {
 458:main.c        ****                             
 459:main.c        ****                             txMessage.msg.opcode = opcode;
 460:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 461:main.c        ****                             ChecksumErrors++;
 462:main.c        ****                             
 463:main.c        ****                         /* Message looks fine, process it */
 464:main.c        ****                         } else {
 465:main.c        **** 
 466:main.c        ****                             /* Message opcode must be valid before trying to process the message co
 467:main.c        ****                             if ( rxMessageOpcodeValid(opcode) ) {                            
 468:main.c        ****                             
 469:main.c        ****                                 switch (opcode) {
 470:main.c        ****                                 
 471:main.c        ****                                     case opConfig:
 472:main.c        ****                                         /* Special message to establish settings on the device such
 473:main.c        ****                                     
 474:main.c        ****                                         /* Update the 'reference' values passed down from the serve
 475:main.c        ****                                            values are time interval adjusted */
 476:main.c        ****                                         refKp = rxMessage.config.Kp;
 477:main.c        ****                                         refKi = rxMessage.config.Ki;
 478:main.c        ****                                         refKd = rxMessage.config.Kd;      
 479:main.c        ****                                     
 480:main.c        ****                                         /* PID effective setpoint increment delta value */         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 11


 481:main.c        ****                                         PID_EffSetDelta = rxMessage.config.effsetdelta;
 482:main.c        ****                                            
 483:main.c        ****                                         /* Setup the output limits and stop a jog if one was in pro
 484:main.c        ****                                         Jog = 0;
 485:main.c        ****                                     
 486:main.c        ****                                         /* Clip the limits to 100% duty cycle */
 487:main.c        ****                                         limit = rxMessage.config.limit_Total;
 488:main.c        ****                                         if (limit > 100)
 489:main.c        ****                                             limit = 100;
 490:main.c        ****                                     
 491:main.c        ****                                         outMax_Total = limit;                                      
 492:main.c        ****                                         
 493:main.c        ****                                         limit = rxMessage.config.limit_ITerm;                      
 494:main.c        ****                                         if (limit > 100)
 495:main.c        ****                                             limit = 100;
 496:main.c        ****                                         
 497:main.c        ****                                         outMax_ITerm = limit;
 498:main.c        ****                                         
 499:main.c        ****                                         /* Convert the configured output maximum also into a PWM va
 500:main.c        ****                                         could be set from manual control of the PWM.  
 501:main.c        **** 
 502:main.c        ****                                         outMax_Total ranges from 0 to 100% of power delivery, which
 503:main.c        ****                                         convert it into a value symmetrically above and below the "
 504:main.c        ****                                         point value of 50 */    
 505:main.c        ****                                         pwmLimit = (outMax_Total/100 * 50);
 506:main.c        ****                                         pwmMax = 50 + pwmLimit;
 507:main.c        ****                                         pwmMin = 50 - pwmLimit;
 508:main.c        ****                                     
 509:main.c        ****                                         /* We have received a config message, so signal to the PID 
 510:main.c        ****                                         ConfigState = csReady;  
 511:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 512:main.c        ****                                     
 513:main.c        ****                                         /* Clear all the faults when reconfigured */
 514:main.c        ****                                         ClearFault(fsNONE);
 515:main.c        ****                                         break;
 516:main.c        **** 
 517:main.c        ****                                     case opStatus:
 518:main.c        ****                                         /* The normal message telling us where to go, how much to j
 519:main.c        ****                                         PID_Enabled = (bool) rxMessage.status.enable;
 520:main.c        ****                                         
 521:main.c        ****                                         /* If we are commanded to move somewhere else, remember whe
 522:main.c        ****                                         if (PID_Setpoint != rxMessage.status.setpoint) {
 523:main.c        ****                                             
 524:main.c        ****                                             /* Remember where we started */
 525:main.c        ****                                             LastPosition = GetPosition();
 526:main.c        ****                                             
 527:main.c        ****                                             /* Update destination */
 528:main.c        ****                                             PID_Setpoint = rxMessage.status.setpoint;
 529:main.c        ****                                             
 530:main.c        ****                                             /* Initialize the effective setpoint to be equal to whe
 531:main.c        ****                                             it will be incremented/decremented when the PID algorit
 532:main.c        ****                                             PID_EffectiveSetpoint = LastPosition;                  
 533:main.c        ****                                             
 534:main.c        ****                                             /* Reset counting of index marks */
 535:main.c        ****                                             Index_Counter_1_WriteCounter(0);
 536:main.c        ****                                         }                                        
 537:main.c        ****                                     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 12


 538:main.c        ****                                         /* PWM jog value ranges from -50 to 50, where -50 is max-re
 539:main.c        ****                                         Jog = rxMessage.status.jog;                                
 540:main.c        ****                                         break;
 541:main.c        ****                                     
 542:main.c        ****                                     case opSetEnc:
 543:main.c        ****                                         /* The message is telling us what to arbitrarily set the en
 544:main.c        ****                                         Counter_1_WriteCounter(rxMessage.status.setpoint);   
 545:main.c        ****                                         LastPosition = rxMessage.status.setpoint;
 546:main.c        ****                                         break;                                        
 547:main.c        ****                                         
 548:main.c        ****                                     /* No other opcodes are valid */
 549:main.c        ****                                     default:
 550:main.c        ****                                         break;
 551:main.c        ****                                 }                           
 552:main.c        ****                             }                            
 553:main.c        ****                         }
 554:main.c        ****                         
 555:main.c        ****                         /* Get a fresh copy of the position information */
 556:main.c        ****                         Position = GetPosition();
 557:main.c        ****                         
 558:main.c        ****                         /* Fill out the common reponse the same way every time, as a status respons
 559:main.c        ****                         txMessage.msg.checksum = 0;
 560:main.c        ****                         txMessage.msg.version0 = FIRMWARE_REV_0;
 561:main.c        ****                         txMessage.msg.version1 = FIRMWARE_REV_1;
 562:main.c        ****                         txMessage.msg.version2 = FIRMWARE_REV_2;
 563:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 564:main.c        ****                         txMessage.msg.opcode   = opStatus;
 565:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 566:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 567:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 568:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 569:main.c        ****                         txMessage.msg.position = Position;
 570:main.c        ****                         txMessage.msg.pwm      = PWM;
 571:main.c        ****                         txMessage.msg.current  = Current;                            
 572:main.c        ****                         
 573:main.c        ****                         /* Set the checksum in the response */
 574:main.c        ****                         for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 575:main.c        ****                             checksum += txMessage.buf[i]; 
 576:main.c        ****                             
 577:main.c        ****                         /* Take the 2's complement of the sum and put it back in the message */
 578:main.c        ****                         txMessage.msg.checksum = ~checksum + 1;
 579:main.c        ****                             
 580:main.c        ****                         /* Copy the readied buffer out to the FIFO */
 581:main.c        ****                         //TODO: should we clear this here, or at the end of the transmit complete i
 582:main.c        ****                         SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 583:main.c        **** 
 584:main.c        ****                         /* Indicate it's loaded for use */
 585:main.c        ****                         txMessageState = txmsLoaded;
 586:main.c        ****                         
 587:main.c        ****                         /* Clear all the faults if told to */
 588:main.c        ****                         if ((bool) rxMessage.status.clearfaults)
 589:main.c        ****                             ClearFault(fsNONE);
 590:main.c        ****                     
 591:main.c        ****                         /* Release the lock */
 592:main.c        ****                         xSemaphoreGive( Lock );
 593:main.c        ****                     }            
 594:main.c        ****                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 13


 595:main.c        ****                     break;
 596:main.c        ****             
 597:main.c        ****                 /* A message was already readied for transmission, nothing to do here */
 598:main.c        ****                 case txmsLoaded:
 599:main.c        ****                     
 600:main.c        ****                     break;
 601:main.c        ****             }
 602:main.c        ****             
 603:main.c        ****         }
 604:main.c        ****         
 605:main.c        ****         //PROBE_Write(0);
 606:main.c        ****         
 607:main.c        ****         /* Quick sleep, a whole messaging sequence will take maybe 1.5ms */
 608:main.c        ****         Sleep(1);
 609:main.c        ****         
 610:main.c        ****         /* Get our task stack usage high water mark */    
 611:main.c        ****         uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );
 612:main.c        ****     }
 613:main.c        **** }
 614:main.c        ****     
 615:main.c        **** 
 616:main.c        **** 
 617:main.c        **** 
 618:main.c        **** /*******************************************************************************
 619:main.c        **** * Function Name: PWM_Set
 620:main.c        **** ********************************************************************************
 621:main.c        **** * Summary:
 622:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 623:main.c        **** *
 624:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 625:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 626:main.c        **** * Return: None
 627:main.c        **** *******************************************************************************/
 628:main.c        **** void PWM_Set(float dutycycle) {
 629:main.c        ****     
 630:main.c        ****     float drive = dutycycle;
 631:main.c        ****     
 632:main.c        ****     /* Clip to the max PWM drive +/- around 50 */
 633:main.c        ****     if (drive > pwmMax) {
 634:main.c        ****         drive = pwmMax;
 635:main.c        ****     } else if (drive < pwmMin) {
 636:main.c        ****         drive = pwmMin;
 637:main.c        ****     }
 638:main.c        ****     
 639:main.c        ****     PWM_1_WriteCompare(PWM_PCT_TO_COMPARE(drive));    
 640:main.c        **** }
 641:main.c        **** 
 642:main.c        **** /*******************************************************************************
 643:main.c        **** * Function Name: GetPosition
 644:main.c        **** ********************************************************************************
 645:main.c        **** * Summary:
 646:main.c        **** *  Get the physical position value and compensate for negative locations.
 647:main.c        **** *
 648:main.c        **** * Parameters: None
 649:main.c        **** * Return: int32 (signed!) position value
 650:main.c        **** *******************************************************************************/
 651:main.c        **** int32 GetPosition(void) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 14


 652:main.c        ****     
 653:main.c        ****     static volatile uint32 RawPosition;
 654:main.c        ****     static volatile int32 result;
 655:main.c        ****     
 656:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 657:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 658:main.c        ****     
 659:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 660:main.c        ****        underflow and make that into a negative value */
 661:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 662:main.c        ****         
 663:main.c        ****         result = (-1) * ((int32) ENCODER_MAX - (int32) RawPosition);
 664:main.c        ****         
 665:main.c        ****     } else {
 666:main.c        ****      
 667:main.c        ****         /* Value is "positive", treat it normally */
 668:main.c        ****         result = (int32) RawPosition;
 669:main.c        ****     }
 670:main.c        ****     
 671:main.c        ****     /* Update the master copy of position information */
 672:main.c        ****     Position = result;
 673:main.c        ****     return result;
 674:main.c        **** }
 675:main.c        **** 
 676:main.c        **** 
 677:main.c        **** 
 678:main.c        **** /*******************************************************************************
 679:main.c        **** * Function Name: PID_Initialize
 680:main.c        **** ********************************************************************************
 681:main.c        **** * Summary:
 682:main.c        **** *  Setup and reset the PID terms.
 683:main.c        **** *
 684:main.c        **** * Parameters: None
 685:main.c        **** * Return: None
 686:main.c        **** *******************************************************************************/
 687:main.c        **** void PID_Initialize(void) {
 688:main.c        ****     
 689:main.c        ****     /* Get up-to-date position */
 690:main.c        ****     Position = GetPosition();
 691:main.c        ****     LastPosition = Position;
 692:main.c        ****     
 693:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 694:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 695:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 696:main.c        ****     
 697:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 698:main.c        ****        switching from manual to auto frequently */
 699:main.c        ****     ITerm = 0;
 700:main.c        **** }    
 701:main.c        **** 
 702:main.c        **** 
 703:main.c        **** /*******************************************************************************
 704:main.c        **** * Function Name: PID_SetTunings
 705:main.c        **** ********************************************************************************
 706:main.c        **** * Summary:
 707:main.c        **** *  Setup the p, i, and d gain values and scale to the sample time.
 708:main.c        **** *
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 15


 709:main.c        **** * Parameters: Sample time in ms, and Kp, Ki, Kd gains.
 710:main.c        **** * Return: None
 711:main.c        **** *******************************************************************************/
 712:main.c        **** void PID_SetTunings(uint32 newSampleTime, float newKp, float newKi, float newKd) {
 713:main.c        ****     
 714:main.c        ****     if (newSampleTime > 0) {
 715:main.c        ****     
 716:main.c        ****         float sampleTimeInSec = ((float) newSampleTime) / 1000;
 717:main.c        ****     
 718:main.c        ****         kp = newKp;
 719:main.c        ****         ki = newKi * sampleTimeInSec;
 720:main.c        ****         kd = newKd / sampleTimeInSec;        
 721:main.c        ****     }
 722:main.c        **** }
 723:main.c        **** 
 724:main.c        **** 
 725:main.c        **** /*******************************************************************************
 726:main.c        **** * Function Name: PID_Compute
 727:main.c        **** ********************************************************************************
 728:main.c        **** * Summary:
 729:main.c        **** *  Execute a pass through the PID process to create a duty cycle output.
 730:main.c        **** *
 731:main.c        **** * Parameters: Current time and current destination.
 732:main.c        **** * Return: PWM output, in percentage.
 733:main.c        **** *******************************************************************************/
 734:main.c        **** float PID_Compute(uint32 now, uint32 setpoint) {
 735:main.c        ****     
 736:main.c        ****     int32 error, dPosition;
 737:main.c        ****     uint32 timeChange;
 738:main.c        ****         
 739:main.c        ****     if(!inAuto) 
 740:main.c        ****         return 0;
 741:main.c        ****     
 742:main.c        ****     /* Get most up-to-date current position */
 743:main.c        ****     Position = GetPosition();
 744:main.c        ****     
 745:main.c        ****     /* How much time has elapsed since the last pass? */
 746:main.c        ****     timeChange = (now - lastTime);
 747:main.c        ****     
 748:main.c        ****     /* Only do the PID calc if at LEAST 5ms has elapsed */
 749:main.c        ****     if (timeChange >= refSampleTime) {
 750:main.c        **** 
 751:main.c        ****         /* Adjust the gains to the most recent sampling time.  Do it continuously to make sure the 
 752:main.c        ****            in case the cycle runs longer than the normal 5ms. */
 753:main.c        ****         PID_SetTunings(timeChange, refKp, refKi, refKd);
 754:main.c        ****         
 755:main.c        ****         /* Compute all the working error variables */
 756:main.c        ****         error = setpoint - Position;
 757:main.c        ****         ITerm += (ki * error);
 758:main.c        ****         
 759:main.c        ****         /* Clip the I term at a max value for just that term (windup guard) */
 760:main.c        ****         if (ITerm > outMax_ITerm) {
 761:main.c        ****             ITerm = outMax_ITerm;
 762:main.c        ****         } else if (ITerm < -outMax_ITerm) {
 763:main.c        ****             ITerm = -outMax_ITerm;
 764:main.c        ****         }
 765:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 16


 766:main.c        ****         /* Calculate the error term */
 767:main.c        ****         dPosition = (Position - LastPosition);
 768:main.c        **** 
 769:main.c        ****         /* Compute PID Output */
 770:main.c        ****         Output = (kp * error) + ITerm - (kd * dPosition);
 771:main.c        ****         
 772:main.c        ****         /* Clip the output */
 773:main.c        ****         if (Output> outMax_Total) {
 774:main.c        ****             Output = outMax_Total;
 775:main.c        ****         } else if (Output < -outMax_Total) {
 776:main.c        ****             Output = -outMax_Total;
 777:main.c        ****         }
 778:main.c        **** 
 779:main.c        ****         /* Remember some variables for next time */
 780:main.c        ****         LastPosition = Position;
 781:main.c        ****         lastTime = now;        
 782:main.c        ****     }
 783:main.c        ****     
 784:main.c        ****     return Output;    
 785:main.c        **** }
 786:main.c        ****  
 787:main.c        **** /*******************************************************************************
 788:main.c        **** * Function Name: PID_SetMode
 789:main.c        **** ********************************************************************************
 790:main.c        **** * Summary:
 791:main.c        **** *  Sets the PID into automatic or manual mode.
 792:main.c        **** *
 793:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 794:main.c        **** * Return: None
 795:main.c        **** *******************************************************************************/
 796:main.c        **** void PID_SetMode(uint32 Mode) {
 797:main.c        ****     
 798:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 799:main.c        ****     
 800:main.c        ****     if (newAuto && !inAuto) {  
 801:main.c        ****         /*we just went from manual to auto*/
 802:main.c        ****         PID_Initialize();
 803:main.c        ****     }
 804:main.c        ****     
 805:main.c        ****     inAuto = newAuto;
 806:main.c        **** } 
 807:main.c        ****     
 808:main.c        **** /*******************************************************************************
 809:main.c        **** * Function Name: PID_SetDrive
 810:main.c        **** ********************************************************************************
 811:main.c        **** * Summary:
 812:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 813:main.c        **** *
 814:main.c        **** * Parameters: Percentage output to drive the PWM.
 815:main.c        **** * Return: None
 816:main.c        **** *******************************************************************************/
 817:main.c        **** void PID_SetDrive(float percent) {
 818:main.c        **** 
 819:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 820:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 821:main.c        ****     float dutycycle = (percent + 100) / 2;    
 822:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 17


 823:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 824:main.c        ****     PWM_Set(dutycycle);  
 825:main.c        **** }
 826:main.c        **** 
 827:main.c        **** 
 828:main.c        **** 
 829:main.c        **** 
 830:main.c        **** /*******************************************************************************
 831:main.c        **** * Function Name: PID_Task
 832:main.c        **** ********************************************************************************
 833:main.c        **** * Summary:
 834:main.c        **** *  RTOS task to perform the PID calculations.
 835:main.c        **** *
 836:main.c        **** * Parameters: None
 837:main.c        **** * Return: None
 838:main.c        **** *******************************************************************************/
 839:main.c        **** void PID_Task(void *arg) {
 840:main.c        ****     
 841:main.c        ****     /* Sleep this thread 5ms at a time */
 842:main.c        ****     uint32 sleeptime = 5;    
 843:main.c        ****     uint32 now;
 844:main.c        ****     float percent; 
 845:main.c        ****     int32 CurrentPosition, DeltaPosition;
 846:main.c        ****     uint32 CurrentIndexCount;
 847:main.c        ****     
 848:main.c        ****     /* Initial high water mark reading */
 849:main.c        ****     uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );
 850:main.c        ****     
 851:main.c        ****     /* Initial values */
 852:main.c        **** 
 853:main.c        ****     /* These are the 'reference' values passed down from the server, not to be used in-the-raw beca
 854:main.c        ****        values are time interval adjusted */
 855:main.c        ****     refKp = 0;
 856:main.c        ****     refKi = 0;
 857:main.c        ****     refKd = 0;
 858:main.c        ****     
 859:main.c        ****     /* Setup the PID subsystem */
 860:main.c        ****     PID_Initialize();
 861:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);    
 862:main.c        ****     PID_SetMode(PID_MANUAL);
 863:main.c        ****     
 864:main.c        ****     /* Initially default to 100% output max until config tells us otherwise */
 865:main.c        ****     outMax_Total = 100;
 866:main.c        ****     outMax_ITerm = 100;
 867:main.c        **** 
 868:main.c        ****     /* Init the PWM limits the same way, full maximums */
 869:main.c        ****     pwmLimit = 50;   // This is a + or - value
 870:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 871:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 872:main.c        ****     
 873:main.c        ****     /* Start counting time at 0ms */
 874:main.c        ****     now = 0;
 875:main.c        ****     
 876:main.c        ****     /* Start off disabled */
 877:main.c        ****     PID_Setpoint = 0;  
 878:main.c        ****     PID_EffectiveSetpoint = 0;
 879:main.c        ****     PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 18


 880:main.c        ****     PID_Was_Enabled = false;
 881:main.c        ****     PID_Enabled = false;
 882:main.c        ****     
 883:main.c        ****     while (1) {
 884:main.c        ****         
 885:main.c        ****         PROBE_Write(1);
 886:main.c        ****               
 887:main.c        ****         /* ------------------------------------------------------------------------------------ */
 888:main.c        ****         /* At the top of the PID loop, refresh the counter of the watchdog to indicate the RTOS 
 889:main.c        ****            thread is still alive.  Were the RTOS to crash or the motion thread to die, the CPU 
 890:main.c        ****            will be reset after 2 seconds. */
 891:main.c        ****         WDT_COUNT1_REFRESH();        
 892:main.c        ****         /* ------------------------------------------------------------------------------------ */
 893:main.c        **** 
 894:main.c        ****         
 895:main.c        ****         /* If the server hasn't talked to us in a while (no messages on the SPI), 
 896:main.c        ****            take preventative action and abandon any moves in progress.  When the uint32
 897:main.c        ****            overflows, "now" will be (temporarily) less than the last timestamped message,
 898:main.c        ****            so handle that too */
 899:main.c        ****         now = xTaskGetTickCount();
 900:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 901:main.c        ****              (now < LastMessageTimeTick) ) {
 902:main.c        ****             
 903:main.c        ****             /* Stop all motion */
 904:main.c        ****             PWM_Set(PWM_JOG_NEUTRAL);
 905:main.c        ****             PID_Enabled = false;
 906:main.c        ****             
 907:main.c        ****             /* Clear the values that would drive motion on the next message arrival.  Assume the ne
 908:main.c        ****                in which case we want to be neutral. */
 909:main.c        ****             Jog = 0;
 910:main.c        **** 
 911:main.c        ****         /* Only run the PID algorithm if we have been configured by the nodebox software */
 912:main.c        ****         } else if (ConfigState == csReady) {
 913:main.c        ****             
 914:main.c        ****             /* Enable the drive outputs for the home and index once configured, otherwise they
 915:main.c        ****                can screw up the boot pins on the BeagleBoneBlack */
 916:main.c        ****             HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 917:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 918:main.c        ****         
 919:main.c        ****             /* If the server is asking us to jog, do that instead of PID */
 920:main.c        ****             if (!PID_Enabled) {                   
 921:main.c        ****                 
 922:main.c        ****                 /* When we start homing, it looks like a big negative jog.  Setup to watch the inde
 923:main.c        ****                    so we can assert faults if they aren't changing. */                
 924:main.c        ****                 if ((Jog != LastJog) && (Jog != 0)) {
 925:main.c        ****                     
 926:main.c        ****                     /* Update the 'last' jog value, so we don't fall into this reset code over and 
 927:main.c        ****                     LastJog = Jog;
 928:main.c        ****                     
 929:main.c        ****                     /* Remember where we started */
 930:main.c        ****                     LastPosition = GetPosition();
 931:main.c        ****                     
 932:main.c        ****                     /* Reset counting of index marks */
 933:main.c        ****                     Index_Counter_1_WriteCounter(0);
 934:main.c        ****                 }                
 935:main.c        ****                 
 936:main.c        ****                 /* Drive in the direction and speed the server told us */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 19


 937:main.c        ****                 PWM_Set(PWM_JOG_NEUTRAL + Jog);
 938:main.c        **** 
 939:main.c        ****                 /* Watch for stuck signals while we are moving */
 940:main.c        ****                 if ( Jog != 0 ) {
 941:main.c        ****                 
 942:main.c        ****                     /* If we have moved a good distance away from the origin point, compare index c
 943:main.c        ****                        looking for discrepancy. */
 944:main.c        ****                     CurrentPosition = GetPosition();
 945:main.c        ****                     DeltaPosition = labs( CurrentPosition - LastPosition );
 946:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 947:main.c        ****                     
 948:main.c        ****                     /* Look for index failure: the index counter should have incremented by at leas
 949:main.c        ****                        homing is complete */
 950:main.c        ****                     if (homingDone) {
 951:main.c        ****                         if (CurrentIndexCount == 0)
 952:main.c        ****                             if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 953:main.c        ****                                 AssertFault(fsIndex);        
 954:main.c        ****                     }
 955:main.c        ****                     
 956:main.c        ****                     /* Look for encoder failure: the encoders should register some amount of moveme
 957:main.c        ****                        but only if homing is totally done */
 958:main.c        ****                     if (homingDone) {
 959:main.c        ****                         if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 960:main.c        ****                             AssertFault(fsEncoder);
 961:main.c        ****                     }
 962:main.c        ****                 }
 963:main.c        ****                 
 964:main.c        ****             }
 965:main.c        ****             
 966:main.c        ****             /* Handle mode switching */
 967:main.c        ****             if (!PID_Was_Enabled && PID_Enabled) {
 968:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 969:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 970:main.c        ****                 PID_SetMode(PID_MANUAL);                
 971:main.c        ****             } else {
 972:main.c        ****                 // No mode change happened   
 973:main.c        ****             }
 974:main.c        ****             
 975:main.c        ****             /* Save value for next cycle */
 976:main.c        ****             PID_Was_Enabled = PID_Enabled;
 977:main.c        ****             
 978:main.c        ****             /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer
 979:main.c        ****             actual setpoint, incremented once per cycle of this algorithm.  
 980:main.c        ****         
 981:main.c        ****             Consider a move of +2000 counts from position 0 to 2000: 
 982:main.c        ****             
 983:main.c        ****             1) The setpoint will change to 2000.
 984:main.c        ****             2) The effective setpoint is initialized to the current position, plus 25 counts = 2025
 985:main.c        ****             3) Calculate the PID and return.
 986:main.c        ****             4) The next time PID_Compute is called, increment the effective setpoint by 25 counts =
 987:main.c        ****             5) Calculate the PID and return.
 988:main.c        ****             6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.       
 989:main.c        ****             */
 990:main.c        **** 
 991:main.c        ****             if (PID_Enabled) {
 992:main.c        ****                 
 993:main.c        ****                 if (PID_EffSetDelta == 0) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 20


 994:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;
 995:main.c        ****                 } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 996:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;                                          
 997:main.c        ****                 } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 998:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 999:main.c        ****                 } else {
1000:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
1001:main.c        ****                 }
1002:main.c        ****                 
1003:main.c        ****                 /* Run the PID algorithm against the effective setpoint */
1004:main.c        ****                 percent = PID_Compute(now, PID_EffectiveSetpoint);
1005:main.c        ****             
1006:main.c        ****                 /* Use the global PWM value to communicate back the percentage of drive to the serv
1007:main.c        ****                 PWM = percent;
1008:main.c        ****                 
1009:main.c        ****                 /* Put the PID drive percentage out on the wire */
1010:main.c        ****                 PID_SetDrive(percent);
1011:main.c        ****                 
1012:main.c        ****             } else {
1013:main.c        ****                 /* If disabled, just return 0 */
1014:main.c        ****                 PWM = 0;
1015:main.c        ****             }
1016:main.c        ****             
1017:main.c        ****         }
1018:main.c        ****         
1019:main.c        ****         PROBE_Write(0);
1020:main.c        ****         
1021:main.c        ****         /* Run the loop every 5ms, which is 200Hz update rate */
1022:main.c        ****         Sleep(sleeptime);
1023:main.c        **** 
1024:main.c        ****         /* Get our task stack usage high water mark */    
1025:main.c        ****         uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );        
1026:main.c        ****     }
1027:main.c        ****    
1028:main.c        **** }
1029:main.c        **** 
1030:main.c        **** 
1031:main.c        **** 
1032:main.c        **** /*******************************************************************************
1033:main.c        **** * Function Name: main
1034:main.c        **** ********************************************************************************
1035:main.c        **** * Summary:
1036:main.c        **** *  Setup tasks, interrupts, and get the RTOS running.
1037:main.c        **** *
1038:main.c        **** * Parameters: None
1039:main.c        **** * Return: NEVER!
1040:main.c        **** *******************************************************************************/
1041:main.c        **** int main(void) {
1042:main.c        ****     
1043:main.c        ****     uint8 s;
1044:main.c        ****     setupFreeRTOS();
1045:main.c        **** 
1046:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
1047:main.c        ****        microprocessor   There is a race condition here: unless the actuator is on a home
1048:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
1049:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
1050:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 21


1051:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
1052:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
1053:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
1054:main.c        **** 
1055:main.c        ****     /* Create tasks.  Priority value is set such that higher numbers have higher priority.
1056:main.c        ****     https://www.freertos.org/RTOS-task-priority.html
1057:main.c        ****     */
1058:main.c        ****     
1059:main.c        ****     xTaskCreate(
1060:main.c        ****         PID_Task,       /* Task function */
1061:main.c        ****         "PID",          /* Task name (string) */
1062:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 24 bytes) */
1063:main.c        ****         0,              /* No param passed to task function */
1064:main.c        ****         3,              /* High priority */
1065:main.c        ****         0 );            /* Not using the task handle */    
1066:main.c        ****     
1067:main.c        ****     xTaskCreate(
1068:main.c        ****         Comm_Task,       /* Task function */
1069:main.c        ****         "Communications", /* Task name (string) */
1070:main.c        ****         100,            /* Task stack, allocated from heap (measured 12/27 to be 78 bytes)  */
1071:main.c        ****         0,              /* No param passed to task function */
1072:main.c        ****         2,              /* Medium priority */
1073:main.c        ****         0 );            /* Not using the task handle */    
1074:main.c        **** 
1075:main.c        ****     xTaskCreate(
1076:main.c        ****         Current_Read_Task, /* Task function */
1077:main.c        ****         "Read Current", /* Task name (string) */
1078:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 40 bytes) */
1079:main.c        ****         0,              /* No param passed to task function */
1080:main.c        ****         1,              /* Low priority */
1081:main.c        ****         0 );            /* Not using the task handle */    
1082:main.c        ****     
1083:main.c        ****     /********************************************************************** 
1084:main.c        ****     * Message buffer mutex
1085:main.c        ****     **********************************************************************/
1086:main.c        ****     Lock = xSemaphoreCreateMutex();
1087:main.c        **** 
1088:main.c        ****     /* If we can't create the lock, flash the light and hold here */
1089:main.c        ****     if( Lock == NULL ) {
1090:main.c        ****         s = 1;
1091:main.c        ****         
1092:main.c        ****         while(1) {
1093:main.c        ****             s = !s;
1094:main.c        ****             LED_Write(s); 
1095:main.c        ****             CyDelay(1000u);                    
1096:main.c        ****         }
1097:main.c        ****     }
1098:main.c        ****     
1099:main.c        ****     
1100:main.c        ****     /********************************************************************** 
1101:main.c        ****     * Interrupts
1102:main.c        ****     **********************************************************************/
1103:main.c        ****     
1104:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
1105:main.c        ****     isr_home_StartEx(HomeIsrHandler);
1106:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
1107:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 22


1108:main.c        ****     /* Setup the SPI slave select interrupt ISR */
1109:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
1110:main.c        ****     
1111:main.c        ****     /* Changes initial priority for the interrupts */
1112:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
1113:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
1114:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
1115:main.c        **** 
1116:main.c        ****     /* Enable the global interrupt */
1117:main.c        ****     CyGlobalIntEnable;
1118:main.c        ****     
1119:main.c        ****     
1120:main.c        ****     
1121:main.c        ****     /********************************************************************** 
1122:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
1123:main.c        ****     **********************************************************************/
1124:main.c        **** 
1125:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
1126:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
1127:main.c        ****        when you hit a breakpoint. */
1128:main.c        **** 
1129:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
1130:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
1131:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
1132:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
1133:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
1134:main.c        **** 	
1135:main.c        **** 	/* Enable WDT counter 1 */
1136:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
1137:main.c        **** 	
1138:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
1139:main.c        **** 	CySysWdtLock();
1140:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
1141:main.c        **** 	CySysWdtUnlock();        
1142:main.c        **** #endif    
1143:main.c        **** 
1144:main.c        ****     
1145:main.c        ****     /*********************************************************************** 
1146:main.c        ****     * Start the various subsystems.
1147:main.c        ****     ***********************************************************************/
1148:main.c        ****     I2C_Start();
1149:main.c        ****     CyDelay(100u);
1150:main.c        ****     SPI_1_Start();
1151:main.c        ****     
1152:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
1153:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
1154:main.c        ****     PWM_1_Start();
1155:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
1156:main.c        ****     PWM_Set(PWM_IDLE);   
1157:main.c        ****     
1158:main.c        ****     /* Default the jog value to neutral (no movement) */
1159:main.c        ****     Jog = 0;
1160:main.c        ****     
1161:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
1162:main.c        ****     homingDone = false;
1163:main.c        ****    
1164:main.c        ****     /* Start counting the quadrature encoding */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 23


1165:main.c        ****     Counter_1_Start();    
1166:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
1167:main.c        ****     LastPosition = ENCODER_MAX;
1168:main.c        ****     
1169:main.c        ****     /* Clear and start the index mark counter */
1170:main.c        ****     Index_Counter_1_Start();
1171:main.c        ****     Index_Counter_1_WriteCounter(0);
1172:main.c        ****      
1173:main.c        ****     /* Set some initial values */
1174:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
1175:main.c        ****     
1176:main.c        ****     /* Start off unconfigured */
1177:main.c        ****     ConfigState = csUnconfig;  
1178:main.c        ****     ConfigSequence = 0;
1179:main.c        ****     ChecksumErrors = 0;
1180:main.c        ****    
1181:main.c        ****     /***********************************************************************
1182:main.c        ****     * Start the RTOS task scheduler
1183:main.c        ****     ***********************************************************************/
1184:main.c        ****     vTaskStartScheduler();
1185:main.c        ****    
1186:main.c        ****     /***********************************************************************
1187:main.c        ****     *  We should never reach this
1188:main.c        ****     ***********************************************************************/
1189:main.c        ****     return 1;       
1190:main.c        **** }
1191:main.c        **** 
1192:main.c        **** /*******************************************************************************
1193:main.c        **** * Function Name: RSTIsrHandler
1194:main.c        **** ********************************************************************************
1195:main.c        **** * Summary:
1196:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1197:main.c        **** *  Clears a pending Interrupt.
1198:main.c        **** *  Clears a pin Interrupt.
1199:main.c        **** *
1200:main.c        **** * Parameters: None
1201:main.c        **** * Return: None
1202:main.c        **** *******************************************************************************/
1203:main.c        **** CY_ISR(RSTIsrHandler) {
  91              		.loc 1 1203 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 10B5     		push	{r4, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
1204:main.c        ****     
1205:main.c        ****     /* Clear pending Interrupt */
1206:main.c        ****     isr_rst_encoder_ClearPending(); 
  99              		.loc 1 1206 0
 100 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
 101              	.LVL9:
1207:main.c        ****     
1208:main.c        ****     /* Clear pin Interrupt */
1209:main.c        ****     Reset_Encoder_ClearInterrupt();
 102              		.loc 1 1209 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 24


 103 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
 104              	.LVL10:
1210:main.c        ****     
1211:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1212:main.c        ****     Counter_1_WriteCounter(0);
 105              		.loc 1 1212 0
 106 000a 0020     		movs	r0, #0
 107 000c FFF7FEFF 		bl	Counter_1_WriteCounter
 108              	.LVL11:
1213:main.c        ****     
1214:main.c        ****     /* Clear the index counter */
1215:main.c        ****     Index_Counter_1_WriteCounter(0);  
 109              		.loc 1 1215 0
 110 0010 0020     		movs	r0, #0
 111 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 112              	.LVL12:
1216:main.c        ****     
1217:main.c        ****     /* When we hit the index mark, homing is complete */
1218:main.c        ****     homingDone = true;    
 113              		.loc 1 1218 0
 114 0016 0122     		movs	r2, #1
 115 0018 014B     		ldr	r3, .L6
 116 001a 1A70     		strb	r2, [r3]
1219:main.c        **** }
 117              		.loc 1 1219 0
 118              		@ sp needed
 119 001c 10BD     		pop	{r4, pc}
 120              	.L7:
 121 001e C046     		.align	2
 122              	.L6:
 123 0020 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE46:
 126              		.size	RSTIsrHandler, .-RSTIsrHandler
 127              		.section	.text.HomeIsrHandler,"ax",%progbits
 128              		.align	2
 129              		.global	HomeIsrHandler
 130              		.code	16
 131              		.thumb_func
 132              		.type	HomeIsrHandler, %function
 133              	HomeIsrHandler:
 134              	.LFB47:
1220:main.c        **** 
1221:main.c        **** /*******************************************************************************
1222:main.c        **** * Function Name: HomeIsrHandler
1223:main.c        **** ********************************************************************************
1224:main.c        **** * Summary:
1225:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1226:main.c        **** *  Clears a pending Interrupt.
1227:main.c        **** *  Clears a pin Interrupt.
1228:main.c        **** *
1229:main.c        **** * Parameters: None
1230:main.c        **** * Return: None
1231:main.c        **** *******************************************************************************/
1232:main.c        **** CY_ISR(HomeIsrHandler) {
 135              		.loc 1 1232 0
 136              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 25


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
1233:main.c        ****     
1234:main.c        ****     /* Clear pending Interrupt */
1235:main.c        ****     isr_home_ClearPending(); 
 143              		.loc 1 1235 0
 144 0002 FFF7FEFF 		bl	isr_home_ClearPending
 145              	.LVL13:
1236:main.c        ****     
1237:main.c        ****     /* Clear pin Interrupt */
1238:main.c        ****     HOME_IN_ClearInterrupt();
 146              		.loc 1 1238 0
 147 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
 148              	.LVL14:
1239:main.c        **** 
1240:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1241:main.c        ****     Counter_1_WriteCounter(0);
 149              		.loc 1 1241 0
 150 000a 0020     		movs	r0, #0
 151 000c FFF7FEFF 		bl	Counter_1_WriteCounter
 152              	.LVL15:
1242:main.c        ****     
1243:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1244:main.c        ****     homingDone = false;
 153              		.loc 1 1244 0
 154 0010 0022     		movs	r2, #0
 155 0012 014B     		ldr	r3, .L9
 156 0014 1A70     		strb	r2, [r3]
1245:main.c        **** }
 157              		.loc 1 1245 0
 158              		@ sp needed
 159 0016 10BD     		pop	{r4, pc}
 160              	.L10:
 161              		.align	2
 162              	.L9:
 163 0018 00000000 		.word	.LANCHOR0
 164              		.cfi_endproc
 165              	.LFE47:
 166              		.size	HomeIsrHandler, .-HomeIsrHandler
 167              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 168              		.align	2
 169              		.global	SPI_SS_IsrHandler
 170              		.code	16
 171              		.thumb_func
 172              		.type	SPI_SS_IsrHandler, %function
 173              	SPI_SS_IsrHandler:
 174              	.LFB48:
1246:main.c        **** 
1247:main.c        **** 
1248:main.c        **** /*******************************************************************************
1249:main.c        **** * Function Name: SPI_SS_IsrHandler
1250:main.c        **** ********************************************************************************
1251:main.c        **** * Summary:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 26


1252:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1253:main.c        **** *  Clears a pin Interrupt.
1254:main.c        **** *
1255:main.c        **** * Parameters: None
1256:main.c        **** * Return: None
1257:main.c        **** *******************************************************************************/
1258:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 175              		.loc 1 1258 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 10B5     		push	{r4, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
1259:main.c        ****     
1260:main.c        ****     uint32 i;
1261:main.c        ****     
1262:main.c        ****     /* Clear SPI slave select pin Interrupt */
1263:main.c        ****     spi_ss_ClearInterrupt();
 183              		.loc 1 1263 0
 184 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 185              	.LVL16:
1264:main.c        ****     
1265:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1266:main.c        ****     if (!spi_ss_Read()) 
 186              		.loc 1 1266 0
 187 0006 FFF7FEFF 		bl	spi_ss_Read
 188              	.LVL17:
 189 000a 0028     		cmp	r0, #0
 190 000c 1CD0     		beq	.L11
1267:main.c        ****         return;
1268:main.c        ****    
1269:main.c        ****     /* Update the last message tick timer */
1270:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
 191              		.loc 1 1270 0
 192 000e FFF7FEFF 		bl	xTaskGetTickCount
 193              	.LVL18:
 194 0012 0E4B     		ldr	r3, .L16
 195 0014 1860     		str	r0, [r3]
1271:main.c        **** 
1272:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1273:main.c        ****        check the messaging state before resetting the buffers */
1274:main.c        ****     switch (txMessageState) {
 196              		.loc 1 1274 0
 197 0016 0E4B     		ldr	r3, .L16+4
 198 0018 1B78     		ldrb	r3, [r3]
 199 001a 012B     		cmp	r3, #1
 200 001c 14D1     		bne	.L11
1275:main.c        ****      
1276:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1277:main.c        ****         case txmsClear:
1278:main.c        ****             break;
1279:main.c        ****      
1280:main.c        ****         /* A message was readied for transmission */
1281:main.c        ****         case txmsLoaded:
1282:main.c        ****          
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 27


1283:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1284:main.c        ****             
1285:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1286:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 201              		.loc 1 1286 0
 202 001e 1E22     		movs	r2, #30
 203 0020 0021     		movs	r1, #0
 204 0022 0C48     		ldr	r0, .L16+8
 205 0024 FFF7FEFF 		bl	memset
 206              	.LVL19:
1287:main.c        **** 
1288:main.c        ****             /* Message from the master is completely clocked in by now */     
1289:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 207              		.loc 1 1289 0
 208 0028 0024     		movs	r4, #0
 209 002a 04E0     		b	.L14
 210              	.LVL20:
 211              	.L15:
1290:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 212              		.loc 1 1290 0 discriminator 3
 213 002c FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 214              	.LVL21:
 215 0030 094B     		ldr	r3, .L16+12
 216 0032 1855     		strb	r0, [r3, r4]
1289:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 217              		.loc 1 1289 0 discriminator 3
 218 0034 0134     		adds	r4, r4, #1
 219              	.LVL22:
 220              	.L14:
1289:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 221              		.loc 1 1289 0 is_stmt 0 discriminator 1
 222 0036 1D2C     		cmp	r4, #29
 223 0038 F8D9     		bls	.L15
1291:main.c        ****             }
1292:main.c        ****             
1293:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1294:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 224              		.loc 1 1294 0 is_stmt 1
 225 003a FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 226              	.LVL23:
1295:main.c        ****             
1296:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1297:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 227              		.loc 1 1297 0
 228 003e FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 229              	.LVL24:
1298:main.c        ****             
1299:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1300:main.c        ****             txMessageState = txmsClear;        
 230              		.loc 1 1300 0
 231 0042 0022     		movs	r2, #0
 232 0044 024B     		ldr	r3, .L16+4
 233 0046 1A70     		strb	r2, [r3]
 234              	.LVL25:
 235              	.L11:
1301:main.c        ****             break;
1302:main.c        ****             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 28


1303:main.c        ****     } 
1304:main.c        **** }
 236              		.loc 1 1304 0
 237              		@ sp needed
 238 0048 10BD     		pop	{r4, pc}
 239              	.L17:
 240 004a C046     		.align	2
 241              	.L16:
 242 004c 00000000 		.word	LastMessageTimeTick
 243 0050 00000000 		.word	txMessageState
 244 0054 00000000 		.word	txMessage
 245 0058 00000000 		.word	rxMessage
 246              		.cfi_endproc
 247              	.LFE48:
 248              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 249              		.section	.text.setupFreeRTOS,"ax",%progbits
 250              		.align	2
 251              		.global	setupFreeRTOS
 252              		.code	16
 253              		.thumb_func
 254              		.type	setupFreeRTOS, %function
 255              	setupFreeRTOS:
 256              	.LFB32:
 303:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 257              		.loc 1 303 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 10B5     		push	{r4, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 4, -8
 264              		.cfi_offset 14, -4
 307:main.c        ****     
 265              		.loc 1 307 0
 266 0002 0649     		ldr	r1, .L19
 267 0004 0B20     		movs	r0, #11
 268 0006 FFF7FEFF 		bl	CyIntSetSysVector
 269              	.LVL26:
 310:main.c        ****     
 270              		.loc 1 310 0
 271 000a 0549     		ldr	r1, .L19+4
 272 000c 0E20     		movs	r0, #14
 273 000e FFF7FEFF 		bl	CyIntSetSysVector
 274              	.LVL27:
 313:main.c        **** }
 275              		.loc 1 313 0
 276 0012 0449     		ldr	r1, .L19+8
 277 0014 0F20     		movs	r0, #15
 278 0016 FFF7FEFF 		bl	CyIntSetSysVector
 279              	.LVL28:
 314:main.c        **** 
 280              		.loc 1 314 0
 281              		@ sp needed
 282 001a 10BD     		pop	{r4, pc}
 283              	.L20:
 284              		.align	2
 285              	.L19:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 29


 286 001c 00000000 		.word	vPortSVCHandler
 287 0020 00000000 		.word	xPortPendSVHandler
 288 0024 00000000 		.word	xPortSysTickHandler
 289              		.cfi_endproc
 290              	.LFE32:
 291              		.size	setupFreeRTOS, .-setupFreeRTOS
 292              		.section	.text.AssertFault,"ax",%progbits
 293              		.align	2
 294              		.global	AssertFault
 295              		.code	16
 296              		.thumb_func
 297              		.type	AssertFault, %function
 298              	AssertFault:
 299              	.LFB33:
 327:main.c        ****  
 300              		.loc 1 327 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305              	.LVL29:
 329:main.c        ****      
 306              		.loc 1 329 0
 307 0000 0028     		cmp	r0, #0
 308 0002 03D1     		bne	.L25
 333:main.c        ****             break;        
 309              		.loc 1 333 0
 310 0004 0022     		movs	r2, #0
 311 0006 044B     		ldr	r3, .L26
 312 0008 1A70     		strb	r2, [r3]
 334:main.c        ****         
 313              		.loc 1 334 0
 314 000a 03E0     		b	.L21
 315              	.L25:
 338:main.c        ****             break;        
 316              		.loc 1 338 0
 317 000c 024B     		ldr	r3, .L26
 318 000e 1A78     		ldrb	r2, [r3]
 319 0010 1043     		orrs	r0, r2
 320              	.LVL30:
 321 0012 1870     		strb	r0, [r3]
 322              	.L21:
 341:main.c        **** 
 323              		.loc 1 341 0
 324              		@ sp needed
 325 0014 7047     		bx	lr
 326              	.L27:
 327 0016 C046     		.align	2
 328              	.L26:
 329 0018 00000000 		.word	FaultState
 330              		.cfi_endproc
 331              	.LFE33:
 332              		.size	AssertFault, .-AssertFault
 333              		.section	.text.ClearFault,"ax",%progbits
 334              		.align	2
 335              		.global	ClearFault
 336              		.code	16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 30


 337              		.thumb_func
 338              		.type	ClearFault, %function
 339              	ClearFault:
 340              	.LFB34:
 354:main.c        ****  
 341              		.loc 1 354 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL31:
 356:main.c        ****      
 347              		.loc 1 356 0
 348 0000 0028     		cmp	r0, #0
 349 0002 03D1     		bne	.L32
 360:main.c        ****             break;        
 350              		.loc 1 360 0
 351 0004 0022     		movs	r2, #0
 352 0006 044B     		ldr	r3, .L33
 353 0008 1A70     		strb	r2, [r3]
 361:main.c        ****         
 354              		.loc 1 361 0
 355 000a 03E0     		b	.L28
 356              	.L32:
 365:main.c        ****             break;        
 357              		.loc 1 365 0
 358 000c 024A     		ldr	r2, .L33
 359 000e 1378     		ldrb	r3, [r2]
 360 0010 8343     		bics	r3, r0
 361 0012 1370     		strb	r3, [r2]
 362              	.L28:
 368:main.c        **** 
 363              		.loc 1 368 0
 364              		@ sp needed
 365 0014 7047     		bx	lr
 366              	.L34:
 367 0016 C046     		.align	2
 368              	.L33:
 369 0018 00000000 		.word	FaultState
 370              		.cfi_endproc
 371              	.LFE34:
 372              		.size	ClearFault, .-ClearFault
 373              		.global	__aeabi_fcmpgt
 374              		.global	__aeabi_fcmplt
 375              		.global	__aeabi_fmul
 376              		.global	__aeabi_f2uiz
 377              		.section	.text.PWM_Set,"ax",%progbits
 378              		.align	2
 379              		.global	PWM_Set
 380              		.code	16
 381              		.thumb_func
 382              		.type	PWM_Set, %function
 383              	PWM_Set:
 384              	.LFB37:
 628:main.c        ****     
 385              		.loc 1 628 0
 386              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 31


 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LVL32:
 390 0000 70B5     		push	{r4, r5, r6, lr}
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 4, -16
 393              		.cfi_offset 5, -12
 394              		.cfi_offset 6, -8
 395              		.cfi_offset 14, -4
 396 0002 051C     		adds	r5, r0, #0
 397              	.LVL33:
 633:main.c        ****         drive = pwmMax;
 398              		.loc 1 633 0
 399 0004 0C4B     		ldr	r3, .L37
 400 0006 1C68     		ldr	r4, [r3]
 401 0008 211C     		adds	r1, r4, #0
 402 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 403              	.LVL34:
 404 000e 0028     		cmp	r0, #0
 405 0010 08D1     		bne	.L36
 635:main.c        ****         drive = pwmMin;
 406              		.loc 1 635 0
 407 0012 0A4B     		ldr	r3, .L37+4
 408 0014 1C68     		ldr	r4, [r3]
 409 0016 211C     		adds	r1, r4, #0
 410 0018 281C     		adds	r0, r5, #0
 411 001a FFF7FEFF 		bl	__aeabi_fcmplt
 412              	.LVL35:
 413 001e 0028     		cmp	r0, #0
 414 0020 00D1     		bne	.L36
 630:main.c        ****     
 415              		.loc 1 630 0
 416 0022 2C1C     		adds	r4, r5, #0
 417              	.L36:
 418              	.LVL36:
 639:main.c        **** }
 419              		.loc 1 639 0
 420 0024 8321     		movs	r1, #131
 421 0026 C905     		lsls	r1, r1, #23
 422 0028 201C     		adds	r0, r4, #0
 423 002a FFF7FEFF 		bl	__aeabi_fmul
 424              	.LVL37:
 425 002e FFF7FEFF 		bl	__aeabi_f2uiz
 426              	.LVL38:
 427 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 428              	.LVL39:
 640:main.c        **** 
 429              		.loc 1 640 0
 430              		@ sp needed
 431              	.LVL40:
 432              	.LVL41:
 433 0036 70BD     		pop	{r4, r5, r6, pc}
 434              	.L38:
 435              		.align	2
 436              	.L37:
 437 0038 00000000 		.word	pwmMax
 438 003c 00000000 		.word	pwmMin
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 32


 439              		.cfi_endproc
 440              	.LFE37:
 441              		.size	PWM_Set, .-PWM_Set
 442              		.section	.text.GetPosition,"ax",%progbits
 443              		.align	2
 444              		.global	GetPosition
 445              		.code	16
 446              		.thumb_func
 447              		.type	GetPosition, %function
 448              	GetPosition:
 449              	.LFB38:
 651:main.c        ****     
 450              		.loc 1 651 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454 0000 10B5     		push	{r4, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 657:main.c        ****     
 458              		.loc 1 657 0
 459 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 460              	.LVL42:
 461 0006 0B4B     		ldr	r3, .L42
 462 0008 1860     		str	r0, [r3]
 661:main.c        ****         
 463              		.loc 1 661 0
 464 000a 1A68     		ldr	r2, [r3]
 465 000c 0A4B     		ldr	r3, .L42+4
 466 000e 9A42     		cmp	r2, r3
 467 0010 06D9     		bls	.L40
 663:main.c        ****         
 468              		.loc 1 663 0
 469 0012 084A     		ldr	r2, .L42
 470 0014 1368     		ldr	r3, [r2]
 471 0016 0949     		ldr	r1, .L42+8
 472 0018 8C46     		mov	ip, r1
 473 001a 6344     		add	r3, r3, ip
 474 001c 5360     		str	r3, [r2, #4]
 475 001e 02E0     		b	.L41
 476              	.L40:
 668:main.c        ****     }
 477              		.loc 1 668 0
 478 0020 044B     		ldr	r3, .L42
 479 0022 1A68     		ldr	r2, [r3]
 480 0024 5A60     		str	r2, [r3, #4]
 481              	.L41:
 672:main.c        ****     return result;
 482              		.loc 1 672 0
 483 0026 034B     		ldr	r3, .L42
 484 0028 5968     		ldr	r1, [r3, #4]
 485 002a 054A     		ldr	r2, .L42+12
 486 002c 1160     		str	r1, [r2]
 673:main.c        **** }
 487              		.loc 1 673 0
 488 002e 5868     		ldr	r0, [r3, #4]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 33


 674:main.c        **** 
 489              		.loc 1 674 0
 490              		@ sp needed
 491 0030 10BD     		pop	{r4, pc}
 492              	.L43:
 493 0032 C046     		.align	2
 494              	.L42:
 495 0034 00000000 		.word	.LANCHOR1
 496 0038 FFFFEF00 		.word	15728639
 497 003c 010000FF 		.word	-16777215
 498 0040 00000000 		.word	Position
 499              		.cfi_endproc
 500              	.LFE38:
 501              		.size	GetPosition, .-GetPosition
 502              		.global	__aeabi_ui2f
 503              		.global	__aeabi_fdiv
 504              		.global	__aeabi_fadd
 505              		.global	__aeabi_fsub
 506              		.section	.text.Comm_Task,"ax",%progbits
 507              		.align	2
 508              		.global	Comm_Task
 509              		.code	16
 510              		.thumb_func
 511              		.type	Comm_Task, %function
 512              	Comm_Task:
 513              	.LFB36:
 414:main.c        ****  
 514              		.loc 1 414 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL43:
 519 0000 10B5     		push	{r4, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
 522              		.cfi_offset 14, -4
 423:main.c        ****     
 523              		.loc 1 423 0
 524 0002 0020     		movs	r0, #0
 525              	.LVL44:
 526 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 527              	.LVL45:
 528 0008 A54B     		ldr	r3, .L65
 529 000a 1860     		str	r0, [r3]
 530              	.L61:
 429:main.c        ****         
 531              		.loc 1 429 0
 532 000c A54B     		ldr	r3, .L65+4
 533 000e 1B68     		ldr	r3, [r3]
 534 0010 DB07     		lsls	r3, r3, #31
 535 0012 00D5     		bpl	.LCB423
 536 0014 3BE1     		b	.L45	@long jump
 537              	.LCB423:
 432:main.c        ****              
 538              		.loc 1 432 0
 539 0016 A44B     		ldr	r3, .L65+8
 540 0018 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 34


 541 001a 002B     		cmp	r3, #0
 542 001c 00D0     		beq	.LCB428
 543 001e 36E1     		b	.L45	@long jump
 544              	.LCB428:
 442:main.c        ****                         
 545              		.loc 1 442 0
 546 0020 A24B     		ldr	r3, .L65+12
 547 0022 1868     		ldr	r0, [r3]
 548 0024 0421     		movs	r1, #4
 549 0026 FFF7FEFF 		bl	xQueueSemaphoreTake
 550              	.LVL46:
 551 002a 0128     		cmp	r0, #1
 552 002c 00D0     		beq	.LCB435
 553 002e 2EE1     		b	.L45	@long jump
 554              	.LCB435:
 445:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 555              		.loc 1 445 0
 556 0030 9F4B     		ldr	r3, .L65+16
 557 0032 5878     		ldrb	r0, [r3, #1]
 558              	.LVL47:
 446:main.c        ****                         
 559              		.loc 1 446 0
 560 0034 9C78     		ldrb	r4, [r3, #2]
 561              	.LVL48:
 449:main.c        ****                             size = sizeof(txMessage.buf);                            
 562              		.loc 1 449 0
 563 0036 1E28     		cmp	r0, #30
 564 0038 00D9     		bls	.L47
 450:main.c        ****                     
 565              		.loc 1 450 0
 566 003a 1E20     		movs	r0, #30
 567              	.LVL49:
 568              	.L47:
 453:main.c        ****                             checksum += rxMessage.buf[i]; 
 569              		.loc 1 453 0
 570 003c 0022     		movs	r2, #0
 571 003e 0023     		movs	r3, #0
 572 0040 05E0     		b	.L48
 573              	.LVL50:
 574              	.L49:
 454:main.c        **** 
 575              		.loc 1 454 0 discriminator 3
 576 0042 9B49     		ldr	r1, .L65+16
 577 0044 C95C     		ldrb	r1, [r1, r3]
 578 0046 5218     		adds	r2, r2, r1
 579              	.LVL51:
 580 0048 D2B2     		uxtb	r2, r2
 581              	.LVL52:
 453:main.c        ****                             checksum += rxMessage.buf[i]; 
 582              		.loc 1 453 0 discriminator 3
 583 004a 0133     		adds	r3, r3, #1
 584              	.LVL53:
 585 004c DBB2     		uxtb	r3, r3
 586              	.LVL54:
 587              	.L48:
 453:main.c        ****                             checksum += rxMessage.buf[i]; 
 588              		.loc 1 453 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 35


 589 004e 9842     		cmp	r0, r3
 590 0050 F7D8     		bhi	.L49
 457:main.c        ****                             
 591              		.loc 1 457 0 is_stmt 1
 592 0052 002A     		cmp	r2, #0
 593 0054 09D0     		beq	.L50
 459:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 594              		.loc 1 459 0
 595 0056 974B     		ldr	r3, .L65+20
 596              	.LVL55:
 597 0058 5C71     		strb	r4, [r3, #5]
 460:main.c        ****                             ChecksumErrors++;
 598              		.loc 1 460 0
 599 005a 1522     		movs	r2, #21
 600              	.LVL56:
 601 005c 1A71     		strb	r2, [r3, #4]
 461:main.c        ****                             
 602              		.loc 1 461 0
 603 005e 964A     		ldr	r2, .L65+24
 604 0060 1388     		ldrh	r3, [r2]
 605 0062 0133     		adds	r3, r3, #1
 606 0064 9BB2     		uxth	r3, r3
 607 0066 1380     		strh	r3, [r2]
 608 0068 BBE0     		b	.L51
 609              	.LVL57:
 610              	.L50:
 467:main.c        ****                             
 611              		.loc 1 467 0
 612 006a 631E     		subs	r3, r4, #1
 613              	.LVL58:
 614 006c DBB2     		uxtb	r3, r3
 615 006e 022B     		cmp	r3, #2
 616 0070 00D9     		bls	.LCB501
 617 0072 B6E0     		b	.L51	@long jump
 618              	.LCB501:
 469:main.c        ****                                 
 619              		.loc 1 469 0
 620 0074 022C     		cmp	r4, #2
 621 0076 65D0     		beq	.L52
 622 0078 032C     		cmp	r4, #3
 623 007a 00D1     		bne	.LCB505
 624 007c 95E0     		b	.L53	@long jump
 625              	.LCB505:
 626 007e 012C     		cmp	r4, #1
 627 0080 00D0     		beq	.LCB507
 628 0082 AEE0     		b	.L51	@long jump
 629              	.LCB507:
 476:main.c        ****                                         refKi = rxMessage.config.Ki;
 630              		.loc 1 476 0
 631 0084 8A4B     		ldr	r3, .L65+16
 632 0086 1A79     		ldrb	r2, [r3, #4]
 633              	.LVL59:
 634 0088 5979     		ldrb	r1, [r3, #5]
 635 008a 0902     		lsls	r1, r1, #8
 636 008c 1143     		orrs	r1, r2
 637 008e 9A79     		ldrb	r2, [r3, #6]
 638 0090 1204     		lsls	r2, r2, #16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 36


 639 0092 0A43     		orrs	r2, r1
 640 0094 1100     		movs	r1, r2
 641 0096 DA79     		ldrb	r2, [r3, #7]
 642 0098 1206     		lsls	r2, r2, #24
 643 009a 0A43     		orrs	r2, r1
 644 009c 8749     		ldr	r1, .L65+28
 645 009e 0A60     		str	r2, [r1]
 477:main.c        ****                                         refKd = rxMessage.config.Kd;      
 646              		.loc 1 477 0
 647 00a0 1A7A     		ldrb	r2, [r3, #8]
 648 00a2 597A     		ldrb	r1, [r3, #9]
 649 00a4 0902     		lsls	r1, r1, #8
 650 00a6 1143     		orrs	r1, r2
 651 00a8 9A7A     		ldrb	r2, [r3, #10]
 652 00aa 1204     		lsls	r2, r2, #16
 653 00ac 0A43     		orrs	r2, r1
 654 00ae 1100     		movs	r1, r2
 655 00b0 DA7A     		ldrb	r2, [r3, #11]
 656 00b2 1206     		lsls	r2, r2, #24
 657 00b4 0A43     		orrs	r2, r1
 658 00b6 8249     		ldr	r1, .L65+32
 659 00b8 0A60     		str	r2, [r1]
 478:main.c        ****                                     
 660              		.loc 1 478 0
 661 00ba 1A7B     		ldrb	r2, [r3, #12]
 662 00bc 597B     		ldrb	r1, [r3, #13]
 663 00be 0902     		lsls	r1, r1, #8
 664 00c0 1143     		orrs	r1, r2
 665 00c2 9A7B     		ldrb	r2, [r3, #14]
 666 00c4 1204     		lsls	r2, r2, #16
 667 00c6 0A43     		orrs	r2, r1
 668 00c8 1100     		movs	r1, r2
 669 00ca DA7B     		ldrb	r2, [r3, #15]
 670 00cc 1206     		lsls	r2, r2, #24
 671 00ce 0A43     		orrs	r2, r1
 672 00d0 7C49     		ldr	r1, .L65+36
 673 00d2 0A60     		str	r2, [r1]
 481:main.c        ****                                            
 674              		.loc 1 481 0
 675 00d4 997C     		ldrb	r1, [r3, #18]
 676 00d6 7C4A     		ldr	r2, .L65+40
 677 00d8 1170     		strb	r1, [r2]
 484:main.c        ****                                     
 678              		.loc 1 484 0
 679 00da 0021     		movs	r1, #0
 680 00dc 7B4A     		ldr	r2, .L65+44
 681 00de 1170     		strb	r1, [r2]
 487:main.c        ****                                         if (limit > 100)
 682              		.loc 1 487 0
 683 00e0 187C     		ldrb	r0, [r3, #16]
 684              	.LVL60:
 488:main.c        ****                                             limit = 100;
 685              		.loc 1 488 0
 686 00e2 6428     		cmp	r0, #100
 687 00e4 00D9     		bls	.L55
 489:main.c        ****                                     
 688              		.loc 1 489 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 37


 689 00e6 6420     		movs	r0, #100
 690              	.LVL61:
 691              	.L55:
 491:main.c        ****                                         
 692              		.loc 1 491 0
 693 00e8 FFF7FEFF 		bl	__aeabi_ui2f
 694              	.LVL62:
 695 00ec 041C     		adds	r4, r0, #0
 696              	.LVL63:
 697 00ee 784B     		ldr	r3, .L65+48
 698 00f0 1860     		str	r0, [r3]
 493:main.c        ****                                         if (limit > 100)
 699              		.loc 1 493 0
 700 00f2 6F4B     		ldr	r3, .L65+16
 701 00f4 587C     		ldrb	r0, [r3, #17]
 702              	.LVL64:
 494:main.c        ****                                             limit = 100;
 703              		.loc 1 494 0
 704 00f6 6428     		cmp	r0, #100
 705 00f8 00D9     		bls	.L56
 495:main.c        ****                                         
 706              		.loc 1 495 0
 707 00fa 6420     		movs	r0, #100
 708              	.LVL65:
 709              	.L56:
 497:main.c        ****                                         
 710              		.loc 1 497 0
 711 00fc FFF7FEFF 		bl	__aeabi_ui2f
 712              	.LVL66:
 713 0100 744B     		ldr	r3, .L65+52
 714 0102 1860     		str	r0, [r3]
 505:main.c        ****                                         pwmMax = 50 + pwmLimit;
 715              		.loc 1 505 0
 716 0104 7449     		ldr	r1, .L65+56
 717 0106 201C     		adds	r0, r4, #0
 718 0108 FFF7FEFF 		bl	__aeabi_fdiv
 719              	.LVL67:
 720 010c 7349     		ldr	r1, .L65+60
 721 010e FFF7FEFF 		bl	__aeabi_fmul
 722              	.LVL68:
 723 0112 041C     		adds	r4, r0, #0
 724 0114 724B     		ldr	r3, .L65+64
 725 0116 1860     		str	r0, [r3]
 506:main.c        ****                                         pwmMin = 50 - pwmLimit;
 726              		.loc 1 506 0
 727 0118 7049     		ldr	r1, .L65+60
 728 011a FFF7FEFF 		bl	__aeabi_fadd
 729              	.LVL69:
 730 011e 714B     		ldr	r3, .L65+68
 731 0120 1860     		str	r0, [r3]
 507:main.c        ****                                     
 732              		.loc 1 507 0
 733 0122 211C     		adds	r1, r4, #0
 734 0124 6D48     		ldr	r0, .L65+60
 735 0126 FFF7FEFF 		bl	__aeabi_fsub
 736              	.LVL70:
 737 012a 6F4B     		ldr	r3, .L65+72
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 38


 738 012c 1860     		str	r0, [r3]
 510:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 739              		.loc 1 510 0
 740 012e 0222     		movs	r2, #2
 741 0130 6E4B     		ldr	r3, .L65+76
 742 0132 1A70     		strb	r2, [r3]
 511:main.c        ****                                     
 743              		.loc 1 511 0
 744 0134 5E4B     		ldr	r3, .L65+16
 745 0136 DA78     		ldrb	r2, [r3, #3]
 746 0138 6D4B     		ldr	r3, .L65+80
 747 013a 1A70     		strb	r2, [r3]
 514:main.c        ****                                         break;
 748              		.loc 1 514 0
 749 013c 0020     		movs	r0, #0
 750 013e FFF7FEFF 		bl	ClearFault
 751              	.LVL71:
 515:main.c        **** 
 752              		.loc 1 515 0
 753 0142 4EE0     		b	.L51
 754              	.LVL72:
 755              	.L52:
 519:main.c        ****                                         
 756              		.loc 1 519 0
 757 0144 5A48     		ldr	r0, .L65+16
 758              	.LVL73:
 759 0146 C378     		ldrb	r3, [r0, #3]
 760 0148 5A1E     		subs	r2, r3, #1
 761 014a 9341     		sbcs	r3, r3, r2
 762              	.LVL74:
 763 014c 694A     		ldr	r2, .L65+84
 764 014e 1370     		strb	r3, [r2]
 522:main.c        ****                                             
 765              		.loc 1 522 0
 766 0150 0379     		ldrb	r3, [r0, #4]
 767 0152 4279     		ldrb	r2, [r0, #5]
 768 0154 1202     		lsls	r2, r2, #8
 769 0156 1A43     		orrs	r2, r3
 770 0158 8379     		ldrb	r3, [r0, #6]
 771 015a 1B04     		lsls	r3, r3, #16
 772 015c 1343     		orrs	r3, r2
 773 015e 1A00     		movs	r2, r3
 774 0160 C379     		ldrb	r3, [r0, #7]
 775 0162 1B06     		lsls	r3, r3, #24
 776 0164 1343     		orrs	r3, r2
 777 0166 644A     		ldr	r2, .L65+88
 778 0168 1268     		ldr	r2, [r2]
 779 016a 9342     		cmp	r3, r2
 780 016c 17D0     		beq	.L57
 525:main.c        ****                                             
 781              		.loc 1 525 0
 782 016e FFF7FEFF 		bl	GetPosition
 783              	.LVL75:
 784 0172 624C     		ldr	r4, .L65+92
 785              	.LVL76:
 786 0174 2060     		str	r0, [r4]
 528:main.c        ****                                             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 39


 787              		.loc 1 528 0
 788 0176 4E48     		ldr	r0, .L65+16
 789 0178 0379     		ldrb	r3, [r0, #4]
 790 017a 4279     		ldrb	r2, [r0, #5]
 791 017c 1202     		lsls	r2, r2, #8
 792 017e 1A43     		orrs	r2, r3
 793 0180 8379     		ldrb	r3, [r0, #6]
 794 0182 1B04     		lsls	r3, r3, #16
 795 0184 1343     		orrs	r3, r2
 796 0186 1A00     		movs	r2, r3
 797 0188 C379     		ldrb	r3, [r0, #7]
 798 018a 1B06     		lsls	r3, r3, #24
 799 018c 1343     		orrs	r3, r2
 800 018e 5A4A     		ldr	r2, .L65+88
 801 0190 1360     		str	r3, [r2]
 532:main.c        ****                                             
 802              		.loc 1 532 0
 803 0192 2268     		ldr	r2, [r4]
 804 0194 5A4B     		ldr	r3, .L65+96
 805 0196 1A60     		str	r2, [r3]
 535:main.c        ****                                         }                                        
 806              		.loc 1 535 0
 807 0198 0020     		movs	r0, #0
 808 019a FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 809              	.LVL77:
 810              	.L57:
 539:main.c        ****                                         break;
 811              		.loc 1 539 0
 812 019e 444B     		ldr	r3, .L65+16
 813 01a0 0822     		movs	r2, #8
 814 01a2 9A56     		ldrsb	r2, [r3, r2]
 815 01a4 494B     		ldr	r3, .L65+44
 816 01a6 1A70     		strb	r2, [r3]
 540:main.c        ****                                     
 817              		.loc 1 540 0
 818 01a8 1BE0     		b	.L51
 819              	.LVL78:
 820              	.L53:
 544:main.c        ****                                         LastPosition = rxMessage.status.setpoint;
 821              		.loc 1 544 0
 822 01aa 414C     		ldr	r4, .L65+16
 823              	.LVL79:
 824 01ac 2179     		ldrb	r1, [r4, #4]
 825 01ae 6379     		ldrb	r3, [r4, #5]
 826 01b0 1B02     		lsls	r3, r3, #8
 827 01b2 0B43     		orrs	r3, r1
 828 01b4 1A00     		movs	r2, r3
 829              	.LVL80:
 830 01b6 A079     		ldrb	r0, [r4, #6]
 831              	.LVL81:
 832 01b8 0004     		lsls	r0, r0, #16
 833 01ba 0300     		movs	r3, r0
 834 01bc 1343     		orrs	r3, r2
 835 01be E079     		ldrb	r0, [r4, #7]
 836 01c0 0006     		lsls	r0, r0, #24
 837 01c2 1843     		orrs	r0, r3
 838 01c4 FFF7FEFF 		bl	Counter_1_WriteCounter
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 40


 839              	.LVL82:
 545:main.c        ****                                         break;                                        
 840              		.loc 1 545 0
 841 01c8 2379     		ldrb	r3, [r4, #4]
 842 01ca 6279     		ldrb	r2, [r4, #5]
 843 01cc 1202     		lsls	r2, r2, #8
 844 01ce 1A43     		orrs	r2, r3
 845 01d0 A379     		ldrb	r3, [r4, #6]
 846 01d2 1B04     		lsls	r3, r3, #16
 847 01d4 1343     		orrs	r3, r2
 848 01d6 1A00     		movs	r2, r3
 849 01d8 E379     		ldrb	r3, [r4, #7]
 850 01da 1B06     		lsls	r3, r3, #24
 851 01dc 1343     		orrs	r3, r2
 852 01de 474A     		ldr	r2, .L65+92
 853 01e0 1360     		str	r3, [r2]
 854              	.L51:
 556:main.c        ****                         
 855              		.loc 1 556 0
 856 01e2 FFF7FEFF 		bl	GetPosition
 857              	.LVL83:
 858 01e6 4749     		ldr	r1, .L65+100
 859 01e8 0860     		str	r0, [r1]
 559:main.c        ****                         txMessage.msg.version0 = FIRMWARE_REV_0;
 860              		.loc 1 559 0
 861 01ea 324B     		ldr	r3, .L65+20
 862 01ec 0022     		movs	r2, #0
 863 01ee 1A70     		strb	r2, [r3]
 560:main.c        ****                         txMessage.msg.version1 = FIRMWARE_REV_1;
 864              		.loc 1 560 0
 865 01f0 5A70     		strb	r2, [r3, #1]
 561:main.c        ****                         txMessage.msg.version2 = FIRMWARE_REV_2;
 866              		.loc 1 561 0
 867 01f2 9A70     		strb	r2, [r3, #2]
 562:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 868              		.loc 1 562 0
 869 01f4 0732     		adds	r2, r2, #7
 870 01f6 DA70     		strb	r2, [r3, #3]
 563:main.c        ****                         txMessage.msg.opcode   = opStatus;
 871              		.loc 1 563 0
 872 01f8 0E32     		adds	r2, r2, #14
 873 01fa 1A71     		strb	r2, [r3, #4]
 564:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 874              		.loc 1 564 0
 875 01fc 133A     		subs	r2, r2, #19
 876 01fe 5A71     		strb	r2, [r3, #5]
 565:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 877              		.loc 1 565 0
 878 0200 3A4A     		ldr	r2, .L65+76
 879 0202 1278     		ldrb	r2, [r2]
 880 0204 9A71     		strb	r2, [r3, #6]
 566:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 881              		.loc 1 566 0
 882 0206 404A     		ldr	r2, .L65+104
 883 0208 1278     		ldrb	r2, [r2]
 884 020a DA71     		strb	r2, [r3, #7]
 567:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 41


 885              		.loc 1 567 0
 886 020c 2A4A     		ldr	r2, .L65+24
 887 020e 1288     		ldrh	r2, [r2]
 888 0210 92B2     		uxth	r2, r2
 889 0212 5A72     		strb	r2, [r3, #9]
 890 0214 120A     		lsrs	r2, r2, #8
 891 0216 9A72     		strb	r2, [r3, #10]
 568:main.c        ****                         txMessage.msg.position = Position;
 892              		.loc 1 568 0
 893 0218 354A     		ldr	r2, .L65+80
 894 021a 1278     		ldrb	r2, [r2]
 895 021c 1A72     		strb	r2, [r3, #8]
 569:main.c        ****                         txMessage.msg.pwm      = PWM;
 896              		.loc 1 569 0
 897 021e 0A68     		ldr	r2, [r1]
 898 0220 5A73     		strb	r2, [r3, #13]
 899 0222 100A     		lsrs	r0, r2, #8
 900 0224 9873     		strb	r0, [r3, #14]
 901 0226 100C     		lsrs	r0, r2, #16
 902 0228 D873     		strb	r0, [r3, #15]
 903 022a 120E     		lsrs	r2, r2, #24
 904 022c 1A74     		strb	r2, [r3, #16]
 570:main.c        ****                         txMessage.msg.current  = Current;                            
 905              		.loc 1 570 0
 906 022e 374A     		ldr	r2, .L65+108
 907 0230 1268     		ldr	r2, [r2]
 908 0232 5A74     		strb	r2, [r3, #17]
 909 0234 100A     		lsrs	r0, r2, #8
 910 0236 9874     		strb	r0, [r3, #18]
 911 0238 100C     		lsrs	r0, r2, #16
 912 023a D874     		strb	r0, [r3, #19]
 913 023c 120E     		lsrs	r2, r2, #24
 914 023e 1A75     		strb	r2, [r3, #20]
 571:main.c        ****                         
 915              		.loc 1 571 0
 916 0240 334A     		ldr	r2, .L65+112
 917 0242 1288     		ldrh	r2, [r2]
 918 0244 DA72     		strb	r2, [r3, #11]
 919 0246 120A     		lsrs	r2, r2, #8
 920 0248 1A73     		strb	r2, [r3, #12]
 921              	.LVL84:
 574:main.c        ****                             checksum += txMessage.buf[i]; 
 922              		.loc 1 574 0
 923 024a 0022     		movs	r2, #0
 924 024c 0023     		movs	r3, #0
 925 024e 05E0     		b	.L58
 926              	.LVL85:
 927              	.L59:
 575:main.c        ****                             
 928              		.loc 1 575 0 discriminator 3
 929 0250 1849     		ldr	r1, .L65+20
 930 0252 C95C     		ldrb	r1, [r1, r3]
 931 0254 5218     		adds	r2, r2, r1
 932              	.LVL86:
 933 0256 D2B2     		uxtb	r2, r2
 934              	.LVL87:
 574:main.c        ****                             checksum += txMessage.buf[i]; 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 42


 935              		.loc 1 574 0 discriminator 3
 936 0258 0133     		adds	r3, r3, #1
 937              	.LVL88:
 938 025a DBB2     		uxtb	r3, r3
 939              	.LVL89:
 940              	.L58:
 574:main.c        ****                             checksum += txMessage.buf[i]; 
 941              		.loc 1 574 0 is_stmt 0 discriminator 1
 942 025c 142B     		cmp	r3, #20
 943 025e F7D9     		bls	.L59
 578:main.c        ****                             
 944              		.loc 1 578 0 is_stmt 1
 945 0260 1448     		ldr	r0, .L65+20
 946 0262 5242     		rsbs	r2, r2, #0
 947              	.LVL90:
 948 0264 0270     		strb	r2, [r0]
 582:main.c        **** 
 949              		.loc 1 582 0
 950 0266 1E21     		movs	r1, #30
 951 0268 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 952              	.LVL91:
 585:main.c        ****                         
 953              		.loc 1 585 0
 954 026c 0122     		movs	r2, #1
 955 026e 0E4B     		ldr	r3, .L65+8
 956 0270 1A70     		strb	r2, [r3]
 588:main.c        ****                             ClearFault(fsNONE);
 957              		.loc 1 588 0
 958 0272 0F4B     		ldr	r3, .L65+16
 959 0274 5B7A     		ldrb	r3, [r3, #9]
 960 0276 002B     		cmp	r3, #0
 961 0278 02D0     		beq	.L60
 589:main.c        ****                     
 962              		.loc 1 589 0
 963 027a 0020     		movs	r0, #0
 964 027c FFF7FEFF 		bl	ClearFault
 965              	.LVL92:
 966              	.L60:
 592:main.c        ****                     }            
 967              		.loc 1 592 0
 968 0280 0A4B     		ldr	r3, .L65+12
 969 0282 1868     		ldr	r0, [r3]
 970 0284 0023     		movs	r3, #0
 971 0286 0022     		movs	r2, #0
 972 0288 0021     		movs	r1, #0
 973 028a FFF7FEFF 		bl	xQueueGenericSend
 974              	.LVL93:
 975              	.L45:
 608:main.c        ****         
 976              		.loc 1 608 0
 977 028e 0120     		movs	r0, #1
 978 0290 FFF7FEFF 		bl	vTaskDelay
 979              	.LVL94:
 611:main.c        ****     }
 980              		.loc 1 611 0
 981 0294 0020     		movs	r0, #0
 982 0296 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 43


 983              	.LVL95:
 984 029a 014B     		ldr	r3, .L65
 985 029c 1860     		str	r0, [r3]
 612:main.c        **** }
 986              		.loc 1 612 0
 987 029e B5E6     		b	.L61
 988              	.L66:
 989              		.align	2
 990              	.L65:
 991 02a0 00000000 		.word	uxHighWaterMark_Comm
 992 02a4 24000740 		.word	1074200612
 993 02a8 00000000 		.word	txMessageState
 994 02ac 00000000 		.word	Lock
 995 02b0 00000000 		.word	rxMessage
 996 02b4 00000000 		.word	txMessage
 997 02b8 00000000 		.word	ChecksumErrors
 998 02bc 00000000 		.word	refKp
 999 02c0 00000000 		.word	refKi
 1000 02c4 00000000 		.word	refKd
 1001 02c8 00000000 		.word	PID_EffSetDelta
 1002 02cc 00000000 		.word	Jog
 1003 02d0 00000000 		.word	outMax_Total
 1004 02d4 00000000 		.word	outMax_ITerm
 1005 02d8 0000C842 		.word	1120403456
 1006 02dc 00004842 		.word	1112014848
 1007 02e0 00000000 		.word	pwmLimit
 1008 02e4 00000000 		.word	pwmMax
 1009 02e8 00000000 		.word	pwmMin
 1010 02ec 00000000 		.word	ConfigState
 1011 02f0 00000000 		.word	ConfigSequence
 1012 02f4 00000000 		.word	PID_Enabled
 1013 02f8 00000000 		.word	PID_Setpoint
 1014 02fc 00000000 		.word	LastPosition
 1015 0300 00000000 		.word	PID_EffectiveSetpoint
 1016 0304 00000000 		.word	Position
 1017 0308 00000000 		.word	FaultState
 1018 030c 00000000 		.word	PWM
 1019 0310 00000000 		.word	Current
 1020              		.cfi_endproc
 1021              	.LFE36:
 1022              		.size	Comm_Task, .-Comm_Task
 1023              		.section	.text.PID_Initialize,"ax",%progbits
 1024              		.align	2
 1025              		.global	PID_Initialize
 1026              		.code	16
 1027              		.thumb_func
 1028              		.type	PID_Initialize, %function
 1029              	PID_Initialize:
 1030              	.LFB39:
 687:main.c        ****     
 1031              		.loc 1 687 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035 0000 10B5     		push	{r4, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 4, -8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 44


 1038              		.cfi_offset 14, -4
 690:main.c        ****     LastPosition = Position;
 1039              		.loc 1 690 0
 1040 0002 FFF7FEFF 		bl	GetPosition
 1041              	.LVL96:
 1042 0006 064B     		ldr	r3, .L68
 1043 0008 1860     		str	r0, [r3]
 691:main.c        ****     
 1044              		.loc 1 691 0
 1045 000a 1A68     		ldr	r2, [r3]
 1046 000c 054B     		ldr	r3, .L68+4
 1047 000e 1A60     		str	r2, [r3]
 695:main.c        ****     
 1048              		.loc 1 695 0
 1049 0010 1A68     		ldr	r2, [r3]
 1050 0012 054B     		ldr	r3, .L68+8
 1051 0014 1A60     		str	r2, [r3]
 699:main.c        **** }    
 1052              		.loc 1 699 0
 1053 0016 0022     		movs	r2, #0
 1054 0018 044B     		ldr	r3, .L68+12
 1055 001a 1A60     		str	r2, [r3]
 700:main.c        **** 
 1056              		.loc 1 700 0
 1057              		@ sp needed
 1058 001c 10BD     		pop	{r4, pc}
 1059              	.L69:
 1060 001e C046     		.align	2
 1061              	.L68:
 1062 0020 00000000 		.word	Position
 1063 0024 00000000 		.word	LastPosition
 1064 0028 00000000 		.word	PID_EffectiveSetpoint
 1065 002c 00000000 		.word	ITerm
 1066              		.cfi_endproc
 1067              	.LFE39:
 1068              		.size	PID_Initialize, .-PID_Initialize
 1069              		.section	.text.PID_SetTunings,"ax",%progbits
 1070              		.align	2
 1071              		.global	PID_SetTunings
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	PID_SetTunings, %function
 1075              	PID_SetTunings:
 1076              	.LFB40:
 712:main.c        ****     
 1077              		.loc 1 712 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL97:
 1082 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1083              		.cfi_def_cfa_offset 24
 1084              		.cfi_offset 3, -24
 1085              		.cfi_offset 4, -20
 1086              		.cfi_offset 5, -16
 1087              		.cfi_offset 6, -12
 1088              		.cfi_offset 7, -8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 45


 1089              		.cfi_offset 14, -4
 1090 0002 0E1C     		adds	r6, r1, #0
 1091 0004 151C     		adds	r5, r2, #0
 1092 0006 1C1C     		adds	r4, r3, #0
 714:main.c        ****     
 1093              		.loc 1 714 0
 1094 0008 0028     		cmp	r0, #0
 1095 000a 12D0     		beq	.L70
 1096              	.LBB2:
 716:main.c        ****     
 1097              		.loc 1 716 0
 1098 000c FFF7FEFF 		bl	__aeabi_ui2f
 1099              	.LVL98:
 1100 0010 0849     		ldr	r1, .L72
 1101 0012 FFF7FEFF 		bl	__aeabi_fdiv
 1102              	.LVL99:
 1103 0016 071C     		adds	r7, r0, #0
 1104              	.LVL100:
 718:main.c        ****         ki = newKi * sampleTimeInSec;
 1105              		.loc 1 718 0
 1106 0018 074B     		ldr	r3, .L72+4
 1107 001a 1E60     		str	r6, [r3]
 719:main.c        ****         kd = newKd / sampleTimeInSec;        
 1108              		.loc 1 719 0
 1109 001c 291C     		adds	r1, r5, #0
 1110 001e FFF7FEFF 		bl	__aeabi_fmul
 1111              	.LVL101:
 1112 0022 064B     		ldr	r3, .L72+8
 1113 0024 1860     		str	r0, [r3]
 720:main.c        ****     }
 1114              		.loc 1 720 0
 1115 0026 391C     		adds	r1, r7, #0
 1116 0028 201C     		adds	r0, r4, #0
 1117 002a FFF7FEFF 		bl	__aeabi_fdiv
 1118              	.LVL102:
 1119 002e 044B     		ldr	r3, .L72+12
 1120 0030 1860     		str	r0, [r3]
 1121              	.LVL103:
 1122              	.L70:
 1123              	.LBE2:
 722:main.c        **** 
 1124              		.loc 1 722 0
 1125              		@ sp needed
 1126              	.LVL104:
 1127              	.LVL105:
 1128              	.LVL106:
 1129 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1130              	.L73:
 1131              		.align	2
 1132              	.L72:
 1133 0034 00007A44 		.word	1148846080
 1134 0038 00000000 		.word	kp
 1135 003c 00000000 		.word	ki
 1136 0040 00000000 		.word	kd
 1137              		.cfi_endproc
 1138              	.LFE40:
 1139              		.size	PID_SetTunings, .-PID_SetTunings
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 46


 1140              		.global	__aeabi_i2f
 1141              		.section	.text.PID_Compute,"ax",%progbits
 1142              		.align	2
 1143              		.global	PID_Compute
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	PID_Compute, %function
 1147              	PID_Compute:
 1148              	.LFB41:
 734:main.c        ****     
 1149              		.loc 1 734 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              	.LVL107:
 1154 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1155              		.cfi_def_cfa_offset 24
 1156              		.cfi_offset 3, -24
 1157              		.cfi_offset 4, -20
 1158              		.cfi_offset 5, -16
 1159              		.cfi_offset 6, -12
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 0400     		movs	r4, r0
 1163 0004 0D00     		movs	r5, r1
 739:main.c        ****         return 0;
 1164              		.loc 1 739 0
 1165 0006 3D4B     		ldr	r3, .L92
 1166 0008 1B7A     		ldrb	r3, [r3, #8]
 1167 000a 002B     		cmp	r3, #0
 1168 000c 74D0     		beq	.L85
 743:main.c        ****     
 1169              		.loc 1 743 0
 1170 000e FFF7FEFF 		bl	GetPosition
 1171              	.LVL108:
 1172 0012 3B4B     		ldr	r3, .L92+4
 1173 0014 1860     		str	r0, [r3]
 746:main.c        ****     
 1174              		.loc 1 746 0
 1175 0016 3B4B     		ldr	r3, .L92+8
 1176 0018 1868     		ldr	r0, [r3]
 1177 001a 201A     		subs	r0, r4, r0
 1178              	.LVL109:
 749:main.c        **** 
 1179              		.loc 1 749 0
 1180 001c 3A4B     		ldr	r3, .L92+12
 1181 001e 5B68     		ldr	r3, [r3, #4]
 1182 0020 9842     		cmp	r0, r3
 1183 0022 66D3     		bcc	.L76
 753:main.c        ****         
 1184              		.loc 1 753 0
 1185 0024 394B     		ldr	r3, .L92+16
 1186 0026 1B68     		ldr	r3, [r3]
 1187 0028 394A     		ldr	r2, .L92+20
 1188 002a 1268     		ldr	r2, [r2]
 1189 002c 3949     		ldr	r1, .L92+24
 1190 002e 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 47


 1191 0030 FFF7FEFF 		bl	PID_SetTunings
 1192              	.LVL110:
 756:main.c        ****         ITerm += (ki * error);
 1193              		.loc 1 756 0
 1194 0034 324B     		ldr	r3, .L92+4
 1195 0036 1868     		ldr	r0, [r3]
 1196 0038 281A     		subs	r0, r5, r0
 1197              	.LVL111:
 757:main.c        ****         
 1198              		.loc 1 757 0
 1199 003a FFF7FEFF 		bl	__aeabi_i2f
 1200              	.LVL112:
 1201 003e 071C     		adds	r7, r0, #0
 1202 0040 354B     		ldr	r3, .L92+28
 1203 0042 1968     		ldr	r1, [r3]
 1204 0044 FFF7FEFF 		bl	__aeabi_fmul
 1205              	.LVL113:
 1206 0048 344D     		ldr	r5, .L92+32
 1207              	.LVL114:
 1208 004a 2968     		ldr	r1, [r5]
 1209 004c FFF7FEFF 		bl	__aeabi_fadd
 1210              	.LVL115:
 1211 0050 061C     		adds	r6, r0, #0
 1212 0052 2860     		str	r0, [r5]
 760:main.c        ****             ITerm = outMax_ITerm;
 1213              		.loc 1 760 0
 1214 0054 324B     		ldr	r3, .L92+36
 1215 0056 1D68     		ldr	r5, [r3]
 1216 0058 291C     		adds	r1, r5, #0
 1217 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 1218              	.LVL116:
 1219 005e 0028     		cmp	r0, #0
 1220 0060 02D0     		beq	.L90
 761:main.c        ****         } else if (ITerm < -outMax_ITerm) {
 1221              		.loc 1 761 0
 1222 0062 2E4B     		ldr	r3, .L92+32
 1223 0064 1D60     		str	r5, [r3]
 1224 0066 0BE0     		b	.L79
 1225              	.L90:
 762:main.c        ****             ITerm = -outMax_ITerm;
 1226              		.loc 1 762 0
 1227 0068 8023     		movs	r3, #128
 1228 006a 1B06     		lsls	r3, r3, #24
 1229 006c 9C46     		mov	ip, r3
 1230 006e 6544     		add	r5, r5, ip
 1231 0070 291C     		adds	r1, r5, #0
 1232 0072 301C     		adds	r0, r6, #0
 1233 0074 FFF7FEFF 		bl	__aeabi_fcmplt
 1234              	.LVL117:
 1235 0078 0028     		cmp	r0, #0
 1236 007a 01D0     		beq	.L79
 763:main.c        ****         }
 1237              		.loc 1 763 0
 1238 007c 274B     		ldr	r3, .L92+32
 1239 007e 1D60     		str	r5, [r3]
 1240              	.L79:
 767:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 48


 1241              		.loc 1 767 0
 1242 0080 1F4B     		ldr	r3, .L92+4
 1243 0082 1B68     		ldr	r3, [r3]
 1244 0084 274A     		ldr	r2, .L92+40
 1245 0086 1568     		ldr	r5, [r2]
 1246 0088 5D1B     		subs	r5, r3, r5
 1247              	.LVL118:
 770:main.c        ****         
 1248              		.loc 1 770 0
 1249 008a 274B     		ldr	r3, .L92+44
 1250 008c 1968     		ldr	r1, [r3]
 1251 008e 381C     		adds	r0, r7, #0
 1252 0090 FFF7FEFF 		bl	__aeabi_fmul
 1253              	.LVL119:
 1254 0094 214B     		ldr	r3, .L92+32
 1255 0096 1968     		ldr	r1, [r3]
 1256 0098 FFF7FEFF 		bl	__aeabi_fadd
 1257              	.LVL120:
 1258 009c 061C     		adds	r6, r0, #0
 1259 009e 2800     		movs	r0, r5
 1260 00a0 FFF7FEFF 		bl	__aeabi_i2f
 1261              	.LVL121:
 1262 00a4 214B     		ldr	r3, .L92+48
 1263 00a6 1968     		ldr	r1, [r3]
 1264 00a8 FFF7FEFF 		bl	__aeabi_fmul
 1265              	.LVL122:
 1266 00ac 011C     		adds	r1, r0, #0
 1267 00ae 301C     		adds	r0, r6, #0
 1268 00b0 FFF7FEFF 		bl	__aeabi_fsub
 1269              	.LVL123:
 1270 00b4 061C     		adds	r6, r0, #0
 1271 00b6 1E4B     		ldr	r3, .L92+52
 1272 00b8 1860     		str	r0, [r3]
 773:main.c        ****             Output = outMax_Total;
 1273              		.loc 1 773 0
 1274 00ba 1E4B     		ldr	r3, .L92+56
 1275 00bc 1D68     		ldr	r5, [r3]
 1276              	.LVL124:
 1277 00be 291C     		adds	r1, r5, #0
 1278 00c0 FFF7FEFF 		bl	__aeabi_fcmpgt
 1279              	.LVL125:
 1280 00c4 0028     		cmp	r0, #0
 1281 00c6 02D0     		beq	.L91
 774:main.c        ****         } else if (Output < -outMax_Total) {
 1282              		.loc 1 774 0
 1283 00c8 194B     		ldr	r3, .L92+52
 1284 00ca 1D60     		str	r5, [r3]
 1285 00cc 0BE0     		b	.L83
 1286              	.L91:
 775:main.c        ****             Output = -outMax_Total;
 1287              		.loc 1 775 0
 1288 00ce 8023     		movs	r3, #128
 1289 00d0 1B06     		lsls	r3, r3, #24
 1290 00d2 9C46     		mov	ip, r3
 1291 00d4 6544     		add	r5, r5, ip
 1292 00d6 291C     		adds	r1, r5, #0
 1293 00d8 301C     		adds	r0, r6, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 49


 1294 00da FFF7FEFF 		bl	__aeabi_fcmplt
 1295              	.LVL126:
 1296 00de 0028     		cmp	r0, #0
 1297 00e0 01D0     		beq	.L83
 776:main.c        ****         }
 1298              		.loc 1 776 0
 1299 00e2 134B     		ldr	r3, .L92+52
 1300 00e4 1D60     		str	r5, [r3]
 1301              	.L83:
 780:main.c        ****         lastTime = now;        
 1302              		.loc 1 780 0
 1303 00e6 064B     		ldr	r3, .L92+4
 1304 00e8 1A68     		ldr	r2, [r3]
 1305 00ea 0E4B     		ldr	r3, .L92+40
 1306 00ec 1A60     		str	r2, [r3]
 781:main.c        ****     }
 1307              		.loc 1 781 0
 1308 00ee 054B     		ldr	r3, .L92+8
 1309 00f0 1C60     		str	r4, [r3]
 1310              	.L76:
 784:main.c        **** }
 1311              		.loc 1 784 0
 1312 00f2 0F4B     		ldr	r3, .L92+52
 1313 00f4 1868     		ldr	r0, [r3]
 1314 00f6 00E0     		b	.L75
 1315              	.LVL127:
 1316              	.L85:
 740:main.c        ****     
 1317              		.loc 1 740 0
 1318 00f8 0020     		movs	r0, #0
 1319              	.LVL128:
 1320              	.L75:
 785:main.c        ****  
 1321              		.loc 1 785 0
 1322              		@ sp needed
 1323              	.LVL129:
 1324 00fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1325              	.L93:
 1326              		.align	2
 1327              	.L92:
 1328 00fc 00000000 		.word	.LANCHOR1
 1329 0100 00000000 		.word	Position
 1330 0104 00000000 		.word	lastTime
 1331 0108 00000000 		.word	.LANCHOR0
 1332 010c 00000000 		.word	refKd
 1333 0110 00000000 		.word	refKi
 1334 0114 00000000 		.word	refKp
 1335 0118 00000000 		.word	ki
 1336 011c 00000000 		.word	ITerm
 1337 0120 00000000 		.word	outMax_ITerm
 1338 0124 00000000 		.word	LastPosition
 1339 0128 00000000 		.word	kp
 1340 012c 00000000 		.word	kd
 1341 0130 00000000 		.word	Output
 1342 0134 00000000 		.word	outMax_Total
 1343              		.cfi_endproc
 1344              	.LFE41:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 50


 1345              		.size	PID_Compute, .-PID_Compute
 1346              		.section	.text.PID_SetMode,"ax",%progbits
 1347              		.align	2
 1348              		.global	PID_SetMode
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	PID_SetMode, %function
 1352              	PID_SetMode:
 1353              	.LFB42:
 796:main.c        ****     
 1354              		.loc 1 796 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              	.LVL130:
 1359 0000 10B5     		push	{r4, lr}
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 4, -8
 1362              		.cfi_offset 14, -4
 798:main.c        ****     
 1363              		.loc 1 798 0
 1364 0002 441E     		subs	r4, r0, #1
 1365 0004 6342     		rsbs	r3, r4, #0
 1366 0006 5C41     		adcs	r4, r4, r3
 1367 0008 E4B2     		uxtb	r4, r4
 1368              	.LVL131:
 800:main.c        ****         /*we just went from manual to auto*/
 1369              		.loc 1 800 0
 1370 000a 0128     		cmp	r0, #1
 1371 000c 05D1     		bne	.L95
 800:main.c        ****         /*we just went from manual to auto*/
 1372              		.loc 1 800 0 is_stmt 0 discriminator 1
 1373 000e 044B     		ldr	r3, .L96
 1374 0010 1B7A     		ldrb	r3, [r3, #8]
 1375 0012 002B     		cmp	r3, #0
 1376 0014 01D1     		bne	.L95
 802:main.c        ****     }
 1377              		.loc 1 802 0 is_stmt 1
 1378 0016 FFF7FEFF 		bl	PID_Initialize
 1379              	.LVL132:
 1380              	.L95:
 805:main.c        **** } 
 1381              		.loc 1 805 0
 1382 001a 014B     		ldr	r3, .L96
 1383 001c 1C72     		strb	r4, [r3, #8]
 806:main.c        ****     
 1384              		.loc 1 806 0
 1385              		@ sp needed
 1386              	.LVL133:
 1387 001e 10BD     		pop	{r4, pc}
 1388              	.L97:
 1389              		.align	2
 1390              	.L96:
 1391 0020 00000000 		.word	.LANCHOR1
 1392              		.cfi_endproc
 1393              	.LFE42:
 1394              		.size	PID_SetMode, .-PID_SetMode
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 51


 1395              		.section	.text.PID_SetDrive,"ax",%progbits
 1396              		.align	2
 1397              		.global	PID_SetDrive
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	PID_SetDrive, %function
 1401              	PID_SetDrive:
 1402              	.LFB43:
 817:main.c        **** 
 1403              		.loc 1 817 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              	.LVL134:
 1408 0000 10B5     		push	{r4, lr}
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 4, -8
 1411              		.cfi_offset 14, -4
 821:main.c        ****     
 1412              		.loc 1 821 0
 1413 0002 0549     		ldr	r1, .L99
 1414 0004 FFF7FEFF 		bl	__aeabi_fadd
 1415              	.LVL135:
 1416 0008 FC21     		movs	r1, #252
 1417 000a 8905     		lsls	r1, r1, #22
 1418 000c FFF7FEFF 		bl	__aeabi_fmul
 1419              	.LVL136:
 824:main.c        **** }
 1420              		.loc 1 824 0
 1421 0010 FFF7FEFF 		bl	PWM_Set
 1422              	.LVL137:
 825:main.c        **** 
 1423              		.loc 1 825 0
 1424              		@ sp needed
 1425 0014 10BD     		pop	{r4, pc}
 1426              	.L100:
 1427 0016 C046     		.align	2
 1428              	.L99:
 1429 0018 0000C842 		.word	1120403456
 1430              		.cfi_endproc
 1431              	.LFE43:
 1432              		.size	PID_SetDrive, .-PID_SetDrive
 1433              		.section	.text.PID_Task,"ax",%progbits
 1434              		.align	2
 1435              		.global	PID_Task
 1436              		.code	16
 1437              		.thumb_func
 1438              		.type	PID_Task, %function
 1439              	PID_Task:
 1440              	.LFB44:
 839:main.c        ****     
 1441              		.loc 1 839 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              	.LVL138:
 1446 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 52


 1447              		.cfi_def_cfa_offset 24
 1448              		.cfi_offset 3, -24
 1449              		.cfi_offset 4, -20
 1450              		.cfi_offset 5, -16
 1451              		.cfi_offset 6, -12
 1452              		.cfi_offset 7, -8
 1453              		.cfi_offset 14, -4
 1454              	.LVL139:
 849:main.c        ****     
 1455              		.loc 1 849 0
 1456 0002 0020     		movs	r0, #0
 1457              	.LVL140:
 1458 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1459              	.LVL141:
 1460 0008 774B     		ldr	r3, .L116
 1461 000a 1860     		str	r0, [r3]
 855:main.c        ****     refKi = 0;
 1462              		.loc 1 855 0
 1463 000c 774D     		ldr	r5, .L116+4
 1464 000e 0024     		movs	r4, #0
 1465 0010 2C60     		str	r4, [r5]
 856:main.c        ****     refKd = 0;
 1466              		.loc 1 856 0
 1467 0012 774E     		ldr	r6, .L116+8
 1468 0014 3460     		str	r4, [r6]
 857:main.c        ****     
 1469              		.loc 1 857 0
 1470 0016 774F     		ldr	r7, .L116+12
 1471 0018 3C60     		str	r4, [r7]
 860:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);    
 1472              		.loc 1 860 0
 1473 001a FFF7FEFF 		bl	PID_Initialize
 1474              	.LVL142:
 861:main.c        ****     PID_SetMode(PID_MANUAL);
 1475              		.loc 1 861 0
 1476 001e 3B68     		ldr	r3, [r7]
 1477 0020 3268     		ldr	r2, [r6]
 1478 0022 2968     		ldr	r1, [r5]
 1479 0024 0520     		movs	r0, #5
 1480 0026 FFF7FEFF 		bl	PID_SetTunings
 1481              	.LVL143:
 862:main.c        ****     
 1482              		.loc 1 862 0
 1483 002a 0020     		movs	r0, #0
 1484 002c FFF7FEFF 		bl	PID_SetMode
 1485              	.LVL144:
 865:main.c        ****     outMax_ITerm = 100;
 1486              		.loc 1 865 0
 1487 0030 714B     		ldr	r3, .L116+16
 1488 0032 724A     		ldr	r2, .L116+20
 1489 0034 1360     		str	r3, [r2]
 866:main.c        **** 
 1490              		.loc 1 866 0
 1491 0036 724A     		ldr	r2, .L116+24
 1492 0038 1360     		str	r3, [r2]
 869:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 1493              		.loc 1 869 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 53


 1494 003a 7249     		ldr	r1, .L116+28
 1495 003c 724A     		ldr	r2, .L116+32
 1496 003e 1160     		str	r1, [r2]
 870:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 1497              		.loc 1 870 0
 1498 0040 724A     		ldr	r2, .L116+36
 1499 0042 1360     		str	r3, [r2]
 871:main.c        ****     
 1500              		.loc 1 871 0
 1501 0044 724B     		ldr	r3, .L116+40
 1502 0046 1C60     		str	r4, [r3]
 1503              	.LVL145:
 877:main.c        ****     PID_EffectiveSetpoint = 0;
 1504              		.loc 1 877 0
 1505 0048 0023     		movs	r3, #0
 1506 004a 724A     		ldr	r2, .L116+44
 1507 004c 1360     		str	r3, [r2]
 878:main.c        ****     PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1508              		.loc 1 878 0
 1509 004e 724A     		ldr	r2, .L116+48
 1510 0050 1360     		str	r3, [r2]
 879:main.c        ****     PID_Was_Enabled = false;
 1511              		.loc 1 879 0
 1512 0052 1921     		movs	r1, #25
 1513 0054 714A     		ldr	r2, .L116+52
 1514 0056 1170     		strb	r1, [r2]
 880:main.c        ****     PID_Enabled = false;
 1515              		.loc 1 880 0
 1516 0058 714A     		ldr	r2, .L116+56
 1517 005a 1370     		strb	r3, [r2]
 881:main.c        ****     
 1518              		.loc 1 881 0
 1519 005c 714A     		ldr	r2, .L116+60
 1520 005e 1370     		strb	r3, [r2]
 1521              	.LVL146:
 1522              	.L115:
 885:main.c        ****               
 1523              		.loc 1 885 0
 1524 0060 0120     		movs	r0, #1
 1525 0062 FFF7FEFF 		bl	PROBE_Write
 1526              	.LVL147:
 891:main.c        ****         /* ------------------------------------------------------------------------------------ */
 1527              		.loc 1 891 0
 1528 0066 8020     		movs	r0, #128
 1529 0068 0001     		lsls	r0, r0, #4
 1530 006a FFF7FEFF 		bl	CySysWdtResetCounters
 1531              	.LVL148:
 899:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 1532              		.loc 1 899 0
 1533 006e FFF7FEFF 		bl	xTaskGetTickCount
 1534              	.LVL149:
 1535 0072 0400     		movs	r4, r0
 1536              	.LVL150:
 900:main.c        ****              (now < LastMessageTimeTick) ) {
 1537              		.loc 1 900 0
 1538 0074 6C4B     		ldr	r3, .L116+64
 1539 0076 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 54


 1540 0078 FA22     		movs	r2, #250
 1541 007a 9200     		lsls	r2, r2, #2
 1542 007c 9A18     		adds	r2, r3, r2
 1543 007e 9042     		cmp	r0, r2
 1544 0080 01D8     		bhi	.L102
 900:main.c        ****              (now < LastMessageTimeTick) ) {
 1545              		.loc 1 900 0 is_stmt 0 discriminator 1
 1546 0082 9842     		cmp	r0, r3
 1547 0084 08D2     		bcs	.L103
 1548              	.L102:
 904:main.c        ****             PID_Enabled = false;
 1549              		.loc 1 904 0 is_stmt 1
 1550 0086 5F48     		ldr	r0, .L116+28
 1551              	.LVL151:
 1552 0088 FFF7FEFF 		bl	PWM_Set
 1553              	.LVL152:
 905:main.c        ****             
 1554              		.loc 1 905 0
 1555 008c 0023     		movs	r3, #0
 1556 008e 654A     		ldr	r2, .L116+60
 1557 0090 1370     		strb	r3, [r2]
 909:main.c        **** 
 1558              		.loc 1 909 0
 1559 0092 664A     		ldr	r2, .L116+68
 1560 0094 1370     		strb	r3, [r2]
 1561 0096 9BE0     		b	.L104
 1562              	.LVL153:
 1563              	.L103:
 912:main.c        ****             
 1564              		.loc 1 912 0
 1565 0098 654B     		ldr	r3, .L116+72
 1566 009a 1B78     		ldrb	r3, [r3]
 1567 009c 022B     		cmp	r3, #2
 1568 009e 00D0     		beq	.LCB1389
 1569 00a0 96E0     		b	.L104	@long jump
 1570              	.LCB1389:
 916:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1571              		.loc 1 916 0
 1572 00a2 0620     		movs	r0, #6
 1573              	.LVL154:
 1574 00a4 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1575              	.LVL155:
 917:main.c        ****         
 1576              		.loc 1 917 0
 1577 00a8 0620     		movs	r0, #6
 1578 00aa FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1579              	.LVL156:
 920:main.c        ****                 
 1580              		.loc 1 920 0
 1581 00ae 5D4B     		ldr	r3, .L116+60
 1582 00b0 1B78     		ldrb	r3, [r3]
 1583 00b2 002B     		cmp	r3, #0
 1584 00b4 44D1     		bne	.L105
 924:main.c        ****                     
 1585              		.loc 1 924 0
 1586 00b6 5D4B     		ldr	r3, .L116+68
 1587 00b8 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 55


 1588 00ba 52B2     		sxtb	r2, r2
 1589 00bc 5D4B     		ldr	r3, .L116+76
 1590 00be 1B78     		ldrb	r3, [r3]
 1591 00c0 5BB2     		sxtb	r3, r3
 1592 00c2 9A42     		cmp	r2, r3
 1593 00c4 0FD0     		beq	.L106
 924:main.c        ****                     
 1594              		.loc 1 924 0 is_stmt 0 discriminator 1
 1595 00c6 594B     		ldr	r3, .L116+68
 1596 00c8 1B78     		ldrb	r3, [r3]
 1597 00ca 002B     		cmp	r3, #0
 1598 00cc 0BD0     		beq	.L106
 927:main.c        ****                     
 1599              		.loc 1 927 0 is_stmt 1
 1600 00ce 574B     		ldr	r3, .L116+68
 1601 00d0 1B78     		ldrb	r3, [r3]
 1602 00d2 5BB2     		sxtb	r3, r3
 1603 00d4 574A     		ldr	r2, .L116+76
 1604 00d6 1370     		strb	r3, [r2]
 930:main.c        ****                     
 1605              		.loc 1 930 0
 1606 00d8 FFF7FEFF 		bl	GetPosition
 1607              	.LVL157:
 1608 00dc 564B     		ldr	r3, .L116+80
 1609 00de 1860     		str	r0, [r3]
 933:main.c        ****                 }                
 1610              		.loc 1 933 0
 1611 00e0 0020     		movs	r0, #0
 1612 00e2 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1613              	.LVL158:
 1614              	.L106:
 937:main.c        **** 
 1615              		.loc 1 937 0
 1616 00e6 514D     		ldr	r5, .L116+68
 1617 00e8 2878     		ldrb	r0, [r5]
 1618 00ea 40B2     		sxtb	r0, r0
 1619 00ec 3230     		adds	r0, r0, #50
 1620 00ee FFF7FEFF 		bl	__aeabi_i2f
 1621              	.LVL159:
 1622 00f2 FFF7FEFF 		bl	PWM_Set
 1623              	.LVL160:
 940:main.c        ****                 
 1624              		.loc 1 940 0
 1625 00f6 2B78     		ldrb	r3, [r5]
 1626 00f8 002B     		cmp	r3, #0
 1627 00fa 21D0     		beq	.L105
 944:main.c        ****                     DeltaPosition = labs( CurrentPosition - LastPosition );
 1628              		.loc 1 944 0
 1629 00fc FFF7FEFF 		bl	GetPosition
 1630              	.LVL161:
 945:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 1631              		.loc 1 945 0
 1632 0100 4D4B     		ldr	r3, .L116+80
 1633 0102 1B68     		ldr	r3, [r3]
 1634 0104 C01A     		subs	r0, r0, r3
 1635              	.LVL162:
 1636 0106 C317     		asrs	r3, r0, #31
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 56


 1637 0108 C518     		adds	r5, r0, r3
 1638 010a 5D40     		eors	r5, r3
 1639              	.LVL163:
 946:main.c        ****                     
 1640              		.loc 1 946 0
 1641 010c FFF7FEFF 		bl	Index_Counter_1_ReadCounter
 1642              	.LVL164:
 1643 0110 0600     		movs	r6, r0
 1644              	.LVL165:
 950:main.c        ****                         if (CurrentIndexCount == 0)
 1645              		.loc 1 950 0
 1646 0112 4A4B     		ldr	r3, .L116+84
 1647 0114 1B78     		ldrb	r3, [r3]
 1648 0116 002B     		cmp	r3, #0
 1649 0118 07D0     		beq	.L107
 951:main.c        ****                             if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 1650              		.loc 1 951 0
 1651 011a 0028     		cmp	r0, #0
 1652 011c 05D1     		bne	.L107
 952:main.c        ****                                 AssertFault(fsIndex);        
 1653              		.loc 1 952 0
 1654 011e 484B     		ldr	r3, .L116+88
 1655 0120 9D42     		cmp	r5, r3
 1656 0122 02DD     		ble	.L107
 953:main.c        ****                     }
 1657              		.loc 1 953 0
 1658 0124 0420     		movs	r0, #4
 1659              	.LVL166:
 1660 0126 FFF7FEFF 		bl	AssertFault
 1661              	.LVL167:
 1662              	.L107:
 958:main.c        ****                         if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 1663              		.loc 1 958 0
 1664 012a 444B     		ldr	r3, .L116+84
 1665 012c 1B78     		ldrb	r3, [r3]
 1666 012e 002B     		cmp	r3, #0
 1667 0130 06D0     		beq	.L105
 959:main.c        ****                             AssertFault(fsEncoder);
 1668              		.loc 1 959 0
 1669 0132 002E     		cmp	r6, #0
 1670 0134 04D0     		beq	.L105
 959:main.c        ****                             AssertFault(fsEncoder);
 1671              		.loc 1 959 0 is_stmt 0 discriminator 1
 1672 0136 012D     		cmp	r5, #1
 1673 0138 02DC     		bgt	.L105
 960:main.c        ****                     }
 1674              		.loc 1 960 0 is_stmt 1
 1675 013a 0220     		movs	r0, #2
 1676 013c FFF7FEFF 		bl	AssertFault
 1677              	.LVL168:
 1678              	.L105:
 967:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1679              		.loc 1 967 0
 1680 0140 374B     		ldr	r3, .L116+56
 1681 0142 1B78     		ldrb	r3, [r3]
 1682 0144 002B     		cmp	r3, #0
 1683 0146 07D1     		bne	.L108
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 57


 967:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1684              		.loc 1 967 0 is_stmt 0 discriminator 1
 1685 0148 364A     		ldr	r2, .L116+60
 1686 014a 1278     		ldrb	r2, [r2]
 1687 014c 002A     		cmp	r2, #0
 1688 014e 03D0     		beq	.L108
 968:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 1689              		.loc 1 968 0 is_stmt 1
 1690 0150 0120     		movs	r0, #1
 1691 0152 FFF7FEFF 		bl	PID_SetMode
 1692              	.LVL169:
 1693 0156 08E0     		b	.L109
 1694              	.L108:
 969:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1695              		.loc 1 969 0
 1696 0158 324A     		ldr	r2, .L116+60
 1697 015a 1278     		ldrb	r2, [r2]
 1698 015c 002A     		cmp	r2, #0
 1699 015e 04D1     		bne	.L109
 969:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1700              		.loc 1 969 0 is_stmt 0 discriminator 1
 1701 0160 002B     		cmp	r3, #0
 1702 0162 02D0     		beq	.L109
 970:main.c        ****             } else {
 1703              		.loc 1 970 0 is_stmt 1
 1704 0164 0020     		movs	r0, #0
 1705 0166 FFF7FEFF 		bl	PID_SetMode
 1706              	.LVL170:
 1707              	.L109:
 976:main.c        ****             
 1708              		.loc 1 976 0
 1709 016a 2E4B     		ldr	r3, .L116+60
 1710 016c 1B78     		ldrb	r3, [r3]
 1711 016e 2C4A     		ldr	r2, .L116+56
 1712 0170 1370     		strb	r3, [r2]
 991:main.c        ****                 
 1713              		.loc 1 991 0
 1714 0172 002B     		cmp	r3, #0
 1715 0174 29D0     		beq	.L110
 993:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;
 1716              		.loc 1 993 0
 1717 0176 294B     		ldr	r3, .L116+52
 1718 0178 1B78     		ldrb	r3, [r3]
 1719 017a 002B     		cmp	r3, #0
 1720 017c 04D1     		bne	.L111
 994:main.c        ****                 } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1721              		.loc 1 994 0
 1722 017e 254B     		ldr	r3, .L116+44
 1723 0180 1A68     		ldr	r2, [r3]
 1724 0182 254B     		ldr	r3, .L116+48
 1725 0184 1A60     		str	r2, [r3]
 1726 0186 16E0     		b	.L112
 1727              	.L111:
 995:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;                                          
 1728              		.loc 1 995 0
 1729 0188 234A     		ldr	r2, .L116+48
 1730 018a 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 58


 1731 018c 214A     		ldr	r2, .L116+44
 1732 018e 1068     		ldr	r0, [r2]
 1733 0190 0A1A     		subs	r2, r1, r0
 1734 0192 D517     		asrs	r5, r2, #31
 1735 0194 5219     		adds	r2, r2, r5
 1736 0196 6A40     		eors	r2, r5
 1737 0198 5D00     		lsls	r5, r3, #1
 1738 019a AA42     		cmp	r2, r5
 1739 019c 02DC     		bgt	.L113
 996:main.c        ****                 } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1740              		.loc 1 996 0
 1741 019e 1E4B     		ldr	r3, .L116+48
 1742 01a0 1860     		str	r0, [r3]
 1743 01a2 08E0     		b	.L112
 1744              	.L113:
 997:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1745              		.loc 1 997 0
 1746 01a4 8142     		cmp	r1, r0
 1747 01a6 03DA     		bge	.L114
 998:main.c        ****                 } else {
 1748              		.loc 1 998 0
 1749 01a8 CB18     		adds	r3, r1, r3
 1750 01aa 1B4A     		ldr	r2, .L116+48
 1751 01ac 1360     		str	r3, [r2]
 1752 01ae 02E0     		b	.L112
 1753              	.L114:
1000:main.c        ****                 }
 1754              		.loc 1 1000 0
 1755 01b0 CB1A     		subs	r3, r1, r3
 1756 01b2 194A     		ldr	r2, .L116+48
 1757 01b4 1360     		str	r3, [r2]
 1758              	.L112:
1004:main.c        ****             
 1759              		.loc 1 1004 0
 1760 01b6 184B     		ldr	r3, .L116+48
 1761 01b8 1968     		ldr	r1, [r3]
 1762 01ba 2000     		movs	r0, r4
 1763 01bc FFF7FEFF 		bl	PID_Compute
 1764              	.LVL171:
1007:main.c        ****                 
 1765              		.loc 1 1007 0
 1766 01c0 204B     		ldr	r3, .L116+92
 1767 01c2 1860     		str	r0, [r3]
1010:main.c        ****                 
 1768              		.loc 1 1010 0
 1769 01c4 FFF7FEFF 		bl	PID_SetDrive
 1770              	.LVL172:
 1771 01c8 02E0     		b	.L104
 1772              	.L110:
1014:main.c        ****             }
 1773              		.loc 1 1014 0
 1774 01ca 0022     		movs	r2, #0
 1775 01cc 1D4B     		ldr	r3, .L116+92
 1776 01ce 1A60     		str	r2, [r3]
 1777              	.L104:
1019:main.c        ****         
 1778              		.loc 1 1019 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 59


 1779 01d0 0020     		movs	r0, #0
 1780 01d2 FFF7FEFF 		bl	PROBE_Write
 1781              	.LVL173:
1022:main.c        **** 
 1782              		.loc 1 1022 0
 1783 01d6 0520     		movs	r0, #5
 1784 01d8 FFF7FEFF 		bl	vTaskDelay
 1785              	.LVL174:
1025:main.c        ****     }
 1786              		.loc 1 1025 0
 1787 01dc 0020     		movs	r0, #0
 1788 01de FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1789              	.LVL175:
 1790 01e2 014B     		ldr	r3, .L116
 1791 01e4 1860     		str	r0, [r3]
1026:main.c        ****    
 1792              		.loc 1 1026 0
 1793 01e6 3BE7     		b	.L115
 1794              	.L117:
 1795              		.align	2
 1796              	.L116:
 1797 01e8 00000000 		.word	uxHighWaterMark_PID
 1798 01ec 00000000 		.word	refKp
 1799 01f0 00000000 		.word	refKi
 1800 01f4 00000000 		.word	refKd
 1801 01f8 0000C842 		.word	1120403456
 1802 01fc 00000000 		.word	outMax_Total
 1803 0200 00000000 		.word	outMax_ITerm
 1804 0204 00004842 		.word	1112014848
 1805 0208 00000000 		.word	pwmLimit
 1806 020c 00000000 		.word	pwmMax
 1807 0210 00000000 		.word	pwmMin
 1808 0214 00000000 		.word	PID_Setpoint
 1809 0218 00000000 		.word	PID_EffectiveSetpoint
 1810 021c 00000000 		.word	PID_EffSetDelta
 1811 0220 00000000 		.word	PID_Was_Enabled
 1812 0224 00000000 		.word	PID_Enabled
 1813 0228 00000000 		.word	LastMessageTimeTick
 1814 022c 00000000 		.word	Jog
 1815 0230 00000000 		.word	ConfigState
 1816 0234 00000000 		.word	LastJog
 1817 0238 00000000 		.word	LastPosition
 1818 023c 00000000 		.word	.LANCHOR0
 1819 0240 204E0000 		.word	20000
 1820 0244 00000000 		.word	PWM
 1821              		.cfi_endproc
 1822              	.LFE44:
 1823              		.size	PID_Task, .-PID_Task
 1824              		.section	.text.main,"ax",%progbits
 1825              		.align	2
 1826              		.global	main
 1827              		.code	16
 1828              		.thumb_func
 1829              		.type	main, %function
 1830              	main:
 1831              	.LFB45:
1041:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 60


 1832              		.loc 1 1041 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 1836 0000 30B5     		push	{r4, r5, lr}
 1837              		.cfi_def_cfa_offset 12
 1838              		.cfi_offset 4, -12
 1839              		.cfi_offset 5, -8
 1840              		.cfi_offset 14, -4
 1841 0002 83B0     		sub	sp, sp, #12
 1842              		.cfi_def_cfa_offset 24
1044:main.c        **** 
 1843              		.loc 1 1044 0
 1844 0004 FFF7FEFF 		bl	setupFreeRTOS
 1845              	.LVL176:
1052:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1846              		.loc 1 1052 0
 1847 0008 0120     		movs	r0, #1
 1848 000a FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1849              	.LVL177:
1053:main.c        **** 
 1850              		.loc 1 1053 0
 1851 000e 0120     		movs	r0, #1
 1852 0010 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1853              	.LVL178:
1059:main.c        ****         PID_Task,       /* Task function */
 1854              		.loc 1 1059 0
 1855 0014 0024     		movs	r4, #0
 1856 0016 0194     		str	r4, [sp, #4]
 1857 0018 0323     		movs	r3, #3
 1858 001a 0093     		str	r3, [sp]
 1859 001c 0023     		movs	r3, #0
 1860 001e 4022     		movs	r2, #64
 1861 0020 3649     		ldr	r1, .L121
 1862 0022 3748     		ldr	r0, .L121+4
 1863 0024 FFF7FEFF 		bl	xTaskCreate
 1864              	.LVL179:
1067:main.c        ****         Comm_Task,       /* Task function */
 1865              		.loc 1 1067 0
 1866 0028 0194     		str	r4, [sp, #4]
 1867 002a 0223     		movs	r3, #2
 1868 002c 0093     		str	r3, [sp]
 1869 002e 0023     		movs	r3, #0
 1870 0030 6422     		movs	r2, #100
 1871 0032 3449     		ldr	r1, .L121+8
 1872 0034 3448     		ldr	r0, .L121+12
 1873 0036 FFF7FEFF 		bl	xTaskCreate
 1874              	.LVL180:
1075:main.c        ****         Current_Read_Task, /* Task function */
 1875              		.loc 1 1075 0
 1876 003a 0194     		str	r4, [sp, #4]
 1877 003c 0123     		movs	r3, #1
 1878 003e 0093     		str	r3, [sp]
 1879 0040 0023     		movs	r3, #0
 1880 0042 4022     		movs	r2, #64
 1881 0044 3149     		ldr	r1, .L121+16
 1882 0046 3248     		ldr	r0, .L121+20
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 61


 1883 0048 FFF7FEFF 		bl	xTaskCreate
 1884              	.LVL181:
1086:main.c        **** 
 1885              		.loc 1 1086 0
 1886 004c 0120     		movs	r0, #1
 1887 004e FFF7FEFF 		bl	xQueueCreateMutex
 1888              	.LVL182:
 1889 0052 304B     		ldr	r3, .L121+24
 1890 0054 1860     		str	r0, [r3]
1089:main.c        ****         s = 1;
 1891              		.loc 1 1089 0
 1892 0056 0028     		cmp	r0, #0
 1893 0058 0BD1     		bne	.L119
 1894 005a 0134     		adds	r4, r4, #1
 1895              	.L120:
 1896              	.LVL183:
1093:main.c        ****             LED_Write(s); 
 1897              		.loc 1 1093 0 discriminator 1
 1898 005c 6342     		rsbs	r3, r4, #0
 1899 005e 5C41     		adcs	r4, r4, r3
 1900              	.LVL184:
 1901 0060 E4B2     		uxtb	r4, r4
 1902              	.LVL185:
1094:main.c        ****             CyDelay(1000u);                    
 1903              		.loc 1 1094 0 discriminator 1
 1904 0062 2000     		movs	r0, r4
 1905 0064 FFF7FEFF 		bl	LED_Write
 1906              	.LVL186:
1095:main.c        ****         }
 1907              		.loc 1 1095 0 discriminator 1
 1908 0068 FA20     		movs	r0, #250
 1909 006a 8000     		lsls	r0, r0, #2
 1910 006c FFF7FEFF 		bl	CyDelay
 1911              	.LVL187:
 1912 0070 F4E7     		b	.L120
 1913              	.LVL188:
 1914              	.L119:
1105:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 1915              		.loc 1 1105 0
 1916 0072 2948     		ldr	r0, .L121+28
 1917 0074 FFF7FEFF 		bl	isr_home_StartEx
 1918              	.LVL189:
1106:main.c        ****     
 1919              		.loc 1 1106 0
 1920 0078 2848     		ldr	r0, .L121+32
 1921 007a FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1922              	.LVL190:
1109:main.c        ****     
 1923              		.loc 1 1109 0
 1924 007e 2848     		ldr	r0, .L121+36
 1925 0080 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1926              	.LVL191:
1112:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
 1927              		.loc 1 1112 0
 1928 0084 0320     		movs	r0, #3
 1929 0086 FFF7FEFF 		bl	isr_home_SetPriority
 1930              	.LVL192:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 62


1113:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
 1931              		.loc 1 1113 0
 1932 008a 0220     		movs	r0, #2
 1933 008c FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1934              	.LVL193:
1114:main.c        **** 
 1935              		.loc 1 1114 0
 1936 0090 0320     		movs	r0, #3
 1937 0092 FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1938              	.LVL194:
1117:main.c        ****     
 1939              		.loc 1 1117 0
 1940              		.syntax divided
 1941              	@ 1117 "main.c" 1
 1942 0096 62B6     		CPSIE   i
 1943              	@ 0 "" 2
1148:main.c        ****     CyDelay(100u);
 1944              		.loc 1 1148 0
 1945              		.thumb
 1946              		.syntax unified
 1947 0098 FFF7FEFF 		bl	I2C_Start
 1948              	.LVL195:
1149:main.c        ****     SPI_1_Start();
 1949              		.loc 1 1149 0
 1950 009c 6420     		movs	r0, #100
 1951 009e FFF7FEFF 		bl	CyDelay
 1952              	.LVL196:
1150:main.c        ****     
 1953              		.loc 1 1150 0
 1954 00a2 FFF7FEFF 		bl	SPI_1_Start
 1955              	.LVL197:
1154:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1956              		.loc 1 1154 0
 1957 00a6 FFF7FEFF 		bl	PWM_1_Start
 1958              	.LVL198:
1155:main.c        ****     PWM_Set(PWM_IDLE);   
 1959              		.loc 1 1155 0
 1960 00aa C820     		movs	r0, #200
 1961 00ac C000     		lsls	r0, r0, #3
 1962 00ae FFF7FEFF 		bl	PWM_1_WritePeriod
 1963              	.LVL199:
1156:main.c        ****     
 1964              		.loc 1 1156 0
 1965 00b2 1C48     		ldr	r0, .L121+40
 1966 00b4 FFF7FEFF 		bl	PWM_Set
 1967              	.LVL200:
1159:main.c        ****     
 1968              		.loc 1 1159 0
 1969 00b8 0024     		movs	r4, #0
 1970 00ba 1B4B     		ldr	r3, .L121+44
 1971 00bc 1C70     		strb	r4, [r3]
1162:main.c        ****    
 1972              		.loc 1 1162 0
 1973 00be 1B4B     		ldr	r3, .L121+48
 1974 00c0 1C70     		strb	r4, [r3]
1165:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1975              		.loc 1 1165 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 63


 1976 00c2 FFF7FEFF 		bl	Counter_1_Start
 1977              	.LVL201:
1166:main.c        ****     LastPosition = ENCODER_MAX;
 1978              		.loc 1 1166 0
 1979 00c6 1A4D     		ldr	r5, .L121+52
 1980 00c8 2800     		movs	r0, r5
 1981 00ca FFF7FEFF 		bl	Counter_1_WriteCounter
 1982              	.LVL202:
1167:main.c        ****     
 1983              		.loc 1 1167 0
 1984 00ce 194B     		ldr	r3, .L121+56
 1985 00d0 1D60     		str	r5, [r3]
1170:main.c        ****     Index_Counter_1_WriteCounter(0);
 1986              		.loc 1 1170 0
 1987 00d2 FFF7FEFF 		bl	Index_Counter_1_Start
 1988              	.LVL203:
1171:main.c        ****      
 1989              		.loc 1 1171 0
 1990 00d6 0020     		movs	r0, #0
 1991 00d8 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1992              	.LVL204:
1174:main.c        ****     
 1993              		.loc 1 1174 0
 1994 00dc FFF7FEFF 		bl	xTaskGetTickCount
 1995              	.LVL205:
 1996 00e0 154B     		ldr	r3, .L121+60
 1997 00e2 1860     		str	r0, [r3]
1177:main.c        ****     ConfigSequence = 0;
 1998              		.loc 1 1177 0
 1999 00e4 0122     		movs	r2, #1
 2000 00e6 154B     		ldr	r3, .L121+64
 2001 00e8 1A70     		strb	r2, [r3]
1178:main.c        ****     ChecksumErrors = 0;
 2002              		.loc 1 1178 0
 2003 00ea 154B     		ldr	r3, .L121+68
 2004 00ec 1C70     		strb	r4, [r3]
1179:main.c        ****    
 2005              		.loc 1 1179 0
 2006 00ee 154B     		ldr	r3, .L121+72
 2007 00f0 1C80     		strh	r4, [r3]
1184:main.c        ****    
 2008              		.loc 1 1184 0
 2009 00f2 FFF7FEFF 		bl	vTaskStartScheduler
 2010              	.LVL206:
1190:main.c        **** 
 2011              		.loc 1 1190 0
 2012 00f6 0120     		movs	r0, #1
 2013 00f8 03B0     		add	sp, sp, #12
 2014              		@ sp needed
 2015 00fa 30BD     		pop	{r4, r5, pc}
 2016              	.L122:
 2017              		.align	2
 2018              	.L121:
 2019 00fc 00000000 		.word	.LC89
 2020 0100 00000000 		.word	PID_Task
 2021 0104 04000000 		.word	.LC92
 2022 0108 00000000 		.word	Comm_Task
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 64


 2023 010c 14000000 		.word	.LC95
 2024 0110 00000000 		.word	Current_Read_Task
 2025 0114 00000000 		.word	Lock
 2026 0118 00000000 		.word	HomeIsrHandler
 2027 011c 00000000 		.word	RSTIsrHandler
 2028 0120 00000000 		.word	SPI_SS_IsrHandler
 2029 0124 00004842 		.word	1112014848
 2030 0128 00000000 		.word	Jog
 2031 012c 00000000 		.word	.LANCHOR0
 2032 0130 FFFFFF00 		.word	16777215
 2033 0134 00000000 		.word	LastPosition
 2034 0138 00000000 		.word	LastMessageTimeTick
 2035 013c 00000000 		.word	ConfigState
 2036 0140 00000000 		.word	ConfigSequence
 2037 0144 00000000 		.word	ChecksumErrors
 2038              		.cfi_endproc
 2039              	.LFE45:
 2040              		.size	main, .-main
 2041              		.comm	txMessageState,1,1
 2042              		.comm	txMessage,30,4
 2043              		.comm	rxMessage,30,4
 2044              		.comm	LastMessageTimeTick,4,4
 2045              		.comm	Lock,4,4
 2046              		.comm	uxHighWaterMark_Comm,4,4
 2047              		.comm	uxHighWaterMark_Current,4,4
 2048              		.comm	uxHighWaterMark_PID,4,4
 2049              		.comm	CurrentI2Cinbuf,20,4
 2050              		.comm	PWM,4,4
 2051              		.comm	Current,2,2
 2052              		.comm	ChecksumErrors,2,2
 2053              		.comm	ConfigSequence,1,1
 2054              		.comm	FaultState,1,1
 2055              		.comm	ConfigState,1,1
 2056              		.global	homingDone
 2057              		.comm	pwmMin,4,4
 2058              		.comm	pwmMax,4,4
 2059              		.comm	pwmLimit,4,4
 2060              		.comm	outMax_ITerm,4,4
 2061              		.comm	outMax_Total,4,4
 2062              		.global	refSampleTime
 2063              		.comm	kd,4,4
 2064              		.comm	ki,4,4
 2065              		.comm	kp,4,4
 2066              		.comm	refKd,4,4
 2067              		.comm	refKi,4,4
 2068              		.comm	refKp,4,4
 2069              		.comm	LastPosition,4,4
 2070              		.comm	Position,4,4
 2071              		.comm	ITerm,4,4
 2072              		.comm	Output,4,4
 2073              		.comm	lastTime,4,4
 2074              		.comm	PID_EffSetDelta,1,1
 2075              		.comm	PID_EffectiveSetpoint,4,4
 2076              		.comm	PID_Setpoint,4,4
 2077              		.comm	PID_Was_Enabled,1,1
 2078              		.comm	PID_Enabled,1,1
 2079              		.comm	LastJog,1,1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 65


 2080              		.comm	Jog,1,1
 2081              		.global	inAuto
 2082              		.data
 2083              		.align	2
 2084              		.set	.LANCHOR0,. + 0
 2085              		.type	homingDone, %object
 2086              		.size	homingDone, 1
 2087              	homingDone:
 2088 0000 01       		.byte	1
 2089 0001 000000   		.space	3
 2090              		.type	refSampleTime, %object
 2091              		.size	refSampleTime, 4
 2092              	refSampleTime:
 2093 0004 05000000 		.word	5
 2094              		.section	.rodata.str1.4,"aMS",%progbits,1
 2095              		.align	2
 2096              	.LC89:
 2097 0000 50494400 		.ascii	"PID\000"
 2098              	.LC92:
 2099 0004 436F6D6D 		.ascii	"Communications\000"
 2099      756E6963 
 2099      6174696F 
 2099      6E7300
 2100 0013 00       		.space	1
 2101              	.LC95:
 2102 0014 52656164 		.ascii	"Read Current\000"
 2102      20437572 
 2102      72656E74 
 2102      00
 2103              		.bss
 2104              		.align	2
 2105              		.set	.LANCHOR1,. + 0
 2106              		.type	RawPosition.7600, %object
 2107              		.size	RawPosition.7600, 4
 2108              	RawPosition.7600:
 2109 0000 00000000 		.space	4
 2110              		.type	result.7601, %object
 2111              		.size	result.7601, 4
 2112              	result.7601:
 2113 0004 00000000 		.space	4
 2114              		.type	inAuto, %object
 2115              		.size	inAuto, 1
 2116              	inAuto:
 2117 0008 00       		.space	1
 2118              		.text
 2119              	.Letext0:
 2120              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2121              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2122              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2123              		.file 5 ".\\FreeRTOS/portmacro.h"
 2124              		.file 6 ".\\FreeRTOS/queue.h"
 2125              		.file 7 ".\\FreeRTOS/semphr.h"
 2126              		.file 8 ".\\FreeRTOS/task.h"
 2127              		.file 9 "Generated_Source\\PSoC4/I2C.h"
 2128              		.file 10 "INA219.h"
 2129              		.file 11 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 2130              		.file 12 "Generated_Source\\PSoC4/Reset_Encoder.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 66


 2131              		.file 13 "Generated_Source\\PSoC4/Counter_1.h"
 2132              		.file 14 "Generated_Source\\PSoC4/Index_Counter_1.h"
 2133              		.file 15 "Generated_Source\\PSoC4/isr_home.h"
 2134              		.file 16 "Generated_Source\\PSoC4/HOME_IN.h"
 2135              		.file 17 "Generated_Source\\PSoC4/spi_ss.h"
 2136              		.file 18 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 2137              		.file 19 "Generated_Source\\PSoC4/CyLib.h"
 2138              		.file 20 "Generated_Source\\PSoC4/PWM_1.h"
 2139              		.file 21 "Generated_Source\\PSoC4/PROBE.h"
 2140              		.file 22 "Generated_Source\\PSoC4/CyLFClk.h"
 2141              		.file 23 "Generated_Source\\PSoC4/HOME_OUT.h"
 2142              		.file 24 "Generated_Source\\PSoC4/INDEX_OUT.h"
 2143              		.file 25 "Generated_Source\\PSoC4/LED.h"
 2144              		.file 26 "Generated_Source\\PSoC4/isr_spi_ss.h"
 2145              		.file 27 "Generated_Source\\PSoC4/SPI_1.h"
 2146              		.file 28 "Generated_Source\\PSoC4/core_cm0_psoc4.h"
 2147              		.section	.debug_info,"",%progbits
 2148              	.Ldebug_info0:
 2149 0000 EF130000 		.4byte	0x13ef
 2150 0004 0400     		.2byte	0x4
 2151 0006 00000000 		.4byte	.Ldebug_abbrev0
 2152 000a 04       		.byte	0x4
 2153 000b 01       		.uleb128 0x1
 2154 000c A0020000 		.4byte	.LASF208
 2155 0010 0C       		.byte	0xc
 2156 0011 2C000000 		.4byte	.LASF209
 2157 0015 070B0000 		.4byte	.LASF210
 2158 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2159 001d 00000000 		.4byte	0
 2160 0021 00000000 		.4byte	.Ldebug_line0
 2161 0025 02       		.uleb128 0x2
 2162 0026 04       		.byte	0x4
 2163 0027 04       		.byte	0x4
 2164 0028 A2010000 		.4byte	.LASF0
 2165 002c 03       		.uleb128 0x3
 2166 002d 04       		.byte	0x4
 2167 002e 05       		.byte	0x5
 2168 002f 696E7400 		.ascii	"int\000"
 2169 0033 02       		.uleb128 0x2
 2170 0034 04       		.byte	0x4
 2171 0035 07       		.byte	0x7
 2172 0036 74000000 		.4byte	.LASF1
 2173 003a 02       		.uleb128 0x2
 2174 003b 08       		.byte	0x8
 2175 003c 05       		.byte	0x5
 2176 003d 63050000 		.4byte	.LASF2
 2177 0041 02       		.uleb128 0x2
 2178 0042 08       		.byte	0x8
 2179 0043 04       		.byte	0x4
 2180 0044 B6060000 		.4byte	.LASF3
 2181 0048 02       		.uleb128 0x2
 2182 0049 01       		.byte	0x1
 2183 004a 06       		.byte	0x6
 2184 004b 0D0A0000 		.4byte	.LASF4
 2185 004f 04       		.uleb128 0x4
 2186 0050 4C080000 		.4byte	.LASF6
 2187 0054 02       		.byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 67


 2188 0055 1D       		.byte	0x1d
 2189 0056 5A000000 		.4byte	0x5a
 2190 005a 02       		.uleb128 0x2
 2191 005b 01       		.byte	0x1
 2192 005c 08       		.byte	0x8
 2193 005d 29090000 		.4byte	.LASF5
 2194 0061 04       		.uleb128 0x4
 2195 0062 93050000 		.4byte	.LASF7
 2196 0066 02       		.byte	0x2
 2197 0067 29       		.byte	0x29
 2198 0068 6C000000 		.4byte	0x6c
 2199 006c 02       		.uleb128 0x2
 2200 006d 02       		.byte	0x2
 2201 006e 05       		.byte	0x5
 2202 006f 26070000 		.4byte	.LASF8
 2203 0073 02       		.uleb128 0x2
 2204 0074 02       		.byte	0x2
 2205 0075 07       		.byte	0x7
 2206 0076 190A0000 		.4byte	.LASF9
 2207 007a 02       		.uleb128 0x2
 2208 007b 04       		.byte	0x4
 2209 007c 05       		.byte	0x5
 2210 007d 6E070000 		.4byte	.LASF10
 2211 0081 04       		.uleb128 0x4
 2212 0082 47090000 		.4byte	.LASF11
 2213 0086 02       		.byte	0x2
 2214 0087 41       		.byte	0x41
 2215 0088 8C000000 		.4byte	0x8c
 2216 008c 02       		.uleb128 0x2
 2217 008d 04       		.byte	0x4
 2218 008e 07       		.byte	0x7
 2219 008f AC080000 		.4byte	.LASF12
 2220 0093 02       		.uleb128 0x2
 2221 0094 08       		.byte	0x8
 2222 0095 07       		.byte	0x7
 2223 0096 F7010000 		.4byte	.LASF13
 2224 009a 04       		.uleb128 0x4
 2225 009b CF040000 		.4byte	.LASF14
 2226 009f 03       		.byte	0x3
 2227 00a0 18       		.byte	0x18
 2228 00a1 4F000000 		.4byte	0x4f
 2229 00a5 04       		.uleb128 0x4
 2230 00a6 E8010000 		.4byte	.LASF15
 2231 00aa 03       		.byte	0x3
 2232 00ab 20       		.byte	0x20
 2233 00ac 61000000 		.4byte	0x61
 2234 00b0 04       		.uleb128 0x4
 2235 00b1 53010000 		.4byte	.LASF16
 2236 00b5 03       		.byte	0x3
 2237 00b6 30       		.byte	0x30
 2238 00b7 81000000 		.4byte	0x81
 2239 00bb 05       		.uleb128 0x5
 2240 00bc 570A0000 		.4byte	.LASF17
 2241 00c0 04       		.byte	0x4
 2242 00c1 FC01     		.2byte	0x1fc
 2243 00c3 5A000000 		.4byte	0x5a
 2244 00c7 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 68


 2245 00c8 A2040000 		.4byte	.LASF18
 2246 00cc 04       		.byte	0x4
 2247 00cd FD01     		.2byte	0x1fd
 2248 00cf 73000000 		.4byte	0x73
 2249 00d3 05       		.uleb128 0x5
 2250 00d4 F1050000 		.4byte	.LASF19
 2251 00d8 04       		.byte	0x4
 2252 00d9 FE01     		.2byte	0x1fe
 2253 00db 8C000000 		.4byte	0x8c
 2254 00df 05       		.uleb128 0x5
 2255 00e0 A9040000 		.4byte	.LASF20
 2256 00e4 04       		.byte	0x4
 2257 00e5 FF01     		.2byte	0x1ff
 2258 00e7 48000000 		.4byte	0x48
 2259 00eb 05       		.uleb128 0x5
 2260 00ec A1000000 		.4byte	.LASF21
 2261 00f0 04       		.byte	0x4
 2262 00f1 0002     		.2byte	0x200
 2263 00f3 6C000000 		.4byte	0x6c
 2264 00f7 05       		.uleb128 0x5
 2265 00f8 CB010000 		.4byte	.LASF22
 2266 00fc 04       		.byte	0x4
 2267 00fd 0102     		.2byte	0x201
 2268 00ff 7A000000 		.4byte	0x7a
 2269 0103 02       		.uleb128 0x2
 2270 0104 08       		.byte	0x8
 2271 0105 04       		.byte	0x4
 2272 0106 5D0A0000 		.4byte	.LASF23
 2273 010a 02       		.uleb128 0x2
 2274 010b 01       		.byte	0x1
 2275 010c 08       		.byte	0x8
 2276 010d 52040000 		.4byte	.LASF24
 2277 0111 06       		.uleb128 0x6
 2278 0112 BB000000 		.4byte	0xbb
 2279 0116 06       		.uleb128 0x6
 2280 0117 C7000000 		.4byte	0xc7
 2281 011b 05       		.uleb128 0x5
 2282 011c D5060000 		.4byte	.LASF25
 2283 0120 04       		.byte	0x4
 2284 0121 A802     		.2byte	0x2a8
 2285 0123 27010000 		.4byte	0x127
 2286 0127 06       		.uleb128 0x6
 2287 0128 D3000000 		.4byte	0xd3
 2288 012c 05       		.uleb128 0x5
 2289 012d CF050000 		.4byte	.LASF26
 2290 0131 04       		.byte	0x4
 2291 0132 B802     		.2byte	0x2b8
 2292 0134 38010000 		.4byte	0x138
 2293 0138 07       		.uleb128 0x7
 2294 0139 04       		.byte	0x4
 2295 013a 3E010000 		.4byte	0x13e
 2296 013e 08       		.uleb128 0x8
 2297 013f 02       		.uleb128 0x2
 2298 0140 04       		.byte	0x4
 2299 0141 07       		.byte	0x7
 2300 0142 A3080000 		.4byte	.LASF27
 2301 0146 09       		.uleb128 0x9
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 69


 2302 0147 04       		.byte	0x4
 2303 0148 0A       		.uleb128 0xa
 2304 0149 D0060000 		.4byte	.LASF211
 2305 014d 01       		.byte	0x1
 2306 014e 48000000 		.4byte	0x48
 2307 0152 1C       		.byte	0x1c
 2308 0153 17       		.byte	0x17
 2309 0154 77010000 		.4byte	0x177
 2310 0158 0B       		.uleb128 0xb
 2311 0159 9F070000 		.4byte	.LASF28
 2312 015d 72       		.sleb128 -14
 2313 015e 0B       		.uleb128 0xb
 2314 015f 400A0000 		.4byte	.LASF29
 2315 0163 73       		.sleb128 -13
 2316 0164 0B       		.uleb128 0xb
 2317 0165 72090000 		.4byte	.LASF30
 2318 0169 7B       		.sleb128 -5
 2319 016a 0B       		.uleb128 0xb
 2320 016b 12010000 		.4byte	.LASF31
 2321 016f 7E       		.sleb128 -2
 2322 0170 0B       		.uleb128 0xb
 2323 0171 87080000 		.4byte	.LASF32
 2324 0175 7F       		.sleb128 -1
 2325 0176 00       		.byte	0
 2326 0177 04       		.uleb128 0x4
 2327 0178 7C050000 		.4byte	.LASF33
 2328 017c 05       		.byte	0x5
 2329 017d 38       		.byte	0x38
 2330 017e 7A000000 		.4byte	0x7a
 2331 0182 04       		.uleb128 0x4
 2332 0183 57040000 		.4byte	.LASF34
 2333 0187 05       		.byte	0x5
 2334 0188 39       		.byte	0x39
 2335 0189 8C000000 		.4byte	0x8c
 2336 018d 04       		.uleb128 0x4
 2337 018e 8D060000 		.4byte	.LASF35
 2338 0192 05       		.byte	0x5
 2339 0193 3F       		.byte	0x3f
 2340 0194 B0000000 		.4byte	0xb0
 2341 0198 04       		.uleb128 0x4
 2342 0199 B5040000 		.4byte	.LASF36
 2343 019d 06       		.byte	0x6
 2344 019e 2E       		.byte	0x2e
 2345 019f 46010000 		.4byte	0x146
 2346 01a3 04       		.uleb128 0x4
 2347 01a4 B3070000 		.4byte	.LASF37
 2348 01a8 07       		.byte	0x7
 2349 01a9 25       		.byte	0x25
 2350 01aa 98010000 		.4byte	0x198
 2351 01ae 06       		.uleb128 0x6
 2352 01af 82010000 		.4byte	0x182
 2353 01b3 0C       		.uleb128 0xc
 2354 01b4 01       		.byte	0x1
 2355 01b5 5A000000 		.4byte	0x5a
 2356 01b9 01       		.byte	0x1
 2357 01ba 85       		.byte	0x85
 2358 01bb D8010000 		.4byte	0x1d8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 70


 2359 01bf 0D       		.uleb128 0xd
 2360 01c0 DB060000 		.4byte	.LASF38
 2361 01c4 00       		.byte	0
 2362 01c5 0D       		.uleb128 0xd
 2363 01c6 61000000 		.4byte	.LASF39
 2364 01ca 01       		.byte	0x1
 2365 01cb 0D       		.uleb128 0xd
 2366 01cc 30010000 		.4byte	.LASF40
 2367 01d0 02       		.byte	0x2
 2368 01d1 0D       		.uleb128 0xd
 2369 01d2 77070000 		.4byte	.LASF41
 2370 01d6 03       		.byte	0x3
 2371 01d7 00       		.byte	0
 2372 01d8 04       		.uleb128 0x4
 2373 01d9 98060000 		.4byte	.LASF42
 2374 01dd 01       		.byte	0x1
 2375 01de 8A       		.byte	0x8a
 2376 01df B3010000 		.4byte	0x1b3
 2377 01e3 0C       		.uleb128 0xc
 2378 01e4 01       		.byte	0x1
 2379 01e5 5A000000 		.4byte	0x5a
 2380 01e9 01       		.byte	0x1
 2381 01ea 8F       		.byte	0x8f
 2382 01eb 26020000 		.4byte	0x226
 2383 01ef 0D       		.uleb128 0xd
 2384 01f0 F9040000 		.4byte	.LASF43
 2385 01f4 00       		.byte	0
 2386 01f5 0D       		.uleb128 0xd
 2387 01f6 65030000 		.4byte	.LASF44
 2388 01fa 01       		.byte	0x1
 2389 01fb 0D       		.uleb128 0xd
 2390 01fc 57000000 		.4byte	.LASF45
 2391 0200 02       		.byte	0x2
 2392 0201 0D       		.uleb128 0xd
 2393 0202 DE040000 		.4byte	.LASF46
 2394 0206 04       		.byte	0x4
 2395 0207 0D       		.uleb128 0xd
 2396 0208 18070000 		.4byte	.LASF47
 2397 020c 08       		.byte	0x8
 2398 020d 0D       		.uleb128 0xd
 2399 020e 71050000 		.4byte	.LASF48
 2400 0212 10       		.byte	0x10
 2401 0213 0D       		.uleb128 0xd
 2402 0214 7E090000 		.4byte	.LASF49
 2403 0218 20       		.byte	0x20
 2404 0219 0D       		.uleb128 0xd
 2405 021a 83090000 		.4byte	.LASF50
 2406 021e 40       		.byte	0x40
 2407 021f 0D       		.uleb128 0xd
 2408 0220 88090000 		.4byte	.LASF51
 2409 0224 80       		.byte	0x80
 2410 0225 00       		.byte	0
 2411 0226 04       		.uleb128 0x4
 2412 0227 E30A0000 		.4byte	.LASF52
 2413 022b 01       		.byte	0x1
 2414 022c 99       		.byte	0x99
 2415 022d E3010000 		.4byte	0x1e3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 71


 2416 0231 0C       		.uleb128 0xc
 2417 0232 01       		.byte	0x1
 2418 0233 5A000000 		.4byte	0x5a
 2419 0237 01       		.byte	0x1
 2420 0238 BE       		.byte	0xbe
 2421 0239 5C020000 		.4byte	0x25c
 2422 023d 0D       		.uleb128 0xd
 2423 023e 52090000 		.4byte	.LASF53
 2424 0242 00       		.byte	0
 2425 0243 0D       		.uleb128 0xd
 2426 0244 8F0A0000 		.4byte	.LASF54
 2427 0248 01       		.byte	0x1
 2428 0249 0D       		.uleb128 0xd
 2429 024a 56080000 		.4byte	.LASF55
 2430 024e 02       		.byte	0x2
 2431 024f 0D       		.uleb128 0xd
 2432 0250 5E090000 		.4byte	.LASF56
 2433 0254 03       		.byte	0x3
 2434 0255 0D       		.uleb128 0xd
 2435 0256 77080000 		.4byte	.LASF57
 2436 025a 04       		.byte	0x4
 2437 025b 00       		.byte	0
 2438 025c 04       		.uleb128 0x4
 2439 025d 6F010000 		.4byte	.LASF58
 2440 0261 01       		.byte	0x1
 2441 0262 C4       		.byte	0xc4
 2442 0263 31020000 		.4byte	0x231
 2443 0267 0E       		.uleb128 0xe
 2444 0268 03       		.byte	0x3
 2445 0269 01       		.byte	0x1
 2446 026a C9       		.byte	0xc9
 2447 026b 94020000 		.4byte	0x294
 2448 026f 0F       		.uleb128 0xf
 2449 0270 BB010000 		.4byte	.LASF59
 2450 0274 01       		.byte	0x1
 2451 0275 CA       		.byte	0xca
 2452 0276 BB000000 		.4byte	0xbb
 2453 027a 00       		.byte	0
 2454 027b 0F       		.uleb128 0xf
 2455 027c EC050000 		.4byte	.LASF60
 2456 0280 01       		.byte	0x1
 2457 0281 CB       		.byte	0xcb
 2458 0282 BB000000 		.4byte	0xbb
 2459 0286 01       		.byte	0x1
 2460 0287 0F       		.uleb128 0xf
 2461 0288 AE040000 		.4byte	.LASF61
 2462 028c 01       		.byte	0x1
 2463 028d CC       		.byte	0xcc
 2464 028e BB000000 		.4byte	0xbb
 2465 0292 02       		.byte	0x2
 2466 0293 00       		.byte	0
 2467 0294 04       		.uleb128 0x4
 2468 0295 10040000 		.4byte	.LASF62
 2469 0299 01       		.byte	0x1
 2470 029a CD       		.byte	0xcd
 2471 029b 67020000 		.4byte	0x267
 2472 029f 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 72


 2473 02a0 13       		.byte	0x13
 2474 02a1 01       		.byte	0x1
 2475 02a2 D0       		.byte	0xd0
 2476 02a3 1D030000 		.4byte	0x31d
 2477 02a7 0F       		.uleb128 0xf
 2478 02a8 BB010000 		.4byte	.LASF59
 2479 02ac 01       		.byte	0x1
 2480 02ad D1       		.byte	0xd1
 2481 02ae BB000000 		.4byte	0xbb
 2482 02b2 00       		.byte	0
 2483 02b3 0F       		.uleb128 0xf
 2484 02b4 EC050000 		.4byte	.LASF60
 2485 02b8 01       		.byte	0x1
 2486 02b9 D2       		.byte	0xd2
 2487 02ba BB000000 		.4byte	0xbb
 2488 02be 01       		.byte	0x1
 2489 02bf 0F       		.uleb128 0xf
 2490 02c0 AE040000 		.4byte	.LASF61
 2491 02c4 01       		.byte	0x1
 2492 02c5 D3       		.byte	0xd3
 2493 02c6 BB000000 		.4byte	0xbb
 2494 02ca 02       		.byte	0x2
 2495 02cb 0F       		.uleb128 0xf
 2496 02cc 01070000 		.4byte	.LASF63
 2497 02d0 01       		.byte	0x1
 2498 02d1 D4       		.byte	0xd4
 2499 02d2 BB000000 		.4byte	0xbb
 2500 02d6 03       		.byte	0x3
 2501 02d7 10       		.uleb128 0x10
 2502 02d8 4B7000   		.ascii	"Kp\000"
 2503 02db 01       		.byte	0x1
 2504 02dc D5       		.byte	0xd5
 2505 02dd 25000000 		.4byte	0x25
 2506 02e1 04       		.byte	0x4
 2507 02e2 10       		.uleb128 0x10
 2508 02e3 4B6900   		.ascii	"Ki\000"
 2509 02e6 01       		.byte	0x1
 2510 02e7 D6       		.byte	0xd6
 2511 02e8 25000000 		.4byte	0x25
 2512 02ec 08       		.byte	0x8
 2513 02ed 10       		.uleb128 0x10
 2514 02ee 4B6400   		.ascii	"Kd\000"
 2515 02f1 01       		.byte	0x1
 2516 02f2 D7       		.byte	0xd7
 2517 02f3 25000000 		.4byte	0x25
 2518 02f7 0C       		.byte	0xc
 2519 02f8 0F       		.uleb128 0xf
 2520 02f9 E4090000 		.4byte	.LASF64
 2521 02fd 01       		.byte	0x1
 2522 02fe D8       		.byte	0xd8
 2523 02ff BB000000 		.4byte	0xbb
 2524 0303 10       		.byte	0x10
 2525 0304 0F       		.uleb128 0xf
 2526 0305 2E030000 		.4byte	.LASF65
 2527 0309 01       		.byte	0x1
 2528 030a D9       		.byte	0xd9
 2529 030b BB000000 		.4byte	0xbb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 73


 2530 030f 11       		.byte	0x11
 2531 0310 0F       		.uleb128 0xf
 2532 0311 4B000000 		.4byte	.LASF66
 2533 0315 01       		.byte	0x1
 2534 0316 DA       		.byte	0xda
 2535 0317 BB000000 		.4byte	0xbb
 2536 031b 12       		.byte	0x12
 2537 031c 00       		.byte	0
 2538 031d 04       		.uleb128 0x4
 2539 031e 3A070000 		.4byte	.LASF67
 2540 0322 01       		.byte	0x1
 2541 0323 DB       		.byte	0xdb
 2542 0324 9F020000 		.4byte	0x29f
 2543 0328 0E       		.uleb128 0xe
 2544 0329 0A       		.byte	0xa
 2545 032a 01       		.byte	0x1
 2546 032b DE       		.byte	0xde
 2547 032c 85030000 		.4byte	0x385
 2548 0330 0F       		.uleb128 0xf
 2549 0331 BB010000 		.4byte	.LASF59
 2550 0335 01       		.byte	0x1
 2551 0336 DF       		.byte	0xdf
 2552 0337 BB000000 		.4byte	0xbb
 2553 033b 00       		.byte	0
 2554 033c 0F       		.uleb128 0xf
 2555 033d EC050000 		.4byte	.LASF60
 2556 0341 01       		.byte	0x1
 2557 0342 E0       		.byte	0xe0
 2558 0343 BB000000 		.4byte	0xbb
 2559 0347 01       		.byte	0x1
 2560 0348 0F       		.uleb128 0xf
 2561 0349 AE040000 		.4byte	.LASF61
 2562 034d 01       		.byte	0x1
 2563 034e E1       		.byte	0xe1
 2564 034f BB000000 		.4byte	0xbb
 2565 0353 02       		.byte	0x2
 2566 0354 0F       		.uleb128 0xf
 2567 0355 5F020000 		.4byte	.LASF68
 2568 0359 01       		.byte	0x1
 2569 035a E2       		.byte	0xe2
 2570 035b BB000000 		.4byte	0xbb
 2571 035f 03       		.byte	0x3
 2572 0360 0F       		.uleb128 0xf
 2573 0361 02080000 		.4byte	.LASF69
 2574 0365 01       		.byte	0x1
 2575 0366 E3       		.byte	0xe3
 2576 0367 F7000000 		.4byte	0xf7
 2577 036b 04       		.byte	0x4
 2578 036c 10       		.uleb128 0x10
 2579 036d 6A6F6700 		.ascii	"jog\000"
 2580 0371 01       		.byte	0x1
 2581 0372 E4       		.byte	0xe4
 2582 0373 DF000000 		.4byte	0xdf
 2583 0377 08       		.byte	0x8
 2584 0378 0F       		.uleb128 0xf
 2585 0379 95000000 		.4byte	.LASF70
 2586 037d 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 74


 2587 037e E5       		.byte	0xe5
 2588 037f BB000000 		.4byte	0xbb
 2589 0383 09       		.byte	0x9
 2590 0384 00       		.byte	0
 2591 0385 04       		.uleb128 0x4
 2592 0386 83010000 		.4byte	.LASF71
 2593 038a 01       		.byte	0x1
 2594 038b E6       		.byte	0xe6
 2595 038c 28030000 		.4byte	0x328
 2596 0390 0E       		.uleb128 0xe
 2597 0391 07       		.byte	0x7
 2598 0392 01       		.byte	0x1
 2599 0393 E9       		.byte	0xe9
 2600 0394 C9030000 		.4byte	0x3c9
 2601 0398 0F       		.uleb128 0xf
 2602 0399 BB010000 		.4byte	.LASF59
 2603 039d 01       		.byte	0x1
 2604 039e EA       		.byte	0xea
 2605 039f BB000000 		.4byte	0xbb
 2606 03a3 00       		.byte	0
 2607 03a4 0F       		.uleb128 0xf
 2608 03a5 EC050000 		.4byte	.LASF60
 2609 03a9 01       		.byte	0x1
 2610 03aa EB       		.byte	0xeb
 2611 03ab BB000000 		.4byte	0xbb
 2612 03af 01       		.byte	0x1
 2613 03b0 0F       		.uleb128 0xf
 2614 03b1 AE040000 		.4byte	.LASF61
 2615 03b5 01       		.byte	0x1
 2616 03b6 EC       		.byte	0xec
 2617 03b7 BB000000 		.4byte	0xbb
 2618 03bb 02       		.byte	0x2
 2619 03bc 0F       		.uleb128 0xf
 2620 03bd 02080000 		.4byte	.LASF69
 2621 03c1 01       		.byte	0x1
 2622 03c2 ED       		.byte	0xed
 2623 03c3 F7000000 		.4byte	0xf7
 2624 03c7 03       		.byte	0x3
 2625 03c8 00       		.byte	0
 2626 03c9 04       		.uleb128 0x4
 2627 03ca 5C010000 		.4byte	.LASF72
 2628 03ce 01       		.byte	0x1
 2629 03cf EE       		.byte	0xee
 2630 03d0 90030000 		.4byte	0x390
 2631 03d4 11       		.uleb128 0x11
 2632 03d5 1E       		.byte	0x1e
 2633 03d6 01       		.byte	0x1
 2634 03d7 F2       		.byte	0xf2
 2635 03d8 14040000 		.4byte	0x414
 2636 03dc 12       		.uleb128 0x12
 2637 03dd 62756600 		.ascii	"buf\000"
 2638 03e1 01       		.byte	0x1
 2639 03e2 F3       		.byte	0xf3
 2640 03e3 14040000 		.4byte	0x414
 2641 03e7 13       		.uleb128 0x13
 2642 03e8 63040000 		.4byte	.LASF73
 2643 03ec 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 75


 2644 03ed F4       		.byte	0xf4
 2645 03ee 94020000 		.4byte	0x294
 2646 03f2 13       		.uleb128 0x13
 2647 03f3 11070000 		.4byte	.LASF74
 2648 03f7 01       		.byte	0x1
 2649 03f8 F5       		.byte	0xf5
 2650 03f9 1D030000 		.4byte	0x31d
 2651 03fd 13       		.uleb128 0x13
 2652 03fe D7040000 		.4byte	.LASF75
 2653 0402 01       		.byte	0x1
 2654 0403 F6       		.byte	0xf6
 2655 0404 85030000 		.4byte	0x385
 2656 0408 13       		.uleb128 0x13
 2657 0409 C4010000 		.4byte	.LASF76
 2658 040d 01       		.byte	0x1
 2659 040e F7       		.byte	0xf7
 2660 040f C9030000 		.4byte	0x3c9
 2661 0413 00       		.byte	0
 2662 0414 14       		.uleb128 0x14
 2663 0415 BB000000 		.4byte	0xbb
 2664 0419 24040000 		.4byte	0x424
 2665 041d 15       		.uleb128 0x15
 2666 041e 3F010000 		.4byte	0x13f
 2667 0422 1D       		.byte	0x1d
 2668 0423 00       		.byte	0
 2669 0424 0E       		.uleb128 0xe
 2670 0425 15       		.byte	0x15
 2671 0426 01       		.byte	0x1
 2672 0427 FB       		.byte	0xfb
 2673 0428 D2040000 		.4byte	0x4d2
 2674 042c 0F       		.uleb128 0xf
 2675 042d BB010000 		.4byte	.LASF59
 2676 0431 01       		.byte	0x1
 2677 0432 FC       		.byte	0xfc
 2678 0433 BB000000 		.4byte	0xbb
 2679 0437 00       		.byte	0
 2680 0438 0F       		.uleb128 0xf
 2681 0439 F5030000 		.4byte	.LASF77
 2682 043d 01       		.byte	0x1
 2683 043e FD       		.byte	0xfd
 2684 043f BB000000 		.4byte	0xbb
 2685 0443 01       		.byte	0x1
 2686 0444 0F       		.uleb128 0xf
 2687 0445 FE030000 		.4byte	.LASF78
 2688 0449 01       		.byte	0x1
 2689 044a FE       		.byte	0xfe
 2690 044b BB000000 		.4byte	0xbb
 2691 044f 02       		.byte	0x2
 2692 0450 0F       		.uleb128 0xf
 2693 0451 07040000 		.4byte	.LASF79
 2694 0455 01       		.byte	0x1
 2695 0456 FF       		.byte	0xff
 2696 0457 BB000000 		.4byte	0xbb
 2697 045b 03       		.byte	0x3
 2698 045c 16       		.uleb128 0x16
 2699 045d EC050000 		.4byte	.LASF60
 2700 0461 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 76


 2701 0462 0001     		.2byte	0x100
 2702 0464 BB000000 		.4byte	0xbb
 2703 0468 04       		.byte	0x4
 2704 0469 16       		.uleb128 0x16
 2705 046a AE040000 		.4byte	.LASF61
 2706 046e 01       		.byte	0x1
 2707 046f 0101     		.2byte	0x101
 2708 0471 BB000000 		.4byte	0xbb
 2709 0475 05       		.byte	0x5
 2710 0476 16       		.uleb128 0x16
 2711 0477 DE090000 		.4byte	.LASF80
 2712 047b 01       		.byte	0x1
 2713 047c 0201     		.2byte	0x102
 2714 047e BB000000 		.4byte	0xbb
 2715 0482 06       		.byte	0x6
 2716 0483 16       		.uleb128 0x16
 2717 0484 C60A0000 		.4byte	.LASF81
 2718 0488 01       		.byte	0x1
 2719 0489 0301     		.2byte	0x103
 2720 048b BB000000 		.4byte	0xbb
 2721 048f 07       		.byte	0x7
 2722 0490 16       		.uleb128 0x16
 2723 0491 01070000 		.4byte	.LASF63
 2724 0495 01       		.byte	0x1
 2725 0496 0401     		.2byte	0x104
 2726 0498 BB000000 		.4byte	0xbb
 2727 049c 08       		.byte	0x8
 2728 049d 16       		.uleb128 0x16
 2729 049e DC050000 		.4byte	.LASF82
 2730 04a2 01       		.byte	0x1
 2731 04a3 0501     		.2byte	0x105
 2732 04a5 C7000000 		.4byte	0xc7
 2733 04a9 09       		.byte	0x9
 2734 04aa 16       		.uleb128 0x16
 2735 04ab 4F0A0000 		.4byte	.LASF83
 2736 04af 01       		.byte	0x1
 2737 04b0 0601     		.2byte	0x106
 2738 04b2 EB000000 		.4byte	0xeb
 2739 04b6 0B       		.byte	0xb
 2740 04b7 16       		.uleb128 0x16
 2741 04b8 DA0A0000 		.4byte	.LASF84
 2742 04bc 01       		.byte	0x1
 2743 04bd 0701     		.2byte	0x107
 2744 04bf F7000000 		.4byte	0xf7
 2745 04c3 0D       		.byte	0xd
 2746 04c4 17       		.uleb128 0x17
 2747 04c5 70776D00 		.ascii	"pwm\000"
 2748 04c9 01       		.byte	0x1
 2749 04ca 0801     		.2byte	0x108
 2750 04cc 25000000 		.4byte	0x25
 2751 04d0 11       		.byte	0x11
 2752 04d1 00       		.byte	0
 2753 04d2 05       		.uleb128 0x5
 2754 04d3 F6070000 		.4byte	.LASF85
 2755 04d7 01       		.byte	0x1
 2756 04d8 0901     		.2byte	0x109
 2757 04da 24040000 		.4byte	0x424
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 77


 2758 04de 18       		.uleb128 0x18
 2759 04df 1E       		.byte	0x1e
 2760 04e0 01       		.byte	0x1
 2761 04e1 0C01     		.2byte	0x10c
 2762 04e3 00050000 		.4byte	0x500
 2763 04e7 19       		.uleb128 0x19
 2764 04e8 62756600 		.ascii	"buf\000"
 2765 04ec 01       		.byte	0x1
 2766 04ed 0D01     		.2byte	0x10d
 2767 04ef 14040000 		.4byte	0x414
 2768 04f3 19       		.uleb128 0x19
 2769 04f4 6D736700 		.ascii	"msg\000"
 2770 04f8 01       		.byte	0x1
 2771 04f9 0E01     		.2byte	0x10e
 2772 04fb D2040000 		.4byte	0x4d2
 2773 04ff 00       		.byte	0
 2774 0500 1A       		.uleb128 0x1a
 2775 0501 01       		.byte	0x1
 2776 0502 5A000000 		.4byte	0x5a
 2777 0506 01       		.byte	0x1
 2778 0507 1201     		.2byte	0x112
 2779 0509 1A050000 		.4byte	0x51a
 2780 050d 0D       		.uleb128 0xd
 2781 050e 3C000000 		.4byte	.LASF86
 2782 0512 00       		.byte	0
 2783 0513 0D       		.uleb128 0xd
 2784 0514 F8050000 		.4byte	.LASF87
 2785 0518 01       		.byte	0x1
 2786 0519 00       		.byte	0
 2787 051a 05       		.uleb128 0x5
 2788 051b EF000000 		.4byte	.LASF88
 2789 051f 01       		.byte	0x1
 2790 0520 1501     		.2byte	0x115
 2791 0522 00050000 		.4byte	0x500
 2792 0526 1B       		.uleb128 0x1b
 2793 0527 00000000 		.4byte	.LASF99
 2794 052b 01       		.byte	0x1
 2795 052c 7C01     		.2byte	0x17c
 2796 052e 00000000 		.4byte	.LFB35
 2797 0532 44000000 		.4byte	.LFE35-.LFB35
 2798 0536 01       		.uleb128 0x1
 2799 0537 9C       		.byte	0x9c
 2800 0538 C5050000 		.4byte	0x5c5
 2801 053c 1C       		.uleb128 0x1c
 2802 053d 61726700 		.ascii	"arg\000"
 2803 0541 01       		.byte	0x1
 2804 0542 7C01     		.2byte	0x17c
 2805 0544 46010000 		.4byte	0x146
 2806 0548 00000000 		.4byte	.LLST0
 2807 054c 1D       		.uleb128 0x1d
 2808 054d C1030000 		.4byte	.LASF92
 2809 0551 01       		.byte	0x1
 2810 0552 7E01     		.2byte	0x17e
 2811 0554 25000000 		.4byte	0x25
 2812 0558 21000000 		.4byte	.LLST1
 2813 055c 1E       		.uleb128 0x1e
 2814 055d 08000000 		.4byte	.LVL2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 78


 2815 0561 F6110000 		.4byte	0x11f6
 2816 0565 6F050000 		.4byte	0x56f
 2817 0569 1F       		.uleb128 0x1f
 2818 056a 01       		.uleb128 0x1
 2819 056b 50       		.byte	0x50
 2820 056c 01       		.uleb128 0x1
 2821 056d 30       		.byte	0x30
 2822 056e 00       		.byte	0
 2823 056f 20       		.uleb128 0x20
 2824 0570 10000000 		.4byte	.LVL3
 2825 0574 02120000 		.4byte	0x1202
 2826 0578 1E       		.uleb128 0x1e
 2827 0579 16000000 		.4byte	.LVL4
 2828 057d 0D120000 		.4byte	0x120d
 2829 0581 8C050000 		.4byte	0x58c
 2830 0585 1F       		.uleb128 0x1f
 2831 0586 01       		.uleb128 0x1
 2832 0587 50       		.byte	0x50
 2833 0588 02       		.uleb128 0x2
 2834 0589 08       		.byte	0x8
 2835 058a 40       		.byte	0x40
 2836 058b 00       		.byte	0
 2837 058c 1E       		.uleb128 0x1e
 2838 058d 1C000000 		.4byte	.LVL5
 2839 0591 18120000 		.4byte	0x1218
 2840 0595 A0050000 		.4byte	0x5a0
 2841 0599 1F       		.uleb128 0x1f
 2842 059a 01       		.uleb128 0x1
 2843 059b 50       		.byte	0x50
 2844 059c 02       		.uleb128 0x2
 2845 059d 08       		.byte	0x8
 2846 059e 40       		.byte	0x40
 2847 059f 00       		.byte	0
 2848 05a0 1E       		.uleb128 0x1e
 2849 05a1 2E000000 		.4byte	.LVL7
 2850 05a5 23120000 		.4byte	0x1223
 2851 05a9 B5050000 		.4byte	0x5b5
 2852 05ad 1F       		.uleb128 0x1f
 2853 05ae 01       		.uleb128 0x1
 2854 05af 50       		.byte	0x50
 2855 05b0 03       		.uleb128 0x3
 2856 05b1 0A       		.byte	0xa
 2857 05b2 F401     		.2byte	0x1f4
 2858 05b4 00       		.byte	0
 2859 05b5 21       		.uleb128 0x21
 2860 05b6 34000000 		.4byte	.LVL8
 2861 05ba F6110000 		.4byte	0x11f6
 2862 05be 1F       		.uleb128 0x1f
 2863 05bf 01       		.uleb128 0x1
 2864 05c0 50       		.byte	0x50
 2865 05c1 01       		.uleb128 0x1
 2866 05c2 30       		.byte	0x30
 2867 05c3 00       		.byte	0
 2868 05c4 00       		.byte	0
 2869 05c5 22       		.uleb128 0x22
 2870 05c6 CC0A0000 		.4byte	.LASF89
 2871 05ca 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 79


 2872 05cb B304     		.2byte	0x4b3
 2873 05cd 00000000 		.4byte	.LFB46
 2874 05d1 24000000 		.4byte	.LFE46-.LFB46
 2875 05d5 01       		.uleb128 0x1
 2876 05d6 9C       		.byte	0x9c
 2877 05d7 10060000 		.4byte	0x610
 2878 05db 20       		.uleb128 0x20
 2879 05dc 06000000 		.4byte	.LVL9
 2880 05e0 2F120000 		.4byte	0x122f
 2881 05e4 20       		.uleb128 0x20
 2882 05e5 0A000000 		.4byte	.LVL10
 2883 05e9 3A120000 		.4byte	0x123a
 2884 05ed 1E       		.uleb128 0x1e
 2885 05ee 10000000 		.4byte	.LVL11
 2886 05f2 45120000 		.4byte	0x1245
 2887 05f6 00060000 		.4byte	0x600
 2888 05fa 1F       		.uleb128 0x1f
 2889 05fb 01       		.uleb128 0x1
 2890 05fc 50       		.byte	0x50
 2891 05fd 01       		.uleb128 0x1
 2892 05fe 30       		.byte	0x30
 2893 05ff 00       		.byte	0
 2894 0600 21       		.uleb128 0x21
 2895 0601 16000000 		.4byte	.LVL12
 2896 0605 50120000 		.4byte	0x1250
 2897 0609 1F       		.uleb128 0x1f
 2898 060a 01       		.uleb128 0x1
 2899 060b 50       		.byte	0x50
 2900 060c 01       		.uleb128 0x1
 2901 060d 30       		.byte	0x30
 2902 060e 00       		.byte	0
 2903 060f 00       		.byte	0
 2904 0610 22       		.uleb128 0x22
 2905 0611 E0000000 		.4byte	.LASF90
 2906 0615 01       		.byte	0x1
 2907 0616 D004     		.2byte	0x4d0
 2908 0618 00000000 		.4byte	.LFB47
 2909 061c 1C000000 		.4byte	.LFE47-.LFB47
 2910 0620 01       		.uleb128 0x1
 2911 0621 9C       		.byte	0x9c
 2912 0622 48060000 		.4byte	0x648
 2913 0626 20       		.uleb128 0x20
 2914 0627 06000000 		.4byte	.LVL13
 2915 062b 5B120000 		.4byte	0x125b
 2916 062f 20       		.uleb128 0x20
 2917 0630 0A000000 		.4byte	.LVL14
 2918 0634 66120000 		.4byte	0x1266
 2919 0638 21       		.uleb128 0x21
 2920 0639 10000000 		.4byte	.LVL15
 2921 063d 45120000 		.4byte	0x1245
 2922 0641 1F       		.uleb128 0x1f
 2923 0642 01       		.uleb128 0x1
 2924 0643 50       		.byte	0x50
 2925 0644 01       		.uleb128 0x1
 2926 0645 30       		.byte	0x30
 2927 0646 00       		.byte	0
 2928 0647 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 80


 2929 0648 22       		.uleb128 0x22
 2930 0649 63060000 		.4byte	.LASF91
 2931 064d 01       		.byte	0x1
 2932 064e EA04     		.2byte	0x4ea
 2933 0650 00000000 		.4byte	.LFB48
 2934 0654 5C000000 		.4byte	.LFE48-.LFB48
 2935 0658 01       		.uleb128 0x1
 2936 0659 9C       		.byte	0x9c
 2937 065a C4060000 		.4byte	0x6c4
 2938 065e 23       		.uleb128 0x23
 2939 065f 6900     		.ascii	"i\000"
 2940 0661 01       		.byte	0x1
 2941 0662 EC04     		.2byte	0x4ec
 2942 0664 D3000000 		.4byte	0xd3
 2943 0668 34000000 		.4byte	.LLST2
 2944 066c 20       		.uleb128 0x20
 2945 066d 06000000 		.4byte	.LVL16
 2946 0671 71120000 		.4byte	0x1271
 2947 0675 20       		.uleb128 0x20
 2948 0676 0A000000 		.4byte	.LVL17
 2949 067a 7C120000 		.4byte	0x127c
 2950 067e 20       		.uleb128 0x20
 2951 067f 12000000 		.4byte	.LVL18
 2952 0683 87120000 		.4byte	0x1287
 2953 0687 1E       		.uleb128 0x1e
 2954 0688 28000000 		.4byte	.LVL19
 2955 068c 93120000 		.4byte	0x1293
 2956 0690 A8060000 		.4byte	0x6a8
 2957 0694 1F       		.uleb128 0x1f
 2958 0695 01       		.uleb128 0x1
 2959 0696 50       		.byte	0x50
 2960 0697 05       		.uleb128 0x5
 2961 0698 03       		.byte	0x3
 2962 0699 00000000 		.4byte	txMessage
 2963 069d 1F       		.uleb128 0x1f
 2964 069e 01       		.uleb128 0x1
 2965 069f 51       		.byte	0x51
 2966 06a0 01       		.uleb128 0x1
 2967 06a1 30       		.byte	0x30
 2968 06a2 1F       		.uleb128 0x1f
 2969 06a3 01       		.uleb128 0x1
 2970 06a4 52       		.byte	0x52
 2971 06a5 01       		.uleb128 0x1
 2972 06a6 4E       		.byte	0x4e
 2973 06a7 00       		.byte	0
 2974 06a8 20       		.uleb128 0x20
 2975 06a9 30000000 		.4byte	.LVL21
 2976 06ad 9C120000 		.4byte	0x129c
 2977 06b1 20       		.uleb128 0x20
 2978 06b2 3E000000 		.4byte	.LVL23
 2979 06b6 A8120000 		.4byte	0x12a8
 2980 06ba 20       		.uleb128 0x20
 2981 06bb 42000000 		.4byte	.LVL24
 2982 06bf B4120000 		.4byte	0x12b4
 2983 06c3 00       		.byte	0
 2984 06c4 22       		.uleb128 0x22
 2985 06c5 1E020000 		.4byte	.LASF93
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 81


 2986 06c9 01       		.byte	0x1
 2987 06ca 2F01     		.2byte	0x12f
 2988 06cc 00000000 		.4byte	.LFB32
 2989 06d0 28000000 		.4byte	.LFE32-.LFB32
 2990 06d4 01       		.uleb128 0x1
 2991 06d5 9C       		.byte	0x9c
 2992 06d6 10070000 		.4byte	0x710
 2993 06da 1E       		.uleb128 0x1e
 2994 06db 0A000000 		.4byte	.LVL26
 2995 06df C0120000 		.4byte	0x12c0
 2996 06e3 ED060000 		.4byte	0x6ed
 2997 06e7 1F       		.uleb128 0x1f
 2998 06e8 01       		.uleb128 0x1
 2999 06e9 50       		.byte	0x50
 3000 06ea 01       		.uleb128 0x1
 3001 06eb 3B       		.byte	0x3b
 3002 06ec 00       		.byte	0
 3003 06ed 1E       		.uleb128 0x1e
 3004 06ee 12000000 		.4byte	.LVL27
 3005 06f2 C0120000 		.4byte	0x12c0
 3006 06f6 00070000 		.4byte	0x700
 3007 06fa 1F       		.uleb128 0x1f
 3008 06fb 01       		.uleb128 0x1
 3009 06fc 50       		.byte	0x50
 3010 06fd 01       		.uleb128 0x1
 3011 06fe 3E       		.byte	0x3e
 3012 06ff 00       		.byte	0
 3013 0700 21       		.uleb128 0x21
 3014 0701 1A000000 		.4byte	.LVL28
 3015 0705 C0120000 		.4byte	0x12c0
 3016 0709 1F       		.uleb128 0x1f
 3017 070a 01       		.uleb128 0x1
 3018 070b 50       		.byte	0x50
 3019 070c 01       		.uleb128 0x1
 3020 070d 3F       		.byte	0x3f
 3021 070e 00       		.byte	0
 3022 070f 00       		.byte	0
 3023 0710 22       		.uleb128 0x22
 3024 0711 96010000 		.4byte	.LASF94
 3025 0715 01       		.byte	0x1
 3026 0716 4701     		.2byte	0x147
 3027 0718 00000000 		.4byte	.LFB33
 3028 071c 1C000000 		.4byte	.LFE33-.LFB33
 3029 0720 01       		.uleb128 0x1
 3030 0721 9C       		.byte	0x9c
 3031 0722 37070000 		.4byte	0x737
 3032 0726 24       		.uleb128 0x24
 3033 0727 C60A0000 		.4byte	.LASF81
 3034 072b 01       		.byte	0x1
 3035 072c 4701     		.2byte	0x147
 3036 072e 26020000 		.4byte	0x226
 3037 0732 53000000 		.4byte	.LLST3
 3038 0736 00       		.byte	0
 3039 0737 22       		.uleb128 0x22
 3040 0738 07010000 		.4byte	.LASF95
 3041 073c 01       		.byte	0x1
 3042 073d 6201     		.2byte	0x162
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 82


 3043 073f 00000000 		.4byte	.LFB34
 3044 0743 1C000000 		.4byte	.LFE34-.LFB34
 3045 0747 01       		.uleb128 0x1
 3046 0748 9C       		.byte	0x9c
 3047 0749 5C070000 		.4byte	0x75c
 3048 074d 25       		.uleb128 0x25
 3049 074e C60A0000 		.4byte	.LASF81
 3050 0752 01       		.byte	0x1
 3051 0753 6201     		.2byte	0x162
 3052 0755 26020000 		.4byte	0x226
 3053 0759 01       		.uleb128 0x1
 3054 075a 50       		.byte	0x50
 3055 075b 00       		.byte	0
 3056 075c 26       		.uleb128 0x26
 3057 075d 77040000 		.4byte	.LASF96
 3058 0761 01       		.byte	0x1
 3059 0762 7402     		.2byte	0x274
 3060 0764 00000000 		.4byte	.LFB37
 3061 0768 40000000 		.4byte	.LFE37-.LFB37
 3062 076c 01       		.uleb128 0x1
 3063 076d 9C       		.byte	0x9c
 3064 076e 9C070000 		.4byte	0x79c
 3065 0772 24       		.uleb128 0x24
 3066 0773 9C090000 		.4byte	.LASF97
 3067 0777 01       		.byte	0x1
 3068 0778 7402     		.2byte	0x274
 3069 077a 25000000 		.4byte	0x25
 3070 077e 74000000 		.4byte	.LLST4
 3071 0782 1D       		.uleb128 0x1d
 3072 0783 7B030000 		.4byte	.LASF98
 3073 0787 01       		.byte	0x1
 3074 0788 7602     		.2byte	0x276
 3075 078a 25000000 		.4byte	0x25
 3076 078e A2000000 		.4byte	.LLST5
 3077 0792 20       		.uleb128 0x20
 3078 0793 36000000 		.4byte	.LVL39
 3079 0797 CB120000 		.4byte	0x12cb
 3080 079b 00       		.byte	0
 3081 079c 27       		.uleb128 0x27
 3082 079d 0B080000 		.4byte	.LASF100
 3083 07a1 01       		.byte	0x1
 3084 07a2 8B02     		.2byte	0x28b
 3085 07a4 F7000000 		.4byte	0xf7
 3086 07a8 00000000 		.4byte	.LFB38
 3087 07ac 44000000 		.4byte	.LFE38-.LFB38
 3088 07b0 01       		.uleb128 0x1
 3089 07b1 9C       		.byte	0x9c
 3090 07b2 E4070000 		.4byte	0x7e4
 3091 07b6 28       		.uleb128 0x28
 3092 07b7 EA070000 		.4byte	.LASF101
 3093 07bb 01       		.byte	0x1
 3094 07bc 8D02     		.2byte	0x28d
 3095 07be 27010000 		.4byte	0x127
 3096 07c2 05       		.uleb128 0x5
 3097 07c3 03       		.byte	0x3
 3098 07c4 00000000 		.4byte	RawPosition.7600
 3099 07c8 28       		.uleb128 0x28
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 83


 3100 07c9 F0010000 		.4byte	.LASF102
 3101 07cd 01       		.byte	0x1
 3102 07ce 8E02     		.2byte	0x28e
 3103 07d0 E4070000 		.4byte	0x7e4
 3104 07d4 05       		.uleb128 0x5
 3105 07d5 03       		.byte	0x3
 3106 07d6 04000000 		.4byte	result.7601
 3107 07da 20       		.uleb128 0x20
 3108 07db 06000000 		.4byte	.LVL42
 3109 07df D7120000 		.4byte	0x12d7
 3110 07e3 00       		.byte	0
 3111 07e4 06       		.uleb128 0x6
 3112 07e5 F7000000 		.4byte	0xf7
 3113 07e9 1B       		.uleb128 0x1b
 3114 07ea 7D080000 		.4byte	.LASF103
 3115 07ee 01       		.byte	0x1
 3116 07ef 9E01     		.2byte	0x19e
 3117 07f1 00000000 		.4byte	.LFB36
 3118 07f5 14030000 		.4byte	.LFE36-.LFB36
 3119 07f9 01       		.uleb128 0x1
 3120 07fa 9C       		.byte	0x9c
 3121 07fb 33090000 		.4byte	0x933
 3122 07ff 1C       		.uleb128 0x1c
 3123 0800 61726700 		.ascii	"arg\000"
 3124 0804 01       		.byte	0x1
 3125 0805 9E01     		.2byte	0x19e
 3126 0807 46010000 		.4byte	0x146
 3127 080b CB000000 		.4byte	.LLST6
 3128 080f 1D       		.uleb128 0x1d
 3129 0810 AE040000 		.4byte	.LASF61
 3130 0814 01       		.byte	0x1
 3131 0815 A001     		.2byte	0x1a0
 3132 0817 5C020000 		.4byte	0x25c
 3133 081b EC000000 		.4byte	.LLST7
 3134 081f 1D       		.uleb128 0x1d
 3135 0820 EC050000 		.4byte	.LASF60
 3136 0824 01       		.byte	0x1
 3137 0825 A101     		.2byte	0x1a1
 3138 0827 BB000000 		.4byte	0xbb
 3139 082b 21010000 		.4byte	.LLST8
 3140 082f 23       		.uleb128 0x23
 3141 0830 6900     		.ascii	"i\000"
 3142 0832 01       		.byte	0x1
 3143 0833 A201     		.2byte	0x1a2
 3144 0835 BB000000 		.4byte	0xbb
 3145 0839 4A010000 		.4byte	.LLST9
 3146 083d 1D       		.uleb128 0x1d
 3147 083e BB010000 		.4byte	.LASF59
 3148 0842 01       		.byte	0x1
 3149 0843 A301     		.2byte	0x1a3
 3150 0845 BB000000 		.4byte	0xbb
 3151 0849 A1010000 		.4byte	.LLST10
 3152 084d 1D       		.uleb128 0x1d
 3153 084e D0000000 		.4byte	.LASF104
 3154 0852 01       		.byte	0x1
 3155 0853 A401     		.2byte	0x1a4
 3156 0855 BB000000 		.4byte	0xbb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 84


 3157 0859 0E020000 		.4byte	.LLST11
 3158 085d 1E       		.uleb128 0x1e
 3159 085e 08000000 		.4byte	.LVL45
 3160 0862 F6110000 		.4byte	0x11f6
 3161 0866 70080000 		.4byte	0x870
 3162 086a 1F       		.uleb128 0x1f
 3163 086b 01       		.uleb128 0x1
 3164 086c 50       		.byte	0x50
 3165 086d 01       		.uleb128 0x1
 3166 086e 30       		.byte	0x30
 3167 086f 00       		.byte	0
 3168 0870 1E       		.uleb128 0x1e
 3169 0871 2A000000 		.4byte	.LVL46
 3170 0875 E2120000 		.4byte	0x12e2
 3171 0879 83080000 		.4byte	0x883
 3172 087d 1F       		.uleb128 0x1f
 3173 087e 01       		.uleb128 0x1
 3174 087f 51       		.byte	0x51
 3175 0880 01       		.uleb128 0x1
 3176 0881 34       		.byte	0x34
 3177 0882 00       		.byte	0
 3178 0883 1E       		.uleb128 0x1e
 3179 0884 42010000 		.4byte	.LVL71
 3180 0888 37070000 		.4byte	0x737
 3181 088c 96080000 		.4byte	0x896
 3182 0890 1F       		.uleb128 0x1f
 3183 0891 01       		.uleb128 0x1
 3184 0892 50       		.byte	0x50
 3185 0893 01       		.uleb128 0x1
 3186 0894 30       		.byte	0x30
 3187 0895 00       		.byte	0
 3188 0896 20       		.uleb128 0x20
 3189 0897 72010000 		.4byte	.LVL75
 3190 089b 9C070000 		.4byte	0x79c
 3191 089f 1E       		.uleb128 0x1e
 3192 08a0 9E010000 		.4byte	.LVL77
 3193 08a4 50120000 		.4byte	0x1250
 3194 08a8 B2080000 		.4byte	0x8b2
 3195 08ac 1F       		.uleb128 0x1f
 3196 08ad 01       		.uleb128 0x1
 3197 08ae 50       		.byte	0x50
 3198 08af 01       		.uleb128 0x1
 3199 08b0 30       		.byte	0x30
 3200 08b1 00       		.byte	0
 3201 08b2 20       		.uleb128 0x20
 3202 08b3 C8010000 		.4byte	.LVL82
 3203 08b7 45120000 		.4byte	0x1245
 3204 08bb 20       		.uleb128 0x20
 3205 08bc E6010000 		.4byte	.LVL83
 3206 08c0 9C070000 		.4byte	0x79c
 3207 08c4 1E       		.uleb128 0x1e
 3208 08c5 6C020000 		.4byte	.LVL91
 3209 08c9 EE120000 		.4byte	0x12ee
 3210 08cd E0080000 		.4byte	0x8e0
 3211 08d1 1F       		.uleb128 0x1f
 3212 08d2 01       		.uleb128 0x1
 3213 08d3 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 85


 3214 08d4 05       		.uleb128 0x5
 3215 08d5 03       		.byte	0x3
 3216 08d6 00000000 		.4byte	txMessage
 3217 08da 1F       		.uleb128 0x1f
 3218 08db 01       		.uleb128 0x1
 3219 08dc 51       		.byte	0x51
 3220 08dd 01       		.uleb128 0x1
 3221 08de 4E       		.byte	0x4e
 3222 08df 00       		.byte	0
 3223 08e0 1E       		.uleb128 0x1e
 3224 08e1 80020000 		.4byte	.LVL92
 3225 08e5 37070000 		.4byte	0x737
 3226 08e9 F3080000 		.4byte	0x8f3
 3227 08ed 1F       		.uleb128 0x1f
 3228 08ee 01       		.uleb128 0x1
 3229 08ef 50       		.byte	0x50
 3230 08f0 01       		.uleb128 0x1
 3231 08f1 30       		.byte	0x30
 3232 08f2 00       		.byte	0
 3233 08f3 1E       		.uleb128 0x1e
 3234 08f4 8E020000 		.4byte	.LVL93
 3235 08f8 FA120000 		.4byte	0x12fa
 3236 08fc 10090000 		.4byte	0x910
 3237 0900 1F       		.uleb128 0x1f
 3238 0901 01       		.uleb128 0x1
 3239 0902 51       		.byte	0x51
 3240 0903 01       		.uleb128 0x1
 3241 0904 30       		.byte	0x30
 3242 0905 1F       		.uleb128 0x1f
 3243 0906 01       		.uleb128 0x1
 3244 0907 52       		.byte	0x52
 3245 0908 01       		.uleb128 0x1
 3246 0909 30       		.byte	0x30
 3247 090a 1F       		.uleb128 0x1f
 3248 090b 01       		.uleb128 0x1
 3249 090c 53       		.byte	0x53
 3250 090d 01       		.uleb128 0x1
 3251 090e 30       		.byte	0x30
 3252 090f 00       		.byte	0
 3253 0910 1E       		.uleb128 0x1e
 3254 0911 94020000 		.4byte	.LVL94
 3255 0915 23120000 		.4byte	0x1223
 3256 0919 23090000 		.4byte	0x923
 3257 091d 1F       		.uleb128 0x1f
 3258 091e 01       		.uleb128 0x1
 3259 091f 50       		.byte	0x50
 3260 0920 01       		.uleb128 0x1
 3261 0921 31       		.byte	0x31
 3262 0922 00       		.byte	0
 3263 0923 21       		.uleb128 0x21
 3264 0924 9A020000 		.4byte	.LVL95
 3265 0928 F6110000 		.4byte	0x11f6
 3266 092c 1F       		.uleb128 0x1f
 3267 092d 01       		.uleb128 0x1
 3268 092e 50       		.byte	0x50
 3269 092f 01       		.uleb128 0x1
 3270 0930 30       		.byte	0x30
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 86


 3271 0931 00       		.byte	0
 3272 0932 00       		.byte	0
 3273 0933 22       		.uleb128 0x22
 3274 0934 2C0A0000 		.4byte	.LASF105
 3275 0938 01       		.byte	0x1
 3276 0939 AF02     		.2byte	0x2af
 3277 093b 00000000 		.4byte	.LFB39
 3278 093f 30000000 		.4byte	.LFE39-.LFB39
 3279 0943 01       		.uleb128 0x1
 3280 0944 9C       		.byte	0x9c
 3281 0945 53090000 		.4byte	0x953
 3282 0949 20       		.uleb128 0x20
 3283 094a 06000000 		.4byte	.LVL96
 3284 094e 9C070000 		.4byte	0x79c
 3285 0952 00       		.byte	0
 3286 0953 26       		.uleb128 0x26
 3287 0954 A7060000 		.4byte	.LASF106
 3288 0958 01       		.byte	0x1
 3289 0959 C802     		.2byte	0x2c8
 3290 095b 00000000 		.4byte	.LFB40
 3291 095f 44000000 		.4byte	.LFE40-.LFB40
 3292 0963 01       		.uleb128 0x1
 3293 0964 9C       		.byte	0x9c
 3294 0965 C4090000 		.4byte	0x9c4
 3295 0969 24       		.uleb128 0x24
 3296 096a F3060000 		.4byte	.LASF107
 3297 096e 01       		.byte	0x1
 3298 096f C802     		.2byte	0x2c8
 3299 0971 D3000000 		.4byte	0xd3
 3300 0975 2C020000 		.4byte	.LLST12
 3301 0979 24       		.uleb128 0x24
 3302 097a B3000000 		.4byte	.LASF108
 3303 097e 01       		.byte	0x1
 3304 097f C802     		.2byte	0x2c8
 3305 0981 25000000 		.4byte	0x25
 3306 0985 4D020000 		.4byte	.LLST13
 3307 0989 24       		.uleb128 0x24
 3308 098a AD000000 		.4byte	.LASF109
 3309 098e 01       		.byte	0x1
 3310 098f C802     		.2byte	0x2c8
 3311 0991 25000000 		.4byte	0x25
 3312 0995 7B020000 		.4byte	.LLST14
 3313 0999 24       		.uleb128 0x24
 3314 099a A7000000 		.4byte	.LASF110
 3315 099e 01       		.byte	0x1
 3316 099f C802     		.2byte	0x2c8
 3317 09a1 25000000 		.4byte	0x25
 3318 09a5 A9020000 		.4byte	.LLST15
 3319 09a9 29       		.uleb128 0x29
 3320 09aa 0C000000 		.4byte	.LBB2
 3321 09ae 26000000 		.4byte	.LBE2-.LBB2
 3322 09b2 1D       		.uleb128 0x1d
 3323 09b3 7D070000 		.4byte	.LASF111
 3324 09b7 01       		.byte	0x1
 3325 09b8 CC02     		.2byte	0x2cc
 3326 09ba 25000000 		.4byte	0x25
 3327 09be D7020000 		.4byte	.LLST16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 87


 3328 09c2 00       		.byte	0
 3329 09c3 00       		.byte	0
 3330 09c4 2A       		.uleb128 0x2a
 3331 09c5 E7060000 		.4byte	.LASF112
 3332 09c9 01       		.byte	0x1
 3333 09ca DE02     		.2byte	0x2de
 3334 09cc 25000000 		.4byte	0x25
 3335 09d0 00000000 		.4byte	.LFB41
 3336 09d4 38010000 		.4byte	.LFE41-.LFB41
 3337 09d8 01       		.uleb128 0x1
 3338 09d9 9C       		.byte	0x9c
 3339 09da 410A0000 		.4byte	0xa41
 3340 09de 1C       		.uleb128 0x1c
 3341 09df 6E6F7700 		.ascii	"now\000"
 3342 09e3 01       		.byte	0x1
 3343 09e4 DE02     		.2byte	0x2de
 3344 09e6 D3000000 		.4byte	0xd3
 3345 09ea F5020000 		.4byte	.LLST17
 3346 09ee 24       		.uleb128 0x24
 3347 09ef 02080000 		.4byte	.LASF69
 3348 09f3 01       		.byte	0x1
 3349 09f4 DE02     		.2byte	0x2de
 3350 09f6 D3000000 		.4byte	0xd3
 3351 09fa 37030000 		.4byte	.LLST18
 3352 09fe 1D       		.uleb128 0x1d
 3353 09ff 01010000 		.4byte	.LASF113
 3354 0a03 01       		.byte	0x1
 3355 0a04 E002     		.2byte	0x2e0
 3356 0a06 F7000000 		.4byte	0xf7
 3357 0a0a 7C030000 		.4byte	.LLST19
 3358 0a0e 1D       		.uleb128 0x1d
 3359 0a0f 30070000 		.4byte	.LASF114
 3360 0a13 01       		.byte	0x1
 3361 0a14 E002     		.2byte	0x2e0
 3362 0a16 F7000000 		.4byte	0xf7
 3363 0a1a 8F030000 		.4byte	.LLST20
 3364 0a1e 1D       		.uleb128 0x1d
 3365 0a1f 58050000 		.4byte	.LASF115
 3366 0a23 01       		.byte	0x1
 3367 0a24 E102     		.2byte	0x2e1
 3368 0a26 D3000000 		.4byte	0xd3
 3369 0a2a A2030000 		.4byte	.LLST21
 3370 0a2e 20       		.uleb128 0x20
 3371 0a2f 12000000 		.4byte	.LVL108
 3372 0a33 9C070000 		.4byte	0x79c
 3373 0a37 20       		.uleb128 0x20
 3374 0a38 34000000 		.4byte	.LVL110
 3375 0a3c 53090000 		.4byte	0x953
 3376 0a40 00       		.byte	0
 3377 0a41 22       		.uleb128 0x22
 3378 0a42 6B040000 		.4byte	.LASF116
 3379 0a46 01       		.byte	0x1
 3380 0a47 1C03     		.2byte	0x31c
 3381 0a49 00000000 		.4byte	.LFB42
 3382 0a4d 24000000 		.4byte	.LFE42-.LFB42
 3383 0a51 01       		.uleb128 0x1
 3384 0a52 9C       		.byte	0x9c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 88


 3385 0a53 810A0000 		.4byte	0xa81
 3386 0a57 24       		.uleb128 0x24
 3387 0a58 69070000 		.4byte	.LASF117
 3388 0a5c 01       		.byte	0x1
 3389 0a5d 1C03     		.2byte	0x31c
 3390 0a5f D3000000 		.4byte	0xd3
 3391 0a63 B5030000 		.4byte	.LLST22
 3392 0a67 1D       		.uleb128 0x1d
 3393 0a68 6C000000 		.4byte	.LASF118
 3394 0a6c 01       		.byte	0x1
 3395 0a6d 1E03     		.2byte	0x31e
 3396 0a6f 810A0000 		.4byte	0xa81
 3397 0a73 D6030000 		.4byte	.LLST23
 3398 0a77 20       		.uleb128 0x20
 3399 0a78 1A000000 		.4byte	.LVL132
 3400 0a7c 33090000 		.4byte	0x933
 3401 0a80 00       		.byte	0
 3402 0a81 02       		.uleb128 0x2
 3403 0a82 01       		.byte	0x1
 3404 0a83 02       		.byte	0x2
 3405 0a84 5F030000 		.4byte	.LASF119
 3406 0a88 26       		.uleb128 0x26
 3407 0a89 47030000 		.4byte	.LASF120
 3408 0a8d 01       		.byte	0x1
 3409 0a8e 3103     		.2byte	0x331
 3410 0a90 00000000 		.4byte	.LFB43
 3411 0a94 1C000000 		.4byte	.LFE43-.LFB43
 3412 0a98 01       		.uleb128 0x1
 3413 0a99 9C       		.byte	0x9c
 3414 0a9a C80A0000 		.4byte	0xac8
 3415 0a9e 24       		.uleb128 0x24
 3416 0a9f 15090000 		.4byte	.LASF121
 3417 0aa3 01       		.byte	0x1
 3418 0aa4 3103     		.2byte	0x331
 3419 0aa6 25000000 		.4byte	0x25
 3420 0aaa F8030000 		.4byte	.LLST24
 3421 0aae 1D       		.uleb128 0x1d
 3422 0aaf 9C090000 		.4byte	.LASF97
 3423 0ab3 01       		.byte	0x1
 3424 0ab4 3503     		.2byte	0x335
 3425 0ab6 25000000 		.4byte	0x25
 3426 0aba 1B040000 		.4byte	.LLST25
 3427 0abe 20       		.uleb128 0x20
 3428 0abf 14000000 		.4byte	.LVL137
 3429 0ac3 5C070000 		.4byte	0x75c
 3430 0ac7 00       		.byte	0
 3431 0ac8 1B       		.uleb128 0x1b
 3432 0ac9 B2090000 		.4byte	.LASF122
 3433 0acd 01       		.byte	0x1
 3434 0ace 4703     		.2byte	0x347
 3435 0ad0 00000000 		.4byte	.LFB44
 3436 0ad4 48020000 		.4byte	.LFE44-.LFB44
 3437 0ad8 01       		.uleb128 0x1
 3438 0ad9 9C       		.byte	0x9c
 3439 0ada C40C0000 		.4byte	0xcc4
 3440 0ade 1C       		.uleb128 0x1c
 3441 0adf 61726700 		.ascii	"arg\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 89


 3442 0ae3 01       		.byte	0x1
 3443 0ae4 4703     		.2byte	0x347
 3444 0ae6 46010000 		.4byte	0x146
 3445 0aea 2E040000 		.4byte	.LLST26
 3446 0aee 2B       		.uleb128 0x2b
 3447 0aef A8050000 		.4byte	.LASF123
 3448 0af3 01       		.byte	0x1
 3449 0af4 4A03     		.2byte	0x34a
 3450 0af6 D3000000 		.4byte	0xd3
 3451 0afa 05       		.byte	0x5
 3452 0afb 23       		.uleb128 0x23
 3453 0afc 6E6F7700 		.ascii	"now\000"
 3454 0b00 01       		.byte	0x1
 3455 0b01 4B03     		.2byte	0x34b
 3456 0b03 D3000000 		.4byte	0xd3
 3457 0b07 4F040000 		.4byte	.LLST27
 3458 0b0b 1D       		.uleb128 0x1d
 3459 0b0c 15090000 		.4byte	.LASF121
 3460 0b10 01       		.byte	0x1
 3461 0b11 4C03     		.2byte	0x34c
 3462 0b13 25000000 		.4byte	0x25
 3463 0b17 8F040000 		.4byte	.LLST28
 3464 0b1b 1D       		.uleb128 0x1d
 3465 0b1c 12000000 		.4byte	.LASF124
 3466 0b20 01       		.byte	0x1
 3467 0b21 4D03     		.2byte	0x34d
 3468 0b23 F7000000 		.4byte	0xf7
 3469 0b27 A2040000 		.4byte	.LLST29
 3470 0b2b 1D       		.uleb128 0x1d
 3471 0b2c 390B0000 		.4byte	.LASF125
 3472 0b30 01       		.byte	0x1
 3473 0b31 4D03     		.2byte	0x34d
 3474 0b33 F7000000 		.4byte	0xf7
 3475 0b37 B5040000 		.4byte	.LLST30
 3476 0b3b 1D       		.uleb128 0x1d
 3477 0b3c EF080000 		.4byte	.LASF126
 3478 0b40 01       		.byte	0x1
 3479 0b41 4E03     		.2byte	0x34e
 3480 0b43 D3000000 		.4byte	0xd3
 3481 0b47 C8040000 		.4byte	.LLST31
 3482 0b4b 1E       		.uleb128 0x1e
 3483 0b4c 08000000 		.4byte	.LVL141
 3484 0b50 F6110000 		.4byte	0x11f6
 3485 0b54 5E0B0000 		.4byte	0xb5e
 3486 0b58 1F       		.uleb128 0x1f
 3487 0b59 01       		.uleb128 0x1
 3488 0b5a 50       		.byte	0x50
 3489 0b5b 01       		.uleb128 0x1
 3490 0b5c 30       		.byte	0x30
 3491 0b5d 00       		.byte	0
 3492 0b5e 20       		.uleb128 0x20
 3493 0b5f 1E000000 		.4byte	.LVL142
 3494 0b63 33090000 		.4byte	0x933
 3495 0b67 1E       		.uleb128 0x1e
 3496 0b68 2A000000 		.4byte	.LVL143
 3497 0b6c 53090000 		.4byte	0x953
 3498 0b70 7A0B0000 		.4byte	0xb7a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 90


 3499 0b74 1F       		.uleb128 0x1f
 3500 0b75 01       		.uleb128 0x1
 3501 0b76 50       		.byte	0x50
 3502 0b77 01       		.uleb128 0x1
 3503 0b78 35       		.byte	0x35
 3504 0b79 00       		.byte	0
 3505 0b7a 1E       		.uleb128 0x1e
 3506 0b7b 30000000 		.4byte	.LVL144
 3507 0b7f 410A0000 		.4byte	0xa41
 3508 0b83 8E0B0000 		.4byte	0xb8e
 3509 0b87 1F       		.uleb128 0x1f
 3510 0b88 01       		.uleb128 0x1
 3511 0b89 50       		.byte	0x50
 3512 0b8a 02       		.uleb128 0x2
 3513 0b8b 74       		.byte	0x74
 3514 0b8c 00       		.sleb128 0
 3515 0b8d 00       		.byte	0
 3516 0b8e 1E       		.uleb128 0x1e
 3517 0b8f 66000000 		.4byte	.LVL147
 3518 0b93 06130000 		.4byte	0x1306
 3519 0b97 A10B0000 		.4byte	0xba1
 3520 0b9b 1F       		.uleb128 0x1f
 3521 0b9c 01       		.uleb128 0x1
 3522 0b9d 50       		.byte	0x50
 3523 0b9e 01       		.uleb128 0x1
 3524 0b9f 31       		.byte	0x31
 3525 0ba0 00       		.byte	0
 3526 0ba1 1E       		.uleb128 0x1e
 3527 0ba2 6E000000 		.4byte	.LVL148
 3528 0ba6 11130000 		.4byte	0x1311
 3529 0baa B60B0000 		.4byte	0xbb6
 3530 0bae 1F       		.uleb128 0x1f
 3531 0baf 01       		.uleb128 0x1
 3532 0bb0 50       		.byte	0x50
 3533 0bb1 03       		.uleb128 0x3
 3534 0bb2 0A       		.byte	0xa
 3535 0bb3 0008     		.2byte	0x800
 3536 0bb5 00       		.byte	0
 3537 0bb6 20       		.uleb128 0x20
 3538 0bb7 72000000 		.4byte	.LVL149
 3539 0bbb 87120000 		.4byte	0x1287
 3540 0bbf 20       		.uleb128 0x20
 3541 0bc0 8C000000 		.4byte	.LVL152
 3542 0bc4 5C070000 		.4byte	0x75c
 3543 0bc8 1E       		.uleb128 0x1e
 3544 0bc9 A8000000 		.4byte	.LVL155
 3545 0bcd 1C130000 		.4byte	0x131c
 3546 0bd1 DB0B0000 		.4byte	0xbdb
 3547 0bd5 1F       		.uleb128 0x1f
 3548 0bd6 01       		.uleb128 0x1
 3549 0bd7 50       		.byte	0x50
 3550 0bd8 01       		.uleb128 0x1
 3551 0bd9 36       		.byte	0x36
 3552 0bda 00       		.byte	0
 3553 0bdb 1E       		.uleb128 0x1e
 3554 0bdc AE000000 		.4byte	.LVL156
 3555 0be0 27130000 		.4byte	0x1327
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 91


 3556 0be4 EE0B0000 		.4byte	0xbee
 3557 0be8 1F       		.uleb128 0x1f
 3558 0be9 01       		.uleb128 0x1
 3559 0bea 50       		.byte	0x50
 3560 0beb 01       		.uleb128 0x1
 3561 0bec 36       		.byte	0x36
 3562 0bed 00       		.byte	0
 3563 0bee 20       		.uleb128 0x20
 3564 0bef DC000000 		.4byte	.LVL157
 3565 0bf3 9C070000 		.4byte	0x79c
 3566 0bf7 1E       		.uleb128 0x1e
 3567 0bf8 E6000000 		.4byte	.LVL158
 3568 0bfc 50120000 		.4byte	0x1250
 3569 0c00 0A0C0000 		.4byte	0xc0a
 3570 0c04 1F       		.uleb128 0x1f
 3571 0c05 01       		.uleb128 0x1
 3572 0c06 50       		.byte	0x50
 3573 0c07 01       		.uleb128 0x1
 3574 0c08 30       		.byte	0x30
 3575 0c09 00       		.byte	0
 3576 0c0a 20       		.uleb128 0x20
 3577 0c0b F6000000 		.4byte	.LVL160
 3578 0c0f 5C070000 		.4byte	0x75c
 3579 0c13 20       		.uleb128 0x20
 3580 0c14 00010000 		.4byte	.LVL161
 3581 0c18 9C070000 		.4byte	0x79c
 3582 0c1c 20       		.uleb128 0x20
 3583 0c1d 10010000 		.4byte	.LVL164
 3584 0c21 32130000 		.4byte	0x1332
 3585 0c25 1E       		.uleb128 0x1e
 3586 0c26 2A010000 		.4byte	.LVL167
 3587 0c2a 10070000 		.4byte	0x710
 3588 0c2e 380C0000 		.4byte	0xc38
 3589 0c32 1F       		.uleb128 0x1f
 3590 0c33 01       		.uleb128 0x1
 3591 0c34 50       		.byte	0x50
 3592 0c35 01       		.uleb128 0x1
 3593 0c36 34       		.byte	0x34
 3594 0c37 00       		.byte	0
 3595 0c38 1E       		.uleb128 0x1e
 3596 0c39 40010000 		.4byte	.LVL168
 3597 0c3d 10070000 		.4byte	0x710
 3598 0c41 4B0C0000 		.4byte	0xc4b
 3599 0c45 1F       		.uleb128 0x1f
 3600 0c46 01       		.uleb128 0x1
 3601 0c47 50       		.byte	0x50
 3602 0c48 01       		.uleb128 0x1
 3603 0c49 32       		.byte	0x32
 3604 0c4a 00       		.byte	0
 3605 0c4b 1E       		.uleb128 0x1e
 3606 0c4c 56010000 		.4byte	.LVL169
 3607 0c50 410A0000 		.4byte	0xa41
 3608 0c54 5E0C0000 		.4byte	0xc5e
 3609 0c58 1F       		.uleb128 0x1f
 3610 0c59 01       		.uleb128 0x1
 3611 0c5a 50       		.byte	0x50
 3612 0c5b 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 92


 3613 0c5c 31       		.byte	0x31
 3614 0c5d 00       		.byte	0
 3615 0c5e 1E       		.uleb128 0x1e
 3616 0c5f 6A010000 		.4byte	.LVL170
 3617 0c63 410A0000 		.4byte	0xa41
 3618 0c67 710C0000 		.4byte	0xc71
 3619 0c6b 1F       		.uleb128 0x1f
 3620 0c6c 01       		.uleb128 0x1
 3621 0c6d 50       		.byte	0x50
 3622 0c6e 01       		.uleb128 0x1
 3623 0c6f 30       		.byte	0x30
 3624 0c70 00       		.byte	0
 3625 0c71 1E       		.uleb128 0x1e
 3626 0c72 C0010000 		.4byte	.LVL171
 3627 0c76 C4090000 		.4byte	0x9c4
 3628 0c7a 850C0000 		.4byte	0xc85
 3629 0c7e 1F       		.uleb128 0x1f
 3630 0c7f 01       		.uleb128 0x1
 3631 0c80 50       		.byte	0x50
 3632 0c81 02       		.uleb128 0x2
 3633 0c82 74       		.byte	0x74
 3634 0c83 00       		.sleb128 0
 3635 0c84 00       		.byte	0
 3636 0c85 20       		.uleb128 0x20
 3637 0c86 C8010000 		.4byte	.LVL172
 3638 0c8a 880A0000 		.4byte	0xa88
 3639 0c8e 1E       		.uleb128 0x1e
 3640 0c8f D6010000 		.4byte	.LVL173
 3641 0c93 06130000 		.4byte	0x1306
 3642 0c97 A10C0000 		.4byte	0xca1
 3643 0c9b 1F       		.uleb128 0x1f
 3644 0c9c 01       		.uleb128 0x1
 3645 0c9d 50       		.byte	0x50
 3646 0c9e 01       		.uleb128 0x1
 3647 0c9f 30       		.byte	0x30
 3648 0ca0 00       		.byte	0
 3649 0ca1 1E       		.uleb128 0x1e
 3650 0ca2 DC010000 		.4byte	.LVL174
 3651 0ca6 23120000 		.4byte	0x1223
 3652 0caa B40C0000 		.4byte	0xcb4
 3653 0cae 1F       		.uleb128 0x1f
 3654 0caf 01       		.uleb128 0x1
 3655 0cb0 50       		.byte	0x50
 3656 0cb1 01       		.uleb128 0x1
 3657 0cb2 35       		.byte	0x35
 3658 0cb3 00       		.byte	0
 3659 0cb4 21       		.uleb128 0x21
 3660 0cb5 E2010000 		.4byte	.LVL175
 3661 0cb9 F6110000 		.4byte	0x11f6
 3662 0cbd 1F       		.uleb128 0x1f
 3663 0cbe 01       		.uleb128 0x1
 3664 0cbf 50       		.byte	0x50
 3665 0cc0 01       		.uleb128 0x1
 3666 0cc1 30       		.byte	0x30
 3667 0cc2 00       		.byte	0
 3668 0cc3 00       		.byte	0
 3669 0cc4 27       		.uleb128 0x27
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 93


 3670 0cc5 3B0A0000 		.4byte	.LASF127
 3671 0cc9 01       		.byte	0x1
 3672 0cca 1104     		.2byte	0x411
 3673 0ccc 2C000000 		.4byte	0x2c
 3674 0cd0 00000000 		.4byte	.LFB45
 3675 0cd4 48010000 		.4byte	.LFE45-.LFB45
 3676 0cd8 01       		.uleb128 0x1
 3677 0cd9 9C       		.byte	0x9c
 3678 0cda 1A0F0000 		.4byte	0xf1a
 3679 0cde 23       		.uleb128 0x23
 3680 0cdf 7300     		.ascii	"s\000"
 3681 0ce1 01       		.byte	0x1
 3682 0ce2 1304     		.2byte	0x413
 3683 0ce4 BB000000 		.4byte	0xbb
 3684 0ce8 E6040000 		.4byte	.LLST32
 3685 0cec 20       		.uleb128 0x20
 3686 0ced 08000000 		.4byte	.LVL176
 3687 0cf1 C4060000 		.4byte	0x6c4
 3688 0cf5 1E       		.uleb128 0x1e
 3689 0cf6 0E000000 		.4byte	.LVL177
 3690 0cfa 1C130000 		.4byte	0x131c
 3691 0cfe 080D0000 		.4byte	0xd08
 3692 0d02 1F       		.uleb128 0x1f
 3693 0d03 01       		.uleb128 0x1
 3694 0d04 50       		.byte	0x50
 3695 0d05 01       		.uleb128 0x1
 3696 0d06 31       		.byte	0x31
 3697 0d07 00       		.byte	0
 3698 0d08 1E       		.uleb128 0x1e
 3699 0d09 14000000 		.4byte	.LVL178
 3700 0d0d 27130000 		.4byte	0x1327
 3701 0d11 1B0D0000 		.4byte	0xd1b
 3702 0d15 1F       		.uleb128 0x1f
 3703 0d16 01       		.uleb128 0x1
 3704 0d17 50       		.byte	0x50
 3705 0d18 01       		.uleb128 0x1
 3706 0d19 31       		.byte	0x31
 3707 0d1a 00       		.byte	0
 3708 0d1b 1E       		.uleb128 0x1e
 3709 0d1c 28000000 		.4byte	.LVL179
 3710 0d20 3D130000 		.4byte	0x133d
 3711 0d24 540D0000 		.4byte	0xd54
 3712 0d28 1F       		.uleb128 0x1f
 3713 0d29 01       		.uleb128 0x1
 3714 0d2a 50       		.byte	0x50
 3715 0d2b 05       		.uleb128 0x5
 3716 0d2c 03       		.byte	0x3
 3717 0d2d 00000000 		.4byte	PID_Task
 3718 0d31 1F       		.uleb128 0x1f
 3719 0d32 01       		.uleb128 0x1
 3720 0d33 51       		.byte	0x51
 3721 0d34 05       		.uleb128 0x5
 3722 0d35 03       		.byte	0x3
 3723 0d36 00000000 		.4byte	.LC89
 3724 0d3a 1F       		.uleb128 0x1f
 3725 0d3b 01       		.uleb128 0x1
 3726 0d3c 52       		.byte	0x52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 94


 3727 0d3d 02       		.uleb128 0x2
 3728 0d3e 08       		.byte	0x8
 3729 0d3f 40       		.byte	0x40
 3730 0d40 1F       		.uleb128 0x1f
 3731 0d41 01       		.uleb128 0x1
 3732 0d42 53       		.byte	0x53
 3733 0d43 02       		.uleb128 0x2
 3734 0d44 74       		.byte	0x74
 3735 0d45 00       		.sleb128 0
 3736 0d46 1F       		.uleb128 0x1f
 3737 0d47 02       		.uleb128 0x2
 3738 0d48 7D       		.byte	0x7d
 3739 0d49 00       		.sleb128 0
 3740 0d4a 01       		.uleb128 0x1
 3741 0d4b 33       		.byte	0x33
 3742 0d4c 1F       		.uleb128 0x1f
 3743 0d4d 02       		.uleb128 0x2
 3744 0d4e 7D       		.byte	0x7d
 3745 0d4f 04       		.sleb128 4
 3746 0d50 02       		.uleb128 0x2
 3747 0d51 74       		.byte	0x74
 3748 0d52 00       		.sleb128 0
 3749 0d53 00       		.byte	0
 3750 0d54 1E       		.uleb128 0x1e
 3751 0d55 3A000000 		.4byte	.LVL180
 3752 0d59 3D130000 		.4byte	0x133d
 3753 0d5d 8D0D0000 		.4byte	0xd8d
 3754 0d61 1F       		.uleb128 0x1f
 3755 0d62 01       		.uleb128 0x1
 3756 0d63 50       		.byte	0x50
 3757 0d64 05       		.uleb128 0x5
 3758 0d65 03       		.byte	0x3
 3759 0d66 00000000 		.4byte	Comm_Task
 3760 0d6a 1F       		.uleb128 0x1f
 3761 0d6b 01       		.uleb128 0x1
 3762 0d6c 51       		.byte	0x51
 3763 0d6d 05       		.uleb128 0x5
 3764 0d6e 03       		.byte	0x3
 3765 0d6f 04000000 		.4byte	.LC92
 3766 0d73 1F       		.uleb128 0x1f
 3767 0d74 01       		.uleb128 0x1
 3768 0d75 52       		.byte	0x52
 3769 0d76 02       		.uleb128 0x2
 3770 0d77 08       		.byte	0x8
 3771 0d78 64       		.byte	0x64
 3772 0d79 1F       		.uleb128 0x1f
 3773 0d7a 01       		.uleb128 0x1
 3774 0d7b 53       		.byte	0x53
 3775 0d7c 02       		.uleb128 0x2
 3776 0d7d 74       		.byte	0x74
 3777 0d7e 00       		.sleb128 0
 3778 0d7f 1F       		.uleb128 0x1f
 3779 0d80 02       		.uleb128 0x2
 3780 0d81 7D       		.byte	0x7d
 3781 0d82 00       		.sleb128 0
 3782 0d83 01       		.uleb128 0x1
 3783 0d84 32       		.byte	0x32
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 95


 3784 0d85 1F       		.uleb128 0x1f
 3785 0d86 02       		.uleb128 0x2
 3786 0d87 7D       		.byte	0x7d
 3787 0d88 04       		.sleb128 4
 3788 0d89 02       		.uleb128 0x2
 3789 0d8a 74       		.byte	0x74
 3790 0d8b 00       		.sleb128 0
 3791 0d8c 00       		.byte	0
 3792 0d8d 1E       		.uleb128 0x1e
 3793 0d8e 4C000000 		.4byte	.LVL181
 3794 0d92 3D130000 		.4byte	0x133d
 3795 0d96 C60D0000 		.4byte	0xdc6
 3796 0d9a 1F       		.uleb128 0x1f
 3797 0d9b 01       		.uleb128 0x1
 3798 0d9c 50       		.byte	0x50
 3799 0d9d 05       		.uleb128 0x5
 3800 0d9e 03       		.byte	0x3
 3801 0d9f 00000000 		.4byte	Current_Read_Task
 3802 0da3 1F       		.uleb128 0x1f
 3803 0da4 01       		.uleb128 0x1
 3804 0da5 51       		.byte	0x51
 3805 0da6 05       		.uleb128 0x5
 3806 0da7 03       		.byte	0x3
 3807 0da8 14000000 		.4byte	.LC95
 3808 0dac 1F       		.uleb128 0x1f
 3809 0dad 01       		.uleb128 0x1
 3810 0dae 52       		.byte	0x52
 3811 0daf 02       		.uleb128 0x2
 3812 0db0 08       		.byte	0x8
 3813 0db1 40       		.byte	0x40
 3814 0db2 1F       		.uleb128 0x1f
 3815 0db3 01       		.uleb128 0x1
 3816 0db4 53       		.byte	0x53
 3817 0db5 02       		.uleb128 0x2
 3818 0db6 74       		.byte	0x74
 3819 0db7 00       		.sleb128 0
 3820 0db8 1F       		.uleb128 0x1f
 3821 0db9 02       		.uleb128 0x2
 3822 0dba 7D       		.byte	0x7d
 3823 0dbb 00       		.sleb128 0
 3824 0dbc 01       		.uleb128 0x1
 3825 0dbd 31       		.byte	0x31
 3826 0dbe 1F       		.uleb128 0x1f
 3827 0dbf 02       		.uleb128 0x2
 3828 0dc0 7D       		.byte	0x7d
 3829 0dc1 04       		.sleb128 4
 3830 0dc2 02       		.uleb128 0x2
 3831 0dc3 74       		.byte	0x74
 3832 0dc4 00       		.sleb128 0
 3833 0dc5 00       		.byte	0
 3834 0dc6 1E       		.uleb128 0x1e
 3835 0dc7 52000000 		.4byte	.LVL182
 3836 0dcb 49130000 		.4byte	0x1349
 3837 0dcf D90D0000 		.4byte	0xdd9
 3838 0dd3 1F       		.uleb128 0x1f
 3839 0dd4 01       		.uleb128 0x1
 3840 0dd5 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 96


 3841 0dd6 01       		.uleb128 0x1
 3842 0dd7 31       		.byte	0x31
 3843 0dd8 00       		.byte	0
 3844 0dd9 1E       		.uleb128 0x1e
 3845 0dda 68000000 		.4byte	.LVL186
 3846 0dde 55130000 		.4byte	0x1355
 3847 0de2 ED0D0000 		.4byte	0xded
 3848 0de6 1F       		.uleb128 0x1f
 3849 0de7 01       		.uleb128 0x1
 3850 0de8 50       		.byte	0x50
 3851 0de9 02       		.uleb128 0x2
 3852 0dea 74       		.byte	0x74
 3853 0deb 00       		.sleb128 0
 3854 0dec 00       		.byte	0
 3855 0ded 1E       		.uleb128 0x1e
 3856 0dee 70000000 		.4byte	.LVL187
 3857 0df2 60130000 		.4byte	0x1360
 3858 0df6 020E0000 		.4byte	0xe02
 3859 0dfa 1F       		.uleb128 0x1f
 3860 0dfb 01       		.uleb128 0x1
 3861 0dfc 50       		.byte	0x50
 3862 0dfd 03       		.uleb128 0x3
 3863 0dfe 0A       		.byte	0xa
 3864 0dff E803     		.2byte	0x3e8
 3865 0e01 00       		.byte	0
 3866 0e02 1E       		.uleb128 0x1e
 3867 0e03 78000000 		.4byte	.LVL189
 3868 0e07 6B130000 		.4byte	0x136b
 3869 0e0b 190E0000 		.4byte	0xe19
 3870 0e0f 1F       		.uleb128 0x1f
 3871 0e10 01       		.uleb128 0x1
 3872 0e11 50       		.byte	0x50
 3873 0e12 05       		.uleb128 0x5
 3874 0e13 03       		.byte	0x3
 3875 0e14 00000000 		.4byte	HomeIsrHandler
 3876 0e18 00       		.byte	0
 3877 0e19 1E       		.uleb128 0x1e
 3878 0e1a 7E000000 		.4byte	.LVL190
 3879 0e1e 76130000 		.4byte	0x1376
 3880 0e22 300E0000 		.4byte	0xe30
 3881 0e26 1F       		.uleb128 0x1f
 3882 0e27 01       		.uleb128 0x1
 3883 0e28 50       		.byte	0x50
 3884 0e29 05       		.uleb128 0x5
 3885 0e2a 03       		.byte	0x3
 3886 0e2b 00000000 		.4byte	RSTIsrHandler
 3887 0e2f 00       		.byte	0
 3888 0e30 1E       		.uleb128 0x1e
 3889 0e31 84000000 		.4byte	.LVL191
 3890 0e35 81130000 		.4byte	0x1381
 3891 0e39 470E0000 		.4byte	0xe47
 3892 0e3d 1F       		.uleb128 0x1f
 3893 0e3e 01       		.uleb128 0x1
 3894 0e3f 50       		.byte	0x50
 3895 0e40 05       		.uleb128 0x5
 3896 0e41 03       		.byte	0x3
 3897 0e42 00000000 		.4byte	SPI_SS_IsrHandler
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 97


 3898 0e46 00       		.byte	0
 3899 0e47 1E       		.uleb128 0x1e
 3900 0e48 8A000000 		.4byte	.LVL192
 3901 0e4c 8C130000 		.4byte	0x138c
 3902 0e50 5A0E0000 		.4byte	0xe5a
 3903 0e54 1F       		.uleb128 0x1f
 3904 0e55 01       		.uleb128 0x1
 3905 0e56 50       		.byte	0x50
 3906 0e57 01       		.uleb128 0x1
 3907 0e58 33       		.byte	0x33
 3908 0e59 00       		.byte	0
 3909 0e5a 1E       		.uleb128 0x1e
 3910 0e5b 90000000 		.4byte	.LVL193
 3911 0e5f 97130000 		.4byte	0x1397
 3912 0e63 6D0E0000 		.4byte	0xe6d
 3913 0e67 1F       		.uleb128 0x1f
 3914 0e68 01       		.uleb128 0x1
 3915 0e69 50       		.byte	0x50
 3916 0e6a 01       		.uleb128 0x1
 3917 0e6b 32       		.byte	0x32
 3918 0e6c 00       		.byte	0
 3919 0e6d 1E       		.uleb128 0x1e
 3920 0e6e 96000000 		.4byte	.LVL194
 3921 0e72 A2130000 		.4byte	0x13a2
 3922 0e76 800E0000 		.4byte	0xe80
 3923 0e7a 1F       		.uleb128 0x1f
 3924 0e7b 01       		.uleb128 0x1
 3925 0e7c 50       		.byte	0x50
 3926 0e7d 01       		.uleb128 0x1
 3927 0e7e 33       		.byte	0x33
 3928 0e7f 00       		.byte	0
 3929 0e80 20       		.uleb128 0x20
 3930 0e81 9C000000 		.4byte	.LVL195
 3931 0e85 02120000 		.4byte	0x1202
 3932 0e89 1E       		.uleb128 0x1e
 3933 0e8a A2000000 		.4byte	.LVL196
 3934 0e8e 60130000 		.4byte	0x1360
 3935 0e92 9D0E0000 		.4byte	0xe9d
 3936 0e96 1F       		.uleb128 0x1f
 3937 0e97 01       		.uleb128 0x1
 3938 0e98 50       		.byte	0x50
 3939 0e99 02       		.uleb128 0x2
 3940 0e9a 08       		.byte	0x8
 3941 0e9b 64       		.byte	0x64
 3942 0e9c 00       		.byte	0
 3943 0e9d 20       		.uleb128 0x20
 3944 0e9e A6000000 		.4byte	.LVL197
 3945 0ea2 AD130000 		.4byte	0x13ad
 3946 0ea6 20       		.uleb128 0x20
 3947 0ea7 AA000000 		.4byte	.LVL198
 3948 0eab B8130000 		.4byte	0x13b8
 3949 0eaf 1E       		.uleb128 0x1e
 3950 0eb0 B2000000 		.4byte	.LVL199
 3951 0eb4 C4130000 		.4byte	0x13c4
 3952 0eb8 C40E0000 		.4byte	0xec4
 3953 0ebc 1F       		.uleb128 0x1f
 3954 0ebd 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 98


 3955 0ebe 50       		.byte	0x50
 3956 0ebf 03       		.uleb128 0x3
 3957 0ec0 0A       		.byte	0xa
 3958 0ec1 4006     		.2byte	0x640
 3959 0ec3 00       		.byte	0
 3960 0ec4 20       		.uleb128 0x20
 3961 0ec5 B8000000 		.4byte	.LVL200
 3962 0ec9 5C070000 		.4byte	0x75c
 3963 0ecd 20       		.uleb128 0x20
 3964 0ece C6000000 		.4byte	.LVL201
 3965 0ed2 D0130000 		.4byte	0x13d0
 3966 0ed6 1E       		.uleb128 0x1e
 3967 0ed7 CE000000 		.4byte	.LVL202
 3968 0edb 45120000 		.4byte	0x1245
 3969 0edf EA0E0000 		.4byte	0xeea
 3970 0ee3 1F       		.uleb128 0x1f
 3971 0ee4 01       		.uleb128 0x1
 3972 0ee5 50       		.byte	0x50
 3973 0ee6 02       		.uleb128 0x2
 3974 0ee7 75       		.byte	0x75
 3975 0ee8 00       		.sleb128 0
 3976 0ee9 00       		.byte	0
 3977 0eea 20       		.uleb128 0x20
 3978 0eeb D6000000 		.4byte	.LVL203
 3979 0eef DB130000 		.4byte	0x13db
 3980 0ef3 1E       		.uleb128 0x1e
 3981 0ef4 DC000000 		.4byte	.LVL204
 3982 0ef8 50120000 		.4byte	0x1250
 3983 0efc 070F0000 		.4byte	0xf07
 3984 0f00 1F       		.uleb128 0x1f
 3985 0f01 01       		.uleb128 0x1
 3986 0f02 50       		.byte	0x50
 3987 0f03 02       		.uleb128 0x2
 3988 0f04 74       		.byte	0x74
 3989 0f05 00       		.sleb128 0
 3990 0f06 00       		.byte	0
 3991 0f07 20       		.uleb128 0x20
 3992 0f08 E0000000 		.4byte	.LVL205
 3993 0f0c 87120000 		.4byte	0x1287
 3994 0f10 20       		.uleb128 0x20
 3995 0f11 F6000000 		.4byte	.LVL206
 3996 0f15 E6130000 		.4byte	0x13e6
 3997 0f19 00       		.byte	0
 3998 0f1a 2C       		.uleb128 0x2c
 3999 0f1b 74030000 		.4byte	.LASF128
 4000 0f1f 01       		.byte	0x1
 4001 0f20 56       		.byte	0x56
 4002 0f21 810A0000 		.4byte	0xa81
 4003 0f25 05       		.uleb128 0x5
 4004 0f26 03       		.byte	0x3
 4005 0f27 00000000 		.4byte	inAuto
 4006 0f2b 2D       		.uleb128 0x2d
 4007 0f2c 4A6F6700 		.ascii	"Jog\000"
 4008 0f30 01       		.byte	0x1
 4009 0f31 58       		.byte	0x58
 4010 0f32 3C0F0000 		.4byte	0xf3c
 4011 0f36 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 99


 4012 0f37 03       		.byte	0x3
 4013 0f38 00000000 		.4byte	Jog
 4014 0f3c 06       		.uleb128 0x6
 4015 0f3d DF000000 		.4byte	0xdf
 4016 0f41 2C       		.uleb128 0x2c
 4017 0f42 28010000 		.4byte	.LASF129
 4018 0f46 01       		.byte	0x1
 4019 0f47 58       		.byte	0x58
 4020 0f48 3C0F0000 		.4byte	0xf3c
 4021 0f4c 05       		.uleb128 0x5
 4022 0f4d 03       		.byte	0x3
 4023 0f4e 00000000 		.4byte	LastJog
 4024 0f52 2C       		.uleb128 0x2c
 4025 0f53 5D070000 		.4byte	.LASF130
 4026 0f57 01       		.byte	0x1
 4027 0f58 59       		.byte	0x59
 4028 0f59 810A0000 		.4byte	0xa81
 4029 0f5d 05       		.uleb128 0x5
 4030 0f5e 03       		.byte	0x3
 4031 0f5f 00000000 		.4byte	PID_Enabled
 4032 0f63 2C       		.uleb128 0x2c
 4033 0f64 4D070000 		.4byte	.LASF131
 4034 0f68 01       		.byte	0x1
 4035 0f69 59       		.byte	0x59
 4036 0f6a 810A0000 		.4byte	0xa81
 4037 0f6e 05       		.uleb128 0x5
 4038 0f6f 03       		.byte	0x3
 4039 0f70 00000000 		.4byte	PID_Was_Enabled
 4040 0f74 2C       		.uleb128 0x2c
 4041 0f75 3F080000 		.4byte	.LASF132
 4042 0f79 01       		.byte	0x1
 4043 0f7a 5A       		.byte	0x5a
 4044 0f7b F7000000 		.4byte	0xf7
 4045 0f7f 05       		.uleb128 0x5
 4046 0f80 03       		.byte	0x3
 4047 0f81 00000000 		.4byte	PID_Setpoint
 4048 0f85 2C       		.uleb128 0x2c
 4049 0f86 F10A0000 		.4byte	.LASF133
 4050 0f8a 01       		.byte	0x1
 4051 0f8b 5A       		.byte	0x5a
 4052 0f8c F7000000 		.4byte	0xf7
 4053 0f90 05       		.uleb128 0x5
 4054 0f91 03       		.byte	0x3
 4055 0f92 00000000 		.4byte	PID_EffectiveSetpoint
 4056 0f96 2C       		.uleb128 0x2c
 4057 0f97 0E020000 		.4byte	.LASF134
 4058 0f9b 01       		.byte	0x1
 4059 0f9c 5B       		.byte	0x5b
 4060 0f9d BB000000 		.4byte	0xbb
 4061 0fa1 05       		.uleb128 0x5
 4062 0fa2 03       		.byte	0x3
 4063 0fa3 00000000 		.4byte	PID_EffSetDelta
 4064 0fa7 2C       		.uleb128 0x2c
 4065 0fa8 2C020000 		.4byte	.LASF135
 4066 0fac 01       		.byte	0x1
 4067 0fad 5C       		.byte	0x5c
 4068 0fae D3000000 		.4byte	0xd3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 100


 4069 0fb2 05       		.uleb128 0x5
 4070 0fb3 03       		.byte	0x3
 4071 0fb4 00000000 		.4byte	lastTime
 4072 0fb8 2C       		.uleb128 0x2c
 4073 0fb9 0A070000 		.4byte	.LASF136
 4074 0fbd 01       		.byte	0x1
 4075 0fbe 5D       		.byte	0x5d
 4076 0fbf 25000000 		.4byte	0x25
 4077 0fc3 05       		.uleb128 0x5
 4078 0fc4 03       		.byte	0x3
 4079 0fc5 00000000 		.4byte	Output
 4080 0fc9 2C       		.uleb128 0x2c
 4081 0fca 59020000 		.4byte	.LASF137
 4082 0fce 01       		.byte	0x1
 4083 0fcf 5E       		.byte	0x5e
 4084 0fd0 25000000 		.4byte	0x25
 4085 0fd4 05       		.uleb128 0x5
 4086 0fd5 03       		.byte	0x3
 4087 0fd6 00000000 		.4byte	ITerm
 4088 0fda 2C       		.uleb128 0x2c
 4089 0fdb 49040000 		.4byte	.LASF138
 4090 0fdf 01       		.byte	0x1
 4091 0fe0 5F       		.byte	0x5f
 4092 0fe1 E4070000 		.4byte	0x7e4
 4093 0fe5 05       		.uleb128 0x5
 4094 0fe6 03       		.byte	0x3
 4095 0fe7 00000000 		.4byte	Position
 4096 0feb 2C       		.uleb128 0x2c
 4097 0fec 21060000 		.4byte	.LASF139
 4098 0ff0 01       		.byte	0x1
 4099 0ff1 5F       		.byte	0x5f
 4100 0ff2 E4070000 		.4byte	0x7e4
 4101 0ff6 05       		.uleb128 0x5
 4102 0ff7 03       		.byte	0x3
 4103 0ff8 00000000 		.4byte	LastPosition
 4104 0ffc 2C       		.uleb128 0x2c
 4105 0ffd D8090000 		.4byte	.LASF140
 4106 1001 01       		.byte	0x1
 4107 1002 60       		.byte	0x60
 4108 1003 25000000 		.4byte	0x25
 4109 1007 05       		.uleb128 0x5
 4110 1008 03       		.byte	0x3
 4111 1009 00000000 		.4byte	refKp
 4112 100d 2C       		.uleb128 0x2c
 4113 100e AC090000 		.4byte	.LASF141
 4114 1012 01       		.byte	0x1
 4115 1013 60       		.byte	0x60
 4116 1014 25000000 		.4byte	0x25
 4117 1018 05       		.uleb128 0x5
 4118 1019 03       		.byte	0x3
 4119 101a 00000000 		.4byte	refKi
 4120 101e 2C       		.uleb128 0x2c
 4121 101f A6090000 		.4byte	.LASF142
 4122 1023 01       		.byte	0x1
 4123 1024 60       		.byte	0x60
 4124 1025 25000000 		.4byte	0x25
 4125 1029 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 101


 4126 102a 03       		.byte	0x3
 4127 102b 00000000 		.4byte	refKd
 4128 102f 2D       		.uleb128 0x2d
 4129 1030 6B7000   		.ascii	"kp\000"
 4130 1033 01       		.byte	0x1
 4131 1034 61       		.byte	0x61
 4132 1035 25000000 		.4byte	0x25
 4133 1039 05       		.uleb128 0x5
 4134 103a 03       		.byte	0x3
 4135 103b 00000000 		.4byte	kp
 4136 103f 2D       		.uleb128 0x2d
 4137 1040 6B6900   		.ascii	"ki\000"
 4138 1043 01       		.byte	0x1
 4139 1044 61       		.byte	0x61
 4140 1045 25000000 		.4byte	0x25
 4141 1049 05       		.uleb128 0x5
 4142 104a 03       		.byte	0x3
 4143 104b 00000000 		.4byte	ki
 4144 104f 2D       		.uleb128 0x2d
 4145 1050 6B6400   		.ascii	"kd\000"
 4146 1053 01       		.byte	0x1
 4147 1054 61       		.byte	0x61
 4148 1055 25000000 		.4byte	0x25
 4149 1059 05       		.uleb128 0x5
 4150 105a 03       		.byte	0x3
 4151 105b 00000000 		.4byte	kd
 4152 105f 2C       		.uleb128 0x2c
 4153 1060 13060000 		.4byte	.LASF143
 4154 1064 01       		.byte	0x1
 4155 1065 62       		.byte	0x62
 4156 1066 D3000000 		.4byte	0xd3
 4157 106a 05       		.uleb128 0x5
 4158 106b 03       		.byte	0x3
 4159 106c 00000000 		.4byte	refSampleTime
 4160 1070 2C       		.uleb128 0x2c
 4161 1071 3A030000 		.4byte	.LASF144
 4162 1075 01       		.byte	0x1
 4163 1076 63       		.byte	0x63
 4164 1077 25000000 		.4byte	0x25
 4165 107b 05       		.uleb128 0x5
 4166 107c 03       		.byte	0x3
 4167 107d 00000000 		.4byte	outMax_Total
 4168 1081 2C       		.uleb128 0x2c
 4169 1082 17080000 		.4byte	.LASF145
 4170 1086 01       		.byte	0x1
 4171 1087 63       		.byte	0x63
 4172 1088 25000000 		.4byte	0x25
 4173 108c 05       		.uleb128 0x5
 4174 108d 03       		.byte	0x3
 4175 108e 00000000 		.4byte	outMax_ITerm
 4176 1092 2C       		.uleb128 0x2c
 4177 1093 33000000 		.4byte	.LASF146
 4178 1097 01       		.byte	0x1
 4179 1098 64       		.byte	0x64
 4180 1099 25000000 		.4byte	0x25
 4181 109d 05       		.uleb128 0x5
 4182 109e 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 102


 4183 109f 00000000 		.4byte	pwmLimit
 4184 10a3 2C       		.uleb128 0x2c
 4185 10a4 38080000 		.4byte	.LASF147
 4186 10a8 01       		.byte	0x1
 4187 10a9 64       		.byte	0x64
 4188 10aa 25000000 		.4byte	0x25
 4189 10ae 05       		.uleb128 0x5
 4190 10af 03       		.byte	0x3
 4191 10b0 00000000 		.4byte	pwmMax
 4192 10b4 2C       		.uleb128 0x2c
 4193 10b5 35020000 		.4byte	.LASF148
 4194 10b9 01       		.byte	0x1
 4195 10ba 64       		.byte	0x64
 4196 10bb 25000000 		.4byte	0x25
 4197 10bf 05       		.uleb128 0x5
 4198 10c0 03       		.byte	0x3
 4199 10c1 00000000 		.4byte	pwmMin
 4200 10c5 2C       		.uleb128 0x2c
 4201 10c6 9D050000 		.4byte	.LASF149
 4202 10ca 01       		.byte	0x1
 4203 10cb 65       		.byte	0x65
 4204 10cc 810A0000 		.4byte	0xa81
 4205 10d0 05       		.uleb128 0x5
 4206 10d1 03       		.byte	0x3
 4207 10d2 00000000 		.4byte	homingDone
 4208 10d6 2C       		.uleb128 0x2c
 4209 10d7 94020000 		.4byte	.LASF150
 4210 10db 01       		.byte	0x1
 4211 10dc 9B       		.byte	0x9b
 4212 10dd E7100000 		.4byte	0x10e7
 4213 10e1 05       		.uleb128 0x5
 4214 10e2 03       		.byte	0x3
 4215 10e3 00000000 		.4byte	ConfigState
 4216 10e7 06       		.uleb128 0x6
 4217 10e8 D8010000 		.4byte	0x1d8
 4218 10ec 2C       		.uleb128 0x2c
 4219 10ed 67090000 		.4byte	.LASF151
 4220 10f1 01       		.byte	0x1
 4221 10f2 9C       		.byte	0x9c
 4222 10f3 11010000 		.4byte	0x111
 4223 10f7 05       		.uleb128 0x5
 4224 10f8 03       		.byte	0x3
 4225 10f9 00000000 		.4byte	FaultState
 4226 10fd 2C       		.uleb128 0x2c
 4227 10fe 8D090000 		.4byte	.LASF152
 4228 1102 01       		.byte	0x1
 4229 1103 9D       		.byte	0x9d
 4230 1104 11010000 		.4byte	0x111
 4231 1108 05       		.uleb128 0x5
 4232 1109 03       		.byte	0x3
 4233 110a 00000000 		.4byte	ConfigSequence
 4234 110e 2C       		.uleb128 0x2c
 4235 110f 94080000 		.4byte	.LASF153
 4236 1113 01       		.byte	0x1
 4237 1114 9E       		.byte	0x9e
 4238 1115 16010000 		.4byte	0x116
 4239 1119 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 103


 4240 111a 03       		.byte	0x3
 4241 111b 00000000 		.4byte	ChecksumErrors
 4242 111f 2C       		.uleb128 0x2c
 4243 1120 81000000 		.4byte	.LASF154
 4244 1124 01       		.byte	0x1
 4245 1125 9F       		.byte	0x9f
 4246 1126 30110000 		.4byte	0x1130
 4247 112a 05       		.uleb128 0x5
 4248 112b 03       		.byte	0x3
 4249 112c 00000000 		.4byte	Current
 4250 1130 06       		.uleb128 0x6
 4251 1131 EB000000 		.4byte	0xeb
 4252 1135 2D       		.uleb128 0x2d
 4253 1136 50574D00 		.ascii	"PWM\000"
 4254 113a 01       		.byte	0x1
 4255 113b A0       		.byte	0xa0
 4256 113c 46110000 		.4byte	0x1146
 4257 1140 05       		.uleb128 0x5
 4258 1141 03       		.byte	0x3
 4259 1142 00000000 		.4byte	PWM
 4260 1146 06       		.uleb128 0x6
 4261 1147 25000000 		.4byte	0x25
 4262 114b 14       		.uleb128 0x14
 4263 114c BB000000 		.4byte	0xbb
 4264 1150 5B110000 		.4byte	0x115b
 4265 1154 15       		.uleb128 0x15
 4266 1155 3F010000 		.4byte	0x13f
 4267 1159 13       		.byte	0x13
 4268 115a 00       		.byte	0
 4269 115b 2C       		.uleb128 0x2c
 4270 115c 03060000 		.4byte	.LASF155
 4271 1160 01       		.byte	0x1
 4272 1161 A1       		.byte	0xa1
 4273 1162 4B110000 		.4byte	0x114b
 4274 1166 05       		.uleb128 0x5
 4275 1167 03       		.byte	0x3
 4276 1168 00000000 		.4byte	CurrentI2Cinbuf
 4277 116c 2C       		.uleb128 0x2c
 4278 116d 24080000 		.4byte	.LASF156
 4279 1171 01       		.byte	0x1
 4280 1172 A4       		.byte	0xa4
 4281 1173 AE010000 		.4byte	0x1ae
 4282 1177 05       		.uleb128 0x5
 4283 1178 03       		.byte	0x3
 4284 1179 00000000 		.4byte	uxHighWaterMark_PID
 4285 117d 2C       		.uleb128 0x2c
 4286 117e 75060000 		.4byte	.LASF157
 4287 1182 01       		.byte	0x1
 4288 1183 A5       		.byte	0xa5
 4289 1184 AE010000 		.4byte	0x1ae
 4290 1188 05       		.uleb128 0x5
 4291 1189 03       		.byte	0x3
 4292 118a 00000000 		.4byte	uxHighWaterMark_Current
 4293 118e 2C       		.uleb128 0x2c
 4294 118f 7A0A0000 		.4byte	.LASF158
 4295 1193 01       		.byte	0x1
 4296 1194 A6       		.byte	0xa6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 104


 4297 1195 AE010000 		.4byte	0x1ae
 4298 1199 05       		.uleb128 0x5
 4299 119a 03       		.byte	0x3
 4300 119b 00000000 		.4byte	uxHighWaterMark_Comm
 4301 119f 2C       		.uleb128 0x2c
 4302 11a0 46000000 		.4byte	.LASF159
 4303 11a4 01       		.byte	0x1
 4304 11a5 A9       		.byte	0xa9
 4305 11a6 A3010000 		.4byte	0x1a3
 4306 11aa 05       		.uleb128 0x5
 4307 11ab 03       		.byte	0x3
 4308 11ac 00000000 		.4byte	Lock
 4309 11b0 2C       		.uleb128 0x2c
 4310 11b1 4F060000 		.4byte	.LASF160
 4311 11b5 01       		.byte	0x1
 4312 11b6 BB       		.byte	0xbb
 4313 11b7 D3000000 		.4byte	0xd3
 4314 11bb 05       		.uleb128 0x5
 4315 11bc 03       		.byte	0x3
 4316 11bd 00000000 		.4byte	LastMessageTimeTick
 4317 11c1 2C       		.uleb128 0x2c
 4318 11c2 22000000 		.4byte	.LASF161
 4319 11c6 01       		.byte	0x1
 4320 11c7 F8       		.byte	0xf8
 4321 11c8 D4030000 		.4byte	0x3d4
 4322 11cc 05       		.uleb128 0x5
 4323 11cd 03       		.byte	0x3
 4324 11ce 00000000 		.4byte	rxMessage
 4325 11d2 2E       		.uleb128 0x2e
 4326 11d3 2E060000 		.4byte	.LASF162
 4327 11d7 01       		.byte	0x1
 4328 11d8 0F01     		.2byte	0x10f
 4329 11da DE040000 		.4byte	0x4de
 4330 11de 05       		.uleb128 0x5
 4331 11df 03       		.byte	0x3
 4332 11e0 00000000 		.4byte	txMessage
 4333 11e4 2E       		.uleb128 0x2e
 4334 11e5 C5070000 		.4byte	.LASF163
 4335 11e9 01       		.byte	0x1
 4336 11ea 1701     		.2byte	0x117
 4337 11ec 1A050000 		.4byte	0x51a
 4338 11f0 05       		.uleb128 0x5
 4339 11f1 03       		.byte	0x3
 4340 11f2 00000000 		.4byte	txMessageState
 4341 11f6 2F       		.uleb128 0x2f
 4342 11f7 66020000 		.4byte	.LASF164
 4343 11fb 66020000 		.4byte	.LASF164
 4344 11ff 08       		.byte	0x8
 4345 1200 8E05     		.2byte	0x58e
 4346 1202 30       		.uleb128 0x30
 4347 1203 1E010000 		.4byte	.LASF165
 4348 1207 1E010000 		.4byte	.LASF165
 4349 120b 09       		.byte	0x9
 4350 120c 72       		.byte	0x72
 4351 120d 30       		.uleb128 0x30
 4352 120e 40040000 		.4byte	.LASF166
 4353 1212 40040000 		.4byte	.LASF166
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 105


 4354 1216 0A       		.byte	0xa
 4355 1217 6A       		.byte	0x6a
 4356 1218 30       		.uleb128 0x30
 4357 1219 C2060000 		.4byte	.LASF167
 4358 121d C2060000 		.4byte	.LASF167
 4359 1221 0A       		.byte	0xa
 4360 1222 70       		.byte	0x70
 4361 1223 2F       		.uleb128 0x2f
 4362 1224 54030000 		.4byte	.LASF168
 4363 1228 54030000 		.4byte	.LASF168
 4364 122c 08       		.byte	0x8
 4365 122d ED02     		.2byte	0x2ed
 4366 122f 30       		.uleb128 0x30
 4367 1230 00050000 		.4byte	.LASF169
 4368 1234 00050000 		.4byte	.LASF169
 4369 1238 0B       		.byte	0xb
 4370 1239 28       		.byte	0x28
 4371 123a 30       		.uleb128 0x30
 4372 123b BB090000 		.4byte	.LASF170
 4373 123f BB090000 		.4byte	.LASF170
 4374 1243 0C       		.byte	0xc
 4375 1244 39       		.byte	0x39
 4376 1245 30       		.uleb128 0x30
 4377 1246 38060000 		.4byte	.LASF171
 4378 124a 38060000 		.4byte	.LASF171
 4379 124e 0D       		.byte	0xd
 4380 124f 5A       		.byte	0x5a
 4381 1250 30       		.uleb128 0x30
 4382 1251 3C020000 		.4byte	.LASF172
 4383 1255 3C020000 		.4byte	.LASF172
 4384 1259 0E       		.byte	0xe
 4385 125a 5A       		.byte	0x5a
 4386 125b 30       		.uleb128 0x30
 4387 125c B00A0000 		.4byte	.LASF173
 4388 1260 B00A0000 		.4byte	.LASF173
 4389 1264 0F       		.byte	0xf
 4390 1265 28       		.byte	0x28
 4391 1266 30       		.uleb128 0x30
 4392 1267 B9000000 		.4byte	.LASF174
 4393 126b B9000000 		.4byte	.LASF174
 4394 126f 10       		.byte	0x10
 4395 1270 39       		.byte	0x39
 4396 1271 30       		.uleb128 0x30
 4397 1272 AB030000 		.4byte	.LASF175
 4398 1276 AB030000 		.4byte	.LASF175
 4399 127a 11       		.byte	0x11
 4400 127b 39       		.byte	0x39
 4401 127c 30       		.uleb128 0x30
 4402 127d 87050000 		.4byte	.LASF176
 4403 1281 87050000 		.4byte	.LASF176
 4404 1285 11       		.byte	0x11
 4405 1286 32       		.byte	0x32
 4406 1287 2F       		.uleb128 0x2f
 4407 1288 46050000 		.4byte	.LASF177
 4408 128c 46050000 		.4byte	.LASF177
 4409 1290 08       		.byte	0x8
 4410 1291 3E05     		.2byte	0x53e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 106


 4411 1293 31       		.uleb128 0x31
 4412 1294 C8050000 		.4byte	.LASF212
 4413 1298 C8050000 		.4byte	.LASF212
 4414 129c 2F       		.uleb128 0x2f
 4415 129d 5F080000 		.4byte	.LASF178
 4416 12a1 5F080000 		.4byte	.LASF178
 4417 12a5 12       		.byte	0x12
 4418 12a6 3D03     		.2byte	0x33d
 4419 12a8 2F       		.uleb128 0x2f
 4420 12a9 7F040000 		.4byte	.LASF179
 4421 12ad 7F040000 		.4byte	.LASF179
 4422 12b1 12       		.byte	0x12
 4423 12b2 3F03     		.2byte	0x33f
 4424 12b4 2F       		.uleb128 0x2f
 4425 12b5 38010000 		.4byte	.LASF180
 4426 12b9 38010000 		.4byte	.LASF180
 4427 12bd 12       		.byte	0x12
 4428 12be 4703     		.2byte	0x347
 4429 12c0 30       		.uleb128 0x30
 4430 12c1 8D070000 		.4byte	.LASF181
 4431 12c5 8D070000 		.4byte	.LASF181
 4432 12c9 13       		.byte	0x13
 4433 12ca CD       		.byte	0xcd
 4434 12cb 2F       		.uleb128 0x2f
 4435 12cc E6040000 		.4byte	.LASF182
 4436 12d0 E6040000 		.4byte	.LASF182
 4437 12d4 14       		.byte	0x14
 4438 12d5 5501     		.2byte	0x155
 4439 12d7 30       		.uleb128 0x30
 4440 12d8 CD030000 		.4byte	.LASF183
 4441 12dc CD030000 		.4byte	.LASF183
 4442 12e0 0D       		.byte	0xd
 4443 12e1 5D       		.byte	0x5d
 4444 12e2 2F       		.uleb128 0x2f
 4445 12e3 81030000 		.4byte	.LASF184
 4446 12e7 81030000 		.4byte	.LASF184
 4447 12eb 06       		.byte	0x6
 4448 12ec 8805     		.2byte	0x588
 4449 12ee 2F       		.uleb128 0x2f
 4450 12ef 95030000 		.4byte	.LASF185
 4451 12f3 95030000 		.4byte	.LASF185
 4452 12f7 12       		.byte	0x12
 4453 12f8 4503     		.2byte	0x345
 4454 12fa 2F       		.uleb128 0x2f
 4455 12fb E3030000 		.4byte	.LASF186
 4456 12ff E3030000 		.4byte	.LASF186
 4457 1303 06       		.byte	0x6
 4458 1304 8802     		.2byte	0x288
 4459 1306 30       		.uleb128 0x30
 4460 1307 F0090000 		.4byte	.LASF187
 4461 130b F0090000 		.4byte	.LASF187
 4462 130f 15       		.byte	0x15
 4463 1310 33       		.byte	0x33
 4464 1311 30       		.uleb128 0x30
 4465 1312 B2050000 		.4byte	.LASF188
 4466 1316 B2050000 		.4byte	.LASF188
 4467 131a 16       		.byte	0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 107


 4468 131b 77       		.byte	0x77
 4469 131c 30       		.uleb128 0x30
 4470 131d D4070000 		.4byte	.LASF189
 4471 1321 D4070000 		.4byte	.LASF189
 4472 1325 17       		.byte	0x17
 4473 1326 36       		.byte	0x36
 4474 1327 30       		.uleb128 0x30
 4475 1328 D1010000 		.4byte	.LASF190
 4476 132c D1010000 		.4byte	.LASF190
 4477 1330 18       		.byte	0x18
 4478 1331 36       		.byte	0x36
 4479 1332 30       		.uleb128 0x30
 4480 1333 D3080000 		.4byte	.LASF191
 4481 1337 D3080000 		.4byte	.LASF191
 4482 133b 0E       		.byte	0xe
 4483 133c 5D       		.byte	0x5d
 4484 133d 2F       		.uleb128 0x2f
 4485 133e C3040000 		.4byte	.LASF192
 4486 1342 C3040000 		.4byte	.LASF192
 4487 1346 08       		.byte	0x8
 4488 1347 4101     		.2byte	0x141
 4489 1349 2F       		.uleb128 0x2f
 4490 134a 1D050000 		.4byte	.LASF193
 4491 134e 1D050000 		.4byte	.LASF193
 4492 1352 06       		.byte	0x6
 4493 1353 8405     		.2byte	0x584
 4494 1355 30       		.uleb128 0x30
 4495 1356 D6000000 		.4byte	.LASF194
 4496 135a D6000000 		.4byte	.LASF194
 4497 135e 19       		.byte	0x19
 4498 135f 33       		.byte	0x33
 4499 1360 30       		.uleb128 0x30
 4500 1361 9A040000 		.4byte	.LASF195
 4501 1365 9A040000 		.4byte	.LASF195
 4502 1369 13       		.byte	0x13
 4503 136a EC       		.byte	0xec
 4504 136b 30       		.uleb128 0x30
 4505 136c FC090000 		.4byte	.LASF196
 4506 1370 FC090000 		.4byte	.LASF196
 4507 1374 0F       		.byte	0xf
 4508 1375 18       		.byte	0x18
 4509 1376 30       		.uleb128 0x30
 4510 1377 980A0000 		.4byte	.LASF197
 4511 137b 980A0000 		.4byte	.LASF197
 4512 137f 0B       		.byte	0xb
 4513 1380 18       		.byte	0x18
 4514 1381 30       		.uleb128 0x30
 4515 1382 A8010000 		.4byte	.LASF198
 4516 1386 A8010000 		.4byte	.LASF198
 4517 138a 1A       		.byte	0x1a
 4518 138b 18       		.byte	0x18
 4519 138c 30       		.uleb128 0x30
 4520 138d BE080000 		.4byte	.LASF199
 4521 1391 BE080000 		.4byte	.LASF199
 4522 1395 0F       		.byte	0xf
 4523 1396 20       		.byte	0x20
 4524 1397 30       		.uleb128 0x30
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 108


 4525 1398 24040000 		.4byte	.LASF200
 4526 139c 24040000 		.4byte	.LASF200
 4527 13a0 0B       		.byte	0xb
 4528 13a1 20       		.byte	0x20
 4529 13a2 30       		.uleb128 0x30
 4530 13a3 2F050000 		.4byte	.LASF201
 4531 13a7 2F050000 		.4byte	.LASF201
 4532 13ab 1A       		.byte	0x1a
 4533 13ac 20       		.byte	0x20
 4534 13ad 30       		.uleb128 0x30
 4535 13ae 1D090000 		.4byte	.LASF202
 4536 13b2 1D090000 		.4byte	.LASF202
 4537 13b6 1B       		.byte	0x1b
 4538 13b7 72       		.byte	0x72
 4539 13b8 2F       		.uleb128 0x2f
 4540 13b9 89000000 		.4byte	.LASF203
 4541 13bd 89000000 		.4byte	.LASF203
 4542 13c1 14       		.byte	0x14
 4543 13c2 3201     		.2byte	0x132
 4544 13c4 2F       		.uleb128 0x2f
 4545 13c5 82020000 		.4byte	.LASF204
 4546 13c9 82020000 		.4byte	.LASF204
 4547 13cd 14       		.byte	0x14
 4548 13ce 5001     		.2byte	0x150
 4549 13d0 30       		.uleb128 0x30
 4550 13d1 37090000 		.4byte	.LASF205
 4551 13d5 37090000 		.4byte	.LASF205
 4552 13d9 0D       		.byte	0xd
 4553 13da 4F       		.byte	0x4f
 4554 13db 30       		.uleb128 0x30
 4555 13dc 640A0000 		.4byte	.LASF206
 4556 13e0 640A0000 		.4byte	.LASF206
 4557 13e4 0E       		.byte	0xe
 4558 13e5 4F       		.byte	0x4f
 4559 13e6 2F       		.uleb128 0x2f
 4560 13e7 01090000 		.4byte	.LASF207
 4561 13eb 01090000 		.4byte	.LASF207
 4562 13ef 08       		.byte	0x8
 4563 13f0 8E04     		.2byte	0x48e
 4564 13f2 00       		.byte	0
 4565              		.section	.debug_abbrev,"",%progbits
 4566              	.Ldebug_abbrev0:
 4567 0000 01       		.uleb128 0x1
 4568 0001 11       		.uleb128 0x11
 4569 0002 01       		.byte	0x1
 4570 0003 25       		.uleb128 0x25
 4571 0004 0E       		.uleb128 0xe
 4572 0005 13       		.uleb128 0x13
 4573 0006 0B       		.uleb128 0xb
 4574 0007 03       		.uleb128 0x3
 4575 0008 0E       		.uleb128 0xe
 4576 0009 1B       		.uleb128 0x1b
 4577 000a 0E       		.uleb128 0xe
 4578 000b 55       		.uleb128 0x55
 4579 000c 17       		.uleb128 0x17
 4580 000d 11       		.uleb128 0x11
 4581 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 109


 4582 000f 10       		.uleb128 0x10
 4583 0010 17       		.uleb128 0x17
 4584 0011 00       		.byte	0
 4585 0012 00       		.byte	0
 4586 0013 02       		.uleb128 0x2
 4587 0014 24       		.uleb128 0x24
 4588 0015 00       		.byte	0
 4589 0016 0B       		.uleb128 0xb
 4590 0017 0B       		.uleb128 0xb
 4591 0018 3E       		.uleb128 0x3e
 4592 0019 0B       		.uleb128 0xb
 4593 001a 03       		.uleb128 0x3
 4594 001b 0E       		.uleb128 0xe
 4595 001c 00       		.byte	0
 4596 001d 00       		.byte	0
 4597 001e 03       		.uleb128 0x3
 4598 001f 24       		.uleb128 0x24
 4599 0020 00       		.byte	0
 4600 0021 0B       		.uleb128 0xb
 4601 0022 0B       		.uleb128 0xb
 4602 0023 3E       		.uleb128 0x3e
 4603 0024 0B       		.uleb128 0xb
 4604 0025 03       		.uleb128 0x3
 4605 0026 08       		.uleb128 0x8
 4606 0027 00       		.byte	0
 4607 0028 00       		.byte	0
 4608 0029 04       		.uleb128 0x4
 4609 002a 16       		.uleb128 0x16
 4610 002b 00       		.byte	0
 4611 002c 03       		.uleb128 0x3
 4612 002d 0E       		.uleb128 0xe
 4613 002e 3A       		.uleb128 0x3a
 4614 002f 0B       		.uleb128 0xb
 4615 0030 3B       		.uleb128 0x3b
 4616 0031 0B       		.uleb128 0xb
 4617 0032 49       		.uleb128 0x49
 4618 0033 13       		.uleb128 0x13
 4619 0034 00       		.byte	0
 4620 0035 00       		.byte	0
 4621 0036 05       		.uleb128 0x5
 4622 0037 16       		.uleb128 0x16
 4623 0038 00       		.byte	0
 4624 0039 03       		.uleb128 0x3
 4625 003a 0E       		.uleb128 0xe
 4626 003b 3A       		.uleb128 0x3a
 4627 003c 0B       		.uleb128 0xb
 4628 003d 3B       		.uleb128 0x3b
 4629 003e 05       		.uleb128 0x5
 4630 003f 49       		.uleb128 0x49
 4631 0040 13       		.uleb128 0x13
 4632 0041 00       		.byte	0
 4633 0042 00       		.byte	0
 4634 0043 06       		.uleb128 0x6
 4635 0044 35       		.uleb128 0x35
 4636 0045 00       		.byte	0
 4637 0046 49       		.uleb128 0x49
 4638 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 110


 4639 0048 00       		.byte	0
 4640 0049 00       		.byte	0
 4641 004a 07       		.uleb128 0x7
 4642 004b 0F       		.uleb128 0xf
 4643 004c 00       		.byte	0
 4644 004d 0B       		.uleb128 0xb
 4645 004e 0B       		.uleb128 0xb
 4646 004f 49       		.uleb128 0x49
 4647 0050 13       		.uleb128 0x13
 4648 0051 00       		.byte	0
 4649 0052 00       		.byte	0
 4650 0053 08       		.uleb128 0x8
 4651 0054 15       		.uleb128 0x15
 4652 0055 00       		.byte	0
 4653 0056 27       		.uleb128 0x27
 4654 0057 19       		.uleb128 0x19
 4655 0058 00       		.byte	0
 4656 0059 00       		.byte	0
 4657 005a 09       		.uleb128 0x9
 4658 005b 0F       		.uleb128 0xf
 4659 005c 00       		.byte	0
 4660 005d 0B       		.uleb128 0xb
 4661 005e 0B       		.uleb128 0xb
 4662 005f 00       		.byte	0
 4663 0060 00       		.byte	0
 4664 0061 0A       		.uleb128 0xa
 4665 0062 04       		.uleb128 0x4
 4666 0063 01       		.byte	0x1
 4667 0064 03       		.uleb128 0x3
 4668 0065 0E       		.uleb128 0xe
 4669 0066 0B       		.uleb128 0xb
 4670 0067 0B       		.uleb128 0xb
 4671 0068 49       		.uleb128 0x49
 4672 0069 13       		.uleb128 0x13
 4673 006a 3A       		.uleb128 0x3a
 4674 006b 0B       		.uleb128 0xb
 4675 006c 3B       		.uleb128 0x3b
 4676 006d 0B       		.uleb128 0xb
 4677 006e 01       		.uleb128 0x1
 4678 006f 13       		.uleb128 0x13
 4679 0070 00       		.byte	0
 4680 0071 00       		.byte	0
 4681 0072 0B       		.uleb128 0xb
 4682 0073 28       		.uleb128 0x28
 4683 0074 00       		.byte	0
 4684 0075 03       		.uleb128 0x3
 4685 0076 0E       		.uleb128 0xe
 4686 0077 1C       		.uleb128 0x1c
 4687 0078 0D       		.uleb128 0xd
 4688 0079 00       		.byte	0
 4689 007a 00       		.byte	0
 4690 007b 0C       		.uleb128 0xc
 4691 007c 04       		.uleb128 0x4
 4692 007d 01       		.byte	0x1
 4693 007e 0B       		.uleb128 0xb
 4694 007f 0B       		.uleb128 0xb
 4695 0080 49       		.uleb128 0x49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 111


 4696 0081 13       		.uleb128 0x13
 4697 0082 3A       		.uleb128 0x3a
 4698 0083 0B       		.uleb128 0xb
 4699 0084 3B       		.uleb128 0x3b
 4700 0085 0B       		.uleb128 0xb
 4701 0086 01       		.uleb128 0x1
 4702 0087 13       		.uleb128 0x13
 4703 0088 00       		.byte	0
 4704 0089 00       		.byte	0
 4705 008a 0D       		.uleb128 0xd
 4706 008b 28       		.uleb128 0x28
 4707 008c 00       		.byte	0
 4708 008d 03       		.uleb128 0x3
 4709 008e 0E       		.uleb128 0xe
 4710 008f 1C       		.uleb128 0x1c
 4711 0090 0B       		.uleb128 0xb
 4712 0091 00       		.byte	0
 4713 0092 00       		.byte	0
 4714 0093 0E       		.uleb128 0xe
 4715 0094 13       		.uleb128 0x13
 4716 0095 01       		.byte	0x1
 4717 0096 0B       		.uleb128 0xb
 4718 0097 0B       		.uleb128 0xb
 4719 0098 3A       		.uleb128 0x3a
 4720 0099 0B       		.uleb128 0xb
 4721 009a 3B       		.uleb128 0x3b
 4722 009b 0B       		.uleb128 0xb
 4723 009c 01       		.uleb128 0x1
 4724 009d 13       		.uleb128 0x13
 4725 009e 00       		.byte	0
 4726 009f 00       		.byte	0
 4727 00a0 0F       		.uleb128 0xf
 4728 00a1 0D       		.uleb128 0xd
 4729 00a2 00       		.byte	0
 4730 00a3 03       		.uleb128 0x3
 4731 00a4 0E       		.uleb128 0xe
 4732 00a5 3A       		.uleb128 0x3a
 4733 00a6 0B       		.uleb128 0xb
 4734 00a7 3B       		.uleb128 0x3b
 4735 00a8 0B       		.uleb128 0xb
 4736 00a9 49       		.uleb128 0x49
 4737 00aa 13       		.uleb128 0x13
 4738 00ab 38       		.uleb128 0x38
 4739 00ac 0B       		.uleb128 0xb
 4740 00ad 00       		.byte	0
 4741 00ae 00       		.byte	0
 4742 00af 10       		.uleb128 0x10
 4743 00b0 0D       		.uleb128 0xd
 4744 00b1 00       		.byte	0
 4745 00b2 03       		.uleb128 0x3
 4746 00b3 08       		.uleb128 0x8
 4747 00b4 3A       		.uleb128 0x3a
 4748 00b5 0B       		.uleb128 0xb
 4749 00b6 3B       		.uleb128 0x3b
 4750 00b7 0B       		.uleb128 0xb
 4751 00b8 49       		.uleb128 0x49
 4752 00b9 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 112


 4753 00ba 38       		.uleb128 0x38
 4754 00bb 0B       		.uleb128 0xb
 4755 00bc 00       		.byte	0
 4756 00bd 00       		.byte	0
 4757 00be 11       		.uleb128 0x11
 4758 00bf 17       		.uleb128 0x17
 4759 00c0 01       		.byte	0x1
 4760 00c1 0B       		.uleb128 0xb
 4761 00c2 0B       		.uleb128 0xb
 4762 00c3 3A       		.uleb128 0x3a
 4763 00c4 0B       		.uleb128 0xb
 4764 00c5 3B       		.uleb128 0x3b
 4765 00c6 0B       		.uleb128 0xb
 4766 00c7 01       		.uleb128 0x1
 4767 00c8 13       		.uleb128 0x13
 4768 00c9 00       		.byte	0
 4769 00ca 00       		.byte	0
 4770 00cb 12       		.uleb128 0x12
 4771 00cc 0D       		.uleb128 0xd
 4772 00cd 00       		.byte	0
 4773 00ce 03       		.uleb128 0x3
 4774 00cf 08       		.uleb128 0x8
 4775 00d0 3A       		.uleb128 0x3a
 4776 00d1 0B       		.uleb128 0xb
 4777 00d2 3B       		.uleb128 0x3b
 4778 00d3 0B       		.uleb128 0xb
 4779 00d4 49       		.uleb128 0x49
 4780 00d5 13       		.uleb128 0x13
 4781 00d6 00       		.byte	0
 4782 00d7 00       		.byte	0
 4783 00d8 13       		.uleb128 0x13
 4784 00d9 0D       		.uleb128 0xd
 4785 00da 00       		.byte	0
 4786 00db 03       		.uleb128 0x3
 4787 00dc 0E       		.uleb128 0xe
 4788 00dd 3A       		.uleb128 0x3a
 4789 00de 0B       		.uleb128 0xb
 4790 00df 3B       		.uleb128 0x3b
 4791 00e0 0B       		.uleb128 0xb
 4792 00e1 49       		.uleb128 0x49
 4793 00e2 13       		.uleb128 0x13
 4794 00e3 00       		.byte	0
 4795 00e4 00       		.byte	0
 4796 00e5 14       		.uleb128 0x14
 4797 00e6 01       		.uleb128 0x1
 4798 00e7 01       		.byte	0x1
 4799 00e8 49       		.uleb128 0x49
 4800 00e9 13       		.uleb128 0x13
 4801 00ea 01       		.uleb128 0x1
 4802 00eb 13       		.uleb128 0x13
 4803 00ec 00       		.byte	0
 4804 00ed 00       		.byte	0
 4805 00ee 15       		.uleb128 0x15
 4806 00ef 21       		.uleb128 0x21
 4807 00f0 00       		.byte	0
 4808 00f1 49       		.uleb128 0x49
 4809 00f2 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 113


 4810 00f3 2F       		.uleb128 0x2f
 4811 00f4 0B       		.uleb128 0xb
 4812 00f5 00       		.byte	0
 4813 00f6 00       		.byte	0
 4814 00f7 16       		.uleb128 0x16
 4815 00f8 0D       		.uleb128 0xd
 4816 00f9 00       		.byte	0
 4817 00fa 03       		.uleb128 0x3
 4818 00fb 0E       		.uleb128 0xe
 4819 00fc 3A       		.uleb128 0x3a
 4820 00fd 0B       		.uleb128 0xb
 4821 00fe 3B       		.uleb128 0x3b
 4822 00ff 05       		.uleb128 0x5
 4823 0100 49       		.uleb128 0x49
 4824 0101 13       		.uleb128 0x13
 4825 0102 38       		.uleb128 0x38
 4826 0103 0B       		.uleb128 0xb
 4827 0104 00       		.byte	0
 4828 0105 00       		.byte	0
 4829 0106 17       		.uleb128 0x17
 4830 0107 0D       		.uleb128 0xd
 4831 0108 00       		.byte	0
 4832 0109 03       		.uleb128 0x3
 4833 010a 08       		.uleb128 0x8
 4834 010b 3A       		.uleb128 0x3a
 4835 010c 0B       		.uleb128 0xb
 4836 010d 3B       		.uleb128 0x3b
 4837 010e 05       		.uleb128 0x5
 4838 010f 49       		.uleb128 0x49
 4839 0110 13       		.uleb128 0x13
 4840 0111 38       		.uleb128 0x38
 4841 0112 0B       		.uleb128 0xb
 4842 0113 00       		.byte	0
 4843 0114 00       		.byte	0
 4844 0115 18       		.uleb128 0x18
 4845 0116 17       		.uleb128 0x17
 4846 0117 01       		.byte	0x1
 4847 0118 0B       		.uleb128 0xb
 4848 0119 0B       		.uleb128 0xb
 4849 011a 3A       		.uleb128 0x3a
 4850 011b 0B       		.uleb128 0xb
 4851 011c 3B       		.uleb128 0x3b
 4852 011d 05       		.uleb128 0x5
 4853 011e 01       		.uleb128 0x1
 4854 011f 13       		.uleb128 0x13
 4855 0120 00       		.byte	0
 4856 0121 00       		.byte	0
 4857 0122 19       		.uleb128 0x19
 4858 0123 0D       		.uleb128 0xd
 4859 0124 00       		.byte	0
 4860 0125 03       		.uleb128 0x3
 4861 0126 08       		.uleb128 0x8
 4862 0127 3A       		.uleb128 0x3a
 4863 0128 0B       		.uleb128 0xb
 4864 0129 3B       		.uleb128 0x3b
 4865 012a 05       		.uleb128 0x5
 4866 012b 49       		.uleb128 0x49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 114


 4867 012c 13       		.uleb128 0x13
 4868 012d 00       		.byte	0
 4869 012e 00       		.byte	0
 4870 012f 1A       		.uleb128 0x1a
 4871 0130 04       		.uleb128 0x4
 4872 0131 01       		.byte	0x1
 4873 0132 0B       		.uleb128 0xb
 4874 0133 0B       		.uleb128 0xb
 4875 0134 49       		.uleb128 0x49
 4876 0135 13       		.uleb128 0x13
 4877 0136 3A       		.uleb128 0x3a
 4878 0137 0B       		.uleb128 0xb
 4879 0138 3B       		.uleb128 0x3b
 4880 0139 05       		.uleb128 0x5
 4881 013a 01       		.uleb128 0x1
 4882 013b 13       		.uleb128 0x13
 4883 013c 00       		.byte	0
 4884 013d 00       		.byte	0
 4885 013e 1B       		.uleb128 0x1b
 4886 013f 2E       		.uleb128 0x2e
 4887 0140 01       		.byte	0x1
 4888 0141 3F       		.uleb128 0x3f
 4889 0142 19       		.uleb128 0x19
 4890 0143 03       		.uleb128 0x3
 4891 0144 0E       		.uleb128 0xe
 4892 0145 3A       		.uleb128 0x3a
 4893 0146 0B       		.uleb128 0xb
 4894 0147 3B       		.uleb128 0x3b
 4895 0148 05       		.uleb128 0x5
 4896 0149 27       		.uleb128 0x27
 4897 014a 19       		.uleb128 0x19
 4898 014b 8701     		.uleb128 0x87
 4899 014d 19       		.uleb128 0x19
 4900 014e 11       		.uleb128 0x11
 4901 014f 01       		.uleb128 0x1
 4902 0150 12       		.uleb128 0x12
 4903 0151 06       		.uleb128 0x6
 4904 0152 40       		.uleb128 0x40
 4905 0153 18       		.uleb128 0x18
 4906 0154 9642     		.uleb128 0x2116
 4907 0156 19       		.uleb128 0x19
 4908 0157 01       		.uleb128 0x1
 4909 0158 13       		.uleb128 0x13
 4910 0159 00       		.byte	0
 4911 015a 00       		.byte	0
 4912 015b 1C       		.uleb128 0x1c
 4913 015c 05       		.uleb128 0x5
 4914 015d 00       		.byte	0
 4915 015e 03       		.uleb128 0x3
 4916 015f 08       		.uleb128 0x8
 4917 0160 3A       		.uleb128 0x3a
 4918 0161 0B       		.uleb128 0xb
 4919 0162 3B       		.uleb128 0x3b
 4920 0163 05       		.uleb128 0x5
 4921 0164 49       		.uleb128 0x49
 4922 0165 13       		.uleb128 0x13
 4923 0166 02       		.uleb128 0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 115


 4924 0167 17       		.uleb128 0x17
 4925 0168 00       		.byte	0
 4926 0169 00       		.byte	0
 4927 016a 1D       		.uleb128 0x1d
 4928 016b 34       		.uleb128 0x34
 4929 016c 00       		.byte	0
 4930 016d 03       		.uleb128 0x3
 4931 016e 0E       		.uleb128 0xe
 4932 016f 3A       		.uleb128 0x3a
 4933 0170 0B       		.uleb128 0xb
 4934 0171 3B       		.uleb128 0x3b
 4935 0172 05       		.uleb128 0x5
 4936 0173 49       		.uleb128 0x49
 4937 0174 13       		.uleb128 0x13
 4938 0175 02       		.uleb128 0x2
 4939 0176 17       		.uleb128 0x17
 4940 0177 00       		.byte	0
 4941 0178 00       		.byte	0
 4942 0179 1E       		.uleb128 0x1e
 4943 017a 898201   		.uleb128 0x4109
 4944 017d 01       		.byte	0x1
 4945 017e 11       		.uleb128 0x11
 4946 017f 01       		.uleb128 0x1
 4947 0180 31       		.uleb128 0x31
 4948 0181 13       		.uleb128 0x13
 4949 0182 01       		.uleb128 0x1
 4950 0183 13       		.uleb128 0x13
 4951 0184 00       		.byte	0
 4952 0185 00       		.byte	0
 4953 0186 1F       		.uleb128 0x1f
 4954 0187 8A8201   		.uleb128 0x410a
 4955 018a 00       		.byte	0
 4956 018b 02       		.uleb128 0x2
 4957 018c 18       		.uleb128 0x18
 4958 018d 9142     		.uleb128 0x2111
 4959 018f 18       		.uleb128 0x18
 4960 0190 00       		.byte	0
 4961 0191 00       		.byte	0
 4962 0192 20       		.uleb128 0x20
 4963 0193 898201   		.uleb128 0x4109
 4964 0196 00       		.byte	0
 4965 0197 11       		.uleb128 0x11
 4966 0198 01       		.uleb128 0x1
 4967 0199 31       		.uleb128 0x31
 4968 019a 13       		.uleb128 0x13
 4969 019b 00       		.byte	0
 4970 019c 00       		.byte	0
 4971 019d 21       		.uleb128 0x21
 4972 019e 898201   		.uleb128 0x4109
 4973 01a1 01       		.byte	0x1
 4974 01a2 11       		.uleb128 0x11
 4975 01a3 01       		.uleb128 0x1
 4976 01a4 31       		.uleb128 0x31
 4977 01a5 13       		.uleb128 0x13
 4978 01a6 00       		.byte	0
 4979 01a7 00       		.byte	0
 4980 01a8 22       		.uleb128 0x22
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 116


 4981 01a9 2E       		.uleb128 0x2e
 4982 01aa 01       		.byte	0x1
 4983 01ab 3F       		.uleb128 0x3f
 4984 01ac 19       		.uleb128 0x19
 4985 01ad 03       		.uleb128 0x3
 4986 01ae 0E       		.uleb128 0xe
 4987 01af 3A       		.uleb128 0x3a
 4988 01b0 0B       		.uleb128 0xb
 4989 01b1 3B       		.uleb128 0x3b
 4990 01b2 05       		.uleb128 0x5
 4991 01b3 27       		.uleb128 0x27
 4992 01b4 19       		.uleb128 0x19
 4993 01b5 11       		.uleb128 0x11
 4994 01b6 01       		.uleb128 0x1
 4995 01b7 12       		.uleb128 0x12
 4996 01b8 06       		.uleb128 0x6
 4997 01b9 40       		.uleb128 0x40
 4998 01ba 18       		.uleb128 0x18
 4999 01bb 9742     		.uleb128 0x2117
 5000 01bd 19       		.uleb128 0x19
 5001 01be 01       		.uleb128 0x1
 5002 01bf 13       		.uleb128 0x13
 5003 01c0 00       		.byte	0
 5004 01c1 00       		.byte	0
 5005 01c2 23       		.uleb128 0x23
 5006 01c3 34       		.uleb128 0x34
 5007 01c4 00       		.byte	0
 5008 01c5 03       		.uleb128 0x3
 5009 01c6 08       		.uleb128 0x8
 5010 01c7 3A       		.uleb128 0x3a
 5011 01c8 0B       		.uleb128 0xb
 5012 01c9 3B       		.uleb128 0x3b
 5013 01ca 05       		.uleb128 0x5
 5014 01cb 49       		.uleb128 0x49
 5015 01cc 13       		.uleb128 0x13
 5016 01cd 02       		.uleb128 0x2
 5017 01ce 17       		.uleb128 0x17
 5018 01cf 00       		.byte	0
 5019 01d0 00       		.byte	0
 5020 01d1 24       		.uleb128 0x24
 5021 01d2 05       		.uleb128 0x5
 5022 01d3 00       		.byte	0
 5023 01d4 03       		.uleb128 0x3
 5024 01d5 0E       		.uleb128 0xe
 5025 01d6 3A       		.uleb128 0x3a
 5026 01d7 0B       		.uleb128 0xb
 5027 01d8 3B       		.uleb128 0x3b
 5028 01d9 05       		.uleb128 0x5
 5029 01da 49       		.uleb128 0x49
 5030 01db 13       		.uleb128 0x13
 5031 01dc 02       		.uleb128 0x2
 5032 01dd 17       		.uleb128 0x17
 5033 01de 00       		.byte	0
 5034 01df 00       		.byte	0
 5035 01e0 25       		.uleb128 0x25
 5036 01e1 05       		.uleb128 0x5
 5037 01e2 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 117


 5038 01e3 03       		.uleb128 0x3
 5039 01e4 0E       		.uleb128 0xe
 5040 01e5 3A       		.uleb128 0x3a
 5041 01e6 0B       		.uleb128 0xb
 5042 01e7 3B       		.uleb128 0x3b
 5043 01e8 05       		.uleb128 0x5
 5044 01e9 49       		.uleb128 0x49
 5045 01ea 13       		.uleb128 0x13
 5046 01eb 02       		.uleb128 0x2
 5047 01ec 18       		.uleb128 0x18
 5048 01ed 00       		.byte	0
 5049 01ee 00       		.byte	0
 5050 01ef 26       		.uleb128 0x26
 5051 01f0 2E       		.uleb128 0x2e
 5052 01f1 01       		.byte	0x1
 5053 01f2 3F       		.uleb128 0x3f
 5054 01f3 19       		.uleb128 0x19
 5055 01f4 03       		.uleb128 0x3
 5056 01f5 0E       		.uleb128 0xe
 5057 01f6 3A       		.uleb128 0x3a
 5058 01f7 0B       		.uleb128 0xb
 5059 01f8 3B       		.uleb128 0x3b
 5060 01f9 05       		.uleb128 0x5
 5061 01fa 27       		.uleb128 0x27
 5062 01fb 19       		.uleb128 0x19
 5063 01fc 11       		.uleb128 0x11
 5064 01fd 01       		.uleb128 0x1
 5065 01fe 12       		.uleb128 0x12
 5066 01ff 06       		.uleb128 0x6
 5067 0200 40       		.uleb128 0x40
 5068 0201 18       		.uleb128 0x18
 5069 0202 9642     		.uleb128 0x2116
 5070 0204 19       		.uleb128 0x19
 5071 0205 01       		.uleb128 0x1
 5072 0206 13       		.uleb128 0x13
 5073 0207 00       		.byte	0
 5074 0208 00       		.byte	0
 5075 0209 27       		.uleb128 0x27
 5076 020a 2E       		.uleb128 0x2e
 5077 020b 01       		.byte	0x1
 5078 020c 3F       		.uleb128 0x3f
 5079 020d 19       		.uleb128 0x19
 5080 020e 03       		.uleb128 0x3
 5081 020f 0E       		.uleb128 0xe
 5082 0210 3A       		.uleb128 0x3a
 5083 0211 0B       		.uleb128 0xb
 5084 0212 3B       		.uleb128 0x3b
 5085 0213 05       		.uleb128 0x5
 5086 0214 27       		.uleb128 0x27
 5087 0215 19       		.uleb128 0x19
 5088 0216 49       		.uleb128 0x49
 5089 0217 13       		.uleb128 0x13
 5090 0218 11       		.uleb128 0x11
 5091 0219 01       		.uleb128 0x1
 5092 021a 12       		.uleb128 0x12
 5093 021b 06       		.uleb128 0x6
 5094 021c 40       		.uleb128 0x40
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 118


 5095 021d 18       		.uleb128 0x18
 5096 021e 9742     		.uleb128 0x2117
 5097 0220 19       		.uleb128 0x19
 5098 0221 01       		.uleb128 0x1
 5099 0222 13       		.uleb128 0x13
 5100 0223 00       		.byte	0
 5101 0224 00       		.byte	0
 5102 0225 28       		.uleb128 0x28
 5103 0226 34       		.uleb128 0x34
 5104 0227 00       		.byte	0
 5105 0228 03       		.uleb128 0x3
 5106 0229 0E       		.uleb128 0xe
 5107 022a 3A       		.uleb128 0x3a
 5108 022b 0B       		.uleb128 0xb
 5109 022c 3B       		.uleb128 0x3b
 5110 022d 05       		.uleb128 0x5
 5111 022e 49       		.uleb128 0x49
 5112 022f 13       		.uleb128 0x13
 5113 0230 02       		.uleb128 0x2
 5114 0231 18       		.uleb128 0x18
 5115 0232 00       		.byte	0
 5116 0233 00       		.byte	0
 5117 0234 29       		.uleb128 0x29
 5118 0235 0B       		.uleb128 0xb
 5119 0236 01       		.byte	0x1
 5120 0237 11       		.uleb128 0x11
 5121 0238 01       		.uleb128 0x1
 5122 0239 12       		.uleb128 0x12
 5123 023a 06       		.uleb128 0x6
 5124 023b 00       		.byte	0
 5125 023c 00       		.byte	0
 5126 023d 2A       		.uleb128 0x2a
 5127 023e 2E       		.uleb128 0x2e
 5128 023f 01       		.byte	0x1
 5129 0240 3F       		.uleb128 0x3f
 5130 0241 19       		.uleb128 0x19
 5131 0242 03       		.uleb128 0x3
 5132 0243 0E       		.uleb128 0xe
 5133 0244 3A       		.uleb128 0x3a
 5134 0245 0B       		.uleb128 0xb
 5135 0246 3B       		.uleb128 0x3b
 5136 0247 05       		.uleb128 0x5
 5137 0248 27       		.uleb128 0x27
 5138 0249 19       		.uleb128 0x19
 5139 024a 49       		.uleb128 0x49
 5140 024b 13       		.uleb128 0x13
 5141 024c 11       		.uleb128 0x11
 5142 024d 01       		.uleb128 0x1
 5143 024e 12       		.uleb128 0x12
 5144 024f 06       		.uleb128 0x6
 5145 0250 40       		.uleb128 0x40
 5146 0251 18       		.uleb128 0x18
 5147 0252 9642     		.uleb128 0x2116
 5148 0254 19       		.uleb128 0x19
 5149 0255 01       		.uleb128 0x1
 5150 0256 13       		.uleb128 0x13
 5151 0257 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 119


 5152 0258 00       		.byte	0
 5153 0259 2B       		.uleb128 0x2b
 5154 025a 34       		.uleb128 0x34
 5155 025b 00       		.byte	0
 5156 025c 03       		.uleb128 0x3
 5157 025d 0E       		.uleb128 0xe
 5158 025e 3A       		.uleb128 0x3a
 5159 025f 0B       		.uleb128 0xb
 5160 0260 3B       		.uleb128 0x3b
 5161 0261 05       		.uleb128 0x5
 5162 0262 49       		.uleb128 0x49
 5163 0263 13       		.uleb128 0x13
 5164 0264 1C       		.uleb128 0x1c
 5165 0265 0B       		.uleb128 0xb
 5166 0266 00       		.byte	0
 5167 0267 00       		.byte	0
 5168 0268 2C       		.uleb128 0x2c
 5169 0269 34       		.uleb128 0x34
 5170 026a 00       		.byte	0
 5171 026b 03       		.uleb128 0x3
 5172 026c 0E       		.uleb128 0xe
 5173 026d 3A       		.uleb128 0x3a
 5174 026e 0B       		.uleb128 0xb
 5175 026f 3B       		.uleb128 0x3b
 5176 0270 0B       		.uleb128 0xb
 5177 0271 49       		.uleb128 0x49
 5178 0272 13       		.uleb128 0x13
 5179 0273 3F       		.uleb128 0x3f
 5180 0274 19       		.uleb128 0x19
 5181 0275 02       		.uleb128 0x2
 5182 0276 18       		.uleb128 0x18
 5183 0277 00       		.byte	0
 5184 0278 00       		.byte	0
 5185 0279 2D       		.uleb128 0x2d
 5186 027a 34       		.uleb128 0x34
 5187 027b 00       		.byte	0
 5188 027c 03       		.uleb128 0x3
 5189 027d 08       		.uleb128 0x8
 5190 027e 3A       		.uleb128 0x3a
 5191 027f 0B       		.uleb128 0xb
 5192 0280 3B       		.uleb128 0x3b
 5193 0281 0B       		.uleb128 0xb
 5194 0282 49       		.uleb128 0x49
 5195 0283 13       		.uleb128 0x13
 5196 0284 3F       		.uleb128 0x3f
 5197 0285 19       		.uleb128 0x19
 5198 0286 02       		.uleb128 0x2
 5199 0287 18       		.uleb128 0x18
 5200 0288 00       		.byte	0
 5201 0289 00       		.byte	0
 5202 028a 2E       		.uleb128 0x2e
 5203 028b 34       		.uleb128 0x34
 5204 028c 00       		.byte	0
 5205 028d 03       		.uleb128 0x3
 5206 028e 0E       		.uleb128 0xe
 5207 028f 3A       		.uleb128 0x3a
 5208 0290 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 120


 5209 0291 3B       		.uleb128 0x3b
 5210 0292 05       		.uleb128 0x5
 5211 0293 49       		.uleb128 0x49
 5212 0294 13       		.uleb128 0x13
 5213 0295 3F       		.uleb128 0x3f
 5214 0296 19       		.uleb128 0x19
 5215 0297 02       		.uleb128 0x2
 5216 0298 18       		.uleb128 0x18
 5217 0299 00       		.byte	0
 5218 029a 00       		.byte	0
 5219 029b 2F       		.uleb128 0x2f
 5220 029c 2E       		.uleb128 0x2e
 5221 029d 00       		.byte	0
 5222 029e 3F       		.uleb128 0x3f
 5223 029f 19       		.uleb128 0x19
 5224 02a0 3C       		.uleb128 0x3c
 5225 02a1 19       		.uleb128 0x19
 5226 02a2 6E       		.uleb128 0x6e
 5227 02a3 0E       		.uleb128 0xe
 5228 02a4 03       		.uleb128 0x3
 5229 02a5 0E       		.uleb128 0xe
 5230 02a6 3A       		.uleb128 0x3a
 5231 02a7 0B       		.uleb128 0xb
 5232 02a8 3B       		.uleb128 0x3b
 5233 02a9 05       		.uleb128 0x5
 5234 02aa 00       		.byte	0
 5235 02ab 00       		.byte	0
 5236 02ac 30       		.uleb128 0x30
 5237 02ad 2E       		.uleb128 0x2e
 5238 02ae 00       		.byte	0
 5239 02af 3F       		.uleb128 0x3f
 5240 02b0 19       		.uleb128 0x19
 5241 02b1 3C       		.uleb128 0x3c
 5242 02b2 19       		.uleb128 0x19
 5243 02b3 6E       		.uleb128 0x6e
 5244 02b4 0E       		.uleb128 0xe
 5245 02b5 03       		.uleb128 0x3
 5246 02b6 0E       		.uleb128 0xe
 5247 02b7 3A       		.uleb128 0x3a
 5248 02b8 0B       		.uleb128 0xb
 5249 02b9 3B       		.uleb128 0x3b
 5250 02ba 0B       		.uleb128 0xb
 5251 02bb 00       		.byte	0
 5252 02bc 00       		.byte	0
 5253 02bd 31       		.uleb128 0x31
 5254 02be 2E       		.uleb128 0x2e
 5255 02bf 00       		.byte	0
 5256 02c0 3F       		.uleb128 0x3f
 5257 02c1 19       		.uleb128 0x19
 5258 02c2 3C       		.uleb128 0x3c
 5259 02c3 19       		.uleb128 0x19
 5260 02c4 6E       		.uleb128 0x6e
 5261 02c5 0E       		.uleb128 0xe
 5262 02c6 03       		.uleb128 0x3
 5263 02c7 0E       		.uleb128 0xe
 5264 02c8 00       		.byte	0
 5265 02c9 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 121


 5266 02ca 00       		.byte	0
 5267              		.section	.debug_loc,"",%progbits
 5268              	.Ldebug_loc0:
 5269              	.LLST0:
 5270 0000 00000000 		.4byte	.LVL0
 5271 0004 04000000 		.4byte	.LVL1
 5272 0008 0100     		.2byte	0x1
 5273 000a 50       		.byte	0x50
 5274 000b 04000000 		.4byte	.LVL1
 5275 000f 44000000 		.4byte	.LFE35
 5276 0013 0400     		.2byte	0x4
 5277 0015 F3       		.byte	0xf3
 5278 0016 01       		.uleb128 0x1
 5279 0017 50       		.byte	0x50
 5280 0018 9F       		.byte	0x9f
 5281 0019 00000000 		.4byte	0
 5282 001d 00000000 		.4byte	0
 5283              	.LLST1:
 5284 0021 1C000000 		.4byte	.LVL5
 5285 0025 1F000000 		.4byte	.LVL6-1
 5286 0029 0100     		.2byte	0x1
 5287 002b 50       		.byte	0x50
 5288 002c 00000000 		.4byte	0
 5289 0030 00000000 		.4byte	0
 5290              	.LLST2:
 5291 0034 28000000 		.4byte	.LVL19
 5292 0038 2C000000 		.4byte	.LVL20
 5293 003c 0200     		.2byte	0x2
 5294 003e 30       		.byte	0x30
 5295 003f 9F       		.byte	0x9f
 5296 0040 2C000000 		.4byte	.LVL20
 5297 0044 48000000 		.4byte	.LVL25
 5298 0048 0100     		.2byte	0x1
 5299 004a 54       		.byte	0x54
 5300 004b 00000000 		.4byte	0
 5301 004f 00000000 		.4byte	0
 5302              	.LLST3:
 5303 0053 00000000 		.4byte	.LVL29
 5304 0057 12000000 		.4byte	.LVL30
 5305 005b 0100     		.2byte	0x1
 5306 005d 50       		.byte	0x50
 5307 005e 12000000 		.4byte	.LVL30
 5308 0062 1C000000 		.4byte	.LFE33
 5309 0066 0400     		.2byte	0x4
 5310 0068 F3       		.byte	0xf3
 5311 0069 01       		.uleb128 0x1
 5312 006a 50       		.byte	0x50
 5313 006b 9F       		.byte	0x9f
 5314 006c 00000000 		.4byte	0
 5315 0070 00000000 		.4byte	0
 5316              	.LLST4:
 5317 0074 00000000 		.4byte	.LVL32
 5318 0078 0D000000 		.4byte	.LVL34-1
 5319 007c 0100     		.2byte	0x1
 5320 007e 50       		.byte	0x50
 5321 007f 0D000000 		.4byte	.LVL34-1
 5322 0083 36000000 		.4byte	.LVL41
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 122


 5323 0087 0100     		.2byte	0x1
 5324 0089 55       		.byte	0x55
 5325 008a 36000000 		.4byte	.LVL41
 5326 008e 40000000 		.4byte	.LFE37
 5327 0092 0600     		.2byte	0x6
 5328 0094 F3       		.byte	0xf3
 5329 0095 03       		.uleb128 0x3
 5330 0096 F5       		.byte	0xf5
 5331 0097 00       		.uleb128 0
 5332 0098 25       		.uleb128 0x25
 5333 0099 9F       		.byte	0x9f
 5334 009a 00000000 		.4byte	0
 5335 009e 00000000 		.4byte	0
 5336              	.LLST5:
 5337 00a2 04000000 		.4byte	.LVL33
 5338 00a6 0D000000 		.4byte	.LVL34-1
 5339 00aa 0100     		.2byte	0x1
 5340 00ac 50       		.byte	0x50
 5341 00ad 0D000000 		.4byte	.LVL34-1
 5342 00b1 24000000 		.4byte	.LVL36
 5343 00b5 0100     		.2byte	0x1
 5344 00b7 55       		.byte	0x55
 5345 00b8 24000000 		.4byte	.LVL36
 5346 00bc 36000000 		.4byte	.LVL40
 5347 00c0 0100     		.2byte	0x1
 5348 00c2 54       		.byte	0x54
 5349 00c3 00000000 		.4byte	0
 5350 00c7 00000000 		.4byte	0
 5351              	.LLST6:
 5352 00cb 00000000 		.4byte	.LVL43
 5353 00cf 04000000 		.4byte	.LVL44
 5354 00d3 0100     		.2byte	0x1
 5355 00d5 50       		.byte	0x50
 5356 00d6 04000000 		.4byte	.LVL44
 5357 00da 14030000 		.4byte	.LFE36
 5358 00de 0400     		.2byte	0x4
 5359 00e0 F3       		.byte	0xf3
 5360 00e1 01       		.uleb128 0x1
 5361 00e2 50       		.byte	0x50
 5362 00e3 9F       		.byte	0x9f
 5363 00e4 00000000 		.4byte	0
 5364 00e8 00000000 		.4byte	0
 5365              	.LLST7:
 5366 00ec 36000000 		.4byte	.LVL48
 5367 00f0 EE000000 		.4byte	.LVL63
 5368 00f4 0100     		.2byte	0x1
 5369 00f6 54       		.byte	0x54
 5370 00f7 44010000 		.4byte	.LVL72
 5371 00fb 74010000 		.4byte	.LVL76
 5372 00ff 0100     		.2byte	0x1
 5373 0101 54       		.byte	0x54
 5374 0102 AA010000 		.4byte	.LVL78
 5375 0106 AC010000 		.4byte	.LVL79
 5376 010a 0100     		.2byte	0x1
 5377 010c 54       		.byte	0x54
 5378 010d AC010000 		.4byte	.LVL79
 5379 0111 C7010000 		.4byte	.LVL82-1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 123


 5380 0115 0200     		.2byte	0x2
 5381 0117 74       		.byte	0x74
 5382 0118 02       		.sleb128 2
 5383 0119 00000000 		.4byte	0
 5384 011d 00000000 		.4byte	0
 5385              	.LLST8:
 5386 0121 34000000 		.4byte	.LVL47
 5387 0125 E2000000 		.4byte	.LVL60
 5388 0129 0100     		.2byte	0x1
 5389 012b 50       		.byte	0x50
 5390 012c 44010000 		.4byte	.LVL72
 5391 0130 46010000 		.4byte	.LVL73
 5392 0134 0100     		.2byte	0x1
 5393 0136 50       		.byte	0x50
 5394 0137 AA010000 		.4byte	.LVL78
 5395 013b B8010000 		.4byte	.LVL81
 5396 013f 0100     		.2byte	0x1
 5397 0141 50       		.byte	0x50
 5398 0142 00000000 		.4byte	0
 5399 0146 00000000 		.4byte	0
 5400              	.LLST9:
 5401 014a 3C000000 		.4byte	.LVL49
 5402 014e 42000000 		.4byte	.LVL50
 5403 0152 0200     		.2byte	0x2
 5404 0154 30       		.byte	0x30
 5405 0155 9F       		.byte	0x9f
 5406 0156 42000000 		.4byte	.LVL50
 5407 015a 4C000000 		.4byte	.LVL53
 5408 015e 0100     		.2byte	0x1
 5409 0160 53       		.byte	0x53
 5410 0161 4E000000 		.4byte	.LVL54
 5411 0165 58000000 		.4byte	.LVL55
 5412 0169 0100     		.2byte	0x1
 5413 016b 53       		.byte	0x53
 5414 016c 6A000000 		.4byte	.LVL57
 5415 0170 6C000000 		.4byte	.LVL58
 5416 0174 0100     		.2byte	0x1
 5417 0176 53       		.byte	0x53
 5418 0177 4A020000 		.4byte	.LVL84
 5419 017b 50020000 		.4byte	.LVL85
 5420 017f 0200     		.2byte	0x2
 5421 0181 30       		.byte	0x30
 5422 0182 9F       		.byte	0x9f
 5423 0183 50020000 		.4byte	.LVL85
 5424 0187 5A020000 		.4byte	.LVL88
 5425 018b 0100     		.2byte	0x1
 5426 018d 53       		.byte	0x53
 5427 018e 5C020000 		.4byte	.LVL89
 5428 0192 6B020000 		.4byte	.LVL91-1
 5429 0196 0100     		.2byte	0x1
 5430 0198 53       		.byte	0x53
 5431 0199 00000000 		.4byte	0
 5432 019d 00000000 		.4byte	0
 5433              	.LLST10:
 5434 01a1 3C000000 		.4byte	.LVL49
 5435 01a5 42000000 		.4byte	.LVL50
 5436 01a9 0200     		.2byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 124


 5437 01ab 30       		.byte	0x30
 5438 01ac 9F       		.byte	0x9f
 5439 01ad 42000000 		.4byte	.LVL50
 5440 01b1 48000000 		.4byte	.LVL51
 5441 01b5 0100     		.2byte	0x1
 5442 01b7 52       		.byte	0x52
 5443 01b8 4A000000 		.4byte	.LVL52
 5444 01bc 5C000000 		.4byte	.LVL56
 5445 01c0 0100     		.2byte	0x1
 5446 01c2 52       		.byte	0x52
 5447 01c3 6A000000 		.4byte	.LVL57
 5448 01c7 88000000 		.4byte	.LVL59
 5449 01cb 0100     		.2byte	0x1
 5450 01cd 52       		.byte	0x52
 5451 01ce 44010000 		.4byte	.LVL72
 5452 01d2 4C010000 		.4byte	.LVL74
 5453 01d6 0100     		.2byte	0x1
 5454 01d8 52       		.byte	0x52
 5455 01d9 AA010000 		.4byte	.LVL78
 5456 01dd B6010000 		.4byte	.LVL80
 5457 01e1 0100     		.2byte	0x1
 5458 01e3 52       		.byte	0x52
 5459 01e4 4A020000 		.4byte	.LVL84
 5460 01e8 50020000 		.4byte	.LVL85
 5461 01ec 0200     		.2byte	0x2
 5462 01ee 30       		.byte	0x30
 5463 01ef 9F       		.byte	0x9f
 5464 01f0 50020000 		.4byte	.LVL85
 5465 01f4 56020000 		.4byte	.LVL86
 5466 01f8 0100     		.2byte	0x1
 5467 01fa 52       		.byte	0x52
 5468 01fb 58020000 		.4byte	.LVL87
 5469 01ff 64020000 		.4byte	.LVL90
 5470 0203 0100     		.2byte	0x1
 5471 0205 52       		.byte	0x52
 5472 0206 00000000 		.4byte	0
 5473 020a 00000000 		.4byte	0
 5474              	.LLST11:
 5475 020e E2000000 		.4byte	.LVL60
 5476 0212 EB000000 		.4byte	.LVL62-1
 5477 0216 0100     		.2byte	0x1
 5478 0218 50       		.byte	0x50
 5479 0219 F6000000 		.4byte	.LVL64
 5480 021d FF000000 		.4byte	.LVL66-1
 5481 0221 0100     		.2byte	0x1
 5482 0223 50       		.byte	0x50
 5483 0224 00000000 		.4byte	0
 5484 0228 00000000 		.4byte	0
 5485              	.LLST12:
 5486 022c 00000000 		.4byte	.LVL97
 5487 0230 0F000000 		.4byte	.LVL98-1
 5488 0234 0100     		.2byte	0x1
 5489 0236 50       		.byte	0x50
 5490 0237 0F000000 		.4byte	.LVL98-1
 5491 023b 44000000 		.4byte	.LFE40
 5492 023f 0400     		.2byte	0x4
 5493 0241 F3       		.byte	0xf3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 125


 5494 0242 01       		.uleb128 0x1
 5495 0243 50       		.byte	0x50
 5496 0244 9F       		.byte	0x9f
 5497 0245 00000000 		.4byte	0
 5498 0249 00000000 		.4byte	0
 5499              	.LLST13:
 5500 024d 00000000 		.4byte	.LVL97
 5501 0251 0F000000 		.4byte	.LVL98-1
 5502 0255 0100     		.2byte	0x1
 5503 0257 51       		.byte	0x51
 5504 0258 0F000000 		.4byte	.LVL98-1
 5505 025c 32000000 		.4byte	.LVL106
 5506 0260 0100     		.2byte	0x1
 5507 0262 56       		.byte	0x56
 5508 0263 32000000 		.4byte	.LVL106
 5509 0267 44000000 		.4byte	.LFE40
 5510 026b 0600     		.2byte	0x6
 5511 026d F3       		.byte	0xf3
 5512 026e 03       		.uleb128 0x3
 5513 026f F5       		.byte	0xf5
 5514 0270 01       		.uleb128 0x1
 5515 0271 25       		.uleb128 0x25
 5516 0272 9F       		.byte	0x9f
 5517 0273 00000000 		.4byte	0
 5518 0277 00000000 		.4byte	0
 5519              	.LLST14:
 5520 027b 00000000 		.4byte	.LVL97
 5521 027f 0F000000 		.4byte	.LVL98-1
 5522 0283 0100     		.2byte	0x1
 5523 0285 52       		.byte	0x52
 5524 0286 0F000000 		.4byte	.LVL98-1
 5525 028a 32000000 		.4byte	.LVL105
 5526 028e 0100     		.2byte	0x1
 5527 0290 55       		.byte	0x55
 5528 0291 32000000 		.4byte	.LVL105
 5529 0295 44000000 		.4byte	.LFE40
 5530 0299 0600     		.2byte	0x6
 5531 029b F3       		.byte	0xf3
 5532 029c 03       		.uleb128 0x3
 5533 029d F5       		.byte	0xf5
 5534 029e 02       		.uleb128 0x2
 5535 029f 25       		.uleb128 0x25
 5536 02a0 9F       		.byte	0x9f
 5537 02a1 00000000 		.4byte	0
 5538 02a5 00000000 		.4byte	0
 5539              	.LLST15:
 5540 02a9 00000000 		.4byte	.LVL97
 5541 02ad 0F000000 		.4byte	.LVL98-1
 5542 02b1 0100     		.2byte	0x1
 5543 02b3 53       		.byte	0x53
 5544 02b4 0F000000 		.4byte	.LVL98-1
 5545 02b8 32000000 		.4byte	.LVL104
 5546 02bc 0100     		.2byte	0x1
 5547 02be 54       		.byte	0x54
 5548 02bf 32000000 		.4byte	.LVL104
 5549 02c3 44000000 		.4byte	.LFE40
 5550 02c7 0600     		.2byte	0x6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 126


 5551 02c9 F3       		.byte	0xf3
 5552 02ca 03       		.uleb128 0x3
 5553 02cb F5       		.byte	0xf5
 5554 02cc 03       		.uleb128 0x3
 5555 02cd 25       		.uleb128 0x25
 5556 02ce 9F       		.byte	0x9f
 5557 02cf 00000000 		.4byte	0
 5558 02d3 00000000 		.4byte	0
 5559              	.LLST16:
 5560 02d7 18000000 		.4byte	.LVL100
 5561 02db 21000000 		.4byte	.LVL101-1
 5562 02df 0100     		.2byte	0x1
 5563 02e1 50       		.byte	0x50
 5564 02e2 21000000 		.4byte	.LVL101-1
 5565 02e6 32000000 		.4byte	.LVL103
 5566 02ea 0100     		.2byte	0x1
 5567 02ec 57       		.byte	0x57
 5568 02ed 00000000 		.4byte	0
 5569 02f1 00000000 		.4byte	0
 5570              	.LLST17:
 5571 02f5 00000000 		.4byte	.LVL107
 5572 02f9 11000000 		.4byte	.LVL108-1
 5573 02fd 0100     		.2byte	0x1
 5574 02ff 50       		.byte	0x50
 5575 0300 11000000 		.4byte	.LVL108-1
 5576 0304 F8000000 		.4byte	.LVL127
 5577 0308 0100     		.2byte	0x1
 5578 030a 54       		.byte	0x54
 5579 030b F8000000 		.4byte	.LVL127
 5580 030f FA000000 		.4byte	.LVL128
 5581 0313 0100     		.2byte	0x1
 5582 0315 50       		.byte	0x50
 5583 0316 FA000000 		.4byte	.LVL128
 5584 031a FA000000 		.4byte	.LVL129
 5585 031e 0100     		.2byte	0x1
 5586 0320 54       		.byte	0x54
 5587 0321 FA000000 		.4byte	.LVL129
 5588 0325 38010000 		.4byte	.LFE41
 5589 0329 0400     		.2byte	0x4
 5590 032b F3       		.byte	0xf3
 5591 032c 01       		.uleb128 0x1
 5592 032d 50       		.byte	0x50
 5593 032e 9F       		.byte	0x9f
 5594 032f 00000000 		.4byte	0
 5595 0333 00000000 		.4byte	0
 5596              	.LLST18:
 5597 0337 00000000 		.4byte	.LVL107
 5598 033b 11000000 		.4byte	.LVL108-1
 5599 033f 0100     		.2byte	0x1
 5600 0341 51       		.byte	0x51
 5601 0342 11000000 		.4byte	.LVL108-1
 5602 0346 4A000000 		.4byte	.LVL114
 5603 034a 0100     		.2byte	0x1
 5604 034c 55       		.byte	0x55
 5605 034d 4A000000 		.4byte	.LVL114
 5606 0351 F8000000 		.4byte	.LVL127
 5607 0355 0400     		.2byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 127


 5608 0357 F3       		.byte	0xf3
 5609 0358 01       		.uleb128 0x1
 5610 0359 51       		.byte	0x51
 5611 035a 9F       		.byte	0x9f
 5612 035b F8000000 		.4byte	.LVL127
 5613 035f FA000000 		.4byte	.LVL128
 5614 0363 0100     		.2byte	0x1
 5615 0365 51       		.byte	0x51
 5616 0366 FA000000 		.4byte	.LVL128
 5617 036a 38010000 		.4byte	.LFE41
 5618 036e 0400     		.2byte	0x4
 5619 0370 F3       		.byte	0xf3
 5620 0371 01       		.uleb128 0x1
 5621 0372 51       		.byte	0x51
 5622 0373 9F       		.byte	0x9f
 5623 0374 00000000 		.4byte	0
 5624 0378 00000000 		.4byte	0
 5625              	.LLST19:
 5626 037c 3A000000 		.4byte	.LVL111
 5627 0380 3D000000 		.4byte	.LVL112-1
 5628 0384 0100     		.2byte	0x1
 5629 0386 50       		.byte	0x50
 5630 0387 00000000 		.4byte	0
 5631 038b 00000000 		.4byte	0
 5632              	.LLST20:
 5633 038f 8A000000 		.4byte	.LVL118
 5634 0393 BE000000 		.4byte	.LVL124
 5635 0397 0100     		.2byte	0x1
 5636 0399 55       		.byte	0x55
 5637 039a 00000000 		.4byte	0
 5638 039e 00000000 		.4byte	0
 5639              	.LLST21:
 5640 03a2 1C000000 		.4byte	.LVL109
 5641 03a6 33000000 		.4byte	.LVL110-1
 5642 03aa 0100     		.2byte	0x1
 5643 03ac 50       		.byte	0x50
 5644 03ad 00000000 		.4byte	0
 5645 03b1 00000000 		.4byte	0
 5646              	.LLST22:
 5647 03b5 00000000 		.4byte	.LVL130
 5648 03b9 19000000 		.4byte	.LVL132-1
 5649 03bd 0100     		.2byte	0x1
 5650 03bf 50       		.byte	0x50
 5651 03c0 19000000 		.4byte	.LVL132-1
 5652 03c4 24000000 		.4byte	.LFE42
 5653 03c8 0400     		.2byte	0x4
 5654 03ca F3       		.byte	0xf3
 5655 03cb 01       		.uleb128 0x1
 5656 03cc 50       		.byte	0x50
 5657 03cd 9F       		.byte	0x9f
 5658 03ce 00000000 		.4byte	0
 5659 03d2 00000000 		.4byte	0
 5660              	.LLST23:
 5661 03d6 0A000000 		.4byte	.LVL131
 5662 03da 1E000000 		.4byte	.LVL133
 5663 03de 0100     		.2byte	0x1
 5664 03e0 54       		.byte	0x54
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 128


 5665 03e1 1E000000 		.4byte	.LVL133
 5666 03e5 24000000 		.4byte	.LFE42
 5667 03e9 0500     		.2byte	0x5
 5668 03eb 03       		.byte	0x3
 5669 03ec 00000000 		.4byte	inAuto
 5670 03f0 00000000 		.4byte	0
 5671 03f4 00000000 		.4byte	0
 5672              	.LLST24:
 5673 03f8 00000000 		.4byte	.LVL134
 5674 03fc 07000000 		.4byte	.LVL135-1
 5675 0400 0100     		.2byte	0x1
 5676 0402 50       		.byte	0x50
 5677 0403 07000000 		.4byte	.LVL135-1
 5678 0407 1C000000 		.4byte	.LFE43
 5679 040b 0600     		.2byte	0x6
 5680 040d F3       		.byte	0xf3
 5681 040e 03       		.uleb128 0x3
 5682 040f F5       		.byte	0xf5
 5683 0410 00       		.uleb128 0
 5684 0411 25       		.uleb128 0x25
 5685 0412 9F       		.byte	0x9f
 5686 0413 00000000 		.4byte	0
 5687 0417 00000000 		.4byte	0
 5688              	.LLST25:
 5689 041b 10000000 		.4byte	.LVL136
 5690 041f 13000000 		.4byte	.LVL137-1
 5691 0423 0100     		.2byte	0x1
 5692 0425 50       		.byte	0x50
 5693 0426 00000000 		.4byte	0
 5694 042a 00000000 		.4byte	0
 5695              	.LLST26:
 5696 042e 00000000 		.4byte	.LVL138
 5697 0432 04000000 		.4byte	.LVL140
 5698 0436 0100     		.2byte	0x1
 5699 0438 50       		.byte	0x50
 5700 0439 04000000 		.4byte	.LVL140
 5701 043d 48020000 		.4byte	.LFE44
 5702 0441 0400     		.2byte	0x4
 5703 0443 F3       		.byte	0xf3
 5704 0444 01       		.uleb128 0x1
 5705 0445 50       		.byte	0x50
 5706 0446 9F       		.byte	0x9f
 5707 0447 00000000 		.4byte	0
 5708 044b 00000000 		.4byte	0
 5709              	.LLST27:
 5710 044f 48000000 		.4byte	.LVL145
 5711 0453 60000000 		.4byte	.LVL146
 5712 0457 0200     		.2byte	0x2
 5713 0459 30       		.byte	0x30
 5714 045a 9F       		.byte	0x9f
 5715 045b 74000000 		.4byte	.LVL150
 5716 045f 88000000 		.4byte	.LVL151
 5717 0463 0100     		.2byte	0x1
 5718 0465 50       		.byte	0x50
 5719 0466 88000000 		.4byte	.LVL151
 5720 046a 98000000 		.4byte	.LVL153
 5721 046e 0100     		.2byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 129


 5722 0470 54       		.byte	0x54
 5723 0471 98000000 		.4byte	.LVL153
 5724 0475 A4000000 		.4byte	.LVL154
 5725 0479 0100     		.2byte	0x1
 5726 047b 50       		.byte	0x50
 5727 047c A4000000 		.4byte	.LVL154
 5728 0480 48020000 		.4byte	.LFE44
 5729 0484 0100     		.2byte	0x1
 5730 0486 54       		.byte	0x54
 5731 0487 00000000 		.4byte	0
 5732 048b 00000000 		.4byte	0
 5733              	.LLST28:
 5734 048f C0010000 		.4byte	.LVL171
 5735 0493 C7010000 		.4byte	.LVL172-1
 5736 0497 0100     		.2byte	0x1
 5737 0499 50       		.byte	0x50
 5738 049a 00000000 		.4byte	0
 5739 049e 00000000 		.4byte	0
 5740              	.LLST29:
 5741 04a2 00010000 		.4byte	.LVL161
 5742 04a6 06010000 		.4byte	.LVL162
 5743 04aa 0100     		.2byte	0x1
 5744 04ac 50       		.byte	0x50
 5745 04ad 00000000 		.4byte	0
 5746 04b1 00000000 		.4byte	0
 5747              	.LLST30:
 5748 04b5 0C010000 		.4byte	.LVL163
 5749 04b9 40010000 		.4byte	.LVL168
 5750 04bd 0100     		.2byte	0x1
 5751 04bf 55       		.byte	0x55
 5752 04c0 00000000 		.4byte	0
 5753 04c4 00000000 		.4byte	0
 5754              	.LLST31:
 5755 04c8 12010000 		.4byte	.LVL165
 5756 04cc 26010000 		.4byte	.LVL166
 5757 04d0 0100     		.2byte	0x1
 5758 04d2 50       		.byte	0x50
 5759 04d3 26010000 		.4byte	.LVL166
 5760 04d7 40010000 		.4byte	.LVL168
 5761 04db 0100     		.2byte	0x1
 5762 04dd 56       		.byte	0x56
 5763 04de 00000000 		.4byte	0
 5764 04e2 00000000 		.4byte	0
 5765              	.LLST32:
 5766 04e6 5C000000 		.4byte	.LVL183
 5767 04ea 60000000 		.4byte	.LVL184
 5768 04ee 0100     		.2byte	0x1
 5769 04f0 54       		.byte	0x54
 5770 04f1 62000000 		.4byte	.LVL185
 5771 04f5 72000000 		.4byte	.LVL188
 5772 04f9 0100     		.2byte	0x1
 5773 04fb 54       		.byte	0x54
 5774 04fc 00000000 		.4byte	0
 5775 0500 00000000 		.4byte	0
 5776              		.section	.debug_aranges,"",%progbits
 5777 0000 9C000000 		.4byte	0x9c
 5778 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 130


 5779 0006 00000000 		.4byte	.Ldebug_info0
 5780 000a 04       		.byte	0x4
 5781 000b 00       		.byte	0
 5782 000c 0000     		.2byte	0
 5783 000e 0000     		.2byte	0
 5784 0010 00000000 		.4byte	.LFB35
 5785 0014 44000000 		.4byte	.LFE35-.LFB35
 5786 0018 00000000 		.4byte	.LFB46
 5787 001c 24000000 		.4byte	.LFE46-.LFB46
 5788 0020 00000000 		.4byte	.LFB47
 5789 0024 1C000000 		.4byte	.LFE47-.LFB47
 5790 0028 00000000 		.4byte	.LFB48
 5791 002c 5C000000 		.4byte	.LFE48-.LFB48
 5792 0030 00000000 		.4byte	.LFB32
 5793 0034 28000000 		.4byte	.LFE32-.LFB32
 5794 0038 00000000 		.4byte	.LFB33
 5795 003c 1C000000 		.4byte	.LFE33-.LFB33
 5796 0040 00000000 		.4byte	.LFB34
 5797 0044 1C000000 		.4byte	.LFE34-.LFB34
 5798 0048 00000000 		.4byte	.LFB37
 5799 004c 40000000 		.4byte	.LFE37-.LFB37
 5800 0050 00000000 		.4byte	.LFB38
 5801 0054 44000000 		.4byte	.LFE38-.LFB38
 5802 0058 00000000 		.4byte	.LFB36
 5803 005c 14030000 		.4byte	.LFE36-.LFB36
 5804 0060 00000000 		.4byte	.LFB39
 5805 0064 30000000 		.4byte	.LFE39-.LFB39
 5806 0068 00000000 		.4byte	.LFB40
 5807 006c 44000000 		.4byte	.LFE40-.LFB40
 5808 0070 00000000 		.4byte	.LFB41
 5809 0074 38010000 		.4byte	.LFE41-.LFB41
 5810 0078 00000000 		.4byte	.LFB42
 5811 007c 24000000 		.4byte	.LFE42-.LFB42
 5812 0080 00000000 		.4byte	.LFB43
 5813 0084 1C000000 		.4byte	.LFE43-.LFB43
 5814 0088 00000000 		.4byte	.LFB44
 5815 008c 48020000 		.4byte	.LFE44-.LFB44
 5816 0090 00000000 		.4byte	.LFB45
 5817 0094 48010000 		.4byte	.LFE45-.LFB45
 5818 0098 00000000 		.4byte	0
 5819 009c 00000000 		.4byte	0
 5820              		.section	.debug_ranges,"",%progbits
 5821              	.Ldebug_ranges0:
 5822 0000 00000000 		.4byte	.LFB35
 5823 0004 44000000 		.4byte	.LFE35
 5824 0008 00000000 		.4byte	.LFB46
 5825 000c 24000000 		.4byte	.LFE46
 5826 0010 00000000 		.4byte	.LFB47
 5827 0014 1C000000 		.4byte	.LFE47
 5828 0018 00000000 		.4byte	.LFB48
 5829 001c 5C000000 		.4byte	.LFE48
 5830 0020 00000000 		.4byte	.LFB32
 5831 0024 28000000 		.4byte	.LFE32
 5832 0028 00000000 		.4byte	.LFB33
 5833 002c 1C000000 		.4byte	.LFE33
 5834 0030 00000000 		.4byte	.LFB34
 5835 0034 1C000000 		.4byte	.LFE34
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 131


 5836 0038 00000000 		.4byte	.LFB37
 5837 003c 40000000 		.4byte	.LFE37
 5838 0040 00000000 		.4byte	.LFB38
 5839 0044 44000000 		.4byte	.LFE38
 5840 0048 00000000 		.4byte	.LFB36
 5841 004c 14030000 		.4byte	.LFE36
 5842 0050 00000000 		.4byte	.LFB39
 5843 0054 30000000 		.4byte	.LFE39
 5844 0058 00000000 		.4byte	.LFB40
 5845 005c 44000000 		.4byte	.LFE40
 5846 0060 00000000 		.4byte	.LFB41
 5847 0064 38010000 		.4byte	.LFE41
 5848 0068 00000000 		.4byte	.LFB42
 5849 006c 24000000 		.4byte	.LFE42
 5850 0070 00000000 		.4byte	.LFB43
 5851 0074 1C000000 		.4byte	.LFE43
 5852 0078 00000000 		.4byte	.LFB44
 5853 007c 48020000 		.4byte	.LFE44
 5854 0080 00000000 		.4byte	.LFB45
 5855 0084 48010000 		.4byte	.LFE45
 5856 0088 00000000 		.4byte	0
 5857 008c 00000000 		.4byte	0
 5858              		.section	.debug_line,"",%progbits
 5859              	.Ldebug_line0:
 5860 0000 4C050000 		.section	.debug_str,"MS",%progbits,1
 5860      02009802 
 5860      00000201 
 5860      FB0E0D00 
 5860      01010101 
 5861              	.LASF99:
 5862 0000 43757272 		.ascii	"Current_Read_Task\000"
 5862      656E745F 
 5862      52656164 
 5862      5F546173 
 5862      6B00
 5863              	.LASF124:
 5864 0012 43757272 		.ascii	"CurrentPosition\000"
 5864      656E7450 
 5864      6F736974 
 5864      696F6E00 
 5865              	.LASF161:
 5866 0022 72784D65 		.ascii	"rxMessage\000"
 5866      73736167 
 5866      6500
 5867              	.LASF209:
 5868 002c 6D61696E 		.ascii	"main.c\000"
 5868      2E6300
 5869              	.LASF146:
 5870 0033 70776D4C 		.ascii	"pwmLimit\000"
 5870      696D6974 
 5870      00
 5871              	.LASF86:
 5872 003c 74786D73 		.ascii	"txmsClear\000"
 5872      436C6561 
 5872      7200
 5873              	.LASF159:
 5874 0046 4C6F636B 		.ascii	"Lock\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 132


 5874      00
 5875              	.LASF66:
 5876 004b 65666673 		.ascii	"effsetdelta\000"
 5876      65746465 
 5876      6C746100 
 5877              	.LASF45:
 5878 0057 6673456E 		.ascii	"fsEncoder\000"
 5878      636F6465 
 5878      7200
 5879              	.LASF39:
 5880 0061 6373556E 		.ascii	"csUnconfig\000"
 5880      636F6E66 
 5880      696700
 5881              	.LASF118:
 5882 006c 6E657741 		.ascii	"newAuto\000"
 5882      75746F00 
 5883              	.LASF1:
 5884 0074 756E7369 		.ascii	"unsigned int\000"
 5884      676E6564 
 5884      20696E74 
 5884      00
 5885              	.LASF154:
 5886 0081 43757272 		.ascii	"Current\000"
 5886      656E7400 
 5887              	.LASF203:
 5888 0089 50574D5F 		.ascii	"PWM_1_Start\000"
 5888      315F5374 
 5888      61727400 
 5889              	.LASF70:
 5890 0095 636C6561 		.ascii	"clearfaults\000"
 5890      72666175 
 5890      6C747300 
 5891              	.LASF21:
 5892 00a1 696E7431 		.ascii	"int16\000"
 5892      3600
 5893              	.LASF110:
 5894 00a7 6E65774B 		.ascii	"newKd\000"
 5894      6400
 5895              	.LASF109:
 5896 00ad 6E65774B 		.ascii	"newKi\000"
 5896      6900
 5897              	.LASF108:
 5898 00b3 6E65774B 		.ascii	"newKp\000"
 5898      7000
 5899              	.LASF174:
 5900 00b9 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 5900      5F494E5F 
 5900      436C6561 
 5900      72496E74 
 5900      65727275 
 5901              	.LASF104:
 5902 00d0 6C696D69 		.ascii	"limit\000"
 5902      7400
 5903              	.LASF194:
 5904 00d6 4C45445F 		.ascii	"LED_Write\000"
 5904      57726974 
 5904      6500
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 133


 5905              	.LASF90:
 5906 00e0 486F6D65 		.ascii	"HomeIsrHandler\000"
 5906      49737248 
 5906      616E646C 
 5906      657200
 5907              	.LASF88:
 5908 00ef 74784D65 		.ascii	"txMessageStates_t\000"
 5908      73736167 
 5908      65537461 
 5908      7465735F 
 5908      7400
 5909              	.LASF113:
 5910 0101 6572726F 		.ascii	"error\000"
 5910      7200
 5911              	.LASF95:
 5912 0107 436C6561 		.ascii	"ClearFault\000"
 5912      72466175 
 5912      6C7400
 5913              	.LASF31:
 5914 0112 50656E64 		.ascii	"PendSV_IRQn\000"
 5914      53565F49 
 5914      52516E00 
 5915              	.LASF165:
 5916 011e 4932435F 		.ascii	"I2C_Start\000"
 5916      53746172 
 5916      7400
 5917              	.LASF129:
 5918 0128 4C617374 		.ascii	"LastJog\000"
 5918      4A6F6700 
 5919              	.LASF40:
 5920 0130 63735265 		.ascii	"csReady\000"
 5920      61647900 
 5921              	.LASF180:
 5922 0138 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 5922      315F5370 
 5922      69556172 
 5922      74436C65 
 5922      61725478 
 5923              	.LASF16:
 5924 0153 75696E74 		.ascii	"uint32_t\000"
 5924      33325F74 
 5924      00
 5925              	.LASF72:
 5926 015c 72784D65 		.ascii	"rxMessage_setenc_t\000"
 5926      73736167 
 5926      655F7365 
 5926      74656E63 
 5926      5F7400
 5927              	.LASF58:
 5928 016f 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 5928      73736167 
 5928      655F6F70 
 5928      636F6465 
 5928      735F7400 
 5929              	.LASF71:
 5930 0183 72784D65 		.ascii	"rxMessage_status_t\000"
 5930      73736167 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 134


 5930      655F7374 
 5930      61747573 
 5930      5F7400
 5931              	.LASF94:
 5932 0196 41737365 		.ascii	"AssertFault\000"
 5932      72744661 
 5932      756C7400 
 5933              	.LASF0:
 5934 01a2 666C6F61 		.ascii	"float\000"
 5934      7400
 5935              	.LASF198:
 5936 01a8 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 5936      7370695F 
 5936      73735F53 
 5936      74617274 
 5936      457800
 5937              	.LASF59:
 5938 01bb 63686563 		.ascii	"checksum\000"
 5938      6B73756D 
 5938      00
 5939              	.LASF76:
 5940 01c4 73657465 		.ascii	"setenc\000"
 5940      6E6300
 5941              	.LASF22:
 5942 01cb 696E7433 		.ascii	"int32\000"
 5942      3200
 5943              	.LASF190:
 5944 01d1 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 5944      585F4F55 
 5944      545F5365 
 5944      74447269 
 5944      76654D6F 
 5945              	.LASF15:
 5946 01e8 696E7431 		.ascii	"int16_t\000"
 5946      365F7400 
 5947              	.LASF102:
 5948 01f0 72657375 		.ascii	"result\000"
 5948      6C7400
 5949              	.LASF13:
 5950 01f7 6C6F6E67 		.ascii	"long long unsigned int\000"
 5950      206C6F6E 
 5950      6720756E 
 5950      7369676E 
 5950      65642069 
 5951              	.LASF134:
 5952 020e 5049445F 		.ascii	"PID_EffSetDelta\000"
 5952      45666653 
 5952      65744465 
 5952      6C746100 
 5953              	.LASF93:
 5954 021e 73657475 		.ascii	"setupFreeRTOS\000"
 5954      70467265 
 5954      6552544F 
 5954      5300
 5955              	.LASF135:
 5956 022c 6C617374 		.ascii	"lastTime\000"
 5956      54696D65 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 135


 5956      00
 5957              	.LASF148:
 5958 0235 70776D4D 		.ascii	"pwmMin\000"
 5958      696E00
 5959              	.LASF172:
 5960 023c 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 5960      785F436F 
 5960      756E7465 
 5960      725F315F 
 5960      57726974 
 5961              	.LASF137:
 5962 0259 49546572 		.ascii	"ITerm\000"
 5962      6D00
 5963              	.LASF68:
 5964 025f 656E6162 		.ascii	"enable\000"
 5964      6C6500
 5965              	.LASF164:
 5966 0266 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 5966      736B4765 
 5966      74537461 
 5966      636B4869 
 5966      67685761 
 5967              	.LASF204:
 5968 0282 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 5968      315F5772 
 5968      69746550 
 5968      6572696F 
 5968      6400
 5969              	.LASF150:
 5970 0294 436F6E66 		.ascii	"ConfigState\000"
 5970      69675374 
 5970      61746500 
 5971              	.LASF208:
 5972 02a0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5972      43313120 
 5972      352E342E 
 5972      31203230 
 5972      31363036 
 5973 02d3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5973      20726576 
 5973      6973696F 
 5973      6E203233 
 5973      37373135 
 5974 0306 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5974      66756E63 
 5974      74696F6E 
 5974      2D736563 
 5974      74696F6E 
 5975              	.LASF65:
 5976 032e 6C696D69 		.ascii	"limit_ITerm\000"
 5976      745F4954 
 5976      65726D00 
 5977              	.LASF144:
 5978 033a 6F75744D 		.ascii	"outMax_Total\000"
 5978      61785F54 
 5978      6F74616C 
 5978      00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 136


 5979              	.LASF120:
 5980 0347 5049445F 		.ascii	"PID_SetDrive\000"
 5980      53657444 
 5980      72697665 
 5980      00
 5981              	.LASF168:
 5982 0354 76546173 		.ascii	"vTaskDelay\000"
 5982      6B44656C 
 5982      617900
 5983              	.LASF119:
 5984 035f 5F426F6F 		.ascii	"_Bool\000"
 5984      6C00
 5985              	.LASF44:
 5986 0365 6673556E 		.ascii	"fsUnconfigured\000"
 5986      636F6E66 
 5986      69677572 
 5986      656400
 5987              	.LASF128:
 5988 0374 696E4175 		.ascii	"inAuto\000"
 5988      746F00
 5989              	.LASF98:
 5990 037b 64726976 		.ascii	"drive\000"
 5990      6500
 5991              	.LASF184:
 5992 0381 78517565 		.ascii	"xQueueSemaphoreTake\000"
 5992      75655365 
 5992      6D617068 
 5992      6F726554 
 5992      616B6500 
 5993              	.LASF185:
 5994 0395 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 5994      315F5370 
 5994      69556172 
 5994      74507574 
 5994      41727261 
 5995              	.LASF175:
 5996 03ab 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 5996      73735F43 
 5996      6C656172 
 5996      496E7465 
 5996      72727570 
 5997              	.LASF92:
 5998 03c1 43757272 		.ascii	"CurrentTemp\000"
 5998      656E7454 
 5998      656D7000 
 5999              	.LASF183:
 6000 03cd 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 6000      7465725F 
 6000      315F5265 
 6000      6164436F 
 6000      756E7465 
 6001              	.LASF186:
 6002 03e3 78517565 		.ascii	"xQueueGenericSend\000"
 6002      75654765 
 6002      6E657269 
 6002      6353656E 
 6002      6400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 137


 6003              	.LASF77:
 6004 03f5 76657273 		.ascii	"version0\000"
 6004      696F6E30 
 6004      00
 6005              	.LASF78:
 6006 03fe 76657273 		.ascii	"version1\000"
 6006      696F6E31 
 6006      00
 6007              	.LASF79:
 6008 0407 76657273 		.ascii	"version2\000"
 6008      696F6E32 
 6008      00
 6009              	.LASF62:
 6010 0410 72784D65 		.ascii	"rxMessage_overlay_t\000"
 6010      73736167 
 6010      655F6F76 
 6010      65726C61 
 6010      795F7400 
 6011              	.LASF200:
 6012 0424 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 6012      7273745F 
 6012      656E636F 
 6012      6465725F 
 6012      53657450 
 6013              	.LASF166:
 6014 0440 496E6974 		.ascii	"Init_INA\000"
 6014      5F494E41 
 6014      00
 6015              	.LASF138:
 6016 0449 506F7369 		.ascii	"Position\000"
 6016      74696F6E 
 6016      00
 6017              	.LASF24:
 6018 0452 63686172 		.ascii	"char\000"
 6018      00
 6019              	.LASF34:
 6020 0457 55426173 		.ascii	"UBaseType_t\000"
 6020      65547970 
 6020      655F7400 
 6021              	.LASF73:
 6022 0463 6F766572 		.ascii	"overlay\000"
 6022      6C617900 
 6023              	.LASF116:
 6024 046b 5049445F 		.ascii	"PID_SetMode\000"
 6024      5365744D 
 6024      6F646500 
 6025              	.LASF96:
 6026 0477 50574D5F 		.ascii	"PWM_Set\000"
 6026      53657400 
 6027              	.LASF179:
 6028 047f 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 6028      315F5370 
 6028      69556172 
 6028      74436C65 
 6028      61725278 
 6029              	.LASF195:
 6030 049a 43794465 		.ascii	"CyDelay\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 138


 6030      6C617900 
 6031              	.LASF18:
 6032 04a2 75696E74 		.ascii	"uint16\000"
 6032      313600
 6033              	.LASF20:
 6034 04a9 696E7438 		.ascii	"int8\000"
 6034      00
 6035              	.LASF61:
 6036 04ae 6F70636F 		.ascii	"opcode\000"
 6036      646500
 6037              	.LASF36:
 6038 04b5 51756575 		.ascii	"QueueHandle_t\000"
 6038      6548616E 
 6038      646C655F 
 6038      7400
 6039              	.LASF192:
 6040 04c3 78546173 		.ascii	"xTaskCreate\000"
 6040      6B437265 
 6040      61746500 
 6041              	.LASF14:
 6042 04cf 75696E74 		.ascii	"uint8_t\000"
 6042      385F7400 
 6043              	.LASF75:
 6044 04d7 73746174 		.ascii	"status\000"
 6044      757300
 6045              	.LASF46:
 6046 04de 6673496E 		.ascii	"fsIndex\000"
 6046      64657800 
 6047              	.LASF182:
 6048 04e6 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 6048      315F5772 
 6048      69746543 
 6048      6F6D7061 
 6048      726500
 6049              	.LASF43:
 6050 04f9 66734E4F 		.ascii	"fsNONE\000"
 6050      4E4500
 6051              	.LASF169:
 6052 0500 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 6052      7273745F 
 6052      656E636F 
 6052      6465725F 
 6052      436C6561 
 6053              	.LASF193:
 6054 051d 78517565 		.ascii	"xQueueCreateMutex\000"
 6054      75654372 
 6054      65617465 
 6054      4D757465 
 6054      7800
 6055              	.LASF201:
 6056 052f 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 6056      7370695F 
 6056      73735F53 
 6056      65745072 
 6056      696F7269 
 6057              	.LASF177:
 6058 0546 78546173 		.ascii	"xTaskGetTickCount\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 139


 6058      6B476574 
 6058      5469636B 
 6058      436F756E 
 6058      7400
 6059              	.LASF115:
 6060 0558 74696D65 		.ascii	"timeChange\000"
 6060      4368616E 
 6060      676500
 6061              	.LASF2:
 6062 0563 6C6F6E67 		.ascii	"long long int\000"
 6062      206C6F6E 
 6062      6720696E 
 6062      7400
 6063              	.LASF48:
 6064 0571 66734368 		.ascii	"fsChecksum\000"
 6064      65636B73 
 6064      756D00
 6065              	.LASF33:
 6066 057c 42617365 		.ascii	"BaseType_t\000"
 6066      54797065 
 6066      5F7400
 6067              	.LASF176:
 6068 0587 7370695F 		.ascii	"spi_ss_Read\000"
 6068      73735F52 
 6068      65616400 
 6069              	.LASF7:
 6070 0593 5F5F696E 		.ascii	"__int16_t\000"
 6070      7431365F 
 6070      7400
 6071              	.LASF149:
 6072 059d 686F6D69 		.ascii	"homingDone\000"
 6072      6E67446F 
 6072      6E6500
 6073              	.LASF123:
 6074 05a8 736C6565 		.ascii	"sleeptime\000"
 6074      7074696D 
 6074      6500
 6075              	.LASF188:
 6076 05b2 43795379 		.ascii	"CySysWdtResetCounters\000"
 6076      73576474 
 6076      52657365 
 6076      74436F75 
 6076      6E746572 
 6077              	.LASF212:
 6078 05c8 6D656D73 		.ascii	"memset\000"
 6078      657400
 6079              	.LASF26:
 6080 05cf 63796973 		.ascii	"cyisraddress\000"
 6080      72616464 
 6080      72657373 
 6080      00
 6081              	.LASF82:
 6082 05dc 63686563 		.ascii	"checksum_errors\000"
 6082      6B73756D 
 6082      5F657272 
 6082      6F727300 
 6083              	.LASF60:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 140


 6084 05ec 73697A65 		.ascii	"size\000"
 6084      00
 6085              	.LASF19:
 6086 05f1 75696E74 		.ascii	"uint32\000"
 6086      333200
 6087              	.LASF87:
 6088 05f8 74786D73 		.ascii	"txmsLoaded\000"
 6088      4C6F6164 
 6088      656400
 6089              	.LASF155:
 6090 0603 43757272 		.ascii	"CurrentI2Cinbuf\000"
 6090      656E7449 
 6090      3243696E 
 6090      62756600 
 6091              	.LASF143:
 6092 0613 72656653 		.ascii	"refSampleTime\000"
 6092      616D706C 
 6092      6554696D 
 6092      6500
 6093              	.LASF139:
 6094 0621 4C617374 		.ascii	"LastPosition\000"
 6094      506F7369 
 6094      74696F6E 
 6094      00
 6095              	.LASF162:
 6096 062e 74784D65 		.ascii	"txMessage\000"
 6096      73736167 
 6096      6500
 6097              	.LASF171:
 6098 0638 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 6098      7465725F 
 6098      315F5772 
 6098      69746543 
 6098      6F756E74 
 6099              	.LASF160:
 6100 064f 4C617374 		.ascii	"LastMessageTimeTick\000"
 6100      4D657373 
 6100      61676554 
 6100      696D6554 
 6100      69636B00 
 6101              	.LASF91:
 6102 0663 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 6102      53535F49 
 6102      73724861 
 6102      6E646C65 
 6102      7200
 6103              	.LASF157:
 6104 0675 75784869 		.ascii	"uxHighWaterMark_Current\000"
 6104      67685761 
 6104      7465724D 
 6104      61726B5F 
 6104      43757272 
 6105              	.LASF35:
 6106 068d 5469636B 		.ascii	"TickType_t\000"
 6106      54797065 
 6106      5F7400
 6107              	.LASF42:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 141


 6108 0698 436F6E66 		.ascii	"ConfigStates_t\000"
 6108      69675374 
 6108      61746573 
 6108      5F7400
 6109              	.LASF106:
 6110 06a7 5049445F 		.ascii	"PID_SetTunings\000"
 6110      53657454 
 6110      756E696E 
 6110      677300
 6111              	.LASF3:
 6112 06b6 6C6F6E67 		.ascii	"long double\000"
 6112      20646F75 
 6112      626C6500 
 6113              	.LASF167:
 6114 06c2 67657443 		.ascii	"getCurrent_mA\000"
 6114      75727265 
 6114      6E745F6D 
 6114      4100
 6115              	.LASF211:
 6116 06d0 4952516E 		.ascii	"IRQn\000"
 6116      00
 6117              	.LASF25:
 6118 06d5 72656733 		.ascii	"reg32\000"
 6118      3200
 6119              	.LASF38:
 6120 06db 6373554E 		.ascii	"csUNDEFINED\000"
 6120      44454649 
 6120      4E454400 
 6121              	.LASF112:
 6122 06e7 5049445F 		.ascii	"PID_Compute\000"
 6122      436F6D70 
 6122      75746500 
 6123              	.LASF107:
 6124 06f3 6E657753 		.ascii	"newSampleTime\000"
 6124      616D706C 
 6124      6554696D 
 6124      6500
 6125              	.LASF63:
 6126 0701 73657175 		.ascii	"sequence\000"
 6126      656E6365 
 6126      00
 6127              	.LASF136:
 6128 070a 4F757470 		.ascii	"Output\000"
 6128      757400
 6129              	.LASF74:
 6130 0711 636F6E66 		.ascii	"config\000"
 6130      696700
 6131              	.LASF47:
 6132 0718 66734375 		.ascii	"fsCurrentRead\000"
 6132      7272656E 
 6132      74526561 
 6132      6400
 6133              	.LASF8:
 6134 0726 73686F72 		.ascii	"short int\000"
 6134      7420696E 
 6134      7400
 6135              	.LASF114:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 142


 6136 0730 64506F73 		.ascii	"dPosition\000"
 6136      6974696F 
 6136      6E00
 6137              	.LASF67:
 6138 073a 72784D65 		.ascii	"rxMessage_config_t\000"
 6138      73736167 
 6138      655F636F 
 6138      6E666967 
 6138      5F7400
 6139              	.LASF131:
 6140 074d 5049445F 		.ascii	"PID_Was_Enabled\000"
 6140      5761735F 
 6140      456E6162 
 6140      6C656400 
 6141              	.LASF130:
 6142 075d 5049445F 		.ascii	"PID_Enabled\000"
 6142      456E6162 
 6142      6C656400 
 6143              	.LASF117:
 6144 0769 4D6F6465 		.ascii	"Mode\000"
 6144      00
 6145              	.LASF10:
 6146 076e 6C6F6E67 		.ascii	"long int\000"
 6146      20696E74 
 6146      00
 6147              	.LASF41:
 6148 0777 63734D41 		.ascii	"csMAX\000"
 6148      5800
 6149              	.LASF111:
 6150 077d 73616D70 		.ascii	"sampleTimeInSec\000"
 6150      6C655469 
 6150      6D65496E 
 6150      53656300 
 6151              	.LASF181:
 6152 078d 4379496E 		.ascii	"CyIntSetSysVector\000"
 6152      74536574 
 6152      53797356 
 6152      6563746F 
 6152      7200
 6153              	.LASF28:
 6154 079f 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6154      61736B61 
 6154      626C6549 
 6154      6E745F49 
 6154      52516E00 
 6155              	.LASF37:
 6156 07b3 53656D61 		.ascii	"SemaphoreHandle_t\000"
 6156      70686F72 
 6156      6548616E 
 6156      646C655F 
 6156      7400
 6157              	.LASF163:
 6158 07c5 74784D65 		.ascii	"txMessageState\000"
 6158      73736167 
 6158      65537461 
 6158      746500
 6159              	.LASF189:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 143


 6160 07d4 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 6160      5F4F5554 
 6160      5F536574 
 6160      44726976 
 6160      654D6F64 
 6161              	.LASF101:
 6162 07ea 52617750 		.ascii	"RawPosition\000"
 6162      6F736974 
 6162      696F6E00 
 6163              	.LASF85:
 6164 07f6 74784D65 		.ascii	"txMessage_t\000"
 6164      73736167 
 6164      655F7400 
 6165              	.LASF69:
 6166 0802 73657470 		.ascii	"setpoint\000"
 6166      6F696E74 
 6166      00
 6167              	.LASF100:
 6168 080b 47657450 		.ascii	"GetPosition\000"
 6168      6F736974 
 6168      696F6E00 
 6169              	.LASF145:
 6170 0817 6F75744D 		.ascii	"outMax_ITerm\000"
 6170      61785F49 
 6170      5465726D 
 6170      00
 6171              	.LASF156:
 6172 0824 75784869 		.ascii	"uxHighWaterMark_PID\000"
 6172      67685761 
 6172      7465724D 
 6172      61726B5F 
 6172      50494400 
 6173              	.LASF147:
 6174 0838 70776D4D 		.ascii	"pwmMax\000"
 6174      617800
 6175              	.LASF132:
 6176 083f 5049445F 		.ascii	"PID_Setpoint\000"
 6176      53657470 
 6176      6F696E74 
 6176      00
 6177              	.LASF6:
 6178 084c 5F5F7569 		.ascii	"__uint8_t\000"
 6178      6E74385F 
 6178      7400
 6179              	.LASF55:
 6180 0856 6F705374 		.ascii	"opStatus\000"
 6180      61747573 
 6180      00
 6181              	.LASF178:
 6182 085f 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 6182      315F5370 
 6182      69556172 
 6182      74526561 
 6182      64527844 
 6183              	.LASF57:
 6184 0877 6F704D41 		.ascii	"opMAX\000"
 6184      5800
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 144


 6185              	.LASF103:
 6186 087d 436F6D6D 		.ascii	"Comm_Task\000"
 6186      5F546173 
 6186      6B00
 6187              	.LASF32:
 6188 0887 53797354 		.ascii	"SysTick_IRQn\000"
 6188      69636B5F 
 6188      4952516E 
 6188      00
 6189              	.LASF153:
 6190 0894 43686563 		.ascii	"ChecksumErrors\000"
 6190      6B73756D 
 6190      4572726F 
 6190      727300
 6191              	.LASF27:
 6192 08a3 73697A65 		.ascii	"sizetype\000"
 6192      74797065 
 6192      00
 6193              	.LASF12:
 6194 08ac 6C6F6E67 		.ascii	"long unsigned int\000"
 6194      20756E73 
 6194      69676E65 
 6194      6420696E 
 6194      7400
 6195              	.LASF199:
 6196 08be 6973725F 		.ascii	"isr_home_SetPriority\000"
 6196      686F6D65 
 6196      5F536574 
 6196      5072696F 
 6196      72697479 
 6197              	.LASF191:
 6198 08d3 496E6465 		.ascii	"Index_Counter_1_ReadCounter\000"
 6198      785F436F 
 6198      756E7465 
 6198      725F315F 
 6198      52656164 
 6199              	.LASF126:
 6200 08ef 43757272 		.ascii	"CurrentIndexCount\000"
 6200      656E7449 
 6200      6E646578 
 6200      436F756E 
 6200      7400
 6201              	.LASF207:
 6202 0901 76546173 		.ascii	"vTaskStartScheduler\000"
 6202      6B537461 
 6202      72745363 
 6202      68656475 
 6202      6C657200 
 6203              	.LASF121:
 6204 0915 70657263 		.ascii	"percent\000"
 6204      656E7400 
 6205              	.LASF202:
 6206 091d 5350495F 		.ascii	"SPI_1_Start\000"
 6206      315F5374 
 6206      61727400 
 6207              	.LASF5:
 6208 0929 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 145


 6208      676E6564 
 6208      20636861 
 6208      7200
 6209              	.LASF205:
 6210 0937 436F756E 		.ascii	"Counter_1_Start\000"
 6210      7465725F 
 6210      315F5374 
 6210      61727400 
 6211              	.LASF11:
 6212 0947 5F5F7569 		.ascii	"__uint32_t\000"
 6212      6E743332 
 6212      5F7400
 6213              	.LASF53:
 6214 0952 6F70554E 		.ascii	"opUNDEFINED\000"
 6214      44454649 
 6214      4E454400 
 6215              	.LASF56:
 6216 095e 6F705365 		.ascii	"opSetEnc\000"
 6216      74456E63 
 6216      00
 6217              	.LASF151:
 6218 0967 4661756C 		.ascii	"FaultState\000"
 6218      74537461 
 6218      746500
 6219              	.LASF30:
 6220 0972 53564361 		.ascii	"SVCall_IRQn\000"
 6220      6C6C5F49 
 6220      52516E00 
 6221              	.LASF49:
 6222 097e 66735832 		.ascii	"fsX2\000"
 6222      00
 6223              	.LASF50:
 6224 0983 66735833 		.ascii	"fsX3\000"
 6224      00
 6225              	.LASF51:
 6226 0988 66735834 		.ascii	"fsX4\000"
 6226      00
 6227              	.LASF152:
 6228 098d 436F6E66 		.ascii	"ConfigSequence\000"
 6228      69675365 
 6228      7175656E 
 6228      636500
 6229              	.LASF97:
 6230 099c 64757479 		.ascii	"dutycycle\000"
 6230      6379636C 
 6230      6500
 6231              	.LASF142:
 6232 09a6 7265664B 		.ascii	"refKd\000"
 6232      6400
 6233              	.LASF141:
 6234 09ac 7265664B 		.ascii	"refKi\000"
 6234      6900
 6235              	.LASF122:
 6236 09b2 5049445F 		.ascii	"PID_Task\000"
 6236      5461736B 
 6236      00
 6237              	.LASF170:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 146


 6238 09bb 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 6238      745F456E 
 6238      636F6465 
 6238      725F436C 
 6238      65617249 
 6239              	.LASF140:
 6240 09d8 7265664B 		.ascii	"refKp\000"
 6240      7000
 6241              	.LASF80:
 6242 09de 73746174 		.ascii	"state\000"
 6242      6500
 6243              	.LASF64:
 6244 09e4 6C696D69 		.ascii	"limit_Total\000"
 6244      745F546F 
 6244      74616C00 
 6245              	.LASF187:
 6246 09f0 50524F42 		.ascii	"PROBE_Write\000"
 6246      455F5772 
 6246      69746500 
 6247              	.LASF196:
 6248 09fc 6973725F 		.ascii	"isr_home_StartEx\000"
 6248      686F6D65 
 6248      5F537461 
 6248      72744578 
 6248      00
 6249              	.LASF4:
 6250 0a0d 7369676E 		.ascii	"signed char\000"
 6250      65642063 
 6250      68617200 
 6251              	.LASF9:
 6252 0a19 73686F72 		.ascii	"short unsigned int\000"
 6252      7420756E 
 6252      7369676E 
 6252      65642069 
 6252      6E7400
 6253              	.LASF105:
 6254 0a2c 5049445F 		.ascii	"PID_Initialize\000"
 6254      496E6974 
 6254      69616C69 
 6254      7A6500
 6255              	.LASF127:
 6256 0a3b 6D61696E 		.ascii	"main\000"
 6256      00
 6257              	.LASF29:
 6258 0a40 48617264 		.ascii	"HardFault_IRQn\000"
 6258      4661756C 
 6258      745F4952 
 6258      516E00
 6259              	.LASF83:
 6260 0a4f 63757272 		.ascii	"current\000"
 6260      656E7400 
 6261              	.LASF17:
 6262 0a57 75696E74 		.ascii	"uint8\000"
 6262      3800
 6263              	.LASF23:
 6264 0a5d 646F7562 		.ascii	"double\000"
 6264      6C6500
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 147


 6265              	.LASF206:
 6266 0a64 496E6465 		.ascii	"Index_Counter_1_Start\000"
 6266      785F436F 
 6266      756E7465 
 6266      725F315F 
 6266      53746172 
 6267              	.LASF158:
 6268 0a7a 75784869 		.ascii	"uxHighWaterMark_Comm\000"
 6268      67685761 
 6268      7465724D 
 6268      61726B5F 
 6268      436F6D6D 
 6269              	.LASF54:
 6270 0a8f 6F70436F 		.ascii	"opConfig\000"
 6270      6E666967 
 6270      00
 6271              	.LASF197:
 6272 0a98 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 6272      7273745F 
 6272      656E636F 
 6272      6465725F 
 6272      53746172 
 6273              	.LASF173:
 6274 0ab0 6973725F 		.ascii	"isr_home_ClearPending\000"
 6274      686F6D65 
 6274      5F436C65 
 6274      61725065 
 6274      6E64696E 
 6275              	.LASF81:
 6276 0ac6 6661756C 		.ascii	"fault\000"
 6276      7400
 6277              	.LASF89:
 6278 0acc 52535449 		.ascii	"RSTIsrHandler\000"
 6278      73724861 
 6278      6E646C65 
 6278      7200
 6279              	.LASF84:
 6280 0ada 706F7369 		.ascii	"position\000"
 6280      74696F6E 
 6280      00
 6281              	.LASF52:
 6282 0ae3 4661756C 		.ascii	"FaultStates_t\000"
 6282      74537461 
 6282      7465735F 
 6282      7400
 6283              	.LASF133:
 6284 0af1 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 6284      45666665 
 6284      63746976 
 6284      65536574 
 6284      706F696E 
 6285              	.LASF210:
 6286 0b07 433A5C70 		.ascii	"C:\\proj\\acsnb-motor-cypress\\QuadEncoderRTOS.cyds"
 6286      726F6A5C 
 6286      6163736E 
 6286      622D6D6F 
 6286      746F722D 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccbynXqF.s 			page 148


 6287 0b37 6E00     		.ascii	"n\000"
 6288              	.LASF125:
 6289 0b39 44656C74 		.ascii	"DeltaPosition\000"
 6289      61506F73 
 6289      6974696F 
 6289      6E00
 6290              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
