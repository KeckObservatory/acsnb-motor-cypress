ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB43:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 04/07/23 PMR  Rev: 0-2-1 add move timer to messaging, fix jog function
  12:main.c        **** * 02/08/23 PMR  Rev: 0-2-0 rework PID algorithm based on Galil findings
  13:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  14:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  15:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  16:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  17:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  18:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  19:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  20:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  21:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  22:main.c        **** *******************************************************************************/
  23:main.c        **** #include <I2C_I2C.h>
  24:main.c        **** #include <stdbool.h>
  25:main.c        **** #include <stdlib.h>
  26:main.c        **** #include <math.h>
  27:main.c        **** #include "pid.h"
  28:main.c        **** #include "INA219.h"
  29:main.c        **** 
  30:main.c        **** /* Firmware revision as of 2023-04-07 */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 2


  31:main.c        **** #define FIRMWARE_REV_0 0
  32:main.c        **** #define FIRMWARE_REV_1 2
  33:main.c        **** #define FIRMWARE_REV_2 1
  34:main.c        **** 
  35:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  36:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  37:main.c        **** 
  38:main.c        **** /* For the ACS test set, the drives are wired backwards!  Use a polarity of -1 in that case. */
  39:main.c        **** //#define DRIVE_POLARITY -1
  40:main.c        **** #define DRIVE_POLARITY 1
  41:main.c        **** 
  42:main.c        **** /* --------------------------------------------------------------------- 
  43:main.c        ****  * CONSTANTS
  44:main.c        ****  * --------------------------------------------------------------------- */
  45:main.c        **** 
  46:main.c        **** /* Interrupt priorities */
  47:main.c        **** #define NESTED_ISR                             (1u)
  48:main.c        **** #define HIGHER_PRIORITY                        (2u)
  49:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  50:main.c        **** 
  51:main.c        **** /* Interrupt prototypes */
  52:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  53:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  54:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  55:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  56:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  57:main.c        **** 
  58:main.c        **** /* --------------------------------------------------------------------- 
  59:main.c        ****  * WDT Defines
  60:main.c        ****  *
  61:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  62:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  63:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  64:main.c        ****  * --------------------------------------------------------------------- */
  65:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  66:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  67:main.c        **** 
  68:main.c        **** /* --------------------------------------------------------------------- 
  69:main.c        ****  * PWM Defines
  70:main.c        ****  * --------------------------------------------------------------------- */
  71:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  72:main.c        **** #define PWM_NEUTRAL                            (PWM_15KHZ_PERIOD/2)
  73:main.c        **** 
  74:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  75:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  76:main.c        **** #define INA219_CAL_VALUE                       (8192)
  77:main.c        **** 
  78:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  79:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  80:main.c        **** 
  81:main.c        **** /* --------------------------------------------------------------------- 
  82:main.c        ****  * PID Defines
  83:main.c        ****  * --------------------------------------------------------------------- */
  84:main.c        **** #define PID_MANUAL                             (0)
  85:main.c        **** #define PID_AUTOMATIC                          (1)
  86:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (250)
  87:main.c        **** #define OVERRIDE_PID_CONSTANTS                 1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 3


  88:main.c        **** #define ITERM_90PCT_FIT_CONSTANT               (13)
  89:main.c        **** 
  90:main.c        **** bool inAuto = false;
  91:main.c        **** 
  92:main.c        **** volatile int8_t Jog;
  93:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  94:main.c        **** int32_t PID_Setpoint, PID_EffectiveSetpoint;
  95:main.c        **** uint8_t PID_EffSetDelta;
  96:main.c        **** uint32_t lastTime;
  97:main.c        **** 
  98:main.c        **** volatile int32_t Position, LastPosition;
  99:main.c        **** volatile int32_t Output;
 100:main.c        **** volatile uint16_t limitOutput;
 101:main.c        **** volatile uint16_t limitIterm;
 102:main.c        **** 
 103:main.c        **** bool homingDone = true;
 104:main.c        **** 
 105:main.c        **** /* --------------------------------------------------------------------- 
 106:main.c        ****  * Move timer defines
 107:main.c        ****  * 
 108:main.c        ****  * Wait for 30 samples of position to be the same before declaring a move
 109:main.c        ****  * done.
 110:main.c        ****  * --------------------------------------------------------------------- */
 111:main.c        **** #define LAST_MOVE_TIME_SAMPLE_COUNT 30
 112:main.c        **** 
 113:main.c        **** /* Use UptimeMicroseconds to calculate how long a move elapsed */
 114:main.c        **** uint32_t LastMoveStartTimeUsec = 0;
 115:main.c        **** uint32_t LastMoveEndTimeUsec = 0;
 116:main.c        **** 
 117:main.c        **** /* Counter for how many samples elapsed since the move was complete */
 118:main.c        **** uint16_t LastMoveStableCount = 0;
 119:main.c        **** 
 120:main.c        **** /* Time value in microseconds for how long the last move took */
 121:main.c        **** uint32_t LastMoveTimeUsec = 0;
 122:main.c        **** 
 123:main.c        **** /* Set this flag when a new move comes down from the ACS */
 124:main.c        **** bool NewCommandedMove = false;
 125:main.c        **** 
 126:main.c        **** /* --------------------------------------------------------------------- 
 127:main.c        ****  * Timekeeping defines
 128:main.c        ****  * --------------------------------------------------------------------- */
 129:main.c        **** volatile uint64_t UptimeMicroseconds = 0;
 130:main.c        **** volatile uint64_t UptimeMicrosecondsAccumulator = 0;
 131:main.c        **** volatile uint64_t UptimeMilliseconds = 0;
 132:main.c        **** volatile uint64_t UptimeMillisecondsAccumulator = 0;
 133:main.c        **** volatile uint64_t UptimeSeconds = 0;
 134:main.c        **** 
 135:main.c        **** /* --------------------------------------------------------------------- 
 136:main.c        ****  * ENCODER PROPERTIES
 137:main.c        ****  *
 138:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 139:main.c        ****  *
 140:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 141:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 142:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 143:main.c        ****  * flag and resetting the counter to 0 again.
 144:main.c        ****  *
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 4


 145:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 146:main.c        ****  * --------------------------------------------------------------------- */
 147:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 148:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 149:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 150:main.c        **** 
 151:main.c        **** /* --------------------------------------------------------------------- 
 152:main.c        ****  * GLOBALS
 153:main.c        ****  * --------------------------------------------------------------------- */
 154:main.c        **** /* Coarse reporting of state back to the node box software */
 155:main.c        **** typedef enum {    
 156:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 157:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 158:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 159:main.c        ****     csMAX    
 160:main.c        **** } ConfigStates_t;
 161:main.c        **** 
 162:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 163:main.c        **** 
 164:main.c        **** /* Fault codes, these are bit encoded into a uint8_t */
 165:main.c        **** typedef enum {
 166:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 167:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 168:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 169:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 170:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 171:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 172:main.c        ****     fsX2           = 0b00100000,    /* */
 173:main.c        ****     fsX3           = 0b01000000,    /* */
 174:main.c        ****     fsX4           = 0b10000000     /* */
 175:main.c        **** } FaultStates_t;
 176:main.c        **** 
 177:main.c        **** volatile ConfigStates_t ConfigState;
 178:main.c        **** volatile uint8_t FaultState;
 179:main.c        **** volatile uint8_t ConfigSequence;
 180:main.c        **** volatile uint16_t ChecksumErrors;
 181:main.c        **** volatile int16_t MotorCurrent;
 182:main.c        **** uint8_t CurrentI2Cinbuf[20];
 183:main.c        **** 
 184:main.c        **** /* --------------------------------------------------------------------- 
 185:main.c        ****  * SPI MESSAGING
 186:main.c        ****  * --------------------------------------------------------------------- */
 187:main.c        **** /* V2 protocol 
 188:main.c        **** 
 189:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 190:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 191:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 192:main.c        **** */
 193:main.c        ****     
 194:main.c        **** /* Set this to be at least the size of the status response message */
 195:main.c        **** #define MAX_MESSAGE_SIZE 27
 196:main.c        ****     
 197:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 198:main.c        ****    talking.  Nominally 1 second max of not talking. */
 199:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 200:main.c        **** uint32_t LastMessageTimeSeconds;
 201:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 5


 202:main.c        **** /* Opcodes that can come from the node box software */
 203:main.c        **** typedef enum {
 204:main.c        ****     opUNDEFINED = 0,
 205:main.c        ****     opConfig    = 1,
 206:main.c        ****     opStatus    = 2,
 207:main.c        ****     opSetEnc    = 3,
 208:main.c        ****     opMAX       
 209:main.c        **** } rxMessage_opcodes_t;    
 210:main.c        **** 
 211:main.c        **** /* Sanity check for opcodes */
 212:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 213:main.c        **** 
 214:main.c        **** typedef struct { 
 215:main.c        ****     uint8_t checksum;        
 216:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 217:main.c        ****     uint8_t opcode;     /* Operation (generic overlay for previewing opcode value) */
 218:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 219:main.c        **** 
 220:main.c        **** /* Configuration message, 22 bytes */
 221:main.c        **** typedef struct {
 222:main.c        ****     uint8_t checksum;        
 223:main.c        ****     uint8_t size;        /* Size of the message bytes, including opcode and size and checksum */
 224:main.c        ****     uint8_t opcode;      /* Operation: 01 == config */        
 225:main.c        ****     uint8_t sequence;    /* Configuration message sequence number */
 226:main.c        ****     
 227:main.c        ****     uint32_t overrideKp; /* If nonzero, override the PID P term */
 228:main.c        ****     uint32_t overrideKi; /* If nonzero, override the PID I term */
 229:main.c        ****     uint32_t overrideKd; /* If nonzero, override the PID D term */
 230:main.c        ****     
 231:main.c        ****     uint16_t limitOutput;/* Drive output limit, ranges from 0 to 800 */
 232:main.c        ****     uint16_t limitIterm; /* PID I term output limit, ranges from 0 to 800 */
 233:main.c        ****     uint16_t effsetdelta;/* PID effective setpoint increment delta, nominally 250 steps */
 234:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 235:main.c        **** 
 236:main.c        **** /* Status message, contains desired position and such values, 10 bytes */
 237:main.c        **** typedef struct {
 238:main.c        ****     uint8_t  checksum;        
 239:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 240:main.c        ****     uint8_t  opcode;     /* Operation: 02 == status */
 241:main.c        ****     uint8_t  enable;     /* Enable/disable PID algorithm */
 242:main.c        ****     int32_t  setpoint;   /* Setpoint (desired actuator position) */
 243:main.c        ****     int8_t   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 244:main.c        ****     uint8_t  clearfaults;/* Set to nonzero to clear all the current faults */
 245:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 246:main.c        ****    
 247:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 248:main.c        **** typedef struct {
 249:main.c        ****     uint8_t  checksum;        
 250:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 251:main.c        ****     uint8_t  opcode;     /* Operation: 03 == set encoders */
 252:main.c        ****     int32_t  setpoint;   /* Setpoint (force an actuator logical position) */
 253:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 254:main.c        **** 
 255:main.c        **** 
 256:main.c        **** /* Wrap the message with an array of bytes */
 257:main.c        **** union {
 258:main.c        ****     uint8_t             buf[MAX_MESSAGE_SIZE];
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 6


 259:main.c        ****     rxMessage_overlay_t overlay;
 260:main.c        ****     rxMessage_config_t  config;
 261:main.c        ****     rxMessage_status_t  status;  
 262:main.c        ****     rxMessage_setenc_t  setenc;
 263:main.c        **** } rxMessage;
 264:main.c        **** 
 265:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (27 bytes) */
 266:main.c        **** typedef struct  {  
 267:main.c        ****     uint8_t  checksum;        /* Message checksum */    
 268:main.c        ****     uint8_t  version0;        /* Version byte 0 */ 
 269:main.c        ****     uint8_t  version1;        /* Version byte 1 */
 270:main.c        ****     uint8_t  version2;        /* Version byte 2 */
 271:main.c        ****     uint8_t  size;            /* Size of the message bytes, including opcode and size and checksum 
 272:main.c        ****     uint8_t  opcode;          /* Echo back of the opcode this response is for, operation: 02 == sta
 273:main.c        ****     uint8_t  state;           /* Enum value for current device configuration state */ 
 274:main.c        ****     uint8_t  fault;           /* Bit encoded fields for current fault status */
 275:main.c        ****     uint8_t  sequence;        /* Echo back the config sequence number currently set */
 276:main.c        ****     uint16_t checksum_errors; /* Count of checksum errors */
 277:main.c        ****     int16_t  motor_current;   /* Motor current consumption (mA) */
 278:main.c        ****     int32_t  position;        /* Actual actuator position, signed value */ 
 279:main.c        ****     int16_t  pwm;             /* PWM value the motor is moving at */     
 280:main.c        ****     int32_t  iterm;           /* Instantaneous PID iterm value */
 281:main.c        ****     uint32_t last_move_time;  /* Amount of time for the last move, in us */ 
 282:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 283:main.c        **** 
 284:main.c        **** /* Wrap the message with an array of bytes */
 285:main.c        **** union {    
 286:main.c        ****     uint8_t     buf[MAX_MESSAGE_SIZE];
 287:main.c        ****     txMessage_t msg;
 288:main.c        **** } txMessage;
 289:main.c        **** 
 290:main.c        **** /* State machine definition for transmit side of messaging */
 291:main.c        **** typedef enum {
 292:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 293:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 294:main.c        **** } txMessageStates_t;
 295:main.c        **** 
 296:main.c        **** txMessageStates_t txMessageState;
 297:main.c        **** 
 298:main.c        **** 
 299:main.c        **** 
 300:main.c        **** /* --------------------------------------------------------------------- 
 301:main.c        ****  * Function prototypes
 302:main.c        ****  * --------------------------------------------------------------------- */
 303:main.c        **** int32_t GetPosition(void);
 304:main.c        **** void runRateGroup1_PID(void);
 305:main.c        **** void runRateGroup3_SPI(void);
 306:main.c        **** void MotorCurrentRead(void);
 307:main.c        **** 
 308:main.c        **** 
 309:main.c        **** /*******************************************************************************
 310:main.c        **** * Function Name: AssertFault
 311:main.c        **** ********************************************************************************
 312:main.c        **** * Summary:
 313:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 314:main.c        **** *  all faults.
 315:main.c        **** *
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 7


 316:main.c        **** * Parameters: FaultStates_t of the fault detected.
 317:main.c        **** * Return: None
 318:main.c        **** *******************************************************************************/
 319:main.c        **** void AssertFault(FaultStates_t fault) {
 320:main.c        ****  
 321:main.c        ****     switch (fault) {
 322:main.c        ****      
 323:main.c        ****         /* Clears all asserted faults */
 324:main.c        ****         case fsNONE:
 325:main.c        ****             FaultState = fsNONE;
 326:main.c        ****             break;        
 327:main.c        ****         
 328:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 329:main.c        ****         default:
 330:main.c        ****             FaultState |= fault;
 331:main.c        ****             break;        
 332:main.c        ****     }    
 333:main.c        **** }
 334:main.c        **** 
 335:main.c        **** 
 336:main.c        **** /*******************************************************************************
 337:main.c        **** * Function Name: ClearFault
 338:main.c        **** ********************************************************************************
 339:main.c        **** * Summary:
 340:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 341:main.c        **** *  all faults.
 342:main.c        **** *
 343:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 344:main.c        **** * Return: None
 345:main.c        **** *******************************************************************************/
 346:main.c        **** void ClearFault(FaultStates_t fault) {
 347:main.c        ****  
 348:main.c        ****     switch (fault) {
 349:main.c        ****      
 350:main.c        ****         /* Clears all asserted faults */
 351:main.c        ****         case fsNONE:
 352:main.c        ****             FaultState = fsNONE;
 353:main.c        ****             break;        
 354:main.c        ****         
 355:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 356:main.c        ****         default:
 357:main.c        ****             FaultState &= ~fault;
 358:main.c        ****             break;        
 359:main.c        ****     }    
 360:main.c        **** }
 361:main.c        **** 
 362:main.c        **** 
 363:main.c        **** /*******************************************************************************
 364:main.c        **** * Function Name: MotorCurrentRead
 365:main.c        **** ********************************************************************************
 366:main.c        **** * Summary:
 367:main.c        **** *  Read the motor current consumption.
 368:main.c        **** *
 369:main.c        **** * Parameters: None
 370:main.c        **** * Return: None
 371:main.c        **** *******************************************************************************/
 372:main.c        **** void MotorCurrentRead(void) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 8


 373:main.c        ****     
 374:main.c        ****     //TODO: Convert this to integer math
 375:main.c        ****     float c;
 376:main.c        ****     
 377:main.c        ****     c = getCurrent_mA(INA219_I2C_ADDR);
 378:main.c        ****     
 379:main.c        ****     /* Assign the global MotorCurrent value */
 380:main.c        ****     MotorCurrent = (int16_t) c;       
 381:main.c        **** }
 382:main.c        **** 
 383:main.c        **** 
 384:main.c        **** /*******************************************************************************
 385:main.c        **** * Function Name: Comm_Task
 386:main.c        **** ********************************************************************************
 387:main.c        **** * Summary:
 388:main.c        **** *  Task to perform the SPI communications.
 389:main.c        **** *
 390:main.c        **** * Parameters: None
 391:main.c        **** * Return: None
 392:main.c        **** *******************************************************************************/
 393:main.c        **** void runRateGroup3_SPI(void) {
 394:main.c        ****  
 395:main.c        ****     rxMessage_opcodes_t opcode;
 396:main.c        ****     uint8_t size;
 397:main.c        ****     uint8_t i;
 398:main.c        ****     uint8_t checksum;
 399:main.c        ****     int32_t distance;
 400:main.c        ****     
 401:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 402:main.c        ****        get to it next cycle! */
 403:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 404:main.c        ****         return;
 405:main.c        ****     
 406:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 407:main.c        ****     switch (txMessageState) {
 408:main.c        ****      
 409:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 410:main.c        ****         case txmsClear:
 411:main.c        ****                 
 412:main.c        ****             /* Get a few items out of the message before checking the sum */
 413:main.c        ****             size     = rxMessage.overlay.size;
 414:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 415:main.c        ****             
 416:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 417:main.c        ****             if (size > sizeof(txMessage.buf))
 418:main.c        ****                 size = sizeof(txMessage.buf);                            
 419:main.c        ****         
 420:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 421:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 422:main.c        ****                 checksum += rxMessage.buf[i]; 
 423:main.c        **** 
 424:main.c        ****             /* Checksum fault, don't try to process the messgage */
 425:main.c        ****             if ((checksum & 0xFF) != 0) {
 426:main.c        ****                 
 427:main.c        ****                 txMessage.msg.opcode = opcode;
 428:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 429:main.c        ****                 ChecksumErrors++;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 9


 430:main.c        ****                 
 431:main.c        ****             /* Message looks fine, process it */
 432:main.c        ****             } else {
 433:main.c        **** 
 434:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 435:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 436:main.c        ****                 
 437:main.c        ****                     switch (opcode) {
 438:main.c        ****                     
 439:main.c        ****                         case opConfig:
 440:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 441:main.c        ****                         
 442:main.c        ****                             /* Remember where we were when the init was sent */
 443:main.c        ****                             LastPosition = GetPosition();
 444:main.c        ****                            
 445:main.c        ****                             /* Initialize the setpoints to be equal to where we are right now.*/
 446:main.c        ****                             PID_Setpoint = LastPosition;
 447:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 448:main.c        ****                             
 449:main.c        ****                             /* Disable PID if it's on */
 450:main.c        ****                             PID_Was_Enabled = false;
 451:main.c        ****                             PID_Enabled = false;
 452:main.c        **** 
 453:main.c        ****                             /* Stop a jog if one was in progress */
 454:main.c        ****                             Jog = 0;
 455:main.c        ****                             
 456:main.c        ****                             /* Output and Iterm limits */
 457:main.c        ****                             limitOutput = rxMessage.config.limitOutput;
 458:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 459:main.c        ****                                 
 460:main.c        ****                                 
 461:main.c        ****                             /* Update the PID values passed down from the server */
 462:main.c        ****                         
 463:main.c        **** #ifndef OVERRIDE_PID_CONSTANTS
 464:main.c        ****                             kp = rxMessage.config.Kp;
 465:main.c        ****                             ki = rxMessage.config.Ki;
 466:main.c        ****                             kd = rxMessage.config.Kd;      
 467:main.c        ****                         
 468:main.c        ****                             /* PID effective setpoint increment delta value */                     
 469:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
 470:main.c        **** #endif
 471:main.c        ****                         
 472:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 473:main.c        ****                             ConfigState = csReady;  
 474:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 475:main.c        ****                         
 476:main.c        ****                             /* Clear all the faults when reconfigured */
 477:main.c        ****                             ClearFault(fsNONE);
 478:main.c        ****                             break;
 479:main.c        **** 
 480:main.c        ****                         case opStatus:
 481:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 482:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 483:main.c        ****                             
 484:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
 485:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
 486:main.c        ****                                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 10


 487:main.c        ****                                 /* This is a new move, start timing! */
 488:main.c        ****                                 NewCommandedMove = true;
 489:main.c        ****                                 
 490:main.c        ****                                 /* Remember where we started */
 491:main.c        ****                                 LastPosition = GetPosition();
 492:main.c        ****                                 
 493:main.c        ****                                 /* Update destination */
 494:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 495:main.c        ****                                 
 496:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 497:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 498:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 499:main.c        ****                                 
 500:main.c        ****                                 /* Reset counting of index marks */
 501:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 502:main.c        ****                                 
 503:main.c        ****                                 
 504:main.c        ****                                 /* The demand has changed.  Hold off the integrator for a certain a
 505:main.c        ****                                 dictated by the size of the move (if it's more than 50 counts) */
 506:main.c        ****                                 distance = PID_Setpoint - LastPosition;                            
 507:main.c        ****                                 if (distance < 0) {
 508:main.c        ****                                     distance *= -1;
 509:main.c        ****                                 }
 510:main.c        ****                                 
 511:main.c        ****                                 if (distance > 50) {                                
 512:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 513:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 514:main.c        ****                                 } else {
 515:main.c        ****                                     iterm_delay = 0;
 516:main.c        ****                                 }
 517:main.c        ****                                 
 518:main.c        ****                                 
 519:main.c        ****                                 /* The demand has changed, reset the iterm delay to the max */
 520:main.c        ****                                 //iterm_delay = ITERM_DELAY_DEFAULT;  
 521:main.c        ****                                 //iterm_delay = 0;
 522:main.c        ****                             }                                        
 523:main.c        ****                         
 524:main.c        ****                             /* PWM jog value ranges from -50 to 50, where -50 is max-reverse curren
 525:main.c        ****                             Jog = rxMessage.status.jog;                                            
 526:main.c        ****                             break;
 527:main.c        ****                         
 528:main.c        ****                         case opSetEnc:
 529:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 530:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);
 531:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 532:main.c        ****                             break;                                        
 533:main.c        ****                             
 534:main.c        ****                         /* No other opcodes are valid */
 535:main.c        ****                         default:
 536:main.c        ****                             break;
 537:main.c        ****                     }                           
 538:main.c        ****                 }                            
 539:main.c        ****             }
 540:main.c        ****             
 541:main.c        ****             /* Get a fresh copy of the position information */
 542:main.c        ****             Position = GetPosition();
 543:main.c        ****             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 11


 544:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 545:main.c        ****             txMessage.msg.checksum        = 0;
 546:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 547:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 548:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 549:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 550:main.c        ****             txMessage.msg.opcode          = opStatus;
 551:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 552:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 553:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 554:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 555:main.c        ****             txMessage.msg.position        = Position;
 556:main.c        ****             txMessage.msg.pwm             = Output;
 557:main.c        ****             txMessage.msg.iterm           = iterm;
 558:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 559:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 560:main.c        ****             
 561:main.c        ****             /* Set the checksum in the response */
 562:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 563:main.c        ****                 checksum += txMessage.buf[i]; 
 564:main.c        ****                 
 565:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
 566:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 567:main.c        ****                 
 568:main.c        ****             /* Copy the readied buffer out to the FIFO */
 569:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 570:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 571:main.c        **** 
 572:main.c        ****             /* Indicate it's loaded for use */
 573:main.c        ****             txMessageState = txmsLoaded;
 574:main.c        ****             
 575:main.c        ****             /* Clear all the faults if told to */
 576:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 577:main.c        ****                 ClearFault(fsNONE);
 578:main.c        ****         
 579:main.c        ****             break;
 580:main.c        ****     
 581:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 582:main.c        ****         case txmsLoaded:                
 583:main.c        ****             break;
 584:main.c        ****                 
 585:main.c        ****     } // End of message state case statement
 586:main.c        **** 
 587:main.c        **** }
 588:main.c        ****     
 589:main.c        **** 
 590:main.c        **** /*******************************************************************************
 591:main.c        **** * Function Name: PWM_Set
 592:main.c        **** ********************************************************************************
 593:main.c        **** * Summary:
 594:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 595:main.c        **** *
 596:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 597:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 598:main.c        **** * Return: None
 599:main.c        **** *******************************************************************************/
 600:main.c        **** void PWM_Set(int32_t output) {    
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 12


 601:main.c        ****         
 602:main.c        ****     /* output varies from -800 to 800, which needs to be expressed as 0 to 1600 
 603:main.c        ****        for the PWM */
 604:main.c        ****     PWM_1_WriteCompare((PWM_15KHZ_PERIOD/2) + (DRIVE_POLARITY * output));    
 605:main.c        **** }
 606:main.c        **** 
 607:main.c        **** 
 608:main.c        **** /*******************************************************************************
 609:main.c        **** * Function Name: GetPosition
 610:main.c        **** ********************************************************************************
 611:main.c        **** * Summary:
 612:main.c        **** *  Get the physical position value and compensate for negative locations.
 613:main.c        **** *
 614:main.c        **** * Parameters: None
 615:main.c        **** * Return: int32_t (signed!) position value
 616:main.c        **** *******************************************************************************/
 617:main.c        **** int32_t GetPosition(void) {
 618:main.c        ****     
 619:main.c        ****     static volatile uint32_t RawPosition;
 620:main.c        ****     static volatile int32_t result;
 621:main.c        ****     
 622:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 623:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 624:main.c        ****     
 625:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 626:main.c        ****        underflow and make that into a negative value */
 627:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 628:main.c        ****         
 629:main.c        ****         result = (-1) * ((int32_t) ENCODER_MAX - (int32_t) RawPosition);
 630:main.c        ****         
 631:main.c        ****     } else {
 632:main.c        ****      
 633:main.c        ****         /* Value is "positive", treat it normally */
 634:main.c        ****         result = (int32_t) RawPosition;
 635:main.c        ****     }
 636:main.c        ****     
 637:main.c        ****     /* Update the master copy of position information */
 638:main.c        ****     Position = result;
 639:main.c        ****     return result;
 640:main.c        **** }
 641:main.c        **** 
 642:main.c        **** 
 643:main.c        **** /*******************************************************************************
 644:main.c        **** * Function Name: PID_Initialize
 645:main.c        **** ********************************************************************************
 646:main.c        **** * Summary:
 647:main.c        **** *  Setup and reset the PID terms.
 648:main.c        **** *
 649:main.c        **** * Parameters: None
 650:main.c        **** * Return: None
 651:main.c        **** *******************************************************************************/
 652:main.c        **** void PID_Initialize(void) {
 653:main.c        ****     
 654:main.c        ****     /* Get up-to-date position */
 655:main.c        ****     Position = GetPosition();
 656:main.c        ****     LastPosition = Position;
 657:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 13


 658:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 659:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 660:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 661:main.c        ****     
 662:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 663:main.c        ****        switching from manual to auto frequently */
 664:main.c        ****     iterm = 0;
 665:main.c        **** }    
 666:main.c        **** 
 667:main.c        **** 
 668:main.c        **** /*******************************************************************************
 669:main.c        **** * Function Name: PID_SetMode
 670:main.c        **** ********************************************************************************
 671:main.c        **** * Summary:
 672:main.c        **** *  Sets the PID into automatic or manual mode.
 673:main.c        **** *
 674:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 675:main.c        **** * Return: None
 676:main.c        **** *******************************************************************************/
 677:main.c        **** void PID_SetMode(uint32_t Mode) {
 678:main.c        ****     
 679:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 680:main.c        ****     
 681:main.c        ****     if (newAuto && !inAuto) {  
 682:main.c        ****         /*we just went from manual to auto*/
 683:main.c        ****         PID_Initialize();
 684:main.c        ****     }
 685:main.c        ****     
 686:main.c        ****     inAuto = newAuto;
 687:main.c        **** } 
 688:main.c        **** 
 689:main.c        **** 
 690:main.c        **** /*******************************************************************************
 691:main.c        **** * Function Name: runRateGroup1_PID
 692:main.c        **** ********************************************************************************
 693:main.c        **** * Summary:
 694:main.c        **** *  Task to perform the PID calculations.
 695:main.c        **** *
 696:main.c        **** * Parameters: None
 697:main.c        **** * Return: None
 698:main.c        **** *******************************************************************************/
 699:main.c        **** void runRateGroup1_PID(void) {
 700:main.c        ****      
 701:main.c        ****     /////////////////////////////////////////////////////
 702:main.c        ****     // TESTING ONLY
 703:main.c        ****     //ConfigState = csReady;
 704:main.c        ****     //PID_Enabled = true;
 705:main.c        ****     /////////////////////////////////////////////////////
 706:main.c        **** 
 707:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 708:main.c        ****        take preventative action and abandon any moves in progress. */
 709:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 710:main.c        ****         
 711:main.c        ****         /* Stop all motion */
 712:main.c        ****         PWM_Set(PWM_NEUTRAL);
 713:main.c        ****         PID_Enabled = false;
 714:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 14


 715:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the next m
 716:main.c        ****            in which case we want to be neutral. */
 717:main.c        ****         Jog = 0;
 718:main.c        **** 
 719:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 720:main.c        ****     } else if (ConfigState == csReady) {
 721:main.c        ****         
 722:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 723:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 724:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 725:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 726:main.c        **** 
 727:main.c        ****         /* Handle mode switching */
 728:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 729:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 730:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 731:main.c        ****             PID_SetMode(PID_MANUAL);                
 732:main.c        ****         } else {
 733:main.c        ****             // No mode change happened   
 734:main.c        ****         }
 735:main.c        ****         
 736:main.c        ****         /* Save value for next cycle */
 737:main.c        ****         PID_Was_Enabled = PID_Enabled;
 738:main.c        ****         
 739:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 740:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 741:main.c        ****     
 742:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 743:main.c        ****         
 744:main.c        ****         1) The setpoint will change to 2000.
 745:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 746:main.c        ****         3) Calculate the PID and return.
 747:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 748:main.c        ****         5) Calculate the PID and return.
 749:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 750:main.c        ****         */
 751:main.c        ****         
 752:main.c        ****         if (PID_Enabled) {
 753:main.c        ****             
 754:main.c        ****             if (PID_EffSetDelta == 0) {
 755:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 756:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 757:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 758:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 759:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 760:main.c        ****             } else {
 761:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 762:main.c        ****             }
 763:main.c        ****             
 764:main.c        ****             /* Get most up-to-date current position */
 765:main.c        ****             Position = GetPosition();
 766:main.c        ****             
 767:main.c        ****             /* Run the PID algorithm once */
 768:main.c        ****             Output = PID_UpdateValues(PID_EffectiveSetpoint, Position);
 769:main.c        ****             
 770:main.c        ****             /* Put the PID output value out on the wire */
 771:main.c        ****             PWM_Set(Output);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 15


 772:main.c        ****             
 773:main.c        ****             /* Calculate how long the last commanded move has taken */
 774:main.c        ****             if (NewCommandedMove) {
 775:main.c        ****                 
 776:main.c        ****                 if (Position == PID_Setpoint) {
 777:main.c        ****                     
 778:main.c        ****                     /* We are at the set point, but it's not known if the motion is stable yet, we 
 779:main.c        ****                     Therefore, count how many times we have held at this location.  When it exceeds
 780:main.c        ****                     use the time we first reached this position as the move's end time. */
 781:main.c        ****                     if (LastMoveStableCount == LAST_MOVE_TIME_SAMPLE_COUNT) {
 782:main.c        ****                         
 783:main.c        ****                         /* We have arrived at the set point and have been here for 6ms (30 counts o
 784:main.c        ****                         good and calculate how long this move took */
 785:main.c        ****                         LastMoveTimeUsec = LastMoveEndTimeUsec - LastMoveStartTimeUsec;
 786:main.c        ****                         
 787:main.c        ****                         /* Clear the flag for this particular move */ 
 788:main.c        ****                         NewCommandedMove = false;
 789:main.c        ****                         
 790:main.c        ****                     } else {
 791:main.c        ****                         
 792:main.c        ****                         /* We have reached the destination but it is not yet proven stable. Increme
 793:main.c        ****                         It will be reset to zero if we deviate from this position. */              
 794:main.c        ****                         LastMoveStableCount += 1;
 795:main.c        **** 
 796:main.c        ****                         /* If the stable count is exactly 1, then this might be the start of a new 
 797:main.c        ****                         note the time.  This is potentially the END TIME of a move.  The start time
 798:main.c        ****                         when the node box sent a new set point. */
 799:main.c        ****                         if (LastMoveStableCount == 1) {
 800:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 801:main.c        ****                         }                    
 802:main.c        ****                     }                
 803:main.c        ****                     
 804:main.c        ****                 } else {
 805:main.c        ****                     
 806:main.c        ****                     /* Reset the stable counter, because we are not at the commanded location */
 807:main.c        ****                     LastMoveStableCount = 0;                
 808:main.c        ****                 }
 809:main.c        ****             }
 810:main.c        **** 
 811:main.c        ****         } else {
 812:main.c        ****             
 813:main.c        ****             /* If the server is asking us to jog, do that instead of PID.  Drive in the direction 
 814:main.c        ****             and speed the server told us.  Translate the jog percentage, from -100 to +100, into 
 815:main.c        ****             PWM values from 0 to 1600 (thus 0% equates to 800) */
 816:main.c        ****             Output = 800 + (Jog * 8);
 817:main.c        ****             
 818:main.c        ****             /* Put the new jog value on the wire, instead of a PID value */
 819:main.c        ****             PWM_Set(Output);            
 820:main.c        ****         }        
 821:main.c        ****         
 822:main.c        ****     } else {
 823:main.c        ****         
 824:main.c        ****         /* Config state is not ready (configured), inhibit all motion */
 825:main.c        ****         PWM_Set(PWM_NEUTRAL);        
 826:main.c        ****     }
 827:main.c        **** }
 828:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 16


 829:main.c        **** 
 830:main.c        **** /*******************************************************************************
 831:main.c        **** * Function Name: main
 832:main.c        **** ********************************************************************************
 833:main.c        **** * Summary:
 834:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 835:main.c        **** *
 836:main.c        **** * Parameters: None
 837:main.c        **** * Return: NEVER!
 838:main.c        **** *******************************************************************************/
 839:main.c        **** int main(void) {
 840:main.c        ****     
 841:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 842:main.c        ****        microprocessor.  There is a race condition here: unless the actuator is on a home
 843:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 844:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 845:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 846:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 847:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 848:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 849:main.c        **** 
 850:main.c        ****     
 851:main.c        ****     /********************************************************************** 
 852:main.c        ****     * Interrupts
 853:main.c        ****     **********************************************************************/
 854:main.c        ****     
 855:main.c        ****     /* BRMS timer interrupt */
 856:main.c        ****     Timer_BRMS_Start();
 857:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 858:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 859:main.c        **** 
 860:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 861:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 862:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 863:main.c        **** 
 864:main.c        ****     /* Encoder interrupt */
 865:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 866:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 867:main.c        ****     
 868:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 869:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 870:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 871:main.c        **** 
 872:main.c        ****     /* Enable the global interrupt */
 873:main.c        ****     CyGlobalIntEnable;
 874:main.c        ****     
 875:main.c        ****     /********************************************************************** 
 876:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 877:main.c        ****     **********************************************************************/
 878:main.c        **** 
 879:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 880:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 881:main.c        ****        when you hit a breakpoint. */
 882:main.c        **** 
 883:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 884:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 885:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 17


 886:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 887:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 888:main.c        **** 	
 889:main.c        **** 	/* Enable WDT counter 1 */
 890:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
 891:main.c        **** 	
 892:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
 893:main.c        **** 	CySysWdtLock();
 894:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 895:main.c        **** 	CySysWdtUnlock();        
 896:main.c        **** #endif    
 897:main.c        **** 
 898:main.c        ****     
 899:main.c        ****     /*********************************************************************** 
 900:main.c        ****     * Start the various subsystems.
 901:main.c        ****     ***********************************************************************/
 902:main.c        ****     I2C_Start();
 903:main.c        ****     
 904:main.c        ****     /* Start I2C for the Motor Current monitor */
 905:main.c        ****     //Init_INA(INA219_I2C_ADDR);
 906:main.c        ****     
 907:main.c        ****     CyDelay(100u);
 908:main.c        ****     SPI_1_Start();
 909:main.c        ****     
 910:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
 911:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
 912:main.c        ****     PWM_1_Start();
 913:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 914:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 915:main.c        ****     
 916:main.c        ****     /* Default the jog value to neutral (no movement) */
 917:main.c        ****     Jog = 0;
 918:main.c        ****     
 919:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
 920:main.c        ****     homingDone = false;
 921:main.c        ****    
 922:main.c        ****     /* Start counting the quadrature encoding */
 923:main.c        ****     Counter_1_Start();    
 924:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 925:main.c        ****     LastPosition = ENCODER_MAX;
 926:main.c        ****     
 927:main.c        ****     /* Clear and start the index mark counter */
 928:main.c        ****     Index_Counter_1_Start();
 929:main.c        ****     Index_Counter_1_WriteCounter(0);
 930:main.c        ****      
 931:main.c        ****     /* Start off unconfigured */
 932:main.c        ****     ConfigState = csUnconfig;  
 933:main.c        ****     ConfigSequence = 0;
 934:main.c        ****     ChecksumErrors = 0;
 935:main.c        ****     
 936:main.c        ****     /***************************/
 937:main.c        ****     /* Setup the PID subsystem */
 938:main.c        ****     PID_Initialize();
 939:main.c        ****     PID_SetMode(PID_MANUAL);
 940:main.c        ****     
 941:main.c        ****     /* Initially default to full output max until config tells us otherwise */
 942:main.c        ****     limitOutput = 800;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 18


 943:main.c        ****     limitIterm = 800;
 944:main.c        ****     
 945:main.c        ****     /* Start off disabled */
 946:main.c        ****     PID_Setpoint          = 0;  
 947:main.c        ****     PID_EffectiveSetpoint = 0;
 948:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 949:main.c        ****     PID_Was_Enabled       = false;
 950:main.c        ****     PID_Enabled           = false;
 951:main.c        ****     PWM_Set(PWM_NEUTRAL);
 952:main.c        ****   
 953:main.c        ****     /***********************************************************************
 954:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
 955:main.c        ****     * constantly interrupted by the task scheduler.
 956:main.c        ****     ***********************************************************************/
 957:main.c        ****     while (1) {
 958:main.c        **** 
 959:main.c        ****         //TODO: Enable/disable this mechanism based on some input from the SPI master,
 960:main.c        ****         //      which might be the ACS test set, or the beagle bone node box.  Disable it for
 961:main.c        ****         //      now to prevent multi-mastering of the I2C bus, which doesn't work.
 962:main.c        ****         /*
 963:main.c        ****         PROBE_Write(1);
 964:main.c        ****         MotorCurrentRead();
 965:main.c        ****         PROBE_Write(0);
 966:main.c        ****         */
 967:main.c        ****         
 968:main.c        ****         /*
 969:main.c        ****         if (UptimeMicroseconds > (LastUptimeMicroseconds + 500)) {
 970:main.c        ****             LastUptimeMicroseconds = UptimeMicroseconds;
 971:main.c        ****             
 972:main.c        ****             if (toggle) {
 973:main.c        ****                 PROBE_Write(1);
 974:main.c        ****                 toggle = false;
 975:main.c        ****             } else {
 976:main.c        ****                 PROBE_Write(0);
 977:main.c        ****                 toggle = true;
 978:main.c        ****             }
 979:main.c        ****         }
 980:main.c        ****         */
 981:main.c        ****         
 982:main.c        ****         
 983:main.c        ****         /* Use the LED as a heartbeat */
 984:main.c        ****         if (UptimeSeconds % 2) {
 985:main.c        ****             LED_Write(1);
 986:main.c        ****         } else {
 987:main.c        ****             LED_Write(0);
 988:main.c        ****         } 
 989:main.c        ****         
 990:main.c        ****         // Delay 10ms before next loop iteration
 991:main.c        ****         CyDelay(10);         
 992:main.c        ****         
 993:main.c        ****         
 994:main.c        ****    
 995:main.c        ****     /* ------------------------------------------------------------------------------------ */
 996:main.c        ****     /* Every loop, refresh the counter of the watchdog to indicate the system is still alive
 997:main.c        ****        and not stalled out in some interrupt somewhre.  Were the BRMS to stop working or the 
 998:main.c        ****        motion thread to die, the CPU will be reset after 2 seconds. */
 999:main.c        **** ////    WDT_COUNT1_REFRESH();        
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 19


1000:main.c        ****     /* ------------------------------------------------------------------------------------ */
1001:main.c        ****         
1002:main.c        ****     }
1003:main.c        ****       
1004:main.c        ****     
1005:main.c        ****     /***********************************************************************
1006:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
1007:main.c        ****     ***********************************************************************/
1008:main.c        ****     return 1;       
1009:main.c        **** }
1010:main.c        **** 
1011:main.c        **** 
1012:main.c        **** /*******************************************************************************
1013:main.c        **** * Function Name: BRMS_Interrupt
1014:main.c        **** ********************************************************************************
1015:main.c        **** * Summary:
1016:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
1017:main.c        **** *
1018:main.c        **** * Parameters: None
1019:main.c        **** * Return: None
1020:main.c        **** *******************************************************************************/
1021:main.c        **** CY_ISR(BRMS_Interrupt) {
1022:main.c        ****     
1023:main.c        ****     static uint32_t brmsTask;                 // The BRMS schedule counter
1024:main.c        **** 
1025:main.c        ****     static uint32_t brmsRG1Mask = 0b00000001; // Rate group 1 mask
1026:main.c        ****     static uint32_t brmsRG2Mask = 0b00000010; // Rate group 2 mask
1027:main.c        ****     static uint32_t brmsRG3Mask = 0b00000100; // Rate group 3 mask
1028:main.c        ****     static uint32_t brmsRG4Mask = 0b00001000; // Rate group 4 mask
1029:main.c        ****     static uint32_t brmsRG5Mask = 0b00010000; // Rate group 5 mask
1030:main.c        ****     
1031:main.c        ****     /* Clears the timer interrupt */
1032:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
1033:main.c        **** 
1034:main.c        ****     PROBE_Write(1);
1035:main.c        ****     
1036:main.c        ****     /* Use this 200us interrupt as a clock mechanism */
1037:main.c        ****     UptimeMicroseconds += 200;
1038:main.c        ****     UptimeMicrosecondsAccumulator += 200;
1039:main.c        ****     
1040:main.c        ****     /* Count milliseconds */
1041:main.c        ****     if (UptimeMicrosecondsAccumulator > 1000) {
1042:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1043:main.c        ****         UptimeMilliseconds += 1;
1044:main.c        ****         UptimeMillisecondsAccumulator += 1;
1045:main.c        ****     }
1046:main.c        ****     
1047:main.c        ****     /* Count seconds */
1048:main.c        ****     if (UptimeMillisecondsAccumulator > 1000) {
1049:main.c        ****         UptimeMillisecondsAccumulator = 0;
1050:main.c        ****         UptimeSeconds += 1;
1051:main.c        ****     }
1052:main.c        ****     
1053:main.c        ****     /* Increment the BRMS task counter infinitely */
1054:main.c        ****     brmsTask++;
1055:main.c        **** 
1056:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 20


1057:main.c        ****        sequentially until one results in a "true" value.  
1058:main.c        ****     
1059:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1060:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1061:main.c        ****     
1062:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
1063:main.c        ****        value ends in 0bxx10. 
1064:main.c        ****     
1065:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1066:main.c        ****        ends in 0bx100.  
1067:main.c        ****     
1068:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1069:main.c        ****     
1070:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1071:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1072:main.c        ****        interrupt returns.
1073:main.c        ****     */
1074:main.c        ****     if (brmsTask & brmsRG1Mask) {
1075:main.c        ****         
1076:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1077:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1078:main.c        ****            to a 2.5KHz update rate. */
1079:main.c        ****         runRateGroup1_PID();
1080:main.c        ****         
1081:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1082:main.c        ****         
1083:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1084:main.c        ****         //runRateGroup2_TBD();           
1085:main.c        ****         
1086:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1087:main.c        ****         
1088:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1089:main.c        ****         runRateGroup3_SPI();
1090:main.c        ****         
1091:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1092:main.c        ****      
1093:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1094:main.c        ****         //runRateGroup4_TBD();
1095:main.c        **** 
1096:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1097:main.c        ****      
1098:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1099:main.c        ****         //runRateGroup5_TBD();
1100:main.c        ****     }
1101:main.c        ****     
1102:main.c        ****     PROBE_Write(0);
1103:main.c        ****    
1104:main.c        **** }
1105:main.c        **** 
1106:main.c        **** 
1107:main.c        **** /*******************************************************************************
1108:main.c        **** * Function Name: RSTIsrHandler
1109:main.c        **** ********************************************************************************
1110:main.c        **** * Summary:
1111:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1112:main.c        **** *  Clears a pending Interrupt.
1113:main.c        **** *  Clears a pin Interrupt.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 21


1114:main.c        **** *
1115:main.c        **** * Parameters: None
1116:main.c        **** * Return: None
1117:main.c        **** *******************************************************************************/
1118:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1118 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1119:main.c        ****     
1120:main.c        ****     /* Clear pending Interrupt */
1121:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1121 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1122:main.c        ****     
1123:main.c        ****     /* Clear pin Interrupt */
1124:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1124 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1125:main.c        ****     
1126:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1127:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1127 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1128:main.c        ****     
1129:main.c        ****     /* Clear the index counter */
1130:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1130 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1131:main.c        ****     
1132:main.c        ****     /* When we hit the index mark, homing is complete */
1133:main.c        ****     homingDone = true;    
  50              		.loc 1 1133 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1134:main.c        **** }
  54              		.loc 1 1134 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE43:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 22


  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
  70              	HomeIsrHandler:
  71              	.LFB44:
1135:main.c        **** 
1136:main.c        **** 
1137:main.c        **** /*******************************************************************************
1138:main.c        **** * Function Name: HomeIsrHandler
1139:main.c        **** ********************************************************************************
1140:main.c        **** * Summary:
1141:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1142:main.c        **** *  Clears a pending Interrupt.
1143:main.c        **** *  Clears a pin Interrupt.
1144:main.c        **** *
1145:main.c        **** * Parameters: None
1146:main.c        **** * Return: None
1147:main.c        **** *******************************************************************************/
1148:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1148 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1149:main.c        ****     
1150:main.c        ****     /* Clear pending Interrupt */
1151:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1151 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1152:main.c        ****     
1153:main.c        ****     /* Clear pin Interrupt */
1154:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1154 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  85              	.LVL5:
1155:main.c        **** 
1156:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1157:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1157 0
  87 000a 0020     		movs	r0, #0
  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1158:main.c        ****     
1159:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1160:main.c        ****     homingDone = false;
  90              		.loc 1 1160 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1161:main.c        **** }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 23


  94              		.loc 1 1161 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 0018 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE44:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB45:
1162:main.c        **** 
1163:main.c        **** 
1164:main.c        **** /*******************************************************************************
1165:main.c        **** * Function Name: SPI_SS_IsrHandler
1166:main.c        **** ********************************************************************************
1167:main.c        **** * Summary:
1168:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1169:main.c        **** *  Clears a pin Interrupt.
1170:main.c        **** *
1171:main.c        **** * Parameters: None
1172:main.c        **** * Return: None
1173:main.c        **** *******************************************************************************/
1174:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1174 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1175:main.c        ****     
1176:main.c        ****     uint32_t i;
1177:main.c        ****     
1178:main.c        ****     /* Clear SPI slave select pin Interrupt */
1179:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1179 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
1180:main.c        ****     
1181:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1182:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1182 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1183:main.c        ****         return;
1184:main.c        ****    
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 24


1185:main.c        ****     /* Update the last message tick timer */
1186:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1186 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
 132 0014 0E4B     		ldr	r3, .L12+4
 133 0016 1A60     		str	r2, [r3]
1187:main.c        **** 
1188:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1189:main.c        ****        check the messaging state before resetting the buffers */
1190:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1190 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1191:main.c        ****      
1192:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1193:main.c        ****         case txmsClear:
1194:main.c        ****             break;
1195:main.c        ****      
1196:main.c        ****         /* A message was readied for transmission */
1197:main.c        ****         case txmsLoaded:
1198:main.c        ****          
1199:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1200:main.c        ****             
1201:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1202:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1202 0
 140 0020 1B22     		movs	r2, #27
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1203:main.c        **** 
1204:main.c        ****             /* Message from the master is completely clocked in by now */     
1205:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1205 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
 148              	.LVL10:
 149              	.L11:
1206:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1206 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1205:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1205 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1205:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1205 0 is_stmt 0 discriminator 1
 160 0038 1A2C     		cmp	r4, #26
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 25


 161 003a F8D9     		bls	.L11
1207:main.c        ****             }
1208:main.c        ****             
1209:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1210:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1210 0 is_stmt 1
 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 164              	.LVL13:
1211:main.c        ****             
1212:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1213:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1213 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1214:main.c        ****             
1215:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1216:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1216 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1217:main.c        ****             break;
1218:main.c        ****             
1219:main.c        ****     } 
1220:main.c        ****         
1221:main.c        **** }
 174              		.loc 1 1221 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE45:
 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 319:main.c        ****  
 196              		.loc 1 319 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 26


 321:main.c        ****      
 202              		.loc 1 321 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 325:main.c        ****             break;        
 205              		.loc 1 325 0
 206 0004 0022     		movs	r2, #0
 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 326:main.c        ****         
 209              		.loc 1 326 0
 210 000a 03E0     		b	.L14
 211              	.L18:
 330:main.c        ****             break;        
 212              		.loc 1 330 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 333:main.c        **** 
 219              		.loc 1 333 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 346:main.c        ****  
 237              		.loc 1 346 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
 348:main.c        ****      
 243              		.loc 1 348 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 352:main.c        ****             break;        
 246              		.loc 1 352 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 353:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 27


 250              		.loc 1 353 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 357:main.c        ****             break;        
 253              		.loc 1 357 0
 254 000c 024A     		ldr	r2, .L26
 255 000e 1378     		ldrb	r3, [r2]
 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 360:main.c        **** 
 259              		.loc 1 360 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.global	__aeabi_f2iz
 270              		.section	.text.MotorCurrentRead,"ax",%progbits
 271              		.align	2
 272              		.global	MotorCurrentRead
 273              		.code	16
 274              		.thumb_func
 275              		.type	MotorCurrentRead, %function
 276              	MotorCurrentRead:
 277              	.LFB34:
 372:main.c        ****     
 278              		.loc 1 372 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 377:main.c        ****     
 286              		.loc 1 377 0
 287 0002 4020     		movs	r0, #64
 288 0004 FFF7FEFF 		bl	getCurrent_mA
 289              	.LVL19:
 380:main.c        **** }
 290              		.loc 1 380 0
 291 0008 FFF7FEFF 		bl	__aeabi_f2iz
 292              	.LVL20:
 293 000c 00B2     		sxth	r0, r0
 294 000e 014B     		ldr	r3, .L29
 295 0010 1880     		strh	r0, [r3]
 381:main.c        **** 
 296              		.loc 1 381 0
 297              		@ sp needed
 298 0012 10BD     		pop	{r4, pc}
 299              	.L30:
 300              		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 28


 301              	.L29:
 302 0014 00000000 		.word	MotorCurrent
 303              		.cfi_endproc
 304              	.LFE34:
 305              		.size	MotorCurrentRead, .-MotorCurrentRead
 306              		.section	.text.PWM_Set,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_Set
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_Set, %function
 312              	PWM_Set:
 313              	.LFB36:
 600:main.c        ****         
 314              		.loc 1 600 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL21:
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 604:main.c        **** }
 323              		.loc 1 604 0
 324 0002 C823     		movs	r3, #200
 325 0004 9B00     		lsls	r3, r3, #2
 326 0006 9C46     		mov	ip, r3
 327 0008 6044     		add	r0, r0, ip
 328              	.LVL22:
 329 000a FFF7FEFF 		bl	PWM_1_WriteCompare
 330              	.LVL23:
 605:main.c        **** 
 331              		.loc 1 605 0
 332              		@ sp needed
 333 000e 10BD     		pop	{r4, pc}
 334              		.cfi_endproc
 335              	.LFE36:
 336              		.size	PWM_Set, .-PWM_Set
 337              		.section	.text.GetPosition,"ax",%progbits
 338              		.align	2
 339              		.global	GetPosition
 340              		.code	16
 341              		.thumb_func
 342              		.type	GetPosition, %function
 343              	GetPosition:
 344              	.LFB37:
 617:main.c        ****     
 345              		.loc 1 617 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 623:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 29


 353              		.loc 1 623 0
 354 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 355              	.LVL24:
 356 0006 0B4B     		ldr	r3, .L35
 357 0008 9860     		str	r0, [r3, #8]
 627:main.c        ****         
 358              		.loc 1 627 0
 359 000a 9A68     		ldr	r2, [r3, #8]
 360 000c 0A4B     		ldr	r3, .L35+4
 361 000e 9A42     		cmp	r2, r3
 362 0010 06D9     		bls	.L33
 629:main.c        ****         
 363              		.loc 1 629 0
 364 0012 084A     		ldr	r2, .L35
 365 0014 9368     		ldr	r3, [r2, #8]
 366 0016 0949     		ldr	r1, .L35+8
 367 0018 8C46     		mov	ip, r1
 368 001a 6344     		add	r3, r3, ip
 369 001c D360     		str	r3, [r2, #12]
 370 001e 02E0     		b	.L34
 371              	.L33:
 634:main.c        ****     }
 372              		.loc 1 634 0
 373 0020 044B     		ldr	r3, .L35
 374 0022 9A68     		ldr	r2, [r3, #8]
 375 0024 DA60     		str	r2, [r3, #12]
 376              	.L34:
 638:main.c        ****     return result;
 377              		.loc 1 638 0
 378 0026 034B     		ldr	r3, .L35
 379 0028 D968     		ldr	r1, [r3, #12]
 380 002a 054A     		ldr	r2, .L35+12
 381 002c 1160     		str	r1, [r2]
 639:main.c        **** }
 382              		.loc 1 639 0
 383 002e D868     		ldr	r0, [r3, #12]
 640:main.c        **** 
 384              		.loc 1 640 0
 385              		@ sp needed
 386 0030 10BD     		pop	{r4, pc}
 387              	.L36:
 388 0032 C046     		.align	2
 389              	.L35:
 390 0034 00000000 		.word	.LANCHOR1
 391 0038 FFFFEF00 		.word	15728639
 392 003c 010000FF 		.word	-16777215
 393 0040 00000000 		.word	Position
 394              		.cfi_endproc
 395              	.LFE37:
 396              		.size	GetPosition, .-GetPosition
 397              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 398              		.align	2
 399              		.global	runRateGroup3_SPI
 400              		.code	16
 401              		.thumb_func
 402              		.type	runRateGroup3_SPI, %function
 403              	runRateGroup3_SPI:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 30


 404              	.LFB35:
 393:main.c        ****  
 405              		.loc 1 393 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0000 70B5     		push	{r4, r5, r6, lr}
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 4, -16
 412              		.cfi_offset 5, -12
 413              		.cfi_offset 6, -8
 414              		.cfi_offset 14, -4
 403:main.c        ****         return;
 415              		.loc 1 403 0
 416 0002 914B     		ldr	r3, .L54
 417 0004 1B68     		ldr	r3, [r3]
 418 0006 DB07     		lsls	r3, r3, #31
 419 0008 00D5     		bpl	.LCB323
 420 000a 1CE1     		b	.L37	@long jump
 421              	.LCB323:
 407:main.c        ****      
 422              		.loc 1 407 0
 423 000c 8F4B     		ldr	r3, .L54+4
 424 000e 1B78     		ldrb	r3, [r3]
 425 0010 002B     		cmp	r3, #0
 426 0012 00D0     		beq	.LCB328
 427 0014 17E1     		b	.L37	@long jump
 428              	.LCB328:
 413:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 429              		.loc 1 413 0
 430 0016 8E4B     		ldr	r3, .L54+8
 431 0018 5878     		ldrb	r0, [r3, #1]
 432              	.LVL25:
 414:main.c        ****             
 433              		.loc 1 414 0
 434 001a 9C78     		ldrb	r4, [r3, #2]
 435              	.LVL26:
 417:main.c        ****                 size = sizeof(txMessage.buf);                            
 436              		.loc 1 417 0
 437 001c 1B28     		cmp	r0, #27
 438 001e 00D9     		bls	.L40
 418:main.c        ****         
 439              		.loc 1 418 0
 440 0020 1B20     		movs	r0, #27
 441              	.LVL27:
 442              	.L40:
 421:main.c        ****                 checksum += rxMessage.buf[i]; 
 443              		.loc 1 421 0
 444 0022 0022     		movs	r2, #0
 445 0024 0023     		movs	r3, #0
 446 0026 05E0     		b	.L41
 447              	.LVL28:
 448              	.L42:
 422:main.c        **** 
 449              		.loc 1 422 0 discriminator 3
 450 0028 8949     		ldr	r1, .L54+8
 451 002a C95C     		ldrb	r1, [r1, r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 31


 452 002c 5218     		adds	r2, r2, r1
 453              	.LVL29:
 454 002e D2B2     		uxtb	r2, r2
 455              	.LVL30:
 421:main.c        ****                 checksum += rxMessage.buf[i]; 
 456              		.loc 1 421 0 discriminator 3
 457 0030 0133     		adds	r3, r3, #1
 458              	.LVL31:
 459 0032 DBB2     		uxtb	r3, r3
 460              	.LVL32:
 461              	.L41:
 421:main.c        ****                 checksum += rxMessage.buf[i]; 
 462              		.loc 1 421 0 is_stmt 0 discriminator 1
 463 0034 9842     		cmp	r0, r3
 464 0036 F7D8     		bhi	.L42
 425:main.c        ****                 
 465              		.loc 1 425 0 is_stmt 1
 466 0038 002A     		cmp	r2, #0
 467 003a 09D0     		beq	.L43
 427:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 468              		.loc 1 427 0
 469 003c 854B     		ldr	r3, .L54+12
 470              	.LVL33:
 471 003e 5C71     		strb	r4, [r3, #5]
 428:main.c        ****                 ChecksumErrors++;
 472              		.loc 1 428 0
 473 0040 1B22     		movs	r2, #27
 474              	.LVL34:
 475 0042 1A71     		strb	r2, [r3, #4]
 429:main.c        ****                 
 476              		.loc 1 429 0
 477 0044 844A     		ldr	r2, .L54+16
 478 0046 1388     		ldrh	r3, [r2]
 479 0048 0133     		adds	r3, r3, #1
 480 004a 9BB2     		uxth	r3, r3
 481 004c 1380     		strh	r3, [r2]
 482 004e 9BE0     		b	.L44
 483              	.LVL35:
 484              	.L43:
 435:main.c        ****                 
 485              		.loc 1 435 0
 486 0050 631E     		subs	r3, r4, #1
 487              	.LVL36:
 488 0052 DBB2     		uxtb	r3, r3
 489 0054 022B     		cmp	r3, #2
 490 0056 00D9     		bls	.LCB394
 491 0058 96E0     		b	.L44	@long jump
 492              	.LCB394:
 437:main.c        ****                     
 493              		.loc 1 437 0
 494 005a 022C     		cmp	r4, #2
 495 005c 2CD0     		beq	.L45
 496 005e 032C     		cmp	r4, #3
 497 0060 76D0     		beq	.L46
 498 0062 012C     		cmp	r4, #1
 499 0064 00D0     		beq	.LCB400
 500 0066 8FE0     		b	.L44	@long jump
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 32


 501              	.LCB400:
 443:main.c        ****                            
 502              		.loc 1 443 0
 503 0068 FFF7FEFF 		bl	GetPosition
 504              	.LVL37:
 505 006c 7B4B     		ldr	r3, .L54+20
 506 006e 1860     		str	r0, [r3]
 446:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 507              		.loc 1 446 0
 508 0070 1968     		ldr	r1, [r3]
 509 0072 7B4A     		ldr	r2, .L54+24
 510 0074 1160     		str	r1, [r2]
 447:main.c        ****                             
 511              		.loc 1 447 0
 512 0076 1A68     		ldr	r2, [r3]
 513 0078 7A4B     		ldr	r3, .L54+28
 514 007a 1A60     		str	r2, [r3]
 450:main.c        ****                             PID_Enabled = false;
 515              		.loc 1 450 0
 516 007c 0023     		movs	r3, #0
 517 007e 7A4A     		ldr	r2, .L54+32
 518 0080 1370     		strb	r3, [r2]
 451:main.c        **** 
 519              		.loc 1 451 0
 520 0082 7A4A     		ldr	r2, .L54+36
 521 0084 1370     		strb	r3, [r2]
 454:main.c        ****                             
 522              		.loc 1 454 0
 523 0086 7A4A     		ldr	r2, .L54+40
 524 0088 1370     		strb	r3, [r2]
 457:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 525              		.loc 1 457 0
 526 008a 714B     		ldr	r3, .L54+8
 527 008c 197C     		ldrb	r1, [r3, #16]
 528 008e 5A7C     		ldrb	r2, [r3, #17]
 529 0090 1202     		lsls	r2, r2, #8
 530 0092 0A43     		orrs	r2, r1
 531 0094 7749     		ldr	r1, .L54+44
 532 0096 0A80     		strh	r2, [r1]
 458:main.c        ****                                 
 533              		.loc 1 458 0
 534 0098 997C     		ldrb	r1, [r3, #18]
 535 009a DA7C     		ldrb	r2, [r3, #19]
 536 009c 1202     		lsls	r2, r2, #8
 537 009e 0A43     		orrs	r2, r1
 538 00a0 7549     		ldr	r1, .L54+48
 539 00a2 0A80     		strh	r2, [r1]
 473:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 540              		.loc 1 473 0
 541 00a4 0221     		movs	r1, #2
 542 00a6 754A     		ldr	r2, .L54+52
 543 00a8 1170     		strb	r1, [r2]
 474:main.c        ****                         
 544              		.loc 1 474 0
 545 00aa DA78     		ldrb	r2, [r3, #3]
 546 00ac 744B     		ldr	r3, .L54+56
 547 00ae 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 33


 477:main.c        ****                             break;
 548              		.loc 1 477 0
 549 00b0 0020     		movs	r0, #0
 550 00b2 FFF7FEFF 		bl	ClearFault
 551              	.LVL38:
 478:main.c        **** 
 552              		.loc 1 478 0
 553 00b6 67E0     		b	.L44
 554              	.LVL39:
 555              	.L45:
 482:main.c        ****                             
 556              		.loc 1 482 0
 557 00b8 6548     		ldr	r0, .L54+8
 558              	.LVL40:
 559 00ba C378     		ldrb	r3, [r0, #3]
 560 00bc 5A1E     		subs	r2, r3, #1
 561 00be 9341     		sbcs	r3, r3, r2
 562              	.LVL41:
 563 00c0 6A4A     		ldr	r2, .L54+36
 564 00c2 1370     		strb	r3, [r2]
 485:main.c        ****                                 
 565              		.loc 1 485 0
 566 00c4 0379     		ldrb	r3, [r0, #4]
 567 00c6 4279     		ldrb	r2, [r0, #5]
 568 00c8 1202     		lsls	r2, r2, #8
 569 00ca 1A43     		orrs	r2, r3
 570 00cc 8379     		ldrb	r3, [r0, #6]
 571 00ce 1B04     		lsls	r3, r3, #16
 572 00d0 1343     		orrs	r3, r2
 573 00d2 1A00     		movs	r2, r3
 574 00d4 C379     		ldrb	r3, [r0, #7]
 575 00d6 1B06     		lsls	r3, r3, #24
 576 00d8 1343     		orrs	r3, r2
 577 00da 614A     		ldr	r2, .L54+24
 578 00dc 1268     		ldr	r2, [r2]
 579 00de 9342     		cmp	r3, r2
 580 00e0 30D0     		beq	.L48
 488:main.c        ****                                 
 581              		.loc 1 488 0
 582 00e2 0122     		movs	r2, #1
 583 00e4 674B     		ldr	r3, .L54+60
 584 00e6 1A74     		strb	r2, [r3, #16]
 491:main.c        ****                                 
 585              		.loc 1 491 0
 586 00e8 FFF7FEFF 		bl	GetPosition
 587              	.LVL42:
 588 00ec 5B4C     		ldr	r4, .L54+20
 589              	.LVL43:
 590 00ee 2060     		str	r0, [r4]
 494:main.c        ****                                 
 591              		.loc 1 494 0
 592 00f0 5748     		ldr	r0, .L54+8
 593 00f2 0379     		ldrb	r3, [r0, #4]
 594 00f4 4279     		ldrb	r2, [r0, #5]
 595 00f6 1202     		lsls	r2, r2, #8
 596 00f8 1A43     		orrs	r2, r3
 597 00fa 8379     		ldrb	r3, [r0, #6]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 34


 598 00fc 1B04     		lsls	r3, r3, #16
 599 00fe 1343     		orrs	r3, r2
 600 0100 1A00     		movs	r2, r3
 601 0102 C379     		ldrb	r3, [r0, #7]
 602 0104 1B06     		lsls	r3, r3, #24
 603 0106 1343     		orrs	r3, r2
 604 0108 554D     		ldr	r5, .L54+24
 605 010a 2B60     		str	r3, [r5]
 498:main.c        ****                                 
 606              		.loc 1 498 0
 607 010c 2268     		ldr	r2, [r4]
 608 010e 554B     		ldr	r3, .L54+28
 609 0110 1A60     		str	r2, [r3]
 501:main.c        ****                                 
 610              		.loc 1 501 0
 611 0112 0020     		movs	r0, #0
 612 0114 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 613              	.LVL44:
 506:main.c        ****                                 if (distance < 0) {
 614              		.loc 1 506 0
 615 0118 2B68     		ldr	r3, [r5]
 616 011a 2268     		ldr	r2, [r4]
 617 011c 9B1A     		subs	r3, r3, r2
 618              	.LVL45:
 507:main.c        ****                                     distance *= -1;
 619              		.loc 1 507 0
 620 011e 00D5     		bpl	.L49
 508:main.c        ****                                 }
 621              		.loc 1 508 0
 622 0120 5B42     		rsbs	r3, r3, #0
 623              	.LVL46:
 624              	.L49:
 511:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 625              		.loc 1 511 0
 626 0122 322B     		cmp	r3, #50
 627 0124 0BDD     		ble	.L50
 512:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 628              		.loc 1 512 0
 629 0126 DA17     		asrs	r2, r3, #31
 630 0128 0F21     		movs	r1, #15
 631 012a 0A40     		ands	r2, r1
 632 012c D318     		adds	r3, r2, r3
 633              	.LVL47:
 634 012e 1B11     		asrs	r3, r3, #4
 635 0130 0D33     		adds	r3, r3, #13
 636 0132 FA22     		movs	r2, #250
 637 0134 9200     		lsls	r2, r2, #2
 638 0136 5343     		muls	r3, r2
 639 0138 534A     		ldr	r2, .L54+64
 640 013a 1360     		str	r3, [r2]
 641 013c 02E0     		b	.L48
 642              	.LVL48:
 643              	.L50:
 515:main.c        ****                                 }
 644              		.loc 1 515 0
 645 013e 0022     		movs	r2, #0
 646 0140 514B     		ldr	r3, .L54+64
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 35


 647              	.LVL49:
 648 0142 1A60     		str	r2, [r3]
 649              	.L48:
 525:main.c        ****                             break;
 650              		.loc 1 525 0
 651 0144 424B     		ldr	r3, .L54+8
 652 0146 0822     		movs	r2, #8
 653 0148 9A56     		ldrsb	r2, [r3, r2]
 654 014a 494B     		ldr	r3, .L54+40
 655 014c 1A70     		strb	r2, [r3]
 526:main.c        ****                         
 656              		.loc 1 526 0
 657 014e 1BE0     		b	.L44
 658              	.LVL50:
 659              	.L46:
 530:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 660              		.loc 1 530 0
 661 0150 3F4C     		ldr	r4, .L54+8
 662              	.LVL51:
 663 0152 2179     		ldrb	r1, [r4, #4]
 664 0154 6379     		ldrb	r3, [r4, #5]
 665 0156 1B02     		lsls	r3, r3, #8
 666 0158 0B43     		orrs	r3, r1
 667 015a 1A00     		movs	r2, r3
 668              	.LVL52:
 669 015c A079     		ldrb	r0, [r4, #6]
 670              	.LVL53:
 671 015e 0004     		lsls	r0, r0, #16
 672 0160 0300     		movs	r3, r0
 673 0162 1343     		orrs	r3, r2
 674 0164 E079     		ldrb	r0, [r4, #7]
 675 0166 0006     		lsls	r0, r0, #24
 676 0168 1843     		orrs	r0, r3
 677 016a FFF7FEFF 		bl	Counter_1_WriteCounter
 678              	.LVL54:
 531:main.c        ****                             break;                                        
 679              		.loc 1 531 0
 680 016e 2379     		ldrb	r3, [r4, #4]
 681 0170 6279     		ldrb	r2, [r4, #5]
 682 0172 1202     		lsls	r2, r2, #8
 683 0174 1A43     		orrs	r2, r3
 684 0176 A379     		ldrb	r3, [r4, #6]
 685 0178 1B04     		lsls	r3, r3, #16
 686 017a 1343     		orrs	r3, r2
 687 017c 1A00     		movs	r2, r3
 688 017e E379     		ldrb	r3, [r4, #7]
 689 0180 1B06     		lsls	r3, r3, #24
 690 0182 1343     		orrs	r3, r2
 691 0184 354A     		ldr	r2, .L54+20
 692 0186 1360     		str	r3, [r2]
 693              	.L44:
 542:main.c        ****             
 694              		.loc 1 542 0
 695 0188 FFF7FEFF 		bl	GetPosition
 696              	.LVL55:
 697 018c 3F49     		ldr	r1, .L54+68
 698 018e 0860     		str	r0, [r1]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 36


 545:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 699              		.loc 1 545 0
 700 0190 304B     		ldr	r3, .L54+12
 701 0192 0022     		movs	r2, #0
 702 0194 1A70     		strb	r2, [r3]
 546:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 703              		.loc 1 546 0
 704 0196 5A70     		strb	r2, [r3, #1]
 547:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 705              		.loc 1 547 0
 706 0198 0232     		adds	r2, r2, #2
 707 019a 9A70     		strb	r2, [r3, #2]
 548:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 708              		.loc 1 548 0
 709 019c 0120     		movs	r0, #1
 710 019e D870     		strb	r0, [r3, #3]
 549:main.c        ****             txMessage.msg.opcode          = opStatus;
 711              		.loc 1 549 0
 712 01a0 1A30     		adds	r0, r0, #26
 713 01a2 1871     		strb	r0, [r3, #4]
 550:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 714              		.loc 1 550 0
 715 01a4 5A71     		strb	r2, [r3, #5]
 551:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 716              		.loc 1 551 0
 717 01a6 354A     		ldr	r2, .L54+52
 718 01a8 1278     		ldrb	r2, [r2]
 719 01aa 9A71     		strb	r2, [r3, #6]
 552:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 720              		.loc 1 552 0
 721 01ac 384A     		ldr	r2, .L54+72
 722 01ae 1278     		ldrb	r2, [r2]
 723 01b0 DA71     		strb	r2, [r3, #7]
 553:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 724              		.loc 1 553 0
 725 01b2 294A     		ldr	r2, .L54+16
 726 01b4 1288     		ldrh	r2, [r2]
 727 01b6 92B2     		uxth	r2, r2
 728 01b8 5A72     		strb	r2, [r3, #9]
 729 01ba 120A     		lsrs	r2, r2, #8
 730 01bc 9A72     		strb	r2, [r3, #10]
 554:main.c        ****             txMessage.msg.position        = Position;
 731              		.loc 1 554 0
 732 01be 304A     		ldr	r2, .L54+56
 733 01c0 1278     		ldrb	r2, [r2]
 734 01c2 1A72     		strb	r2, [r3, #8]
 555:main.c        ****             txMessage.msg.pwm             = Output;
 735              		.loc 1 555 0
 736 01c4 0A68     		ldr	r2, [r1]
 737 01c6 5A73     		strb	r2, [r3, #13]
 738 01c8 100A     		lsrs	r0, r2, #8
 739 01ca 9873     		strb	r0, [r3, #14]
 740 01cc 100C     		lsrs	r0, r2, #16
 741 01ce D873     		strb	r0, [r3, #15]
 742 01d0 120E     		lsrs	r2, r2, #24
 743 01d2 1A74     		strb	r2, [r3, #16]
 556:main.c        ****             txMessage.msg.iterm           = iterm;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 37


 744              		.loc 1 556 0
 745 01d4 2F4A     		ldr	r2, .L54+76
 746 01d6 1268     		ldr	r2, [r2]
 747 01d8 92B2     		uxth	r2, r2
 748 01da 5A74     		strb	r2, [r3, #17]
 749 01dc 120A     		lsrs	r2, r2, #8
 750 01de 9A74     		strb	r2, [r3, #18]
 557:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 751              		.loc 1 557 0
 752 01e0 2D4A     		ldr	r2, .L54+80
 753 01e2 1078     		ldrb	r0, [r2]
 754 01e4 D874     		strb	r0, [r3, #19]
 755 01e6 5078     		ldrb	r0, [r2, #1]
 756 01e8 1875     		strb	r0, [r3, #20]
 757 01ea 9078     		ldrb	r0, [r2, #2]
 758 01ec 5875     		strb	r0, [r3, #21]
 759 01ee D278     		ldrb	r2, [r2, #3]
 760 01f0 9A75     		strb	r2, [r3, #22]
 558:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 761              		.loc 1 558 0
 762 01f2 2A4A     		ldr	r2, .L54+84
 763 01f4 1288     		ldrh	r2, [r2]
 764 01f6 DA72     		strb	r2, [r3, #11]
 765 01f8 120A     		lsrs	r2, r2, #8
 766 01fa 1A73     		strb	r2, [r3, #12]
 559:main.c        ****             
 767              		.loc 1 559 0
 768 01fc 214A     		ldr	r2, .L54+60
 769 01fe 1900     		movs	r1, r3
 770 0200 107D     		ldrb	r0, [r2, #20]
 771 0202 D875     		strb	r0, [r3, #23]
 772 0204 537D     		ldrb	r3, [r2, #21]
 773 0206 0B76     		strb	r3, [r1, #24]
 774 0208 937D     		ldrb	r3, [r2, #22]
 775 020a 4B76     		strb	r3, [r1, #25]
 776 020c D37D     		ldrb	r3, [r2, #23]
 777 020e 8B76     		strb	r3, [r1, #26]
 778              	.LVL56:
 562:main.c        ****                 checksum += txMessage.buf[i]; 
 779              		.loc 1 562 0
 780 0210 0022     		movs	r2, #0
 781 0212 0023     		movs	r3, #0
 782 0214 05E0     		b	.L51
 783              	.LVL57:
 784              	.L52:
 563:main.c        ****                 
 785              		.loc 1 563 0 discriminator 3
 786 0216 0F49     		ldr	r1, .L54+12
 787 0218 C95C     		ldrb	r1, [r1, r3]
 788 021a 5218     		adds	r2, r2, r1
 789              	.LVL58:
 790 021c D2B2     		uxtb	r2, r2
 791              	.LVL59:
 562:main.c        ****                 checksum += txMessage.buf[i]; 
 792              		.loc 1 562 0 discriminator 3
 793 021e 0133     		adds	r3, r3, #1
 794              	.LVL60:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 38


 795 0220 DBB2     		uxtb	r3, r3
 796              	.LVL61:
 797              	.L51:
 562:main.c        ****                 checksum += txMessage.buf[i]; 
 798              		.loc 1 562 0 is_stmt 0 discriminator 1
 799 0222 1A2B     		cmp	r3, #26
 800 0224 F7D9     		bls	.L52
 566:main.c        ****                 
 801              		.loc 1 566 0 is_stmt 1
 802 0226 0B48     		ldr	r0, .L54+12
 803 0228 5242     		rsbs	r2, r2, #0
 804              	.LVL62:
 805 022a 0270     		strb	r2, [r0]
 570:main.c        **** 
 806              		.loc 1 570 0
 807 022c 1B21     		movs	r1, #27
 808 022e FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 809              	.LVL63:
 573:main.c        ****             
 810              		.loc 1 573 0
 811 0232 0122     		movs	r2, #1
 812 0234 054B     		ldr	r3, .L54+4
 813 0236 1A70     		strb	r2, [r3]
 576:main.c        ****                 ClearFault(fsNONE);
 814              		.loc 1 576 0
 815 0238 054B     		ldr	r3, .L54+8
 816 023a 5B7A     		ldrb	r3, [r3, #9]
 817 023c 002B     		cmp	r3, #0
 818 023e 02D0     		beq	.L37
 577:main.c        ****         
 819              		.loc 1 577 0
 820 0240 0020     		movs	r0, #0
 821 0242 FFF7FEFF 		bl	ClearFault
 822              	.LVL64:
 823              	.L37:
 587:main.c        ****     
 824              		.loc 1 587 0
 825              		@ sp needed
 826 0246 70BD     		pop	{r4, r5, r6, pc}
 827              	.L55:
 828              		.align	2
 829              	.L54:
 830 0248 24000740 		.word	1074200612
 831 024c 00000000 		.word	txMessageState
 832 0250 00000000 		.word	rxMessage
 833 0254 00000000 		.word	txMessage
 834 0258 00000000 		.word	ChecksumErrors
 835 025c 00000000 		.word	LastPosition
 836 0260 00000000 		.word	PID_Setpoint
 837 0264 00000000 		.word	PID_EffectiveSetpoint
 838 0268 00000000 		.word	PID_Was_Enabled
 839 026c 00000000 		.word	PID_Enabled
 840 0270 00000000 		.word	Jog
 841 0274 00000000 		.word	limitOutput
 842 0278 00000000 		.word	limitIterm
 843 027c 00000000 		.word	ConfigState
 844 0280 00000000 		.word	ConfigSequence
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 39


 845 0284 00000000 		.word	.LANCHOR1
 846 0288 00000000 		.word	iterm_delay
 847 028c 00000000 		.word	Position
 848 0290 00000000 		.word	FaultState
 849 0294 00000000 		.word	Output
 850 0298 00000000 		.word	iterm
 851 029c 00000000 		.word	MotorCurrent
 852              		.cfi_endproc
 853              	.LFE35:
 854              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 855              		.section	.text.PID_Initialize,"ax",%progbits
 856              		.align	2
 857              		.global	PID_Initialize
 858              		.code	16
 859              		.thumb_func
 860              		.type	PID_Initialize, %function
 861              	PID_Initialize:
 862              	.LFB38:
 652:main.c        ****     
 863              		.loc 1 652 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867 0000 10B5     		push	{r4, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 4, -8
 870              		.cfi_offset 14, -4
 655:main.c        ****     LastPosition = Position;
 871              		.loc 1 655 0
 872 0002 FFF7FEFF 		bl	GetPosition
 873              	.LVL65:
 874 0006 064B     		ldr	r3, .L57
 875 0008 1860     		str	r0, [r3]
 656:main.c        ****     
 876              		.loc 1 656 0
 877 000a 1A68     		ldr	r2, [r3]
 878 000c 054B     		ldr	r3, .L57+4
 879 000e 1A60     		str	r2, [r3]
 660:main.c        ****     
 880              		.loc 1 660 0
 881 0010 1A68     		ldr	r2, [r3]
 882 0012 054B     		ldr	r3, .L57+8
 883 0014 1A60     		str	r2, [r3]
 664:main.c        **** }    
 884              		.loc 1 664 0
 885 0016 0022     		movs	r2, #0
 886 0018 044B     		ldr	r3, .L57+12
 887 001a 1A60     		str	r2, [r3]
 665:main.c        **** 
 888              		.loc 1 665 0
 889              		@ sp needed
 890 001c 10BD     		pop	{r4, pc}
 891              	.L58:
 892 001e C046     		.align	2
 893              	.L57:
 894 0020 00000000 		.word	Position
 895 0024 00000000 		.word	LastPosition
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 40


 896 0028 00000000 		.word	PID_EffectiveSetpoint
 897 002c 00000000 		.word	iterm
 898              		.cfi_endproc
 899              	.LFE38:
 900              		.size	PID_Initialize, .-PID_Initialize
 901              		.section	.text.PID_SetMode,"ax",%progbits
 902              		.align	2
 903              		.global	PID_SetMode
 904              		.code	16
 905              		.thumb_func
 906              		.type	PID_SetMode, %function
 907              	PID_SetMode:
 908              	.LFB39:
 677:main.c        ****     
 909              		.loc 1 677 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL66:
 914 0000 10B5     		push	{r4, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 4, -8
 917              		.cfi_offset 14, -4
 679:main.c        ****     
 918              		.loc 1 679 0
 919 0002 441E     		subs	r4, r0, #1
 920 0004 6342     		rsbs	r3, r4, #0
 921 0006 5C41     		adcs	r4, r4, r3
 922 0008 E4B2     		uxtb	r4, r4
 923              	.LVL67:
 681:main.c        ****         /*we just went from manual to auto*/
 924              		.loc 1 681 0
 925 000a 0128     		cmp	r0, #1
 926 000c 05D1     		bne	.L60
 681:main.c        ****         /*we just went from manual to auto*/
 927              		.loc 1 681 0 is_stmt 0 discriminator 1
 928 000e 044B     		ldr	r3, .L61
 929 0010 1B7E     		ldrb	r3, [r3, #24]
 930 0012 002B     		cmp	r3, #0
 931 0014 01D1     		bne	.L60
 683:main.c        ****     }
 932              		.loc 1 683 0 is_stmt 1
 933 0016 FFF7FEFF 		bl	PID_Initialize
 934              	.LVL68:
 935              	.L60:
 686:main.c        **** } 
 936              		.loc 1 686 0
 937 001a 014B     		ldr	r3, .L61
 938 001c 1C76     		strb	r4, [r3, #24]
 687:main.c        **** 
 939              		.loc 1 687 0
 940              		@ sp needed
 941              	.LVL69:
 942 001e 10BD     		pop	{r4, pc}
 943              	.L62:
 944              		.align	2
 945              	.L61:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 41


 946 0020 00000000 		.word	.LANCHOR1
 947              		.cfi_endproc
 948              	.LFE39:
 949              		.size	PID_SetMode, .-PID_SetMode
 950              		.section	.text.runRateGroup1_PID,"ax",%progbits
 951              		.align	2
 952              		.global	runRateGroup1_PID
 953              		.code	16
 954              		.thumb_func
 955              		.type	runRateGroup1_PID, %function
 956              	runRateGroup1_PID:
 957              	.LFB40:
 699:main.c        ****      
 958              		.loc 1 699 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 10B5     		push	{r4, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 4, -8
 965              		.cfi_offset 14, -4
 709:main.c        ****         
 966              		.loc 1 709 0
 967 0002 4F4B     		ldr	r3, .L78
 968 0004 1B68     		ldr	r3, [r3]
 969 0006 0133     		adds	r3, r3, #1
 970 0008 0024     		movs	r4, #0
 971 000a 4E4A     		ldr	r2, .L78+4
 972 000c 1068     		ldr	r0, [r2]
 973 000e 5168     		ldr	r1, [r2, #4]
 974 0010 0029     		cmp	r1, #0
 975 0012 03D1     		bne	.L77
 976 0014 A142     		cmp	r1, r4
 977 0016 0BD1     		bne	.L64
 978 0018 9842     		cmp	r0, r3
 979 001a 09D9     		bls	.L64
 980              	.L77:
 712:main.c        ****         PID_Enabled = false;
 981              		.loc 1 712 0
 982 001c C820     		movs	r0, #200
 983 001e 8000     		lsls	r0, r0, #2
 984 0020 FFF7FEFF 		bl	PWM_Set
 985              	.LVL70:
 713:main.c        ****         
 986              		.loc 1 713 0
 987 0024 0023     		movs	r3, #0
 988 0026 484A     		ldr	r2, .L78+8
 989 0028 1370     		strb	r3, [r2]
 717:main.c        **** 
 990              		.loc 1 717 0
 991 002a 484A     		ldr	r2, .L78+12
 992 002c 1370     		strb	r3, [r2]
 993 002e 85E0     		b	.L63
 994              	.L64:
 720:main.c        ****         
 995              		.loc 1 720 0
 996 0030 474B     		ldr	r3, .L78+16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 42


 997 0032 1B78     		ldrb	r3, [r3]
 998 0034 022B     		cmp	r3, #2
 999 0036 7DD1     		bne	.L67
 724:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1000              		.loc 1 724 0
 1001 0038 0620     		movs	r0, #6
 1002 003a FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1003              	.LVL71:
 725:main.c        **** 
 1004              		.loc 1 725 0
 1005 003e 0620     		movs	r0, #6
 1006 0040 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1007              	.LVL72:
 728:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1008              		.loc 1 728 0
 1009 0044 434B     		ldr	r3, .L78+20
 1010 0046 1B78     		ldrb	r3, [r3]
 1011 0048 002B     		cmp	r3, #0
 1012 004a 07D1     		bne	.L68
 728:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1013              		.loc 1 728 0 is_stmt 0 discriminator 1
 1014 004c 3E4A     		ldr	r2, .L78+8
 1015 004e 1278     		ldrb	r2, [r2]
 1016 0050 002A     		cmp	r2, #0
 1017 0052 03D0     		beq	.L68
 729:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 1018              		.loc 1 729 0 is_stmt 1
 1019 0054 0120     		movs	r0, #1
 1020 0056 FFF7FEFF 		bl	PID_SetMode
 1021              	.LVL73:
 1022 005a 08E0     		b	.L69
 1023              	.L68:
 730:main.c        ****             PID_SetMode(PID_MANUAL);                
 1024              		.loc 1 730 0
 1025 005c 3A4A     		ldr	r2, .L78+8
 1026 005e 1278     		ldrb	r2, [r2]
 1027 0060 002A     		cmp	r2, #0
 1028 0062 04D1     		bne	.L69
 730:main.c        ****             PID_SetMode(PID_MANUAL);                
 1029              		.loc 1 730 0 is_stmt 0 discriminator 1
 1030 0064 002B     		cmp	r3, #0
 1031 0066 02D0     		beq	.L69
 731:main.c        ****         } else {
 1032              		.loc 1 731 0 is_stmt 1
 1033 0068 0020     		movs	r0, #0
 1034 006a FFF7FEFF 		bl	PID_SetMode
 1035              	.LVL74:
 1036              	.L69:
 737:main.c        ****         
 1037              		.loc 1 737 0
 1038 006e 364B     		ldr	r3, .L78+8
 1039 0070 1B78     		ldrb	r3, [r3]
 1040 0072 384A     		ldr	r2, .L78+20
 1041 0074 1370     		strb	r3, [r2]
 752:main.c        ****             
 1042              		.loc 1 752 0
 1043 0076 002B     		cmp	r3, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 43


 1044 0078 51D0     		beq	.L70
 754:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 1045              		.loc 1 754 0
 1046 007a 374B     		ldr	r3, .L78+24
 1047 007c 1B78     		ldrb	r3, [r3]
 1048 007e 002B     		cmp	r3, #0
 1049 0080 04D1     		bne	.L71
 755:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1050              		.loc 1 755 0
 1051 0082 364B     		ldr	r3, .L78+28
 1052 0084 1A68     		ldr	r2, [r3]
 1053 0086 364B     		ldr	r3, .L78+32
 1054 0088 1A60     		str	r2, [r3]
 1055 008a 16E0     		b	.L72
 1056              	.L71:
 756:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 1057              		.loc 1 756 0
 1058 008c 344A     		ldr	r2, .L78+32
 1059 008e 1168     		ldr	r1, [r2]
 1060 0090 324A     		ldr	r2, .L78+28
 1061 0092 1068     		ldr	r0, [r2]
 1062 0094 0A1A     		subs	r2, r1, r0
 1063 0096 D417     		asrs	r4, r2, #31
 1064 0098 1219     		adds	r2, r2, r4
 1065 009a 6240     		eors	r2, r4
 1066 009c 5C00     		lsls	r4, r3, #1
 1067 009e A242     		cmp	r2, r4
 1068 00a0 02DC     		bgt	.L73
 757:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1069              		.loc 1 757 0
 1070 00a2 2F4B     		ldr	r3, .L78+32
 1071 00a4 1860     		str	r0, [r3]
 1072 00a6 08E0     		b	.L72
 1073              	.L73:
 758:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1074              		.loc 1 758 0
 1075 00a8 8142     		cmp	r1, r0
 1076 00aa 03DA     		bge	.L74
 759:main.c        ****             } else {
 1077              		.loc 1 759 0
 1078 00ac CB18     		adds	r3, r1, r3
 1079 00ae 2C4A     		ldr	r2, .L78+32
 1080 00b0 1360     		str	r3, [r2]
 1081 00b2 02E0     		b	.L72
 1082              	.L74:
 761:main.c        ****             }
 1083              		.loc 1 761 0
 1084 00b4 CB1A     		subs	r3, r1, r3
 1085 00b6 2A4A     		ldr	r2, .L78+32
 1086 00b8 1360     		str	r3, [r2]
 1087              	.L72:
 765:main.c        ****             
 1088              		.loc 1 765 0
 1089 00ba FFF7FEFF 		bl	GetPosition
 1090              	.LVL75:
 1091 00be 294B     		ldr	r3, .L78+36
 1092 00c0 1860     		str	r0, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 44


 768:main.c        ****             
 1093              		.loc 1 768 0
 1094 00c2 1968     		ldr	r1, [r3]
 1095 00c4 264B     		ldr	r3, .L78+32
 1096 00c6 1868     		ldr	r0, [r3]
 1097 00c8 FFF7FEFF 		bl	PID_UpdateValues
 1098              	.LVL76:
 1099 00cc 264B     		ldr	r3, .L78+40
 1100 00ce 1860     		str	r0, [r3]
 771:main.c        ****             
 1101              		.loc 1 771 0
 1102 00d0 1868     		ldr	r0, [r3]
 1103 00d2 FFF7FEFF 		bl	PWM_Set
 1104              	.LVL77:
 774:main.c        ****                 
 1105              		.loc 1 774 0
 1106 00d6 1B4B     		ldr	r3, .L78+4
 1107 00d8 1B7C     		ldrb	r3, [r3, #16]
 1108 00da 002B     		cmp	r3, #0
 1109 00dc 2ED0     		beq	.L63
 776:main.c        ****                     
 1110              		.loc 1 776 0
 1111 00de 214B     		ldr	r3, .L78+36
 1112 00e0 1A68     		ldr	r2, [r3]
 1113 00e2 1E4B     		ldr	r3, .L78+28
 1114 00e4 1B68     		ldr	r3, [r3]
 1115 00e6 9A42     		cmp	r2, r3
 1116 00e8 15D1     		bne	.L75
 781:main.c        ****                         
 1117              		.loc 1 781 0
 1118 00ea 164B     		ldr	r3, .L78+4
 1119 00ec 5B8B     		ldrh	r3, [r3, #26]
 1120 00ee 1E2B     		cmp	r3, #30
 1121 00f0 07D1     		bne	.L76
 785:main.c        ****                         
 1122              		.loc 1 785 0
 1123 00f2 144B     		ldr	r3, .L78+4
 1124 00f4 DA69     		ldr	r2, [r3, #28]
 1125 00f6 196A     		ldr	r1, [r3, #32]
 1126 00f8 521A     		subs	r2, r2, r1
 1127 00fa 5A61     		str	r2, [r3, #20]
 788:main.c        ****                         
 1128              		.loc 1 788 0
 1129 00fc 0022     		movs	r2, #0
 1130 00fe 1A74     		strb	r2, [r3, #16]
 1131 0100 1CE0     		b	.L63
 1132              	.L76:
 794:main.c        **** 
 1133              		.loc 1 794 0
 1134 0102 0133     		adds	r3, r3, #1
 1135 0104 9BB2     		uxth	r3, r3
 1136 0106 0F4A     		ldr	r2, .L78+4
 1137 0108 5383     		strh	r3, [r2, #26]
 799:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 1138              		.loc 1 799 0
 1139 010a 012B     		cmp	r3, #1
 1140 010c 16D1     		bne	.L63
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 45


 800:main.c        ****                         }                    
 1141              		.loc 1 800 0
 1142 010e 906A     		ldr	r0, [r2, #40]
 1143 0110 D16A     		ldr	r1, [r2, #44]
 1144 0112 D061     		str	r0, [r2, #28]
 1145 0114 12E0     		b	.L63
 1146              	.L75:
 807:main.c        ****                 }
 1147              		.loc 1 807 0
 1148 0116 0022     		movs	r2, #0
 1149 0118 0A4B     		ldr	r3, .L78+4
 1150 011a 5A83     		strh	r2, [r3, #26]
 1151 011c 0EE0     		b	.L63
 1152              	.L70:
 816:main.c        ****             
 1153              		.loc 1 816 0
 1154 011e 0B4B     		ldr	r3, .L78+12
 1155 0120 1B78     		ldrb	r3, [r3]
 1156 0122 5BB2     		sxtb	r3, r3
 1157 0124 6433     		adds	r3, r3, #100
 1158 0126 DB00     		lsls	r3, r3, #3
 1159 0128 0F4A     		ldr	r2, .L78+40
 1160 012a 1360     		str	r3, [r2]
 819:main.c        ****         }        
 1161              		.loc 1 819 0
 1162 012c 1068     		ldr	r0, [r2]
 1163 012e FFF7FEFF 		bl	PWM_Set
 1164              	.LVL78:
 1165 0132 03E0     		b	.L63
 1166              	.L67:
 825:main.c        ****     }
 1167              		.loc 1 825 0
 1168 0134 C820     		movs	r0, #200
 1169 0136 8000     		lsls	r0, r0, #2
 1170 0138 FFF7FEFF 		bl	PWM_Set
 1171              	.LVL79:
 1172              	.L63:
 827:main.c        **** 
 1173              		.loc 1 827 0
 1174              		@ sp needed
 1175 013c 10BD     		pop	{r4, pc}
 1176              	.L79:
 1177 013e C046     		.align	2
 1178              	.L78:
 1179 0140 00000000 		.word	LastMessageTimeSeconds
 1180 0144 00000000 		.word	.LANCHOR1
 1181 0148 00000000 		.word	PID_Enabled
 1182 014c 00000000 		.word	Jog
 1183 0150 00000000 		.word	ConfigState
 1184 0154 00000000 		.word	PID_Was_Enabled
 1185 0158 00000000 		.word	PID_EffSetDelta
 1186 015c 00000000 		.word	PID_Setpoint
 1187 0160 00000000 		.word	PID_EffectiveSetpoint
 1188 0164 00000000 		.word	Position
 1189 0168 00000000 		.word	Output
 1190              		.cfi_endproc
 1191              	.LFE40:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 46


 1192              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1193              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1194              		.align	2
 1195              		.global	BRMS_Interrupt
 1196              		.code	16
 1197              		.thumb_func
 1198              		.type	BRMS_Interrupt, %function
 1199              	BRMS_Interrupt:
 1200              	.LFB42:
1021:main.c        ****     
 1201              		.loc 1 1021 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205 0000 70B5     		push	{r4, r5, r6, lr}
 1206              		.cfi_def_cfa_offset 16
 1207              		.cfi_offset 4, -16
 1208              		.cfi_offset 5, -12
 1209              		.cfi_offset 6, -8
 1210              		.cfi_offset 14, -4
1032:main.c        **** 
 1211              		.loc 1 1032 0
 1212 0002 0220     		movs	r0, #2
 1213 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
 1214              	.LVL80:
1034:main.c        ****     
 1215              		.loc 1 1034 0
 1216 0008 0120     		movs	r0, #1
 1217 000a FFF7FEFF 		bl	PROBE_Write
 1218              	.LVL81:
1037:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 1219              		.loc 1 1037 0
 1220 000e 2A4B     		ldr	r3, .L89
 1221 0010 9C6A     		ldr	r4, [r3, #40]
 1222 0012 DD6A     		ldr	r5, [r3, #44]
 1223 0014 C820     		movs	r0, #200
 1224 0016 0021     		movs	r1, #0
 1225 0018 2418     		adds	r4, r4, r0
 1226 001a 4D41     		adcs	r5, r5, r1
 1227 001c 9C62     		str	r4, [r3, #40]
 1228 001e DD62     		str	r5, [r3, #44]
1038:main.c        ****     
 1229              		.loc 1 1038 0
 1230 0020 1C6B     		ldr	r4, [r3, #48]
 1231 0022 5D6B     		ldr	r5, [r3, #52]
 1232 0024 0019     		adds	r0, r0, r4
 1233 0026 6941     		adcs	r1, r1, r5
 1234 0028 1863     		str	r0, [r3, #48]
 1235 002a 5963     		str	r1, [r3, #52]
1041:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1236              		.loc 1 1041 0
 1237 002c 196B     		ldr	r1, [r3, #48]
 1238 002e 5A6B     		ldr	r2, [r3, #52]
 1239 0030 002A     		cmp	r2, #0
 1240 0032 04D1     		bne	.L87
 1241 0034 16D1     		bne	.L81
 1242 0036 FA23     		movs	r3, #250
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 47


 1243 0038 9B00     		lsls	r3, r3, #2
 1244 003a 9942     		cmp	r1, r3
 1245 003c 12D9     		bls	.L81
 1246              	.L87:
1042:main.c        ****         UptimeMilliseconds += 1;
 1247              		.loc 1 1042 0
 1248 003e 1E4B     		ldr	r3, .L89
 1249 0040 0020     		movs	r0, #0
 1250 0042 0021     		movs	r1, #0
 1251 0044 1863     		str	r0, [r3, #48]
 1252 0046 5963     		str	r1, [r3, #52]
1043:main.c        ****         UptimeMillisecondsAccumulator += 1;
 1253              		.loc 1 1043 0
 1254 0048 9C6B     		ldr	r4, [r3, #56]
 1255 004a DD6B     		ldr	r5, [r3, #60]
 1256 004c 0120     		movs	r0, #1
 1257 004e 0021     		movs	r1, #0
 1258 0050 2418     		adds	r4, r4, r0
 1259 0052 4D41     		adcs	r5, r5, r1
 1260 0054 9C63     		str	r4, [r3, #56]
 1261 0056 DD63     		str	r5, [r3, #60]
1044:main.c        ****     }
 1262              		.loc 1 1044 0
 1263 0058 1C6C     		ldr	r4, [r3, #64]
 1264 005a 5D6C     		ldr	r5, [r3, #68]
 1265 005c 0019     		adds	r0, r0, r4
 1266 005e 6941     		adcs	r1, r1, r5
 1267 0060 1864     		str	r0, [r3, #64]
 1268 0062 5964     		str	r1, [r3, #68]
 1269              	.L81:
1048:main.c        ****         UptimeMillisecondsAccumulator = 0;
 1270              		.loc 1 1048 0
 1271 0064 144B     		ldr	r3, .L89
 1272 0066 196C     		ldr	r1, [r3, #64]
 1273 0068 5A6C     		ldr	r2, [r3, #68]
 1274 006a 002A     		cmp	r2, #0
 1275 006c 04D1     		bne	.L88
 1276 006e 10D1     		bne	.L83
 1277 0070 FA23     		movs	r3, #250
 1278 0072 9B00     		lsls	r3, r3, #2
 1279 0074 9942     		cmp	r1, r3
 1280 0076 0CD9     		bls	.L83
 1281              	.L88:
1049:main.c        ****         UptimeSeconds += 1;
 1282              		.loc 1 1049 0
 1283 0078 0F4B     		ldr	r3, .L89
 1284 007a 0020     		movs	r0, #0
 1285 007c 0021     		movs	r1, #0
 1286 007e 1864     		str	r0, [r3, #64]
 1287 0080 5964     		str	r1, [r3, #68]
1050:main.c        ****     }
 1288              		.loc 1 1050 0
 1289 0082 1C68     		ldr	r4, [r3]
 1290 0084 5D68     		ldr	r5, [r3, #4]
 1291 0086 0120     		movs	r0, #1
 1292 0088 0021     		movs	r1, #0
 1293 008a 0019     		adds	r0, r0, r4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 48


 1294 008c 6941     		adcs	r1, r1, r5
 1295 008e 1860     		str	r0, [r3]
 1296 0090 5960     		str	r1, [r3, #4]
 1297              	.L83:
1054:main.c        **** 
 1298              		.loc 1 1054 0
 1299 0092 094A     		ldr	r2, .L89
 1300 0094 936C     		ldr	r3, [r2, #72]
 1301 0096 0133     		adds	r3, r3, #1
 1302 0098 9364     		str	r3, [r2, #72]
1074:main.c        ****         
 1303              		.loc 1 1074 0
 1304 009a DA07     		lsls	r2, r3, #31
 1305 009c 02D5     		bpl	.L85
1079:main.c        ****         
 1306              		.loc 1 1079 0
 1307 009e FFF7FEFF 		bl	runRateGroup1_PID
 1308              	.LVL82:
 1309 00a2 05E0     		b	.L86
 1310              	.L85:
1081:main.c        ****         
 1311              		.loc 1 1081 0
 1312 00a4 9A07     		lsls	r2, r3, #30
 1313 00a6 03D4     		bmi	.L86
1086:main.c        ****         
 1314              		.loc 1 1086 0
 1315 00a8 5B07     		lsls	r3, r3, #29
 1316 00aa 01D5     		bpl	.L86
1089:main.c        ****         
 1317              		.loc 1 1089 0
 1318 00ac FFF7FEFF 		bl	runRateGroup3_SPI
 1319              	.LVL83:
 1320              	.L86:
1102:main.c        ****    
 1321              		.loc 1 1102 0
 1322 00b0 0020     		movs	r0, #0
 1323 00b2 FFF7FEFF 		bl	PROBE_Write
 1324              	.LVL84:
1104:main.c        **** 
 1325              		.loc 1 1104 0
 1326              		@ sp needed
 1327 00b6 70BD     		pop	{r4, r5, r6, pc}
 1328              	.L90:
 1329              		.align	2
 1330              	.L89:
 1331 00b8 00000000 		.word	.LANCHOR1
 1332              		.cfi_endproc
 1333              	.LFE42:
 1334              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1335              		.section	.text.main,"ax",%progbits
 1336              		.align	2
 1337              		.global	main
 1338              		.code	16
 1339              		.thumb_func
 1340              		.type	main, %function
 1341              	main:
 1342              	.LFB41:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 49


 839:main.c        ****     
 1343              		.loc 1 839 0
 1344              		.cfi_startproc
 1345              		@ Volatile: function does not return.
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348 0000 70B5     		push	{r4, r5, r6, lr}
 1349              		.cfi_def_cfa_offset 16
 1350              		.cfi_offset 4, -16
 1351              		.cfi_offset 5, -12
 1352              		.cfi_offset 6, -8
 1353              		.cfi_offset 14, -4
 847:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1354              		.loc 1 847 0
 1355 0002 0120     		movs	r0, #1
 1356 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1357              	.LVL85:
 848:main.c        **** 
 1358              		.loc 1 848 0
 1359 0008 0120     		movs	r0, #1
 1360 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1361              	.LVL86:
 856:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1362              		.loc 1 856 0
 1363 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1364              	.LVL87:
 857:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1365              		.loc 1 857 0
 1366 0012 3648     		ldr	r0, .L96
 1367 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1368              	.LVL88:
 858:main.c        **** 
 1369              		.loc 1 858 0
 1370 0018 0220     		movs	r0, #2
 1371 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1372              	.LVL89:
 861:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1373              		.loc 1 861 0
 1374 001e 3448     		ldr	r0, .L96+4
 1375 0020 FFF7FEFF 		bl	isr_home_StartEx
 1376              	.LVL90:
 862:main.c        **** 
 1377              		.loc 1 862 0
 1378 0024 0320     		movs	r0, #3
 1379 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1380              	.LVL91:
 865:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1381              		.loc 1 865 0
 1382 002a 3248     		ldr	r0, .L96+8
 1383 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1384              	.LVL92:
 866:main.c        ****     
 1385              		.loc 1 866 0
 1386 0030 0320     		movs	r0, #3
 1387 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1388              	.LVL93:
 869:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 50


 1389              		.loc 1 869 0
 1390 0036 3048     		ldr	r0, .L96+12
 1391 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1392              	.LVL94:
 870:main.c        **** 
 1393              		.loc 1 870 0
 1394 003c 0320     		movs	r0, #3
 1395 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1396              	.LVL95:
 873:main.c        ****     
 1397              		.loc 1 873 0
 1398              		.syntax divided
 1399              	@ 873 "main.c" 1
 1400 0042 62B6     		CPSIE   i
 1401              	@ 0 "" 2
 902:main.c        ****     
 1402              		.loc 1 902 0
 1403              		.thumb
 1404              		.syntax unified
 1405 0044 FFF7FEFF 		bl	I2C_Start
 1406              	.LVL96:
 907:main.c        ****     SPI_1_Start();
 1407              		.loc 1 907 0
 1408 0048 6420     		movs	r0, #100
 1409 004a FFF7FEFF 		bl	CyDelay
 1410              	.LVL97:
 908:main.c        ****     
 1411              		.loc 1 908 0
 1412 004e FFF7FEFF 		bl	SPI_1_Start
 1413              	.LVL98:
 912:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1414              		.loc 1 912 0
 1415 0052 FFF7FEFF 		bl	PWM_1_Start
 1416              	.LVL99:
 913:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 1417              		.loc 1 913 0
 1418 0056 C820     		movs	r0, #200
 1419 0058 C000     		lsls	r0, r0, #3
 1420 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1421              	.LVL100:
 914:main.c        ****     
 1422              		.loc 1 914 0
 1423 005e C825     		movs	r5, #200
 1424 0060 AD00     		lsls	r5, r5, #2
 1425 0062 2800     		movs	r0, r5
 1426 0064 FFF7FEFF 		bl	PWM_Set
 1427              	.LVL101:
 917:main.c        ****     
 1428              		.loc 1 917 0
 1429 0068 0024     		movs	r4, #0
 1430 006a 244B     		ldr	r3, .L96+16
 1431 006c 1C70     		strb	r4, [r3]
 920:main.c        ****    
 1432              		.loc 1 920 0
 1433 006e 244B     		ldr	r3, .L96+20
 1434 0070 1C70     		strb	r4, [r3]
 923:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 51


 1435              		.loc 1 923 0
 1436 0072 FFF7FEFF 		bl	Counter_1_Start
 1437              	.LVL102:
 924:main.c        ****     LastPosition = ENCODER_MAX;
 1438              		.loc 1 924 0
 1439 0076 234E     		ldr	r6, .L96+24
 1440 0078 3000     		movs	r0, r6
 1441 007a FFF7FEFF 		bl	Counter_1_WriteCounter
 1442              	.LVL103:
 925:main.c        ****     
 1443              		.loc 1 925 0
 1444 007e 224B     		ldr	r3, .L96+28
 1445 0080 1E60     		str	r6, [r3]
 928:main.c        ****     Index_Counter_1_WriteCounter(0);
 1446              		.loc 1 928 0
 1447 0082 FFF7FEFF 		bl	Index_Counter_1_Start
 1448              	.LVL104:
 929:main.c        ****      
 1449              		.loc 1 929 0
 1450 0086 0020     		movs	r0, #0
 1451 0088 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1452              	.LVL105:
 932:main.c        ****     ConfigSequence = 0;
 1453              		.loc 1 932 0
 1454 008c 0122     		movs	r2, #1
 1455 008e 1F4B     		ldr	r3, .L96+32
 1456 0090 1A70     		strb	r2, [r3]
 933:main.c        ****     ChecksumErrors = 0;
 1457              		.loc 1 933 0
 1458 0092 1F4B     		ldr	r3, .L96+36
 1459 0094 1C70     		strb	r4, [r3]
 934:main.c        ****     
 1460              		.loc 1 934 0
 1461 0096 1F4B     		ldr	r3, .L96+40
 1462 0098 1C80     		strh	r4, [r3]
 938:main.c        ****     PID_SetMode(PID_MANUAL);
 1463              		.loc 1 938 0
 1464 009a FFF7FEFF 		bl	PID_Initialize
 1465              	.LVL106:
 939:main.c        ****     
 1466              		.loc 1 939 0
 1467 009e 0020     		movs	r0, #0
 1468 00a0 FFF7FEFF 		bl	PID_SetMode
 1469              	.LVL107:
 942:main.c        ****     limitIterm = 800;
 1470              		.loc 1 942 0
 1471 00a4 1C4B     		ldr	r3, .L96+44
 1472 00a6 1D80     		strh	r5, [r3]
 943:main.c        ****     
 1473              		.loc 1 943 0
 1474 00a8 1C4B     		ldr	r3, .L96+48
 1475 00aa 1D80     		strh	r5, [r3]
 946:main.c        ****     PID_EffectiveSetpoint = 0;
 1476              		.loc 1 946 0
 1477 00ac 1C4B     		ldr	r3, .L96+52
 1478 00ae 1C60     		str	r4, [r3]
 947:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 52


 1479              		.loc 1 947 0
 1480 00b0 1C4B     		ldr	r3, .L96+56
 1481 00b2 1C60     		str	r4, [r3]
 948:main.c        ****     PID_Was_Enabled       = false;
 1482              		.loc 1 948 0
 1483 00b4 FA22     		movs	r2, #250
 1484 00b6 1C4B     		ldr	r3, .L96+60
 1485 00b8 1A70     		strb	r2, [r3]
 949:main.c        ****     PID_Enabled           = false;
 1486              		.loc 1 949 0
 1487 00ba 1C4B     		ldr	r3, .L96+64
 1488 00bc 0022     		movs	r2, #0
 1489 00be 1A70     		strb	r2, [r3]
 950:main.c        ****     PWM_Set(PWM_NEUTRAL);
 1490              		.loc 1 950 0
 1491 00c0 1B4B     		ldr	r3, .L96+68
 1492 00c2 1A70     		strb	r2, [r3]
 951:main.c        ****   
 1493              		.loc 1 951 0
 1494 00c4 2800     		movs	r0, r5
 1495 00c6 FFF7FEFF 		bl	PWM_Set
 1496              	.LVL108:
 1497              	.L95:
 984:main.c        ****             LED_Write(1);
 1498              		.loc 1 984 0
 1499 00ca 1A4B     		ldr	r3, .L96+72
 1500 00cc 1A68     		ldr	r2, [r3]
 1501 00ce 5B68     		ldr	r3, [r3, #4]
 1502 00d0 0123     		movs	r3, #1
 1503 00d2 1342     		tst	r3, r2
 1504 00d4 03D0     		beq	.L92
 985:main.c        ****         } else {
 1505              		.loc 1 985 0
 1506 00d6 0120     		movs	r0, #1
 1507 00d8 FFF7FEFF 		bl	LED_Write
 1508              	.LVL109:
 1509 00dc 02E0     		b	.L94
 1510              	.L92:
 987:main.c        ****         } 
 1511              		.loc 1 987 0
 1512 00de 0020     		movs	r0, #0
 1513 00e0 FFF7FEFF 		bl	LED_Write
 1514              	.LVL110:
 1515              	.L94:
 991:main.c        ****         
 1516              		.loc 1 991 0
 1517 00e4 0A20     		movs	r0, #10
 1518 00e6 FFF7FEFF 		bl	CyDelay
 1519              	.LVL111:
1002:main.c        ****       
 1520              		.loc 1 1002 0
 1521 00ea EEE7     		b	.L95
 1522              	.L97:
 1523              		.align	2
 1524              	.L96:
 1525 00ec 00000000 		.word	BRMS_Interrupt
 1526 00f0 00000000 		.word	HomeIsrHandler
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 53


 1527 00f4 00000000 		.word	RSTIsrHandler
 1528 00f8 00000000 		.word	SPI_SS_IsrHandler
 1529 00fc 00000000 		.word	Jog
 1530 0100 00000000 		.word	.LANCHOR0
 1531 0104 FFFFFF00 		.word	16777215
 1532 0108 00000000 		.word	LastPosition
 1533 010c 00000000 		.word	ConfigState
 1534 0110 00000000 		.word	ConfigSequence
 1535 0114 00000000 		.word	ChecksumErrors
 1536 0118 00000000 		.word	limitOutput
 1537 011c 00000000 		.word	limitIterm
 1538 0120 00000000 		.word	PID_Setpoint
 1539 0124 00000000 		.word	PID_EffectiveSetpoint
 1540 0128 00000000 		.word	PID_EffSetDelta
 1541 012c 00000000 		.word	PID_Was_Enabled
 1542 0130 00000000 		.word	PID_Enabled
 1543 0134 00000000 		.word	.LANCHOR1
 1544              		.cfi_endproc
 1545              	.LFE41:
 1546              		.size	main, .-main
 1547              		.comm	txMessageState,1,1
 1548              		.comm	txMessage,27,4
 1549              		.comm	rxMessage,27,4
 1550              		.comm	LastMessageTimeSeconds,4,4
 1551              		.comm	CurrentI2Cinbuf,20,4
 1552              		.comm	MotorCurrent,2,2
 1553              		.comm	ChecksumErrors,2,2
 1554              		.comm	ConfigSequence,1,1
 1555              		.comm	FaultState,1,1
 1556              		.comm	ConfigState,1,1
 1557              		.global	UptimeSeconds
 1558              		.global	UptimeMillisecondsAccumulator
 1559              		.global	UptimeMilliseconds
 1560              		.global	UptimeMicrosecondsAccumulator
 1561              		.global	UptimeMicroseconds
 1562              		.global	NewCommandedMove
 1563              		.global	LastMoveTimeUsec
 1564              		.global	LastMoveStableCount
 1565              		.global	LastMoveEndTimeUsec
 1566              		.global	LastMoveStartTimeUsec
 1567              		.global	homingDone
 1568              		.comm	limitIterm,2,2
 1569              		.comm	limitOutput,2,2
 1570              		.comm	Output,4,4
 1571              		.comm	LastPosition,4,4
 1572              		.comm	Position,4,4
 1573              		.comm	lastTime,4,4
 1574              		.comm	PID_EffSetDelta,1,1
 1575              		.comm	PID_EffectiveSetpoint,4,4
 1576              		.comm	PID_Setpoint,4,4
 1577              		.comm	PID_Was_Enabled,1,1
 1578              		.comm	PID_Enabled,1,1
 1579              		.comm	Jog,1,1
 1580              		.global	inAuto
 1581              		.data
 1582              		.set	.LANCHOR0,. + 0
 1583              		.type	homingDone, %object
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 54


 1584              		.size	homingDone, 1
 1585              	homingDone:
 1586 0000 01       		.byte	1
 1587              		.bss
 1588              		.align	3
 1589              		.set	.LANCHOR1,. + 0
 1590              		.type	UptimeSeconds, %object
 1591              		.size	UptimeSeconds, 8
 1592              	UptimeSeconds:
 1593 0000 00000000 		.space	8
 1593      00000000 
 1594              		.type	RawPosition.7275, %object
 1595              		.size	RawPosition.7275, 4
 1596              	RawPosition.7275:
 1597 0008 00000000 		.space	4
 1598              		.type	result.7276, %object
 1599              		.size	result.7276, 4
 1600              	result.7276:
 1601 000c 00000000 		.space	4
 1602              		.type	NewCommandedMove, %object
 1603              		.size	NewCommandedMove, 1
 1604              	NewCommandedMove:
 1605 0010 00       		.space	1
 1606 0011 000000   		.space	3
 1607              		.type	LastMoveTimeUsec, %object
 1608              		.size	LastMoveTimeUsec, 4
 1609              	LastMoveTimeUsec:
 1610 0014 00000000 		.space	4
 1611              		.type	inAuto, %object
 1612              		.size	inAuto, 1
 1613              	inAuto:
 1614 0018 00       		.space	1
 1615 0019 00       		.space	1
 1616              		.type	LastMoveStableCount, %object
 1617              		.size	LastMoveStableCount, 2
 1618              	LastMoveStableCount:
 1619 001a 0000     		.space	2
 1620              		.type	LastMoveEndTimeUsec, %object
 1621              		.size	LastMoveEndTimeUsec, 4
 1622              	LastMoveEndTimeUsec:
 1623 001c 00000000 		.space	4
 1624              		.type	LastMoveStartTimeUsec, %object
 1625              		.size	LastMoveStartTimeUsec, 4
 1626              	LastMoveStartTimeUsec:
 1627 0020 00000000 		.space	4
 1628 0024 00000000 		.space	4
 1629              		.type	UptimeMicroseconds, %object
 1630              		.size	UptimeMicroseconds, 8
 1631              	UptimeMicroseconds:
 1632 0028 00000000 		.space	8
 1632      00000000 
 1633              		.type	UptimeMicrosecondsAccumulator, %object
 1634              		.size	UptimeMicrosecondsAccumulator, 8
 1635              	UptimeMicrosecondsAccumulator:
 1636 0030 00000000 		.space	8
 1636      00000000 
 1637              		.type	UptimeMilliseconds, %object
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 55


 1638              		.size	UptimeMilliseconds, 8
 1639              	UptimeMilliseconds:
 1640 0038 00000000 		.space	8
 1640      00000000 
 1641              		.type	UptimeMillisecondsAccumulator, %object
 1642              		.size	UptimeMillisecondsAccumulator, 8
 1643              	UptimeMillisecondsAccumulator:
 1644 0040 00000000 		.space	8
 1644      00000000 
 1645              		.type	brmsTask.7294, %object
 1646              		.size	brmsTask.7294, 4
 1647              	brmsTask.7294:
 1648 0048 00000000 		.space	4
 1649              		.text
 1650              	.Letext0:
 1651              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1652              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1653              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1654              		.file 5 "pid.h"
 1655              		.file 6 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1656              		.file 7 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1657              		.file 8 "Generated_Source\\PSoC4/Counter_1.h"
 1658              		.file 9 "Generated_Source\\PSoC4/Index_Counter_1.h"
 1659              		.file 10 "Generated_Source\\PSoC4/isr_home.h"
 1660              		.file 11 "Generated_Source\\PSoC4/HOME_IN.h"
 1661              		.file 12 "Generated_Source\\PSoC4/spi_ss.h"
 1662              		.file 13 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1663              		.file 14 "INA219.h"
 1664              		.file 15 "Generated_Source\\PSoC4/PWM_1.h"
 1665              		.file 16 "Generated_Source\\PSoC4/HOME_OUT.h"
 1666              		.file 17 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1667              		.file 18 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1668              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 1669              		.file 20 "Generated_Source\\PSoC4/isr_brms.h"
 1670              		.file 21 "Generated_Source\\PSoC4/isr_spi_ss.h"
 1671              		.file 22 "Generated_Source\\PSoC4/I2C.h"
 1672              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1673              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1674              		.file 25 "Generated_Source\\PSoC4/LED.h"
 1675              		.section	.debug_info,"",%progbits
 1676              	.Ldebug_info0:
 1677 0000 B20F0000 		.4byte	0xfb2
 1678 0004 0400     		.2byte	0x4
 1679 0006 00000000 		.4byte	.Ldebug_abbrev0
 1680 000a 04       		.byte	0x4
 1681 000b 01       		.uleb128 0x1
 1682 000c 5A020000 		.4byte	.LASF180
 1683 0010 0C       		.byte	0xc
 1684 0011 12000000 		.4byte	.LASF181
 1685 0015 81050000 		.4byte	.LASF182
 1686 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1687 001d 00000000 		.4byte	0
 1688 0021 00000000 		.4byte	.Ldebug_line0
 1689 0025 02       		.uleb128 0x2
 1690 0026 4E060000 		.4byte	.LASF0
 1691 002a 02       		.byte	0x2
 1692 002b 1B       		.byte	0x1b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 56


 1693 002c 30000000 		.4byte	0x30
 1694 0030 03       		.uleb128 0x3
 1695 0031 01       		.byte	0x1
 1696 0032 06       		.byte	0x6
 1697 0033 79090000 		.4byte	.LASF2
 1698 0037 02       		.uleb128 0x2
 1699 0038 25080000 		.4byte	.LASF1
 1700 003c 02       		.byte	0x2
 1701 003d 1D       		.byte	0x1d
 1702 003e 42000000 		.4byte	0x42
 1703 0042 03       		.uleb128 0x3
 1704 0043 01       		.byte	0x1
 1705 0044 08       		.byte	0x8
 1706 0045 B6080000 		.4byte	.LASF3
 1707 0049 02       		.uleb128 0x2
 1708 004a 26050000 		.4byte	.LASF4
 1709 004e 02       		.byte	0x2
 1710 004f 29       		.byte	0x29
 1711 0050 54000000 		.4byte	0x54
 1712 0054 03       		.uleb128 0x3
 1713 0055 02       		.byte	0x2
 1714 0056 05       		.byte	0x5
 1715 0057 E7060000 		.4byte	.LASF5
 1716 005b 02       		.uleb128 0x2
 1717 005c 1E020000 		.4byte	.LASF6
 1718 0060 02       		.byte	0x2
 1719 0061 2B       		.byte	0x2b
 1720 0062 66000000 		.4byte	0x66
 1721 0066 03       		.uleb128 0x3
 1722 0067 02       		.byte	0x2
 1723 0068 07       		.byte	0x7
 1724 0069 85090000 		.4byte	.LASF7
 1725 006d 02       		.uleb128 0x2
 1726 006e CE000000 		.4byte	.LASF8
 1727 0072 02       		.byte	0x2
 1728 0073 3F       		.byte	0x3f
 1729 0074 78000000 		.4byte	0x78
 1730 0078 03       		.uleb128 0x3
 1731 0079 04       		.byte	0x4
 1732 007a 05       		.byte	0x5
 1733 007b 31070000 		.4byte	.LASF9
 1734 007f 02       		.uleb128 0x2
 1735 0080 C4080000 		.4byte	.LASF10
 1736 0084 02       		.byte	0x2
 1737 0085 41       		.byte	0x41
 1738 0086 8A000000 		.4byte	0x8a
 1739 008a 03       		.uleb128 0x3
 1740 008b 04       		.byte	0x4
 1741 008c 07       		.byte	0x7
 1742 008d 56080000 		.4byte	.LASF11
 1743 0091 03       		.uleb128 0x3
 1744 0092 08       		.byte	0x8
 1745 0093 05       		.byte	0x5
 1746 0094 DB040000 		.4byte	.LASF12
 1747 0098 02       		.uleb128 0x2
 1748 0099 3B030000 		.4byte	.LASF13
 1749 009d 02       		.byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 57


 1750 009e 5B       		.byte	0x5b
 1751 009f A3000000 		.4byte	0xa3
 1752 00a3 03       		.uleb128 0x3
 1753 00a4 08       		.byte	0x8
 1754 00a5 07       		.byte	0x7
 1755 00a6 E1010000 		.4byte	.LASF14
 1756 00aa 04       		.uleb128 0x4
 1757 00ab 04       		.byte	0x4
 1758 00ac 05       		.byte	0x5
 1759 00ad 696E7400 		.ascii	"int\000"
 1760 00b1 03       		.uleb128 0x3
 1761 00b2 04       		.byte	0x4
 1762 00b3 07       		.byte	0x7
 1763 00b4 87000000 		.4byte	.LASF15
 1764 00b8 02       		.uleb128 0x2
 1765 00b9 6F010000 		.4byte	.LASF16
 1766 00bd 03       		.byte	0x3
 1767 00be 14       		.byte	0x14
 1768 00bf 25000000 		.4byte	0x25
 1769 00c3 02       		.uleb128 0x2
 1770 00c4 48040000 		.4byte	.LASF17
 1771 00c8 03       		.byte	0x3
 1772 00c9 18       		.byte	0x18
 1773 00ca 37000000 		.4byte	0x37
 1774 00ce 02       		.uleb128 0x2
 1775 00cf D2010000 		.4byte	.LASF18
 1776 00d3 03       		.byte	0x3
 1777 00d4 20       		.byte	0x20
 1778 00d5 49000000 		.4byte	0x49
 1779 00d9 02       		.uleb128 0x2
 1780 00da A7060000 		.4byte	.LASF19
 1781 00de 03       		.byte	0x3
 1782 00df 24       		.byte	0x24
 1783 00e0 5B000000 		.4byte	0x5b
 1784 00e4 02       		.uleb128 0x2
 1785 00e5 68080000 		.4byte	.LASF20
 1786 00e9 03       		.byte	0x3
 1787 00ea 2C       		.byte	0x2c
 1788 00eb 6D000000 		.4byte	0x6d
 1789 00ef 02       		.uleb128 0x2
 1790 00f0 66010000 		.4byte	.LASF21
 1791 00f4 03       		.byte	0x3
 1792 00f5 30       		.byte	0x30
 1793 00f6 7F000000 		.4byte	0x7f
 1794 00fa 02       		.uleb128 0x2
 1795 00fb C4070000 		.4byte	.LASF22
 1796 00ff 03       		.byte	0x3
 1797 0100 3C       		.byte	0x3c
 1798 0101 98000000 		.4byte	0x98
 1799 0105 05       		.uleb128 0x5
 1800 0106 C3050000 		.4byte	.LASF23
 1801 010a 04       		.byte	0x4
 1802 010b FE01     		.2byte	0x1fe
 1803 010d 8A000000 		.4byte	0x8a
 1804 0111 03       		.uleb128 0x3
 1805 0112 04       		.byte	0x4
 1806 0113 04       		.byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 58


 1807 0114 A9010000 		.4byte	.LASF24
 1808 0118 03       		.uleb128 0x3
 1809 0119 08       		.byte	0x8
 1810 011a 04       		.byte	0x4
 1811 011b B2090000 		.4byte	.LASF25
 1812 011f 03       		.uleb128 0x3
 1813 0120 01       		.byte	0x1
 1814 0121 08       		.byte	0x8
 1815 0122 D3030000 		.4byte	.LASF26
 1816 0126 05       		.uleb128 0x5
 1817 0127 B0060000 		.4byte	.LASF27
 1818 012b 04       		.byte	0x4
 1819 012c A802     		.2byte	0x2a8
 1820 012e 32010000 		.4byte	0x132
 1821 0132 06       		.uleb128 0x6
 1822 0133 05010000 		.4byte	0x105
 1823 0137 03       		.uleb128 0x3
 1824 0138 08       		.byte	0x8
 1825 0139 04       		.byte	0x4
 1826 013a 8D060000 		.4byte	.LASF28
 1827 013e 03       		.uleb128 0x3
 1828 013f 04       		.byte	0x4
 1829 0140 07       		.byte	0x7
 1830 0141 4D080000 		.4byte	.LASF29
 1831 0145 06       		.uleb128 0x6
 1832 0146 EF000000 		.4byte	0xef
 1833 014a 07       		.uleb128 0x7
 1834 014b 01       		.byte	0x1
 1835 014c 42000000 		.4byte	0x42
 1836 0150 01       		.byte	0x1
 1837 0151 9B       		.byte	0x9b
 1838 0152 6F010000 		.4byte	0x16f
 1839 0156 08       		.uleb128 0x8
 1840 0157 B6060000 		.4byte	.LASF30
 1841 015b 00       		.byte	0
 1842 015c 08       		.uleb128 0x8
 1843 015d 74000000 		.4byte	.LASF31
 1844 0161 01       		.byte	0x1
 1845 0162 08       		.uleb128 0x8
 1846 0163 43010000 		.4byte	.LASF32
 1847 0167 02       		.byte	0x2
 1848 0168 08       		.uleb128 0x8
 1849 0169 3A070000 		.4byte	.LASF33
 1850 016d 03       		.byte	0x3
 1851 016e 00       		.byte	0
 1852 016f 02       		.uleb128 0x2
 1853 0170 57060000 		.4byte	.LASF34
 1854 0174 01       		.byte	0x1
 1855 0175 A0       		.byte	0xa0
 1856 0176 4A010000 		.4byte	0x14a
 1857 017a 07       		.uleb128 0x7
 1858 017b 01       		.byte	0x1
 1859 017c 42000000 		.4byte	0x42
 1860 0180 01       		.byte	0x1
 1861 0181 A5       		.byte	0xa5
 1862 0182 BD010000 		.4byte	0x1bd
 1863 0186 08       		.uleb128 0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 59


 1864 0187 8F040000 		.4byte	.LASF35
 1865 018b 00       		.byte	0
 1866 018c 08       		.uleb128 0x8
 1867 018d 25030000 		.4byte	.LASF36
 1868 0191 01       		.byte	0x1
 1869 0192 08       		.uleb128 0x8
 1870 0193 6A000000 		.4byte	.LASF37
 1871 0197 02       		.byte	0x2
 1872 0198 08       		.uleb128 0x8
 1873 0199 57040000 		.4byte	.LASF38
 1874 019d 04       		.byte	0x4
 1875 019e 08       		.uleb128 0x8
 1876 019f D9060000 		.4byte	.LASF39
 1877 01a3 08       		.byte	0x8
 1878 01a4 08       		.uleb128 0x8
 1879 01a5 03050000 		.4byte	.LASF40
 1880 01a9 10       		.byte	0x10
 1881 01aa 08       		.uleb128 0x8
 1882 01ab EF080000 		.4byte	.LASF41
 1883 01af 20       		.byte	0x20
 1884 01b0 08       		.uleb128 0x8
 1885 01b1 F4080000 		.4byte	.LASF42
 1886 01b5 40       		.byte	0x40
 1887 01b6 08       		.uleb128 0x8
 1888 01b7 F9080000 		.4byte	.LASF43
 1889 01bb 80       		.byte	0x80
 1890 01bc 00       		.byte	0
 1891 01bd 02       		.uleb128 0x2
 1892 01be 410A0000 		.4byte	.LASF44
 1893 01c2 01       		.byte	0x1
 1894 01c3 AF       		.byte	0xaf
 1895 01c4 7A010000 		.4byte	0x17a
 1896 01c8 07       		.uleb128 0x7
 1897 01c9 01       		.byte	0x1
 1898 01ca 42000000 		.4byte	0x42
 1899 01ce 01       		.byte	0x1
 1900 01cf CB       		.byte	0xcb
 1901 01d0 F3010000 		.4byte	0x1f3
 1902 01d4 08       		.uleb128 0x8
 1903 01d5 CF080000 		.4byte	.LASF45
 1904 01d9 00       		.byte	0
 1905 01da 08       		.uleb128 0x8
 1906 01db ED090000 		.4byte	.LASF46
 1907 01df 01       		.byte	0x1
 1908 01e0 08       		.uleb128 0x8
 1909 01e1 2F080000 		.4byte	.LASF47
 1910 01e5 02       		.byte	0x2
 1911 01e6 08       		.uleb128 0x8
 1912 01e7 DB080000 		.4byte	.LASF48
 1913 01eb 03       		.byte	0x3
 1914 01ec 08       		.uleb128 0x8
 1915 01ed 38080000 		.4byte	.LASF49
 1916 01f1 04       		.byte	0x4
 1917 01f2 00       		.byte	0
 1918 01f3 02       		.uleb128 0x2
 1919 01f4 76010000 		.4byte	.LASF50
 1920 01f8 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 60


 1921 01f9 D1       		.byte	0xd1
 1922 01fa C8010000 		.4byte	0x1c8
 1923 01fe 09       		.uleb128 0x9
 1924 01ff 03       		.byte	0x3
 1925 0200 01       		.byte	0x1
 1926 0201 D6       		.byte	0xd6
 1927 0202 2B020000 		.4byte	0x22b
 1928 0206 0A       		.uleb128 0xa
 1929 0207 C2010000 		.4byte	.LASF51
 1930 020b 01       		.byte	0x1
 1931 020c D7       		.byte	0xd7
 1932 020d C3000000 		.4byte	0xc3
 1933 0211 00       		.byte	0
 1934 0212 0A       		.uleb128 0xa
 1935 0213 7C050000 		.4byte	.LASF52
 1936 0217 01       		.byte	0x1
 1937 0218 D8       		.byte	0xd8
 1938 0219 C3000000 		.4byte	0xc3
 1939 021d 01       		.byte	0x1
 1940 021e 0A       		.uleb128 0xa
 1941 021f 36040000 		.4byte	.LASF53
 1942 0223 01       		.byte	0x1
 1943 0224 D9       		.byte	0xd9
 1944 0225 C3000000 		.4byte	0xc3
 1945 0229 02       		.byte	0x2
 1946 022a 00       		.byte	0
 1947 022b 02       		.uleb128 0x2
 1948 022c B6030000 		.4byte	.LASF54
 1949 0230 01       		.byte	0x1
 1950 0231 DA       		.byte	0xda
 1951 0232 FE010000 		.4byte	0x1fe
 1952 0236 09       		.uleb128 0x9
 1953 0237 16       		.byte	0x16
 1954 0238 01       		.byte	0x1
 1955 0239 DD       		.byte	0xdd
 1956 023a B7020000 		.4byte	0x2b7
 1957 023e 0A       		.uleb128 0xa
 1958 023f C2010000 		.4byte	.LASF51
 1959 0243 01       		.byte	0x1
 1960 0244 DE       		.byte	0xde
 1961 0245 C3000000 		.4byte	0xc3
 1962 0249 00       		.byte	0
 1963 024a 0A       		.uleb128 0xa
 1964 024b 7C050000 		.4byte	.LASF52
 1965 024f 01       		.byte	0x1
 1966 0250 DF       		.byte	0xdf
 1967 0251 C3000000 		.4byte	0xc3
 1968 0255 01       		.byte	0x1
 1969 0256 0A       		.uleb128 0xa
 1970 0257 36040000 		.4byte	.LASF53
 1971 025b 01       		.byte	0x1
 1972 025c E0       		.byte	0xe0
 1973 025d C3000000 		.4byte	0xc3
 1974 0261 02       		.byte	0x2
 1975 0262 0A       		.uleb128 0xa
 1976 0263 C2060000 		.4byte	.LASF55
 1977 0267 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 61


 1978 0268 E1       		.byte	0xe1
 1979 0269 C3000000 		.4byte	0xc3
 1980 026d 03       		.byte	0x3
 1981 026e 0A       		.uleb128 0xa
 1982 026f 9F080000 		.4byte	.LASF56
 1983 0273 01       		.byte	0x1
 1984 0274 E3       		.byte	0xe3
 1985 0275 EF000000 		.4byte	0xef
 1986 0279 04       		.byte	0x4
 1987 027a 0A       		.uleb128 0xa
 1988 027b 94080000 		.4byte	.LASF57
 1989 027f 01       		.byte	0x1
 1990 0280 E4       		.byte	0xe4
 1991 0281 EF000000 		.4byte	0xef
 1992 0285 08       		.byte	0x8
 1993 0286 0A       		.uleb128 0xa
 1994 0287 83080000 		.4byte	.LASF58
 1995 028b 01       		.byte	0x1
 1996 028c E5       		.byte	0xe5
 1997 028d EF000000 		.4byte	0xef
 1998 0291 0C       		.byte	0xc
 1999 0292 0A       		.uleb128 0xa
 2000 0293 4E020000 		.4byte	.LASF59
 2001 0297 01       		.byte	0x1
 2002 0298 E7       		.byte	0xe7
 2003 0299 D9000000 		.4byte	0xd9
 2004 029d 10       		.byte	0x10
 2005 029e 0A       		.uleb128 0xa
 2006 029f 3D040000 		.4byte	.LASF60
 2007 02a3 01       		.byte	0x1
 2008 02a4 E8       		.byte	0xe8
 2009 02a5 D9000000 		.4byte	0xd9
 2010 02a9 12       		.byte	0x12
 2011 02aa 0A       		.uleb128 0xa
 2012 02ab 5E000000 		.4byte	.LASF61
 2013 02af 01       		.byte	0x1
 2014 02b0 E9       		.byte	0xe9
 2015 02b1 D9000000 		.4byte	0xd9
 2016 02b5 14       		.byte	0x14
 2017 02b6 00       		.byte	0
 2018 02b7 02       		.uleb128 0x2
 2019 02b8 F1060000 		.4byte	.LASF62
 2020 02bc 01       		.byte	0x1
 2021 02bd EA       		.byte	0xea
 2022 02be 36020000 		.4byte	0x236
 2023 02c2 09       		.uleb128 0x9
 2024 02c3 0A       		.byte	0xa
 2025 02c4 01       		.byte	0x1
 2026 02c5 ED       		.byte	0xed
 2027 02c6 1F030000 		.4byte	0x31f
 2028 02ca 0A       		.uleb128 0xa
 2029 02cb C2010000 		.4byte	.LASF51
 2030 02cf 01       		.byte	0x1
 2031 02d0 EE       		.byte	0xee
 2032 02d1 C3000000 		.4byte	0xc3
 2033 02d5 00       		.byte	0
 2034 02d6 0A       		.uleb128 0xa
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 62


 2035 02d7 7C050000 		.4byte	.LASF52
 2036 02db 01       		.byte	0x1
 2037 02dc EF       		.byte	0xef
 2038 02dd C3000000 		.4byte	0xc3
 2039 02e1 01       		.byte	0x1
 2040 02e2 0A       		.uleb128 0xa
 2041 02e3 36040000 		.4byte	.LASF53
 2042 02e7 01       		.byte	0x1
 2043 02e8 F0       		.byte	0xf0
 2044 02e9 C3000000 		.4byte	0xc3
 2045 02ed 02       		.byte	0x2
 2046 02ee 0A       		.uleb128 0xa
 2047 02ef 29020000 		.4byte	.LASF63
 2048 02f3 01       		.byte	0x1
 2049 02f4 F1       		.byte	0xf1
 2050 02f5 C3000000 		.4byte	0xc3
 2051 02f9 03       		.byte	0x3
 2052 02fa 0A       		.uleb128 0xa
 2053 02fb CD070000 		.4byte	.LASF64
 2054 02ff 01       		.byte	0x1
 2055 0300 F2       		.byte	0xf2
 2056 0301 E4000000 		.4byte	0xe4
 2057 0305 04       		.byte	0x4
 2058 0306 0B       		.uleb128 0xb
 2059 0307 6A6F6700 		.ascii	"jog\000"
 2060 030b 01       		.byte	0x1
 2061 030c F3       		.byte	0xf3
 2062 030d B8000000 		.4byte	0xb8
 2063 0311 08       		.byte	0x8
 2064 0312 0A       		.uleb128 0xa
 2065 0313 C2000000 		.4byte	.LASF65
 2066 0317 01       		.byte	0x1
 2067 0318 F4       		.byte	0xf4
 2068 0319 C3000000 		.4byte	0xc3
 2069 031d 09       		.byte	0x9
 2070 031e 00       		.byte	0
 2071 031f 02       		.uleb128 0x2
 2072 0320 8A010000 		.4byte	.LASF66
 2073 0324 01       		.byte	0x1
 2074 0325 F5       		.byte	0xf5
 2075 0326 C2020000 		.4byte	0x2c2
 2076 032a 09       		.uleb128 0x9
 2077 032b 07       		.byte	0x7
 2078 032c 01       		.byte	0x1
 2079 032d F8       		.byte	0xf8
 2080 032e 63030000 		.4byte	0x363
 2081 0332 0A       		.uleb128 0xa
 2082 0333 C2010000 		.4byte	.LASF51
 2083 0337 01       		.byte	0x1
 2084 0338 F9       		.byte	0xf9
 2085 0339 C3000000 		.4byte	0xc3
 2086 033d 00       		.byte	0
 2087 033e 0A       		.uleb128 0xa
 2088 033f 7C050000 		.4byte	.LASF52
 2089 0343 01       		.byte	0x1
 2090 0344 FA       		.byte	0xfa
 2091 0345 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 63


 2092 0349 01       		.byte	0x1
 2093 034a 0A       		.uleb128 0xa
 2094 034b 36040000 		.4byte	.LASF53
 2095 034f 01       		.byte	0x1
 2096 0350 FB       		.byte	0xfb
 2097 0351 C3000000 		.4byte	0xc3
 2098 0355 02       		.byte	0x2
 2099 0356 0A       		.uleb128 0xa
 2100 0357 CD070000 		.4byte	.LASF64
 2101 035b 01       		.byte	0x1
 2102 035c FC       		.byte	0xfc
 2103 035d E4000000 		.4byte	0xe4
 2104 0361 03       		.byte	0x3
 2105 0362 00       		.byte	0
 2106 0363 02       		.uleb128 0x2
 2107 0364 49090000 		.4byte	.LASF67
 2108 0368 01       		.byte	0x1
 2109 0369 FD       		.byte	0xfd
 2110 036a 2A030000 		.4byte	0x32a
 2111 036e 0C       		.uleb128 0xc
 2112 036f 1B       		.byte	0x1b
 2113 0370 01       		.byte	0x1
 2114 0371 0101     		.2byte	0x101
 2115 0373 B4030000 		.4byte	0x3b4
 2116 0377 0D       		.uleb128 0xd
 2117 0378 62756600 		.ascii	"buf\000"
 2118 037c 01       		.byte	0x1
 2119 037d 0201     		.2byte	0x102
 2120 037f B4030000 		.4byte	0x3b4
 2121 0383 0E       		.uleb128 0xe
 2122 0384 40070000 		.4byte	.LASF68
 2123 0388 01       		.byte	0x1
 2124 0389 0301     		.2byte	0x103
 2125 038b 2B020000 		.4byte	0x22b
 2126 038f 0E       		.uleb128 0xe
 2127 0390 D2060000 		.4byte	.LASF69
 2128 0394 01       		.byte	0x1
 2129 0395 0401     		.2byte	0x104
 2130 0397 B7020000 		.4byte	0x2b7
 2131 039b 0E       		.uleb128 0xe
 2132 039c 50040000 		.4byte	.LASF70
 2133 03a0 01       		.byte	0x1
 2134 03a1 0501     		.2byte	0x105
 2135 03a3 1F030000 		.4byte	0x31f
 2136 03a7 0E       		.uleb128 0xe
 2137 03a8 CB010000 		.4byte	.LASF71
 2138 03ac 01       		.byte	0x1
 2139 03ad 0601     		.2byte	0x106
 2140 03af 63030000 		.4byte	0x363
 2141 03b3 00       		.byte	0
 2142 03b4 0F       		.uleb128 0xf
 2143 03b5 C3000000 		.4byte	0xc3
 2144 03b9 C4030000 		.4byte	0x3c4
 2145 03bd 10       		.uleb128 0x10
 2146 03be 3E010000 		.4byte	0x13e
 2147 03c2 1A       		.byte	0x1a
 2148 03c3 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 64


 2149 03c4 11       		.uleb128 0x11
 2150 03c5 1B       		.byte	0x1b
 2151 03c6 01       		.byte	0x1
 2152 03c7 0A01     		.2byte	0x10a
 2153 03c9 91040000 		.4byte	0x491
 2154 03cd 12       		.uleb128 0x12
 2155 03ce C2010000 		.4byte	.LASF51
 2156 03d2 01       		.byte	0x1
 2157 03d3 0B01     		.2byte	0x10b
 2158 03d5 C3000000 		.4byte	0xc3
 2159 03d9 00       		.byte	0
 2160 03da 12       		.uleb128 0x12
 2161 03db 9B030000 		.4byte	.LASF72
 2162 03df 01       		.byte	0x1
 2163 03e0 0C01     		.2byte	0x10c
 2164 03e2 C3000000 		.4byte	0xc3
 2165 03e6 01       		.byte	0x1
 2166 03e7 12       		.uleb128 0x12
 2167 03e8 A4030000 		.4byte	.LASF73
 2168 03ec 01       		.byte	0x1
 2169 03ed 0D01     		.2byte	0x10d
 2170 03ef C3000000 		.4byte	0xc3
 2171 03f3 02       		.byte	0x2
 2172 03f4 12       		.uleb128 0x12
 2173 03f5 AD030000 		.4byte	.LASF74
 2174 03f9 01       		.byte	0x1
 2175 03fa 0E01     		.2byte	0x10e
 2176 03fc C3000000 		.4byte	0xc3
 2177 0400 03       		.byte	0x3
 2178 0401 12       		.uleb128 0x12
 2179 0402 7C050000 		.4byte	.LASF52
 2180 0406 01       		.byte	0x1
 2181 0407 0F01     		.2byte	0x10f
 2182 0409 C3000000 		.4byte	0xc3
 2183 040d 04       		.byte	0x4
 2184 040e 12       		.uleb128 0x12
 2185 040f 36040000 		.4byte	.LASF53
 2186 0413 01       		.byte	0x1
 2187 0414 1001     		.2byte	0x110
 2188 0416 C3000000 		.4byte	0xc3
 2189 041a 05       		.byte	0x5
 2190 041b 12       		.uleb128 0x12
 2191 041c 8E080000 		.4byte	.LASF75
 2192 0420 01       		.byte	0x1
 2193 0421 1101     		.2byte	0x111
 2194 0423 C3000000 		.4byte	0xc3
 2195 0427 06       		.byte	0x6
 2196 0428 12       		.uleb128 0x12
 2197 0429 240A0000 		.4byte	.LASF76
 2198 042d 01       		.byte	0x1
 2199 042e 1201     		.2byte	0x112
 2200 0430 C3000000 		.4byte	0xc3
 2201 0434 07       		.byte	0x7
 2202 0435 12       		.uleb128 0x12
 2203 0436 C2060000 		.4byte	.LASF55
 2204 043a 01       		.byte	0x1
 2205 043b 1301     		.2byte	0x113
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 65


 2206 043d C3000000 		.4byte	0xc3
 2207 0441 08       		.byte	0x8
 2208 0442 12       		.uleb128 0x12
 2209 0443 6C050000 		.4byte	.LASF77
 2210 0447 01       		.byte	0x1
 2211 0448 1401     		.2byte	0x114
 2212 044a D9000000 		.4byte	0xd9
 2213 044e 09       		.byte	0x9
 2214 044f 12       		.uleb128 0x12
 2215 0450 19000000 		.4byte	.LASF78
 2216 0454 01       		.byte	0x1
 2217 0455 1501     		.2byte	0x115
 2218 0457 CE000000 		.4byte	0xce
 2219 045b 0B       		.byte	0xb
 2220 045c 12       		.uleb128 0x12
 2221 045d 380A0000 		.4byte	.LASF79
 2222 0461 01       		.byte	0x1
 2223 0462 1601     		.2byte	0x116
 2224 0464 E4000000 		.4byte	0xe4
 2225 0468 0D       		.byte	0xd
 2226 0469 13       		.uleb128 0x13
 2227 046a 70776D00 		.ascii	"pwm\000"
 2228 046e 01       		.byte	0x1
 2229 046f 1701     		.2byte	0x117
 2230 0471 CE000000 		.4byte	0xce
 2231 0475 11       		.byte	0x11
 2232 0476 12       		.uleb128 0x12
 2233 0477 AC090000 		.4byte	.LASF80
 2234 047b 01       		.byte	0x1
 2235 047c 1801     		.2byte	0x118
 2236 047e E4000000 		.4byte	0xe4
 2237 0482 13       		.byte	0x13
 2238 0483 12       		.uleb128 0x12
 2239 0484 D8030000 		.4byte	.LASF81
 2240 0488 01       		.byte	0x1
 2241 0489 1901     		.2byte	0x119
 2242 048b EF000000 		.4byte	0xef
 2243 048f 17       		.byte	0x17
 2244 0490 00       		.byte	0
 2245 0491 05       		.uleb128 0x5
 2246 0492 B8070000 		.4byte	.LASF82
 2247 0496 01       		.byte	0x1
 2248 0497 1A01     		.2byte	0x11a
 2249 0499 C4030000 		.4byte	0x3c4
 2250 049d 0C       		.uleb128 0xc
 2251 049e 1B       		.byte	0x1b
 2252 049f 01       		.byte	0x1
 2253 04a0 1D01     		.2byte	0x11d
 2254 04a2 BF040000 		.4byte	0x4bf
 2255 04a6 0D       		.uleb128 0xd
 2256 04a7 62756600 		.ascii	"buf\000"
 2257 04ab 01       		.byte	0x1
 2258 04ac 1E01     		.2byte	0x11e
 2259 04ae B4030000 		.4byte	0x3b4
 2260 04b2 0D       		.uleb128 0xd
 2261 04b3 6D736700 		.ascii	"msg\000"
 2262 04b7 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 66


 2263 04b8 1F01     		.2byte	0x11f
 2264 04ba 91040000 		.4byte	0x491
 2265 04be 00       		.byte	0
 2266 04bf 14       		.uleb128 0x14
 2267 04c0 01       		.byte	0x1
 2268 04c1 42000000 		.4byte	0x42
 2269 04c5 01       		.byte	0x1
 2270 04c6 2301     		.2byte	0x123
 2271 04c8 D9040000 		.4byte	0x4d9
 2272 04cc 08       		.uleb128 0x8
 2273 04cd 33000000 		.4byte	.LASF83
 2274 04d1 00       		.byte	0
 2275 04d2 08       		.uleb128 0x8
 2276 04d3 CA050000 		.4byte	.LASF84
 2277 04d7 01       		.byte	0x1
 2278 04d8 00       		.byte	0
 2279 04d9 05       		.uleb128 0x5
 2280 04da 08010000 		.4byte	.LASF85
 2281 04de 01       		.byte	0x1
 2282 04df 2601     		.2byte	0x126
 2283 04e1 BF040000 		.4byte	0x4bf
 2284 04e5 15       		.uleb128 0x15
 2285 04e6 2A0A0000 		.4byte	.LASF86
 2286 04ea 01       		.byte	0x1
 2287 04eb 5E04     		.2byte	0x45e
 2288 04ed 00000000 		.4byte	.LFB43
 2289 04f1 24000000 		.4byte	.LFE43-.LFB43
 2290 04f5 01       		.uleb128 0x1
 2291 04f6 9C       		.byte	0x9c
 2292 04f7 30050000 		.4byte	0x530
 2293 04fb 16       		.uleb128 0x16
 2294 04fc 06000000 		.4byte	.LVL0
 2295 0500 0C0E0000 		.4byte	0xe0c
 2296 0504 16       		.uleb128 0x16
 2297 0505 0A000000 		.4byte	.LVL1
 2298 0509 170E0000 		.4byte	0xe17
 2299 050d 17       		.uleb128 0x17
 2300 050e 10000000 		.4byte	.LVL2
 2301 0512 220E0000 		.4byte	0xe22
 2302 0516 20050000 		.4byte	0x520
 2303 051a 18       		.uleb128 0x18
 2304 051b 01       		.uleb128 0x1
 2305 051c 50       		.byte	0x50
 2306 051d 01       		.uleb128 0x1
 2307 051e 30       		.byte	0x30
 2308 051f 00       		.byte	0
 2309 0520 19       		.uleb128 0x19
 2310 0521 16000000 		.4byte	.LVL3
 2311 0525 2D0E0000 		.4byte	0xe2d
 2312 0529 18       		.uleb128 0x18
 2313 052a 01       		.uleb128 0x1
 2314 052b 50       		.byte	0x50
 2315 052c 01       		.uleb128 0x1
 2316 052d 30       		.byte	0x30
 2317 052e 00       		.byte	0
 2318 052f 00       		.byte	0
 2319 0530 15       		.uleb128 0x15
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 67


 2320 0531 F9000000 		.4byte	.LASF87
 2321 0535 01       		.byte	0x1
 2322 0536 7C04     		.2byte	0x47c
 2323 0538 00000000 		.4byte	.LFB44
 2324 053c 1C000000 		.4byte	.LFE44-.LFB44
 2325 0540 01       		.uleb128 0x1
 2326 0541 9C       		.byte	0x9c
 2327 0542 68050000 		.4byte	0x568
 2328 0546 16       		.uleb128 0x16
 2329 0547 06000000 		.4byte	.LVL4
 2330 054b 380E0000 		.4byte	0xe38
 2331 054f 16       		.uleb128 0x16
 2332 0550 0A000000 		.4byte	.LVL5
 2333 0554 430E0000 		.4byte	0xe43
 2334 0558 19       		.uleb128 0x19
 2335 0559 10000000 		.4byte	.LVL6
 2336 055d 220E0000 		.4byte	0xe22
 2337 0561 18       		.uleb128 0x18
 2338 0562 01       		.uleb128 0x1
 2339 0563 50       		.byte	0x50
 2340 0564 01       		.uleb128 0x1
 2341 0565 30       		.byte	0x30
 2342 0566 00       		.byte	0
 2343 0567 00       		.byte	0
 2344 0568 15       		.uleb128 0x15
 2345 0569 3C060000 		.4byte	.LASF88
 2346 056d 01       		.byte	0x1
 2347 056e 9604     		.2byte	0x496
 2348 0570 00000000 		.4byte	.LFB45
 2349 0574 60000000 		.4byte	.LFE45-.LFB45
 2350 0578 01       		.uleb128 0x1
 2351 0579 9C       		.byte	0x9c
 2352 057a DB050000 		.4byte	0x5db
 2353 057e 1A       		.uleb128 0x1a
 2354 057f 6900     		.ascii	"i\000"
 2355 0581 01       		.byte	0x1
 2356 0582 9804     		.2byte	0x498
 2357 0584 EF000000 		.4byte	0xef
 2358 0588 00000000 		.4byte	.LLST0
 2359 058c 16       		.uleb128 0x16
 2360 058d 06000000 		.4byte	.LVL7
 2361 0591 4E0E0000 		.4byte	0xe4e
 2362 0595 16       		.uleb128 0x16
 2363 0596 0A000000 		.4byte	.LVL8
 2364 059a 590E0000 		.4byte	0xe59
 2365 059e 17       		.uleb128 0x17
 2366 059f 2A000000 		.4byte	.LVL9
 2367 05a3 640E0000 		.4byte	0xe64
 2368 05a7 BF050000 		.4byte	0x5bf
 2369 05ab 18       		.uleb128 0x18
 2370 05ac 01       		.uleb128 0x1
 2371 05ad 50       		.byte	0x50
 2372 05ae 05       		.uleb128 0x5
 2373 05af 03       		.byte	0x3
 2374 05b0 00000000 		.4byte	txMessage
 2375 05b4 18       		.uleb128 0x18
 2376 05b5 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 68


 2377 05b6 51       		.byte	0x51
 2378 05b7 01       		.uleb128 0x1
 2379 05b8 30       		.byte	0x30
 2380 05b9 18       		.uleb128 0x18
 2381 05ba 01       		.uleb128 0x1
 2382 05bb 52       		.byte	0x52
 2383 05bc 01       		.uleb128 0x1
 2384 05bd 4B       		.byte	0x4b
 2385 05be 00       		.byte	0
 2386 05bf 16       		.uleb128 0x16
 2387 05c0 32000000 		.4byte	.LVL11
 2388 05c4 6D0E0000 		.4byte	0xe6d
 2389 05c8 16       		.uleb128 0x16
 2390 05c9 40000000 		.4byte	.LVL13
 2391 05cd 790E0000 		.4byte	0xe79
 2392 05d1 16       		.uleb128 0x16
 2393 05d2 44000000 		.4byte	.LVL14
 2394 05d6 850E0000 		.4byte	0xe85
 2395 05da 00       		.byte	0
 2396 05db 15       		.uleb128 0x15
 2397 05dc 9D010000 		.4byte	.LASF89
 2398 05e0 01       		.byte	0x1
 2399 05e1 3F01     		.2byte	0x13f
 2400 05e3 00000000 		.4byte	.LFB32
 2401 05e7 1C000000 		.4byte	.LFE32-.LFB32
 2402 05eb 01       		.uleb128 0x1
 2403 05ec 9C       		.byte	0x9c
 2404 05ed 02060000 		.4byte	0x602
 2405 05f1 1B       		.uleb128 0x1b
 2406 05f2 240A0000 		.4byte	.LASF76
 2407 05f6 01       		.byte	0x1
 2408 05f7 3F01     		.2byte	0x13f
 2409 05f9 BD010000 		.4byte	0x1bd
 2410 05fd 1F000000 		.4byte	.LLST1
 2411 0601 00       		.byte	0
 2412 0602 15       		.uleb128 0x15
 2413 0603 1A010000 		.4byte	.LASF90
 2414 0607 01       		.byte	0x1
 2415 0608 5A01     		.2byte	0x15a
 2416 060a 00000000 		.4byte	.LFB33
 2417 060e 1C000000 		.4byte	.LFE33-.LFB33
 2418 0612 01       		.uleb128 0x1
 2419 0613 9C       		.byte	0x9c
 2420 0614 27060000 		.4byte	0x627
 2421 0618 1C       		.uleb128 0x1c
 2422 0619 240A0000 		.4byte	.LASF76
 2423 061d 01       		.byte	0x1
 2424 061e 5A01     		.2byte	0x15a
 2425 0620 BD010000 		.4byte	0x1bd
 2426 0624 01       		.uleb128 0x1
 2427 0625 50       		.byte	0x50
 2428 0626 00       		.byte	0
 2429 0627 1D       		.uleb128 0x1d
 2430 0628 44000000 		.4byte	.LASF91
 2431 062c 01       		.byte	0x1
 2432 062d 7401     		.2byte	0x174
 2433 062f 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 69


 2434 0633 18000000 		.4byte	.LFE34-.LFB34
 2435 0637 01       		.uleb128 0x1
 2436 0638 9C       		.byte	0x9c
 2437 0639 5C060000 		.4byte	0x65c
 2438 063d 1A       		.uleb128 0x1a
 2439 063e 6300     		.ascii	"c\000"
 2440 0640 01       		.byte	0x1
 2441 0641 7701     		.2byte	0x177
 2442 0643 11010000 		.4byte	0x111
 2443 0647 40000000 		.4byte	.LLST2
 2444 064b 19       		.uleb128 0x19
 2445 064c 08000000 		.4byte	.LVL19
 2446 0650 910E0000 		.4byte	0xe91
 2447 0654 18       		.uleb128 0x18
 2448 0655 01       		.uleb128 0x1
 2449 0656 50       		.byte	0x50
 2450 0657 02       		.uleb128 0x2
 2451 0658 08       		.byte	0x8
 2452 0659 40       		.byte	0x40
 2453 065a 00       		.byte	0
 2454 065b 00       		.byte	0
 2455 065c 15       		.uleb128 0x15
 2456 065d 04040000 		.4byte	.LASF92
 2457 0661 01       		.byte	0x1
 2458 0662 5802     		.2byte	0x258
 2459 0664 00000000 		.4byte	.LFB36
 2460 0668 10000000 		.4byte	.LFE36-.LFB36
 2461 066c 01       		.uleb128 0x1
 2462 066d 9C       		.byte	0x9c
 2463 066e 97060000 		.4byte	0x697
 2464 0672 1B       		.uleb128 0x1b
 2465 0673 3D000000 		.4byte	.LASF93
 2466 0677 01       		.byte	0x1
 2467 0678 5802     		.2byte	0x258
 2468 067a E4000000 		.4byte	0xe4
 2469 067e 53000000 		.4byte	.LLST3
 2470 0682 19       		.uleb128 0x19
 2471 0683 0E000000 		.4byte	.LVL23
 2472 0687 9C0E0000 		.4byte	0xe9c
 2473 068b 18       		.uleb128 0x18
 2474 068c 01       		.uleb128 0x1
 2475 068d 50       		.byte	0x50
 2476 068e 06       		.uleb128 0x6
 2477 068f F3       		.byte	0xf3
 2478 0690 01       		.uleb128 0x1
 2479 0691 50       		.byte	0x50
 2480 0692 23       		.byte	0x23
 2481 0693 A006     		.uleb128 0x320
 2482 0695 00       		.byte	0
 2483 0696 00       		.byte	0
 2484 0697 1E       		.uleb128 0x1e
 2485 0698 E2070000 		.4byte	.LASF183
 2486 069c 01       		.byte	0x1
 2487 069d 6902     		.2byte	0x269
 2488 069f E4000000 		.4byte	0xe4
 2489 06a3 00000000 		.4byte	.LFB37
 2490 06a7 44000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 70


 2491 06ab 01       		.uleb128 0x1
 2492 06ac 9C       		.byte	0x9c
 2493 06ad DF060000 		.4byte	0x6df
 2494 06b1 1F       		.uleb128 0x1f
 2495 06b2 89070000 		.4byte	.LASF94
 2496 06b6 01       		.byte	0x1
 2497 06b7 6B02     		.2byte	0x26b
 2498 06b9 45010000 		.4byte	0x145
 2499 06bd 05       		.uleb128 0x5
 2500 06be 03       		.byte	0x3
 2501 06bf 08000000 		.4byte	RawPosition.7275
 2502 06c3 1F       		.uleb128 0x1f
 2503 06c4 DA010000 		.4byte	.LASF95
 2504 06c8 01       		.byte	0x1
 2505 06c9 6C02     		.2byte	0x26c
 2506 06cb DF060000 		.4byte	0x6df
 2507 06cf 05       		.uleb128 0x5
 2508 06d0 03       		.byte	0x3
 2509 06d1 0C000000 		.4byte	result.7276
 2510 06d5 16       		.uleb128 0x16
 2511 06d6 06000000 		.4byte	.LVL24
 2512 06da A80E0000 		.4byte	0xea8
 2513 06de 00       		.byte	0
 2514 06df 06       		.uleb128 0x6
 2515 06e0 E4000000 		.4byte	0xe4
 2516 06e4 15       		.uleb128 0x15
 2517 06e5 66060000 		.4byte	.LASF96
 2518 06e9 01       		.byte	0x1
 2519 06ea 8901     		.2byte	0x189
 2520 06ec 00000000 		.4byte	.LFB35
 2521 06f0 A0020000 		.4byte	.LFE35-.LFB35
 2522 06f4 01       		.uleb128 0x1
 2523 06f5 9C       		.byte	0x9c
 2524 06f6 BE070000 		.4byte	0x7be
 2525 06fa 20       		.uleb128 0x20
 2526 06fb 36040000 		.4byte	.LASF53
 2527 06ff 01       		.byte	0x1
 2528 0700 8B01     		.2byte	0x18b
 2529 0702 F3010000 		.4byte	0x1f3
 2530 0706 82000000 		.4byte	.LLST4
 2531 070a 20       		.uleb128 0x20
 2532 070b 7C050000 		.4byte	.LASF52
 2533 070f 01       		.byte	0x1
 2534 0710 8C01     		.2byte	0x18c
 2535 0712 C3000000 		.4byte	0xc3
 2536 0716 AC000000 		.4byte	.LLST5
 2537 071a 1A       		.uleb128 0x1a
 2538 071b 6900     		.ascii	"i\000"
 2539 071d 01       		.byte	0x1
 2540 071e 8D01     		.2byte	0x18d
 2541 0720 C3000000 		.4byte	0xc3
 2542 0724 D5000000 		.4byte	.LLST6
 2543 0728 20       		.uleb128 0x20
 2544 0729 C2010000 		.4byte	.LASF51
 2545 072d 01       		.byte	0x1
 2546 072e 8E01     		.2byte	0x18e
 2547 0730 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 71


 2548 0734 2C010000 		.4byte	.LLST7
 2549 0738 20       		.uleb128 0x20
 2550 0739 6A070000 		.4byte	.LASF97
 2551 073d 01       		.byte	0x1
 2552 073e 8F01     		.2byte	0x18f
 2553 0740 E4000000 		.4byte	0xe4
 2554 0744 99010000 		.4byte	.LLST8
 2555 0748 16       		.uleb128 0x16
 2556 0749 6C000000 		.4byte	.LVL37
 2557 074d 97060000 		.4byte	0x697
 2558 0751 17       		.uleb128 0x17
 2559 0752 B6000000 		.4byte	.LVL38
 2560 0756 02060000 		.4byte	0x602
 2561 075a 64070000 		.4byte	0x764
 2562 075e 18       		.uleb128 0x18
 2563 075f 01       		.uleb128 0x1
 2564 0760 50       		.byte	0x50
 2565 0761 01       		.uleb128 0x1
 2566 0762 30       		.byte	0x30
 2567 0763 00       		.byte	0
 2568 0764 16       		.uleb128 0x16
 2569 0765 EC000000 		.4byte	.LVL42
 2570 0769 97060000 		.4byte	0x697
 2571 076d 17       		.uleb128 0x17
 2572 076e 18010000 		.4byte	.LVL44
 2573 0772 2D0E0000 		.4byte	0xe2d
 2574 0776 80070000 		.4byte	0x780
 2575 077a 18       		.uleb128 0x18
 2576 077b 01       		.uleb128 0x1
 2577 077c 50       		.byte	0x50
 2578 077d 01       		.uleb128 0x1
 2579 077e 30       		.byte	0x30
 2580 077f 00       		.byte	0
 2581 0780 16       		.uleb128 0x16
 2582 0781 6E010000 		.4byte	.LVL54
 2583 0785 220E0000 		.4byte	0xe22
 2584 0789 16       		.uleb128 0x16
 2585 078a 8C010000 		.4byte	.LVL55
 2586 078e 97060000 		.4byte	0x697
 2587 0792 17       		.uleb128 0x17
 2588 0793 32020000 		.4byte	.LVL63
 2589 0797 B30E0000 		.4byte	0xeb3
 2590 079b AE070000 		.4byte	0x7ae
 2591 079f 18       		.uleb128 0x18
 2592 07a0 01       		.uleb128 0x1
 2593 07a1 50       		.byte	0x50
 2594 07a2 05       		.uleb128 0x5
 2595 07a3 03       		.byte	0x3
 2596 07a4 00000000 		.4byte	txMessage
 2597 07a8 18       		.uleb128 0x18
 2598 07a9 01       		.uleb128 0x1
 2599 07aa 51       		.byte	0x51
 2600 07ab 01       		.uleb128 0x1
 2601 07ac 4B       		.byte	0x4b
 2602 07ad 00       		.byte	0
 2603 07ae 19       		.uleb128 0x19
 2604 07af 46020000 		.4byte	.LVL64
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 72


 2605 07b3 02060000 		.4byte	0x602
 2606 07b7 18       		.uleb128 0x18
 2607 07b8 01       		.uleb128 0x1
 2608 07b9 50       		.byte	0x50
 2609 07ba 01       		.uleb128 0x1
 2610 07bb 30       		.byte	0x30
 2611 07bc 00       		.byte	0
 2612 07bd 00       		.byte	0
 2613 07be 15       		.uleb128 0x15
 2614 07bf 98090000 		.4byte	.LASF98
 2615 07c3 01       		.byte	0x1
 2616 07c4 8C02     		.2byte	0x28c
 2617 07c6 00000000 		.4byte	.LFB38
 2618 07ca 30000000 		.4byte	.LFE38-.LFB38
 2619 07ce 01       		.uleb128 0x1
 2620 07cf 9C       		.byte	0x9c
 2621 07d0 DE070000 		.4byte	0x7de
 2622 07d4 16       		.uleb128 0x16
 2623 07d5 06000000 		.4byte	.LVL65
 2624 07d9 97060000 		.4byte	0x697
 2625 07dd 00       		.byte	0
 2626 07de 15       		.uleb128 0x15
 2627 07df F8030000 		.4byte	.LASF99
 2628 07e3 01       		.byte	0x1
 2629 07e4 A502     		.2byte	0x2a5
 2630 07e6 00000000 		.4byte	.LFB39
 2631 07ea 24000000 		.4byte	.LFE39-.LFB39
 2632 07ee 01       		.uleb128 0x1
 2633 07ef 9C       		.byte	0x9c
 2634 07f0 1E080000 		.4byte	0x81e
 2635 07f4 1B       		.uleb128 0x1b
 2636 07f5 20070000 		.4byte	.LASF100
 2637 07f9 01       		.byte	0x1
 2638 07fa A502     		.2byte	0x2a5
 2639 07fc EF000000 		.4byte	0xef
 2640 0800 B7010000 		.4byte	.LLST9
 2641 0804 20       		.uleb128 0x20
 2642 0805 7F000000 		.4byte	.LASF101
 2643 0809 01       		.byte	0x1
 2644 080a A702     		.2byte	0x2a7
 2645 080c 1E080000 		.4byte	0x81e
 2646 0810 D8010000 		.4byte	.LLST10
 2647 0814 16       		.uleb128 0x16
 2648 0815 1A000000 		.4byte	.LVL68
 2649 0819 BE070000 		.4byte	0x7be
 2650 081d 00       		.byte	0
 2651 081e 03       		.uleb128 0x3
 2652 081f 01       		.byte	0x1
 2653 0820 02       		.byte	0x2
 2654 0821 1F030000 		.4byte	.LASF102
 2655 0825 15       		.uleb128 0x15
 2656 0826 B0000000 		.4byte	.LASF103
 2657 082a 01       		.byte	0x1
 2658 082b BB02     		.2byte	0x2bb
 2659 082d 00000000 		.4byte	.LFB40
 2660 0831 6C010000 		.4byte	.LFE40-.LFB40
 2661 0835 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 73


 2662 0836 9C       		.byte	0x9c
 2663 0837 D3080000 		.4byte	0x8d3
 2664 083b 17       		.uleb128 0x17
 2665 083c 24000000 		.4byte	.LVL70
 2666 0840 5C060000 		.4byte	0x65c
 2667 0844 50080000 		.4byte	0x850
 2668 0848 18       		.uleb128 0x18
 2669 0849 01       		.uleb128 0x1
 2670 084a 50       		.byte	0x50
 2671 084b 03       		.uleb128 0x3
 2672 084c 0A       		.byte	0xa
 2673 084d 2003     		.2byte	0x320
 2674 084f 00       		.byte	0
 2675 0850 17       		.uleb128 0x17
 2676 0851 3E000000 		.4byte	.LVL71
 2677 0855 BF0E0000 		.4byte	0xebf
 2678 0859 63080000 		.4byte	0x863
 2679 085d 18       		.uleb128 0x18
 2680 085e 01       		.uleb128 0x1
 2681 085f 50       		.byte	0x50
 2682 0860 01       		.uleb128 0x1
 2683 0861 36       		.byte	0x36
 2684 0862 00       		.byte	0
 2685 0863 17       		.uleb128 0x17
 2686 0864 44000000 		.4byte	.LVL72
 2687 0868 CA0E0000 		.4byte	0xeca
 2688 086c 76080000 		.4byte	0x876
 2689 0870 18       		.uleb128 0x18
 2690 0871 01       		.uleb128 0x1
 2691 0872 50       		.byte	0x50
 2692 0873 01       		.uleb128 0x1
 2693 0874 36       		.byte	0x36
 2694 0875 00       		.byte	0
 2695 0876 17       		.uleb128 0x17
 2696 0877 5A000000 		.4byte	.LVL73
 2697 087b DE070000 		.4byte	0x7de
 2698 087f 89080000 		.4byte	0x889
 2699 0883 18       		.uleb128 0x18
 2700 0884 01       		.uleb128 0x1
 2701 0885 50       		.byte	0x50
 2702 0886 01       		.uleb128 0x1
 2703 0887 31       		.byte	0x31
 2704 0888 00       		.byte	0
 2705 0889 17       		.uleb128 0x17
 2706 088a 6E000000 		.4byte	.LVL74
 2707 088e DE070000 		.4byte	0x7de
 2708 0892 9D080000 		.4byte	0x89d
 2709 0896 18       		.uleb128 0x18
 2710 0897 01       		.uleb128 0x1
 2711 0898 50       		.byte	0x50
 2712 0899 02       		.uleb128 0x2
 2713 089a 74       		.byte	0x74
 2714 089b 00       		.sleb128 0
 2715 089c 00       		.byte	0
 2716 089d 16       		.uleb128 0x16
 2717 089e BE000000 		.4byte	.LVL75
 2718 08a2 97060000 		.4byte	0x697
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 74


 2719 08a6 16       		.uleb128 0x16
 2720 08a7 CC000000 		.4byte	.LVL76
 2721 08ab D50E0000 		.4byte	0xed5
 2722 08af 16       		.uleb128 0x16
 2723 08b0 D6000000 		.4byte	.LVL77
 2724 08b4 5C060000 		.4byte	0x65c
 2725 08b8 16       		.uleb128 0x16
 2726 08b9 32010000 		.4byte	.LVL78
 2727 08bd 5C060000 		.4byte	0x65c
 2728 08c1 19       		.uleb128 0x19
 2729 08c2 3C010000 		.4byte	.LVL79
 2730 08c6 5C060000 		.4byte	0x65c
 2731 08ca 18       		.uleb128 0x18
 2732 08cb 01       		.uleb128 0x1
 2733 08cc 50       		.byte	0x50
 2734 08cd 03       		.uleb128 0x3
 2735 08ce 0A       		.byte	0xa
 2736 08cf 2003     		.2byte	0x320
 2737 08d1 00       		.byte	0
 2738 08d2 00       		.byte	0
 2739 08d3 15       		.uleb128 0x15
 2740 08d4 0C040000 		.4byte	.LASF104
 2741 08d8 01       		.byte	0x1
 2742 08d9 FD03     		.2byte	0x3fd
 2743 08db 00000000 		.4byte	.LFB42
 2744 08df BC000000 		.4byte	.LFE42-.LFB42
 2745 08e3 01       		.uleb128 0x1
 2746 08e4 9C       		.byte	0x9c
 2747 08e5 84090000 		.4byte	0x984
 2748 08e9 1F       		.uleb128 0x1f
 2749 08ea 55000000 		.4byte	.LASF105
 2750 08ee 01       		.byte	0x1
 2751 08ef FF03     		.2byte	0x3ff
 2752 08f1 EF000000 		.4byte	0xef
 2753 08f5 05       		.uleb128 0x5
 2754 08f6 03       		.byte	0x3
 2755 08f7 48000000 		.4byte	brmsTask.7294
 2756 08fb 21       		.uleb128 0x21
 2757 08fc 94000000 		.4byte	.LASF106
 2758 0900 01       		.byte	0x1
 2759 0901 0104     		.2byte	0x401
 2760 0903 84090000 		.4byte	0x984
 2761 0907 01       		.byte	0x1
 2762 0908 21       		.uleb128 0x21
 2763 0909 D6070000 		.4byte	.LASF107
 2764 090d 01       		.byte	0x1
 2765 090e 0204     		.2byte	0x402
 2766 0910 89090000 		.4byte	0x989
 2767 0914 02       		.byte	0x2
 2768 0915 21       		.uleb128 0x21
 2769 0916 AC070000 		.4byte	.LASF108
 2770 091a 01       		.byte	0x1
 2771 091b 0304     		.2byte	0x403
 2772 091d 8E090000 		.4byte	0x98e
 2773 0921 04       		.byte	0x4
 2774 0922 21       		.uleb128 0x21
 2775 0923 27000000 		.4byte	.LASF109
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 75


 2776 0927 01       		.byte	0x1
 2777 0928 0404     		.2byte	0x404
 2778 092a 93090000 		.4byte	0x993
 2779 092e 08       		.byte	0x8
 2780 092f 21       		.uleb128 0x21
 2781 0930 25070000 		.4byte	.LASF110
 2782 0934 01       		.byte	0x1
 2783 0935 0504     		.2byte	0x405
 2784 0937 EF000000 		.4byte	0xef
 2785 093b 10       		.byte	0x10
 2786 093c 17       		.uleb128 0x17
 2787 093d 08000000 		.4byte	.LVL80
 2788 0941 E00E0000 		.4byte	0xee0
 2789 0945 4F090000 		.4byte	0x94f
 2790 0949 18       		.uleb128 0x18
 2791 094a 01       		.uleb128 0x1
 2792 094b 50       		.byte	0x50
 2793 094c 01       		.uleb128 0x1
 2794 094d 32       		.byte	0x32
 2795 094e 00       		.byte	0
 2796 094f 17       		.uleb128 0x17
 2797 0950 0E000000 		.4byte	.LVL81
 2798 0954 EC0E0000 		.4byte	0xeec
 2799 0958 62090000 		.4byte	0x962
 2800 095c 18       		.uleb128 0x18
 2801 095d 01       		.uleb128 0x1
 2802 095e 50       		.byte	0x50
 2803 095f 01       		.uleb128 0x1
 2804 0960 31       		.byte	0x31
 2805 0961 00       		.byte	0
 2806 0962 16       		.uleb128 0x16
 2807 0963 A2000000 		.4byte	.LVL82
 2808 0967 25080000 		.4byte	0x825
 2809 096b 16       		.uleb128 0x16
 2810 096c B0000000 		.4byte	.LVL83
 2811 0970 E4060000 		.4byte	0x6e4
 2812 0974 19       		.uleb128 0x19
 2813 0975 B6000000 		.4byte	.LVL84
 2814 0979 EC0E0000 		.4byte	0xeec
 2815 097d 18       		.uleb128 0x18
 2816 097e 01       		.uleb128 0x1
 2817 097f 50       		.byte	0x50
 2818 0980 01       		.uleb128 0x1
 2819 0981 30       		.byte	0x30
 2820 0982 00       		.byte	0
 2821 0983 00       		.byte	0
 2822 0984 22       		.uleb128 0x22
 2823 0985 EF000000 		.4byte	0xef
 2824 0989 22       		.uleb128 0x22
 2825 098a EF000000 		.4byte	0xef
 2826 098e 22       		.uleb128 0x22
 2827 098f EF000000 		.4byte	0xef
 2828 0993 22       		.uleb128 0x22
 2829 0994 EF000000 		.4byte	0xef
 2830 0998 23       		.uleb128 0x23
 2831 0999 A7090000 		.4byte	.LASF184
 2832 099d 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 76


 2833 099e 4703     		.2byte	0x347
 2834 09a0 AA000000 		.4byte	0xaa
 2835 09a4 00000000 		.4byte	.LFB41
 2836 09a8 38010000 		.4byte	.LFE41-.LFB41
 2837 09ac 01       		.uleb128 0x1
 2838 09ad 9C       		.byte	0x9c
 2839 09ae 830B0000 		.4byte	0xb83
 2840 09b2 17       		.uleb128 0x17
 2841 09b3 08000000 		.4byte	.LVL85
 2842 09b7 BF0E0000 		.4byte	0xebf
 2843 09bb C5090000 		.4byte	0x9c5
 2844 09bf 18       		.uleb128 0x18
 2845 09c0 01       		.uleb128 0x1
 2846 09c1 50       		.byte	0x50
 2847 09c2 01       		.uleb128 0x1
 2848 09c3 31       		.byte	0x31
 2849 09c4 00       		.byte	0
 2850 09c5 17       		.uleb128 0x17
 2851 09c6 0E000000 		.4byte	.LVL86
 2852 09ca CA0E0000 		.4byte	0xeca
 2853 09ce D8090000 		.4byte	0x9d8
 2854 09d2 18       		.uleb128 0x18
 2855 09d3 01       		.uleb128 0x1
 2856 09d4 50       		.byte	0x50
 2857 09d5 01       		.uleb128 0x1
 2858 09d6 31       		.byte	0x31
 2859 09d7 00       		.byte	0
 2860 09d8 16       		.uleb128 0x16
 2861 09d9 12000000 		.4byte	.LVL87
 2862 09dd F70E0000 		.4byte	0xef7
 2863 09e1 17       		.uleb128 0x17
 2864 09e2 18000000 		.4byte	.LVL88
 2865 09e6 030F0000 		.4byte	0xf03
 2866 09ea F8090000 		.4byte	0x9f8
 2867 09ee 18       		.uleb128 0x18
 2868 09ef 01       		.uleb128 0x1
 2869 09f0 50       		.byte	0x50
 2870 09f1 05       		.uleb128 0x5
 2871 09f2 03       		.byte	0x3
 2872 09f3 00000000 		.4byte	BRMS_Interrupt
 2873 09f7 00       		.byte	0
 2874 09f8 17       		.uleb128 0x17
 2875 09f9 1E000000 		.4byte	.LVL89
 2876 09fd 0E0F0000 		.4byte	0xf0e
 2877 0a01 0B0A0000 		.4byte	0xa0b
 2878 0a05 18       		.uleb128 0x18
 2879 0a06 01       		.uleb128 0x1
 2880 0a07 50       		.byte	0x50
 2881 0a08 01       		.uleb128 0x1
 2882 0a09 32       		.byte	0x32
 2883 0a0a 00       		.byte	0
 2884 0a0b 17       		.uleb128 0x17
 2885 0a0c 24000000 		.4byte	.LVL90
 2886 0a10 190F0000 		.4byte	0xf19
 2887 0a14 220A0000 		.4byte	0xa22
 2888 0a18 18       		.uleb128 0x18
 2889 0a19 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 77


 2890 0a1a 50       		.byte	0x50
 2891 0a1b 05       		.uleb128 0x5
 2892 0a1c 03       		.byte	0x3
 2893 0a1d 00000000 		.4byte	HomeIsrHandler
 2894 0a21 00       		.byte	0
 2895 0a22 17       		.uleb128 0x17
 2896 0a23 2A000000 		.4byte	.LVL91
 2897 0a27 240F0000 		.4byte	0xf24
 2898 0a2b 350A0000 		.4byte	0xa35
 2899 0a2f 18       		.uleb128 0x18
 2900 0a30 01       		.uleb128 0x1
 2901 0a31 50       		.byte	0x50
 2902 0a32 01       		.uleb128 0x1
 2903 0a33 33       		.byte	0x33
 2904 0a34 00       		.byte	0
 2905 0a35 17       		.uleb128 0x17
 2906 0a36 30000000 		.4byte	.LVL92
 2907 0a3a 2F0F0000 		.4byte	0xf2f
 2908 0a3e 4C0A0000 		.4byte	0xa4c
 2909 0a42 18       		.uleb128 0x18
 2910 0a43 01       		.uleb128 0x1
 2911 0a44 50       		.byte	0x50
 2912 0a45 05       		.uleb128 0x5
 2913 0a46 03       		.byte	0x3
 2914 0a47 00000000 		.4byte	RSTIsrHandler
 2915 0a4b 00       		.byte	0
 2916 0a4c 17       		.uleb128 0x17
 2917 0a4d 36000000 		.4byte	.LVL93
 2918 0a51 3A0F0000 		.4byte	0xf3a
 2919 0a55 5F0A0000 		.4byte	0xa5f
 2920 0a59 18       		.uleb128 0x18
 2921 0a5a 01       		.uleb128 0x1
 2922 0a5b 50       		.byte	0x50
 2923 0a5c 01       		.uleb128 0x1
 2924 0a5d 33       		.byte	0x33
 2925 0a5e 00       		.byte	0
 2926 0a5f 17       		.uleb128 0x17
 2927 0a60 3C000000 		.4byte	.LVL94
 2928 0a64 450F0000 		.4byte	0xf45
 2929 0a68 760A0000 		.4byte	0xa76
 2930 0a6c 18       		.uleb128 0x18
 2931 0a6d 01       		.uleb128 0x1
 2932 0a6e 50       		.byte	0x50
 2933 0a6f 05       		.uleb128 0x5
 2934 0a70 03       		.byte	0x3
 2935 0a71 00000000 		.4byte	SPI_SS_IsrHandler
 2936 0a75 00       		.byte	0
 2937 0a76 17       		.uleb128 0x17
 2938 0a77 42000000 		.4byte	.LVL95
 2939 0a7b 500F0000 		.4byte	0xf50
 2940 0a7f 890A0000 		.4byte	0xa89
 2941 0a83 18       		.uleb128 0x18
 2942 0a84 01       		.uleb128 0x1
 2943 0a85 50       		.byte	0x50
 2944 0a86 01       		.uleb128 0x1
 2945 0a87 33       		.byte	0x33
 2946 0a88 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 78


 2947 0a89 16       		.uleb128 0x16
 2948 0a8a 48000000 		.4byte	.LVL96
 2949 0a8e 5B0F0000 		.4byte	0xf5b
 2950 0a92 17       		.uleb128 0x17
 2951 0a93 4E000000 		.4byte	.LVL97
 2952 0a97 660F0000 		.4byte	0xf66
 2953 0a9b A60A0000 		.4byte	0xaa6
 2954 0a9f 18       		.uleb128 0x18
 2955 0aa0 01       		.uleb128 0x1
 2956 0aa1 50       		.byte	0x50
 2957 0aa2 02       		.uleb128 0x2
 2958 0aa3 08       		.byte	0x8
 2959 0aa4 64       		.byte	0x64
 2960 0aa5 00       		.byte	0
 2961 0aa6 16       		.uleb128 0x16
 2962 0aa7 52000000 		.4byte	.LVL98
 2963 0aab 710F0000 		.4byte	0xf71
 2964 0aaf 16       		.uleb128 0x16
 2965 0ab0 56000000 		.4byte	.LVL99
 2966 0ab4 7C0F0000 		.4byte	0xf7c
 2967 0ab8 17       		.uleb128 0x17
 2968 0ab9 5E000000 		.4byte	.LVL100
 2969 0abd 880F0000 		.4byte	0xf88
 2970 0ac1 CD0A0000 		.4byte	0xacd
 2971 0ac5 18       		.uleb128 0x18
 2972 0ac6 01       		.uleb128 0x1
 2973 0ac7 50       		.byte	0x50
 2974 0ac8 03       		.uleb128 0x3
 2975 0ac9 0A       		.byte	0xa
 2976 0aca 4006     		.2byte	0x640
 2977 0acc 00       		.byte	0
 2978 0acd 17       		.uleb128 0x17
 2979 0ace 68000000 		.4byte	.LVL101
 2980 0ad2 5C060000 		.4byte	0x65c
 2981 0ad6 E10A0000 		.4byte	0xae1
 2982 0ada 18       		.uleb128 0x18
 2983 0adb 01       		.uleb128 0x1
 2984 0adc 50       		.byte	0x50
 2985 0add 02       		.uleb128 0x2
 2986 0ade 75       		.byte	0x75
 2987 0adf 00       		.sleb128 0
 2988 0ae0 00       		.byte	0
 2989 0ae1 16       		.uleb128 0x16
 2990 0ae2 76000000 		.4byte	.LVL102
 2991 0ae6 940F0000 		.4byte	0xf94
 2992 0aea 17       		.uleb128 0x17
 2993 0aeb 7E000000 		.4byte	.LVL103
 2994 0aef 220E0000 		.4byte	0xe22
 2995 0af3 FE0A0000 		.4byte	0xafe
 2996 0af7 18       		.uleb128 0x18
 2997 0af8 01       		.uleb128 0x1
 2998 0af9 50       		.byte	0x50
 2999 0afa 02       		.uleb128 0x2
 3000 0afb 76       		.byte	0x76
 3001 0afc 00       		.sleb128 0
 3002 0afd 00       		.byte	0
 3003 0afe 16       		.uleb128 0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 79


 3004 0aff 86000000 		.4byte	.LVL104
 3005 0b03 9F0F0000 		.4byte	0xf9f
 3006 0b07 17       		.uleb128 0x17
 3007 0b08 8C000000 		.4byte	.LVL105
 3008 0b0c 2D0E0000 		.4byte	0xe2d
 3009 0b10 1B0B0000 		.4byte	0xb1b
 3010 0b14 18       		.uleb128 0x18
 3011 0b15 01       		.uleb128 0x1
 3012 0b16 50       		.byte	0x50
 3013 0b17 02       		.uleb128 0x2
 3014 0b18 74       		.byte	0x74
 3015 0b19 00       		.sleb128 0
 3016 0b1a 00       		.byte	0
 3017 0b1b 16       		.uleb128 0x16
 3018 0b1c 9E000000 		.4byte	.LVL106
 3019 0b20 BE070000 		.4byte	0x7be
 3020 0b24 17       		.uleb128 0x17
 3021 0b25 A4000000 		.4byte	.LVL107
 3022 0b29 DE070000 		.4byte	0x7de
 3023 0b2d 380B0000 		.4byte	0xb38
 3024 0b31 18       		.uleb128 0x18
 3025 0b32 01       		.uleb128 0x1
 3026 0b33 50       		.byte	0x50
 3027 0b34 02       		.uleb128 0x2
 3028 0b35 74       		.byte	0x74
 3029 0b36 00       		.sleb128 0
 3030 0b37 00       		.byte	0
 3031 0b38 17       		.uleb128 0x17
 3032 0b39 CA000000 		.4byte	.LVL108
 3033 0b3d 5C060000 		.4byte	0x65c
 3034 0b41 4C0B0000 		.4byte	0xb4c
 3035 0b45 18       		.uleb128 0x18
 3036 0b46 01       		.uleb128 0x1
 3037 0b47 50       		.byte	0x50
 3038 0b48 02       		.uleb128 0x2
 3039 0b49 75       		.byte	0x75
 3040 0b4a 00       		.sleb128 0
 3041 0b4b 00       		.byte	0
 3042 0b4c 17       		.uleb128 0x17
 3043 0b4d DC000000 		.4byte	.LVL109
 3044 0b51 AA0F0000 		.4byte	0xfaa
 3045 0b55 5F0B0000 		.4byte	0xb5f
 3046 0b59 18       		.uleb128 0x18
 3047 0b5a 01       		.uleb128 0x1
 3048 0b5b 50       		.byte	0x50
 3049 0b5c 01       		.uleb128 0x1
 3050 0b5d 31       		.byte	0x31
 3051 0b5e 00       		.byte	0
 3052 0b5f 17       		.uleb128 0x17
 3053 0b60 E4000000 		.4byte	.LVL110
 3054 0b64 AA0F0000 		.4byte	0xfaa
 3055 0b68 730B0000 		.4byte	0xb73
 3056 0b6c 18       		.uleb128 0x18
 3057 0b6d 01       		.uleb128 0x1
 3058 0b6e 50       		.byte	0x50
 3059 0b6f 02       		.uleb128 0x2
 3060 0b70 74       		.byte	0x74
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 80


 3061 0b71 00       		.sleb128 0
 3062 0b72 00       		.byte	0
 3063 0b73 19       		.uleb128 0x19
 3064 0b74 EA000000 		.4byte	.LVL111
 3065 0b78 660F0000 		.4byte	0xf66
 3066 0b7c 18       		.uleb128 0x18
 3067 0b7d 01       		.uleb128 0x1
 3068 0b7e 50       		.byte	0x50
 3069 0b7f 01       		.uleb128 0x1
 3070 0b80 3A       		.byte	0x3a
 3071 0b81 00       		.byte	0
 3072 0b82 00       		.byte	0
 3073 0b83 24       		.uleb128 0x24
 3074 0b84 AC090000 		.4byte	.LASF80
 3075 0b88 05       		.byte	0x5
 3076 0b89 0F       		.byte	0xf
 3077 0b8a E4000000 		.4byte	0xe4
 3078 0b8e 24       		.uleb128 0x24
 3079 0b8f 1A050000 		.4byte	.LASF111
 3080 0b93 05       		.byte	0x5
 3081 0b94 10       		.byte	0x10
 3082 0b95 E4000000 		.4byte	0xe4
 3083 0b99 25       		.uleb128 0x25
 3084 0b9a 34030000 		.4byte	.LASF112
 3085 0b9e 01       		.byte	0x1
 3086 0b9f 5A       		.byte	0x5a
 3087 0ba0 1E080000 		.4byte	0x81e
 3088 0ba4 05       		.uleb128 0x5
 3089 0ba5 03       		.byte	0x3
 3090 0ba6 00000000 		.4byte	inAuto
 3091 0baa 26       		.uleb128 0x26
 3092 0bab 4A6F6700 		.ascii	"Jog\000"
 3093 0baf 01       		.byte	0x1
 3094 0bb0 5C       		.byte	0x5c
 3095 0bb1 BB0B0000 		.4byte	0xbbb
 3096 0bb5 05       		.uleb128 0x5
 3097 0bb6 03       		.byte	0x3
 3098 0bb7 00000000 		.4byte	Jog
 3099 0bbb 06       		.uleb128 0x6
 3100 0bbc B8000000 		.4byte	0xb8
 3101 0bc0 25       		.uleb128 0x25
 3102 0bc1 14070000 		.4byte	.LASF113
 3103 0bc5 01       		.byte	0x1
 3104 0bc6 5D       		.byte	0x5d
 3105 0bc7 1E080000 		.4byte	0x81e
 3106 0bcb 05       		.uleb128 0x5
 3107 0bcc 03       		.byte	0x3
 3108 0bcd 00000000 		.4byte	PID_Enabled
 3109 0bd1 25       		.uleb128 0x25
 3110 0bd2 04070000 		.4byte	.LASF114
 3111 0bd6 01       		.byte	0x1
 3112 0bd7 5D       		.byte	0x5d
 3113 0bd8 1E080000 		.4byte	0x81e
 3114 0bdc 05       		.uleb128 0x5
 3115 0bdd 03       		.byte	0x3
 3116 0bde 00000000 		.4byte	PID_Was_Enabled
 3117 0be2 25       		.uleb128 0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 81


 3118 0be3 18080000 		.4byte	.LASF115
 3119 0be7 01       		.byte	0x1
 3120 0be8 5E       		.byte	0x5e
 3121 0be9 E4000000 		.4byte	0xe4
 3122 0bed 05       		.uleb128 0x5
 3123 0bee 03       		.byte	0x3
 3124 0bef 00000000 		.4byte	PID_Setpoint
 3125 0bf3 25       		.uleb128 0x25
 3126 0bf4 5E0A0000 		.4byte	.LASF116
 3127 0bf8 01       		.byte	0x1
 3128 0bf9 5E       		.byte	0x5e
 3129 0bfa E4000000 		.4byte	0xe4
 3130 0bfe 05       		.uleb128 0x5
 3131 0bff 03       		.byte	0x3
 3132 0c00 00000000 		.4byte	PID_EffectiveSetpoint
 3133 0c04 25       		.uleb128 0x25
 3134 0c05 F8010000 		.4byte	.LASF117
 3135 0c09 01       		.byte	0x1
 3136 0c0a 5F       		.byte	0x5f
 3137 0c0b C3000000 		.4byte	0xc3
 3138 0c0f 05       		.uleb128 0x5
 3139 0c10 03       		.byte	0x3
 3140 0c11 00000000 		.4byte	PID_EffSetDelta
 3141 0c15 25       		.uleb128 0x25
 3142 0c16 08020000 		.4byte	.LASF118
 3143 0c1a 01       		.byte	0x1
 3144 0c1b 60       		.byte	0x60
 3145 0c1c EF000000 		.4byte	0xef
 3146 0c20 05       		.uleb128 0x5
 3147 0c21 03       		.byte	0x3
 3148 0c22 00000000 		.4byte	lastTime
 3149 0c26 25       		.uleb128 0x25
 3150 0c27 CA030000 		.4byte	.LASF119
 3151 0c2b 01       		.byte	0x1
 3152 0c2c 62       		.byte	0x62
 3153 0c2d DF060000 		.4byte	0x6df
 3154 0c31 05       		.uleb128 0x5
 3155 0c32 03       		.byte	0x3
 3156 0c33 00000000 		.4byte	Position
 3157 0c37 25       		.uleb128 0x25
 3158 0c38 FD050000 		.4byte	.LASF120
 3159 0c3c 01       		.byte	0x1
 3160 0c3d 62       		.byte	0x62
 3161 0c3e DF060000 		.4byte	0x6df
 3162 0c42 05       		.uleb128 0x5
 3163 0c43 03       		.byte	0x3
 3164 0c44 00000000 		.4byte	LastPosition
 3165 0c48 25       		.uleb128 0x25
 3166 0c49 CB060000 		.4byte	.LASF121
 3167 0c4d 01       		.byte	0x1
 3168 0c4e 63       		.byte	0x63
 3169 0c4f DF060000 		.4byte	0x6df
 3170 0c53 05       		.uleb128 0x5
 3171 0c54 03       		.byte	0x3
 3172 0c55 00000000 		.4byte	Output
 3173 0c59 25       		.uleb128 0x25
 3174 0c5a 4E020000 		.4byte	.LASF59
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 82


 3175 0c5e 01       		.byte	0x1
 3176 0c5f 64       		.byte	0x64
 3177 0c60 6A0C0000 		.4byte	0xc6a
 3178 0c64 05       		.uleb128 0x5
 3179 0c65 03       		.byte	0x3
 3180 0c66 00000000 		.4byte	limitOutput
 3181 0c6a 06       		.uleb128 0x6
 3182 0c6b D9000000 		.4byte	0xd9
 3183 0c6f 25       		.uleb128 0x25
 3184 0c70 3D040000 		.4byte	.LASF60
 3185 0c74 01       		.byte	0x1
 3186 0c75 65       		.byte	0x65
 3187 0c76 6A0C0000 		.4byte	0xc6a
 3188 0c7a 05       		.uleb128 0x5
 3189 0c7b 03       		.byte	0x3
 3190 0c7c 00000000 		.4byte	limitIterm
 3191 0c80 25       		.uleb128 0x25
 3192 0c81 0D090000 		.4byte	.LASF122
 3193 0c85 01       		.byte	0x1
 3194 0c86 67       		.byte	0x67
 3195 0c87 1E080000 		.4byte	0x81e
 3196 0c8b 05       		.uleb128 0x5
 3197 0c8c 03       		.byte	0x3
 3198 0c8d 00000000 		.4byte	homingDone
 3199 0c91 25       		.uleb128 0x25
 3200 0c92 54070000 		.4byte	.LASF123
 3201 0c96 01       		.byte	0x1
 3202 0c97 72       		.byte	0x72
 3203 0c98 EF000000 		.4byte	0xef
 3204 0c9c 05       		.uleb128 0x5
 3205 0c9d 03       		.byte	0x3
 3206 0c9e 00000000 		.4byte	LastMoveStartTimeUsec
 3207 0ca2 25       		.uleb128 0x25
 3208 0ca3 18090000 		.4byte	.LASF124
 3209 0ca7 01       		.byte	0x1
 3210 0ca8 73       		.byte	0x73
 3211 0ca9 EF000000 		.4byte	0xef
 3212 0cad 05       		.uleb128 0x5
 3213 0cae 03       		.byte	0x3
 3214 0caf 00000000 		.4byte	LastMoveEndTimeUsec
 3215 0cb3 25       		.uleb128 0x25
 3216 0cb4 2F010000 		.4byte	.LASF125
 3217 0cb8 01       		.byte	0x1
 3218 0cb9 76       		.byte	0x76
 3219 0cba D9000000 		.4byte	0xd9
 3220 0cbe 05       		.uleb128 0x5
 3221 0cbf 03       		.byte	0x3
 3222 0cc0 00000000 		.4byte	LastMoveStableCount
 3223 0cc4 25       		.uleb128 0x25
 3224 0cc5 CA040000 		.4byte	.LASF126
 3225 0cc9 01       		.byte	0x1
 3226 0cca 79       		.byte	0x79
 3227 0ccb EF000000 		.4byte	0xef
 3228 0ccf 05       		.uleb128 0x5
 3229 0cd0 03       		.byte	0x3
 3230 0cd1 00000000 		.4byte	LastMoveTimeUsec
 3231 0cd5 25       		.uleb128 0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 83


 3232 0cd6 2B060000 		.4byte	.LASF127
 3233 0cda 01       		.byte	0x1
 3234 0cdb 7C       		.byte	0x7c
 3235 0cdc 1E080000 		.4byte	0x81e
 3236 0ce0 05       		.uleb128 0x5
 3237 0ce1 03       		.byte	0x3
 3238 0ce2 00000000 		.4byte	NewCommandedMove
 3239 0ce6 25       		.uleb128 0x25
 3240 0ce7 70080000 		.4byte	.LASF128
 3241 0ceb 01       		.byte	0x1
 3242 0cec 81       		.byte	0x81
 3243 0ced F70C0000 		.4byte	0xcf7
 3244 0cf1 05       		.uleb128 0x5
 3245 0cf2 03       		.byte	0x3
 3246 0cf3 00000000 		.4byte	UptimeMicroseconds
 3247 0cf7 06       		.uleb128 0x6
 3248 0cf8 FA000000 		.4byte	0xfa
 3249 0cfc 25       		.uleb128 0x25
 3250 0cfd CF090000 		.4byte	.LASF129
 3251 0d01 01       		.byte	0x1
 3252 0d02 82       		.byte	0x82
 3253 0d03 F70C0000 		.4byte	0xcf7
 3254 0d07 05       		.uleb128 0x5
 3255 0d08 03       		.byte	0x3
 3256 0d09 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3257 0d0d 25       		.uleb128 0x25
 3258 0d0e 72030000 		.4byte	.LASF130
 3259 0d12 01       		.byte	0x1
 3260 0d13 83       		.byte	0x83
 3261 0d14 F70C0000 		.4byte	0xcf7
 3262 0d18 05       		.uleb128 0x5
 3263 0d19 03       		.byte	0x3
 3264 0d1a 00000000 		.4byte	UptimeMilliseconds
 3265 0d1e 25       		.uleb128 0x25
 3266 0d1f 4E050000 		.4byte	.LASF131
 3267 0d23 01       		.byte	0x1
 3268 0d24 84       		.byte	0x84
 3269 0d25 F70C0000 		.4byte	0xcf7
 3270 0d29 05       		.uleb128 0x5
 3271 0d2a 03       		.byte	0x3
 3272 0d2b 00000000 		.4byte	UptimeMillisecondsAccumulator
 3273 0d2f 25       		.uleb128 0x25
 3274 0d30 EE070000 		.4byte	.LASF132
 3275 0d34 01       		.byte	0x1
 3276 0d35 85       		.byte	0x85
 3277 0d36 F70C0000 		.4byte	0xcf7
 3278 0d3a 05       		.uleb128 0x5
 3279 0d3b 03       		.byte	0x3
 3280 0d3c 00000000 		.4byte	UptimeSeconds
 3281 0d40 25       		.uleb128 0x25
 3282 0d41 42020000 		.4byte	.LASF133
 3283 0d45 01       		.byte	0x1
 3284 0d46 B1       		.byte	0xb1
 3285 0d47 510D0000 		.4byte	0xd51
 3286 0d4b 05       		.uleb128 0x5
 3287 0d4c 03       		.byte	0x3
 3288 0d4d 00000000 		.4byte	ConfigState
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 84


 3289 0d51 06       		.uleb128 0x6
 3290 0d52 6F010000 		.4byte	0x16f
 3291 0d56 25       		.uleb128 0x25
 3292 0d57 E4080000 		.4byte	.LASF134
 3293 0d5b 01       		.byte	0x1
 3294 0d5c B2       		.byte	0xb2
 3295 0d5d 670D0000 		.4byte	0xd67
 3296 0d61 05       		.uleb128 0x5
 3297 0d62 03       		.byte	0x3
 3298 0d63 00000000 		.4byte	FaultState
 3299 0d67 06       		.uleb128 0x6
 3300 0d68 C3000000 		.4byte	0xc3
 3301 0d6c 25       		.uleb128 0x25
 3302 0d6d FE080000 		.4byte	.LASF135
 3303 0d71 01       		.byte	0x1
 3304 0d72 B3       		.byte	0xb3
 3305 0d73 670D0000 		.4byte	0xd67
 3306 0d77 05       		.uleb128 0x5
 3307 0d78 03       		.byte	0x3
 3308 0d79 00000000 		.4byte	ConfigSequence
 3309 0d7d 25       		.uleb128 0x25
 3310 0d7e 3E080000 		.4byte	.LASF136
 3311 0d82 01       		.byte	0x1
 3312 0d83 B4       		.byte	0xb4
 3313 0d84 6A0C0000 		.4byte	0xc6a
 3314 0d88 05       		.uleb128 0x5
 3315 0d89 03       		.byte	0x3
 3316 0d8a 00000000 		.4byte	ChecksumErrors
 3317 0d8e 25       		.uleb128 0x25
 3318 0d8f 11020000 		.4byte	.LASF137
 3319 0d93 01       		.byte	0x1
 3320 0d94 B5       		.byte	0xb5
 3321 0d95 9F0D0000 		.4byte	0xd9f
 3322 0d99 05       		.uleb128 0x5
 3323 0d9a 03       		.byte	0x3
 3324 0d9b 00000000 		.4byte	MotorCurrent
 3325 0d9f 06       		.uleb128 0x6
 3326 0da0 CE000000 		.4byte	0xce
 3327 0da4 0F       		.uleb128 0xf
 3328 0da5 C3000000 		.4byte	0xc3
 3329 0da9 B40D0000 		.4byte	0xdb4
 3330 0dad 10       		.uleb128 0x10
 3331 0dae 3E010000 		.4byte	0x13e
 3332 0db2 13       		.byte	0x13
 3333 0db3 00       		.byte	0
 3334 0db4 25       		.uleb128 0x25
 3335 0db5 D5050000 		.4byte	.LASF138
 3336 0db9 01       		.byte	0x1
 3337 0dba B6       		.byte	0xb6
 3338 0dbb A40D0000 		.4byte	0xda4
 3339 0dbf 05       		.uleb128 0x5
 3340 0dc0 03       		.byte	0x3
 3341 0dc1 00000000 		.4byte	CurrentI2Cinbuf
 3342 0dc5 25       		.uleb128 0x25
 3343 0dc6 95070000 		.4byte	.LASF139
 3344 0dca 01       		.byte	0x1
 3345 0dcb C8       		.byte	0xc8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 85


 3346 0dcc EF000000 		.4byte	0xef
 3347 0dd0 05       		.uleb128 0x5
 3348 0dd1 03       		.byte	0x3
 3349 0dd2 00000000 		.4byte	LastMessageTimeSeconds
 3350 0dd6 27       		.uleb128 0x27
 3351 0dd7 08000000 		.4byte	.LASF140
 3352 0ddb 01       		.byte	0x1
 3353 0ddc 0701     		.2byte	0x107
 3354 0dde 6E030000 		.4byte	0x36e
 3355 0de2 05       		.uleb128 0x5
 3356 0de3 03       		.byte	0x3
 3357 0de4 00000000 		.4byte	rxMessage
 3358 0de8 27       		.uleb128 0x27
 3359 0de9 0A060000 		.4byte	.LASF141
 3360 0ded 01       		.byte	0x1
 3361 0dee 2001     		.2byte	0x120
 3362 0df0 9D040000 		.4byte	0x49d
 3363 0df4 05       		.uleb128 0x5
 3364 0df5 03       		.byte	0x3
 3365 0df6 00000000 		.4byte	txMessage
 3366 0dfa 27       		.uleb128 0x27
 3367 0dfb 4F0A0000 		.4byte	.LASF142
 3368 0dff 01       		.byte	0x1
 3369 0e00 2801     		.2byte	0x128
 3370 0e02 D9040000 		.4byte	0x4d9
 3371 0e06 05       		.uleb128 0x5
 3372 0e07 03       		.byte	0x3
 3373 0e08 00000000 		.4byte	txMessageState
 3374 0e0c 28       		.uleb128 0x28
 3375 0e0d 96040000 		.4byte	.LASF143
 3376 0e11 96040000 		.4byte	.LASF143
 3377 0e15 06       		.byte	0x6
 3378 0e16 28       		.byte	0x28
 3379 0e17 28       		.uleb128 0x28
 3380 0e18 2C090000 		.4byte	.LASF144
 3381 0e1c 2C090000 		.4byte	.LASF144
 3382 0e20 07       		.byte	0x7
 3383 0e21 39       		.byte	0x39
 3384 0e22 28       		.uleb128 0x28
 3385 0e23 14060000 		.4byte	.LASF145
 3386 0e27 14060000 		.4byte	.LASF145
 3387 0e2b 08       		.byte	0x8
 3388 0e2c 5A       		.byte	0x5a
 3389 0e2d 28       		.uleb128 0x28
 3390 0e2e 5F040000 		.4byte	.LASF146
 3391 0e32 5F040000 		.4byte	.LASF146
 3392 0e36 09       		.byte	0x9
 3393 0e37 5A       		.byte	0x5a
 3394 0e38 28       		.uleb128 0x28
 3395 0e39 0E0A0000 		.4byte	.LASF147
 3396 0e3d 0E0A0000 		.4byte	.LASF147
 3397 0e41 0A       		.byte	0xa
 3398 0e42 28       		.byte	0x28
 3399 0e43 28       		.uleb128 0x28
 3400 0e44 D8000000 		.4byte	.LASF148
 3401 0e48 D8000000 		.4byte	.LASF148
 3402 0e4c 0B       		.byte	0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 86


 3403 0e4d 39       		.byte	0x39
 3404 0e4e 28       		.uleb128 0x28
 3405 0e4f 5C030000 		.4byte	.LASF149
 3406 0e53 5C030000 		.4byte	.LASF149
 3407 0e57 0C       		.byte	0xc
 3408 0e58 39       		.byte	0x39
 3409 0e59 28       		.uleb128 0x28
 3410 0e5a 0E050000 		.4byte	.LASF150
 3411 0e5e 0E050000 		.4byte	.LASF150
 3412 0e62 0C       		.byte	0xc
 3413 0e63 32       		.byte	0x32
 3414 0e64 29       		.uleb128 0x29
 3415 0e65 47050000 		.4byte	.LASF185
 3416 0e69 47050000 		.4byte	.LASF185
 3417 0e6d 2A       		.uleb128 0x2a
 3418 0e6e E5050000 		.4byte	.LASF151
 3419 0e72 E5050000 		.4byte	.LASF151
 3420 0e76 0D       		.byte	0xd
 3421 0e77 3D03     		.2byte	0x33d
 3422 0e79 2A       		.uleb128 0x2a
 3423 0e7a 1B040000 		.4byte	.LASF152
 3424 0e7e 1B040000 		.4byte	.LASF152
 3425 0e82 0D       		.byte	0xd
 3426 0e83 3F03     		.2byte	0x33f
 3427 0e85 2A       		.uleb128 0x2a
 3428 0e86 4B010000 		.4byte	.LASF153
 3429 0e8a 4B010000 		.4byte	.LASF153
 3430 0e8e 0D       		.byte	0xd
 3431 0e8f 4703     		.2byte	0x347
 3432 0e91 28       		.uleb128 0x28
 3433 0e92 99060000 		.4byte	.LASF154
 3434 0e96 99060000 		.4byte	.LASF154
 3435 0e9a 0E       		.byte	0xe
 3436 0e9b 70       		.byte	0x70
 3437 0e9c 2A       		.uleb128 0x2a
 3438 0e9d 7C040000 		.4byte	.LASF155
 3439 0ea1 7C040000 		.4byte	.LASF155
 3440 0ea5 0F       		.byte	0xf
 3441 0ea6 5501     		.2byte	0x155
 3442 0ea8 28       		.uleb128 0x28
 3443 0ea9 85030000 		.4byte	.LASF156
 3444 0ead 85030000 		.4byte	.LASF156
 3445 0eb1 08       		.byte	0x8
 3446 0eb2 5D       		.byte	0x5d
 3447 0eb3 2A       		.uleb128 0x2a
 3448 0eb4 46030000 		.4byte	.LASF157
 3449 0eb8 46030000 		.4byte	.LASF157
 3450 0ebc 0D       		.byte	0xd
 3451 0ebd 4503     		.2byte	0x345
 3452 0ebf 28       		.uleb128 0x28
 3453 0ec0 73070000 		.4byte	.LASF158
 3454 0ec4 73070000 		.4byte	.LASF158
 3455 0ec8 10       		.byte	0x10
 3456 0ec9 36       		.byte	0x36
 3457 0eca 28       		.uleb128 0x28
 3458 0ecb 30050000 		.4byte	.LASF159
 3459 0ecf 30050000 		.4byte	.LASF159
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 87


 3460 0ed3 11       		.byte	0x11
 3461 0ed4 36       		.byte	0x36
 3462 0ed5 28       		.uleb128 0x28
 3463 0ed6 E7030000 		.4byte	.LASF160
 3464 0eda E7030000 		.4byte	.LASF160
 3465 0ede 05       		.byte	0x5
 3466 0edf 11       		.byte	0x11
 3467 0ee0 2A       		.uleb128 0x2a
 3468 0ee1 E9040000 		.4byte	.LASF161
 3469 0ee5 E9040000 		.4byte	.LASF161
 3470 0ee9 12       		.byte	0x12
 3471 0eea 4701     		.2byte	0x147
 3472 0eec 28       		.uleb128 0x28
 3473 0eed 5C090000 		.4byte	.LASF162
 3474 0ef1 5C090000 		.4byte	.LASF162
 3475 0ef5 13       		.byte	0x13
 3476 0ef6 33       		.byte	0x33
 3477 0ef7 2A       		.uleb128 0x2a
 3478 0ef8 0E030000 		.4byte	.LASF163
 3479 0efc 0E030000 		.4byte	.LASF163
 3480 0f00 12       		.byte	0x12
 3481 0f01 3201     		.2byte	0x132
 3482 0f03 28       		.uleb128 0x28
 3483 0f04 FD020000 		.4byte	.LASF164
 3484 0f08 FD020000 		.4byte	.LASF164
 3485 0f0c 14       		.byte	0x14
 3486 0f0d 18       		.byte	0x18
 3487 0f0e 28       		.uleb128 0x28
 3488 0f0f 78060000 		.4byte	.LASF165
 3489 0f13 78060000 		.4byte	.LASF165
 3490 0f17 14       		.byte	0x14
 3491 0f18 20       		.byte	0x20
 3492 0f19 28       		.uleb128 0x28
 3493 0f1a 68090000 		.4byte	.LASF166
 3494 0f1e 68090000 		.4byte	.LASF166
 3495 0f22 0A       		.byte	0xa
 3496 0f23 18       		.byte	0x18
 3497 0f24 28       		.uleb128 0x28
 3498 0f25 E8020000 		.4byte	.LASF167
 3499 0f29 E8020000 		.4byte	.LASF167
 3500 0f2d 0A       		.byte	0xa
 3501 0f2e 20       		.byte	0x20
 3502 0f2f 28       		.uleb128 0x28
 3503 0f30 F6090000 		.4byte	.LASF168
 3504 0f34 F6090000 		.4byte	.LASF168
 3505 0f38 06       		.byte	0x6
 3506 0f39 18       		.byte	0x18
 3507 0f3a 28       		.uleb128 0x28
 3508 0f3b FC070000 		.4byte	.LASF169
 3509 0f3f FC070000 		.4byte	.LASF169
 3510 0f43 06       		.byte	0x6
 3511 0f44 20       		.byte	0x20
 3512 0f45 28       		.uleb128 0x28
 3513 0f46 AF010000 		.4byte	.LASF170
 3514 0f4a AF010000 		.4byte	.LASF170
 3515 0f4e 15       		.byte	0x15
 3516 0f4f 18       		.byte	0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 88


 3517 0f50 28       		.uleb128 0x28
 3518 0f51 B3040000 		.4byte	.LASF171
 3519 0f55 B3040000 		.4byte	.LASF171
 3520 0f59 15       		.byte	0x15
 3521 0f5a 20       		.byte	0x20
 3522 0f5b 28       		.uleb128 0x28
 3523 0f5c 25010000 		.4byte	.LASF172
 3524 0f60 25010000 		.4byte	.LASF172
 3525 0f64 16       		.byte	0x16
 3526 0f65 72       		.byte	0x72
 3527 0f66 28       		.uleb128 0x28
 3528 0f67 00000000 		.4byte	.LASF173
 3529 0f6b 00000000 		.4byte	.LASF173
 3530 0f6f 17       		.byte	0x17
 3531 0f70 EC       		.byte	0xec
 3532 0f71 28       		.uleb128 0x28
 3533 0f72 AA080000 		.4byte	.LASF174
 3534 0f76 AA080000 		.4byte	.LASF174
 3535 0f7a 18       		.byte	0x18
 3536 0f7b 72       		.byte	0x72
 3537 0f7c 2A       		.uleb128 0x2a
 3538 0f7d 48070000 		.4byte	.LASF175
 3539 0f81 48070000 		.4byte	.LASF175
 3540 0f85 0F       		.byte	0xf
 3541 0f86 3201     		.2byte	0x132
 3542 0f88 2A       		.uleb128 0x2a
 3543 0f89 30020000 		.4byte	.LASF176
 3544 0f8d 30020000 		.4byte	.LASF176
 3545 0f91 0F       		.byte	0xf
 3546 0f92 5001     		.2byte	0x150
 3547 0f94 28       		.uleb128 0x28
 3548 0f95 A0000000 		.4byte	.LASF177
 3549 0f99 A0000000 		.4byte	.LASF177
 3550 0f9d 08       		.byte	0x8
 3551 0f9e 4F       		.byte	0x4f
 3552 0f9f 28       		.uleb128 0x28
 3553 0fa0 B9090000 		.4byte	.LASF178
 3554 0fa4 B9090000 		.4byte	.LASF178
 3555 0fa8 09       		.byte	0x9
 3556 0fa9 4F       		.byte	0x4f
 3557 0faa 28       		.uleb128 0x28
 3558 0fab EF000000 		.4byte	.LASF179
 3559 0faf EF000000 		.4byte	.LASF179
 3560 0fb3 19       		.byte	0x19
 3561 0fb4 33       		.byte	0x33
 3562 0fb5 00       		.byte	0
 3563              		.section	.debug_abbrev,"",%progbits
 3564              	.Ldebug_abbrev0:
 3565 0000 01       		.uleb128 0x1
 3566 0001 11       		.uleb128 0x11
 3567 0002 01       		.byte	0x1
 3568 0003 25       		.uleb128 0x25
 3569 0004 0E       		.uleb128 0xe
 3570 0005 13       		.uleb128 0x13
 3571 0006 0B       		.uleb128 0xb
 3572 0007 03       		.uleb128 0x3
 3573 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 89


 3574 0009 1B       		.uleb128 0x1b
 3575 000a 0E       		.uleb128 0xe
 3576 000b 55       		.uleb128 0x55
 3577 000c 17       		.uleb128 0x17
 3578 000d 11       		.uleb128 0x11
 3579 000e 01       		.uleb128 0x1
 3580 000f 10       		.uleb128 0x10
 3581 0010 17       		.uleb128 0x17
 3582 0011 00       		.byte	0
 3583 0012 00       		.byte	0
 3584 0013 02       		.uleb128 0x2
 3585 0014 16       		.uleb128 0x16
 3586 0015 00       		.byte	0
 3587 0016 03       		.uleb128 0x3
 3588 0017 0E       		.uleb128 0xe
 3589 0018 3A       		.uleb128 0x3a
 3590 0019 0B       		.uleb128 0xb
 3591 001a 3B       		.uleb128 0x3b
 3592 001b 0B       		.uleb128 0xb
 3593 001c 49       		.uleb128 0x49
 3594 001d 13       		.uleb128 0x13
 3595 001e 00       		.byte	0
 3596 001f 00       		.byte	0
 3597 0020 03       		.uleb128 0x3
 3598 0021 24       		.uleb128 0x24
 3599 0022 00       		.byte	0
 3600 0023 0B       		.uleb128 0xb
 3601 0024 0B       		.uleb128 0xb
 3602 0025 3E       		.uleb128 0x3e
 3603 0026 0B       		.uleb128 0xb
 3604 0027 03       		.uleb128 0x3
 3605 0028 0E       		.uleb128 0xe
 3606 0029 00       		.byte	0
 3607 002a 00       		.byte	0
 3608 002b 04       		.uleb128 0x4
 3609 002c 24       		.uleb128 0x24
 3610 002d 00       		.byte	0
 3611 002e 0B       		.uleb128 0xb
 3612 002f 0B       		.uleb128 0xb
 3613 0030 3E       		.uleb128 0x3e
 3614 0031 0B       		.uleb128 0xb
 3615 0032 03       		.uleb128 0x3
 3616 0033 08       		.uleb128 0x8
 3617 0034 00       		.byte	0
 3618 0035 00       		.byte	0
 3619 0036 05       		.uleb128 0x5
 3620 0037 16       		.uleb128 0x16
 3621 0038 00       		.byte	0
 3622 0039 03       		.uleb128 0x3
 3623 003a 0E       		.uleb128 0xe
 3624 003b 3A       		.uleb128 0x3a
 3625 003c 0B       		.uleb128 0xb
 3626 003d 3B       		.uleb128 0x3b
 3627 003e 05       		.uleb128 0x5
 3628 003f 49       		.uleb128 0x49
 3629 0040 13       		.uleb128 0x13
 3630 0041 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 90


 3631 0042 00       		.byte	0
 3632 0043 06       		.uleb128 0x6
 3633 0044 35       		.uleb128 0x35
 3634 0045 00       		.byte	0
 3635 0046 49       		.uleb128 0x49
 3636 0047 13       		.uleb128 0x13
 3637 0048 00       		.byte	0
 3638 0049 00       		.byte	0
 3639 004a 07       		.uleb128 0x7
 3640 004b 04       		.uleb128 0x4
 3641 004c 01       		.byte	0x1
 3642 004d 0B       		.uleb128 0xb
 3643 004e 0B       		.uleb128 0xb
 3644 004f 49       		.uleb128 0x49
 3645 0050 13       		.uleb128 0x13
 3646 0051 3A       		.uleb128 0x3a
 3647 0052 0B       		.uleb128 0xb
 3648 0053 3B       		.uleb128 0x3b
 3649 0054 0B       		.uleb128 0xb
 3650 0055 01       		.uleb128 0x1
 3651 0056 13       		.uleb128 0x13
 3652 0057 00       		.byte	0
 3653 0058 00       		.byte	0
 3654 0059 08       		.uleb128 0x8
 3655 005a 28       		.uleb128 0x28
 3656 005b 00       		.byte	0
 3657 005c 03       		.uleb128 0x3
 3658 005d 0E       		.uleb128 0xe
 3659 005e 1C       		.uleb128 0x1c
 3660 005f 0B       		.uleb128 0xb
 3661 0060 00       		.byte	0
 3662 0061 00       		.byte	0
 3663 0062 09       		.uleb128 0x9
 3664 0063 13       		.uleb128 0x13
 3665 0064 01       		.byte	0x1
 3666 0065 0B       		.uleb128 0xb
 3667 0066 0B       		.uleb128 0xb
 3668 0067 3A       		.uleb128 0x3a
 3669 0068 0B       		.uleb128 0xb
 3670 0069 3B       		.uleb128 0x3b
 3671 006a 0B       		.uleb128 0xb
 3672 006b 01       		.uleb128 0x1
 3673 006c 13       		.uleb128 0x13
 3674 006d 00       		.byte	0
 3675 006e 00       		.byte	0
 3676 006f 0A       		.uleb128 0xa
 3677 0070 0D       		.uleb128 0xd
 3678 0071 00       		.byte	0
 3679 0072 03       		.uleb128 0x3
 3680 0073 0E       		.uleb128 0xe
 3681 0074 3A       		.uleb128 0x3a
 3682 0075 0B       		.uleb128 0xb
 3683 0076 3B       		.uleb128 0x3b
 3684 0077 0B       		.uleb128 0xb
 3685 0078 49       		.uleb128 0x49
 3686 0079 13       		.uleb128 0x13
 3687 007a 38       		.uleb128 0x38
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 91


 3688 007b 0B       		.uleb128 0xb
 3689 007c 00       		.byte	0
 3690 007d 00       		.byte	0
 3691 007e 0B       		.uleb128 0xb
 3692 007f 0D       		.uleb128 0xd
 3693 0080 00       		.byte	0
 3694 0081 03       		.uleb128 0x3
 3695 0082 08       		.uleb128 0x8
 3696 0083 3A       		.uleb128 0x3a
 3697 0084 0B       		.uleb128 0xb
 3698 0085 3B       		.uleb128 0x3b
 3699 0086 0B       		.uleb128 0xb
 3700 0087 49       		.uleb128 0x49
 3701 0088 13       		.uleb128 0x13
 3702 0089 38       		.uleb128 0x38
 3703 008a 0B       		.uleb128 0xb
 3704 008b 00       		.byte	0
 3705 008c 00       		.byte	0
 3706 008d 0C       		.uleb128 0xc
 3707 008e 17       		.uleb128 0x17
 3708 008f 01       		.byte	0x1
 3709 0090 0B       		.uleb128 0xb
 3710 0091 0B       		.uleb128 0xb
 3711 0092 3A       		.uleb128 0x3a
 3712 0093 0B       		.uleb128 0xb
 3713 0094 3B       		.uleb128 0x3b
 3714 0095 05       		.uleb128 0x5
 3715 0096 01       		.uleb128 0x1
 3716 0097 13       		.uleb128 0x13
 3717 0098 00       		.byte	0
 3718 0099 00       		.byte	0
 3719 009a 0D       		.uleb128 0xd
 3720 009b 0D       		.uleb128 0xd
 3721 009c 00       		.byte	0
 3722 009d 03       		.uleb128 0x3
 3723 009e 08       		.uleb128 0x8
 3724 009f 3A       		.uleb128 0x3a
 3725 00a0 0B       		.uleb128 0xb
 3726 00a1 3B       		.uleb128 0x3b
 3727 00a2 05       		.uleb128 0x5
 3728 00a3 49       		.uleb128 0x49
 3729 00a4 13       		.uleb128 0x13
 3730 00a5 00       		.byte	0
 3731 00a6 00       		.byte	0
 3732 00a7 0E       		.uleb128 0xe
 3733 00a8 0D       		.uleb128 0xd
 3734 00a9 00       		.byte	0
 3735 00aa 03       		.uleb128 0x3
 3736 00ab 0E       		.uleb128 0xe
 3737 00ac 3A       		.uleb128 0x3a
 3738 00ad 0B       		.uleb128 0xb
 3739 00ae 3B       		.uleb128 0x3b
 3740 00af 05       		.uleb128 0x5
 3741 00b0 49       		.uleb128 0x49
 3742 00b1 13       		.uleb128 0x13
 3743 00b2 00       		.byte	0
 3744 00b3 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 92


 3745 00b4 0F       		.uleb128 0xf
 3746 00b5 01       		.uleb128 0x1
 3747 00b6 01       		.byte	0x1
 3748 00b7 49       		.uleb128 0x49
 3749 00b8 13       		.uleb128 0x13
 3750 00b9 01       		.uleb128 0x1
 3751 00ba 13       		.uleb128 0x13
 3752 00bb 00       		.byte	0
 3753 00bc 00       		.byte	0
 3754 00bd 10       		.uleb128 0x10
 3755 00be 21       		.uleb128 0x21
 3756 00bf 00       		.byte	0
 3757 00c0 49       		.uleb128 0x49
 3758 00c1 13       		.uleb128 0x13
 3759 00c2 2F       		.uleb128 0x2f
 3760 00c3 0B       		.uleb128 0xb
 3761 00c4 00       		.byte	0
 3762 00c5 00       		.byte	0
 3763 00c6 11       		.uleb128 0x11
 3764 00c7 13       		.uleb128 0x13
 3765 00c8 01       		.byte	0x1
 3766 00c9 0B       		.uleb128 0xb
 3767 00ca 0B       		.uleb128 0xb
 3768 00cb 3A       		.uleb128 0x3a
 3769 00cc 0B       		.uleb128 0xb
 3770 00cd 3B       		.uleb128 0x3b
 3771 00ce 05       		.uleb128 0x5
 3772 00cf 01       		.uleb128 0x1
 3773 00d0 13       		.uleb128 0x13
 3774 00d1 00       		.byte	0
 3775 00d2 00       		.byte	0
 3776 00d3 12       		.uleb128 0x12
 3777 00d4 0D       		.uleb128 0xd
 3778 00d5 00       		.byte	0
 3779 00d6 03       		.uleb128 0x3
 3780 00d7 0E       		.uleb128 0xe
 3781 00d8 3A       		.uleb128 0x3a
 3782 00d9 0B       		.uleb128 0xb
 3783 00da 3B       		.uleb128 0x3b
 3784 00db 05       		.uleb128 0x5
 3785 00dc 49       		.uleb128 0x49
 3786 00dd 13       		.uleb128 0x13
 3787 00de 38       		.uleb128 0x38
 3788 00df 0B       		.uleb128 0xb
 3789 00e0 00       		.byte	0
 3790 00e1 00       		.byte	0
 3791 00e2 13       		.uleb128 0x13
 3792 00e3 0D       		.uleb128 0xd
 3793 00e4 00       		.byte	0
 3794 00e5 03       		.uleb128 0x3
 3795 00e6 08       		.uleb128 0x8
 3796 00e7 3A       		.uleb128 0x3a
 3797 00e8 0B       		.uleb128 0xb
 3798 00e9 3B       		.uleb128 0x3b
 3799 00ea 05       		.uleb128 0x5
 3800 00eb 49       		.uleb128 0x49
 3801 00ec 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 93


 3802 00ed 38       		.uleb128 0x38
 3803 00ee 0B       		.uleb128 0xb
 3804 00ef 00       		.byte	0
 3805 00f0 00       		.byte	0
 3806 00f1 14       		.uleb128 0x14
 3807 00f2 04       		.uleb128 0x4
 3808 00f3 01       		.byte	0x1
 3809 00f4 0B       		.uleb128 0xb
 3810 00f5 0B       		.uleb128 0xb
 3811 00f6 49       		.uleb128 0x49
 3812 00f7 13       		.uleb128 0x13
 3813 00f8 3A       		.uleb128 0x3a
 3814 00f9 0B       		.uleb128 0xb
 3815 00fa 3B       		.uleb128 0x3b
 3816 00fb 05       		.uleb128 0x5
 3817 00fc 01       		.uleb128 0x1
 3818 00fd 13       		.uleb128 0x13
 3819 00fe 00       		.byte	0
 3820 00ff 00       		.byte	0
 3821 0100 15       		.uleb128 0x15
 3822 0101 2E       		.uleb128 0x2e
 3823 0102 01       		.byte	0x1
 3824 0103 3F       		.uleb128 0x3f
 3825 0104 19       		.uleb128 0x19
 3826 0105 03       		.uleb128 0x3
 3827 0106 0E       		.uleb128 0xe
 3828 0107 3A       		.uleb128 0x3a
 3829 0108 0B       		.uleb128 0xb
 3830 0109 3B       		.uleb128 0x3b
 3831 010a 05       		.uleb128 0x5
 3832 010b 27       		.uleb128 0x27
 3833 010c 19       		.uleb128 0x19
 3834 010d 11       		.uleb128 0x11
 3835 010e 01       		.uleb128 0x1
 3836 010f 12       		.uleb128 0x12
 3837 0110 06       		.uleb128 0x6
 3838 0111 40       		.uleb128 0x40
 3839 0112 18       		.uleb128 0x18
 3840 0113 9742     		.uleb128 0x2117
 3841 0115 19       		.uleb128 0x19
 3842 0116 01       		.uleb128 0x1
 3843 0117 13       		.uleb128 0x13
 3844 0118 00       		.byte	0
 3845 0119 00       		.byte	0
 3846 011a 16       		.uleb128 0x16
 3847 011b 898201   		.uleb128 0x4109
 3848 011e 00       		.byte	0
 3849 011f 11       		.uleb128 0x11
 3850 0120 01       		.uleb128 0x1
 3851 0121 31       		.uleb128 0x31
 3852 0122 13       		.uleb128 0x13
 3853 0123 00       		.byte	0
 3854 0124 00       		.byte	0
 3855 0125 17       		.uleb128 0x17
 3856 0126 898201   		.uleb128 0x4109
 3857 0129 01       		.byte	0x1
 3858 012a 11       		.uleb128 0x11
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 94


 3859 012b 01       		.uleb128 0x1
 3860 012c 31       		.uleb128 0x31
 3861 012d 13       		.uleb128 0x13
 3862 012e 01       		.uleb128 0x1
 3863 012f 13       		.uleb128 0x13
 3864 0130 00       		.byte	0
 3865 0131 00       		.byte	0
 3866 0132 18       		.uleb128 0x18
 3867 0133 8A8201   		.uleb128 0x410a
 3868 0136 00       		.byte	0
 3869 0137 02       		.uleb128 0x2
 3870 0138 18       		.uleb128 0x18
 3871 0139 9142     		.uleb128 0x2111
 3872 013b 18       		.uleb128 0x18
 3873 013c 00       		.byte	0
 3874 013d 00       		.byte	0
 3875 013e 19       		.uleb128 0x19
 3876 013f 898201   		.uleb128 0x4109
 3877 0142 01       		.byte	0x1
 3878 0143 11       		.uleb128 0x11
 3879 0144 01       		.uleb128 0x1
 3880 0145 31       		.uleb128 0x31
 3881 0146 13       		.uleb128 0x13
 3882 0147 00       		.byte	0
 3883 0148 00       		.byte	0
 3884 0149 1A       		.uleb128 0x1a
 3885 014a 34       		.uleb128 0x34
 3886 014b 00       		.byte	0
 3887 014c 03       		.uleb128 0x3
 3888 014d 08       		.uleb128 0x8
 3889 014e 3A       		.uleb128 0x3a
 3890 014f 0B       		.uleb128 0xb
 3891 0150 3B       		.uleb128 0x3b
 3892 0151 05       		.uleb128 0x5
 3893 0152 49       		.uleb128 0x49
 3894 0153 13       		.uleb128 0x13
 3895 0154 02       		.uleb128 0x2
 3896 0155 17       		.uleb128 0x17
 3897 0156 00       		.byte	0
 3898 0157 00       		.byte	0
 3899 0158 1B       		.uleb128 0x1b
 3900 0159 05       		.uleb128 0x5
 3901 015a 00       		.byte	0
 3902 015b 03       		.uleb128 0x3
 3903 015c 0E       		.uleb128 0xe
 3904 015d 3A       		.uleb128 0x3a
 3905 015e 0B       		.uleb128 0xb
 3906 015f 3B       		.uleb128 0x3b
 3907 0160 05       		.uleb128 0x5
 3908 0161 49       		.uleb128 0x49
 3909 0162 13       		.uleb128 0x13
 3910 0163 02       		.uleb128 0x2
 3911 0164 17       		.uleb128 0x17
 3912 0165 00       		.byte	0
 3913 0166 00       		.byte	0
 3914 0167 1C       		.uleb128 0x1c
 3915 0168 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 95


 3916 0169 00       		.byte	0
 3917 016a 03       		.uleb128 0x3
 3918 016b 0E       		.uleb128 0xe
 3919 016c 3A       		.uleb128 0x3a
 3920 016d 0B       		.uleb128 0xb
 3921 016e 3B       		.uleb128 0x3b
 3922 016f 05       		.uleb128 0x5
 3923 0170 49       		.uleb128 0x49
 3924 0171 13       		.uleb128 0x13
 3925 0172 02       		.uleb128 0x2
 3926 0173 18       		.uleb128 0x18
 3927 0174 00       		.byte	0
 3928 0175 00       		.byte	0
 3929 0176 1D       		.uleb128 0x1d
 3930 0177 2E       		.uleb128 0x2e
 3931 0178 01       		.byte	0x1
 3932 0179 3F       		.uleb128 0x3f
 3933 017a 19       		.uleb128 0x19
 3934 017b 03       		.uleb128 0x3
 3935 017c 0E       		.uleb128 0xe
 3936 017d 3A       		.uleb128 0x3a
 3937 017e 0B       		.uleb128 0xb
 3938 017f 3B       		.uleb128 0x3b
 3939 0180 05       		.uleb128 0x5
 3940 0181 27       		.uleb128 0x27
 3941 0182 19       		.uleb128 0x19
 3942 0183 11       		.uleb128 0x11
 3943 0184 01       		.uleb128 0x1
 3944 0185 12       		.uleb128 0x12
 3945 0186 06       		.uleb128 0x6
 3946 0187 40       		.uleb128 0x40
 3947 0188 18       		.uleb128 0x18
 3948 0189 9642     		.uleb128 0x2116
 3949 018b 19       		.uleb128 0x19
 3950 018c 01       		.uleb128 0x1
 3951 018d 13       		.uleb128 0x13
 3952 018e 00       		.byte	0
 3953 018f 00       		.byte	0
 3954 0190 1E       		.uleb128 0x1e
 3955 0191 2E       		.uleb128 0x2e
 3956 0192 01       		.byte	0x1
 3957 0193 3F       		.uleb128 0x3f
 3958 0194 19       		.uleb128 0x19
 3959 0195 03       		.uleb128 0x3
 3960 0196 0E       		.uleb128 0xe
 3961 0197 3A       		.uleb128 0x3a
 3962 0198 0B       		.uleb128 0xb
 3963 0199 3B       		.uleb128 0x3b
 3964 019a 05       		.uleb128 0x5
 3965 019b 27       		.uleb128 0x27
 3966 019c 19       		.uleb128 0x19
 3967 019d 49       		.uleb128 0x49
 3968 019e 13       		.uleb128 0x13
 3969 019f 11       		.uleb128 0x11
 3970 01a0 01       		.uleb128 0x1
 3971 01a1 12       		.uleb128 0x12
 3972 01a2 06       		.uleb128 0x6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 96


 3973 01a3 40       		.uleb128 0x40
 3974 01a4 18       		.uleb128 0x18
 3975 01a5 9742     		.uleb128 0x2117
 3976 01a7 19       		.uleb128 0x19
 3977 01a8 01       		.uleb128 0x1
 3978 01a9 13       		.uleb128 0x13
 3979 01aa 00       		.byte	0
 3980 01ab 00       		.byte	0
 3981 01ac 1F       		.uleb128 0x1f
 3982 01ad 34       		.uleb128 0x34
 3983 01ae 00       		.byte	0
 3984 01af 03       		.uleb128 0x3
 3985 01b0 0E       		.uleb128 0xe
 3986 01b1 3A       		.uleb128 0x3a
 3987 01b2 0B       		.uleb128 0xb
 3988 01b3 3B       		.uleb128 0x3b
 3989 01b4 05       		.uleb128 0x5
 3990 01b5 49       		.uleb128 0x49
 3991 01b6 13       		.uleb128 0x13
 3992 01b7 02       		.uleb128 0x2
 3993 01b8 18       		.uleb128 0x18
 3994 01b9 00       		.byte	0
 3995 01ba 00       		.byte	0
 3996 01bb 20       		.uleb128 0x20
 3997 01bc 34       		.uleb128 0x34
 3998 01bd 00       		.byte	0
 3999 01be 03       		.uleb128 0x3
 4000 01bf 0E       		.uleb128 0xe
 4001 01c0 3A       		.uleb128 0x3a
 4002 01c1 0B       		.uleb128 0xb
 4003 01c2 3B       		.uleb128 0x3b
 4004 01c3 05       		.uleb128 0x5
 4005 01c4 49       		.uleb128 0x49
 4006 01c5 13       		.uleb128 0x13
 4007 01c6 02       		.uleb128 0x2
 4008 01c7 17       		.uleb128 0x17
 4009 01c8 00       		.byte	0
 4010 01c9 00       		.byte	0
 4011 01ca 21       		.uleb128 0x21
 4012 01cb 34       		.uleb128 0x34
 4013 01cc 00       		.byte	0
 4014 01cd 03       		.uleb128 0x3
 4015 01ce 0E       		.uleb128 0xe
 4016 01cf 3A       		.uleb128 0x3a
 4017 01d0 0B       		.uleb128 0xb
 4018 01d1 3B       		.uleb128 0x3b
 4019 01d2 05       		.uleb128 0x5
 4020 01d3 49       		.uleb128 0x49
 4021 01d4 13       		.uleb128 0x13
 4022 01d5 1C       		.uleb128 0x1c
 4023 01d6 0B       		.uleb128 0xb
 4024 01d7 00       		.byte	0
 4025 01d8 00       		.byte	0
 4026 01d9 22       		.uleb128 0x22
 4027 01da 26       		.uleb128 0x26
 4028 01db 00       		.byte	0
 4029 01dc 49       		.uleb128 0x49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 97


 4030 01dd 13       		.uleb128 0x13
 4031 01de 00       		.byte	0
 4032 01df 00       		.byte	0
 4033 01e0 23       		.uleb128 0x23
 4034 01e1 2E       		.uleb128 0x2e
 4035 01e2 01       		.byte	0x1
 4036 01e3 3F       		.uleb128 0x3f
 4037 01e4 19       		.uleb128 0x19
 4038 01e5 03       		.uleb128 0x3
 4039 01e6 0E       		.uleb128 0xe
 4040 01e7 3A       		.uleb128 0x3a
 4041 01e8 0B       		.uleb128 0xb
 4042 01e9 3B       		.uleb128 0x3b
 4043 01ea 05       		.uleb128 0x5
 4044 01eb 27       		.uleb128 0x27
 4045 01ec 19       		.uleb128 0x19
 4046 01ed 49       		.uleb128 0x49
 4047 01ee 13       		.uleb128 0x13
 4048 01ef 8701     		.uleb128 0x87
 4049 01f1 19       		.uleb128 0x19
 4050 01f2 11       		.uleb128 0x11
 4051 01f3 01       		.uleb128 0x1
 4052 01f4 12       		.uleb128 0x12
 4053 01f5 06       		.uleb128 0x6
 4054 01f6 40       		.uleb128 0x40
 4055 01f7 18       		.uleb128 0x18
 4056 01f8 9742     		.uleb128 0x2117
 4057 01fa 19       		.uleb128 0x19
 4058 01fb 01       		.uleb128 0x1
 4059 01fc 13       		.uleb128 0x13
 4060 01fd 00       		.byte	0
 4061 01fe 00       		.byte	0
 4062 01ff 24       		.uleb128 0x24
 4063 0200 34       		.uleb128 0x34
 4064 0201 00       		.byte	0
 4065 0202 03       		.uleb128 0x3
 4066 0203 0E       		.uleb128 0xe
 4067 0204 3A       		.uleb128 0x3a
 4068 0205 0B       		.uleb128 0xb
 4069 0206 3B       		.uleb128 0x3b
 4070 0207 0B       		.uleb128 0xb
 4071 0208 49       		.uleb128 0x49
 4072 0209 13       		.uleb128 0x13
 4073 020a 3F       		.uleb128 0x3f
 4074 020b 19       		.uleb128 0x19
 4075 020c 3C       		.uleb128 0x3c
 4076 020d 19       		.uleb128 0x19
 4077 020e 00       		.byte	0
 4078 020f 00       		.byte	0
 4079 0210 25       		.uleb128 0x25
 4080 0211 34       		.uleb128 0x34
 4081 0212 00       		.byte	0
 4082 0213 03       		.uleb128 0x3
 4083 0214 0E       		.uleb128 0xe
 4084 0215 3A       		.uleb128 0x3a
 4085 0216 0B       		.uleb128 0xb
 4086 0217 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 98


 4087 0218 0B       		.uleb128 0xb
 4088 0219 49       		.uleb128 0x49
 4089 021a 13       		.uleb128 0x13
 4090 021b 3F       		.uleb128 0x3f
 4091 021c 19       		.uleb128 0x19
 4092 021d 02       		.uleb128 0x2
 4093 021e 18       		.uleb128 0x18
 4094 021f 00       		.byte	0
 4095 0220 00       		.byte	0
 4096 0221 26       		.uleb128 0x26
 4097 0222 34       		.uleb128 0x34
 4098 0223 00       		.byte	0
 4099 0224 03       		.uleb128 0x3
 4100 0225 08       		.uleb128 0x8
 4101 0226 3A       		.uleb128 0x3a
 4102 0227 0B       		.uleb128 0xb
 4103 0228 3B       		.uleb128 0x3b
 4104 0229 0B       		.uleb128 0xb
 4105 022a 49       		.uleb128 0x49
 4106 022b 13       		.uleb128 0x13
 4107 022c 3F       		.uleb128 0x3f
 4108 022d 19       		.uleb128 0x19
 4109 022e 02       		.uleb128 0x2
 4110 022f 18       		.uleb128 0x18
 4111 0230 00       		.byte	0
 4112 0231 00       		.byte	0
 4113 0232 27       		.uleb128 0x27
 4114 0233 34       		.uleb128 0x34
 4115 0234 00       		.byte	0
 4116 0235 03       		.uleb128 0x3
 4117 0236 0E       		.uleb128 0xe
 4118 0237 3A       		.uleb128 0x3a
 4119 0238 0B       		.uleb128 0xb
 4120 0239 3B       		.uleb128 0x3b
 4121 023a 05       		.uleb128 0x5
 4122 023b 49       		.uleb128 0x49
 4123 023c 13       		.uleb128 0x13
 4124 023d 3F       		.uleb128 0x3f
 4125 023e 19       		.uleb128 0x19
 4126 023f 02       		.uleb128 0x2
 4127 0240 18       		.uleb128 0x18
 4128 0241 00       		.byte	0
 4129 0242 00       		.byte	0
 4130 0243 28       		.uleb128 0x28
 4131 0244 2E       		.uleb128 0x2e
 4132 0245 00       		.byte	0
 4133 0246 3F       		.uleb128 0x3f
 4134 0247 19       		.uleb128 0x19
 4135 0248 3C       		.uleb128 0x3c
 4136 0249 19       		.uleb128 0x19
 4137 024a 6E       		.uleb128 0x6e
 4138 024b 0E       		.uleb128 0xe
 4139 024c 03       		.uleb128 0x3
 4140 024d 0E       		.uleb128 0xe
 4141 024e 3A       		.uleb128 0x3a
 4142 024f 0B       		.uleb128 0xb
 4143 0250 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 99


 4144 0251 0B       		.uleb128 0xb
 4145 0252 00       		.byte	0
 4146 0253 00       		.byte	0
 4147 0254 29       		.uleb128 0x29
 4148 0255 2E       		.uleb128 0x2e
 4149 0256 00       		.byte	0
 4150 0257 3F       		.uleb128 0x3f
 4151 0258 19       		.uleb128 0x19
 4152 0259 3C       		.uleb128 0x3c
 4153 025a 19       		.uleb128 0x19
 4154 025b 6E       		.uleb128 0x6e
 4155 025c 0E       		.uleb128 0xe
 4156 025d 03       		.uleb128 0x3
 4157 025e 0E       		.uleb128 0xe
 4158 025f 00       		.byte	0
 4159 0260 00       		.byte	0
 4160 0261 2A       		.uleb128 0x2a
 4161 0262 2E       		.uleb128 0x2e
 4162 0263 00       		.byte	0
 4163 0264 3F       		.uleb128 0x3f
 4164 0265 19       		.uleb128 0x19
 4165 0266 3C       		.uleb128 0x3c
 4166 0267 19       		.uleb128 0x19
 4167 0268 6E       		.uleb128 0x6e
 4168 0269 0E       		.uleb128 0xe
 4169 026a 03       		.uleb128 0x3
 4170 026b 0E       		.uleb128 0xe
 4171 026c 3A       		.uleb128 0x3a
 4172 026d 0B       		.uleb128 0xb
 4173 026e 3B       		.uleb128 0x3b
 4174 026f 05       		.uleb128 0x5
 4175 0270 00       		.byte	0
 4176 0271 00       		.byte	0
 4177 0272 00       		.byte	0
 4178              		.section	.debug_loc,"",%progbits
 4179              	.Ldebug_loc0:
 4180              	.LLST0:
 4181 0000 2A000000 		.4byte	.LVL9
 4182 0004 2E000000 		.4byte	.LVL10
 4183 0008 0200     		.2byte	0x2
 4184 000a 30       		.byte	0x30
 4185 000b 9F       		.byte	0x9f
 4186 000c 2E000000 		.4byte	.LVL10
 4187 0010 4A000000 		.4byte	.LVL15
 4188 0014 0100     		.2byte	0x1
 4189 0016 54       		.byte	0x54
 4190 0017 00000000 		.4byte	0
 4191 001b 00000000 		.4byte	0
 4192              	.LLST1:
 4193 001f 00000000 		.4byte	.LVL16
 4194 0023 12000000 		.4byte	.LVL17
 4195 0027 0100     		.2byte	0x1
 4196 0029 50       		.byte	0x50
 4197 002a 12000000 		.4byte	.LVL17
 4198 002e 1C000000 		.4byte	.LFE32
 4199 0032 0400     		.2byte	0x4
 4200 0034 F3       		.byte	0xf3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 100


 4201 0035 01       		.uleb128 0x1
 4202 0036 50       		.byte	0x50
 4203 0037 9F       		.byte	0x9f
 4204 0038 00000000 		.4byte	0
 4205 003c 00000000 		.4byte	0
 4206              	.LLST2:
 4207 0040 08000000 		.4byte	.LVL19
 4208 0044 0B000000 		.4byte	.LVL20-1
 4209 0048 0100     		.2byte	0x1
 4210 004a 50       		.byte	0x50
 4211 004b 00000000 		.4byte	0
 4212 004f 00000000 		.4byte	0
 4213              	.LLST3:
 4214 0053 00000000 		.4byte	.LVL21
 4215 0057 0A000000 		.4byte	.LVL22
 4216 005b 0100     		.2byte	0x1
 4217 005d 50       		.byte	0x50
 4218 005e 0A000000 		.4byte	.LVL22
 4219 0062 0D000000 		.4byte	.LVL23-1
 4220 0066 0400     		.2byte	0x4
 4221 0068 70       		.byte	0x70
 4222 0069 E079     		.sleb128 -800
 4223 006b 9F       		.byte	0x9f
 4224 006c 0D000000 		.4byte	.LVL23-1
 4225 0070 10000000 		.4byte	.LFE36
 4226 0074 0400     		.2byte	0x4
 4227 0076 F3       		.byte	0xf3
 4228 0077 01       		.uleb128 0x1
 4229 0078 50       		.byte	0x50
 4230 0079 9F       		.byte	0x9f
 4231 007a 00000000 		.4byte	0
 4232 007e 00000000 		.4byte	0
 4233              	.LLST4:
 4234 0082 1C000000 		.4byte	.LVL26
 4235 0086 EE000000 		.4byte	.LVL43
 4236 008a 0100     		.2byte	0x1
 4237 008c 54       		.byte	0x54
 4238 008d 50010000 		.4byte	.LVL50
 4239 0091 52010000 		.4byte	.LVL51
 4240 0095 0100     		.2byte	0x1
 4241 0097 54       		.byte	0x54
 4242 0098 52010000 		.4byte	.LVL51
 4243 009c 6D010000 		.4byte	.LVL54-1
 4244 00a0 0200     		.2byte	0x2
 4245 00a2 74       		.byte	0x74
 4246 00a3 02       		.sleb128 2
 4247 00a4 00000000 		.4byte	0
 4248 00a8 00000000 		.4byte	0
 4249              	.LLST5:
 4250 00ac 1A000000 		.4byte	.LVL25
 4251 00b0 6B000000 		.4byte	.LVL37-1
 4252 00b4 0100     		.2byte	0x1
 4253 00b6 50       		.byte	0x50
 4254 00b7 B8000000 		.4byte	.LVL39
 4255 00bb BA000000 		.4byte	.LVL40
 4256 00bf 0100     		.2byte	0x1
 4257 00c1 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 101


 4258 00c2 50010000 		.4byte	.LVL50
 4259 00c6 5E010000 		.4byte	.LVL53
 4260 00ca 0100     		.2byte	0x1
 4261 00cc 50       		.byte	0x50
 4262 00cd 00000000 		.4byte	0
 4263 00d1 00000000 		.4byte	0
 4264              	.LLST6:
 4265 00d5 22000000 		.4byte	.LVL27
 4266 00d9 28000000 		.4byte	.LVL28
 4267 00dd 0200     		.2byte	0x2
 4268 00df 30       		.byte	0x30
 4269 00e0 9F       		.byte	0x9f
 4270 00e1 28000000 		.4byte	.LVL28
 4271 00e5 32000000 		.4byte	.LVL31
 4272 00e9 0100     		.2byte	0x1
 4273 00eb 53       		.byte	0x53
 4274 00ec 34000000 		.4byte	.LVL32
 4275 00f0 3E000000 		.4byte	.LVL33
 4276 00f4 0100     		.2byte	0x1
 4277 00f6 53       		.byte	0x53
 4278 00f7 50000000 		.4byte	.LVL35
 4279 00fb 52000000 		.4byte	.LVL36
 4280 00ff 0100     		.2byte	0x1
 4281 0101 53       		.byte	0x53
 4282 0102 10020000 		.4byte	.LVL56
 4283 0106 16020000 		.4byte	.LVL57
 4284 010a 0200     		.2byte	0x2
 4285 010c 30       		.byte	0x30
 4286 010d 9F       		.byte	0x9f
 4287 010e 16020000 		.4byte	.LVL57
 4288 0112 20020000 		.4byte	.LVL60
 4289 0116 0100     		.2byte	0x1
 4290 0118 53       		.byte	0x53
 4291 0119 22020000 		.4byte	.LVL61
 4292 011d 31020000 		.4byte	.LVL63-1
 4293 0121 0100     		.2byte	0x1
 4294 0123 53       		.byte	0x53
 4295 0124 00000000 		.4byte	0
 4296 0128 00000000 		.4byte	0
 4297              	.LLST7:
 4298 012c 22000000 		.4byte	.LVL27
 4299 0130 28000000 		.4byte	.LVL28
 4300 0134 0200     		.2byte	0x2
 4301 0136 30       		.byte	0x30
 4302 0137 9F       		.byte	0x9f
 4303 0138 28000000 		.4byte	.LVL28
 4304 013c 2E000000 		.4byte	.LVL29
 4305 0140 0100     		.2byte	0x1
 4306 0142 52       		.byte	0x52
 4307 0143 30000000 		.4byte	.LVL30
 4308 0147 42000000 		.4byte	.LVL34
 4309 014b 0100     		.2byte	0x1
 4310 014d 52       		.byte	0x52
 4311 014e 50000000 		.4byte	.LVL35
 4312 0152 6B000000 		.4byte	.LVL37-1
 4313 0156 0100     		.2byte	0x1
 4314 0158 52       		.byte	0x52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 102


 4315 0159 B8000000 		.4byte	.LVL39
 4316 015d C0000000 		.4byte	.LVL41
 4317 0161 0100     		.2byte	0x1
 4318 0163 52       		.byte	0x52
 4319 0164 50010000 		.4byte	.LVL50
 4320 0168 5C010000 		.4byte	.LVL52
 4321 016c 0100     		.2byte	0x1
 4322 016e 52       		.byte	0x52
 4323 016f 10020000 		.4byte	.LVL56
 4324 0173 16020000 		.4byte	.LVL57
 4325 0177 0200     		.2byte	0x2
 4326 0179 30       		.byte	0x30
 4327 017a 9F       		.byte	0x9f
 4328 017b 16020000 		.4byte	.LVL57
 4329 017f 1C020000 		.4byte	.LVL58
 4330 0183 0100     		.2byte	0x1
 4331 0185 52       		.byte	0x52
 4332 0186 1E020000 		.4byte	.LVL59
 4333 018a 2A020000 		.4byte	.LVL62
 4334 018e 0100     		.2byte	0x1
 4335 0190 52       		.byte	0x52
 4336 0191 00000000 		.4byte	0
 4337 0195 00000000 		.4byte	0
 4338              	.LLST8:
 4339 0199 1E010000 		.4byte	.LVL45
 4340 019d 2E010000 		.4byte	.LVL47
 4341 01a1 0100     		.2byte	0x1
 4342 01a3 53       		.byte	0x53
 4343 01a4 3E010000 		.4byte	.LVL48
 4344 01a8 42010000 		.4byte	.LVL49
 4345 01ac 0100     		.2byte	0x1
 4346 01ae 53       		.byte	0x53
 4347 01af 00000000 		.4byte	0
 4348 01b3 00000000 		.4byte	0
 4349              	.LLST9:
 4350 01b7 00000000 		.4byte	.LVL66
 4351 01bb 19000000 		.4byte	.LVL68-1
 4352 01bf 0100     		.2byte	0x1
 4353 01c1 50       		.byte	0x50
 4354 01c2 19000000 		.4byte	.LVL68-1
 4355 01c6 24000000 		.4byte	.LFE39
 4356 01ca 0400     		.2byte	0x4
 4357 01cc F3       		.byte	0xf3
 4358 01cd 01       		.uleb128 0x1
 4359 01ce 50       		.byte	0x50
 4360 01cf 9F       		.byte	0x9f
 4361 01d0 00000000 		.4byte	0
 4362 01d4 00000000 		.4byte	0
 4363              	.LLST10:
 4364 01d8 0A000000 		.4byte	.LVL67
 4365 01dc 1E000000 		.4byte	.LVL69
 4366 01e0 0100     		.2byte	0x1
 4367 01e2 54       		.byte	0x54
 4368 01e3 1E000000 		.4byte	.LVL69
 4369 01e7 24000000 		.4byte	.LFE39
 4370 01eb 0500     		.2byte	0x5
 4371 01ed 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 103


 4372 01ee 00000000 		.4byte	inAuto
 4373 01f2 00000000 		.4byte	0
 4374 01f6 00000000 		.4byte	0
 4375              		.section	.debug_aranges,"",%progbits
 4376 0000 84000000 		.4byte	0x84
 4377 0004 0200     		.2byte	0x2
 4378 0006 00000000 		.4byte	.Ldebug_info0
 4379 000a 04       		.byte	0x4
 4380 000b 00       		.byte	0
 4381 000c 0000     		.2byte	0
 4382 000e 0000     		.2byte	0
 4383 0010 00000000 		.4byte	.LFB43
 4384 0014 24000000 		.4byte	.LFE43-.LFB43
 4385 0018 00000000 		.4byte	.LFB44
 4386 001c 1C000000 		.4byte	.LFE44-.LFB44
 4387 0020 00000000 		.4byte	.LFB45
 4388 0024 60000000 		.4byte	.LFE45-.LFB45
 4389 0028 00000000 		.4byte	.LFB32
 4390 002c 1C000000 		.4byte	.LFE32-.LFB32
 4391 0030 00000000 		.4byte	.LFB33
 4392 0034 1C000000 		.4byte	.LFE33-.LFB33
 4393 0038 00000000 		.4byte	.LFB34
 4394 003c 18000000 		.4byte	.LFE34-.LFB34
 4395 0040 00000000 		.4byte	.LFB36
 4396 0044 10000000 		.4byte	.LFE36-.LFB36
 4397 0048 00000000 		.4byte	.LFB37
 4398 004c 44000000 		.4byte	.LFE37-.LFB37
 4399 0050 00000000 		.4byte	.LFB35
 4400 0054 A0020000 		.4byte	.LFE35-.LFB35
 4401 0058 00000000 		.4byte	.LFB38
 4402 005c 30000000 		.4byte	.LFE38-.LFB38
 4403 0060 00000000 		.4byte	.LFB39
 4404 0064 24000000 		.4byte	.LFE39-.LFB39
 4405 0068 00000000 		.4byte	.LFB40
 4406 006c 6C010000 		.4byte	.LFE40-.LFB40
 4407 0070 00000000 		.4byte	.LFB42
 4408 0074 BC000000 		.4byte	.LFE42-.LFB42
 4409 0078 00000000 		.4byte	.LFB41
 4410 007c 38010000 		.4byte	.LFE41-.LFB41
 4411 0080 00000000 		.4byte	0
 4412 0084 00000000 		.4byte	0
 4413              		.section	.debug_ranges,"",%progbits
 4414              	.Ldebug_ranges0:
 4415 0000 00000000 		.4byte	.LFB43
 4416 0004 24000000 		.4byte	.LFE43
 4417 0008 00000000 		.4byte	.LFB44
 4418 000c 1C000000 		.4byte	.LFE44
 4419 0010 00000000 		.4byte	.LFB45
 4420 0014 60000000 		.4byte	.LFE45
 4421 0018 00000000 		.4byte	.LFB32
 4422 001c 1C000000 		.4byte	.LFE32
 4423 0020 00000000 		.4byte	.LFB33
 4424 0024 1C000000 		.4byte	.LFE33
 4425 0028 00000000 		.4byte	.LFB34
 4426 002c 18000000 		.4byte	.LFE34
 4427 0030 00000000 		.4byte	.LFB36
 4428 0034 10000000 		.4byte	.LFE36
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 104


 4429 0038 00000000 		.4byte	.LFB37
 4430 003c 44000000 		.4byte	.LFE37
 4431 0040 00000000 		.4byte	.LFB35
 4432 0044 A0020000 		.4byte	.LFE35
 4433 0048 00000000 		.4byte	.LFB38
 4434 004c 30000000 		.4byte	.LFE38
 4435 0050 00000000 		.4byte	.LFB39
 4436 0054 24000000 		.4byte	.LFE39
 4437 0058 00000000 		.4byte	.LFB40
 4438 005c 6C010000 		.4byte	.LFE40
 4439 0060 00000000 		.4byte	.LFB42
 4440 0064 BC000000 		.4byte	.LFE42
 4441 0068 00000000 		.4byte	.LFB41
 4442 006c 38010000 		.4byte	.LFE41
 4443 0070 00000000 		.4byte	0
 4444 0074 00000000 		.4byte	0
 4445              		.section	.debug_line,"",%progbits
 4446              	.Ldebug_line0:
 4447 0000 87040000 		.section	.debug_str,"MS",%progbits,1
 4447      02006302 
 4447      00000201 
 4447      FB0E0D00 
 4447      01010101 
 4448              	.LASF173:
 4449 0000 43794465 		.ascii	"CyDelay\000"
 4449      6C617900 
 4450              	.LASF140:
 4451 0008 72784D65 		.ascii	"rxMessage\000"
 4451      73736167 
 4451      6500
 4452              	.LASF181:
 4453 0012 6D61696E 		.ascii	"main.c\000"
 4453      2E6300
 4454              	.LASF78:
 4455 0019 6D6F746F 		.ascii	"motor_current\000"
 4455      725F6375 
 4455      7272656E 
 4455      7400
 4456              	.LASF109:
 4457 0027 62726D73 		.ascii	"brmsRG4Mask\000"
 4457      5247344D 
 4457      61736B00 
 4458              	.LASF83:
 4459 0033 74786D73 		.ascii	"txmsClear\000"
 4459      436C6561 
 4459      7200
 4460              	.LASF93:
 4461 003d 6F757470 		.ascii	"output\000"
 4461      757400
 4462              	.LASF91:
 4463 0044 4D6F746F 		.ascii	"MotorCurrentRead\000"
 4463      72437572 
 4463      72656E74 
 4463      52656164 
 4463      00
 4464              	.LASF105:
 4465 0055 62726D73 		.ascii	"brmsTask\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 105


 4465      5461736B 
 4465      00
 4466              	.LASF61:
 4467 005e 65666673 		.ascii	"effsetdelta\000"
 4467      65746465 
 4467      6C746100 
 4468              	.LASF37:
 4469 006a 6673456E 		.ascii	"fsEncoder\000"
 4469      636F6465 
 4469      7200
 4470              	.LASF31:
 4471 0074 6373556E 		.ascii	"csUnconfig\000"
 4471      636F6E66 
 4471      696700
 4472              	.LASF101:
 4473 007f 6E657741 		.ascii	"newAuto\000"
 4473      75746F00 
 4474              	.LASF15:
 4475 0087 756E7369 		.ascii	"unsigned int\000"
 4475      676E6564 
 4475      20696E74 
 4475      00
 4476              	.LASF106:
 4477 0094 62726D73 		.ascii	"brmsRG1Mask\000"
 4477      5247314D 
 4477      61736B00 
 4478              	.LASF177:
 4479 00a0 436F756E 		.ascii	"Counter_1_Start\000"
 4479      7465725F 
 4479      315F5374 
 4479      61727400 
 4480              	.LASF103:
 4481 00b0 72756E52 		.ascii	"runRateGroup1_PID\000"
 4481      61746547 
 4481      726F7570 
 4481      315F5049 
 4481      4400
 4482              	.LASF65:
 4483 00c2 636C6561 		.ascii	"clearfaults\000"
 4483      72666175 
 4483      6C747300 
 4484              	.LASF8:
 4485 00ce 5F5F696E 		.ascii	"__int32_t\000"
 4485      7433325F 
 4485      7400
 4486              	.LASF148:
 4487 00d8 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4487      5F494E5F 
 4487      436C6561 
 4487      72496E74 
 4487      65727275 
 4488              	.LASF179:
 4489 00ef 4C45445F 		.ascii	"LED_Write\000"
 4489      57726974 
 4489      6500
 4490              	.LASF87:
 4491 00f9 486F6D65 		.ascii	"HomeIsrHandler\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 106


 4491      49737248 
 4491      616E646C 
 4491      657200
 4492              	.LASF85:
 4493 0108 74784D65 		.ascii	"txMessageStates_t\000"
 4493      73736167 
 4493      65537461 
 4493      7465735F 
 4493      7400
 4494              	.LASF90:
 4495 011a 436C6561 		.ascii	"ClearFault\000"
 4495      72466175 
 4495      6C7400
 4496              	.LASF172:
 4497 0125 4932435F 		.ascii	"I2C_Start\000"
 4497      53746172 
 4497      7400
 4498              	.LASF125:
 4499 012f 4C617374 		.ascii	"LastMoveStableCount\000"
 4499      4D6F7665 
 4499      53746162 
 4499      6C65436F 
 4499      756E7400 
 4500              	.LASF32:
 4501 0143 63735265 		.ascii	"csReady\000"
 4501      61647900 
 4502              	.LASF153:
 4503 014b 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4503      315F5370 
 4503      69556172 
 4503      74436C65 
 4503      61725478 
 4504              	.LASF21:
 4505 0166 75696E74 		.ascii	"uint32_t\000"
 4505      33325F74 
 4505      00
 4506              	.LASF16:
 4507 016f 696E7438 		.ascii	"int8_t\000"
 4507      5F7400
 4508              	.LASF50:
 4509 0176 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4509      73736167 
 4509      655F6F70 
 4509      636F6465 
 4509      735F7400 
 4510              	.LASF66:
 4511 018a 72784D65 		.ascii	"rxMessage_status_t\000"
 4511      73736167 
 4511      655F7374 
 4511      61747573 
 4511      5F7400
 4512              	.LASF89:
 4513 019d 41737365 		.ascii	"AssertFault\000"
 4513      72744661 
 4513      756C7400 
 4514              	.LASF24:
 4515 01a9 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 107


 4515      7400
 4516              	.LASF170:
 4517 01af 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4517      7370695F 
 4517      73735F53 
 4517      74617274 
 4517      457800
 4518              	.LASF51:
 4519 01c2 63686563 		.ascii	"checksum\000"
 4519      6B73756D 
 4519      00
 4520              	.LASF71:
 4521 01cb 73657465 		.ascii	"setenc\000"
 4521      6E6300
 4522              	.LASF18:
 4523 01d2 696E7431 		.ascii	"int16_t\000"
 4523      365F7400 
 4524              	.LASF95:
 4525 01da 72657375 		.ascii	"result\000"
 4525      6C7400
 4526              	.LASF14:
 4527 01e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 4527      206C6F6E 
 4527      6720756E 
 4527      7369676E 
 4527      65642069 
 4528              	.LASF117:
 4529 01f8 5049445F 		.ascii	"PID_EffSetDelta\000"
 4529      45666653 
 4529      65744465 
 4529      6C746100 
 4530              	.LASF118:
 4531 0208 6C617374 		.ascii	"lastTime\000"
 4531      54696D65 
 4531      00
 4532              	.LASF137:
 4533 0211 4D6F746F 		.ascii	"MotorCurrent\000"
 4533      72437572 
 4533      72656E74 
 4533      00
 4534              	.LASF6:
 4535 021e 5F5F7569 		.ascii	"__uint16_t\000"
 4535      6E743136 
 4535      5F7400
 4536              	.LASF63:
 4537 0229 656E6162 		.ascii	"enable\000"
 4537      6C6500
 4538              	.LASF176:
 4539 0230 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4539      315F5772 
 4539      69746550 
 4539      6572696F 
 4539      6400
 4540              	.LASF133:
 4541 0242 436F6E66 		.ascii	"ConfigState\000"
 4541      69675374 
 4541      61746500 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 108


 4542              	.LASF59:
 4543 024e 6C696D69 		.ascii	"limitOutput\000"
 4543      744F7574 
 4543      70757400 
 4544              	.LASF180:
 4545 025a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4545      43313120 
 4545      352E342E 
 4545      31203230 
 4545      31363036 
 4546 028d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4546      20726576 
 4546      6973696F 
 4546      6E203233 
 4546      37373135 
 4547 02c0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4547      66756E63 
 4547      74696F6E 
 4547      2D736563 
 4547      74696F6E 
 4548              	.LASF167:
 4549 02e8 6973725F 		.ascii	"isr_home_SetPriority\000"
 4549      686F6D65 
 4549      5F536574 
 4549      5072696F 
 4549      72697479 
 4550              	.LASF164:
 4551 02fd 6973725F 		.ascii	"isr_brms_StartEx\000"
 4551      62726D73 
 4551      5F537461 
 4551      72744578 
 4551      00
 4552              	.LASF163:
 4553 030e 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4553      725F4252 
 4553      4D535F53 
 4553      74617274 
 4553      00
 4554              	.LASF102:
 4555 031f 5F426F6F 		.ascii	"_Bool\000"
 4555      6C00
 4556              	.LASF36:
 4557 0325 6673556E 		.ascii	"fsUnconfigured\000"
 4557      636F6E66 
 4557      69677572 
 4557      656400
 4558              	.LASF112:
 4559 0334 696E4175 		.ascii	"inAuto\000"
 4559      746F00
 4560              	.LASF13:
 4561 033b 5F5F7569 		.ascii	"__uint64_t\000"
 4561      6E743634 
 4561      5F7400
 4562              	.LASF157:
 4563 0346 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4563      315F5370 
 4563      69556172 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 109


 4563      74507574 
 4563      41727261 
 4564              	.LASF149:
 4565 035c 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4565      73735F43 
 4565      6C656172 
 4565      496E7465 
 4565      72727570 
 4566              	.LASF130:
 4567 0372 55707469 		.ascii	"UptimeMilliseconds\000"
 4567      6D654D69 
 4567      6C6C6973 
 4567      65636F6E 
 4567      647300
 4568              	.LASF156:
 4569 0385 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4569      7465725F 
 4569      315F5265 
 4569      6164436F 
 4569      756E7465 
 4570              	.LASF72:
 4571 039b 76657273 		.ascii	"version0\000"
 4571      696F6E30 
 4571      00
 4572              	.LASF73:
 4573 03a4 76657273 		.ascii	"version1\000"
 4573      696F6E31 
 4573      00
 4574              	.LASF74:
 4575 03ad 76657273 		.ascii	"version2\000"
 4575      696F6E32 
 4575      00
 4576              	.LASF54:
 4577 03b6 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4577      73736167 
 4577      655F6F76 
 4577      65726C61 
 4577      795F7400 
 4578              	.LASF119:
 4579 03ca 506F7369 		.ascii	"Position\000"
 4579      74696F6E 
 4579      00
 4580              	.LASF26:
 4581 03d3 63686172 		.ascii	"char\000"
 4581      00
 4582              	.LASF81:
 4583 03d8 6C617374 		.ascii	"last_move_time\000"
 4583      5F6D6F76 
 4583      655F7469 
 4583      6D6500
 4584              	.LASF160:
 4585 03e7 5049445F 		.ascii	"PID_UpdateValues\000"
 4585      55706461 
 4585      74655661 
 4585      6C756573 
 4585      00
 4586              	.LASF99:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 110


 4587 03f8 5049445F 		.ascii	"PID_SetMode\000"
 4587      5365744D 
 4587      6F646500 
 4588              	.LASF92:
 4589 0404 50574D5F 		.ascii	"PWM_Set\000"
 4589      53657400 
 4590              	.LASF104:
 4591 040c 42524D53 		.ascii	"BRMS_Interrupt\000"
 4591      5F496E74 
 4591      65727275 
 4591      707400
 4592              	.LASF152:
 4593 041b 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4593      315F5370 
 4593      69556172 
 4593      74436C65 
 4593      61725278 
 4594              	.LASF53:
 4595 0436 6F70636F 		.ascii	"opcode\000"
 4595      646500
 4596              	.LASF60:
 4597 043d 6C696D69 		.ascii	"limitIterm\000"
 4597      74497465 
 4597      726D00
 4598              	.LASF17:
 4599 0448 75696E74 		.ascii	"uint8_t\000"
 4599      385F7400 
 4600              	.LASF70:
 4601 0450 73746174 		.ascii	"status\000"
 4601      757300
 4602              	.LASF38:
 4603 0457 6673496E 		.ascii	"fsIndex\000"
 4603      64657800 
 4604              	.LASF146:
 4605 045f 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4605      785F436F 
 4605      756E7465 
 4605      725F315F 
 4605      57726974 
 4606              	.LASF155:
 4607 047c 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4607      315F5772 
 4607      69746543 
 4607      6F6D7061 
 4607      726500
 4608              	.LASF35:
 4609 048f 66734E4F 		.ascii	"fsNONE\000"
 4609      4E4500
 4610              	.LASF143:
 4611 0496 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4611      7273745F 
 4611      656E636F 
 4611      6465725F 
 4611      436C6561 
 4612              	.LASF171:
 4613 04b3 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4613      7370695F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 111


 4613      73735F53 
 4613      65745072 
 4613      696F7269 
 4614              	.LASF126:
 4615 04ca 4C617374 		.ascii	"LastMoveTimeUsec\000"
 4615      4D6F7665 
 4615      54696D65 
 4615      55736563 
 4615      00
 4616              	.LASF12:
 4617 04db 6C6F6E67 		.ascii	"long long int\000"
 4617      206C6F6E 
 4617      6720696E 
 4617      7400
 4618              	.LASF161:
 4619 04e9 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4619      725F4252 
 4619      4D535F43 
 4619      6C656172 
 4619      496E7465 
 4620              	.LASF40:
 4621 0503 66734368 		.ascii	"fsChecksum\000"
 4621      65636B73 
 4621      756D00
 4622              	.LASF150:
 4623 050e 7370695F 		.ascii	"spi_ss_Read\000"
 4623      73735F52 
 4623      65616400 
 4624              	.LASF111:
 4625 051a 69746572 		.ascii	"iterm_delay\000"
 4625      6D5F6465 
 4625      6C617900 
 4626              	.LASF4:
 4627 0526 5F5F696E 		.ascii	"__int16_t\000"
 4627      7431365F 
 4627      7400
 4628              	.LASF159:
 4629 0530 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4629      585F4F55 
 4629      545F5365 
 4629      74447269 
 4629      76654D6F 
 4630              	.LASF185:
 4631 0547 6D656D73 		.ascii	"memset\000"
 4631      657400
 4632              	.LASF131:
 4633 054e 55707469 		.ascii	"UptimeMillisecondsAccumulator\000"
 4633      6D654D69 
 4633      6C6C6973 
 4633      65636F6E 
 4633      64734163 
 4634              	.LASF77:
 4635 056c 63686563 		.ascii	"checksum_errors\000"
 4635      6B73756D 
 4635      5F657272 
 4635      6F727300 
 4636              	.LASF52:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 112


 4637 057c 73697A65 		.ascii	"size\000"
 4637      00
 4638              	.LASF182:
 4639 0581 433A5C55 		.ascii	"C:\\Users\\prichards\\proj\\acsnb-motor-cypress\\Qu"
 4639      73657273 
 4639      5C707269 
 4639      63686172 
 4639      64735C70 
 4640 05af 6164456E 		.ascii	"adEncoderRTOS.cydsn\000"
 4640      636F6465 
 4640      7252544F 
 4640      532E6379 
 4640      64736E00 
 4641              	.LASF23:
 4642 05c3 75696E74 		.ascii	"uint32\000"
 4642      333200
 4643              	.LASF84:
 4644 05ca 74786D73 		.ascii	"txmsLoaded\000"
 4644      4C6F6164 
 4644      656400
 4645              	.LASF138:
 4646 05d5 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4646      656E7449 
 4646      3243696E 
 4646      62756600 
 4647              	.LASF151:
 4648 05e5 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 4648      315F5370 
 4648      69556172 
 4648      74526561 
 4648      64527844 
 4649              	.LASF120:
 4650 05fd 4C617374 		.ascii	"LastPosition\000"
 4650      506F7369 
 4650      74696F6E 
 4650      00
 4651              	.LASF141:
 4652 060a 74784D65 		.ascii	"txMessage\000"
 4652      73736167 
 4652      6500
 4653              	.LASF145:
 4654 0614 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4654      7465725F 
 4654      315F5772 
 4654      69746543 
 4654      6F756E74 
 4655              	.LASF127:
 4656 062b 4E657743 		.ascii	"NewCommandedMove\000"
 4656      6F6D6D61 
 4656      6E646564 
 4656      4D6F7665 
 4656      00
 4657              	.LASF88:
 4658 063c 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4658      53535F49 
 4658      73724861 
 4658      6E646C65 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 113


 4658      7200
 4659              	.LASF0:
 4660 064e 5F5F696E 		.ascii	"__int8_t\000"
 4660      74385F74 
 4660      00
 4661              	.LASF34:
 4662 0657 436F6E66 		.ascii	"ConfigStates_t\000"
 4662      69675374 
 4662      61746573 
 4662      5F7400
 4663              	.LASF96:
 4664 0666 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4664      61746547 
 4664      726F7570 
 4664      335F5350 
 4664      4900
 4665              	.LASF165:
 4666 0678 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4666      62726D73 
 4666      5F536574 
 4666      5072696F 
 4666      72697479 
 4667              	.LASF28:
 4668 068d 6C6F6E67 		.ascii	"long double\000"
 4668      20646F75 
 4668      626C6500 
 4669              	.LASF154:
 4670 0699 67657443 		.ascii	"getCurrent_mA\000"
 4670      75727265 
 4670      6E745F6D 
 4670      4100
 4671              	.LASF19:
 4672 06a7 75696E74 		.ascii	"uint16_t\000"
 4672      31365F74 
 4672      00
 4673              	.LASF27:
 4674 06b0 72656733 		.ascii	"reg32\000"
 4674      3200
 4675              	.LASF30:
 4676 06b6 6373554E 		.ascii	"csUNDEFINED\000"
 4676      44454649 
 4676      4E454400 
 4677              	.LASF55:
 4678 06c2 73657175 		.ascii	"sequence\000"
 4678      656E6365 
 4678      00
 4679              	.LASF121:
 4680 06cb 4F757470 		.ascii	"Output\000"
 4680      757400
 4681              	.LASF69:
 4682 06d2 636F6E66 		.ascii	"config\000"
 4682      696700
 4683              	.LASF39:
 4684 06d9 66734375 		.ascii	"fsCurrentRead\000"
 4684      7272656E 
 4684      74526561 
 4684      6400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 114


 4685              	.LASF5:
 4686 06e7 73686F72 		.ascii	"short int\000"
 4686      7420696E 
 4686      7400
 4687              	.LASF62:
 4688 06f1 72784D65 		.ascii	"rxMessage_config_t\000"
 4688      73736167 
 4688      655F636F 
 4688      6E666967 
 4688      5F7400
 4689              	.LASF114:
 4690 0704 5049445F 		.ascii	"PID_Was_Enabled\000"
 4690      5761735F 
 4690      456E6162 
 4690      6C656400 
 4691              	.LASF113:
 4692 0714 5049445F 		.ascii	"PID_Enabled\000"
 4692      456E6162 
 4692      6C656400 
 4693              	.LASF100:
 4694 0720 4D6F6465 		.ascii	"Mode\000"
 4694      00
 4695              	.LASF110:
 4696 0725 62726D73 		.ascii	"brmsRG5Mask\000"
 4696      5247354D 
 4696      61736B00 
 4697              	.LASF9:
 4698 0731 6C6F6E67 		.ascii	"long int\000"
 4698      20696E74 
 4698      00
 4699              	.LASF33:
 4700 073a 63734D41 		.ascii	"csMAX\000"
 4700      5800
 4701              	.LASF68:
 4702 0740 6F766572 		.ascii	"overlay\000"
 4702      6C617900 
 4703              	.LASF175:
 4704 0748 50574D5F 		.ascii	"PWM_1_Start\000"
 4704      315F5374 
 4704      61727400 
 4705              	.LASF123:
 4706 0754 4C617374 		.ascii	"LastMoveStartTimeUsec\000"
 4706      4D6F7665 
 4706      53746172 
 4706      7454696D 
 4706      65557365 
 4707              	.LASF97:
 4708 076a 64697374 		.ascii	"distance\000"
 4708      616E6365 
 4708      00
 4709              	.LASF158:
 4710 0773 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4710      5F4F5554 
 4710      5F536574 
 4710      44726976 
 4710      654D6F64 
 4711              	.LASF94:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 115


 4712 0789 52617750 		.ascii	"RawPosition\000"
 4712      6F736974 
 4712      696F6E00 
 4713              	.LASF139:
 4714 0795 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4714      4D657373 
 4714      61676554 
 4714      696D6553 
 4714      65636F6E 
 4715              	.LASF108:
 4716 07ac 62726D73 		.ascii	"brmsRG3Mask\000"
 4716      5247334D 
 4716      61736B00 
 4717              	.LASF82:
 4718 07b8 74784D65 		.ascii	"txMessage_t\000"
 4718      73736167 
 4718      655F7400 
 4719              	.LASF22:
 4720 07c4 75696E74 		.ascii	"uint64_t\000"
 4720      36345F74 
 4720      00
 4721              	.LASF64:
 4722 07cd 73657470 		.ascii	"setpoint\000"
 4722      6F696E74 
 4722      00
 4723              	.LASF107:
 4724 07d6 62726D73 		.ascii	"brmsRG2Mask\000"
 4724      5247324D 
 4724      61736B00 
 4725              	.LASF183:
 4726 07e2 47657450 		.ascii	"GetPosition\000"
 4726      6F736974 
 4726      696F6E00 
 4727              	.LASF132:
 4728 07ee 55707469 		.ascii	"UptimeSeconds\000"
 4728      6D655365 
 4728      636F6E64 
 4728      7300
 4729              	.LASF169:
 4730 07fc 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4730      7273745F 
 4730      656E636F 
 4730      6465725F 
 4730      53657450 
 4731              	.LASF115:
 4732 0818 5049445F 		.ascii	"PID_Setpoint\000"
 4732      53657470 
 4732      6F696E74 
 4732      00
 4733              	.LASF1:
 4734 0825 5F5F7569 		.ascii	"__uint8_t\000"
 4734      6E74385F 
 4734      7400
 4735              	.LASF47:
 4736 082f 6F705374 		.ascii	"opStatus\000"
 4736      61747573 
 4736      00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 116


 4737              	.LASF49:
 4738 0838 6F704D41 		.ascii	"opMAX\000"
 4738      5800
 4739              	.LASF136:
 4740 083e 43686563 		.ascii	"ChecksumErrors\000"
 4740      6B73756D 
 4740      4572726F 
 4740      727300
 4741              	.LASF29:
 4742 084d 73697A65 		.ascii	"sizetype\000"
 4742      74797065 
 4742      00
 4743              	.LASF11:
 4744 0856 6C6F6E67 		.ascii	"long unsigned int\000"
 4744      20756E73 
 4744      69676E65 
 4744      6420696E 
 4744      7400
 4745              	.LASF20:
 4746 0868 696E7433 		.ascii	"int32_t\000"
 4746      325F7400 
 4747              	.LASF128:
 4748 0870 55707469 		.ascii	"UptimeMicroseconds\000"
 4748      6D654D69 
 4748      63726F73 
 4748      65636F6E 
 4748      647300
 4749              	.LASF58:
 4750 0883 6F766572 		.ascii	"overrideKd\000"
 4750      72696465 
 4750      4B6400
 4751              	.LASF75:
 4752 088e 73746174 		.ascii	"state\000"
 4752      6500
 4753              	.LASF57:
 4754 0894 6F766572 		.ascii	"overrideKi\000"
 4754      72696465 
 4754      4B6900
 4755              	.LASF56:
 4756 089f 6F766572 		.ascii	"overrideKp\000"
 4756      72696465 
 4756      4B7000
 4757              	.LASF174:
 4758 08aa 5350495F 		.ascii	"SPI_1_Start\000"
 4758      315F5374 
 4758      61727400 
 4759              	.LASF3:
 4760 08b6 756E7369 		.ascii	"unsigned char\000"
 4760      676E6564 
 4760      20636861 
 4760      7200
 4761              	.LASF10:
 4762 08c4 5F5F7569 		.ascii	"__uint32_t\000"
 4762      6E743332 
 4762      5F7400
 4763              	.LASF45:
 4764 08cf 6F70554E 		.ascii	"opUNDEFINED\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 117


 4764      44454649 
 4764      4E454400 
 4765              	.LASF48:
 4766 08db 6F705365 		.ascii	"opSetEnc\000"
 4766      74456E63 
 4766      00
 4767              	.LASF134:
 4768 08e4 4661756C 		.ascii	"FaultState\000"
 4768      74537461 
 4768      746500
 4769              	.LASF41:
 4770 08ef 66735832 		.ascii	"fsX2\000"
 4770      00
 4771              	.LASF42:
 4772 08f4 66735833 		.ascii	"fsX3\000"
 4772      00
 4773              	.LASF43:
 4774 08f9 66735834 		.ascii	"fsX4\000"
 4774      00
 4775              	.LASF135:
 4776 08fe 436F6E66 		.ascii	"ConfigSequence\000"
 4776      69675365 
 4776      7175656E 
 4776      636500
 4777              	.LASF122:
 4778 090d 686F6D69 		.ascii	"homingDone\000"
 4778      6E67446F 
 4778      6E6500
 4779              	.LASF124:
 4780 0918 4C617374 		.ascii	"LastMoveEndTimeUsec\000"
 4780      4D6F7665 
 4780      456E6454 
 4780      696D6555 
 4780      73656300 
 4781              	.LASF144:
 4782 092c 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 4782      745F456E 
 4782      636F6465 
 4782      725F436C 
 4782      65617249 
 4783              	.LASF67:
 4784 0949 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4784      73736167 
 4784      655F7365 
 4784      74656E63 
 4784      5F7400
 4785              	.LASF162:
 4786 095c 50524F42 		.ascii	"PROBE_Write\000"
 4786      455F5772 
 4786      69746500 
 4787              	.LASF166:
 4788 0968 6973725F 		.ascii	"isr_home_StartEx\000"
 4788      686F6D65 
 4788      5F537461 
 4788      72744578 
 4788      00
 4789              	.LASF2:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 118


 4790 0979 7369676E 		.ascii	"signed char\000"
 4790      65642063 
 4790      68617200 
 4791              	.LASF7:
 4792 0985 73686F72 		.ascii	"short unsigned int\000"
 4792      7420756E 
 4792      7369676E 
 4792      65642069 
 4792      6E7400
 4793              	.LASF98:
 4794 0998 5049445F 		.ascii	"PID_Initialize\000"
 4794      496E6974 
 4794      69616C69 
 4794      7A6500
 4795              	.LASF184:
 4796 09a7 6D61696E 		.ascii	"main\000"
 4796      00
 4797              	.LASF80:
 4798 09ac 69746572 		.ascii	"iterm\000"
 4798      6D00
 4799              	.LASF25:
 4800 09b2 646F7562 		.ascii	"double\000"
 4800      6C6500
 4801              	.LASF178:
 4802 09b9 496E6465 		.ascii	"Index_Counter_1_Start\000"
 4802      785F436F 
 4802      756E7465 
 4802      725F315F 
 4802      53746172 
 4803              	.LASF129:
 4804 09cf 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 4804      6D654D69 
 4804      63726F73 
 4804      65636F6E 
 4804      64734163 
 4805              	.LASF46:
 4806 09ed 6F70436F 		.ascii	"opConfig\000"
 4806      6E666967 
 4806      00
 4807              	.LASF168:
 4808 09f6 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 4808      7273745F 
 4808      656E636F 
 4808      6465725F 
 4808      53746172 
 4809              	.LASF147:
 4810 0a0e 6973725F 		.ascii	"isr_home_ClearPending\000"
 4810      686F6D65 
 4810      5F436C65 
 4810      61725065 
 4810      6E64696E 
 4811              	.LASF76:
 4812 0a24 6661756C 		.ascii	"fault\000"
 4812      7400
 4813              	.LASF86:
 4814 0a2a 52535449 		.ascii	"RSTIsrHandler\000"
 4814      73724861 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccS5sqUl.s 			page 119


 4814      6E646C65 
 4814      7200
 4815              	.LASF79:
 4816 0a38 706F7369 		.ascii	"position\000"
 4816      74696F6E 
 4816      00
 4817              	.LASF44:
 4818 0a41 4661756C 		.ascii	"FaultStates_t\000"
 4818      74537461 
 4818      7465735F 
 4818      7400
 4819              	.LASF142:
 4820 0a4f 74784D65 		.ascii	"txMessageState\000"
 4820      73736167 
 4820      65537461 
 4820      746500
 4821              	.LASF116:
 4822 0a5e 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 4822      45666665 
 4822      63746976 
 4822      65536574 
 4822      706F696E 
 4823              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
