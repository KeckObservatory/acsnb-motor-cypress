ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB46:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original non-RTOS version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  12:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  13:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  14:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  15:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  16:main.c        **** *******************************************************************************/
  17:main.c        **** #include <FreeRTOS.h>
  18:main.c        **** #include <semphr.h>
  19:main.c        **** #include <task.h>
  20:main.c        **** #include <I2C_I2C.h>
  21:main.c        **** #include <stdbool.h>
  22:main.c        **** #include <stdlib.h>
  23:main.c        **** #include <math.h>
  24:main.c        **** #include "INA219.h"
  25:main.c        **** 
  26:main.c        **** /* Firmware revision is 0-0-4 (as of 2019-04-04 PMR) */
  27:main.c        **** #define FIRMWARE_REV_0 0
  28:main.c        **** #define FIRMWARE_REV_1 0
  29:main.c        **** #define FIRMWARE_REV_2 4
  30:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 2


  31:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  32:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  33:main.c        **** 
  34:main.c        **** /* --------------------------------------------------------------------- 
  35:main.c        ****  * CONSTANTS
  36:main.c        ****  * --------------------------------------------------------------------- */
  37:main.c        **** 
  38:main.c        **** /* Interrupt priorities (not to be confused with RTOS task priorities) */
  39:main.c        **** #define NESTED_ISR                             (1u)
  40:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  41:main.c        **** #define HIGHER_PRIORITY                        (2u)
  42:main.c        **** 
  43:main.c        **** /* Interrupt prototypes */
  44:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  45:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  46:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  47:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  48:main.c        **** 
  49:main.c        **** /* --------------------------------------------------------------------- 
  50:main.c        ****  * WDT Defines
  51:main.c        ****  *
  52:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  53:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  54:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  55:main.c        ****  * --------------------------------------------------------------------- */
  56:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  57:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  58:main.c        **** 
  59:main.c        **** /* --------------------------------------------------------------------- 
  60:main.c        ****  * PWM Defines
  61:main.c        ****  * --------------------------------------------------------------------- */
  62:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  63:main.c        **** #define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * (PWM_15KHZ_PERIOD/100))
  64:main.c        **** #define PWM_IDLE                               (50.0)
  65:main.c        **** 
  66:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  67:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  68:main.c        **** #define INA219_CAL_VALUE                       (8192)
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  72:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  73:main.c        **** 
  74:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  75:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  76:main.c        **** 
  77:main.c        **** /* --------------------------------------------------------------------- 
  78:main.c        ****  * PID Defines
  79:main.c        ****  * --------------------------------------------------------------------- */
  80:main.c        **** #define PID_MANUAL                             (0)
  81:main.c        **** #define PID_AUTOMATIC                          (1)
  82:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (25)
  83:main.c        **** bool inAuto = false;
  84:main.c        **** 
  85:main.c        **** volatile int8 Jog, LastJog;
  86:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  87:main.c        **** int32 PID_Setpoint, PID_EffectiveSetpoint;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 3


  88:main.c        **** uint8 PID_EffSetDelta;
  89:main.c        **** uint32 lastTime;
  90:main.c        **** float Output;
  91:main.c        **** float ITerm;
  92:main.c        **** volatile int32 Position, LastPosition;
  93:main.c        **** float refKp, refKi, refKd;
  94:main.c        **** float kp, ki, kd;
  95:main.c        **** uint32 refSampleTime = 5; // Default to 5ms
  96:main.c        **** float outMax_Total, outMax_ITerm;
  97:main.c        **** float pwmLimit, pwmMax, pwmMin;    
  98:main.c        **** 
  99:main.c        **** /* --------------------------------------------------------------------- 
 100:main.c        ****  * ENCODER PROPERTIES
 101:main.c        ****  *
 102:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 103:main.c        ****  *
 104:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 105:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 106:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 107:main.c        ****  * flag and resetting the counter to 0 again.
 108:main.c        ****  *
 109:main.c        ****  * (0x800000 - 0x700000 is 0x100000 or 1.048M, >3x the entire actuator travel)
 110:main.c        ****  * --------------------------------------------------------------------- */
 111:main.c        **** #define ENCODER_MAX                            (0x00800000)
 112:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0x00700000)
 113:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 114:main.c        **** 
 115:main.c        **** /* --------------------------------------------------------------------- 
 116:main.c        ****  * INA219 REGISTERS
 117:main.c        ****  * --------------------------------------------------------------------- */
 118:main.c        **** #define INA219_REG_CONFIG                      (0x00)
 119:main.c        **** #define INA219_REG_SHUNTVOLTAGE                (0x01)
 120:main.c        **** #define INA219_REG_BUSVOLTAGE                  (0x02)
 121:main.c        **** #define INA219_REG_POWER                       (0x03)
 122:main.c        **** #define INA219_REG_CURRENT                     (0x04)
 123:main.c        **** #define INA219_REG_CALIBRATION                 (0x05)
 124:main.c        **** 
 125:main.c        **** /* ****************************
 126:main.c        ****  * INA219 CONFIG REGISTER (R/W)
 127:main.c        ****  * **************************** */
 128:main.c        **** #define INA219_CONFIG_RESET                    (0x8000)  // Reset Bit
 129:main.c        **** 
 130:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_MASK       (0x2000)  // Bus Voltage Range Mask
 131:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_16V        (0x0000)  // 0-16V Range
 132:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_32V        (0x2000)  // 0-32V Range
 133:main.c        **** 
 134:main.c        **** #define INA219_CONFIG_GAIN_MASK                (0x1800)  // Gain Mask
 135:main.c        **** #define INA219_CONFIG_GAIN_1_40MV              (0x0000)  // Gain 1, 40mV Range
 136:main.c        **** #define INA219_CONFIG_GAIN_2_80MV              (0x0800)  // Gain 2, 80mV Range
 137:main.c        **** #define INA219_CONFIG_GAIN_4_160MV             (0x1000)  // Gain 4, 160mV Range
 138:main.c        **** #define INA219_CONFIG_GAIN_8_320MV             (0x1800)  // Gain 8, 320mV Range
 139:main.c        **** 
 140:main.c        **** #define INA219_CONFIG_BADCRES_MASK             (0x0780)  // Bus ADC Resolution Mask
 141:main.c        **** #define INA219_CONFIG_BADCRES_9BIT             (0x0080)  // 9-bit bus res = 0..511
 142:main.c        **** #define INA219_CONFIG_BADCRES_10BIT            (0x0100)  // 10-bit bus res = 0..1023
 143:main.c        **** #define INA219_CONFIG_BADCRES_11BIT            (0x0200)  // 11-bit bus res = 0..2047
 144:main.c        **** #define INA219_CONFIG_BADCRES_12BIT            (0x0400)  // 12-bit bus res = 0..4097
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 4


 145:main.c        **** 
 146:main.c        **** #define INA219_CONFIG_SADCRES_MASK             (0x0078)  // Shunt ADC Resolution and Averaging Mask
 147:main.c        **** #define INA219_CONFIG_SADCRES_9BIT_1S_84US     (0x0000)  // 1 x 9-bit shunt sample
 148:main.c        **** #define INA219_CONFIG_SADCRES_10BIT_1S_148US   (0x0008)  // 1 x 10-bit shunt sample
 149:main.c        **** #define INA219_CONFIG_SADCRES_11BIT_1S_276US   (0x0010)  // 1 x 11-bit shunt sample
 150:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_1S_532US   (0x0018)  // 1 x 12-bit shunt sample
 151:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_2S_1060US  (0x0048)	 // 2 x 12-bit shunt samples averaged toget
 152:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_4S_2130US  (0x0050)  // 4 x 12-bit shunt samples averaged toget
 153:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_8S_4260US  (0x0058)  // 8 x 12-bit shunt samples averaged toget
 154:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_16S_8510US (0x0060)  // 16 x 12-bit shunt samples averaged toge
 155:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_32S_17MS   (0x0068)  // 32 x 12-bit shunt samples averaged toge
 156:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_64S_34MS   (0x0070)  // 64 x 12-bit shunt samples averaged toge
 157:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_128S_69MS  (0x0078)  // 128 x 12-bit shunt samples averaged tog
 158:main.c        **** 
 159:main.c        **** #define INA219_CONFIG_MODE_MASK                (0x0007)  // Operating Mode Mask
 160:main.c        **** #define INA219_CONFIG_MODE_POWERDOWN           (0x0000)
 161:main.c        **** #define INA219_CONFIG_MODE_SVOLT_TRIGGERED     (0x0001)
 162:main.c        **** #define INA219_CONFIG_MODE_BVOLT_TRIGGERED     (0x0002)
 163:main.c        **** #define INA219_CONFIG_MODE_SANDBVOLT_TRIGGERED (0x0003)
 164:main.c        **** #define INA219_CONFIG_MODE_ADCOFF              (0x0004)
 165:main.c        **** #define INA219_CONFIG_MODE_SVOLT_CONTINUOUS    (0x0005)
 166:main.c        **** #define INA219_CONFIG_MODE_BVOLT_CONTINUOUS    (0x0006)
 167:main.c        **** #define INA219_CONFIG_MODE_SANDBVOLT_CONTINUOUS (0x0007)	
 168:main.c        **** 
 169:main.c        **** 
 170:main.c        **** /* --------------------------------------------------------------------- 
 171:main.c        ****  * RTOS INTERFACES
 172:main.c        ****  * --------------------------------------------------------------------- */
 173:main.c        **** /* Define macros for delaying a task by an amount, returning control back to the OS.
 174:main.c        ****    We have to sleep in OS ticks, so compute how many that is and sleep that long.
 175:main.c        ****    Minimum sleep time is 1ms. */
 176:main.c        **** #define Sleep(MSToSleep)    vTaskDelay( ( MSToSleep * 1000 ) / configTICK_RATE_HZ )
 177:main.c        **** 
 178:main.c        **** 
 179:main.c        **** /* --------------------------------------------------------------------- 
 180:main.c        ****  * GLOBALS
 181:main.c        ****  * --------------------------------------------------------------------- */
 182:main.c        **** /* Coarse reporting of state back to the node box software */
 183:main.c        **** typedef enum {    
 184:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 185:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 186:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 187:main.c        ****     csMAX    
 188:main.c        **** } ConfigStates_t;
 189:main.c        **** 
 190:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 191:main.c        **** 
 192:main.c        **** /* Fault codes, these are bit encoded into a uint8 */
 193:main.c        **** typedef enum {
 194:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 195:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 196:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 197:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 198:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 199:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 200:main.c        ****     fsX2           = 0b00100000,    /* */
 201:main.c        ****     fsX3           = 0b01000000,    /* */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 5


 202:main.c        ****     fsX4           = 0b10000000     /* */
 203:main.c        **** } FaultStates_t;
 204:main.c        **** 
 205:main.c        **** volatile ConfigStates_t ConfigState;
 206:main.c        **** volatile uint8 FaultState;
 207:main.c        **** volatile uint8 ConfigSequence;
 208:main.c        **** volatile uint16 ChecksumErrors;
 209:main.c        **** volatile int16 Current;
 210:main.c        **** volatile float PWM;
 211:main.c        **** uint8 CurrentI2Cinbuf[20];
 212:main.c        **** 
 213:main.c        **** /* Task stack information */
 214:main.c        **** volatile UBaseType_t uxHighWaterMark_PID;
 215:main.c        **** volatile UBaseType_t uxHighWaterMark_Current;
 216:main.c        **** volatile UBaseType_t uxHighWaterMark_Comm;
 217:main.c        **** 
 218:main.c        **** /* Message buffer lock */
 219:main.c        **** SemaphoreHandle_t Lock;
 220:main.c        **** 
 221:main.c        **** /* --------------------------------------------------------------------- 
 222:main.c        ****  * SPI MESSAGING
 223:main.c        ****  * --------------------------------------------------------------------- */
 224:main.c        **** /* V2 protocol 
 225:main.c        **** 
 226:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 227:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 228:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 229:main.c        **** */
 230:main.c        ****     
 231:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 232:main.c        **** #define MAX_MESSAGE_SIZE 30
 233:main.c        ****     
 234:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 235:main.c        ****    talking.  1000 ticks is 1 second of not talking. */
 236:main.c        **** #define MAX_LAST_MESSAGE_TIME_TICKS 1000
 237:main.c        **** uint32 LastMessageTimeTick;
 238:main.c        **** 
 239:main.c        **** /* Opcodes that can come from the node box software */
 240:main.c        **** typedef enum {
 241:main.c        ****     opUNDEFINED = 0,
 242:main.c        ****     opConfig    = 1,
 243:main.c        ****     opStatus    = 2,
 244:main.c        ****     opError     = 3,
 245:main.c        ****     opMAX       
 246:main.c        **** } rxMessage_opcodes_t;    
 247:main.c        **** 
 248:main.c        **** /* Sanity check for opcodes */
 249:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 250:main.c        **** 
 251:main.c        **** typedef struct { 
 252:main.c        ****     uint8 checksum;        
 253:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 254:main.c        ****     uint8 opcode;     /* Operation (generic overlay for previewing opcode value) */
 255:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 256:main.c        **** 
 257:main.c        **** /* Configuration message, 19 bytes */
 258:main.c        **** typedef struct {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 6


 259:main.c        ****     uint8 checksum;        
 260:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 261:main.c        ****     uint8 opcode;     /* Operation: 01 == config */        
 262:main.c        ****     uint8 sequence;   /* Configuration message sequence number */
 263:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 264:main.c        ****     float Ki;
 265:main.c        ****     float Kd;
 266:main.c        ****     uint8 limit_Total;/* Total drive output limit, +/- percentage */
 267:main.c        ****     uint8 limit_ITerm;/* PID I term output limit, also +/- percentage */
 268:main.c        ****     uint8 effsetdelta;/* PID effective setpoint increment delta, nominally 25 steps */
 269:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 270:main.c        **** 
 271:main.c        **** /* Status message, contains desired position and such values, 12 bytes */
 272:main.c        **** typedef struct {
 273:main.c        ****     uint8  checksum;        
 274:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 275:main.c        ****     uint8  opcode;     /* Operation: 02 == status */
 276:main.c        ****     uint8  enable;     /* Enable/disable PID algorithm */
 277:main.c        ****     int32 setpoint;    /* Setpoint (desired actuator position) */
 278:main.c        ****     int8   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 279:main.c        ****     uint8  clearfaults;/* Set to nonzero to clear all the current faults */
 280:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 281:main.c        ****    
 282:main.c        **** 
 283:main.c        **** 
 284:main.c        **** /* Wrap the message with an array of bytes */
 285:main.c        **** union {
 286:main.c        ****     uint8               buf[MAX_MESSAGE_SIZE];
 287:main.c        ****     rxMessage_overlay_t overlay;
 288:main.c        ****     rxMessage_config_t  config;
 289:main.c        ****     rxMessage_status_t  status;  
 290:main.c        **** } rxMessage;
 291:main.c        **** 
 292:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 18 byt
 293:main.c        **** typedef struct  {  
 294:main.c        ****     uint8  checksum;   /* Message checksum */    
 295:main.c        ****     uint8  version0;   /* Version byte 0 */ 
 296:main.c        ****     uint8  version1;   /* Version byte 1 */
 297:main.c        ****     uint8  version2;   /* Version byte 2 */
 298:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 299:main.c        ****     uint8  opcode;     /* Echo back of the opcode this response is for, operation: 02 == status */
 300:main.c        ****     uint8  state;      /* Enum value for current device configuration state */ 
 301:main.c        ****     uint8  fault;      /* Bit encoded fields for current fault status */
 302:main.c        ****     uint8  sequence;   /* Echo back the config sequence number currently set */
 303:main.c        ****     uint16 checksum_errors; /* Count of checksum errors */
 304:main.c        ****     int16 current;     /* Motor current consumption (mA) */
 305:main.c        ****     int32 position;    /* Actual actuator position, signed value */ 
 306:main.c        ****     float pwm;         /* PWM value the motor is moving at */     
 307:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 308:main.c        **** 
 309:main.c        **** /* Wrap the message with an array of bytes */
 310:main.c        **** union {    
 311:main.c        ****     uint8       buf[MAX_MESSAGE_SIZE];
 312:main.c        ****     txMessage_t msg;
 313:main.c        **** } txMessage;
 314:main.c        **** 
 315:main.c        **** /* State machine definition for transmit side of messaging */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 7


 316:main.c        **** typedef enum {
 317:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 318:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 319:main.c        **** } txMessageStates_t;
 320:main.c        **** 
 321:main.c        **** txMessageStates_t txMessageState;
 322:main.c        **** 
 323:main.c        **** 
 324:main.c        **** /******************************************************************************/
 325:main.c        **** /* Function prototypes */
 326:main.c        **** int32 GetPosition(void);
 327:main.c        **** /******************************************************************************/
 328:main.c        **** 
 329:main.c        **** 
 330:main.c        **** 
 331:main.c        **** /*******************************************************************************
 332:main.c        **** * Function Name: setupFreeRTOS
 333:main.c        **** ********************************************************************************
 334:main.c        **** * Summary:
 335:main.c        **** *  Hooks the tick and service handlers for the RTOS at runtime.
 336:main.c        **** *
 337:main.c        **** * Parameters: None
 338:main.c        **** * Return: None
 339:main.c        **** *******************************************************************************/
 340:main.c        **** 
 341:main.c        **** extern void xPortPendSVHandler(void);
 342:main.c        **** extern void xPortSysTickHandler(void);
 343:main.c        **** extern void vPortSVCHandler(void);
 344:main.c        **** 
 345:main.c        **** void setupFreeRTOS(void) {
 346:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 347:main.c        ****     
 348:main.c        ****     /* Handler for Cortex Supervisor Call (SVC, formerly SWI) - address 11 */
 349:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SVCall_IRQn, (cyisraddress)vPortSVCHandler );
 350:main.c        ****     
 351:main.c        ****     /* Handler for Cortex PendSV Call - address 14 */
 352:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + PendSV_IRQn, (cyisraddress)xPortPendSVHandler );    
 353:main.c        ****     
 354:main.c        ****     /* Handler for Cortex SYSTICK - address 15 */
 355:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SysTick_IRQn, (cyisraddress)xPortSysTickHandler );
 356:main.c        **** }
 357:main.c        **** 
 358:main.c        **** 
 359:main.c        **** /*******************************************************************************
 360:main.c        **** * Function Name: AssertFault
 361:main.c        **** ********************************************************************************
 362:main.c        **** * Summary:
 363:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 364:main.c        **** *  all faults.
 365:main.c        **** *
 366:main.c        **** * Parameters: FaultStates_t of the fault detected.
 367:main.c        **** * Return: None
 368:main.c        **** *******************************************************************************/
 369:main.c        **** void AssertFault(FaultStates_t fault) {
 370:main.c        ****  
 371:main.c        ****     switch (fault) {
 372:main.c        ****      
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 8


 373:main.c        ****         /* Clears all asserted faults */
 374:main.c        ****         case fsNONE:
 375:main.c        ****             FaultState = fsNONE;
 376:main.c        ****             break;        
 377:main.c        ****         
 378:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 379:main.c        ****         default:
 380:main.c        ****             FaultState |= fault;
 381:main.c        ****             break;        
 382:main.c        ****     }    
 383:main.c        **** }
 384:main.c        **** 
 385:main.c        **** 
 386:main.c        **** /*******************************************************************************
 387:main.c        **** * Function Name: ClearFault
 388:main.c        **** ********************************************************************************
 389:main.c        **** * Summary:
 390:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 391:main.c        **** *  all faults.
 392:main.c        **** *
 393:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 394:main.c        **** * Return: None
 395:main.c        **** *******************************************************************************/
 396:main.c        **** void ClearFault(FaultStates_t fault) {
 397:main.c        ****  
 398:main.c        ****     switch (fault) {
 399:main.c        ****      
 400:main.c        ****         /* Clears all asserted faults */
 401:main.c        ****         case fsNONE:
 402:main.c        ****             FaultState = fsNONE;
 403:main.c        ****             break;        
 404:main.c        ****         
 405:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 406:main.c        ****         default:
 407:main.c        ****             FaultState &= ~fault;
 408:main.c        ****             break;        
 409:main.c        ****     }    
 410:main.c        **** }
 411:main.c        **** 
 412:main.c        **** 
 413:main.c        **** /*******************************************************************************
 414:main.c        **** * Function Name: Current_Read_Task
 415:main.c        **** ********************************************************************************
 416:main.c        **** * Summary:
 417:main.c        **** *  RTOS task to read the motor current consumption.
 418:main.c        **** *
 419:main.c        **** * Parameters: None
 420:main.c        **** * Return: None
 421:main.c        **** *******************************************************************************/
 422:main.c        **** void Current_Read_Task(void *arg) {
 423:main.c        ****     
 424:main.c        ****     volatile uint32 err;
 425:main.c        ****     uint8 byteMSB;
 426:main.c        ****     uint8 byteLSB;
 427:main.c        ****     volatile int16 CurrentTemp;
 428:main.c        ****     
 429:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 9


 430:main.c        ****     /* Initial high water mark reading */
 431:main.c        ****     uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
 432:main.c        ****     
 433:main.c        ****     //TODO Init_INA(INA219_I2C_ADDR);
 434:main.c        ****     
 435:main.c        ****     while (1) {
 436:main.c        **** 
 437:main.c        ****         //TODO CurrentTemp = getCurrent_raw(INA219_I2C_ADDR);
 438:main.c        ****         
 439:main.c        ****         err = I2C_I2CMasterSendStart(INA219_I2C_ADDR, 0x00, 10); // send start condition for the IN
 440:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 441:main.c        ****             
 442:main.c        ****             I2C_I2CMasterWriteByte(INA219_REG_CALIBRATION, 10);
 443:main.c        ****             
 444:main.c        ****             byteMSB = (uint8)((INA219_CAL_VALUE & 0xFF00) >> 8);
 445:main.c        ****             I2C_I2CMasterWriteByte(byteMSB, 10);
 446:main.c        ****             
 447:main.c        ****             byteLSB = (uint8)(INA219_CAL_VALUE & 0x00FF);
 448:main.c        ****             I2C_I2CMasterWriteByte(byteLSB, 10);
 449:main.c        ****             I2C_I2CMasterSendStop(10);
 450:main.c        ****             
 451:main.c        ****         } else {
 452:main.c        ****             Current = 0;
 453:main.c        ****             AssertFault(fsCurrentRead);
 454:main.c        ****         }
 455:main.c        ****         
 456:main.c        ****         err = I2C_I2CMasterSendStart(INA219_I2C_ADDR, 0x00, 10); // send start condition for the IN
 457:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 458:main.c        ****             
 459:main.c        ****             I2C_I2CMasterWriteByte(INA219_REG_CURRENT, 10);
 460:main.c        ****             I2C_I2CMasterSendStop(10);
 461:main.c        ****             
 462:main.c        ****             /* Read back the value for the current usage */
 463:main.c        ****             err = I2C_I2CMasterReadBuf(INA219_I2C_ADDR, CurrentI2Cinbuf, 5, 1);
 464:main.c        ****             
 465:main.c        ****             /* Reassemble the current value into a signed 16 bit value */
 466:main.c        ****             if (err == I2C_I2C_MSTR_NO_ERROR) {
 467:main.c        ****                 CurrentTemp = (int16)(CurrentI2Cinbuf[0] << 8) + CurrentI2Cinbuf[1];
 468:main.c        ****             } else {
 469:main.c        ****                 CurrentTemp = 0;   
 470:main.c        ****                 AssertFault(fsCurrentRead);
 471:main.c        ****             }
 472:main.c        ****         } else {
 473:main.c        ****             CurrentTemp = 0; 
 474:main.c        ****             AssertFault(fsCurrentRead);
 475:main.c        ****         }
 476:main.c        **** 
 477:main.c        ****         /* Perform the assignment as one operation, to make it as atomic as possible (may need more
 478:main.c        ****         Current = CurrentTemp;
 479:main.c        **** 
 480:main.c        ****         /* Read the current at 2Hz */        
 481:main.c        ****         Sleep(500);
 482:main.c        ****         
 483:main.c        ****         /* Get our task stack usage high water mark */    
 484:main.c        ****         uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
 485:main.c        ****     }
 486:main.c        ****    
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 10


 487:main.c        **** }
 488:main.c        **** 
 489:main.c        **** /*******************************************************************************
 490:main.c        **** * Function Name: Comm_Task
 491:main.c        **** ********************************************************************************
 492:main.c        **** * Summary:
 493:main.c        **** *  RTOS task to perform the SPI communications.
 494:main.c        **** *
 495:main.c        **** * Parameters: None
 496:main.c        **** * Return: None
 497:main.c        **** *******************************************************************************/
 498:main.c        **** void Comm_Task(void *arg) {
 499:main.c        ****  
 500:main.c        ****     rxMessage_opcodes_t opcode;
 501:main.c        ****     uint8 size;
 502:main.c        ****     uint8 i;
 503:main.c        ****     uint8 checksum;
 504:main.c        ****     uint8 limit;    
 505:main.c        ****     
 506:main.c        ****     /* Initial high water mark reading */
 507:main.c        ****     uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );  
 508:main.c        ****     
 509:main.c        ****     while (1) {
 510:main.c        ****         //PROBE_Write(1);
 511:main.c        ****         
 512:main.c        ****         /* If the SPI is moving data out right now, skip any touching of the message buffer */
 513:main.c        ****         if (!SPI_1_SpiIsBusBusy()) {
 514:main.c        ****         
 515:main.c        ****             /* In certain states, this thread is responsible for loading the outbound messaging */
 516:main.c        ****             switch (txMessageState) {
 517:main.c        ****              
 518:main.c        ****                 /* Output buffer is clear and ready for loading, rxMessage is (probably) good and n
 519:main.c        ****                 case txmsClear:
 520:main.c        **** 
 521:main.c        ****                     /* Take the lock, set the fields, and release the lock.  If we can't get the lo
 522:main.c        ****                        we have missed this messaging cycle have to skip it.
 523:main.c        ****                        2018-12-18 PMR: At the moment, this is the only task taking the lock so it w
 524:main.c        ****                                        Sometime in the future we might need the lock so I am leavin
 525:main.c        ****                     */
 526:main.c        ****                     if( xSemaphoreTake( Lock, ( TickType_t ) 4 ) == pdTRUE ) {
 527:main.c        ****                         
 528:main.c        ****                         /* Get a few items out of the message before checking the sum */
 529:main.c        ****                         size     = rxMessage.overlay.size;
 530:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 531:main.c        ****                         
 532:main.c        ****                         /* Make sure the size makes sense.  If we have to reset the size it's proba
 533:main.c        ****                         if (size > sizeof(txMessage.buf))
 534:main.c        ****                             size = sizeof(txMessage.buf);                            
 535:main.c        ****                     
 536:main.c        ****                         /* Calculate the checksum by summing the bytes of the entire message, it sh
 537:main.c        ****                         for (i = 0, checksum = 0; i < size; i++)
 538:main.c        ****                             checksum += rxMessage.buf[i]; 
 539:main.c        **** 
 540:main.c        ****                         /* Checksum fault, don't try to process the messgage */
 541:main.c        ****                         if ((checksum & 0xFF) != 0) {
 542:main.c        ****                             
 543:main.c        ****                             txMessage.msg.opcode = opcode;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 11


 544:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 545:main.c        ****                             ChecksumErrors++;
 546:main.c        ****                             
 547:main.c        ****                         /* Message looks fine, process it */
 548:main.c        ****                         } else {
 549:main.c        **** 
 550:main.c        ****                             /* Message opcode must be valid before trying to process the message co
 551:main.c        ****                             if ( rxMessageOpcodeValid(opcode) ) {                            
 552:main.c        ****                             
 553:main.c        ****                                 switch (opcode) {
 554:main.c        ****                                 
 555:main.c        ****                                     case opConfig:
 556:main.c        ****                                         /* Special message to establish settings on the device such
 557:main.c        ****                                     
 558:main.c        ****                                         /* Update the 'reference' values passed down from the serve
 559:main.c        ****                                            values are time interval adjusted */
 560:main.c        ****                                         refKp = rxMessage.config.Kp;
 561:main.c        ****                                         refKi = rxMessage.config.Ki;
 562:main.c        ****                                         refKd = rxMessage.config.Kd;      
 563:main.c        ****                                     
 564:main.c        ****                                         /* PID effective setpoint increment delta value */         
 565:main.c        ****                                         PID_EffSetDelta = rxMessage.config.effsetdelta;
 566:main.c        ****                                            
 567:main.c        ****                                         /* Setup the output limits and stop a jog if one was in pro
 568:main.c        ****                                         Jog = 0;
 569:main.c        ****                                     
 570:main.c        ****                                         /* Clip the limits to 100% duty cycle */
 571:main.c        ****                                         limit = rxMessage.config.limit_Total;
 572:main.c        ****                                         if (limit > 100)
 573:main.c        ****                                             limit = 100;
 574:main.c        ****                                     
 575:main.c        ****                                         outMax_Total = limit;                                      
 576:main.c        ****                                         
 577:main.c        ****                                         limit = rxMessage.config.limit_ITerm;                      
 578:main.c        ****                                         if (limit > 100)
 579:main.c        ****                                             limit = 100;
 580:main.c        ****                                         
 581:main.c        ****                                         outMax_ITerm = limit;
 582:main.c        ****                                         
 583:main.c        ****                                         /* Convert the configured output maximum also into a PWM va
 584:main.c        ****                                         could be set from manual control of the PWM.  
 585:main.c        **** 
 586:main.c        ****                                         outMax_Total ranges from 0 to 100% of power delivery, which
 587:main.c        ****                                         convert it into a value symmetrically above and below the "
 588:main.c        ****                                         point value of 50 */    
 589:main.c        ****                                         pwmLimit = (outMax_Total/100 * 50);
 590:main.c        ****                                         pwmMax = 50 + pwmLimit;
 591:main.c        ****                                         pwmMin = 50 - pwmLimit;
 592:main.c        ****                                     
 593:main.c        ****                                         /* We have received a config message, so signal to the PID 
 594:main.c        ****                                         ConfigState = csReady;  
 595:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 596:main.c        ****                                     
 597:main.c        ****                                         /* Clear all the faults when reconfigured */
 598:main.c        ****                                         ClearFault(fsNONE);
 599:main.c        ****                                         break;
 600:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 12


 601:main.c        ****                                     case opStatus:
 602:main.c        ****                                         /* The normal message telling us where to go, how much to j
 603:main.c        ****                                         PID_Enabled = (bool) rxMessage.status.enable;
 604:main.c        ****                                         
 605:main.c        ****                                         /* If we are commanded to move somewhere else, remember whe
 606:main.c        ****                                         if (PID_Setpoint != rxMessage.status.setpoint) {
 607:main.c        ****                                             
 608:main.c        ****                                             /* Remember where we started */
 609:main.c        ****                                             LastPosition = GetPosition();
 610:main.c        ****                                             
 611:main.c        ****                                             /* Update destination */
 612:main.c        ****                                             PID_Setpoint = rxMessage.status.setpoint;
 613:main.c        ****                                             
 614:main.c        ****                                             /* Initialize the effective setpoint to be equal to whe
 615:main.c        ****                                             it will be incremented/decremented when the PID algorit
 616:main.c        ****                                             PID_EffectiveSetpoint = LastPosition;                  
 617:main.c        ****                                             
 618:main.c        ****                                             /* Reset counting of index marks */
 619:main.c        ****                                             Index_Counter_1_WriteCounter(0);
 620:main.c        ****                                         }                                        
 621:main.c        ****                                     
 622:main.c        ****                                         /* PWM jog value ranges from -50 to 50, where -50 is max-re
 623:main.c        ****                                         Jog = rxMessage.status.jog;                                
 624:main.c        ****                                         break;
 625:main.c        ****                                     
 626:main.c        ****                                     /* No other opcodes are valid */
 627:main.c        ****                                     default:
 628:main.c        ****                                         break;
 629:main.c        ****                                 }                           
 630:main.c        ****                             }                            
 631:main.c        ****                         }
 632:main.c        ****                         
 633:main.c        ****                         /* Get a fresh copy of the position information */
 634:main.c        ****                         Position = GetPosition();
 635:main.c        ****                         
 636:main.c        ****                         /* Fill out the common reponse the same way every time, as a status respons
 637:main.c        ****                         txMessage.msg.checksum = 0;
 638:main.c        ****                         txMessage.msg.version0 = FIRMWARE_REV_0;
 639:main.c        ****                         txMessage.msg.version1 = FIRMWARE_REV_1;
 640:main.c        ****                         txMessage.msg.version2 = FIRMWARE_REV_2;
 641:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 642:main.c        ****                         txMessage.msg.opcode   = opStatus;
 643:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 644:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 645:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 646:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 647:main.c        ****                         txMessage.msg.position = Position;
 648:main.c        ****                         txMessage.msg.pwm      = PWM;
 649:main.c        ****                         txMessage.msg.current  = Current;                            
 650:main.c        ****                         
 651:main.c        ****                         /* Set the checksum in the response */
 652:main.c        ****                         for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 653:main.c        ****                             checksum += txMessage.buf[i]; 
 654:main.c        ****                             
 655:main.c        ****                         /* Take the 2's complement of the sum and put it back in the message */
 656:main.c        ****                         txMessage.msg.checksum = ~checksum + 1;
 657:main.c        ****                             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 13


 658:main.c        ****                         /* Copy the readied buffer out to the FIFO */
 659:main.c        ****                         //TODO: should we clear this here, or at the end of the transmit complete i
 660:main.c        ****                         SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 661:main.c        **** 
 662:main.c        ****                         /* Indicate it's loaded for use */
 663:main.c        ****                         txMessageState = txmsLoaded;
 664:main.c        ****                         
 665:main.c        ****                         /* Clear all the faults if told to */
 666:main.c        ****                         if ((bool) rxMessage.status.clearfaults)
 667:main.c        ****                             ClearFault(fsNONE);
 668:main.c        ****                     
 669:main.c        ****                         /* Release the lock */
 670:main.c        ****                         xSemaphoreGive( Lock );
 671:main.c        ****                     }            
 672:main.c        ****                 
 673:main.c        ****                     break;
 674:main.c        ****             
 675:main.c        ****                 /* A message was already readied for transmission, nothing to do here */
 676:main.c        ****                 case txmsLoaded:
 677:main.c        ****                     
 678:main.c        ****                     break;
 679:main.c        ****             }
 680:main.c        ****             
 681:main.c        ****         }
 682:main.c        ****         
 683:main.c        ****         //PROBE_Write(0);
 684:main.c        ****         
 685:main.c        ****         /* Quick sleep, a whole messaging sequence will take maybe 1.5ms */
 686:main.c        ****         Sleep(1);
 687:main.c        ****         
 688:main.c        ****         /* Get our task stack usage high water mark */    
 689:main.c        ****         uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );
 690:main.c        ****     }
 691:main.c        **** }
 692:main.c        ****     
 693:main.c        **** 
 694:main.c        **** 
 695:main.c        **** 
 696:main.c        **** /*******************************************************************************
 697:main.c        **** * Function Name: PWM_Set
 698:main.c        **** ********************************************************************************
 699:main.c        **** * Summary:
 700:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 701:main.c        **** *
 702:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 703:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 704:main.c        **** * Return: None
 705:main.c        **** *******************************************************************************/
 706:main.c        **** void PWM_Set(float dutycycle) {
 707:main.c        ****     
 708:main.c        ****     float drive = dutycycle;
 709:main.c        ****     
 710:main.c        ****     /* Clip to the max PWM drive +/- around 50 */
 711:main.c        ****     if (drive > pwmMax) {
 712:main.c        ****         drive = pwmMax;
 713:main.c        ****     } else if (drive < pwmMin) {
 714:main.c        ****         drive = pwmMin;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 14


 715:main.c        ****     }
 716:main.c        ****     
 717:main.c        ****     PWM_1_WriteCompare(PWM_PCT_TO_COMPARE(drive));    
 718:main.c        **** }
 719:main.c        **** 
 720:main.c        **** /*******************************************************************************
 721:main.c        **** * Function Name: GetPosition
 722:main.c        **** ********************************************************************************
 723:main.c        **** * Summary:
 724:main.c        **** *  Get the physical position value and compensate for negative locations.
 725:main.c        **** *
 726:main.c        **** * Parameters: None
 727:main.c        **** * Return: int32 (signed!) position value
 728:main.c        **** *******************************************************************************/
 729:main.c        **** int32 GetPosition(void) {
 730:main.c        ****     
 731:main.c        ****     uint32 RawPosition;
 732:main.c        ****     int32 result;
 733:main.c        ****     
 734:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 735:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 736:main.c        ****     
 737:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 738:main.c        ****        underflow and make that into a negative value */
 739:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 740:main.c        ****         
 741:main.c        ****         result = (int32) ((-1) * (ENCODER_MAX - RawPosition));
 742:main.c        ****         
 743:main.c        ****     } else {
 744:main.c        ****      
 745:main.c        ****         /* Value is "positive", treat it normally */
 746:main.c        ****         result = (int32) RawPosition;
 747:main.c        ****     }
 748:main.c        ****     
 749:main.c        ****     /* Update the master copy of position information */
 750:main.c        ****     Position = result;
 751:main.c        ****     return result;
 752:main.c        **** }
 753:main.c        **** 
 754:main.c        **** 
 755:main.c        **** 
 756:main.c        **** /*******************************************************************************
 757:main.c        **** * Function Name: PID_Initialize
 758:main.c        **** ********************************************************************************
 759:main.c        **** * Summary:
 760:main.c        **** *  Setup and reset the PID terms.
 761:main.c        **** *
 762:main.c        **** * Parameters: None
 763:main.c        **** * Return: None
 764:main.c        **** *******************************************************************************/
 765:main.c        **** void PID_Initialize(void) {
 766:main.c        ****     
 767:main.c        ****     /* Get up-to-date position */
 768:main.c        ****     Position = GetPosition();
 769:main.c        ****     LastPosition = Position;
 770:main.c        ****     
 771:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 15


 772:main.c        ****        switching from manual to auto frequently */
 773:main.c        ****     ITerm = 0;
 774:main.c        **** }    
 775:main.c        **** 
 776:main.c        **** 
 777:main.c        **** /*******************************************************************************
 778:main.c        **** * Function Name: PID_SetTunings
 779:main.c        **** ********************************************************************************
 780:main.c        **** * Summary:
 781:main.c        **** *  Setup the p, i, and d gain values and scale to the sample time.
 782:main.c        **** *
 783:main.c        **** * Parameters: Sample time in ms, and Kp, Ki, Kd gains.
 784:main.c        **** * Return: None
 785:main.c        **** *******************************************************************************/
 786:main.c        **** void PID_SetTunings(uint32 newSampleTime, float newKp, float newKi, float newKd) {
 787:main.c        ****     
 788:main.c        ****     if (newSampleTime > 0) {
 789:main.c        ****     
 790:main.c        ****         float sampleTimeInSec = ((float) newSampleTime) / 1000;
 791:main.c        ****     
 792:main.c        ****         kp = newKp;
 793:main.c        ****         ki = newKi * sampleTimeInSec;
 794:main.c        ****         kd = newKd / sampleTimeInSec;        
 795:main.c        ****     }
 796:main.c        **** }
 797:main.c        **** 
 798:main.c        **** 
 799:main.c        **** /*******************************************************************************
 800:main.c        **** * Function Name: PID_Compute
 801:main.c        **** ********************************************************************************
 802:main.c        **** * Summary:
 803:main.c        **** *  Execute a pass through the PID process to create a duty cycle output.
 804:main.c        **** *
 805:main.c        **** * Parameters: Current time and current destination.
 806:main.c        **** * Return: PWM output, in percentage.
 807:main.c        **** *******************************************************************************/
 808:main.c        **** float PID_Compute(uint32 now, uint32 setpoint) {
 809:main.c        ****     
 810:main.c        ****     int32 error, dPosition;
 811:main.c        ****     uint32 timeChange;
 812:main.c        ****         
 813:main.c        ****     if(!inAuto) 
 814:main.c        ****         return 0;
 815:main.c        ****     
 816:main.c        ****     /* Get most up-to-date current position */
 817:main.c        ****     Position = GetPosition();
 818:main.c        ****     
 819:main.c        ****     /* How much time has elapsed since the last pass? */
 820:main.c        ****     timeChange = (now - lastTime);
 821:main.c        ****     
 822:main.c        ****     /* Only do the PID calc if at LEAST 5ms has elapsed */
 823:main.c        ****     if (timeChange >= refSampleTime) {
 824:main.c        **** 
 825:main.c        ****         /* Adjust the gains to the most recent sampling time.  Do it continuously to make sure the 
 826:main.c        ****            in case the cycle runs longer than the normal 5ms. */
 827:main.c        ****         PID_SetTunings(timeChange, refKp, refKi, refKd);
 828:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 16


 829:main.c        ****         /* Compute all the working error variables */
 830:main.c        ****         error = setpoint - Position;
 831:main.c        ****         ITerm += (ki * error);
 832:main.c        ****         
 833:main.c        ****         /* Clip the I term at a max value for just that term (windup guard) */
 834:main.c        ****         if (ITerm > outMax_ITerm) {
 835:main.c        ****             ITerm = outMax_ITerm;
 836:main.c        ****         } else if (ITerm < -outMax_ITerm) {
 837:main.c        ****             ITerm = -outMax_ITerm;
 838:main.c        ****         }
 839:main.c        ****         
 840:main.c        ****         /* Calculate the error term */
 841:main.c        ****         dPosition = (Position - LastPosition);
 842:main.c        **** 
 843:main.c        ****         /* Compute PID Output */
 844:main.c        ****         Output = (kp * error) + ITerm - (kd * dPosition);
 845:main.c        ****         
 846:main.c        ****         /* Clip the output */
 847:main.c        ****         if (Output> outMax_Total) {
 848:main.c        ****             Output = outMax_Total;
 849:main.c        ****         } else if (Output < -outMax_Total) {
 850:main.c        ****             Output = -outMax_Total;
 851:main.c        ****         }
 852:main.c        **** 
 853:main.c        ****         /* Remember some variables for next time */
 854:main.c        ****         LastPosition = Position;
 855:main.c        ****         lastTime = now;        
 856:main.c        ****     }
 857:main.c        ****     
 858:main.c        ****     return Output;    
 859:main.c        **** }
 860:main.c        ****  
 861:main.c        **** /*******************************************************************************
 862:main.c        **** * Function Name: PID_SetMode
 863:main.c        **** ********************************************************************************
 864:main.c        **** * Summary:
 865:main.c        **** *  Sets the PID into automatic or manual mode.
 866:main.c        **** *
 867:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 868:main.c        **** * Return: None
 869:main.c        **** *******************************************************************************/
 870:main.c        **** void PID_SetMode(uint32 Mode) {
 871:main.c        ****     
 872:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 873:main.c        ****     
 874:main.c        ****     if (newAuto && !inAuto) {  
 875:main.c        ****         /*we just went from manual to auto*/
 876:main.c        ****         PID_Initialize();
 877:main.c        ****     }
 878:main.c        ****     
 879:main.c        ****     inAuto = newAuto;
 880:main.c        **** } 
 881:main.c        ****     
 882:main.c        **** /*******************************************************************************
 883:main.c        **** * Function Name: PID_SetDrive
 884:main.c        **** ********************************************************************************
 885:main.c        **** * Summary:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 17


 886:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 887:main.c        **** *
 888:main.c        **** * Parameters: Percentage output to drive the PWM.
 889:main.c        **** * Return: None
 890:main.c        **** *******************************************************************************/
 891:main.c        **** void PID_SetDrive(float percent) {
 892:main.c        **** 
 893:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 894:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 895:main.c        ****     float dutycycle = (percent + 100) / 2;    
 896:main.c        ****     
 897:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 898:main.c        ****     PWM_Set(dutycycle);  
 899:main.c        **** }
 900:main.c        **** 
 901:main.c        **** 
 902:main.c        **** 
 903:main.c        **** 
 904:main.c        **** /*******************************************************************************
 905:main.c        **** * Function Name: PID_Task
 906:main.c        **** ********************************************************************************
 907:main.c        **** * Summary:
 908:main.c        **** *  RTOS task to perform the PID calculations.
 909:main.c        **** *
 910:main.c        **** * Parameters: None
 911:main.c        **** * Return: None
 912:main.c        **** *******************************************************************************/
 913:main.c        **** void PID_Task(void *arg) {
 914:main.c        ****     
 915:main.c        ****     /* Sleep this thread 5ms at a time */
 916:main.c        ****     uint32 sleeptime = 5;    
 917:main.c        ****     uint32 now;
 918:main.c        ****     float percent; 
 919:main.c        ****     int32 CurrentPosition, DeltaPosition;
 920:main.c        ****     uint32 CurrentIndexCount;
 921:main.c        ****     
 922:main.c        ****     /* Initial high water mark reading */
 923:main.c        ****     uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );
 924:main.c        ****     
 925:main.c        ****     /* Initial values */
 926:main.c        **** 
 927:main.c        ****     /* These are the 'reference' values passed down from the server, not to be used in-the-raw beca
 928:main.c        ****        values are time interval adjusted */
 929:main.c        ****     refKp = 0;
 930:main.c        ****     refKi = 0;
 931:main.c        ****     refKd = 0;
 932:main.c        ****     
 933:main.c        ****     /* Setup the PID subsystem */
 934:main.c        ****     PID_Initialize();
 935:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);    
 936:main.c        ****     PID_SetMode(PID_MANUAL);
 937:main.c        ****     
 938:main.c        ****     /* Initially default to 100% output max until config tells us otherwise */
 939:main.c        ****     outMax_Total = 100;
 940:main.c        ****     outMax_ITerm = 100;
 941:main.c        **** 
 942:main.c        ****     /* Init the PWM limits the same way, full maximums */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 18


 943:main.c        ****     pwmLimit = 50;   // This is a + or - value
 944:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 945:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 946:main.c        ****     
 947:main.c        ****     /* Start counting time at 0ms */
 948:main.c        ****     now = 0;
 949:main.c        ****     
 950:main.c        ****     /* Start off disabled */
 951:main.c        ****     PID_Setpoint = 0;  
 952:main.c        ****     PID_EffectiveSetpoint = 0;
 953:main.c        ****     PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 954:main.c        ****     PID_Was_Enabled = false;
 955:main.c        ****     PID_Enabled = false;
 956:main.c        ****     
 957:main.c        ****     while (1) {
 958:main.c        ****         
 959:main.c        ****         PROBE_Write(1);
 960:main.c        ****               
 961:main.c        ****         /* ------------------------------------------------------------------------------------ */
 962:main.c        ****         /* At the top of the PID loop, refresh the counter of the watchdog to indicate the RTOS 
 963:main.c        ****            thread is still alive.  Were the RTOS to crash or the motion thread to die, the CPU 
 964:main.c        ****            will be reset after 2 seconds. */
 965:main.c        ****         WDT_COUNT1_REFRESH();        
 966:main.c        ****         /* ------------------------------------------------------------------------------------ */
 967:main.c        **** 
 968:main.c        ****         
 969:main.c        ****         /* If the server hasn't talked to us in a while (no messages on the SPI), 
 970:main.c        ****            take preventative action and abandon any moves in progress.  When the uint32
 971:main.c        ****            overflows, "now" will be (temporarily) less than the last timestamped message,
 972:main.c        ****            so handle that too */
 973:main.c        ****         now = xTaskGetTickCount();
 974:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 975:main.c        ****              (now < LastMessageTimeTick) ) {
 976:main.c        ****             
 977:main.c        ****             /* Stop all motion */
 978:main.c        ****             PWM_Set(PWM_JOG_NEUTRAL);
 979:main.c        ****             PID_Enabled = false;
 980:main.c        ****             
 981:main.c        ****             /* Clear the values that would drive motion on the next message arrival.  Assume the ne
 982:main.c        ****                in which case we want to be neutral. */
 983:main.c        ****             Jog = 0;
 984:main.c        **** 
 985:main.c        ****         /* Only run the PID algorithm if we have been configured by the nodebox software */
 986:main.c        ****         } else if (ConfigState == csReady) {
 987:main.c        ****             
 988:main.c        ****             /* Enable the drive outputs for the home and index once configured, otherwise they
 989:main.c        ****                can screw up the boot pins on the BeagleBoneBlack */
 990:main.c        ****             HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 991:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 992:main.c        ****         
 993:main.c        ****             /* If the server is asking us to jog, do that instead of PID */
 994:main.c        ****             if (!PID_Enabled) {                   
 995:main.c        ****                 
 996:main.c        ****                 /* When we start homing, it looks like a big negative jog.  Setup to watch the inde
 997:main.c        ****                    so we can assert faults if they aren't changing. */                
 998:main.c        ****                 if ((Jog != LastJog) && (Jog != 0)) {
 999:main.c        ****                     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 19


1000:main.c        ****                     /* Update the 'last' jog value, so we don't fall into this reset code over and 
1001:main.c        ****                     LastJog = Jog;
1002:main.c        ****                     
1003:main.c        ****                     /* Remember where we started */
1004:main.c        ****                     LastPosition = GetPosition();
1005:main.c        ****                     
1006:main.c        ****                     /* Reset counting of index marks */
1007:main.c        ****                     Index_Counter_1_WriteCounter(0);
1008:main.c        ****                 }                
1009:main.c        ****                 
1010:main.c        ****                 /* Drive in the direction and speed the server told us */
1011:main.c        ****                 PWM_Set(PWM_JOG_NEUTRAL + Jog);
1012:main.c        **** 
1013:main.c        ****                 /* Watch for stuck signals while we are moving */
1014:main.c        ****                 if ( Jog != 0 ) {
1015:main.c        ****                 
1016:main.c        ****                     /* If we have moved a good distance away from the origin point, compare index c
1017:main.c        ****                        looking for discrepancy. */
1018:main.c        ****                     CurrentPosition = GetPosition();
1019:main.c        ****                     DeltaPosition = labs( CurrentPosition - LastPosition );
1020:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
1021:main.c        ****                     
1022:main.c        ****                     /* Look for index failure: the index counter should have incremented by at leas
1023:main.c        ****                     if (CurrentIndexCount == 0)
1024:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
1025:main.c        ****                             AssertFault(fsIndex);        
1026:main.c        ****                     
1027:main.c        ****                     /* Look for encoder failure: the encoders should register some amount of moveme
1028:main.c        ****                     if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
1029:main.c        ****                         AssertFault(fsEncoder);
1030:main.c        ****                 }
1031:main.c        ****                 
1032:main.c        ****             }
1033:main.c        ****             
1034:main.c        ****             /* Handle mode switching */
1035:main.c        ****             if (!PID_Was_Enabled && PID_Enabled) {
1036:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
1037:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
1038:main.c        ****                 PID_SetMode(PID_MANUAL);                
1039:main.c        ****             } else {
1040:main.c        ****                 // No mode change happened   
1041:main.c        ****             }
1042:main.c        ****             
1043:main.c        ****             /* Save value for next cycle */
1044:main.c        ****             PID_Was_Enabled = PID_Enabled;
1045:main.c        ****             
1046:main.c        ****             /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer
1047:main.c        ****             actual setpoint, incremented once per cycle of this algorithm.  
1048:main.c        ****         
1049:main.c        ****             Consider a move of +2000 counts from position 0 to 2000: 
1050:main.c        ****             
1051:main.c        ****             1) The setpoint will change to 2000.
1052:main.c        ****             2) The effective setpoint is initialized to the current position, plus 25 counts = 2025
1053:main.c        ****             3) Calculate the PID and return.
1054:main.c        ****             4) The next time PID_Compute is called, increment the effective setpoint by 25 counts =
1055:main.c        ****             5) Calculate the PID and return.
1056:main.c        ****             6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.       
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 20


1057:main.c        ****             */
1058:main.c        **** 
1059:main.c        ****             if (PID_Enabled) {
1060:main.c        ****                 
1061:main.c        ****                 if (PID_EffSetDelta == 0) {
1062:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;
1063:main.c        ****                 } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
1064:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;                                          
1065:main.c        ****                 } else if (PID_Setpoint > PID_EffectiveSetpoint) {
1066:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
1067:main.c        ****                 } else {
1068:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
1069:main.c        ****                 }
1070:main.c        ****                 
1071:main.c        ****                 /* Run the PID algorithm against the effective setpoint */
1072:main.c        ****                 percent = PID_Compute(now, PID_EffectiveSetpoint);
1073:main.c        ****             
1074:main.c        ****                 /* Use the global PWM value to communicate back the percentage of drive to the serv
1075:main.c        ****                 PWM = percent;
1076:main.c        ****                 
1077:main.c        ****                 /* Put the PID drive percentage out on the wire */
1078:main.c        ****                 PID_SetDrive(percent);
1079:main.c        ****                 
1080:main.c        ****             } else {
1081:main.c        ****                 /* If disabled, just return 0 */
1082:main.c        ****                 PWM = 0;
1083:main.c        ****             }
1084:main.c        ****             
1085:main.c        ****         }
1086:main.c        ****         
1087:main.c        ****         PROBE_Write(0);
1088:main.c        ****         
1089:main.c        ****         /* Run the loop every 5ms, which is 200Hz update rate */
1090:main.c        ****         Sleep(sleeptime);
1091:main.c        **** 
1092:main.c        ****         /* Get our task stack usage high water mark */    
1093:main.c        ****         uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );        
1094:main.c        ****     }
1095:main.c        ****    
1096:main.c        **** }
1097:main.c        **** 
1098:main.c        **** 
1099:main.c        **** 
1100:main.c        **** /*******************************************************************************
1101:main.c        **** * Function Name: main
1102:main.c        **** ********************************************************************************
1103:main.c        **** * Summary:
1104:main.c        **** *  Setup tasks, interrupts, and get the RTOS running.
1105:main.c        **** *
1106:main.c        **** * Parameters: None
1107:main.c        **** * Return: NEVER!
1108:main.c        **** *******************************************************************************/
1109:main.c        **** int main(void) {
1110:main.c        ****     
1111:main.c        ****     uint8 s;
1112:main.c        ****     setupFreeRTOS();
1113:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 21


1114:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
1115:main.c        ****        microprocessor   There is a race condition here: unless the actuator is on a home
1116:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
1117:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
1118:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
1119:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
1120:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
1121:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
1122:main.c        **** 
1123:main.c        ****     /* Create tasks.  Priority value is set such that higher numbers have higher priority.
1124:main.c        ****     https://www.freertos.org/RTOS-task-priority.html
1125:main.c        ****     */
1126:main.c        ****     
1127:main.c        ****     xTaskCreate(
1128:main.c        ****         PID_Task,       /* Task function */
1129:main.c        ****         "PID",          /* Task name (string) */
1130:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 24 bytes) */
1131:main.c        ****         0,              /* No param passed to task function */
1132:main.c        ****         3,              /* High priority */
1133:main.c        ****         0 );            /* Not using the task handle */    
1134:main.c        ****     
1135:main.c        ****     xTaskCreate(
1136:main.c        ****         Comm_Task,       /* Task function */
1137:main.c        ****         "Communications", /* Task name (string) */
1138:main.c        ****         100,            /* Task stack, allocated from heap (measured 12/27 to be 78 bytes)  */
1139:main.c        ****         0,              /* No param passed to task function */
1140:main.c        ****         2,              /* Medium priority */
1141:main.c        ****         0 );            /* Not using the task handle */    
1142:main.c        **** 
1143:main.c        ****     xTaskCreate(
1144:main.c        ****         Current_Read_Task, /* Task function */
1145:main.c        ****         "Read Current", /* Task name (string) */
1146:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 40 bytes) */
1147:main.c        ****         0,              /* No param passed to task function */
1148:main.c        ****         1,              /* Low priority */
1149:main.c        ****         0 );            /* Not using the task handle */    
1150:main.c        ****     
1151:main.c        ****     /********************************************************************** 
1152:main.c        ****     * Message buffer mutex
1153:main.c        ****     **********************************************************************/
1154:main.c        ****     Lock = xSemaphoreCreateMutex();
1155:main.c        **** 
1156:main.c        ****     /* If we can't create the lock, flash the light and hold here */
1157:main.c        ****     if( Lock == NULL ) {
1158:main.c        ****         s = 1;
1159:main.c        ****         
1160:main.c        ****         while(1) {
1161:main.c        ****             s = !s;
1162:main.c        ****             LED_Write(s); 
1163:main.c        ****             CyDelay(1000u);                    
1164:main.c        ****         }
1165:main.c        ****     }
1166:main.c        ****     
1167:main.c        ****     
1168:main.c        ****     /********************************************************************** 
1169:main.c        ****     * Interrupts
1170:main.c        ****     **********************************************************************/
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 22


1171:main.c        ****     
1172:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
1173:main.c        ****     isr_home_StartEx(HomeIsrHandler);
1174:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
1175:main.c        ****     
1176:main.c        ****     /* Setup the SPI slave select interrupt ISR */
1177:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
1178:main.c        ****     
1179:main.c        ****     /* Changes initial priority for the interrupts */
1180:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
1181:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
1182:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
1183:main.c        **** 
1184:main.c        ****     /* Enable the global interrupt */
1185:main.c        ****     CyGlobalIntEnable;
1186:main.c        ****     
1187:main.c        ****     
1188:main.c        ****     
1189:main.c        ****     /********************************************************************** 
1190:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
1191:main.c        ****     **********************************************************************/
1192:main.c        **** 
1193:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
1194:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
1195:main.c        ****        when you hit a breakpoint. */
1196:main.c        **** 
1197:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
1198:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
1199:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
1200:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
1201:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
1202:main.c        **** 	
1203:main.c        **** 	/* Enable WDT counter 1 */
1204:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
1205:main.c        **** 	
1206:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
1207:main.c        **** 	CySysWdtLock();
1208:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
1209:main.c        **** 	CySysWdtUnlock();        
1210:main.c        **** #endif    
1211:main.c        **** 
1212:main.c        ****     
1213:main.c        ****     /*********************************************************************** 
1214:main.c        ****     * Start the various subsystems.
1215:main.c        ****     ***********************************************************************/
1216:main.c        ****     I2C_Start();
1217:main.c        ****     CyDelay(100u);
1218:main.c        ****     SPI_1_Start();
1219:main.c        ****     
1220:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
1221:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
1222:main.c        ****     PWM_1_Start();
1223:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
1224:main.c        ****     PWM_Set(PWM_IDLE);   
1225:main.c        ****     
1226:main.c        ****     /* Default the jog value to neutral (no movement) */
1227:main.c        ****     Jog = 0;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 23


1228:main.c        ****    
1229:main.c        ****     /* Start counting the quadrature encoding */
1230:main.c        ****     Counter_1_Start();    
1231:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
1232:main.c        ****     LastPosition = ENCODER_MAX;
1233:main.c        ****     
1234:main.c        ****     /* Clear and start the index mark counter */
1235:main.c        ****     Index_Counter_1_Start();
1236:main.c        ****     Index_Counter_1_WriteCounter(0);
1237:main.c        ****      
1238:main.c        ****     /* Set some initial values */
1239:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
1240:main.c        ****     
1241:main.c        ****     /* Start off unconfigured */
1242:main.c        ****     ConfigState = csUnconfig;  
1243:main.c        ****     ConfigSequence = 0;
1244:main.c        ****     ChecksumErrors = 0;
1245:main.c        ****    
1246:main.c        ****     /***********************************************************************
1247:main.c        ****     * Start the RTOS task scheduler
1248:main.c        ****     ***********************************************************************/
1249:main.c        ****     vTaskStartScheduler();
1250:main.c        ****    
1251:main.c        ****     /***********************************************************************
1252:main.c        ****     *  We should never reach this
1253:main.c        ****     ***********************************************************************/
1254:main.c        ****     return 1;       
1255:main.c        **** }
1256:main.c        **** 
1257:main.c        **** /*******************************************************************************
1258:main.c        **** * Function Name: RSTIsrHandler
1259:main.c        **** ********************************************************************************
1260:main.c        **** * Summary:
1261:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1262:main.c        **** *  Clears a pending Interrupt.
1263:main.c        **** *  Clears a pin Interrupt.
1264:main.c        **** *
1265:main.c        **** * Parameters: None
1266:main.c        **** * Return: None
1267:main.c        **** *******************************************************************************/
1268:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1268 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1269:main.c        ****     
1270:main.c        ****     /* Clear pending Interrupt */
1271:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1271 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1272:main.c        ****     
1273:main.c        ****     /* Clear pin Interrupt */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 24


1274:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1274 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1275:main.c        ****     
1276:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1277:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1277 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1278:main.c        ****     
1279:main.c        ****     /* Clear the index counter */
1280:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1280 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1281:main.c        **** }
  50              		.loc 1 1281 0
  51              		@ sp needed
  52 0016 10BD     		pop	{r4, pc}
  53              		.cfi_endproc
  54              	.LFE46:
  55              		.size	RSTIsrHandler, .-RSTIsrHandler
  56              		.section	.text.HomeIsrHandler,"ax",%progbits
  57              		.align	2
  58              		.global	HomeIsrHandler
  59              		.code	16
  60              		.thumb_func
  61              		.type	HomeIsrHandler, %function
  62              	HomeIsrHandler:
  63              	.LFB47:
1282:main.c        **** 
1283:main.c        **** /*******************************************************************************
1284:main.c        **** * Function Name: HomeIsrHandler
1285:main.c        **** ********************************************************************************
1286:main.c        **** * Summary:
1287:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1288:main.c        **** *  Clears a pending Interrupt.
1289:main.c        **** *  Clears a pin Interrupt.
1290:main.c        **** *
1291:main.c        **** * Parameters: None
1292:main.c        **** * Return: None
1293:main.c        **** *******************************************************************************/
1294:main.c        **** CY_ISR(HomeIsrHandler) {
  64              		.loc 1 1294 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
1295:main.c        ****     
1296:main.c        ****     /* Clear pending Interrupt */
1297:main.c        ****     isr_home_ClearPending(); 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 25


  72              		.loc 1 1297 0
  73 0002 FFF7FEFF 		bl	isr_home_ClearPending
  74              	.LVL4:
1298:main.c        ****     
1299:main.c        ****     /* Clear pin Interrupt */
1300:main.c        ****     HOME_IN_ClearInterrupt();
  75              		.loc 1 1300 0
  76 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  77              	.LVL5:
1301:main.c        **** 
1302:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1303:main.c        ****     Counter_1_WriteCounter(0);
  78              		.loc 1 1303 0
  79 000a 0020     		movs	r0, #0
  80 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  81              	.LVL6:
1304:main.c        **** }
  82              		.loc 1 1304 0
  83              		@ sp needed
  84 0010 10BD     		pop	{r4, pc}
  85              		.cfi_endproc
  86              	.LFE47:
  87              		.size	HomeIsrHandler, .-HomeIsrHandler
  88 0012 C046     		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
  89              		.align	2
  90              		.global	SPI_SS_IsrHandler
  91              		.code	16
  92              		.thumb_func
  93              		.type	SPI_SS_IsrHandler, %function
  94              	SPI_SS_IsrHandler:
  95              	.LFB48:
1305:main.c        **** 
1306:main.c        **** 
1307:main.c        **** /*******************************************************************************
1308:main.c        **** * Function Name: SPI_SS_IsrHandler
1309:main.c        **** ********************************************************************************
1310:main.c        **** * Summary:
1311:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1312:main.c        **** *  Clears a pin Interrupt.
1313:main.c        **** *
1314:main.c        **** * Parameters: None
1315:main.c        **** * Return: None
1316:main.c        **** *******************************************************************************/
1317:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
  96              		.loc 1 1317 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 10B5     		push	{r4, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
1318:main.c        ****     
1319:main.c        ****     uint32 i;
1320:main.c        ****     
1321:main.c        ****     /* Clear SPI slave select pin Interrupt */
1322:main.c        ****     spi_ss_ClearInterrupt();
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 26


 104              		.loc 1 1322 0
 105 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 106              	.LVL7:
1323:main.c        ****     
1324:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1325:main.c        ****     if (!spi_ss_Read()) 
 107              		.loc 1 1325 0
 108 0006 FFF7FEFF 		bl	spi_ss_Read
 109              	.LVL8:
 110 000a 0028     		cmp	r0, #0
 111 000c 1CD0     		beq	.L3
1326:main.c        ****         return;
1327:main.c        ****    
1328:main.c        ****     /* Update the last message tick timer */
1329:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
 112              		.loc 1 1329 0
 113 000e FFF7FEFF 		bl	xTaskGetTickCount
 114              	.LVL9:
 115 0012 0E4B     		ldr	r3, .L8
 116 0014 1860     		str	r0, [r3]
1330:main.c        **** 
1331:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1332:main.c        ****        check the messaging state before resetting the buffers */
1333:main.c        ****     switch (txMessageState) {
 117              		.loc 1 1333 0
 118 0016 0E4B     		ldr	r3, .L8+4
 119 0018 1B78     		ldrb	r3, [r3]
 120 001a 012B     		cmp	r3, #1
 121 001c 14D1     		bne	.L3
1334:main.c        ****      
1335:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1336:main.c        ****         case txmsClear:
1337:main.c        ****             break;
1338:main.c        ****      
1339:main.c        ****         /* A message was readied for transmission */
1340:main.c        ****         case txmsLoaded:
1341:main.c        ****          
1342:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1343:main.c        ****             
1344:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1345:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 122              		.loc 1 1345 0
 123 001e 1E22     		movs	r2, #30
 124 0020 0021     		movs	r1, #0
 125 0022 0C48     		ldr	r0, .L8+8
 126 0024 FFF7FEFF 		bl	memset
 127              	.LVL10:
1346:main.c        **** 
1347:main.c        ****             /* Message from the master is completely clocked in by now */     
1348:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 128              		.loc 1 1348 0
 129 0028 0024     		movs	r4, #0
 130 002a 04E0     		b	.L6
 131              	.LVL11:
 132              	.L7:
1349:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 133              		.loc 1 1349 0 discriminator 3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 27


 134 002c FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 135              	.LVL12:
 136 0030 094B     		ldr	r3, .L8+12
 137 0032 1855     		strb	r0, [r3, r4]
1348:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 138              		.loc 1 1348 0 discriminator 3
 139 0034 0134     		adds	r4, r4, #1
 140              	.LVL13:
 141              	.L6:
1348:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 142              		.loc 1 1348 0 is_stmt 0 discriminator 1
 143 0036 1D2C     		cmp	r4, #29
 144 0038 F8D9     		bls	.L7
1350:main.c        ****             }
1351:main.c        ****             
1352:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1353:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 145              		.loc 1 1353 0 is_stmt 1
 146 003a FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 147              	.LVL14:
1354:main.c        ****             
1355:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1356:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 148              		.loc 1 1356 0
 149 003e FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 150              	.LVL15:
1357:main.c        ****             
1358:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1359:main.c        ****             txMessageState = txmsClear;        
 151              		.loc 1 1359 0
 152 0042 0022     		movs	r2, #0
 153 0044 024B     		ldr	r3, .L8+4
 154 0046 1A70     		strb	r2, [r3]
 155              	.LVL16:
 156              	.L3:
1360:main.c        ****             break;
1361:main.c        ****             
1362:main.c        ****     } 
1363:main.c        **** }
 157              		.loc 1 1363 0
 158              		@ sp needed
 159 0048 10BD     		pop	{r4, pc}
 160              	.L9:
 161 004a C046     		.align	2
 162              	.L8:
 163 004c 00000000 		.word	LastMessageTimeTick
 164 0050 00000000 		.word	txMessageState
 165 0054 00000000 		.word	txMessage
 166 0058 00000000 		.word	rxMessage
 167              		.cfi_endproc
 168              	.LFE48:
 169              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 170              		.section	.text.setupFreeRTOS,"ax",%progbits
 171              		.align	2
 172              		.global	setupFreeRTOS
 173              		.code	16
 174              		.thumb_func
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 28


 175              		.type	setupFreeRTOS, %function
 176              	setupFreeRTOS:
 177              	.LFB32:
 345:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 178              		.loc 1 345 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 349:main.c        ****     
 186              		.loc 1 349 0
 187 0002 0649     		ldr	r1, .L11
 188 0004 0B20     		movs	r0, #11
 189 0006 FFF7FEFF 		bl	CyIntSetSysVector
 190              	.LVL17:
 352:main.c        ****     
 191              		.loc 1 352 0
 192 000a 0549     		ldr	r1, .L11+4
 193 000c 0E20     		movs	r0, #14
 194 000e FFF7FEFF 		bl	CyIntSetSysVector
 195              	.LVL18:
 355:main.c        **** }
 196              		.loc 1 355 0
 197 0012 0449     		ldr	r1, .L11+8
 198 0014 0F20     		movs	r0, #15
 199 0016 FFF7FEFF 		bl	CyIntSetSysVector
 200              	.LVL19:
 356:main.c        **** 
 201              		.loc 1 356 0
 202              		@ sp needed
 203 001a 10BD     		pop	{r4, pc}
 204              	.L12:
 205              		.align	2
 206              	.L11:
 207 001c 00000000 		.word	vPortSVCHandler
 208 0020 00000000 		.word	xPortPendSVHandler
 209 0024 00000000 		.word	xPortSysTickHandler
 210              		.cfi_endproc
 211              	.LFE32:
 212              		.size	setupFreeRTOS, .-setupFreeRTOS
 213              		.section	.text.AssertFault,"ax",%progbits
 214              		.align	2
 215              		.global	AssertFault
 216              		.code	16
 217              		.thumb_func
 218              		.type	AssertFault, %function
 219              	AssertFault:
 220              	.LFB33:
 369:main.c        ****  
 221              		.loc 1 369 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 29


 226              	.LVL20:
 371:main.c        ****      
 227              		.loc 1 371 0
 228 0000 0028     		cmp	r0, #0
 229 0002 03D1     		bne	.L17
 375:main.c        ****             break;        
 230              		.loc 1 375 0
 231 0004 0022     		movs	r2, #0
 232 0006 044B     		ldr	r3, .L18
 233 0008 1A70     		strb	r2, [r3]
 376:main.c        ****         
 234              		.loc 1 376 0
 235 000a 03E0     		b	.L13
 236              	.L17:
 380:main.c        ****             break;        
 237              		.loc 1 380 0
 238 000c 024B     		ldr	r3, .L18
 239 000e 1A78     		ldrb	r2, [r3]
 240 0010 1043     		orrs	r0, r2
 241              	.LVL21:
 242 0012 1870     		strb	r0, [r3]
 243              	.L13:
 383:main.c        **** 
 244              		.loc 1 383 0
 245              		@ sp needed
 246 0014 7047     		bx	lr
 247              	.L19:
 248 0016 C046     		.align	2
 249              	.L18:
 250 0018 00000000 		.word	FaultState
 251              		.cfi_endproc
 252              	.LFE33:
 253              		.size	AssertFault, .-AssertFault
 254              		.section	.text.Current_Read_Task,"ax",%progbits
 255              		.align	2
 256              		.global	Current_Read_Task
 257              		.code	16
 258              		.thumb_func
 259              		.type	Current_Read_Task, %function
 260              	Current_Read_Task:
 261              	.LFB35:
 422:main.c        ****     
 262              		.loc 1 422 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL22:
 267 0000 00B5     		push	{lr}
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 14, -4
 270 0002 83B0     		sub	sp, sp, #12
 271              		.cfi_def_cfa_offset 16
 431:main.c        ****     
 272              		.loc 1 431 0
 273 0004 0020     		movs	r0, #0
 274              	.LVL23:
 275 0006 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 30


 276              	.LVL24:
 277 000a 304B     		ldr	r3, .L27
 278 000c 1860     		str	r0, [r3]
 279              	.L26:
 439:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 280              		.loc 1 439 0
 281 000e 0A22     		movs	r2, #10
 282 0010 0021     		movs	r1, #0
 283 0012 4020     		movs	r0, #64
 284 0014 FFF7FEFF 		bl	I2C_I2CMasterSendStart
 285              	.LVL25:
 286 0018 0190     		str	r0, [sp, #4]
 440:main.c        ****             
 287              		.loc 1 440 0
 288 001a 019B     		ldr	r3, [sp, #4]
 289 001c 002B     		cmp	r3, #0
 290 001e 0FD1     		bne	.L21
 442:main.c        ****             
 291              		.loc 1 442 0
 292 0020 0A21     		movs	r1, #10
 293 0022 0520     		movs	r0, #5
 294 0024 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 295              	.LVL26:
 445:main.c        ****             
 296              		.loc 1 445 0
 297 0028 0A21     		movs	r1, #10
 298 002a 2020     		movs	r0, #32
 299 002c FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 300              	.LVL27:
 448:main.c        ****             I2C_I2CMasterSendStop(10);
 301              		.loc 1 448 0
 302 0030 0A21     		movs	r1, #10
 303 0032 0020     		movs	r0, #0
 304 0034 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 305              	.LVL28:
 449:main.c        ****             
 306              		.loc 1 449 0
 307 0038 0A20     		movs	r0, #10
 308 003a FFF7FEFF 		bl	I2C_I2CMasterSendStop
 309              	.LVL29:
 310 003e 05E0     		b	.L22
 311              	.LVL30:
 312              	.L21:
 452:main.c        ****             AssertFault(fsCurrentRead);
 313              		.loc 1 452 0
 314 0040 0022     		movs	r2, #0
 315 0042 234B     		ldr	r3, .L27+4
 316 0044 1A80     		strh	r2, [r3]
 453:main.c        ****         }
 317              		.loc 1 453 0
 318 0046 0820     		movs	r0, #8
 319 0048 FFF7FEFF 		bl	AssertFault
 320              	.LVL31:
 321              	.L22:
 456:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 322              		.loc 1 456 0
 323 004c 0A22     		movs	r2, #10
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 31


 324 004e 0021     		movs	r1, #0
 325 0050 4020     		movs	r0, #64
 326 0052 FFF7FEFF 		bl	I2C_I2CMasterSendStart
 327              	.LVL32:
 328 0056 0190     		str	r0, [sp, #4]
 457:main.c        ****             
 329              		.loc 1 457 0
 330 0058 019B     		ldr	r3, [sp, #4]
 331 005a 002B     		cmp	r3, #0
 332 005c 20D1     		bne	.L23
 459:main.c        ****             I2C_I2CMasterSendStop(10);
 333              		.loc 1 459 0
 334 005e 0A21     		movs	r1, #10
 335 0060 0420     		movs	r0, #4
 336 0062 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 337              	.LVL33:
 460:main.c        ****             
 338              		.loc 1 460 0
 339 0066 0A20     		movs	r0, #10
 340 0068 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 341              	.LVL34:
 463:main.c        ****             
 342              		.loc 1 463 0
 343 006c 0123     		movs	r3, #1
 344 006e 0522     		movs	r2, #5
 345 0070 1849     		ldr	r1, .L27+8
 346 0072 4020     		movs	r0, #64
 347 0074 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 348              	.LVL35:
 349 0078 0190     		str	r0, [sp, #4]
 466:main.c        ****                 CurrentTemp = (int16)(CurrentI2Cinbuf[0] << 8) + CurrentI2Cinbuf[1];
 350              		.loc 1 466 0
 351 007a 019B     		ldr	r3, [sp, #4]
 352 007c 002B     		cmp	r3, #0
 353 007e 08D1     		bne	.L24
 467:main.c        ****             } else {
 354              		.loc 1 467 0
 355 0080 144A     		ldr	r2, .L27+8
 356 0082 1378     		ldrb	r3, [r2]
 357 0084 1B02     		lsls	r3, r3, #8
 358 0086 5278     		ldrb	r2, [r2, #1]
 359 0088 9B18     		adds	r3, r3, r2
 360 008a 1BB2     		sxth	r3, r3
 361 008c 6A46     		mov	r2, sp
 362 008e 5380     		strh	r3, [r2, #2]
 363 0090 0CE0     		b	.L25
 364              	.L24:
 469:main.c        ****                 AssertFault(fsCurrentRead);
 365              		.loc 1 469 0
 366 0092 0022     		movs	r2, #0
 367 0094 6B46     		mov	r3, sp
 368 0096 5A80     		strh	r2, [r3, #2]
 470:main.c        ****             }
 369              		.loc 1 470 0
 370 0098 0820     		movs	r0, #8
 371 009a FFF7FEFF 		bl	AssertFault
 372              	.LVL36:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 32


 373 009e 05E0     		b	.L25
 374              	.L23:
 473:main.c        ****             AssertFault(fsCurrentRead);
 375              		.loc 1 473 0
 376 00a0 0022     		movs	r2, #0
 377 00a2 6B46     		mov	r3, sp
 378 00a4 5A80     		strh	r2, [r3, #2]
 474:main.c        ****         }
 379              		.loc 1 474 0
 380 00a6 0820     		movs	r0, #8
 381 00a8 FFF7FEFF 		bl	AssertFault
 382              	.LVL37:
 383              	.L25:
 478:main.c        **** 
 384              		.loc 1 478 0
 385 00ac 6B46     		mov	r3, sp
 386 00ae 0233     		adds	r3, r3, #2
 387 00b0 1B88     		ldrh	r3, [r3]
 388 00b2 1BB2     		sxth	r3, r3
 389 00b4 064A     		ldr	r2, .L27+4
 390 00b6 1380     		strh	r3, [r2]
 481:main.c        ****         
 391              		.loc 1 481 0
 392 00b8 FA20     		movs	r0, #250
 393 00ba 4000     		lsls	r0, r0, #1
 394 00bc FFF7FEFF 		bl	vTaskDelay
 395              	.LVL38:
 484:main.c        ****     }
 396              		.loc 1 484 0
 397 00c0 0020     		movs	r0, #0
 398 00c2 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 399              	.LVL39:
 400 00c6 014B     		ldr	r3, .L27
 401 00c8 1860     		str	r0, [r3]
 485:main.c        ****    
 402              		.loc 1 485 0
 403 00ca A0E7     		b	.L26
 404              	.L28:
 405              		.align	2
 406              	.L27:
 407 00cc 00000000 		.word	uxHighWaterMark_Current
 408 00d0 00000000 		.word	Current
 409 00d4 00000000 		.word	CurrentI2Cinbuf
 410              		.cfi_endproc
 411              	.LFE35:
 412              		.size	Current_Read_Task, .-Current_Read_Task
 413              		.section	.text.ClearFault,"ax",%progbits
 414              		.align	2
 415              		.global	ClearFault
 416              		.code	16
 417              		.thumb_func
 418              		.type	ClearFault, %function
 419              	ClearFault:
 420              	.LFB34:
 396:main.c        ****  
 421              		.loc 1 396 0
 422              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 33


 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LVL40:
 398:main.c        ****      
 427              		.loc 1 398 0
 428 0000 0028     		cmp	r0, #0
 429 0002 03D1     		bne	.L33
 402:main.c        ****             break;        
 430              		.loc 1 402 0
 431 0004 0022     		movs	r2, #0
 432 0006 044B     		ldr	r3, .L34
 433 0008 1A70     		strb	r2, [r3]
 403:main.c        ****         
 434              		.loc 1 403 0
 435 000a 03E0     		b	.L29
 436              	.L33:
 407:main.c        ****             break;        
 437              		.loc 1 407 0
 438 000c 024A     		ldr	r2, .L34
 439 000e 1378     		ldrb	r3, [r2]
 440 0010 8343     		bics	r3, r0
 441 0012 1370     		strb	r3, [r2]
 442              	.L29:
 410:main.c        **** 
 443              		.loc 1 410 0
 444              		@ sp needed
 445 0014 7047     		bx	lr
 446              	.L35:
 447 0016 C046     		.align	2
 448              	.L34:
 449 0018 00000000 		.word	FaultState
 450              		.cfi_endproc
 451              	.LFE34:
 452              		.size	ClearFault, .-ClearFault
 453              		.global	__aeabi_fcmpgt
 454              		.global	__aeabi_fcmplt
 455              		.global	__aeabi_fmul
 456              		.global	__aeabi_f2uiz
 457              		.section	.text.PWM_Set,"ax",%progbits
 458              		.align	2
 459              		.global	PWM_Set
 460              		.code	16
 461              		.thumb_func
 462              		.type	PWM_Set, %function
 463              	PWM_Set:
 464              	.LFB37:
 706:main.c        ****     
 465              		.loc 1 706 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL41:
 470 0000 70B5     		push	{r4, r5, r6, lr}
 471              		.cfi_def_cfa_offset 16
 472              		.cfi_offset 4, -16
 473              		.cfi_offset 5, -12
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 34


 474              		.cfi_offset 6, -8
 475              		.cfi_offset 14, -4
 476 0002 051C     		adds	r5, r0, #0
 477              	.LVL42:
 711:main.c        ****         drive = pwmMax;
 478              		.loc 1 711 0
 479 0004 0C4B     		ldr	r3, .L38
 480 0006 1C68     		ldr	r4, [r3]
 481 0008 211C     		adds	r1, r4, #0
 482 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 483              	.LVL43:
 484 000e 0028     		cmp	r0, #0
 485 0010 08D1     		bne	.L37
 713:main.c        ****         drive = pwmMin;
 486              		.loc 1 713 0
 487 0012 0A4B     		ldr	r3, .L38+4
 488 0014 1C68     		ldr	r4, [r3]
 489 0016 211C     		adds	r1, r4, #0
 490 0018 281C     		adds	r0, r5, #0
 491 001a FFF7FEFF 		bl	__aeabi_fcmplt
 492              	.LVL44:
 493 001e 0028     		cmp	r0, #0
 494 0020 00D1     		bne	.L37
 708:main.c        ****     
 495              		.loc 1 708 0
 496 0022 2C1C     		adds	r4, r5, #0
 497              	.L37:
 498              	.LVL45:
 717:main.c        **** }
 499              		.loc 1 717 0
 500 0024 8321     		movs	r1, #131
 501 0026 C905     		lsls	r1, r1, #23
 502 0028 201C     		adds	r0, r4, #0
 503 002a FFF7FEFF 		bl	__aeabi_fmul
 504              	.LVL46:
 505 002e FFF7FEFF 		bl	__aeabi_f2uiz
 506              	.LVL47:
 507 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 508              	.LVL48:
 718:main.c        **** 
 509              		.loc 1 718 0
 510              		@ sp needed
 511              	.LVL49:
 512              	.LVL50:
 513 0036 70BD     		pop	{r4, r5, r6, pc}
 514              	.L39:
 515              		.align	2
 516              	.L38:
 517 0038 00000000 		.word	pwmMax
 518 003c 00000000 		.word	pwmMin
 519              		.cfi_endproc
 520              	.LFE37:
 521              		.size	PWM_Set, .-PWM_Set
 522              		.section	.text.GetPosition,"ax",%progbits
 523              		.align	2
 524              		.global	GetPosition
 525              		.code	16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 35


 526              		.thumb_func
 527              		.type	GetPosition, %function
 528              	GetPosition:
 529              	.LFB38:
 729:main.c        ****     
 530              		.loc 1 729 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 10B5     		push	{r4, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 4, -8
 537              		.cfi_offset 14, -4
 735:main.c        ****     
 538              		.loc 1 735 0
 539 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 540              	.LVL51:
 739:main.c        ****         
 541              		.loc 1 739 0
 542 0006 E023     		movs	r3, #224
 543 0008 DB03     		lsls	r3, r3, #15
 544 000a 9842     		cmp	r0, r3
 545 000c 02D9     		bls	.L42
 741:main.c        ****         
 546              		.loc 1 741 0
 547 000e 034B     		ldr	r3, .L43
 548 0010 9C46     		mov	ip, r3
 549 0012 6044     		add	r0, r0, ip
 550              	.LVL52:
 551              	.L42:
 750:main.c        ****     return result;
 552              		.loc 1 750 0
 553 0014 024B     		ldr	r3, .L43+4
 554 0016 1860     		str	r0, [r3]
 752:main.c        **** 
 555              		.loc 1 752 0
 556              		@ sp needed
 557 0018 10BD     		pop	{r4, pc}
 558              	.L44:
 559 001a C046     		.align	2
 560              	.L43:
 561 001c 000080FF 		.word	-8388608
 562 0020 00000000 		.word	Position
 563              		.cfi_endproc
 564              	.LFE38:
 565              		.size	GetPosition, .-GetPosition
 566              		.global	__aeabi_ui2f
 567              		.global	__aeabi_fdiv
 568              		.global	__aeabi_fadd
 569              		.global	__aeabi_fsub
 570              		.section	.text.Comm_Task,"ax",%progbits
 571              		.align	2
 572              		.global	Comm_Task
 573              		.code	16
 574              		.thumb_func
 575              		.type	Comm_Task, %function
 576              	Comm_Task:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 36


 577              	.LFB36:
 498:main.c        ****  
 578              		.loc 1 498 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL53:
 583 0000 10B5     		push	{r4, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 507:main.c        ****     
 587              		.loc 1 507 0
 588 0002 0020     		movs	r0, #0
 589              	.LVL54:
 590 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 591              	.LVL55:
 592 0008 954B     		ldr	r3, .L65
 593 000a 1860     		str	r0, [r3]
 594              	.L61:
 513:main.c        ****         
 595              		.loc 1 513 0
 596 000c 954B     		ldr	r3, .L65+4
 597 000e 1B68     		ldr	r3, [r3]
 598 0010 DB07     		lsls	r3, r3, #31
 599 0012 00D5     		bpl	.LCB483
 600 0014 1BE1     		b	.L46	@long jump
 601              	.LCB483:
 516:main.c        ****              
 602              		.loc 1 516 0
 603 0016 944B     		ldr	r3, .L65+8
 604 0018 1B78     		ldrb	r3, [r3]
 605 001a 002B     		cmp	r3, #0
 606 001c 00D0     		beq	.LCB488
 607 001e 16E1     		b	.L46	@long jump
 608              	.LCB488:
 526:main.c        ****                         
 609              		.loc 1 526 0
 610 0020 924B     		ldr	r3, .L65+12
 611 0022 1868     		ldr	r0, [r3]
 612 0024 0421     		movs	r1, #4
 613 0026 FFF7FEFF 		bl	xQueueSemaphoreTake
 614              	.LVL56:
 615 002a 0128     		cmp	r0, #1
 616 002c 00D0     		beq	.LCB495
 617 002e 0EE1     		b	.L46	@long jump
 618              	.LCB495:
 529:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 619              		.loc 1 529 0
 620 0030 8F4B     		ldr	r3, .L65+16
 621 0032 5878     		ldrb	r0, [r3, #1]
 622              	.LVL57:
 530:main.c        ****                         
 623              		.loc 1 530 0
 624 0034 9C78     		ldrb	r4, [r3, #2]
 625              	.LVL58:
 533:main.c        ****                             size = sizeof(txMessage.buf);                            
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 37


 626              		.loc 1 533 0
 627 0036 1E28     		cmp	r0, #30
 628 0038 00D9     		bls	.L48
 534:main.c        ****                     
 629              		.loc 1 534 0
 630 003a 1E20     		movs	r0, #30
 631              	.LVL59:
 632              	.L48:
 537:main.c        ****                             checksum += rxMessage.buf[i]; 
 633              		.loc 1 537 0
 634 003c 0022     		movs	r2, #0
 635 003e 0023     		movs	r3, #0
 636 0040 05E0     		b	.L49
 637              	.LVL60:
 638              	.L50:
 538:main.c        **** 
 639              		.loc 1 538 0 discriminator 3
 640 0042 8B49     		ldr	r1, .L65+16
 641 0044 C95C     		ldrb	r1, [r1, r3]
 642 0046 5218     		adds	r2, r2, r1
 643              	.LVL61:
 644 0048 D2B2     		uxtb	r2, r2
 645              	.LVL62:
 537:main.c        ****                             checksum += rxMessage.buf[i]; 
 646              		.loc 1 537 0 discriminator 3
 647 004a 0133     		adds	r3, r3, #1
 648              	.LVL63:
 649 004c DBB2     		uxtb	r3, r3
 650              	.LVL64:
 651              	.L49:
 537:main.c        ****                             checksum += rxMessage.buf[i]; 
 652              		.loc 1 537 0 is_stmt 0 discriminator 1
 653 004e 9842     		cmp	r0, r3
 654 0050 F7D8     		bhi	.L50
 541:main.c        ****                             
 655              		.loc 1 541 0 is_stmt 1
 656 0052 002A     		cmp	r2, #0
 657 0054 09D0     		beq	.L51
 543:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 658              		.loc 1 543 0
 659 0056 874B     		ldr	r3, .L65+20
 660              	.LVL65:
 661 0058 5C71     		strb	r4, [r3, #5]
 544:main.c        ****                             ChecksumErrors++;
 662              		.loc 1 544 0
 663 005a 1522     		movs	r2, #21
 664              	.LVL66:
 665 005c 1A71     		strb	r2, [r3, #4]
 545:main.c        ****                             
 666              		.loc 1 545 0
 667 005e 864A     		ldr	r2, .L65+24
 668 0060 1388     		ldrh	r3, [r2]
 669 0062 0133     		adds	r3, r3, #1
 670 0064 9BB2     		uxth	r3, r3
 671 0066 1380     		strh	r3, [r2]
 672 0068 9BE0     		b	.L52
 673              	.LVL67:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 38


 674              	.L51:
 551:main.c        ****                             
 675              		.loc 1 551 0
 676 006a 631E     		subs	r3, r4, #1
 677              	.LVL68:
 678 006c DBB2     		uxtb	r3, r3
 679 006e 022B     		cmp	r3, #2
 680 0070 00D9     		bls	.LCB561
 681 0072 96E0     		b	.L52	@long jump
 682              	.LCB561:
 553:main.c        ****                                 
 683              		.loc 1 553 0
 684 0074 012C     		cmp	r4, #1
 685 0076 02D0     		beq	.L53
 686 0078 022C     		cmp	r4, #2
 687 007a 60D0     		beq	.L54
 688 007c 91E0     		b	.L52
 689              	.L53:
 560:main.c        ****                                         refKi = rxMessage.config.Ki;
 690              		.loc 1 560 0
 691 007e 7C4B     		ldr	r3, .L65+16
 692 0080 1A79     		ldrb	r2, [r3, #4]
 693              	.LVL69:
 694 0082 5979     		ldrb	r1, [r3, #5]
 695 0084 0902     		lsls	r1, r1, #8
 696 0086 1143     		orrs	r1, r2
 697 0088 9A79     		ldrb	r2, [r3, #6]
 698 008a 1204     		lsls	r2, r2, #16
 699 008c 0A43     		orrs	r2, r1
 700 008e 1100     		movs	r1, r2
 701 0090 DA79     		ldrb	r2, [r3, #7]
 702 0092 1206     		lsls	r2, r2, #24
 703 0094 0A43     		orrs	r2, r1
 704 0096 7949     		ldr	r1, .L65+28
 705 0098 0A60     		str	r2, [r1]
 561:main.c        ****                                         refKd = rxMessage.config.Kd;      
 706              		.loc 1 561 0
 707 009a 1A7A     		ldrb	r2, [r3, #8]
 708 009c 597A     		ldrb	r1, [r3, #9]
 709 009e 0902     		lsls	r1, r1, #8
 710 00a0 1143     		orrs	r1, r2
 711 00a2 9A7A     		ldrb	r2, [r3, #10]
 712 00a4 1204     		lsls	r2, r2, #16
 713 00a6 0A43     		orrs	r2, r1
 714 00a8 1100     		movs	r1, r2
 715 00aa DA7A     		ldrb	r2, [r3, #11]
 716 00ac 1206     		lsls	r2, r2, #24
 717 00ae 0A43     		orrs	r2, r1
 718 00b0 7349     		ldr	r1, .L65+32
 719 00b2 0A60     		str	r2, [r1]
 562:main.c        ****                                     
 720              		.loc 1 562 0
 721 00b4 1A7B     		ldrb	r2, [r3, #12]
 722 00b6 597B     		ldrb	r1, [r3, #13]
 723 00b8 0902     		lsls	r1, r1, #8
 724 00ba 1143     		orrs	r1, r2
 725 00bc 9A7B     		ldrb	r2, [r3, #14]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 39


 726 00be 1204     		lsls	r2, r2, #16
 727 00c0 0A43     		orrs	r2, r1
 728 00c2 1100     		movs	r1, r2
 729 00c4 DA7B     		ldrb	r2, [r3, #15]
 730 00c6 1206     		lsls	r2, r2, #24
 731 00c8 0A43     		orrs	r2, r1
 732 00ca 6E49     		ldr	r1, .L65+36
 733 00cc 0A60     		str	r2, [r1]
 565:main.c        ****                                            
 734              		.loc 1 565 0
 735 00ce 997C     		ldrb	r1, [r3, #18]
 736 00d0 6D4A     		ldr	r2, .L65+40
 737 00d2 1170     		strb	r1, [r2]
 568:main.c        ****                                     
 738              		.loc 1 568 0
 739 00d4 0021     		movs	r1, #0
 740 00d6 6D4A     		ldr	r2, .L65+44
 741 00d8 1170     		strb	r1, [r2]
 571:main.c        ****                                         if (limit > 100)
 742              		.loc 1 571 0
 743 00da 187C     		ldrb	r0, [r3, #16]
 744              	.LVL70:
 572:main.c        ****                                             limit = 100;
 745              		.loc 1 572 0
 746 00dc 6428     		cmp	r0, #100
 747 00de 00D9     		bls	.L55
 573:main.c        ****                                     
 748              		.loc 1 573 0
 749 00e0 6420     		movs	r0, #100
 750              	.LVL71:
 751              	.L55:
 575:main.c        ****                                         
 752              		.loc 1 575 0
 753 00e2 FFF7FEFF 		bl	__aeabi_ui2f
 754              	.LVL72:
 755 00e6 041C     		adds	r4, r0, #0
 756              	.LVL73:
 757 00e8 694B     		ldr	r3, .L65+48
 758 00ea 1860     		str	r0, [r3]
 577:main.c        ****                                         if (limit > 100)
 759              		.loc 1 577 0
 760 00ec 604B     		ldr	r3, .L65+16
 761 00ee 587C     		ldrb	r0, [r3, #17]
 762              	.LVL74:
 578:main.c        ****                                             limit = 100;
 763              		.loc 1 578 0
 764 00f0 6428     		cmp	r0, #100
 765 00f2 00D9     		bls	.L56
 579:main.c        ****                                         
 766              		.loc 1 579 0
 767 00f4 6420     		movs	r0, #100
 768              	.LVL75:
 769              	.L56:
 581:main.c        ****                                         
 770              		.loc 1 581 0
 771 00f6 FFF7FEFF 		bl	__aeabi_ui2f
 772              	.LVL76:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 40


 773 00fa 664B     		ldr	r3, .L65+52
 774 00fc 1860     		str	r0, [r3]
 589:main.c        ****                                         pwmMax = 50 + pwmLimit;
 775              		.loc 1 589 0
 776 00fe 6649     		ldr	r1, .L65+56
 777 0100 201C     		adds	r0, r4, #0
 778 0102 FFF7FEFF 		bl	__aeabi_fdiv
 779              	.LVL77:
 780 0106 6549     		ldr	r1, .L65+60
 781 0108 FFF7FEFF 		bl	__aeabi_fmul
 782              	.LVL78:
 783 010c 041C     		adds	r4, r0, #0
 784 010e 644B     		ldr	r3, .L65+64
 785 0110 1860     		str	r0, [r3]
 590:main.c        ****                                         pwmMin = 50 - pwmLimit;
 786              		.loc 1 590 0
 787 0112 6249     		ldr	r1, .L65+60
 788 0114 FFF7FEFF 		bl	__aeabi_fadd
 789              	.LVL79:
 790 0118 624B     		ldr	r3, .L65+68
 791 011a 1860     		str	r0, [r3]
 591:main.c        ****                                     
 792              		.loc 1 591 0
 793 011c 211C     		adds	r1, r4, #0
 794 011e 5F48     		ldr	r0, .L65+60
 795 0120 FFF7FEFF 		bl	__aeabi_fsub
 796              	.LVL80:
 797 0124 604B     		ldr	r3, .L65+72
 798 0126 1860     		str	r0, [r3]
 594:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 799              		.loc 1 594 0
 800 0128 0222     		movs	r2, #2
 801 012a 604B     		ldr	r3, .L65+76
 802 012c 1A70     		strb	r2, [r3]
 595:main.c        ****                                     
 803              		.loc 1 595 0
 804 012e 504B     		ldr	r3, .L65+16
 805 0130 DA78     		ldrb	r2, [r3, #3]
 806 0132 5F4B     		ldr	r3, .L65+80
 807 0134 1A70     		strb	r2, [r3]
 598:main.c        ****                                         break;
 808              		.loc 1 598 0
 809 0136 0020     		movs	r0, #0
 810 0138 FFF7FEFF 		bl	ClearFault
 811              	.LVL81:
 599:main.c        **** 
 812              		.loc 1 599 0
 813 013c 31E0     		b	.L52
 814              	.LVL82:
 815              	.L54:
 603:main.c        ****                                         
 816              		.loc 1 603 0
 817 013e 4C48     		ldr	r0, .L65+16
 818              	.LVL83:
 819 0140 C378     		ldrb	r3, [r0, #3]
 820 0142 5A1E     		subs	r2, r3, #1
 821 0144 9341     		sbcs	r3, r3, r2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 41


 822              	.LVL84:
 823 0146 5B4A     		ldr	r2, .L65+84
 824 0148 1370     		strb	r3, [r2]
 606:main.c        ****                                             
 825              		.loc 1 606 0
 826 014a 0379     		ldrb	r3, [r0, #4]
 827 014c 4279     		ldrb	r2, [r0, #5]
 828 014e 1202     		lsls	r2, r2, #8
 829 0150 1A43     		orrs	r2, r3
 830 0152 8379     		ldrb	r3, [r0, #6]
 831 0154 1B04     		lsls	r3, r3, #16
 832 0156 1343     		orrs	r3, r2
 833 0158 1A00     		movs	r2, r3
 834 015a C379     		ldrb	r3, [r0, #7]
 835 015c 1B06     		lsls	r3, r3, #24
 836 015e 1343     		orrs	r3, r2
 837 0160 554A     		ldr	r2, .L65+88
 838 0162 1268     		ldr	r2, [r2]
 839 0164 9342     		cmp	r3, r2
 840 0166 17D0     		beq	.L57
 609:main.c        ****                                             
 841              		.loc 1 609 0
 842 0168 FFF7FEFF 		bl	GetPosition
 843              	.LVL85:
 844 016c 534C     		ldr	r4, .L65+92
 845              	.LVL86:
 846 016e 2060     		str	r0, [r4]
 612:main.c        ****                                             
 847              		.loc 1 612 0
 848 0170 3F48     		ldr	r0, .L65+16
 849 0172 0379     		ldrb	r3, [r0, #4]
 850 0174 4279     		ldrb	r2, [r0, #5]
 851 0176 1202     		lsls	r2, r2, #8
 852 0178 1A43     		orrs	r2, r3
 853 017a 8379     		ldrb	r3, [r0, #6]
 854 017c 1B04     		lsls	r3, r3, #16
 855 017e 1343     		orrs	r3, r2
 856 0180 1A00     		movs	r2, r3
 857 0182 C379     		ldrb	r3, [r0, #7]
 858 0184 1B06     		lsls	r3, r3, #24
 859 0186 1343     		orrs	r3, r2
 860 0188 4B4A     		ldr	r2, .L65+88
 861 018a 1360     		str	r3, [r2]
 616:main.c        ****                                             
 862              		.loc 1 616 0
 863 018c 2268     		ldr	r2, [r4]
 864 018e 4C4B     		ldr	r3, .L65+96
 865 0190 1A60     		str	r2, [r3]
 619:main.c        ****                                         }                                        
 866              		.loc 1 619 0
 867 0192 0020     		movs	r0, #0
 868 0194 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 869              	.LVL87:
 870              	.L57:
 623:main.c        ****                                         break;
 871              		.loc 1 623 0
 872 0198 354B     		ldr	r3, .L65+16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 42


 873 019a 0822     		movs	r2, #8
 874 019c 9A56     		ldrsb	r2, [r3, r2]
 875 019e 3B4B     		ldr	r3, .L65+44
 876 01a0 1A70     		strb	r2, [r3]
 877              	.L52:
 634:main.c        ****                         
 878              		.loc 1 634 0
 879 01a2 FFF7FEFF 		bl	GetPosition
 880              	.LVL88:
 881 01a6 4749     		ldr	r1, .L65+100
 882 01a8 0860     		str	r0, [r1]
 637:main.c        ****                         txMessage.msg.version0 = FIRMWARE_REV_0;
 883              		.loc 1 637 0
 884 01aa 324B     		ldr	r3, .L65+20
 885 01ac 0022     		movs	r2, #0
 886 01ae 1A70     		strb	r2, [r3]
 638:main.c        ****                         txMessage.msg.version1 = FIRMWARE_REV_1;
 887              		.loc 1 638 0
 888 01b0 5A70     		strb	r2, [r3, #1]
 639:main.c        ****                         txMessage.msg.version2 = FIRMWARE_REV_2;
 889              		.loc 1 639 0
 890 01b2 9A70     		strb	r2, [r3, #2]
 640:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 891              		.loc 1 640 0
 892 01b4 0432     		adds	r2, r2, #4
 893 01b6 DA70     		strb	r2, [r3, #3]
 641:main.c        ****                         txMessage.msg.opcode   = opStatus;
 894              		.loc 1 641 0
 895 01b8 1132     		adds	r2, r2, #17
 896 01ba 1A71     		strb	r2, [r3, #4]
 642:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 897              		.loc 1 642 0
 898 01bc 133A     		subs	r2, r2, #19
 899 01be 5A71     		strb	r2, [r3, #5]
 643:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 900              		.loc 1 643 0
 901 01c0 3A4A     		ldr	r2, .L65+76
 902 01c2 1278     		ldrb	r2, [r2]
 903 01c4 9A71     		strb	r2, [r3, #6]
 644:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 904              		.loc 1 644 0
 905 01c6 404A     		ldr	r2, .L65+104
 906 01c8 1278     		ldrb	r2, [r2]
 907 01ca DA71     		strb	r2, [r3, #7]
 645:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 908              		.loc 1 645 0
 909 01cc 2A4A     		ldr	r2, .L65+24
 910 01ce 1288     		ldrh	r2, [r2]
 911 01d0 92B2     		uxth	r2, r2
 912 01d2 5A72     		strb	r2, [r3, #9]
 913 01d4 120A     		lsrs	r2, r2, #8
 914 01d6 9A72     		strb	r2, [r3, #10]
 646:main.c        ****                         txMessage.msg.position = Position;
 915              		.loc 1 646 0
 916 01d8 354A     		ldr	r2, .L65+80
 917 01da 1278     		ldrb	r2, [r2]
 918 01dc 1A72     		strb	r2, [r3, #8]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 43


 647:main.c        ****                         txMessage.msg.pwm      = PWM;
 919              		.loc 1 647 0
 920 01de 0A68     		ldr	r2, [r1]
 921 01e0 5A73     		strb	r2, [r3, #13]
 922 01e2 100A     		lsrs	r0, r2, #8
 923 01e4 9873     		strb	r0, [r3, #14]
 924 01e6 100C     		lsrs	r0, r2, #16
 925 01e8 D873     		strb	r0, [r3, #15]
 926 01ea 120E     		lsrs	r2, r2, #24
 927 01ec 1A74     		strb	r2, [r3, #16]
 648:main.c        ****                         txMessage.msg.current  = Current;                            
 928              		.loc 1 648 0
 929 01ee 374A     		ldr	r2, .L65+108
 930 01f0 1268     		ldr	r2, [r2]
 931 01f2 5A74     		strb	r2, [r3, #17]
 932 01f4 100A     		lsrs	r0, r2, #8
 933 01f6 9874     		strb	r0, [r3, #18]
 934 01f8 100C     		lsrs	r0, r2, #16
 935 01fa D874     		strb	r0, [r3, #19]
 936 01fc 120E     		lsrs	r2, r2, #24
 937 01fe 1A75     		strb	r2, [r3, #20]
 649:main.c        ****                         
 938              		.loc 1 649 0
 939 0200 334A     		ldr	r2, .L65+112
 940 0202 1288     		ldrh	r2, [r2]
 941 0204 DA72     		strb	r2, [r3, #11]
 942 0206 120A     		lsrs	r2, r2, #8
 943 0208 1A73     		strb	r2, [r3, #12]
 944              	.LVL89:
 652:main.c        ****                             checksum += txMessage.buf[i]; 
 945              		.loc 1 652 0
 946 020a 0022     		movs	r2, #0
 947 020c 0023     		movs	r3, #0
 948 020e 05E0     		b	.L58
 949              	.LVL90:
 950              	.L59:
 653:main.c        ****                             
 951              		.loc 1 653 0 discriminator 3
 952 0210 1849     		ldr	r1, .L65+20
 953 0212 C95C     		ldrb	r1, [r1, r3]
 954 0214 5218     		adds	r2, r2, r1
 955              	.LVL91:
 956 0216 D2B2     		uxtb	r2, r2
 957              	.LVL92:
 652:main.c        ****                             checksum += txMessage.buf[i]; 
 958              		.loc 1 652 0 discriminator 3
 959 0218 0133     		adds	r3, r3, #1
 960              	.LVL93:
 961 021a DBB2     		uxtb	r3, r3
 962              	.LVL94:
 963              	.L58:
 652:main.c        ****                             checksum += txMessage.buf[i]; 
 964              		.loc 1 652 0 is_stmt 0 discriminator 1
 965 021c 142B     		cmp	r3, #20
 966 021e F7D9     		bls	.L59
 656:main.c        ****                             
 967              		.loc 1 656 0 is_stmt 1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 44


 968 0220 1448     		ldr	r0, .L65+20
 969 0222 5242     		rsbs	r2, r2, #0
 970              	.LVL95:
 971 0224 0270     		strb	r2, [r0]
 660:main.c        **** 
 972              		.loc 1 660 0
 973 0226 1E21     		movs	r1, #30
 974 0228 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 975              	.LVL96:
 663:main.c        ****                         
 976              		.loc 1 663 0
 977 022c 0122     		movs	r2, #1
 978 022e 0E4B     		ldr	r3, .L65+8
 979 0230 1A70     		strb	r2, [r3]
 666:main.c        ****                             ClearFault(fsNONE);
 980              		.loc 1 666 0
 981 0232 0F4B     		ldr	r3, .L65+16
 982 0234 5B7A     		ldrb	r3, [r3, #9]
 983 0236 002B     		cmp	r3, #0
 984 0238 02D0     		beq	.L60
 667:main.c        ****                     
 985              		.loc 1 667 0
 986 023a 0020     		movs	r0, #0
 987 023c FFF7FEFF 		bl	ClearFault
 988              	.LVL97:
 989              	.L60:
 670:main.c        ****                     }            
 990              		.loc 1 670 0
 991 0240 0A4B     		ldr	r3, .L65+12
 992 0242 1868     		ldr	r0, [r3]
 993 0244 0023     		movs	r3, #0
 994 0246 0022     		movs	r2, #0
 995 0248 0021     		movs	r1, #0
 996 024a FFF7FEFF 		bl	xQueueGenericSend
 997              	.LVL98:
 998              	.L46:
 686:main.c        ****         
 999              		.loc 1 686 0
 1000 024e 0120     		movs	r0, #1
 1001 0250 FFF7FEFF 		bl	vTaskDelay
 1002              	.LVL99:
 689:main.c        ****     }
 1003              		.loc 1 689 0
 1004 0254 0020     		movs	r0, #0
 1005 0256 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1006              	.LVL100:
 1007 025a 014B     		ldr	r3, .L65
 1008 025c 1860     		str	r0, [r3]
 690:main.c        **** }
 1009              		.loc 1 690 0
 1010 025e D5E6     		b	.L61
 1011              	.L66:
 1012              		.align	2
 1013              	.L65:
 1014 0260 00000000 		.word	uxHighWaterMark_Comm
 1015 0264 24000740 		.word	1074200612
 1016 0268 00000000 		.word	txMessageState
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 45


 1017 026c 00000000 		.word	Lock
 1018 0270 00000000 		.word	rxMessage
 1019 0274 00000000 		.word	txMessage
 1020 0278 00000000 		.word	ChecksumErrors
 1021 027c 00000000 		.word	refKp
 1022 0280 00000000 		.word	refKi
 1023 0284 00000000 		.word	refKd
 1024 0288 00000000 		.word	PID_EffSetDelta
 1025 028c 00000000 		.word	Jog
 1026 0290 00000000 		.word	outMax_Total
 1027 0294 00000000 		.word	outMax_ITerm
 1028 0298 0000C842 		.word	1120403456
 1029 029c 00004842 		.word	1112014848
 1030 02a0 00000000 		.word	pwmLimit
 1031 02a4 00000000 		.word	pwmMax
 1032 02a8 00000000 		.word	pwmMin
 1033 02ac 00000000 		.word	ConfigState
 1034 02b0 00000000 		.word	ConfigSequence
 1035 02b4 00000000 		.word	PID_Enabled
 1036 02b8 00000000 		.word	PID_Setpoint
 1037 02bc 00000000 		.word	LastPosition
 1038 02c0 00000000 		.word	PID_EffectiveSetpoint
 1039 02c4 00000000 		.word	Position
 1040 02c8 00000000 		.word	FaultState
 1041 02cc 00000000 		.word	PWM
 1042 02d0 00000000 		.word	Current
 1043              		.cfi_endproc
 1044              	.LFE36:
 1045              		.size	Comm_Task, .-Comm_Task
 1046              		.section	.text.PID_Initialize,"ax",%progbits
 1047              		.align	2
 1048              		.global	PID_Initialize
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	PID_Initialize, %function
 1052              	PID_Initialize:
 1053              	.LFB39:
 765:main.c        ****     
 1054              		.loc 1 765 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058 0000 10B5     		push	{r4, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 4, -8
 1061              		.cfi_offset 14, -4
 768:main.c        ****     LastPosition = Position;
 1062              		.loc 1 768 0
 1063 0002 FFF7FEFF 		bl	GetPosition
 1064              	.LVL101:
 1065 0006 044B     		ldr	r3, .L68
 1066 0008 1860     		str	r0, [r3]
 769:main.c        ****     
 1067              		.loc 1 769 0
 1068 000a 1A68     		ldr	r2, [r3]
 1069 000c 034B     		ldr	r3, .L68+4
 1070 000e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 46


 773:main.c        **** }    
 1071              		.loc 1 773 0
 1072 0010 0022     		movs	r2, #0
 1073 0012 034B     		ldr	r3, .L68+8
 1074 0014 1A60     		str	r2, [r3]
 774:main.c        **** 
 1075              		.loc 1 774 0
 1076              		@ sp needed
 1077 0016 10BD     		pop	{r4, pc}
 1078              	.L69:
 1079              		.align	2
 1080              	.L68:
 1081 0018 00000000 		.word	Position
 1082 001c 00000000 		.word	LastPosition
 1083 0020 00000000 		.word	ITerm
 1084              		.cfi_endproc
 1085              	.LFE39:
 1086              		.size	PID_Initialize, .-PID_Initialize
 1087              		.section	.text.PID_SetTunings,"ax",%progbits
 1088              		.align	2
 1089              		.global	PID_SetTunings
 1090              		.code	16
 1091              		.thumb_func
 1092              		.type	PID_SetTunings, %function
 1093              	PID_SetTunings:
 1094              	.LFB40:
 786:main.c        ****     
 1095              		.loc 1 786 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              	.LVL102:
 1100 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1101              		.cfi_def_cfa_offset 24
 1102              		.cfi_offset 3, -24
 1103              		.cfi_offset 4, -20
 1104              		.cfi_offset 5, -16
 1105              		.cfi_offset 6, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 0E1C     		adds	r6, r1, #0
 1109 0004 151C     		adds	r5, r2, #0
 1110 0006 1C1C     		adds	r4, r3, #0
 788:main.c        ****     
 1111              		.loc 1 788 0
 1112 0008 0028     		cmp	r0, #0
 1113 000a 12D0     		beq	.L70
 1114              	.LBB2:
 790:main.c        ****     
 1115              		.loc 1 790 0
 1116 000c FFF7FEFF 		bl	__aeabi_ui2f
 1117              	.LVL103:
 1118 0010 0849     		ldr	r1, .L72
 1119 0012 FFF7FEFF 		bl	__aeabi_fdiv
 1120              	.LVL104:
 1121 0016 071C     		adds	r7, r0, #0
 1122              	.LVL105:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 47


 792:main.c        ****         ki = newKi * sampleTimeInSec;
 1123              		.loc 1 792 0
 1124 0018 074B     		ldr	r3, .L72+4
 1125 001a 1E60     		str	r6, [r3]
 793:main.c        ****         kd = newKd / sampleTimeInSec;        
 1126              		.loc 1 793 0
 1127 001c 291C     		adds	r1, r5, #0
 1128 001e FFF7FEFF 		bl	__aeabi_fmul
 1129              	.LVL106:
 1130 0022 064B     		ldr	r3, .L72+8
 1131 0024 1860     		str	r0, [r3]
 794:main.c        ****     }
 1132              		.loc 1 794 0
 1133 0026 391C     		adds	r1, r7, #0
 1134 0028 201C     		adds	r0, r4, #0
 1135 002a FFF7FEFF 		bl	__aeabi_fdiv
 1136              	.LVL107:
 1137 002e 044B     		ldr	r3, .L72+12
 1138 0030 1860     		str	r0, [r3]
 1139              	.LVL108:
 1140              	.L70:
 1141              	.LBE2:
 796:main.c        **** 
 1142              		.loc 1 796 0
 1143              		@ sp needed
 1144              	.LVL109:
 1145              	.LVL110:
 1146              	.LVL111:
 1147 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1148              	.L73:
 1149              		.align	2
 1150              	.L72:
 1151 0034 00007A44 		.word	1148846080
 1152 0038 00000000 		.word	kp
 1153 003c 00000000 		.word	ki
 1154 0040 00000000 		.word	kd
 1155              		.cfi_endproc
 1156              	.LFE40:
 1157              		.size	PID_SetTunings, .-PID_SetTunings
 1158              		.global	__aeabi_i2f
 1159              		.section	.text.PID_Compute,"ax",%progbits
 1160              		.align	2
 1161              		.global	PID_Compute
 1162              		.code	16
 1163              		.thumb_func
 1164              		.type	PID_Compute, %function
 1165              	PID_Compute:
 1166              	.LFB41:
 808:main.c        ****     
 1167              		.loc 1 808 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL112:
 1172 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1173              		.cfi_def_cfa_offset 24
 1174              		.cfi_offset 3, -24
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 48


 1175              		.cfi_offset 4, -20
 1176              		.cfi_offset 5, -16
 1177              		.cfi_offset 6, -12
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 1180 0002 0400     		movs	r4, r0
 1181 0004 0D00     		movs	r5, r1
 813:main.c        ****         return 0;
 1182              		.loc 1 813 0
 1183 0006 3D4B     		ldr	r3, .L92
 1184 0008 1B78     		ldrb	r3, [r3]
 1185 000a 002B     		cmp	r3, #0
 1186 000c 74D0     		beq	.L85
 817:main.c        ****     
 1187              		.loc 1 817 0
 1188 000e FFF7FEFF 		bl	GetPosition
 1189              	.LVL113:
 1190 0012 3B4B     		ldr	r3, .L92+4
 1191 0014 1860     		str	r0, [r3]
 820:main.c        ****     
 1192              		.loc 1 820 0
 1193 0016 3B4B     		ldr	r3, .L92+8
 1194 0018 1868     		ldr	r0, [r3]
 1195 001a 201A     		subs	r0, r4, r0
 1196              	.LVL114:
 823:main.c        **** 
 1197              		.loc 1 823 0
 1198 001c 3A4B     		ldr	r3, .L92+12
 1199 001e 1B68     		ldr	r3, [r3]
 1200 0020 9842     		cmp	r0, r3
 1201 0022 66D3     		bcc	.L76
 827:main.c        ****         
 1202              		.loc 1 827 0
 1203 0024 394B     		ldr	r3, .L92+16
 1204 0026 1B68     		ldr	r3, [r3]
 1205 0028 394A     		ldr	r2, .L92+20
 1206 002a 1268     		ldr	r2, [r2]
 1207 002c 3949     		ldr	r1, .L92+24
 1208 002e 0968     		ldr	r1, [r1]
 1209 0030 FFF7FEFF 		bl	PID_SetTunings
 1210              	.LVL115:
 830:main.c        ****         ITerm += (ki * error);
 1211              		.loc 1 830 0
 1212 0034 324B     		ldr	r3, .L92+4
 1213 0036 1868     		ldr	r0, [r3]
 1214 0038 281A     		subs	r0, r5, r0
 1215              	.LVL116:
 831:main.c        ****         
 1216              		.loc 1 831 0
 1217 003a FFF7FEFF 		bl	__aeabi_i2f
 1218              	.LVL117:
 1219 003e 071C     		adds	r7, r0, #0
 1220 0040 354B     		ldr	r3, .L92+28
 1221 0042 1968     		ldr	r1, [r3]
 1222 0044 FFF7FEFF 		bl	__aeabi_fmul
 1223              	.LVL118:
 1224 0048 344D     		ldr	r5, .L92+32
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 49


 1225              	.LVL119:
 1226 004a 2968     		ldr	r1, [r5]
 1227 004c FFF7FEFF 		bl	__aeabi_fadd
 1228              	.LVL120:
 1229 0050 061C     		adds	r6, r0, #0
 1230 0052 2860     		str	r0, [r5]
 834:main.c        ****             ITerm = outMax_ITerm;
 1231              		.loc 1 834 0
 1232 0054 324B     		ldr	r3, .L92+36
 1233 0056 1D68     		ldr	r5, [r3]
 1234 0058 291C     		adds	r1, r5, #0
 1235 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 1236              	.LVL121:
 1237 005e 0028     		cmp	r0, #0
 1238 0060 02D0     		beq	.L90
 835:main.c        ****         } else if (ITerm < -outMax_ITerm) {
 1239              		.loc 1 835 0
 1240 0062 2E4B     		ldr	r3, .L92+32
 1241 0064 1D60     		str	r5, [r3]
 1242 0066 0BE0     		b	.L79
 1243              	.L90:
 836:main.c        ****             ITerm = -outMax_ITerm;
 1244              		.loc 1 836 0
 1245 0068 8023     		movs	r3, #128
 1246 006a 1B06     		lsls	r3, r3, #24
 1247 006c 9C46     		mov	ip, r3
 1248 006e 6544     		add	r5, r5, ip
 1249 0070 291C     		adds	r1, r5, #0
 1250 0072 301C     		adds	r0, r6, #0
 1251 0074 FFF7FEFF 		bl	__aeabi_fcmplt
 1252              	.LVL122:
 1253 0078 0028     		cmp	r0, #0
 1254 007a 01D0     		beq	.L79
 837:main.c        ****         }
 1255              		.loc 1 837 0
 1256 007c 274B     		ldr	r3, .L92+32
 1257 007e 1D60     		str	r5, [r3]
 1258              	.L79:
 841:main.c        **** 
 1259              		.loc 1 841 0
 1260 0080 1F4B     		ldr	r3, .L92+4
 1261 0082 1B68     		ldr	r3, [r3]
 1262 0084 274A     		ldr	r2, .L92+40
 1263 0086 1568     		ldr	r5, [r2]
 1264 0088 5D1B     		subs	r5, r3, r5
 1265              	.LVL123:
 844:main.c        ****         
 1266              		.loc 1 844 0
 1267 008a 274B     		ldr	r3, .L92+44
 1268 008c 1968     		ldr	r1, [r3]
 1269 008e 381C     		adds	r0, r7, #0
 1270 0090 FFF7FEFF 		bl	__aeabi_fmul
 1271              	.LVL124:
 1272 0094 214B     		ldr	r3, .L92+32
 1273 0096 1968     		ldr	r1, [r3]
 1274 0098 FFF7FEFF 		bl	__aeabi_fadd
 1275              	.LVL125:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 50


 1276 009c 061C     		adds	r6, r0, #0
 1277 009e 2800     		movs	r0, r5
 1278 00a0 FFF7FEFF 		bl	__aeabi_i2f
 1279              	.LVL126:
 1280 00a4 214B     		ldr	r3, .L92+48
 1281 00a6 1968     		ldr	r1, [r3]
 1282 00a8 FFF7FEFF 		bl	__aeabi_fmul
 1283              	.LVL127:
 1284 00ac 011C     		adds	r1, r0, #0
 1285 00ae 301C     		adds	r0, r6, #0
 1286 00b0 FFF7FEFF 		bl	__aeabi_fsub
 1287              	.LVL128:
 1288 00b4 061C     		adds	r6, r0, #0
 1289 00b6 1E4B     		ldr	r3, .L92+52
 1290 00b8 1860     		str	r0, [r3]
 847:main.c        ****             Output = outMax_Total;
 1291              		.loc 1 847 0
 1292 00ba 1E4B     		ldr	r3, .L92+56
 1293 00bc 1D68     		ldr	r5, [r3]
 1294              	.LVL129:
 1295 00be 291C     		adds	r1, r5, #0
 1296 00c0 FFF7FEFF 		bl	__aeabi_fcmpgt
 1297              	.LVL130:
 1298 00c4 0028     		cmp	r0, #0
 1299 00c6 02D0     		beq	.L91
 848:main.c        ****         } else if (Output < -outMax_Total) {
 1300              		.loc 1 848 0
 1301 00c8 194B     		ldr	r3, .L92+52
 1302 00ca 1D60     		str	r5, [r3]
 1303 00cc 0BE0     		b	.L83
 1304              	.L91:
 849:main.c        ****             Output = -outMax_Total;
 1305              		.loc 1 849 0
 1306 00ce 8023     		movs	r3, #128
 1307 00d0 1B06     		lsls	r3, r3, #24
 1308 00d2 9C46     		mov	ip, r3
 1309 00d4 6544     		add	r5, r5, ip
 1310 00d6 291C     		adds	r1, r5, #0
 1311 00d8 301C     		adds	r0, r6, #0
 1312 00da FFF7FEFF 		bl	__aeabi_fcmplt
 1313              	.LVL131:
 1314 00de 0028     		cmp	r0, #0
 1315 00e0 01D0     		beq	.L83
 850:main.c        ****         }
 1316              		.loc 1 850 0
 1317 00e2 134B     		ldr	r3, .L92+52
 1318 00e4 1D60     		str	r5, [r3]
 1319              	.L83:
 854:main.c        ****         lastTime = now;        
 1320              		.loc 1 854 0
 1321 00e6 064B     		ldr	r3, .L92+4
 1322 00e8 1A68     		ldr	r2, [r3]
 1323 00ea 0E4B     		ldr	r3, .L92+40
 1324 00ec 1A60     		str	r2, [r3]
 855:main.c        ****     }
 1325              		.loc 1 855 0
 1326 00ee 054B     		ldr	r3, .L92+8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 51


 1327 00f0 1C60     		str	r4, [r3]
 1328              	.L76:
 858:main.c        **** }
 1329              		.loc 1 858 0
 1330 00f2 0F4B     		ldr	r3, .L92+52
 1331 00f4 1868     		ldr	r0, [r3]
 1332 00f6 00E0     		b	.L75
 1333              	.LVL132:
 1334              	.L85:
 814:main.c        ****     
 1335              		.loc 1 814 0
 1336 00f8 0020     		movs	r0, #0
 1337              	.LVL133:
 1338              	.L75:
 859:main.c        ****  
 1339              		.loc 1 859 0
 1340              		@ sp needed
 1341              	.LVL134:
 1342 00fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1343              	.L93:
 1344              		.align	2
 1345              	.L92:
 1346 00fc 00000000 		.word	.LANCHOR0
 1347 0100 00000000 		.word	Position
 1348 0104 00000000 		.word	lastTime
 1349 0108 00000000 		.word	.LANCHOR1
 1350 010c 00000000 		.word	refKd
 1351 0110 00000000 		.word	refKi
 1352 0114 00000000 		.word	refKp
 1353 0118 00000000 		.word	ki
 1354 011c 00000000 		.word	ITerm
 1355 0120 00000000 		.word	outMax_ITerm
 1356 0124 00000000 		.word	LastPosition
 1357 0128 00000000 		.word	kp
 1358 012c 00000000 		.word	kd
 1359 0130 00000000 		.word	Output
 1360 0134 00000000 		.word	outMax_Total
 1361              		.cfi_endproc
 1362              	.LFE41:
 1363              		.size	PID_Compute, .-PID_Compute
 1364              		.section	.text.PID_SetMode,"ax",%progbits
 1365              		.align	2
 1366              		.global	PID_SetMode
 1367              		.code	16
 1368              		.thumb_func
 1369              		.type	PID_SetMode, %function
 1370              	PID_SetMode:
 1371              	.LFB42:
 870:main.c        ****     
 1372              		.loc 1 870 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              	.LVL135:
 1377 0000 10B5     		push	{r4, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 4, -8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 52


 1380              		.cfi_offset 14, -4
 872:main.c        ****     
 1381              		.loc 1 872 0
 1382 0002 441E     		subs	r4, r0, #1
 1383 0004 6342     		rsbs	r3, r4, #0
 1384 0006 5C41     		adcs	r4, r4, r3
 1385 0008 E4B2     		uxtb	r4, r4
 1386              	.LVL136:
 874:main.c        ****         /*we just went from manual to auto*/
 1387              		.loc 1 874 0
 1388 000a 0128     		cmp	r0, #1
 1389 000c 05D1     		bne	.L95
 874:main.c        ****         /*we just went from manual to auto*/
 1390              		.loc 1 874 0 is_stmt 0 discriminator 1
 1391 000e 044B     		ldr	r3, .L96
 1392 0010 1B78     		ldrb	r3, [r3]
 1393 0012 002B     		cmp	r3, #0
 1394 0014 01D1     		bne	.L95
 876:main.c        ****     }
 1395              		.loc 1 876 0 is_stmt 1
 1396 0016 FFF7FEFF 		bl	PID_Initialize
 1397              	.LVL137:
 1398              	.L95:
 879:main.c        **** } 
 1399              		.loc 1 879 0
 1400 001a 014B     		ldr	r3, .L96
 1401 001c 1C70     		strb	r4, [r3]
 880:main.c        ****     
 1402              		.loc 1 880 0
 1403              		@ sp needed
 1404              	.LVL138:
 1405 001e 10BD     		pop	{r4, pc}
 1406              	.L97:
 1407              		.align	2
 1408              	.L96:
 1409 0020 00000000 		.word	.LANCHOR0
 1410              		.cfi_endproc
 1411              	.LFE42:
 1412              		.size	PID_SetMode, .-PID_SetMode
 1413              		.section	.text.PID_SetDrive,"ax",%progbits
 1414              		.align	2
 1415              		.global	PID_SetDrive
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	PID_SetDrive, %function
 1419              	PID_SetDrive:
 1420              	.LFB43:
 891:main.c        **** 
 1421              		.loc 1 891 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              	.LVL139:
 1426 0000 10B5     		push	{r4, lr}
 1427              		.cfi_def_cfa_offset 8
 1428              		.cfi_offset 4, -8
 1429              		.cfi_offset 14, -4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 53


 895:main.c        ****     
 1430              		.loc 1 895 0
 1431 0002 0549     		ldr	r1, .L99
 1432 0004 FFF7FEFF 		bl	__aeabi_fadd
 1433              	.LVL140:
 1434 0008 FC21     		movs	r1, #252
 1435 000a 8905     		lsls	r1, r1, #22
 1436 000c FFF7FEFF 		bl	__aeabi_fmul
 1437              	.LVL141:
 898:main.c        **** }
 1438              		.loc 1 898 0
 1439 0010 FFF7FEFF 		bl	PWM_Set
 1440              	.LVL142:
 899:main.c        **** 
 1441              		.loc 1 899 0
 1442              		@ sp needed
 1443 0014 10BD     		pop	{r4, pc}
 1444              	.L100:
 1445 0016 C046     		.align	2
 1446              	.L99:
 1447 0018 0000C842 		.word	1120403456
 1448              		.cfi_endproc
 1449              	.LFE43:
 1450              		.size	PID_SetDrive, .-PID_SetDrive
 1451              		.section	.text.PID_Task,"ax",%progbits
 1452              		.align	2
 1453              		.global	PID_Task
 1454              		.code	16
 1455              		.thumb_func
 1456              		.type	PID_Task, %function
 1457              	PID_Task:
 1458              	.LFB44:
 913:main.c        ****     
 1459              		.loc 1 913 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 0
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 1463              	.LVL143:
 1464 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1465              		.cfi_def_cfa_offset 24
 1466              		.cfi_offset 3, -24
 1467              		.cfi_offset 4, -20
 1468              		.cfi_offset 5, -16
 1469              		.cfi_offset 6, -12
 1470              		.cfi_offset 7, -8
 1471              		.cfi_offset 14, -4
 1472              	.LVL144:
 923:main.c        ****     
 1473              		.loc 1 923 0
 1474 0002 0020     		movs	r0, #0
 1475              	.LVL145:
 1476 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1477              	.LVL146:
 1478 0008 734B     		ldr	r3, .L116
 1479 000a 1860     		str	r0, [r3]
 929:main.c        ****     refKi = 0;
 1480              		.loc 1 929 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 54


 1481 000c 734D     		ldr	r5, .L116+4
 1482 000e 0024     		movs	r4, #0
 1483 0010 2C60     		str	r4, [r5]
 930:main.c        ****     refKd = 0;
 1484              		.loc 1 930 0
 1485 0012 734E     		ldr	r6, .L116+8
 1486 0014 3460     		str	r4, [r6]
 931:main.c        ****     
 1487              		.loc 1 931 0
 1488 0016 734F     		ldr	r7, .L116+12
 1489 0018 3C60     		str	r4, [r7]
 934:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);    
 1490              		.loc 1 934 0
 1491 001a FFF7FEFF 		bl	PID_Initialize
 1492              	.LVL147:
 935:main.c        ****     PID_SetMode(PID_MANUAL);
 1493              		.loc 1 935 0
 1494 001e 3B68     		ldr	r3, [r7]
 1495 0020 3268     		ldr	r2, [r6]
 1496 0022 2968     		ldr	r1, [r5]
 1497 0024 0520     		movs	r0, #5
 1498 0026 FFF7FEFF 		bl	PID_SetTunings
 1499              	.LVL148:
 936:main.c        ****     
 1500              		.loc 1 936 0
 1501 002a 0020     		movs	r0, #0
 1502 002c FFF7FEFF 		bl	PID_SetMode
 1503              	.LVL149:
 939:main.c        ****     outMax_ITerm = 100;
 1504              		.loc 1 939 0
 1505 0030 6D4B     		ldr	r3, .L116+16
 1506 0032 6E4A     		ldr	r2, .L116+20
 1507 0034 1360     		str	r3, [r2]
 940:main.c        **** 
 1508              		.loc 1 940 0
 1509 0036 6E4A     		ldr	r2, .L116+24
 1510 0038 1360     		str	r3, [r2]
 943:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 1511              		.loc 1 943 0
 1512 003a 6E49     		ldr	r1, .L116+28
 1513 003c 6E4A     		ldr	r2, .L116+32
 1514 003e 1160     		str	r1, [r2]
 944:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 1515              		.loc 1 944 0
 1516 0040 6E4A     		ldr	r2, .L116+36
 1517 0042 1360     		str	r3, [r2]
 945:main.c        ****     
 1518              		.loc 1 945 0
 1519 0044 6E4B     		ldr	r3, .L116+40
 1520 0046 1C60     		str	r4, [r3]
 1521              	.LVL150:
 951:main.c        ****     PID_EffectiveSetpoint = 0;
 1522              		.loc 1 951 0
 1523 0048 0023     		movs	r3, #0
 1524 004a 6E4A     		ldr	r2, .L116+44
 1525 004c 1360     		str	r3, [r2]
 952:main.c        ****     PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 55


 1526              		.loc 1 952 0
 1527 004e 6E4A     		ldr	r2, .L116+48
 1528 0050 1360     		str	r3, [r2]
 953:main.c        ****     PID_Was_Enabled = false;
 1529              		.loc 1 953 0
 1530 0052 1921     		movs	r1, #25
 1531 0054 6D4A     		ldr	r2, .L116+52
 1532 0056 1170     		strb	r1, [r2]
 954:main.c        ****     PID_Enabled = false;
 1533              		.loc 1 954 0
 1534 0058 6D4A     		ldr	r2, .L116+56
 1535 005a 1370     		strb	r3, [r2]
 955:main.c        ****     
 1536              		.loc 1 955 0
 1537 005c 6D4A     		ldr	r2, .L116+60
 1538 005e 1370     		strb	r3, [r2]
 1539              	.LVL151:
 1540              	.L115:
 959:main.c        ****               
 1541              		.loc 1 959 0
 1542 0060 0120     		movs	r0, #1
 1543 0062 FFF7FEFF 		bl	PROBE_Write
 1544              	.LVL152:
 965:main.c        ****         /* ------------------------------------------------------------------------------------ */
 1545              		.loc 1 965 0
 1546 0066 8020     		movs	r0, #128
 1547 0068 0001     		lsls	r0, r0, #4
 1548 006a FFF7FEFF 		bl	CySysWdtResetCounters
 1549              	.LVL153:
 973:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 1550              		.loc 1 973 0
 1551 006e FFF7FEFF 		bl	xTaskGetTickCount
 1552              	.LVL154:
 1553 0072 0400     		movs	r4, r0
 1554              	.LVL155:
 974:main.c        ****              (now < LastMessageTimeTick) ) {
 1555              		.loc 1 974 0
 1556 0074 684B     		ldr	r3, .L116+64
 1557 0076 1B68     		ldr	r3, [r3]
 1558 0078 FA22     		movs	r2, #250
 1559 007a 9200     		lsls	r2, r2, #2
 1560 007c 9A18     		adds	r2, r3, r2
 1561 007e 9042     		cmp	r0, r2
 1562 0080 01D8     		bhi	.L102
 974:main.c        ****              (now < LastMessageTimeTick) ) {
 1563              		.loc 1 974 0 is_stmt 0 discriminator 1
 1564 0082 9842     		cmp	r0, r3
 1565 0084 08D2     		bcs	.L103
 1566              	.L102:
 978:main.c        ****             PID_Enabled = false;
 1567              		.loc 1 978 0 is_stmt 1
 1568 0086 5B48     		ldr	r0, .L116+28
 1569              	.LVL156:
 1570 0088 FFF7FEFF 		bl	PWM_Set
 1571              	.LVL157:
 979:main.c        ****             
 1572              		.loc 1 979 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 56


 1573 008c 0023     		movs	r3, #0
 1574 008e 614A     		ldr	r2, .L116+60
 1575 0090 1370     		strb	r3, [r2]
 983:main.c        **** 
 1576              		.loc 1 983 0
 1577 0092 624A     		ldr	r2, .L116+68
 1578 0094 1370     		strb	r3, [r2]
 1579 0096 92E0     		b	.L104
 1580              	.LVL158:
 1581              	.L103:
 986:main.c        ****             
 1582              		.loc 1 986 0
 1583 0098 614B     		ldr	r3, .L116+72
 1584 009a 1B78     		ldrb	r3, [r3]
 1585 009c 022B     		cmp	r3, #2
 1586 009e 00D0     		beq	.LCB1408
 1587 00a0 8DE0     		b	.L104	@long jump
 1588              	.LCB1408:
 990:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1589              		.loc 1 990 0
 1590 00a2 0620     		movs	r0, #6
 1591              	.LVL159:
 1592 00a4 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1593              	.LVL160:
 991:main.c        ****         
 1594              		.loc 1 991 0
 1595 00a8 0620     		movs	r0, #6
 1596 00aa FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1597              	.LVL161:
 994:main.c        ****                 
 1598              		.loc 1 994 0
 1599 00ae 594B     		ldr	r3, .L116+60
 1600 00b0 1B78     		ldrb	r3, [r3]
 1601 00b2 002B     		cmp	r3, #0
 1602 00b4 3BD1     		bne	.L105
 998:main.c        ****                     
 1603              		.loc 1 998 0
 1604 00b6 594B     		ldr	r3, .L116+68
 1605 00b8 1A78     		ldrb	r2, [r3]
 1606 00ba 52B2     		sxtb	r2, r2
 1607 00bc 594B     		ldr	r3, .L116+76
 1608 00be 1B78     		ldrb	r3, [r3]
 1609 00c0 5BB2     		sxtb	r3, r3
 1610 00c2 9A42     		cmp	r2, r3
 1611 00c4 0FD0     		beq	.L106
 998:main.c        ****                     
 1612              		.loc 1 998 0 is_stmt 0 discriminator 1
 1613 00c6 554B     		ldr	r3, .L116+68
 1614 00c8 1B78     		ldrb	r3, [r3]
 1615 00ca 002B     		cmp	r3, #0
 1616 00cc 0BD0     		beq	.L106
1001:main.c        ****                     
 1617              		.loc 1 1001 0 is_stmt 1
 1618 00ce 534B     		ldr	r3, .L116+68
 1619 00d0 1B78     		ldrb	r3, [r3]
 1620 00d2 5BB2     		sxtb	r3, r3
 1621 00d4 534A     		ldr	r2, .L116+76
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 57


 1622 00d6 1370     		strb	r3, [r2]
1004:main.c        ****                     
 1623              		.loc 1 1004 0
 1624 00d8 FFF7FEFF 		bl	GetPosition
 1625              	.LVL162:
 1626 00dc 524B     		ldr	r3, .L116+80
 1627 00de 1860     		str	r0, [r3]
1007:main.c        ****                 }                
 1628              		.loc 1 1007 0
 1629 00e0 0020     		movs	r0, #0
 1630 00e2 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1631              	.LVL163:
 1632              	.L106:
1011:main.c        **** 
 1633              		.loc 1 1011 0
 1634 00e6 4D4D     		ldr	r5, .L116+68
 1635 00e8 2878     		ldrb	r0, [r5]
 1636 00ea 40B2     		sxtb	r0, r0
 1637 00ec 3230     		adds	r0, r0, #50
 1638 00ee FFF7FEFF 		bl	__aeabi_i2f
 1639              	.LVL164:
 1640 00f2 FFF7FEFF 		bl	PWM_Set
 1641              	.LVL165:
1014:main.c        ****                 
 1642              		.loc 1 1014 0
 1643 00f6 2B78     		ldrb	r3, [r5]
 1644 00f8 002B     		cmp	r3, #0
 1645 00fa 18D0     		beq	.L105
1018:main.c        ****                     DeltaPosition = labs( CurrentPosition - LastPosition );
 1646              		.loc 1 1018 0
 1647 00fc FFF7FEFF 		bl	GetPosition
 1648              	.LVL166:
1019:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 1649              		.loc 1 1019 0
 1650 0100 494B     		ldr	r3, .L116+80
 1651 0102 1B68     		ldr	r3, [r3]
 1652 0104 C01A     		subs	r0, r0, r3
 1653              	.LVL167:
 1654 0106 C317     		asrs	r3, r0, #31
 1655 0108 C518     		adds	r5, r0, r3
 1656 010a 5D40     		eors	r5, r3
 1657              	.LVL168:
1020:main.c        ****                     
 1658              		.loc 1 1020 0
 1659 010c FFF7FEFF 		bl	Index_Counter_1_ReadCounter
 1660              	.LVL169:
 1661 0110 061E     		subs	r6, r0, #0
 1662              	.LVL170:
1023:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 1663              		.loc 1 1023 0
 1664 0112 05D1     		bne	.L107
1024:main.c        ****                             AssertFault(fsIndex);        
 1665              		.loc 1 1024 0
 1666 0114 454B     		ldr	r3, .L116+84
 1667 0116 9D42     		cmp	r5, r3
 1668 0118 02DD     		ble	.L107
1025:main.c        ****                     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 58


 1669              		.loc 1 1025 0
 1670 011a 0420     		movs	r0, #4
 1671              	.LVL171:
 1672 011c FFF7FEFF 		bl	AssertFault
 1673              	.LVL172:
 1674              	.L107:
1028:main.c        ****                         AssertFault(fsEncoder);
 1675              		.loc 1 1028 0
 1676 0120 002E     		cmp	r6, #0
 1677 0122 04D0     		beq	.L105
1028:main.c        ****                         AssertFault(fsEncoder);
 1678              		.loc 1 1028 0 is_stmt 0 discriminator 1
 1679 0124 012D     		cmp	r5, #1
 1680 0126 02DC     		bgt	.L105
1029:main.c        ****                 }
 1681              		.loc 1 1029 0 is_stmt 1
 1682 0128 0220     		movs	r0, #2
 1683 012a FFF7FEFF 		bl	AssertFault
 1684              	.LVL173:
 1685              	.L105:
1035:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1686              		.loc 1 1035 0
 1687 012e 384B     		ldr	r3, .L116+56
 1688 0130 1B78     		ldrb	r3, [r3]
 1689 0132 002B     		cmp	r3, #0
 1690 0134 07D1     		bne	.L108
1035:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1691              		.loc 1 1035 0 is_stmt 0 discriminator 1
 1692 0136 374A     		ldr	r2, .L116+60
 1693 0138 1278     		ldrb	r2, [r2]
 1694 013a 002A     		cmp	r2, #0
 1695 013c 03D0     		beq	.L108
1036:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 1696              		.loc 1 1036 0 is_stmt 1
 1697 013e 0120     		movs	r0, #1
 1698 0140 FFF7FEFF 		bl	PID_SetMode
 1699              	.LVL174:
 1700 0144 08E0     		b	.L109
 1701              	.L108:
1037:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1702              		.loc 1 1037 0
 1703 0146 334A     		ldr	r2, .L116+60
 1704 0148 1278     		ldrb	r2, [r2]
 1705 014a 002A     		cmp	r2, #0
 1706 014c 04D1     		bne	.L109
1037:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1707              		.loc 1 1037 0 is_stmt 0 discriminator 1
 1708 014e 002B     		cmp	r3, #0
 1709 0150 02D0     		beq	.L109
1038:main.c        ****             } else {
 1710              		.loc 1 1038 0 is_stmt 1
 1711 0152 0020     		movs	r0, #0
 1712 0154 FFF7FEFF 		bl	PID_SetMode
 1713              	.LVL175:
 1714              	.L109:
1044:main.c        ****             
 1715              		.loc 1 1044 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 59


 1716 0158 2E4B     		ldr	r3, .L116+60
 1717 015a 1B78     		ldrb	r3, [r3]
 1718 015c 2C4A     		ldr	r2, .L116+56
 1719 015e 1370     		strb	r3, [r2]
1059:main.c        ****                 
 1720              		.loc 1 1059 0
 1721 0160 002B     		cmp	r3, #0
 1722 0162 29D0     		beq	.L110
1061:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;
 1723              		.loc 1 1061 0
 1724 0164 294B     		ldr	r3, .L116+52
 1725 0166 1B78     		ldrb	r3, [r3]
 1726 0168 002B     		cmp	r3, #0
 1727 016a 04D1     		bne	.L111
1062:main.c        ****                 } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1728              		.loc 1 1062 0
 1729 016c 254B     		ldr	r3, .L116+44
 1730 016e 1A68     		ldr	r2, [r3]
 1731 0170 254B     		ldr	r3, .L116+48
 1732 0172 1A60     		str	r2, [r3]
 1733 0174 16E0     		b	.L112
 1734              	.L111:
1063:main.c        ****                     PID_EffectiveSetpoint = PID_Setpoint;                                          
 1735              		.loc 1 1063 0
 1736 0176 244A     		ldr	r2, .L116+48
 1737 0178 1168     		ldr	r1, [r2]
 1738 017a 224A     		ldr	r2, .L116+44
 1739 017c 1068     		ldr	r0, [r2]
 1740 017e 0A1A     		subs	r2, r1, r0
 1741 0180 D517     		asrs	r5, r2, #31
 1742 0182 5219     		adds	r2, r2, r5
 1743 0184 6A40     		eors	r2, r5
 1744 0186 5D00     		lsls	r5, r3, #1
 1745 0188 AA42     		cmp	r2, r5
 1746 018a 02DC     		bgt	.L113
1064:main.c        ****                 } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1747              		.loc 1 1064 0
 1748 018c 1E4B     		ldr	r3, .L116+48
 1749 018e 1860     		str	r0, [r3]
 1750 0190 08E0     		b	.L112
 1751              	.L113:
1065:main.c        ****                     PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1752              		.loc 1 1065 0
 1753 0192 8142     		cmp	r1, r0
 1754 0194 03DA     		bge	.L114
1066:main.c        ****                 } else {
 1755              		.loc 1 1066 0
 1756 0196 CB18     		adds	r3, r1, r3
 1757 0198 1B4A     		ldr	r2, .L116+48
 1758 019a 1360     		str	r3, [r2]
 1759 019c 02E0     		b	.L112
 1760              	.L114:
1068:main.c        ****                 }
 1761              		.loc 1 1068 0
 1762 019e CB1A     		subs	r3, r1, r3
 1763 01a0 194A     		ldr	r2, .L116+48
 1764 01a2 1360     		str	r3, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 60


 1765              	.L112:
1072:main.c        ****             
 1766              		.loc 1 1072 0
 1767 01a4 184B     		ldr	r3, .L116+48
 1768 01a6 1968     		ldr	r1, [r3]
 1769 01a8 2000     		movs	r0, r4
 1770 01aa FFF7FEFF 		bl	PID_Compute
 1771              	.LVL176:
1075:main.c        ****                 
 1772              		.loc 1 1075 0
 1773 01ae 204B     		ldr	r3, .L116+88
 1774 01b0 1860     		str	r0, [r3]
1078:main.c        ****                 
 1775              		.loc 1 1078 0
 1776 01b2 FFF7FEFF 		bl	PID_SetDrive
 1777              	.LVL177:
 1778 01b6 02E0     		b	.L104
 1779              	.L110:
1082:main.c        ****             }
 1780              		.loc 1 1082 0
 1781 01b8 0022     		movs	r2, #0
 1782 01ba 1D4B     		ldr	r3, .L116+88
 1783 01bc 1A60     		str	r2, [r3]
 1784              	.L104:
1087:main.c        ****         
 1785              		.loc 1 1087 0
 1786 01be 0020     		movs	r0, #0
 1787 01c0 FFF7FEFF 		bl	PROBE_Write
 1788              	.LVL178:
1090:main.c        **** 
 1789              		.loc 1 1090 0
 1790 01c4 0520     		movs	r0, #5
 1791 01c6 FFF7FEFF 		bl	vTaskDelay
 1792              	.LVL179:
1093:main.c        ****     }
 1793              		.loc 1 1093 0
 1794 01ca 0020     		movs	r0, #0
 1795 01cc FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1796              	.LVL180:
 1797 01d0 014B     		ldr	r3, .L116
 1798 01d2 1860     		str	r0, [r3]
1094:main.c        ****    
 1799              		.loc 1 1094 0
 1800 01d4 44E7     		b	.L115
 1801              	.L117:
 1802 01d6 C046     		.align	2
 1803              	.L116:
 1804 01d8 00000000 		.word	uxHighWaterMark_PID
 1805 01dc 00000000 		.word	refKp
 1806 01e0 00000000 		.word	refKi
 1807 01e4 00000000 		.word	refKd
 1808 01e8 0000C842 		.word	1120403456
 1809 01ec 00000000 		.word	outMax_Total
 1810 01f0 00000000 		.word	outMax_ITerm
 1811 01f4 00004842 		.word	1112014848
 1812 01f8 00000000 		.word	pwmLimit
 1813 01fc 00000000 		.word	pwmMax
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 61


 1814 0200 00000000 		.word	pwmMin
 1815 0204 00000000 		.word	PID_Setpoint
 1816 0208 00000000 		.word	PID_EffectiveSetpoint
 1817 020c 00000000 		.word	PID_EffSetDelta
 1818 0210 00000000 		.word	PID_Was_Enabled
 1819 0214 00000000 		.word	PID_Enabled
 1820 0218 00000000 		.word	LastMessageTimeTick
 1821 021c 00000000 		.word	Jog
 1822 0220 00000000 		.word	ConfigState
 1823 0224 00000000 		.word	LastJog
 1824 0228 00000000 		.word	LastPosition
 1825 022c 204E0000 		.word	20000
 1826 0230 00000000 		.word	PWM
 1827              		.cfi_endproc
 1828              	.LFE44:
 1829              		.size	PID_Task, .-PID_Task
 1830              		.section	.text.main,"ax",%progbits
 1831              		.align	2
 1832              		.global	main
 1833              		.code	16
 1834              		.thumb_func
 1835              		.type	main, %function
 1836              	main:
 1837              	.LFB45:
1109:main.c        ****     
 1838              		.loc 1 1109 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842 0000 30B5     		push	{r4, r5, lr}
 1843              		.cfi_def_cfa_offset 12
 1844              		.cfi_offset 4, -12
 1845              		.cfi_offset 5, -8
 1846              		.cfi_offset 14, -4
 1847 0002 83B0     		sub	sp, sp, #12
 1848              		.cfi_def_cfa_offset 24
1112:main.c        **** 
 1849              		.loc 1 1112 0
 1850 0004 FFF7FEFF 		bl	setupFreeRTOS
 1851              	.LVL181:
1120:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1852              		.loc 1 1120 0
 1853 0008 0120     		movs	r0, #1
 1854 000a FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1855              	.LVL182:
1121:main.c        **** 
 1856              		.loc 1 1121 0
 1857 000e 0120     		movs	r0, #1
 1858 0010 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1859              	.LVL183:
1127:main.c        ****         PID_Task,       /* Task function */
 1860              		.loc 1 1127 0
 1861 0014 0024     		movs	r4, #0
 1862 0016 0194     		str	r4, [sp, #4]
 1863 0018 0323     		movs	r3, #3
 1864 001a 0093     		str	r3, [sp]
 1865 001c 0023     		movs	r3, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 62


 1866 001e 4022     		movs	r2, #64
 1867 0020 3649     		ldr	r1, .L121
 1868 0022 3748     		ldr	r0, .L121+4
 1869 0024 FFF7FEFF 		bl	xTaskCreate
 1870              	.LVL184:
1135:main.c        ****         Comm_Task,       /* Task function */
 1871              		.loc 1 1135 0
 1872 0028 0194     		str	r4, [sp, #4]
 1873 002a 0223     		movs	r3, #2
 1874 002c 0093     		str	r3, [sp]
 1875 002e 0023     		movs	r3, #0
 1876 0030 6422     		movs	r2, #100
 1877 0032 3449     		ldr	r1, .L121+8
 1878 0034 3448     		ldr	r0, .L121+12
 1879 0036 FFF7FEFF 		bl	xTaskCreate
 1880              	.LVL185:
1143:main.c        ****         Current_Read_Task, /* Task function */
 1881              		.loc 1 1143 0
 1882 003a 0194     		str	r4, [sp, #4]
 1883 003c 0123     		movs	r3, #1
 1884 003e 0093     		str	r3, [sp]
 1885 0040 0023     		movs	r3, #0
 1886 0042 4022     		movs	r2, #64
 1887 0044 3149     		ldr	r1, .L121+16
 1888 0046 3248     		ldr	r0, .L121+20
 1889 0048 FFF7FEFF 		bl	xTaskCreate
 1890              	.LVL186:
1154:main.c        **** 
 1891              		.loc 1 1154 0
 1892 004c 0120     		movs	r0, #1
 1893 004e FFF7FEFF 		bl	xQueueCreateMutex
 1894              	.LVL187:
 1895 0052 304B     		ldr	r3, .L121+24
 1896 0054 1860     		str	r0, [r3]
1157:main.c        ****         s = 1;
 1897              		.loc 1 1157 0
 1898 0056 0028     		cmp	r0, #0
 1899 0058 0BD1     		bne	.L119
 1900 005a 0134     		adds	r4, r4, #1
 1901              	.L120:
 1902              	.LVL188:
1161:main.c        ****             LED_Write(s); 
 1903              		.loc 1 1161 0 discriminator 1
 1904 005c 6342     		rsbs	r3, r4, #0
 1905 005e 5C41     		adcs	r4, r4, r3
 1906              	.LVL189:
 1907 0060 E4B2     		uxtb	r4, r4
 1908              	.LVL190:
1162:main.c        ****             CyDelay(1000u);                    
 1909              		.loc 1 1162 0 discriminator 1
 1910 0062 2000     		movs	r0, r4
 1911 0064 FFF7FEFF 		bl	LED_Write
 1912              	.LVL191:
1163:main.c        ****         }
 1913              		.loc 1 1163 0 discriminator 1
 1914 0068 FA20     		movs	r0, #250
 1915 006a 8000     		lsls	r0, r0, #2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 63


 1916 006c FFF7FEFF 		bl	CyDelay
 1917              	.LVL192:
 1918 0070 F4E7     		b	.L120
 1919              	.LVL193:
 1920              	.L119:
1173:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 1921              		.loc 1 1173 0
 1922 0072 2948     		ldr	r0, .L121+28
 1923 0074 FFF7FEFF 		bl	isr_home_StartEx
 1924              	.LVL194:
1174:main.c        ****     
 1925              		.loc 1 1174 0
 1926 0078 2848     		ldr	r0, .L121+32
 1927 007a FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1928              	.LVL195:
1177:main.c        ****     
 1929              		.loc 1 1177 0
 1930 007e 2848     		ldr	r0, .L121+36
 1931 0080 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1932              	.LVL196:
1180:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
 1933              		.loc 1 1180 0
 1934 0084 0320     		movs	r0, #3
 1935 0086 FFF7FEFF 		bl	isr_home_SetPriority
 1936              	.LVL197:
1181:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
 1937              		.loc 1 1181 0
 1938 008a 0220     		movs	r0, #2
 1939 008c FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1940              	.LVL198:
1182:main.c        **** 
 1941              		.loc 1 1182 0
 1942 0090 0320     		movs	r0, #3
 1943 0092 FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1944              	.LVL199:
1185:main.c        ****     
 1945              		.loc 1 1185 0
 1946              		.syntax divided
 1947              	@ 1185 "main.c" 1
 1948 0096 62B6     		CPSIE   i
 1949              	@ 0 "" 2
1216:main.c        ****     CyDelay(100u);
 1950              		.loc 1 1216 0
 1951              		.thumb
 1952              		.syntax unified
 1953 0098 FFF7FEFF 		bl	I2C_Start
 1954              	.LVL200:
1217:main.c        ****     SPI_1_Start();
 1955              		.loc 1 1217 0
 1956 009c 6420     		movs	r0, #100
 1957 009e FFF7FEFF 		bl	CyDelay
 1958              	.LVL201:
1218:main.c        ****     
 1959              		.loc 1 1218 0
 1960 00a2 FFF7FEFF 		bl	SPI_1_Start
 1961              	.LVL202:
1222:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 64


 1962              		.loc 1 1222 0
 1963 00a6 FFF7FEFF 		bl	PWM_1_Start
 1964              	.LVL203:
1223:main.c        ****     PWM_Set(PWM_IDLE);   
 1965              		.loc 1 1223 0
 1966 00aa C820     		movs	r0, #200
 1967 00ac C000     		lsls	r0, r0, #3
 1968 00ae FFF7FEFF 		bl	PWM_1_WritePeriod
 1969              	.LVL204:
1224:main.c        ****     
 1970              		.loc 1 1224 0
 1971 00b2 1C48     		ldr	r0, .L121+40
 1972 00b4 FFF7FEFF 		bl	PWM_Set
 1973              	.LVL205:
1227:main.c        ****    
 1974              		.loc 1 1227 0
 1975 00b8 0024     		movs	r4, #0
 1976 00ba 1B4B     		ldr	r3, .L121+44
 1977 00bc 1C70     		strb	r4, [r3]
1230:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1978              		.loc 1 1230 0
 1979 00be FFF7FEFF 		bl	Counter_1_Start
 1980              	.LVL206:
1231:main.c        ****     LastPosition = ENCODER_MAX;
 1981              		.loc 1 1231 0
 1982 00c2 8025     		movs	r5, #128
 1983 00c4 2D04     		lsls	r5, r5, #16
 1984 00c6 2800     		movs	r0, r5
 1985 00c8 FFF7FEFF 		bl	Counter_1_WriteCounter
 1986              	.LVL207:
1232:main.c        ****     
 1987              		.loc 1 1232 0
 1988 00cc 174B     		ldr	r3, .L121+48
 1989 00ce 1D60     		str	r5, [r3]
1235:main.c        ****     Index_Counter_1_WriteCounter(0);
 1990              		.loc 1 1235 0
 1991 00d0 FFF7FEFF 		bl	Index_Counter_1_Start
 1992              	.LVL208:
1236:main.c        ****      
 1993              		.loc 1 1236 0
 1994 00d4 0020     		movs	r0, #0
 1995 00d6 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1996              	.LVL209:
1239:main.c        ****     
 1997              		.loc 1 1239 0
 1998 00da FFF7FEFF 		bl	xTaskGetTickCount
 1999              	.LVL210:
 2000 00de 144B     		ldr	r3, .L121+52
 2001 00e0 1860     		str	r0, [r3]
1242:main.c        ****     ConfigSequence = 0;
 2002              		.loc 1 1242 0
 2003 00e2 0122     		movs	r2, #1
 2004 00e4 134B     		ldr	r3, .L121+56
 2005 00e6 1A70     		strb	r2, [r3]
1243:main.c        ****     ChecksumErrors = 0;
 2006              		.loc 1 1243 0
 2007 00e8 134B     		ldr	r3, .L121+60
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 65


 2008 00ea 1C70     		strb	r4, [r3]
1244:main.c        ****    
 2009              		.loc 1 1244 0
 2010 00ec 134B     		ldr	r3, .L121+64
 2011 00ee 1C80     		strh	r4, [r3]
1249:main.c        ****    
 2012              		.loc 1 1249 0
 2013 00f0 FFF7FEFF 		bl	vTaskStartScheduler
 2014              	.LVL211:
1255:main.c        **** 
 2015              		.loc 1 1255 0
 2016 00f4 0120     		movs	r0, #1
 2017 00f6 03B0     		add	sp, sp, #12
 2018              		@ sp needed
 2019 00f8 30BD     		pop	{r4, r5, pc}
 2020              	.L122:
 2021 00fa C046     		.align	2
 2022              	.L121:
 2023 00fc 00000000 		.word	.LC85
 2024 0100 00000000 		.word	PID_Task
 2025 0104 04000000 		.word	.LC88
 2026 0108 00000000 		.word	Comm_Task
 2027 010c 14000000 		.word	.LC91
 2028 0110 00000000 		.word	Current_Read_Task
 2029 0114 00000000 		.word	Lock
 2030 0118 00000000 		.word	HomeIsrHandler
 2031 011c 00000000 		.word	RSTIsrHandler
 2032 0120 00000000 		.word	SPI_SS_IsrHandler
 2033 0124 00004842 		.word	1112014848
 2034 0128 00000000 		.word	Jog
 2035 012c 00000000 		.word	LastPosition
 2036 0130 00000000 		.word	LastMessageTimeTick
 2037 0134 00000000 		.word	ConfigState
 2038 0138 00000000 		.word	ConfigSequence
 2039 013c 00000000 		.word	ChecksumErrors
 2040              		.cfi_endproc
 2041              	.LFE45:
 2042              		.size	main, .-main
 2043              		.comm	txMessageState,1,1
 2044              		.comm	txMessage,30,4
 2045              		.comm	rxMessage,30,4
 2046              		.comm	LastMessageTimeTick,4,4
 2047              		.comm	Lock,4,4
 2048              		.comm	uxHighWaterMark_Comm,4,4
 2049              		.comm	uxHighWaterMark_Current,4,4
 2050              		.comm	uxHighWaterMark_PID,4,4
 2051              		.comm	CurrentI2Cinbuf,20,4
 2052              		.comm	PWM,4,4
 2053              		.comm	Current,2,2
 2054              		.comm	ChecksumErrors,2,2
 2055              		.comm	ConfigSequence,1,1
 2056              		.comm	FaultState,1,1
 2057              		.comm	ConfigState,1,1
 2058              		.comm	pwmMin,4,4
 2059              		.comm	pwmMax,4,4
 2060              		.comm	pwmLimit,4,4
 2061              		.comm	outMax_ITerm,4,4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 66


 2062              		.comm	outMax_Total,4,4
 2063              		.global	refSampleTime
 2064              		.comm	kd,4,4
 2065              		.comm	ki,4,4
 2066              		.comm	kp,4,4
 2067              		.comm	refKd,4,4
 2068              		.comm	refKi,4,4
 2069              		.comm	refKp,4,4
 2070              		.comm	LastPosition,4,4
 2071              		.comm	Position,4,4
 2072              		.comm	ITerm,4,4
 2073              		.comm	Output,4,4
 2074              		.comm	lastTime,4,4
 2075              		.comm	PID_EffSetDelta,1,1
 2076              		.comm	PID_EffectiveSetpoint,4,4
 2077              		.comm	PID_Setpoint,4,4
 2078              		.comm	PID_Was_Enabled,1,1
 2079              		.comm	PID_Enabled,1,1
 2080              		.comm	LastJog,1,1
 2081              		.comm	Jog,1,1
 2082              		.global	inAuto
 2083              		.data
 2084              		.align	2
 2085              		.set	.LANCHOR1,. + 0
 2086              		.type	refSampleTime, %object
 2087              		.size	refSampleTime, 4
 2088              	refSampleTime:
 2089 0000 05000000 		.word	5
 2090              		.section	.rodata.str1.4,"aMS",%progbits,1
 2091              		.align	2
 2092              	.LC85:
 2093 0000 50494400 		.ascii	"PID\000"
 2094              	.LC88:
 2095 0004 436F6D6D 		.ascii	"Communications\000"
 2095      756E6963 
 2095      6174696F 
 2095      6E7300
 2096 0013 00       		.space	1
 2097              	.LC91:
 2098 0014 52656164 		.ascii	"Read Current\000"
 2098      20437572 
 2098      72656E74 
 2098      00
 2099              		.bss
 2100              		.set	.LANCHOR0,. + 0
 2101              		.type	inAuto, %object
 2102              		.size	inAuto, 1
 2103              	inAuto:
 2104 0000 00       		.space	1
 2105              		.text
 2106              	.Letext0:
 2107              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2108              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2109              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2110              		.file 5 ".\\FreeRTOS/portmacro.h"
 2111              		.file 6 ".\\FreeRTOS/queue.h"
 2112              		.file 7 ".\\FreeRTOS/semphr.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 67


 2113              		.file 8 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 2114              		.file 9 "Generated_Source\\PSoC4/Reset_Encoder.h"
 2115              		.file 10 "Generated_Source\\PSoC4/Counter_1.h"
 2116              		.file 11 "Generated_Source\\PSoC4/Index_Counter_1.h"
 2117              		.file 12 "Generated_Source\\PSoC4/isr_home.h"
 2118              		.file 13 "Generated_Source\\PSoC4/HOME_IN.h"
 2119              		.file 14 "Generated_Source\\PSoC4/spi_ss.h"
 2120              		.file 15 ".\\FreeRTOS/task.h"
 2121              		.file 16 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 2122              		.file 17 "Generated_Source\\PSoC4/CyLib.h"
 2123              		.file 18 "Generated_Source\\PSoC4/I2C_I2C.h"
 2124              		.file 19 "Generated_Source\\PSoC4/PWM_1.h"
 2125              		.file 20 "Generated_Source\\PSoC4/PROBE.h"
 2126              		.file 21 "Generated_Source\\PSoC4/CyLFClk.h"
 2127              		.file 22 "Generated_Source\\PSoC4/HOME_OUT.h"
 2128              		.file 23 "Generated_Source\\PSoC4/INDEX_OUT.h"
 2129              		.file 24 "Generated_Source\\PSoC4/LED.h"
 2130              		.file 25 "Generated_Source\\PSoC4/isr_spi_ss.h"
 2131              		.file 26 "Generated_Source\\PSoC4/I2C.h"
 2132              		.file 27 "Generated_Source\\PSoC4/SPI_1.h"
 2133              		.file 28 "Generated_Source\\PSoC4/core_cm0_psoc4.h"
 2134              		.section	.debug_info,"",%progbits
 2135              	.Ldebug_info0:
 2136 0000 C4140000 		.4byte	0x14c4
 2137 0004 0400     		.2byte	0x4
 2138 0006 00000000 		.4byte	.Ldebug_abbrev0
 2139 000a 04       		.byte	0x4
 2140 000b 01       		.uleb128 0x1
 2141 000c BE020000 		.4byte	.LASF207
 2142 0010 0C       		.byte	0xc
 2143 0011 2C000000 		.4byte	.LASF208
 2144 0015 210B0000 		.4byte	.LASF209
 2145 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2146 001d 00000000 		.4byte	0
 2147 0021 00000000 		.4byte	.Ldebug_line0
 2148 0025 02       		.uleb128 0x2
 2149 0026 04       		.byte	0x4
 2150 0027 04       		.byte	0x4
 2151 0028 BB010000 		.4byte	.LASF0
 2152 002c 03       		.uleb128 0x3
 2153 002d 04       		.byte	0x4
 2154 002e 05       		.byte	0x5
 2155 002f 696E7400 		.ascii	"int\000"
 2156 0033 02       		.uleb128 0x2
 2157 0034 04       		.byte	0x4
 2158 0035 07       		.byte	0x7
 2159 0036 8B000000 		.4byte	.LASF1
 2160 003a 02       		.uleb128 0x2
 2161 003b 08       		.byte	0x8
 2162 003c 05       		.byte	0x5
 2163 003d 8E050000 		.4byte	.LASF2
 2164 0041 02       		.uleb128 0x2
 2165 0042 08       		.byte	0x8
 2166 0043 04       		.byte	0x4
 2167 0044 C8060000 		.4byte	.LASF3
 2168 0048 02       		.uleb128 0x2
 2169 0049 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 68


 2170 004a 06       		.byte	0x6
 2171 004b 270A0000 		.4byte	.LASF4
 2172 004f 04       		.uleb128 0x4
 2173 0050 50080000 		.4byte	.LASF9
 2174 0054 02       		.byte	0x2
 2175 0055 1D       		.byte	0x1d
 2176 0056 5A000000 		.4byte	0x5a
 2177 005a 02       		.uleb128 0x2
 2178 005b 01       		.byte	0x1
 2179 005c 08       		.byte	0x8
 2180 005d 44090000 		.4byte	.LASF5
 2181 0061 02       		.uleb128 0x2
 2182 0062 02       		.byte	0x2
 2183 0063 05       		.byte	0x5
 2184 0064 2A070000 		.4byte	.LASF6
 2185 0068 02       		.uleb128 0x2
 2186 0069 02       		.byte	0x2
 2187 006a 07       		.byte	0x7
 2188 006b 330A0000 		.4byte	.LASF7
 2189 006f 02       		.uleb128 0x2
 2190 0070 04       		.byte	0x4
 2191 0071 05       		.byte	0x5
 2192 0072 72070000 		.4byte	.LASF8
 2193 0076 04       		.uleb128 0x4
 2194 0077 62090000 		.4byte	.LASF10
 2195 007b 02       		.byte	0x2
 2196 007c 41       		.byte	0x41
 2197 007d 81000000 		.4byte	0x81
 2198 0081 02       		.uleb128 0x2
 2199 0082 04       		.byte	0x4
 2200 0083 07       		.byte	0x7
 2201 0084 C7080000 		.4byte	.LASF11
 2202 0088 02       		.uleb128 0x2
 2203 0089 08       		.byte	0x8
 2204 008a 07       		.byte	0x7
 2205 008b 0D020000 		.4byte	.LASF12
 2206 008f 04       		.uleb128 0x4
 2207 0090 E4040000 		.4byte	.LASF13
 2208 0094 03       		.byte	0x3
 2209 0095 18       		.byte	0x18
 2210 0096 4F000000 		.4byte	0x4f
 2211 009a 04       		.uleb128 0x4
 2212 009b 7F010000 		.4byte	.LASF14
 2213 009f 03       		.byte	0x3
 2214 00a0 30       		.byte	0x30
 2215 00a1 76000000 		.4byte	0x76
 2216 00a5 05       		.uleb128 0x5
 2217 00a6 710A0000 		.4byte	.LASF15
 2218 00aa 04       		.byte	0x4
 2219 00ab E401     		.2byte	0x1e4
 2220 00ad 5A000000 		.4byte	0x5a
 2221 00b1 05       		.uleb128 0x5
 2222 00b2 B7040000 		.4byte	.LASF16
 2223 00b6 04       		.byte	0x4
 2224 00b7 E501     		.2byte	0x1e5
 2225 00b9 68000000 		.4byte	0x68
 2226 00bd 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 69


 2227 00be 03060000 		.4byte	.LASF17
 2228 00c2 04       		.byte	0x4
 2229 00c3 E601     		.2byte	0x1e6
 2230 00c5 81000000 		.4byte	0x81
 2231 00c9 05       		.uleb128 0x5
 2232 00ca BE040000 		.4byte	.LASF18
 2233 00ce 04       		.byte	0x4
 2234 00cf E701     		.2byte	0x1e7
 2235 00d1 48000000 		.4byte	0x48
 2236 00d5 05       		.uleb128 0x5
 2237 00d6 B8000000 		.4byte	.LASF19
 2238 00da 04       		.byte	0x4
 2239 00db E801     		.2byte	0x1e8
 2240 00dd 61000000 		.4byte	0x61
 2241 00e1 05       		.uleb128 0x5
 2242 00e2 DD010000 		.4byte	.LASF20
 2243 00e6 04       		.byte	0x4
 2244 00e7 E901     		.2byte	0x1e9
 2245 00e9 6F000000 		.4byte	0x6f
 2246 00ed 02       		.uleb128 0x2
 2247 00ee 08       		.byte	0x8
 2248 00ef 04       		.byte	0x4
 2249 00f0 770A0000 		.4byte	.LASF21
 2250 00f4 02       		.uleb128 0x2
 2251 00f5 01       		.byte	0x1
 2252 00f6 08       		.byte	0x8
 2253 00f7 67040000 		.4byte	.LASF22
 2254 00fb 06       		.uleb128 0x6
 2255 00fc A5000000 		.4byte	0xa5
 2256 0100 06       		.uleb128 0x6
 2257 0101 B1000000 		.4byte	0xb1
 2258 0105 05       		.uleb128 0x5
 2259 0106 D9060000 		.4byte	.LASF23
 2260 010a 04       		.byte	0x4
 2261 010b 9002     		.2byte	0x290
 2262 010d 11010000 		.4byte	0x111
 2263 0111 06       		.uleb128 0x6
 2264 0112 BD000000 		.4byte	0xbd
 2265 0116 05       		.uleb128 0x5
 2266 0117 E1050000 		.4byte	.LASF24
 2267 011b 04       		.byte	0x4
 2268 011c A002     		.2byte	0x2a0
 2269 011e 22010000 		.4byte	0x122
 2270 0122 07       		.uleb128 0x7
 2271 0123 04       		.byte	0x4
 2272 0124 28010000 		.4byte	0x128
 2273 0128 08       		.uleb128 0x8
 2274 0129 02       		.uleb128 0x2
 2275 012a 04       		.byte	0x4
 2276 012b 07       		.byte	0x7
 2277 012c BE080000 		.4byte	.LASF25
 2278 0130 09       		.uleb128 0x9
 2279 0131 04       		.byte	0x4
 2280 0132 0A       		.uleb128 0xa
 2281 0133 D4060000 		.4byte	.LASF210
 2282 0137 01       		.byte	0x1
 2283 0138 48000000 		.4byte	0x48
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 70


 2284 013c 1C       		.byte	0x1c
 2285 013d 17       		.byte	0x17
 2286 013e 61010000 		.4byte	0x161
 2287 0142 0B       		.uleb128 0xb
 2288 0143 A3070000 		.4byte	.LASF26
 2289 0147 72       		.sleb128 -14
 2290 0148 0B       		.uleb128 0xb
 2291 0149 5A0A0000 		.4byte	.LASF27
 2292 014d 73       		.sleb128 -13
 2293 014e 0B       		.uleb128 0xb
 2294 014f 84090000 		.4byte	.LASF28
 2295 0153 7B       		.sleb128 -5
 2296 0154 0B       		.uleb128 0xb
 2297 0155 3E010000 		.4byte	.LASF29
 2298 0159 7E       		.sleb128 -2
 2299 015a 0B       		.uleb128 0xb
 2300 015b A2080000 		.4byte	.LASF30
 2301 015f 7F       		.sleb128 -1
 2302 0160 00       		.byte	0
 2303 0161 04       		.uleb128 0x4
 2304 0162 A7050000 		.4byte	.LASF31
 2305 0166 05       		.byte	0x5
 2306 0167 38       		.byte	0x38
 2307 0168 6F000000 		.4byte	0x6f
 2308 016c 04       		.uleb128 0x4
 2309 016d 6C040000 		.4byte	.LASF32
 2310 0171 05       		.byte	0x5
 2311 0172 39       		.byte	0x39
 2312 0173 81000000 		.4byte	0x81
 2313 0177 04       		.uleb128 0x4
 2314 0178 9F060000 		.4byte	.LASF33
 2315 017c 05       		.byte	0x5
 2316 017d 3F       		.byte	0x3f
 2317 017e 9A000000 		.4byte	0x9a
 2318 0182 04       		.uleb128 0x4
 2319 0183 CA040000 		.4byte	.LASF34
 2320 0187 06       		.byte	0x6
 2321 0188 2E       		.byte	0x2e
 2322 0189 30010000 		.4byte	0x130
 2323 018d 04       		.uleb128 0x4
 2324 018e B7070000 		.4byte	.LASF35
 2325 0192 07       		.byte	0x7
 2326 0193 25       		.byte	0x25
 2327 0194 82010000 		.4byte	0x182
 2328 0198 06       		.uleb128 0x6
 2329 0199 6C010000 		.4byte	0x16c
 2330 019d 0C       		.uleb128 0xc
 2331 019e 01       		.byte	0x1
 2332 019f 5A000000 		.4byte	0x5a
 2333 01a3 01       		.byte	0x1
 2334 01a4 B7       		.byte	0xb7
 2335 01a5 C2010000 		.4byte	0x1c2
 2336 01a9 0D       		.uleb128 0xd
 2337 01aa DF060000 		.4byte	.LASF36
 2338 01ae 00       		.byte	0
 2339 01af 0D       		.uleb128 0xd
 2340 01b0 61000000 		.4byte	.LASF37
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 71


 2341 01b4 01       		.byte	0x1
 2342 01b5 0D       		.uleb128 0xd
 2343 01b6 5C010000 		.4byte	.LASF38
 2344 01ba 02       		.byte	0x2
 2345 01bb 0D       		.uleb128 0xd
 2346 01bc 7B070000 		.4byte	.LASF39
 2347 01c0 03       		.byte	0x3
 2348 01c1 00       		.byte	0
 2349 01c2 04       		.uleb128 0x4
 2350 01c3 AA060000 		.4byte	.LASF40
 2351 01c7 01       		.byte	0x1
 2352 01c8 BC       		.byte	0xbc
 2353 01c9 9D010000 		.4byte	0x19d
 2354 01cd 0C       		.uleb128 0xc
 2355 01ce 01       		.byte	0x1
 2356 01cf 5A000000 		.4byte	0x5a
 2357 01d3 01       		.byte	0x1
 2358 01d4 C1       		.byte	0xc1
 2359 01d5 10020000 		.4byte	0x210
 2360 01d9 0D       		.uleb128 0xd
 2361 01da 0E050000 		.4byte	.LASF41
 2362 01de 00       		.byte	0
 2363 01df 0D       		.uleb128 0xd
 2364 01e0 83030000 		.4byte	.LASF42
 2365 01e4 01       		.byte	0x1
 2366 01e5 0D       		.uleb128 0xd
 2367 01e6 57000000 		.4byte	.LASF43
 2368 01ea 02       		.byte	0x2
 2369 01eb 0D       		.uleb128 0xd
 2370 01ec F3040000 		.4byte	.LASF44
 2371 01f0 04       		.byte	0x4
 2372 01f1 0D       		.uleb128 0xd
 2373 01f2 1C070000 		.4byte	.LASF45
 2374 01f6 08       		.byte	0x8
 2375 01f7 0D       		.uleb128 0xd
 2376 01f8 9C050000 		.4byte	.LASF46
 2377 01fc 10       		.byte	0x10
 2378 01fd 0D       		.uleb128 0xd
 2379 01fe 90090000 		.4byte	.LASF47
 2380 0202 20       		.byte	0x20
 2381 0203 0D       		.uleb128 0xd
 2382 0204 95090000 		.4byte	.LASF48
 2383 0208 40       		.byte	0x40
 2384 0209 0D       		.uleb128 0xd
 2385 020a 9A090000 		.4byte	.LASF49
 2386 020e 80       		.byte	0x80
 2387 020f 00       		.byte	0
 2388 0210 04       		.uleb128 0x4
 2389 0211 FD0A0000 		.4byte	.LASF50
 2390 0215 01       		.byte	0x1
 2391 0216 CB       		.byte	0xcb
 2392 0217 CD010000 		.4byte	0x1cd
 2393 021b 0C       		.uleb128 0xc
 2394 021c 01       		.byte	0x1
 2395 021d 5A000000 		.4byte	0x5a
 2396 0221 01       		.byte	0x1
 2397 0222 F0       		.byte	0xf0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 72


 2398 0223 46020000 		.4byte	0x246
 2399 0227 0D       		.uleb128 0xd
 2400 0228 6D090000 		.4byte	.LASF51
 2401 022c 00       		.byte	0
 2402 022d 0D       		.uleb128 0xd
 2403 022e A90A0000 		.4byte	.LASF52
 2404 0232 01       		.byte	0x1
 2405 0233 0D       		.uleb128 0xd
 2406 0234 5A080000 		.4byte	.LASF53
 2407 0238 02       		.byte	0x2
 2408 0239 0D       		.uleb128 0xd
 2409 023a B2050000 		.4byte	.LASF54
 2410 023e 03       		.byte	0x3
 2411 023f 0D       		.uleb128 0xd
 2412 0240 92080000 		.4byte	.LASF55
 2413 0244 04       		.byte	0x4
 2414 0245 00       		.byte	0
 2415 0246 04       		.uleb128 0x4
 2416 0247 88010000 		.4byte	.LASF56
 2417 024b 01       		.byte	0x1
 2418 024c F6       		.byte	0xf6
 2419 024d 1B020000 		.4byte	0x21b
 2420 0251 0E       		.uleb128 0xe
 2421 0252 03       		.byte	0x3
 2422 0253 01       		.byte	0x1
 2423 0254 FB       		.byte	0xfb
 2424 0255 7E020000 		.4byte	0x27e
 2425 0259 0F       		.uleb128 0xf
 2426 025a D4010000 		.4byte	.LASF57
 2427 025e 01       		.byte	0x1
 2428 025f FC       		.byte	0xfc
 2429 0260 A5000000 		.4byte	0xa5
 2430 0264 00       		.byte	0
 2431 0265 0F       		.uleb128 0xf
 2432 0266 FE050000 		.4byte	.LASF58
 2433 026a 01       		.byte	0x1
 2434 026b FD       		.byte	0xfd
 2435 026c A5000000 		.4byte	0xa5
 2436 0270 01       		.byte	0x1
 2437 0271 0F       		.uleb128 0xf
 2438 0272 C3040000 		.4byte	.LASF59
 2439 0276 01       		.byte	0x1
 2440 0277 FE       		.byte	0xfe
 2441 0278 A5000000 		.4byte	0xa5
 2442 027c 02       		.byte	0x2
 2443 027d 00       		.byte	0
 2444 027e 04       		.uleb128 0x4
 2445 027f 2E040000 		.4byte	.LASF60
 2446 0283 01       		.byte	0x1
 2447 0284 FF       		.byte	0xff
 2448 0285 51020000 		.4byte	0x251
 2449 0289 10       		.uleb128 0x10
 2450 028a 13       		.byte	0x13
 2451 028b 01       		.byte	0x1
 2452 028c 0201     		.2byte	0x102
 2453 028e 12030000 		.4byte	0x312
 2454 0292 11       		.uleb128 0x11
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 73


 2455 0293 D4010000 		.4byte	.LASF57
 2456 0297 01       		.byte	0x1
 2457 0298 0301     		.2byte	0x103
 2458 029a A5000000 		.4byte	0xa5
 2459 029e 00       		.byte	0
 2460 029f 11       		.uleb128 0x11
 2461 02a0 FE050000 		.4byte	.LASF58
 2462 02a4 01       		.byte	0x1
 2463 02a5 0401     		.2byte	0x104
 2464 02a7 A5000000 		.4byte	0xa5
 2465 02ab 01       		.byte	0x1
 2466 02ac 11       		.uleb128 0x11
 2467 02ad C3040000 		.4byte	.LASF59
 2468 02b1 01       		.byte	0x1
 2469 02b2 0501     		.2byte	0x105
 2470 02b4 A5000000 		.4byte	0xa5
 2471 02b8 02       		.byte	0x2
 2472 02b9 11       		.uleb128 0x11
 2473 02ba 05070000 		.4byte	.LASF61
 2474 02be 01       		.byte	0x1
 2475 02bf 0601     		.2byte	0x106
 2476 02c1 A5000000 		.4byte	0xa5
 2477 02c5 03       		.byte	0x3
 2478 02c6 12       		.uleb128 0x12
 2479 02c7 4B7000   		.ascii	"Kp\000"
 2480 02ca 01       		.byte	0x1
 2481 02cb 0701     		.2byte	0x107
 2482 02cd 25000000 		.4byte	0x25
 2483 02d1 04       		.byte	0x4
 2484 02d2 12       		.uleb128 0x12
 2485 02d3 4B6900   		.ascii	"Ki\000"
 2486 02d6 01       		.byte	0x1
 2487 02d7 0801     		.2byte	0x108
 2488 02d9 25000000 		.4byte	0x25
 2489 02dd 08       		.byte	0x8
 2490 02de 12       		.uleb128 0x12
 2491 02df 4B6400   		.ascii	"Kd\000"
 2492 02e2 01       		.byte	0x1
 2493 02e3 0901     		.2byte	0x109
 2494 02e5 25000000 		.4byte	0x25
 2495 02e9 0C       		.byte	0xc
 2496 02ea 11       		.uleb128 0x11
 2497 02eb F6090000 		.4byte	.LASF62
 2498 02ef 01       		.byte	0x1
 2499 02f0 0A01     		.2byte	0x10a
 2500 02f2 A5000000 		.4byte	0xa5
 2501 02f6 10       		.byte	0x10
 2502 02f7 11       		.uleb128 0x11
 2503 02f8 4C030000 		.4byte	.LASF63
 2504 02fc 01       		.byte	0x1
 2505 02fd 0B01     		.2byte	0x10b
 2506 02ff A5000000 		.4byte	0xa5
 2507 0303 11       		.byte	0x11
 2508 0304 11       		.uleb128 0x11
 2509 0305 4B000000 		.4byte	.LASF64
 2510 0309 01       		.byte	0x1
 2511 030a 0C01     		.2byte	0x10c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 74


 2512 030c A5000000 		.4byte	0xa5
 2513 0310 12       		.byte	0x12
 2514 0311 00       		.byte	0
 2515 0312 05       		.uleb128 0x5
 2516 0313 3E070000 		.4byte	.LASF65
 2517 0317 01       		.byte	0x1
 2518 0318 0D01     		.2byte	0x10d
 2519 031a 89020000 		.4byte	0x289
 2520 031e 10       		.uleb128 0x10
 2521 031f 0A       		.byte	0xa
 2522 0320 01       		.byte	0x1
 2523 0321 1001     		.2byte	0x110
 2524 0323 83030000 		.4byte	0x383
 2525 0327 11       		.uleb128 0x11
 2526 0328 D4010000 		.4byte	.LASF57
 2527 032c 01       		.byte	0x1
 2528 032d 1101     		.2byte	0x111
 2529 032f A5000000 		.4byte	0xa5
 2530 0333 00       		.byte	0
 2531 0334 11       		.uleb128 0x11
 2532 0335 FE050000 		.4byte	.LASF58
 2533 0339 01       		.byte	0x1
 2534 033a 1201     		.2byte	0x112
 2535 033c A5000000 		.4byte	0xa5
 2536 0340 01       		.byte	0x1
 2537 0341 11       		.uleb128 0x11
 2538 0342 C3040000 		.4byte	.LASF59
 2539 0346 01       		.byte	0x1
 2540 0347 1301     		.2byte	0x113
 2541 0349 A5000000 		.4byte	0xa5
 2542 034d 02       		.byte	0x2
 2543 034e 11       		.uleb128 0x11
 2544 034f 7D020000 		.4byte	.LASF66
 2545 0353 01       		.byte	0x1
 2546 0354 1401     		.2byte	0x114
 2547 0356 A5000000 		.4byte	0xa5
 2548 035a 03       		.byte	0x3
 2549 035b 11       		.uleb128 0x11
 2550 035c 06080000 		.4byte	.LASF67
 2551 0360 01       		.byte	0x1
 2552 0361 1501     		.2byte	0x115
 2553 0363 E1000000 		.4byte	0xe1
 2554 0367 04       		.byte	0x4
 2555 0368 12       		.uleb128 0x12
 2556 0369 6A6F6700 		.ascii	"jog\000"
 2557 036d 01       		.byte	0x1
 2558 036e 1601     		.2byte	0x116
 2559 0370 C9000000 		.4byte	0xc9
 2560 0374 08       		.byte	0x8
 2561 0375 11       		.uleb128 0x11
 2562 0376 AC000000 		.4byte	.LASF68
 2563 037a 01       		.byte	0x1
 2564 037b 1701     		.2byte	0x117
 2565 037d A5000000 		.4byte	0xa5
 2566 0381 09       		.byte	0x9
 2567 0382 00       		.byte	0
 2568 0383 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 75


 2569 0384 9C010000 		.4byte	.LASF69
 2570 0388 01       		.byte	0x1
 2571 0389 1801     		.2byte	0x118
 2572 038b 1E030000 		.4byte	0x31e
 2573 038f 13       		.uleb128 0x13
 2574 0390 1E       		.byte	0x1e
 2575 0391 01       		.byte	0x1
 2576 0392 1D01     		.2byte	0x11d
 2577 0394 C9030000 		.4byte	0x3c9
 2578 0398 14       		.uleb128 0x14
 2579 0399 62756600 		.ascii	"buf\000"
 2580 039d 01       		.byte	0x1
 2581 039e 1E01     		.2byte	0x11e
 2582 03a0 C9030000 		.4byte	0x3c9
 2583 03a4 15       		.uleb128 0x15
 2584 03a5 78040000 		.4byte	.LASF70
 2585 03a9 01       		.byte	0x1
 2586 03aa 1F01     		.2byte	0x11f
 2587 03ac 7E020000 		.4byte	0x27e
 2588 03b0 15       		.uleb128 0x15
 2589 03b1 15070000 		.4byte	.LASF71
 2590 03b5 01       		.byte	0x1
 2591 03b6 2001     		.2byte	0x120
 2592 03b8 12030000 		.4byte	0x312
 2593 03bc 15       		.uleb128 0x15
 2594 03bd EC040000 		.4byte	.LASF72
 2595 03c1 01       		.byte	0x1
 2596 03c2 2101     		.2byte	0x121
 2597 03c4 83030000 		.4byte	0x383
 2598 03c8 00       		.byte	0
 2599 03c9 16       		.uleb128 0x16
 2600 03ca A5000000 		.4byte	0xa5
 2601 03ce D9030000 		.4byte	0x3d9
 2602 03d2 17       		.uleb128 0x17
 2603 03d3 29010000 		.4byte	0x129
 2604 03d7 1D       		.byte	0x1d
 2605 03d8 00       		.byte	0
 2606 03d9 10       		.uleb128 0x10
 2607 03da 15       		.byte	0x15
 2608 03db 01       		.byte	0x1
 2609 03dc 2501     		.2byte	0x125
 2610 03de 8C040000 		.4byte	0x48c
 2611 03e2 11       		.uleb128 0x11
 2612 03e3 D4010000 		.4byte	.LASF57
 2613 03e7 01       		.byte	0x1
 2614 03e8 2601     		.2byte	0x126
 2615 03ea A5000000 		.4byte	0xa5
 2616 03ee 00       		.byte	0
 2617 03ef 11       		.uleb128 0x11
 2618 03f0 13040000 		.4byte	.LASF73
 2619 03f4 01       		.byte	0x1
 2620 03f5 2701     		.2byte	0x127
 2621 03f7 A5000000 		.4byte	0xa5
 2622 03fb 01       		.byte	0x1
 2623 03fc 11       		.uleb128 0x11
 2624 03fd 1C040000 		.4byte	.LASF74
 2625 0401 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 76


 2626 0402 2801     		.2byte	0x128
 2627 0404 A5000000 		.4byte	0xa5
 2628 0408 02       		.byte	0x2
 2629 0409 11       		.uleb128 0x11
 2630 040a 25040000 		.4byte	.LASF75
 2631 040e 01       		.byte	0x1
 2632 040f 2901     		.2byte	0x129
 2633 0411 A5000000 		.4byte	0xa5
 2634 0415 03       		.byte	0x3
 2635 0416 11       		.uleb128 0x11
 2636 0417 FE050000 		.4byte	.LASF58
 2637 041b 01       		.byte	0x1
 2638 041c 2A01     		.2byte	0x12a
 2639 041e A5000000 		.4byte	0xa5
 2640 0422 04       		.byte	0x4
 2641 0423 11       		.uleb128 0x11
 2642 0424 C3040000 		.4byte	.LASF59
 2643 0428 01       		.byte	0x1
 2644 0429 2B01     		.2byte	0x12b
 2645 042b A5000000 		.4byte	0xa5
 2646 042f 05       		.byte	0x5
 2647 0430 11       		.uleb128 0x11
 2648 0431 F0090000 		.4byte	.LASF76
 2649 0435 01       		.byte	0x1
 2650 0436 2C01     		.2byte	0x12c
 2651 0438 A5000000 		.4byte	0xa5
 2652 043c 06       		.byte	0x6
 2653 043d 11       		.uleb128 0x11
 2654 043e E00A0000 		.4byte	.LASF77
 2655 0442 01       		.byte	0x1
 2656 0443 2D01     		.2byte	0x12d
 2657 0445 A5000000 		.4byte	0xa5
 2658 0449 07       		.byte	0x7
 2659 044a 11       		.uleb128 0x11
 2660 044b 05070000 		.4byte	.LASF61
 2661 044f 01       		.byte	0x1
 2662 0450 2E01     		.2byte	0x12e
 2663 0452 A5000000 		.4byte	0xa5
 2664 0456 08       		.byte	0x8
 2665 0457 11       		.uleb128 0x11
 2666 0458 EE050000 		.4byte	.LASF78
 2667 045c 01       		.byte	0x1
 2668 045d 2F01     		.2byte	0x12f
 2669 045f B1000000 		.4byte	0xb1
 2670 0463 09       		.byte	0x9
 2671 0464 11       		.uleb128 0x11
 2672 0465 690A0000 		.4byte	.LASF79
 2673 0469 01       		.byte	0x1
 2674 046a 3001     		.2byte	0x130
 2675 046c D5000000 		.4byte	0xd5
 2676 0470 0B       		.byte	0xb
 2677 0471 11       		.uleb128 0x11
 2678 0472 F40A0000 		.4byte	.LASF80
 2679 0476 01       		.byte	0x1
 2680 0477 3101     		.2byte	0x131
 2681 0479 E1000000 		.4byte	0xe1
 2682 047d 0D       		.byte	0xd
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 77


 2683 047e 12       		.uleb128 0x12
 2684 047f 70776D00 		.ascii	"pwm\000"
 2685 0483 01       		.byte	0x1
 2686 0484 3201     		.2byte	0x132
 2687 0486 25000000 		.4byte	0x25
 2688 048a 11       		.byte	0x11
 2689 048b 00       		.byte	0
 2690 048c 05       		.uleb128 0x5
 2691 048d FA070000 		.4byte	.LASF81
 2692 0491 01       		.byte	0x1
 2693 0492 3301     		.2byte	0x133
 2694 0494 D9030000 		.4byte	0x3d9
 2695 0498 13       		.uleb128 0x13
 2696 0499 1E       		.byte	0x1e
 2697 049a 01       		.byte	0x1
 2698 049b 3601     		.2byte	0x136
 2699 049d BA040000 		.4byte	0x4ba
 2700 04a1 14       		.uleb128 0x14
 2701 04a2 62756600 		.ascii	"buf\000"
 2702 04a6 01       		.byte	0x1
 2703 04a7 3701     		.2byte	0x137
 2704 04a9 C9030000 		.4byte	0x3c9
 2705 04ad 14       		.uleb128 0x14
 2706 04ae 6D736700 		.ascii	"msg\000"
 2707 04b2 01       		.byte	0x1
 2708 04b3 3801     		.2byte	0x138
 2709 04b5 8C040000 		.4byte	0x48c
 2710 04b9 00       		.byte	0
 2711 04ba 18       		.uleb128 0x18
 2712 04bb 01       		.byte	0x1
 2713 04bc 5A000000 		.4byte	0x5a
 2714 04c0 01       		.byte	0x1
 2715 04c1 3C01     		.2byte	0x13c
 2716 04c3 D4040000 		.4byte	0x4d4
 2717 04c7 0D       		.uleb128 0xd
 2718 04c8 3C000000 		.4byte	.LASF82
 2719 04cc 00       		.byte	0
 2720 04cd 0D       		.uleb128 0xd
 2721 04ce 0A060000 		.4byte	.LASF83
 2722 04d2 01       		.byte	0x1
 2723 04d3 00       		.byte	0
 2724 04d4 05       		.uleb128 0x5
 2725 04d5 06010000 		.4byte	.LASF84
 2726 04d9 01       		.byte	0x1
 2727 04da 3F01     		.2byte	0x13f
 2728 04dc BA040000 		.4byte	0x4ba
 2729 04e0 19       		.uleb128 0x19
 2730 04e1 E60A0000 		.4byte	.LASF85
 2731 04e5 01       		.byte	0x1
 2732 04e6 F404     		.2byte	0x4f4
 2733 04e8 00000000 		.4byte	.LFB46
 2734 04ec 18000000 		.4byte	.LFE46-.LFB46
 2735 04f0 01       		.uleb128 0x1
 2736 04f1 9C       		.byte	0x9c
 2737 04f2 2B050000 		.4byte	0x52b
 2738 04f6 1A       		.uleb128 0x1a
 2739 04f7 06000000 		.4byte	.LVL0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 78


 2740 04fb B1120000 		.4byte	0x12b1
 2741 04ff 1A       		.uleb128 0x1a
 2742 0500 0A000000 		.4byte	.LVL1
 2743 0504 BC120000 		.4byte	0x12bc
 2744 0508 1B       		.uleb128 0x1b
 2745 0509 10000000 		.4byte	.LVL2
 2746 050d C7120000 		.4byte	0x12c7
 2747 0511 1B050000 		.4byte	0x51b
 2748 0515 1C       		.uleb128 0x1c
 2749 0516 01       		.uleb128 0x1
 2750 0517 50       		.byte	0x50
 2751 0518 01       		.uleb128 0x1
 2752 0519 30       		.byte	0x30
 2753 051a 00       		.byte	0
 2754 051b 1D       		.uleb128 0x1d
 2755 051c 16000000 		.4byte	.LVL3
 2756 0520 D2120000 		.4byte	0x12d2
 2757 0524 1C       		.uleb128 0x1c
 2758 0525 01       		.uleb128 0x1
 2759 0526 50       		.byte	0x50
 2760 0527 01       		.uleb128 0x1
 2761 0528 30       		.byte	0x30
 2762 0529 00       		.byte	0
 2763 052a 00       		.byte	0
 2764 052b 19       		.uleb128 0x19
 2765 052c F7000000 		.4byte	.LASF86
 2766 0530 01       		.byte	0x1
 2767 0531 0E05     		.2byte	0x50e
 2768 0533 00000000 		.4byte	.LFB47
 2769 0537 12000000 		.4byte	.LFE47-.LFB47
 2770 053b 01       		.uleb128 0x1
 2771 053c 9C       		.byte	0x9c
 2772 053d 63050000 		.4byte	0x563
 2773 0541 1A       		.uleb128 0x1a
 2774 0542 06000000 		.4byte	.LVL4
 2775 0546 DD120000 		.4byte	0x12dd
 2776 054a 1A       		.uleb128 0x1a
 2777 054b 0A000000 		.4byte	.LVL5
 2778 054f E8120000 		.4byte	0x12e8
 2779 0553 1D       		.uleb128 0x1d
 2780 0554 10000000 		.4byte	.LVL6
 2781 0558 C7120000 		.4byte	0x12c7
 2782 055c 1C       		.uleb128 0x1c
 2783 055d 01       		.uleb128 0x1
 2784 055e 50       		.byte	0x50
 2785 055f 01       		.uleb128 0x1
 2786 0560 30       		.byte	0x30
 2787 0561 00       		.byte	0
 2788 0562 00       		.byte	0
 2789 0563 19       		.uleb128 0x19
 2790 0564 75060000 		.4byte	.LASF87
 2791 0568 01       		.byte	0x1
 2792 0569 2505     		.2byte	0x525
 2793 056b 00000000 		.4byte	.LFB48
 2794 056f 5C000000 		.4byte	.LFE48-.LFB48
 2795 0573 01       		.uleb128 0x1
 2796 0574 9C       		.byte	0x9c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 79


 2797 0575 DF050000 		.4byte	0x5df
 2798 0579 1E       		.uleb128 0x1e
 2799 057a 6900     		.ascii	"i\000"
 2800 057c 01       		.byte	0x1
 2801 057d 2705     		.2byte	0x527
 2802 057f BD000000 		.4byte	0xbd
 2803 0583 00000000 		.4byte	.LLST0
 2804 0587 1A       		.uleb128 0x1a
 2805 0588 06000000 		.4byte	.LVL7
 2806 058c F3120000 		.4byte	0x12f3
 2807 0590 1A       		.uleb128 0x1a
 2808 0591 0A000000 		.4byte	.LVL8
 2809 0595 FE120000 		.4byte	0x12fe
 2810 0599 1A       		.uleb128 0x1a
 2811 059a 12000000 		.4byte	.LVL9
 2812 059e 09130000 		.4byte	0x1309
 2813 05a2 1B       		.uleb128 0x1b
 2814 05a3 28000000 		.4byte	.LVL10
 2815 05a7 15130000 		.4byte	0x1315
 2816 05ab C3050000 		.4byte	0x5c3
 2817 05af 1C       		.uleb128 0x1c
 2818 05b0 01       		.uleb128 0x1
 2819 05b1 50       		.byte	0x50
 2820 05b2 05       		.uleb128 0x5
 2821 05b3 03       		.byte	0x3
 2822 05b4 00000000 		.4byte	txMessage
 2823 05b8 1C       		.uleb128 0x1c
 2824 05b9 01       		.uleb128 0x1
 2825 05ba 51       		.byte	0x51
 2826 05bb 01       		.uleb128 0x1
 2827 05bc 30       		.byte	0x30
 2828 05bd 1C       		.uleb128 0x1c
 2829 05be 01       		.uleb128 0x1
 2830 05bf 52       		.byte	0x52
 2831 05c0 01       		.uleb128 0x1
 2832 05c1 4E       		.byte	0x4e
 2833 05c2 00       		.byte	0
 2834 05c3 1A       		.uleb128 0x1a
 2835 05c4 30000000 		.4byte	.LVL12
 2836 05c8 1E130000 		.4byte	0x131e
 2837 05cc 1A       		.uleb128 0x1a
 2838 05cd 3E000000 		.4byte	.LVL14
 2839 05d1 2A130000 		.4byte	0x132a
 2840 05d5 1A       		.uleb128 0x1a
 2841 05d6 42000000 		.4byte	.LVL15
 2842 05da 36130000 		.4byte	0x1336
 2843 05de 00       		.byte	0
 2844 05df 19       		.uleb128 0x19
 2845 05e0 34020000 		.4byte	.LASF88
 2846 05e4 01       		.byte	0x1
 2847 05e5 5901     		.2byte	0x159
 2848 05e7 00000000 		.4byte	.LFB32
 2849 05eb 28000000 		.4byte	.LFE32-.LFB32
 2850 05ef 01       		.uleb128 0x1
 2851 05f0 9C       		.byte	0x9c
 2852 05f1 2B060000 		.4byte	0x62b
 2853 05f5 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 80


 2854 05f6 0A000000 		.4byte	.LVL17
 2855 05fa 42130000 		.4byte	0x1342
 2856 05fe 08060000 		.4byte	0x608
 2857 0602 1C       		.uleb128 0x1c
 2858 0603 01       		.uleb128 0x1
 2859 0604 50       		.byte	0x50
 2860 0605 01       		.uleb128 0x1
 2861 0606 3B       		.byte	0x3b
 2862 0607 00       		.byte	0
 2863 0608 1B       		.uleb128 0x1b
 2864 0609 12000000 		.4byte	.LVL18
 2865 060d 42130000 		.4byte	0x1342
 2866 0611 1B060000 		.4byte	0x61b
 2867 0615 1C       		.uleb128 0x1c
 2868 0616 01       		.uleb128 0x1
 2869 0617 50       		.byte	0x50
 2870 0618 01       		.uleb128 0x1
 2871 0619 3E       		.byte	0x3e
 2872 061a 00       		.byte	0
 2873 061b 1D       		.uleb128 0x1d
 2874 061c 1A000000 		.4byte	.LVL19
 2875 0620 42130000 		.4byte	0x1342
 2876 0624 1C       		.uleb128 0x1c
 2877 0625 01       		.uleb128 0x1
 2878 0626 50       		.byte	0x50
 2879 0627 01       		.uleb128 0x1
 2880 0628 3F       		.byte	0x3f
 2881 0629 00       		.byte	0
 2882 062a 00       		.byte	0
 2883 062b 19       		.uleb128 0x19
 2884 062c AF010000 		.4byte	.LASF89
 2885 0630 01       		.byte	0x1
 2886 0631 7101     		.2byte	0x171
 2887 0633 00000000 		.4byte	.LFB33
 2888 0637 1C000000 		.4byte	.LFE33-.LFB33
 2889 063b 01       		.uleb128 0x1
 2890 063c 9C       		.byte	0x9c
 2891 063d 52060000 		.4byte	0x652
 2892 0641 1F       		.uleb128 0x1f
 2893 0642 E00A0000 		.4byte	.LASF77
 2894 0646 01       		.byte	0x1
 2895 0647 7101     		.2byte	0x171
 2896 0649 10020000 		.4byte	0x210
 2897 064d 1F000000 		.4byte	.LLST1
 2898 0651 00       		.byte	0
 2899 0652 20       		.uleb128 0x20
 2900 0653 00000000 		.4byte	.LASF97
 2901 0657 01       		.byte	0x1
 2902 0658 A601     		.2byte	0x1a6
 2903 065a 00000000 		.4byte	.LFB35
 2904 065e D8000000 		.4byte	.LFE35-.LFB35
 2905 0662 01       		.uleb128 0x1
 2906 0663 9C       		.byte	0x9c
 2907 0664 11080000 		.4byte	0x811
 2908 0668 21       		.uleb128 0x21
 2909 0669 61726700 		.ascii	"arg\000"
 2910 066d 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 81


 2911 066e A601     		.2byte	0x1a6
 2912 0670 30010000 		.4byte	0x130
 2913 0674 40000000 		.4byte	.LLST2
 2914 0678 22       		.uleb128 0x22
 2915 0679 65727200 		.ascii	"err\000"
 2916 067d 01       		.byte	0x1
 2917 067e A801     		.2byte	0x1a8
 2918 0680 11010000 		.4byte	0x111
 2919 0684 02       		.uleb128 0x2
 2920 0685 91       		.byte	0x91
 2921 0686 74       		.sleb128 -12
 2922 0687 23       		.uleb128 0x23
 2923 0688 75020000 		.4byte	.LASF90
 2924 068c 01       		.byte	0x1
 2925 068d A901     		.2byte	0x1a9
 2926 068f A5000000 		.4byte	0xa5
 2927 0693 61000000 		.4byte	.LLST3
 2928 0697 23       		.uleb128 0x23
 2929 0698 020A0000 		.4byte	.LASF91
 2930 069c 01       		.byte	0x1
 2931 069d AA01     		.2byte	0x1aa
 2932 069f A5000000 		.4byte	0xa5
 2933 06a3 76000000 		.4byte	.LLST4
 2934 06a7 24       		.uleb128 0x24
 2935 06a8 DF030000 		.4byte	.LASF92
 2936 06ac 01       		.byte	0x1
 2937 06ad AB01     		.2byte	0x1ab
 2938 06af 11080000 		.4byte	0x811
 2939 06b3 02       		.uleb128 0x2
 2940 06b4 91       		.byte	0x91
 2941 06b5 72       		.sleb128 -14
 2942 06b6 1B       		.uleb128 0x1b
 2943 06b7 0A000000 		.4byte	.LVL24
 2944 06bb 4D130000 		.4byte	0x134d
 2945 06bf C9060000 		.4byte	0x6c9
 2946 06c3 1C       		.uleb128 0x1c
 2947 06c4 01       		.uleb128 0x1
 2948 06c5 50       		.byte	0x50
 2949 06c6 01       		.uleb128 0x1
 2950 06c7 30       		.byte	0x30
 2951 06c8 00       		.byte	0
 2952 06c9 1B       		.uleb128 0x1b
 2953 06ca 18000000 		.4byte	.LVL25
 2954 06ce 59130000 		.4byte	0x1359
 2955 06d2 E7060000 		.4byte	0x6e7
 2956 06d6 1C       		.uleb128 0x1c
 2957 06d7 01       		.uleb128 0x1
 2958 06d8 50       		.byte	0x50
 2959 06d9 02       		.uleb128 0x2
 2960 06da 08       		.byte	0x8
 2961 06db 40       		.byte	0x40
 2962 06dc 1C       		.uleb128 0x1c
 2963 06dd 01       		.uleb128 0x1
 2964 06de 51       		.byte	0x51
 2965 06df 01       		.uleb128 0x1
 2966 06e0 30       		.byte	0x30
 2967 06e1 1C       		.uleb128 0x1c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 82


 2968 06e2 01       		.uleb128 0x1
 2969 06e3 52       		.byte	0x52
 2970 06e4 01       		.uleb128 0x1
 2971 06e5 3A       		.byte	0x3a
 2972 06e6 00       		.byte	0
 2973 06e7 1B       		.uleb128 0x1b
 2974 06e8 28000000 		.4byte	.LVL26
 2975 06ec 65130000 		.4byte	0x1365
 2976 06f0 FF060000 		.4byte	0x6ff
 2977 06f4 1C       		.uleb128 0x1c
 2978 06f5 01       		.uleb128 0x1
 2979 06f6 50       		.byte	0x50
 2980 06f7 01       		.uleb128 0x1
 2981 06f8 35       		.byte	0x35
 2982 06f9 1C       		.uleb128 0x1c
 2983 06fa 01       		.uleb128 0x1
 2984 06fb 51       		.byte	0x51
 2985 06fc 01       		.uleb128 0x1
 2986 06fd 3A       		.byte	0x3a
 2987 06fe 00       		.byte	0
 2988 06ff 1B       		.uleb128 0x1b
 2989 0700 30000000 		.4byte	.LVL27
 2990 0704 65130000 		.4byte	0x1365
 2991 0708 18070000 		.4byte	0x718
 2992 070c 1C       		.uleb128 0x1c
 2993 070d 01       		.uleb128 0x1
 2994 070e 50       		.byte	0x50
 2995 070f 02       		.uleb128 0x2
 2996 0710 08       		.byte	0x8
 2997 0711 20       		.byte	0x20
 2998 0712 1C       		.uleb128 0x1c
 2999 0713 01       		.uleb128 0x1
 3000 0714 51       		.byte	0x51
 3001 0715 01       		.uleb128 0x1
 3002 0716 3A       		.byte	0x3a
 3003 0717 00       		.byte	0
 3004 0718 1B       		.uleb128 0x1b
 3005 0719 38000000 		.4byte	.LVL28
 3006 071d 65130000 		.4byte	0x1365
 3007 0721 30070000 		.4byte	0x730
 3008 0725 1C       		.uleb128 0x1c
 3009 0726 01       		.uleb128 0x1
 3010 0727 50       		.byte	0x50
 3011 0728 01       		.uleb128 0x1
 3012 0729 30       		.byte	0x30
 3013 072a 1C       		.uleb128 0x1c
 3014 072b 01       		.uleb128 0x1
 3015 072c 51       		.byte	0x51
 3016 072d 01       		.uleb128 0x1
 3017 072e 3A       		.byte	0x3a
 3018 072f 00       		.byte	0
 3019 0730 1B       		.uleb128 0x1b
 3020 0731 3E000000 		.4byte	.LVL29
 3021 0735 71130000 		.4byte	0x1371
 3022 0739 43070000 		.4byte	0x743
 3023 073d 1C       		.uleb128 0x1c
 3024 073e 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 83


 3025 073f 50       		.byte	0x50
 3026 0740 01       		.uleb128 0x1
 3027 0741 3A       		.byte	0x3a
 3028 0742 00       		.byte	0
 3029 0743 1B       		.uleb128 0x1b
 3030 0744 4C000000 		.4byte	.LVL31
 3031 0748 2B060000 		.4byte	0x62b
 3032 074c 56070000 		.4byte	0x756
 3033 0750 1C       		.uleb128 0x1c
 3034 0751 01       		.uleb128 0x1
 3035 0752 50       		.byte	0x50
 3036 0753 01       		.uleb128 0x1
 3037 0754 38       		.byte	0x38
 3038 0755 00       		.byte	0
 3039 0756 1B       		.uleb128 0x1b
 3040 0757 56000000 		.4byte	.LVL32
 3041 075b 59130000 		.4byte	0x1359
 3042 075f 74070000 		.4byte	0x774
 3043 0763 1C       		.uleb128 0x1c
 3044 0764 01       		.uleb128 0x1
 3045 0765 50       		.byte	0x50
 3046 0766 02       		.uleb128 0x2
 3047 0767 08       		.byte	0x8
 3048 0768 40       		.byte	0x40
 3049 0769 1C       		.uleb128 0x1c
 3050 076a 01       		.uleb128 0x1
 3051 076b 51       		.byte	0x51
 3052 076c 01       		.uleb128 0x1
 3053 076d 30       		.byte	0x30
 3054 076e 1C       		.uleb128 0x1c
 3055 076f 01       		.uleb128 0x1
 3056 0770 52       		.byte	0x52
 3057 0771 01       		.uleb128 0x1
 3058 0772 3A       		.byte	0x3a
 3059 0773 00       		.byte	0
 3060 0774 1B       		.uleb128 0x1b
 3061 0775 66000000 		.4byte	.LVL33
 3062 0779 65130000 		.4byte	0x1365
 3063 077d 8C070000 		.4byte	0x78c
 3064 0781 1C       		.uleb128 0x1c
 3065 0782 01       		.uleb128 0x1
 3066 0783 50       		.byte	0x50
 3067 0784 01       		.uleb128 0x1
 3068 0785 34       		.byte	0x34
 3069 0786 1C       		.uleb128 0x1c
 3070 0787 01       		.uleb128 0x1
 3071 0788 51       		.byte	0x51
 3072 0789 01       		.uleb128 0x1
 3073 078a 3A       		.byte	0x3a
 3074 078b 00       		.byte	0
 3075 078c 1B       		.uleb128 0x1b
 3076 078d 6C000000 		.4byte	.LVL34
 3077 0791 71130000 		.4byte	0x1371
 3078 0795 9F070000 		.4byte	0x79f
 3079 0799 1C       		.uleb128 0x1c
 3080 079a 01       		.uleb128 0x1
 3081 079b 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 84


 3082 079c 01       		.uleb128 0x1
 3083 079d 3A       		.byte	0x3a
 3084 079e 00       		.byte	0
 3085 079f 1B       		.uleb128 0x1b
 3086 07a0 78000000 		.4byte	.LVL35
 3087 07a4 7D130000 		.4byte	0x137d
 3088 07a8 C6070000 		.4byte	0x7c6
 3089 07ac 1C       		.uleb128 0x1c
 3090 07ad 01       		.uleb128 0x1
 3091 07ae 50       		.byte	0x50
 3092 07af 02       		.uleb128 0x2
 3093 07b0 08       		.byte	0x8
 3094 07b1 40       		.byte	0x40
 3095 07b2 1C       		.uleb128 0x1c
 3096 07b3 01       		.uleb128 0x1
 3097 07b4 51       		.byte	0x51
 3098 07b5 05       		.uleb128 0x5
 3099 07b6 03       		.byte	0x3
 3100 07b7 00000000 		.4byte	CurrentI2Cinbuf
 3101 07bb 1C       		.uleb128 0x1c
 3102 07bc 01       		.uleb128 0x1
 3103 07bd 52       		.byte	0x52
 3104 07be 01       		.uleb128 0x1
 3105 07bf 35       		.byte	0x35
 3106 07c0 1C       		.uleb128 0x1c
 3107 07c1 01       		.uleb128 0x1
 3108 07c2 53       		.byte	0x53
 3109 07c3 01       		.uleb128 0x1
 3110 07c4 31       		.byte	0x31
 3111 07c5 00       		.byte	0
 3112 07c6 1B       		.uleb128 0x1b
 3113 07c7 9E000000 		.4byte	.LVL36
 3114 07cb 2B060000 		.4byte	0x62b
 3115 07cf D9070000 		.4byte	0x7d9
 3116 07d3 1C       		.uleb128 0x1c
 3117 07d4 01       		.uleb128 0x1
 3118 07d5 50       		.byte	0x50
 3119 07d6 01       		.uleb128 0x1
 3120 07d7 38       		.byte	0x38
 3121 07d8 00       		.byte	0
 3122 07d9 1B       		.uleb128 0x1b
 3123 07da AC000000 		.4byte	.LVL37
 3124 07de 2B060000 		.4byte	0x62b
 3125 07e2 EC070000 		.4byte	0x7ec
 3126 07e6 1C       		.uleb128 0x1c
 3127 07e7 01       		.uleb128 0x1
 3128 07e8 50       		.byte	0x50
 3129 07e9 01       		.uleb128 0x1
 3130 07ea 38       		.byte	0x38
 3131 07eb 00       		.byte	0
 3132 07ec 1B       		.uleb128 0x1b
 3133 07ed C0000000 		.4byte	.LVL38
 3134 07f1 89130000 		.4byte	0x1389
 3135 07f5 01080000 		.4byte	0x801
 3136 07f9 1C       		.uleb128 0x1c
 3137 07fa 01       		.uleb128 0x1
 3138 07fb 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 85


 3139 07fc 03       		.uleb128 0x3
 3140 07fd 0A       		.byte	0xa
 3141 07fe F401     		.2byte	0x1f4
 3142 0800 00       		.byte	0
 3143 0801 1D       		.uleb128 0x1d
 3144 0802 C6000000 		.4byte	.LVL39
 3145 0806 4D130000 		.4byte	0x134d
 3146 080a 1C       		.uleb128 0x1c
 3147 080b 01       		.uleb128 0x1
 3148 080c 50       		.byte	0x50
 3149 080d 01       		.uleb128 0x1
 3150 080e 30       		.byte	0x30
 3151 080f 00       		.byte	0
 3152 0810 00       		.byte	0
 3153 0811 06       		.uleb128 0x6
 3154 0812 D5000000 		.4byte	0xd5
 3155 0816 19       		.uleb128 0x19
 3156 0817 33010000 		.4byte	.LASF93
 3157 081b 01       		.byte	0x1
 3158 081c 8C01     		.2byte	0x18c
 3159 081e 00000000 		.4byte	.LFB34
 3160 0822 1C000000 		.4byte	.LFE34-.LFB34
 3161 0826 01       		.uleb128 0x1
 3162 0827 9C       		.byte	0x9c
 3163 0828 3B080000 		.4byte	0x83b
 3164 082c 25       		.uleb128 0x25
 3165 082d E00A0000 		.4byte	.LASF77
 3166 0831 01       		.byte	0x1
 3167 0832 8C01     		.2byte	0x18c
 3168 0834 10020000 		.4byte	0x210
 3169 0838 01       		.uleb128 0x1
 3170 0839 50       		.byte	0x50
 3171 083a 00       		.byte	0
 3172 083b 26       		.uleb128 0x26
 3173 083c 8C040000 		.4byte	.LASF94
 3174 0840 01       		.byte	0x1
 3175 0841 C202     		.2byte	0x2c2
 3176 0843 00000000 		.4byte	.LFB37
 3177 0847 40000000 		.4byte	.LFE37-.LFB37
 3178 084b 01       		.uleb128 0x1
 3179 084c 9C       		.byte	0x9c
 3180 084d 7B080000 		.4byte	0x87b
 3181 0851 1F       		.uleb128 0x1f
 3182 0852 AE090000 		.4byte	.LASF95
 3183 0856 01       		.byte	0x1
 3184 0857 C202     		.2byte	0x2c2
 3185 0859 25000000 		.4byte	0x25
 3186 085d 8A000000 		.4byte	.LLST5
 3187 0861 23       		.uleb128 0x23
 3188 0862 99030000 		.4byte	.LASF96
 3189 0866 01       		.byte	0x1
 3190 0867 C402     		.2byte	0x2c4
 3191 0869 25000000 		.4byte	0x25
 3192 086d B8000000 		.4byte	.LLST6
 3193 0871 1A       		.uleb128 0x1a
 3194 0872 36000000 		.4byte	.LVL48
 3195 0876 95130000 		.4byte	0x1395
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 86


 3196 087a 00       		.byte	0
 3197 087b 27       		.uleb128 0x27
 3198 087c 0F080000 		.4byte	.LASF98
 3199 0880 01       		.byte	0x1
 3200 0881 D902     		.2byte	0x2d9
 3201 0883 E1000000 		.4byte	0xe1
 3202 0887 00000000 		.4byte	.LFB38
 3203 088b 24000000 		.4byte	.LFE38-.LFB38
 3204 088f 01       		.uleb128 0x1
 3205 0890 9C       		.byte	0x9c
 3206 0891 BD080000 		.4byte	0x8bd
 3207 0895 23       		.uleb128 0x23
 3208 0896 EE070000 		.4byte	.LASF99
 3209 089a 01       		.byte	0x1
 3210 089b DB02     		.2byte	0x2db
 3211 089d BD000000 		.4byte	0xbd
 3212 08a1 E1000000 		.4byte	.LLST7
 3213 08a5 24       		.uleb128 0x24
 3214 08a6 06020000 		.4byte	.LASF100
 3215 08aa 01       		.byte	0x1
 3216 08ab DC02     		.2byte	0x2dc
 3217 08ad E1000000 		.4byte	0xe1
 3218 08b1 01       		.uleb128 0x1
 3219 08b2 50       		.byte	0x50
 3220 08b3 1A       		.uleb128 0x1a
 3221 08b4 06000000 		.4byte	.LVL51
 3222 08b8 A1130000 		.4byte	0x13a1
 3223 08bc 00       		.byte	0
 3224 08bd 28       		.uleb128 0x28
 3225 08be 98080000 		.4byte	.LASF101
 3226 08c2 01       		.byte	0x1
 3227 08c3 F201     		.2byte	0x1f2
 3228 08c5 00000000 		.4byte	.LFB36
 3229 08c9 D4020000 		.4byte	.LFE36-.LFB36
 3230 08cd 01       		.uleb128 0x1
 3231 08ce 9C       		.byte	0x9c
 3232 08cf FE090000 		.4byte	0x9fe
 3233 08d3 21       		.uleb128 0x21
 3234 08d4 61726700 		.ascii	"arg\000"
 3235 08d8 01       		.byte	0x1
 3236 08d9 F201     		.2byte	0x1f2
 3237 08db 30010000 		.4byte	0x130
 3238 08df F4000000 		.4byte	.LLST8
 3239 08e3 23       		.uleb128 0x23
 3240 08e4 C3040000 		.4byte	.LASF59
 3241 08e8 01       		.byte	0x1
 3242 08e9 F401     		.2byte	0x1f4
 3243 08eb 46020000 		.4byte	0x246
 3244 08ef 15010000 		.4byte	.LLST9
 3245 08f3 23       		.uleb128 0x23
 3246 08f4 FE050000 		.4byte	.LASF58
 3247 08f8 01       		.byte	0x1
 3248 08f9 F501     		.2byte	0x1f5
 3249 08fb A5000000 		.4byte	0xa5
 3250 08ff 33010000 		.4byte	.LLST10
 3251 0903 1E       		.uleb128 0x1e
 3252 0904 6900     		.ascii	"i\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 87


 3253 0906 01       		.byte	0x1
 3254 0907 F601     		.2byte	0x1f6
 3255 0909 A5000000 		.4byte	0xa5
 3256 090d 51010000 		.4byte	.LLST11
 3257 0911 23       		.uleb128 0x23
 3258 0912 D4010000 		.4byte	.LASF57
 3259 0916 01       		.byte	0x1
 3260 0917 F701     		.2byte	0x1f7
 3261 0919 A5000000 		.4byte	0xa5
 3262 091d A8010000 		.4byte	.LLST12
 3263 0921 23       		.uleb128 0x23
 3264 0922 E7000000 		.4byte	.LASF102
 3265 0926 01       		.byte	0x1
 3266 0927 F801     		.2byte	0x1f8
 3267 0929 A5000000 		.4byte	0xa5
 3268 092d 0A020000 		.4byte	.LLST13
 3269 0931 1B       		.uleb128 0x1b
 3270 0932 08000000 		.4byte	.LVL55
 3271 0936 4D130000 		.4byte	0x134d
 3272 093a 44090000 		.4byte	0x944
 3273 093e 1C       		.uleb128 0x1c
 3274 093f 01       		.uleb128 0x1
 3275 0940 50       		.byte	0x50
 3276 0941 01       		.uleb128 0x1
 3277 0942 30       		.byte	0x30
 3278 0943 00       		.byte	0
 3279 0944 1B       		.uleb128 0x1b
 3280 0945 2A000000 		.4byte	.LVL56
 3281 0949 AC130000 		.4byte	0x13ac
 3282 094d 57090000 		.4byte	0x957
 3283 0951 1C       		.uleb128 0x1c
 3284 0952 01       		.uleb128 0x1
 3285 0953 51       		.byte	0x51
 3286 0954 01       		.uleb128 0x1
 3287 0955 34       		.byte	0x34
 3288 0956 00       		.byte	0
 3289 0957 1B       		.uleb128 0x1b
 3290 0958 3C010000 		.4byte	.LVL81
 3291 095c 16080000 		.4byte	0x816
 3292 0960 6A090000 		.4byte	0x96a
 3293 0964 1C       		.uleb128 0x1c
 3294 0965 01       		.uleb128 0x1
 3295 0966 50       		.byte	0x50
 3296 0967 01       		.uleb128 0x1
 3297 0968 30       		.byte	0x30
 3298 0969 00       		.byte	0
 3299 096a 1A       		.uleb128 0x1a
 3300 096b 6C010000 		.4byte	.LVL85
 3301 096f 7B080000 		.4byte	0x87b
 3302 0973 1B       		.uleb128 0x1b
 3303 0974 98010000 		.4byte	.LVL87
 3304 0978 D2120000 		.4byte	0x12d2
 3305 097c 86090000 		.4byte	0x986
 3306 0980 1C       		.uleb128 0x1c
 3307 0981 01       		.uleb128 0x1
 3308 0982 50       		.byte	0x50
 3309 0983 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 88


 3310 0984 30       		.byte	0x30
 3311 0985 00       		.byte	0
 3312 0986 1A       		.uleb128 0x1a
 3313 0987 A6010000 		.4byte	.LVL88
 3314 098b 7B080000 		.4byte	0x87b
 3315 098f 1B       		.uleb128 0x1b
 3316 0990 2C020000 		.4byte	.LVL96
 3317 0994 B8130000 		.4byte	0x13b8
 3318 0998 AB090000 		.4byte	0x9ab
 3319 099c 1C       		.uleb128 0x1c
 3320 099d 01       		.uleb128 0x1
 3321 099e 50       		.byte	0x50
 3322 099f 05       		.uleb128 0x5
 3323 09a0 03       		.byte	0x3
 3324 09a1 00000000 		.4byte	txMessage
 3325 09a5 1C       		.uleb128 0x1c
 3326 09a6 01       		.uleb128 0x1
 3327 09a7 51       		.byte	0x51
 3328 09a8 01       		.uleb128 0x1
 3329 09a9 4E       		.byte	0x4e
 3330 09aa 00       		.byte	0
 3331 09ab 1B       		.uleb128 0x1b
 3332 09ac 40020000 		.4byte	.LVL97
 3333 09b0 16080000 		.4byte	0x816
 3334 09b4 BE090000 		.4byte	0x9be
 3335 09b8 1C       		.uleb128 0x1c
 3336 09b9 01       		.uleb128 0x1
 3337 09ba 50       		.byte	0x50
 3338 09bb 01       		.uleb128 0x1
 3339 09bc 30       		.byte	0x30
 3340 09bd 00       		.byte	0
 3341 09be 1B       		.uleb128 0x1b
 3342 09bf 4E020000 		.4byte	.LVL98
 3343 09c3 C4130000 		.4byte	0x13c4
 3344 09c7 DB090000 		.4byte	0x9db
 3345 09cb 1C       		.uleb128 0x1c
 3346 09cc 01       		.uleb128 0x1
 3347 09cd 51       		.byte	0x51
 3348 09ce 01       		.uleb128 0x1
 3349 09cf 30       		.byte	0x30
 3350 09d0 1C       		.uleb128 0x1c
 3351 09d1 01       		.uleb128 0x1
 3352 09d2 52       		.byte	0x52
 3353 09d3 01       		.uleb128 0x1
 3354 09d4 30       		.byte	0x30
 3355 09d5 1C       		.uleb128 0x1c
 3356 09d6 01       		.uleb128 0x1
 3357 09d7 53       		.byte	0x53
 3358 09d8 01       		.uleb128 0x1
 3359 09d9 30       		.byte	0x30
 3360 09da 00       		.byte	0
 3361 09db 1B       		.uleb128 0x1b
 3362 09dc 54020000 		.4byte	.LVL99
 3363 09e0 89130000 		.4byte	0x1389
 3364 09e4 EE090000 		.4byte	0x9ee
 3365 09e8 1C       		.uleb128 0x1c
 3366 09e9 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 89


 3367 09ea 50       		.byte	0x50
 3368 09eb 01       		.uleb128 0x1
 3369 09ec 31       		.byte	0x31
 3370 09ed 00       		.byte	0
 3371 09ee 1D       		.uleb128 0x1d
 3372 09ef 5A020000 		.4byte	.LVL100
 3373 09f3 4D130000 		.4byte	0x134d
 3374 09f7 1C       		.uleb128 0x1c
 3375 09f8 01       		.uleb128 0x1
 3376 09f9 50       		.byte	0x50
 3377 09fa 01       		.uleb128 0x1
 3378 09fb 30       		.byte	0x30
 3379 09fc 00       		.byte	0
 3380 09fd 00       		.byte	0
 3381 09fe 19       		.uleb128 0x19
 3382 09ff 460A0000 		.4byte	.LASF103
 3383 0a03 01       		.byte	0x1
 3384 0a04 FD02     		.2byte	0x2fd
 3385 0a06 00000000 		.4byte	.LFB39
 3386 0a0a 24000000 		.4byte	.LFE39-.LFB39
 3387 0a0e 01       		.uleb128 0x1
 3388 0a0f 9C       		.byte	0x9c
 3389 0a10 1E0A0000 		.4byte	0xa1e
 3390 0a14 1A       		.uleb128 0x1a
 3391 0a15 06000000 		.4byte	.LVL101
 3392 0a19 7B080000 		.4byte	0x87b
 3393 0a1d 00       		.byte	0
 3394 0a1e 26       		.uleb128 0x26
 3395 0a1f B9060000 		.4byte	.LASF104
 3396 0a23 01       		.byte	0x1
 3397 0a24 1203     		.2byte	0x312
 3398 0a26 00000000 		.4byte	.LFB40
 3399 0a2a 44000000 		.4byte	.LFE40-.LFB40
 3400 0a2e 01       		.uleb128 0x1
 3401 0a2f 9C       		.byte	0x9c
 3402 0a30 8F0A0000 		.4byte	0xa8f
 3403 0a34 1F       		.uleb128 0x1f
 3404 0a35 F7060000 		.4byte	.LASF105
 3405 0a39 01       		.byte	0x1
 3406 0a3a 1203     		.2byte	0x312
 3407 0a3c BD000000 		.4byte	0xbd
 3408 0a40 28020000 		.4byte	.LLST14
 3409 0a44 1F       		.uleb128 0x1f
 3410 0a45 CA000000 		.4byte	.LASF106
 3411 0a49 01       		.byte	0x1
 3412 0a4a 1203     		.2byte	0x312
 3413 0a4c 25000000 		.4byte	0x25
 3414 0a50 49020000 		.4byte	.LLST15
 3415 0a54 1F       		.uleb128 0x1f
 3416 0a55 C4000000 		.4byte	.LASF107
 3417 0a59 01       		.byte	0x1
 3418 0a5a 1203     		.2byte	0x312
 3419 0a5c 25000000 		.4byte	0x25
 3420 0a60 77020000 		.4byte	.LLST16
 3421 0a64 1F       		.uleb128 0x1f
 3422 0a65 BE000000 		.4byte	.LASF108
 3423 0a69 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 90


 3424 0a6a 1203     		.2byte	0x312
 3425 0a6c 25000000 		.4byte	0x25
 3426 0a70 A5020000 		.4byte	.LLST17
 3427 0a74 29       		.uleb128 0x29
 3428 0a75 0C000000 		.4byte	.LBB2
 3429 0a79 26000000 		.4byte	.LBE2-.LBB2
 3430 0a7d 23       		.uleb128 0x23
 3431 0a7e 81070000 		.4byte	.LASF109
 3432 0a82 01       		.byte	0x1
 3433 0a83 1603     		.2byte	0x316
 3434 0a85 25000000 		.4byte	0x25
 3435 0a89 D3020000 		.4byte	.LLST18
 3436 0a8d 00       		.byte	0
 3437 0a8e 00       		.byte	0
 3438 0a8f 2A       		.uleb128 0x2a
 3439 0a90 EB060000 		.4byte	.LASF110
 3440 0a94 01       		.byte	0x1
 3441 0a95 2803     		.2byte	0x328
 3442 0a97 25000000 		.4byte	0x25
 3443 0a9b 00000000 		.4byte	.LFB41
 3444 0a9f 38010000 		.4byte	.LFE41-.LFB41
 3445 0aa3 01       		.uleb128 0x1
 3446 0aa4 9C       		.byte	0x9c
 3447 0aa5 0C0B0000 		.4byte	0xb0c
 3448 0aa9 21       		.uleb128 0x21
 3449 0aaa 6E6F7700 		.ascii	"now\000"
 3450 0aae 01       		.byte	0x1
 3451 0aaf 2803     		.2byte	0x328
 3452 0ab1 BD000000 		.4byte	0xbd
 3453 0ab5 F1020000 		.4byte	.LLST19
 3454 0ab9 1F       		.uleb128 0x1f
 3455 0aba 06080000 		.4byte	.LASF67
 3456 0abe 01       		.byte	0x1
 3457 0abf 2803     		.2byte	0x328
 3458 0ac1 BD000000 		.4byte	0xbd
 3459 0ac5 33030000 		.4byte	.LLST20
 3460 0ac9 23       		.uleb128 0x23
 3461 0aca 18010000 		.4byte	.LASF111
 3462 0ace 01       		.byte	0x1
 3463 0acf 2A03     		.2byte	0x32a
 3464 0ad1 E1000000 		.4byte	0xe1
 3465 0ad5 78030000 		.4byte	.LLST21
 3466 0ad9 23       		.uleb128 0x23
 3467 0ada 34070000 		.4byte	.LASF112
 3468 0ade 01       		.byte	0x1
 3469 0adf 2A03     		.2byte	0x32a
 3470 0ae1 E1000000 		.4byte	0xe1
 3471 0ae5 8B030000 		.4byte	.LLST22
 3472 0ae9 23       		.uleb128 0x23
 3473 0aea 83050000 		.4byte	.LASF113
 3474 0aee 01       		.byte	0x1
 3475 0aef 2B03     		.2byte	0x32b
 3476 0af1 BD000000 		.4byte	0xbd
 3477 0af5 9E030000 		.4byte	.LLST23
 3478 0af9 1A       		.uleb128 0x1a
 3479 0afa 12000000 		.4byte	.LVL113
 3480 0afe 7B080000 		.4byte	0x87b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 91


 3481 0b02 1A       		.uleb128 0x1a
 3482 0b03 34000000 		.4byte	.LVL115
 3483 0b07 1E0A0000 		.4byte	0xa1e
 3484 0b0b 00       		.byte	0
 3485 0b0c 19       		.uleb128 0x19
 3486 0b0d 80040000 		.4byte	.LASF114
 3487 0b11 01       		.byte	0x1
 3488 0b12 6603     		.2byte	0x366
 3489 0b14 00000000 		.4byte	.LFB42
 3490 0b18 24000000 		.4byte	.LFE42-.LFB42
 3491 0b1c 01       		.uleb128 0x1
 3492 0b1d 9C       		.byte	0x9c
 3493 0b1e 4C0B0000 		.4byte	0xb4c
 3494 0b22 1F       		.uleb128 0x1f
 3495 0b23 6D070000 		.4byte	.LASF115
 3496 0b27 01       		.byte	0x1
 3497 0b28 6603     		.2byte	0x366
 3498 0b2a BD000000 		.4byte	0xbd
 3499 0b2e B1030000 		.4byte	.LLST24
 3500 0b32 23       		.uleb128 0x23
 3501 0b33 6C000000 		.4byte	.LASF116
 3502 0b37 01       		.byte	0x1
 3503 0b38 6803     		.2byte	0x368
 3504 0b3a 4C0B0000 		.4byte	0xb4c
 3505 0b3e D2030000 		.4byte	.LLST25
 3506 0b42 1A       		.uleb128 0x1a
 3507 0b43 1A000000 		.4byte	.LVL137
 3508 0b47 FE090000 		.4byte	0x9fe
 3509 0b4b 00       		.byte	0
 3510 0b4c 02       		.uleb128 0x2
 3511 0b4d 01       		.byte	0x1
 3512 0b4e 02       		.byte	0x2
 3513 0b4f 7D030000 		.4byte	.LASF117
 3514 0b53 26       		.uleb128 0x26
 3515 0b54 65030000 		.4byte	.LASF118
 3516 0b58 01       		.byte	0x1
 3517 0b59 7B03     		.2byte	0x37b
 3518 0b5b 00000000 		.4byte	.LFB43
 3519 0b5f 1C000000 		.4byte	.LFE43-.LFB43
 3520 0b63 01       		.uleb128 0x1
 3521 0b64 9C       		.byte	0x9c
 3522 0b65 930B0000 		.4byte	0xb93
 3523 0b69 1F       		.uleb128 0x1f
 3524 0b6a 30090000 		.4byte	.LASF119
 3525 0b6e 01       		.byte	0x1
 3526 0b6f 7B03     		.2byte	0x37b
 3527 0b71 25000000 		.4byte	0x25
 3528 0b75 F4030000 		.4byte	.LLST26
 3529 0b79 23       		.uleb128 0x23
 3530 0b7a AE090000 		.4byte	.LASF95
 3531 0b7e 01       		.byte	0x1
 3532 0b7f 7F03     		.2byte	0x37f
 3533 0b81 25000000 		.4byte	0x25
 3534 0b85 17040000 		.4byte	.LLST27
 3535 0b89 1A       		.uleb128 0x1a
 3536 0b8a 14000000 		.4byte	.LVL142
 3537 0b8e 3B080000 		.4byte	0x83b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 92


 3538 0b92 00       		.byte	0
 3539 0b93 28       		.uleb128 0x28
 3540 0b94 C4090000 		.4byte	.LASF120
 3541 0b98 01       		.byte	0x1
 3542 0b99 9103     		.2byte	0x391
 3543 0b9b 00000000 		.4byte	.LFB44
 3544 0b9f 34020000 		.4byte	.LFE44-.LFB44
 3545 0ba3 01       		.uleb128 0x1
 3546 0ba4 9C       		.byte	0x9c
 3547 0ba5 8F0D0000 		.4byte	0xd8f
 3548 0ba9 21       		.uleb128 0x21
 3549 0baa 61726700 		.ascii	"arg\000"
 3550 0bae 01       		.byte	0x1
 3551 0baf 9103     		.2byte	0x391
 3552 0bb1 30010000 		.4byte	0x130
 3553 0bb5 2A040000 		.4byte	.LLST28
 3554 0bb9 2B       		.uleb128 0x2b
 3555 0bba BA050000 		.4byte	.LASF121
 3556 0bbe 01       		.byte	0x1
 3557 0bbf 9403     		.2byte	0x394
 3558 0bc1 BD000000 		.4byte	0xbd
 3559 0bc5 05       		.byte	0x5
 3560 0bc6 1E       		.uleb128 0x1e
 3561 0bc7 6E6F7700 		.ascii	"now\000"
 3562 0bcb 01       		.byte	0x1
 3563 0bcc 9503     		.2byte	0x395
 3564 0bce BD000000 		.4byte	0xbd
 3565 0bd2 4B040000 		.4byte	.LLST29
 3566 0bd6 23       		.uleb128 0x23
 3567 0bd7 30090000 		.4byte	.LASF119
 3568 0bdb 01       		.byte	0x1
 3569 0bdc 9603     		.2byte	0x396
 3570 0bde 25000000 		.4byte	0x25
 3571 0be2 8B040000 		.4byte	.LLST30
 3572 0be6 23       		.uleb128 0x23
 3573 0be7 12000000 		.4byte	.LASF122
 3574 0beb 01       		.byte	0x1
 3575 0bec 9703     		.2byte	0x397
 3576 0bee E1000000 		.4byte	0xe1
 3577 0bf2 9E040000 		.4byte	.LLST31
 3578 0bf6 23       		.uleb128 0x23
 3579 0bf7 530B0000 		.4byte	.LASF123
 3580 0bfb 01       		.byte	0x1
 3581 0bfc 9703     		.2byte	0x397
 3582 0bfe E1000000 		.4byte	0xe1
 3583 0c02 B1040000 		.4byte	.LLST32
 3584 0c06 23       		.uleb128 0x23
 3585 0c07 0A090000 		.4byte	.LASF124
 3586 0c0b 01       		.byte	0x1
 3587 0c0c 9803     		.2byte	0x398
 3588 0c0e BD000000 		.4byte	0xbd
 3589 0c12 C4040000 		.4byte	.LLST33
 3590 0c16 1B       		.uleb128 0x1b
 3591 0c17 08000000 		.4byte	.LVL146
 3592 0c1b 4D130000 		.4byte	0x134d
 3593 0c1f 290C0000 		.4byte	0xc29
 3594 0c23 1C       		.uleb128 0x1c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 93


 3595 0c24 01       		.uleb128 0x1
 3596 0c25 50       		.byte	0x50
 3597 0c26 01       		.uleb128 0x1
 3598 0c27 30       		.byte	0x30
 3599 0c28 00       		.byte	0
 3600 0c29 1A       		.uleb128 0x1a
 3601 0c2a 1E000000 		.4byte	.LVL147
 3602 0c2e FE090000 		.4byte	0x9fe
 3603 0c32 1B       		.uleb128 0x1b
 3604 0c33 2A000000 		.4byte	.LVL148
 3605 0c37 1E0A0000 		.4byte	0xa1e
 3606 0c3b 450C0000 		.4byte	0xc45
 3607 0c3f 1C       		.uleb128 0x1c
 3608 0c40 01       		.uleb128 0x1
 3609 0c41 50       		.byte	0x50
 3610 0c42 01       		.uleb128 0x1
 3611 0c43 35       		.byte	0x35
 3612 0c44 00       		.byte	0
 3613 0c45 1B       		.uleb128 0x1b
 3614 0c46 30000000 		.4byte	.LVL149
 3615 0c4a 0C0B0000 		.4byte	0xb0c
 3616 0c4e 590C0000 		.4byte	0xc59
 3617 0c52 1C       		.uleb128 0x1c
 3618 0c53 01       		.uleb128 0x1
 3619 0c54 50       		.byte	0x50
 3620 0c55 02       		.uleb128 0x2
 3621 0c56 74       		.byte	0x74
 3622 0c57 00       		.sleb128 0
 3623 0c58 00       		.byte	0
 3624 0c59 1B       		.uleb128 0x1b
 3625 0c5a 66000000 		.4byte	.LVL152
 3626 0c5e D0130000 		.4byte	0x13d0
 3627 0c62 6C0C0000 		.4byte	0xc6c
 3628 0c66 1C       		.uleb128 0x1c
 3629 0c67 01       		.uleb128 0x1
 3630 0c68 50       		.byte	0x50
 3631 0c69 01       		.uleb128 0x1
 3632 0c6a 31       		.byte	0x31
 3633 0c6b 00       		.byte	0
 3634 0c6c 1B       		.uleb128 0x1b
 3635 0c6d 6E000000 		.4byte	.LVL153
 3636 0c71 DB130000 		.4byte	0x13db
 3637 0c75 810C0000 		.4byte	0xc81
 3638 0c79 1C       		.uleb128 0x1c
 3639 0c7a 01       		.uleb128 0x1
 3640 0c7b 50       		.byte	0x50
 3641 0c7c 03       		.uleb128 0x3
 3642 0c7d 0A       		.byte	0xa
 3643 0c7e 0008     		.2byte	0x800
 3644 0c80 00       		.byte	0
 3645 0c81 1A       		.uleb128 0x1a
 3646 0c82 72000000 		.4byte	.LVL154
 3647 0c86 09130000 		.4byte	0x1309
 3648 0c8a 1A       		.uleb128 0x1a
 3649 0c8b 8C000000 		.4byte	.LVL157
 3650 0c8f 3B080000 		.4byte	0x83b
 3651 0c93 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 94


 3652 0c94 A8000000 		.4byte	.LVL160
 3653 0c98 E6130000 		.4byte	0x13e6
 3654 0c9c A60C0000 		.4byte	0xca6
 3655 0ca0 1C       		.uleb128 0x1c
 3656 0ca1 01       		.uleb128 0x1
 3657 0ca2 50       		.byte	0x50
 3658 0ca3 01       		.uleb128 0x1
 3659 0ca4 36       		.byte	0x36
 3660 0ca5 00       		.byte	0
 3661 0ca6 1B       		.uleb128 0x1b
 3662 0ca7 AE000000 		.4byte	.LVL161
 3663 0cab F1130000 		.4byte	0x13f1
 3664 0caf B90C0000 		.4byte	0xcb9
 3665 0cb3 1C       		.uleb128 0x1c
 3666 0cb4 01       		.uleb128 0x1
 3667 0cb5 50       		.byte	0x50
 3668 0cb6 01       		.uleb128 0x1
 3669 0cb7 36       		.byte	0x36
 3670 0cb8 00       		.byte	0
 3671 0cb9 1A       		.uleb128 0x1a
 3672 0cba DC000000 		.4byte	.LVL162
 3673 0cbe 7B080000 		.4byte	0x87b
 3674 0cc2 1B       		.uleb128 0x1b
 3675 0cc3 E6000000 		.4byte	.LVL163
 3676 0cc7 D2120000 		.4byte	0x12d2
 3677 0ccb D50C0000 		.4byte	0xcd5
 3678 0ccf 1C       		.uleb128 0x1c
 3679 0cd0 01       		.uleb128 0x1
 3680 0cd1 50       		.byte	0x50
 3681 0cd2 01       		.uleb128 0x1
 3682 0cd3 30       		.byte	0x30
 3683 0cd4 00       		.byte	0
 3684 0cd5 1A       		.uleb128 0x1a
 3685 0cd6 F6000000 		.4byte	.LVL165
 3686 0cda 3B080000 		.4byte	0x83b
 3687 0cde 1A       		.uleb128 0x1a
 3688 0cdf 00010000 		.4byte	.LVL166
 3689 0ce3 7B080000 		.4byte	0x87b
 3690 0ce7 1A       		.uleb128 0x1a
 3691 0ce8 10010000 		.4byte	.LVL169
 3692 0cec FC130000 		.4byte	0x13fc
 3693 0cf0 1B       		.uleb128 0x1b
 3694 0cf1 20010000 		.4byte	.LVL172
 3695 0cf5 2B060000 		.4byte	0x62b
 3696 0cf9 030D0000 		.4byte	0xd03
 3697 0cfd 1C       		.uleb128 0x1c
 3698 0cfe 01       		.uleb128 0x1
 3699 0cff 50       		.byte	0x50
 3700 0d00 01       		.uleb128 0x1
 3701 0d01 34       		.byte	0x34
 3702 0d02 00       		.byte	0
 3703 0d03 1B       		.uleb128 0x1b
 3704 0d04 2E010000 		.4byte	.LVL173
 3705 0d08 2B060000 		.4byte	0x62b
 3706 0d0c 160D0000 		.4byte	0xd16
 3707 0d10 1C       		.uleb128 0x1c
 3708 0d11 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 95


 3709 0d12 50       		.byte	0x50
 3710 0d13 01       		.uleb128 0x1
 3711 0d14 32       		.byte	0x32
 3712 0d15 00       		.byte	0
 3713 0d16 1B       		.uleb128 0x1b
 3714 0d17 44010000 		.4byte	.LVL174
 3715 0d1b 0C0B0000 		.4byte	0xb0c
 3716 0d1f 290D0000 		.4byte	0xd29
 3717 0d23 1C       		.uleb128 0x1c
 3718 0d24 01       		.uleb128 0x1
 3719 0d25 50       		.byte	0x50
 3720 0d26 01       		.uleb128 0x1
 3721 0d27 31       		.byte	0x31
 3722 0d28 00       		.byte	0
 3723 0d29 1B       		.uleb128 0x1b
 3724 0d2a 58010000 		.4byte	.LVL175
 3725 0d2e 0C0B0000 		.4byte	0xb0c
 3726 0d32 3C0D0000 		.4byte	0xd3c
 3727 0d36 1C       		.uleb128 0x1c
 3728 0d37 01       		.uleb128 0x1
 3729 0d38 50       		.byte	0x50
 3730 0d39 01       		.uleb128 0x1
 3731 0d3a 30       		.byte	0x30
 3732 0d3b 00       		.byte	0
 3733 0d3c 1B       		.uleb128 0x1b
 3734 0d3d AE010000 		.4byte	.LVL176
 3735 0d41 8F0A0000 		.4byte	0xa8f
 3736 0d45 500D0000 		.4byte	0xd50
 3737 0d49 1C       		.uleb128 0x1c
 3738 0d4a 01       		.uleb128 0x1
 3739 0d4b 50       		.byte	0x50
 3740 0d4c 02       		.uleb128 0x2
 3741 0d4d 74       		.byte	0x74
 3742 0d4e 00       		.sleb128 0
 3743 0d4f 00       		.byte	0
 3744 0d50 1A       		.uleb128 0x1a
 3745 0d51 B6010000 		.4byte	.LVL177
 3746 0d55 530B0000 		.4byte	0xb53
 3747 0d59 1B       		.uleb128 0x1b
 3748 0d5a C4010000 		.4byte	.LVL178
 3749 0d5e D0130000 		.4byte	0x13d0
 3750 0d62 6C0D0000 		.4byte	0xd6c
 3751 0d66 1C       		.uleb128 0x1c
 3752 0d67 01       		.uleb128 0x1
 3753 0d68 50       		.byte	0x50
 3754 0d69 01       		.uleb128 0x1
 3755 0d6a 30       		.byte	0x30
 3756 0d6b 00       		.byte	0
 3757 0d6c 1B       		.uleb128 0x1b
 3758 0d6d CA010000 		.4byte	.LVL179
 3759 0d71 89130000 		.4byte	0x1389
 3760 0d75 7F0D0000 		.4byte	0xd7f
 3761 0d79 1C       		.uleb128 0x1c
 3762 0d7a 01       		.uleb128 0x1
 3763 0d7b 50       		.byte	0x50
 3764 0d7c 01       		.uleb128 0x1
 3765 0d7d 35       		.byte	0x35
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 96


 3766 0d7e 00       		.byte	0
 3767 0d7f 1D       		.uleb128 0x1d
 3768 0d80 D0010000 		.4byte	.LVL180
 3769 0d84 4D130000 		.4byte	0x134d
 3770 0d88 1C       		.uleb128 0x1c
 3771 0d89 01       		.uleb128 0x1
 3772 0d8a 50       		.byte	0x50
 3773 0d8b 01       		.uleb128 0x1
 3774 0d8c 30       		.byte	0x30
 3775 0d8d 00       		.byte	0
 3776 0d8e 00       		.byte	0
 3777 0d8f 27       		.uleb128 0x27
 3778 0d90 550A0000 		.4byte	.LASF125
 3779 0d94 01       		.byte	0x1
 3780 0d95 5504     		.2byte	0x455
 3781 0d97 2C000000 		.4byte	0x2c
 3782 0d9b 00000000 		.4byte	.LFB45
 3783 0d9f 40010000 		.4byte	.LFE45-.LFB45
 3784 0da3 01       		.uleb128 0x1
 3785 0da4 9C       		.byte	0x9c
 3786 0da5 E50F0000 		.4byte	0xfe5
 3787 0da9 1E       		.uleb128 0x1e
 3788 0daa 7300     		.ascii	"s\000"
 3789 0dac 01       		.byte	0x1
 3790 0dad 5704     		.2byte	0x457
 3791 0daf A5000000 		.4byte	0xa5
 3792 0db3 E2040000 		.4byte	.LLST34
 3793 0db7 1A       		.uleb128 0x1a
 3794 0db8 08000000 		.4byte	.LVL181
 3795 0dbc DF050000 		.4byte	0x5df
 3796 0dc0 1B       		.uleb128 0x1b
 3797 0dc1 0E000000 		.4byte	.LVL182
 3798 0dc5 E6130000 		.4byte	0x13e6
 3799 0dc9 D30D0000 		.4byte	0xdd3
 3800 0dcd 1C       		.uleb128 0x1c
 3801 0dce 01       		.uleb128 0x1
 3802 0dcf 50       		.byte	0x50
 3803 0dd0 01       		.uleb128 0x1
 3804 0dd1 31       		.byte	0x31
 3805 0dd2 00       		.byte	0
 3806 0dd3 1B       		.uleb128 0x1b
 3807 0dd4 14000000 		.4byte	.LVL183
 3808 0dd8 F1130000 		.4byte	0x13f1
 3809 0ddc E60D0000 		.4byte	0xde6
 3810 0de0 1C       		.uleb128 0x1c
 3811 0de1 01       		.uleb128 0x1
 3812 0de2 50       		.byte	0x50
 3813 0de3 01       		.uleb128 0x1
 3814 0de4 31       		.byte	0x31
 3815 0de5 00       		.byte	0
 3816 0de6 1B       		.uleb128 0x1b
 3817 0de7 28000000 		.4byte	.LVL184
 3818 0deb 07140000 		.4byte	0x1407
 3819 0def 1F0E0000 		.4byte	0xe1f
 3820 0df3 1C       		.uleb128 0x1c
 3821 0df4 01       		.uleb128 0x1
 3822 0df5 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 97


 3823 0df6 05       		.uleb128 0x5
 3824 0df7 03       		.byte	0x3
 3825 0df8 00000000 		.4byte	PID_Task
 3826 0dfc 1C       		.uleb128 0x1c
 3827 0dfd 01       		.uleb128 0x1
 3828 0dfe 51       		.byte	0x51
 3829 0dff 05       		.uleb128 0x5
 3830 0e00 03       		.byte	0x3
 3831 0e01 00000000 		.4byte	.LC85
 3832 0e05 1C       		.uleb128 0x1c
 3833 0e06 01       		.uleb128 0x1
 3834 0e07 52       		.byte	0x52
 3835 0e08 02       		.uleb128 0x2
 3836 0e09 08       		.byte	0x8
 3837 0e0a 40       		.byte	0x40
 3838 0e0b 1C       		.uleb128 0x1c
 3839 0e0c 01       		.uleb128 0x1
 3840 0e0d 53       		.byte	0x53
 3841 0e0e 02       		.uleb128 0x2
 3842 0e0f 74       		.byte	0x74
 3843 0e10 00       		.sleb128 0
 3844 0e11 1C       		.uleb128 0x1c
 3845 0e12 02       		.uleb128 0x2
 3846 0e13 7D       		.byte	0x7d
 3847 0e14 00       		.sleb128 0
 3848 0e15 01       		.uleb128 0x1
 3849 0e16 33       		.byte	0x33
 3850 0e17 1C       		.uleb128 0x1c
 3851 0e18 02       		.uleb128 0x2
 3852 0e19 7D       		.byte	0x7d
 3853 0e1a 04       		.sleb128 4
 3854 0e1b 02       		.uleb128 0x2
 3855 0e1c 74       		.byte	0x74
 3856 0e1d 00       		.sleb128 0
 3857 0e1e 00       		.byte	0
 3858 0e1f 1B       		.uleb128 0x1b
 3859 0e20 3A000000 		.4byte	.LVL185
 3860 0e24 07140000 		.4byte	0x1407
 3861 0e28 580E0000 		.4byte	0xe58
 3862 0e2c 1C       		.uleb128 0x1c
 3863 0e2d 01       		.uleb128 0x1
 3864 0e2e 50       		.byte	0x50
 3865 0e2f 05       		.uleb128 0x5
 3866 0e30 03       		.byte	0x3
 3867 0e31 00000000 		.4byte	Comm_Task
 3868 0e35 1C       		.uleb128 0x1c
 3869 0e36 01       		.uleb128 0x1
 3870 0e37 51       		.byte	0x51
 3871 0e38 05       		.uleb128 0x5
 3872 0e39 03       		.byte	0x3
 3873 0e3a 04000000 		.4byte	.LC88
 3874 0e3e 1C       		.uleb128 0x1c
 3875 0e3f 01       		.uleb128 0x1
 3876 0e40 52       		.byte	0x52
 3877 0e41 02       		.uleb128 0x2
 3878 0e42 08       		.byte	0x8
 3879 0e43 64       		.byte	0x64
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 98


 3880 0e44 1C       		.uleb128 0x1c
 3881 0e45 01       		.uleb128 0x1
 3882 0e46 53       		.byte	0x53
 3883 0e47 02       		.uleb128 0x2
 3884 0e48 74       		.byte	0x74
 3885 0e49 00       		.sleb128 0
 3886 0e4a 1C       		.uleb128 0x1c
 3887 0e4b 02       		.uleb128 0x2
 3888 0e4c 7D       		.byte	0x7d
 3889 0e4d 00       		.sleb128 0
 3890 0e4e 01       		.uleb128 0x1
 3891 0e4f 32       		.byte	0x32
 3892 0e50 1C       		.uleb128 0x1c
 3893 0e51 02       		.uleb128 0x2
 3894 0e52 7D       		.byte	0x7d
 3895 0e53 04       		.sleb128 4
 3896 0e54 02       		.uleb128 0x2
 3897 0e55 74       		.byte	0x74
 3898 0e56 00       		.sleb128 0
 3899 0e57 00       		.byte	0
 3900 0e58 1B       		.uleb128 0x1b
 3901 0e59 4C000000 		.4byte	.LVL186
 3902 0e5d 07140000 		.4byte	0x1407
 3903 0e61 910E0000 		.4byte	0xe91
 3904 0e65 1C       		.uleb128 0x1c
 3905 0e66 01       		.uleb128 0x1
 3906 0e67 50       		.byte	0x50
 3907 0e68 05       		.uleb128 0x5
 3908 0e69 03       		.byte	0x3
 3909 0e6a 00000000 		.4byte	Current_Read_Task
 3910 0e6e 1C       		.uleb128 0x1c
 3911 0e6f 01       		.uleb128 0x1
 3912 0e70 51       		.byte	0x51
 3913 0e71 05       		.uleb128 0x5
 3914 0e72 03       		.byte	0x3
 3915 0e73 14000000 		.4byte	.LC91
 3916 0e77 1C       		.uleb128 0x1c
 3917 0e78 01       		.uleb128 0x1
 3918 0e79 52       		.byte	0x52
 3919 0e7a 02       		.uleb128 0x2
 3920 0e7b 08       		.byte	0x8
 3921 0e7c 40       		.byte	0x40
 3922 0e7d 1C       		.uleb128 0x1c
 3923 0e7e 01       		.uleb128 0x1
 3924 0e7f 53       		.byte	0x53
 3925 0e80 02       		.uleb128 0x2
 3926 0e81 74       		.byte	0x74
 3927 0e82 00       		.sleb128 0
 3928 0e83 1C       		.uleb128 0x1c
 3929 0e84 02       		.uleb128 0x2
 3930 0e85 7D       		.byte	0x7d
 3931 0e86 00       		.sleb128 0
 3932 0e87 01       		.uleb128 0x1
 3933 0e88 31       		.byte	0x31
 3934 0e89 1C       		.uleb128 0x1c
 3935 0e8a 02       		.uleb128 0x2
 3936 0e8b 7D       		.byte	0x7d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 99


 3937 0e8c 04       		.sleb128 4
 3938 0e8d 02       		.uleb128 0x2
 3939 0e8e 74       		.byte	0x74
 3940 0e8f 00       		.sleb128 0
 3941 0e90 00       		.byte	0
 3942 0e91 1B       		.uleb128 0x1b
 3943 0e92 52000000 		.4byte	.LVL187
 3944 0e96 13140000 		.4byte	0x1413
 3945 0e9a A40E0000 		.4byte	0xea4
 3946 0e9e 1C       		.uleb128 0x1c
 3947 0e9f 01       		.uleb128 0x1
 3948 0ea0 50       		.byte	0x50
 3949 0ea1 01       		.uleb128 0x1
 3950 0ea2 31       		.byte	0x31
 3951 0ea3 00       		.byte	0
 3952 0ea4 1B       		.uleb128 0x1b
 3953 0ea5 68000000 		.4byte	.LVL191
 3954 0ea9 1F140000 		.4byte	0x141f
 3955 0ead B80E0000 		.4byte	0xeb8
 3956 0eb1 1C       		.uleb128 0x1c
 3957 0eb2 01       		.uleb128 0x1
 3958 0eb3 50       		.byte	0x50
 3959 0eb4 02       		.uleb128 0x2
 3960 0eb5 74       		.byte	0x74
 3961 0eb6 00       		.sleb128 0
 3962 0eb7 00       		.byte	0
 3963 0eb8 1B       		.uleb128 0x1b
 3964 0eb9 70000000 		.4byte	.LVL192
 3965 0ebd 2A140000 		.4byte	0x142a
 3966 0ec1 CD0E0000 		.4byte	0xecd
 3967 0ec5 1C       		.uleb128 0x1c
 3968 0ec6 01       		.uleb128 0x1
 3969 0ec7 50       		.byte	0x50
 3970 0ec8 03       		.uleb128 0x3
 3971 0ec9 0A       		.byte	0xa
 3972 0eca E803     		.2byte	0x3e8
 3973 0ecc 00       		.byte	0
 3974 0ecd 1B       		.uleb128 0x1b
 3975 0ece 78000000 		.4byte	.LVL194
 3976 0ed2 35140000 		.4byte	0x1435
 3977 0ed6 E40E0000 		.4byte	0xee4
 3978 0eda 1C       		.uleb128 0x1c
 3979 0edb 01       		.uleb128 0x1
 3980 0edc 50       		.byte	0x50
 3981 0edd 05       		.uleb128 0x5
 3982 0ede 03       		.byte	0x3
 3983 0edf 00000000 		.4byte	HomeIsrHandler
 3984 0ee3 00       		.byte	0
 3985 0ee4 1B       		.uleb128 0x1b
 3986 0ee5 7E000000 		.4byte	.LVL195
 3987 0ee9 40140000 		.4byte	0x1440
 3988 0eed FB0E0000 		.4byte	0xefb
 3989 0ef1 1C       		.uleb128 0x1c
 3990 0ef2 01       		.uleb128 0x1
 3991 0ef3 50       		.byte	0x50
 3992 0ef4 05       		.uleb128 0x5
 3993 0ef5 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 100


 3994 0ef6 00000000 		.4byte	RSTIsrHandler
 3995 0efa 00       		.byte	0
 3996 0efb 1B       		.uleb128 0x1b
 3997 0efc 84000000 		.4byte	.LVL196
 3998 0f00 4B140000 		.4byte	0x144b
 3999 0f04 120F0000 		.4byte	0xf12
 4000 0f08 1C       		.uleb128 0x1c
 4001 0f09 01       		.uleb128 0x1
 4002 0f0a 50       		.byte	0x50
 4003 0f0b 05       		.uleb128 0x5
 4004 0f0c 03       		.byte	0x3
 4005 0f0d 00000000 		.4byte	SPI_SS_IsrHandler
 4006 0f11 00       		.byte	0
 4007 0f12 1B       		.uleb128 0x1b
 4008 0f13 8A000000 		.4byte	.LVL197
 4009 0f17 56140000 		.4byte	0x1456
 4010 0f1b 250F0000 		.4byte	0xf25
 4011 0f1f 1C       		.uleb128 0x1c
 4012 0f20 01       		.uleb128 0x1
 4013 0f21 50       		.byte	0x50
 4014 0f22 01       		.uleb128 0x1
 4015 0f23 33       		.byte	0x33
 4016 0f24 00       		.byte	0
 4017 0f25 1B       		.uleb128 0x1b
 4018 0f26 90000000 		.4byte	.LVL198
 4019 0f2a 61140000 		.4byte	0x1461
 4020 0f2e 380F0000 		.4byte	0xf38
 4021 0f32 1C       		.uleb128 0x1c
 4022 0f33 01       		.uleb128 0x1
 4023 0f34 50       		.byte	0x50
 4024 0f35 01       		.uleb128 0x1
 4025 0f36 32       		.byte	0x32
 4026 0f37 00       		.byte	0
 4027 0f38 1B       		.uleb128 0x1b
 4028 0f39 96000000 		.4byte	.LVL199
 4029 0f3d 6C140000 		.4byte	0x146c
 4030 0f41 4B0F0000 		.4byte	0xf4b
 4031 0f45 1C       		.uleb128 0x1c
 4032 0f46 01       		.uleb128 0x1
 4033 0f47 50       		.byte	0x50
 4034 0f48 01       		.uleb128 0x1
 4035 0f49 33       		.byte	0x33
 4036 0f4a 00       		.byte	0
 4037 0f4b 1A       		.uleb128 0x1a
 4038 0f4c 9C000000 		.4byte	.LVL200
 4039 0f50 77140000 		.4byte	0x1477
 4040 0f54 1B       		.uleb128 0x1b
 4041 0f55 A2000000 		.4byte	.LVL201
 4042 0f59 2A140000 		.4byte	0x142a
 4043 0f5d 680F0000 		.4byte	0xf68
 4044 0f61 1C       		.uleb128 0x1c
 4045 0f62 01       		.uleb128 0x1
 4046 0f63 50       		.byte	0x50
 4047 0f64 02       		.uleb128 0x2
 4048 0f65 08       		.byte	0x8
 4049 0f66 64       		.byte	0x64
 4050 0f67 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 101


 4051 0f68 1A       		.uleb128 0x1a
 4052 0f69 A6000000 		.4byte	.LVL202
 4053 0f6d 82140000 		.4byte	0x1482
 4054 0f71 1A       		.uleb128 0x1a
 4055 0f72 AA000000 		.4byte	.LVL203
 4056 0f76 8D140000 		.4byte	0x148d
 4057 0f7a 1B       		.uleb128 0x1b
 4058 0f7b B2000000 		.4byte	.LVL204
 4059 0f7f 99140000 		.4byte	0x1499
 4060 0f83 8F0F0000 		.4byte	0xf8f
 4061 0f87 1C       		.uleb128 0x1c
 4062 0f88 01       		.uleb128 0x1
 4063 0f89 50       		.byte	0x50
 4064 0f8a 03       		.uleb128 0x3
 4065 0f8b 0A       		.byte	0xa
 4066 0f8c 4006     		.2byte	0x640
 4067 0f8e 00       		.byte	0
 4068 0f8f 1A       		.uleb128 0x1a
 4069 0f90 B8000000 		.4byte	.LVL205
 4070 0f94 3B080000 		.4byte	0x83b
 4071 0f98 1A       		.uleb128 0x1a
 4072 0f99 C2000000 		.4byte	.LVL206
 4073 0f9d A5140000 		.4byte	0x14a5
 4074 0fa1 1B       		.uleb128 0x1b
 4075 0fa2 CC000000 		.4byte	.LVL207
 4076 0fa6 C7120000 		.4byte	0x12c7
 4077 0faa B50F0000 		.4byte	0xfb5
 4078 0fae 1C       		.uleb128 0x1c
 4079 0faf 01       		.uleb128 0x1
 4080 0fb0 50       		.byte	0x50
 4081 0fb1 02       		.uleb128 0x2
 4082 0fb2 75       		.byte	0x75
 4083 0fb3 00       		.sleb128 0
 4084 0fb4 00       		.byte	0
 4085 0fb5 1A       		.uleb128 0x1a
 4086 0fb6 D4000000 		.4byte	.LVL208
 4087 0fba B0140000 		.4byte	0x14b0
 4088 0fbe 1B       		.uleb128 0x1b
 4089 0fbf DA000000 		.4byte	.LVL209
 4090 0fc3 D2120000 		.4byte	0x12d2
 4091 0fc7 D20F0000 		.4byte	0xfd2
 4092 0fcb 1C       		.uleb128 0x1c
 4093 0fcc 01       		.uleb128 0x1
 4094 0fcd 50       		.byte	0x50
 4095 0fce 02       		.uleb128 0x2
 4096 0fcf 74       		.byte	0x74
 4097 0fd0 00       		.sleb128 0
 4098 0fd1 00       		.byte	0
 4099 0fd2 1A       		.uleb128 0x1a
 4100 0fd3 DE000000 		.4byte	.LVL210
 4101 0fd7 09130000 		.4byte	0x1309
 4102 0fdb 1A       		.uleb128 0x1a
 4103 0fdc F4000000 		.4byte	.LVL211
 4104 0fe0 BB140000 		.4byte	0x14bb
 4105 0fe4 00       		.byte	0
 4106 0fe5 2C       		.uleb128 0x2c
 4107 0fe6 92030000 		.4byte	.LASF126
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 102


 4108 0fea 01       		.byte	0x1
 4109 0feb 53       		.byte	0x53
 4110 0fec 4C0B0000 		.4byte	0xb4c
 4111 0ff0 05       		.uleb128 0x5
 4112 0ff1 03       		.byte	0x3
 4113 0ff2 00000000 		.4byte	inAuto
 4114 0ff6 2D       		.uleb128 0x2d
 4115 0ff7 4A6F6700 		.ascii	"Jog\000"
 4116 0ffb 01       		.byte	0x1
 4117 0ffc 55       		.byte	0x55
 4118 0ffd 07100000 		.4byte	0x1007
 4119 1001 05       		.uleb128 0x5
 4120 1002 03       		.byte	0x3
 4121 1003 00000000 		.4byte	Jog
 4122 1007 06       		.uleb128 0x6
 4123 1008 C9000000 		.4byte	0xc9
 4124 100c 2C       		.uleb128 0x2c
 4125 100d 54010000 		.4byte	.LASF127
 4126 1011 01       		.byte	0x1
 4127 1012 55       		.byte	0x55
 4128 1013 07100000 		.4byte	0x1007
 4129 1017 05       		.uleb128 0x5
 4130 1018 03       		.byte	0x3
 4131 1019 00000000 		.4byte	LastJog
 4132 101d 2C       		.uleb128 0x2c
 4133 101e 61070000 		.4byte	.LASF128
 4134 1022 01       		.byte	0x1
 4135 1023 56       		.byte	0x56
 4136 1024 4C0B0000 		.4byte	0xb4c
 4137 1028 05       		.uleb128 0x5
 4138 1029 03       		.byte	0x3
 4139 102a 00000000 		.4byte	PID_Enabled
 4140 102e 2C       		.uleb128 0x2c
 4141 102f 51070000 		.4byte	.LASF129
 4142 1033 01       		.byte	0x1
 4143 1034 56       		.byte	0x56
 4144 1035 4C0B0000 		.4byte	0xb4c
 4145 1039 05       		.uleb128 0x5
 4146 103a 03       		.byte	0x3
 4147 103b 00000000 		.4byte	PID_Was_Enabled
 4148 103f 2C       		.uleb128 0x2c
 4149 1040 43080000 		.4byte	.LASF130
 4150 1044 01       		.byte	0x1
 4151 1045 57       		.byte	0x57
 4152 1046 E1000000 		.4byte	0xe1
 4153 104a 05       		.uleb128 0x5
 4154 104b 03       		.byte	0x3
 4155 104c 00000000 		.4byte	PID_Setpoint
 4156 1050 2C       		.uleb128 0x2c
 4157 1051 0B0B0000 		.4byte	.LASF131
 4158 1055 01       		.byte	0x1
 4159 1056 57       		.byte	0x57
 4160 1057 E1000000 		.4byte	0xe1
 4161 105b 05       		.uleb128 0x5
 4162 105c 03       		.byte	0x3
 4163 105d 00000000 		.4byte	PID_EffectiveSetpoint
 4164 1061 2C       		.uleb128 0x2c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 103


 4165 1062 24020000 		.4byte	.LASF132
 4166 1066 01       		.byte	0x1
 4167 1067 58       		.byte	0x58
 4168 1068 A5000000 		.4byte	0xa5
 4169 106c 05       		.uleb128 0x5
 4170 106d 03       		.byte	0x3
 4171 106e 00000000 		.4byte	PID_EffSetDelta
 4172 1072 2C       		.uleb128 0x2c
 4173 1073 42020000 		.4byte	.LASF133
 4174 1077 01       		.byte	0x1
 4175 1078 59       		.byte	0x59
 4176 1079 BD000000 		.4byte	0xbd
 4177 107d 05       		.uleb128 0x5
 4178 107e 03       		.byte	0x3
 4179 107f 00000000 		.4byte	lastTime
 4180 1083 2C       		.uleb128 0x2c
 4181 1084 0E070000 		.4byte	.LASF134
 4182 1088 01       		.byte	0x1
 4183 1089 5A       		.byte	0x5a
 4184 108a 25000000 		.4byte	0x25
 4185 108e 05       		.uleb128 0x5
 4186 108f 03       		.byte	0x3
 4187 1090 00000000 		.4byte	Output
 4188 1094 2C       		.uleb128 0x2c
 4189 1095 6F020000 		.4byte	.LASF135
 4190 1099 01       		.byte	0x1
 4191 109a 5B       		.byte	0x5b
 4192 109b 25000000 		.4byte	0x25
 4193 109f 05       		.uleb128 0x5
 4194 10a0 03       		.byte	0x3
 4195 10a1 00000000 		.4byte	ITerm
 4196 10a5 2C       		.uleb128 0x2c
 4197 10a6 5E040000 		.4byte	.LASF136
 4198 10aa 01       		.byte	0x1
 4199 10ab 5C       		.byte	0x5c
 4200 10ac B6100000 		.4byte	0x10b6
 4201 10b0 05       		.uleb128 0x5
 4202 10b1 03       		.byte	0x3
 4203 10b2 00000000 		.4byte	Position
 4204 10b6 06       		.uleb128 0x6
 4205 10b7 E1000000 		.4byte	0xe1
 4206 10bb 2C       		.uleb128 0x2c
 4207 10bc 33060000 		.4byte	.LASF137
 4208 10c0 01       		.byte	0x1
 4209 10c1 5C       		.byte	0x5c
 4210 10c2 B6100000 		.4byte	0x10b6
 4211 10c6 05       		.uleb128 0x5
 4212 10c7 03       		.byte	0x3
 4213 10c8 00000000 		.4byte	LastPosition
 4214 10cc 2C       		.uleb128 0x2c
 4215 10cd EA090000 		.4byte	.LASF138
 4216 10d1 01       		.byte	0x1
 4217 10d2 5D       		.byte	0x5d
 4218 10d3 25000000 		.4byte	0x25
 4219 10d7 05       		.uleb128 0x5
 4220 10d8 03       		.byte	0x3
 4221 10d9 00000000 		.4byte	refKp
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 104


 4222 10dd 2C       		.uleb128 0x2c
 4223 10de BE090000 		.4byte	.LASF139
 4224 10e2 01       		.byte	0x1
 4225 10e3 5D       		.byte	0x5d
 4226 10e4 25000000 		.4byte	0x25
 4227 10e8 05       		.uleb128 0x5
 4228 10e9 03       		.byte	0x3
 4229 10ea 00000000 		.4byte	refKi
 4230 10ee 2C       		.uleb128 0x2c
 4231 10ef B8090000 		.4byte	.LASF140
 4232 10f3 01       		.byte	0x1
 4233 10f4 5D       		.byte	0x5d
 4234 10f5 25000000 		.4byte	0x25
 4235 10f9 05       		.uleb128 0x5
 4236 10fa 03       		.byte	0x3
 4237 10fb 00000000 		.4byte	refKd
 4238 10ff 2D       		.uleb128 0x2d
 4239 1100 6B7000   		.ascii	"kp\000"
 4240 1103 01       		.byte	0x1
 4241 1104 5E       		.byte	0x5e
 4242 1105 25000000 		.4byte	0x25
 4243 1109 05       		.uleb128 0x5
 4244 110a 03       		.byte	0x3
 4245 110b 00000000 		.4byte	kp
 4246 110f 2D       		.uleb128 0x2d
 4247 1110 6B6900   		.ascii	"ki\000"
 4248 1113 01       		.byte	0x1
 4249 1114 5E       		.byte	0x5e
 4250 1115 25000000 		.4byte	0x25
 4251 1119 05       		.uleb128 0x5
 4252 111a 03       		.byte	0x3
 4253 111b 00000000 		.4byte	ki
 4254 111f 2D       		.uleb128 0x2d
 4255 1120 6B6400   		.ascii	"kd\000"
 4256 1123 01       		.byte	0x1
 4257 1124 5E       		.byte	0x5e
 4258 1125 25000000 		.4byte	0x25
 4259 1129 05       		.uleb128 0x5
 4260 112a 03       		.byte	0x3
 4261 112b 00000000 		.4byte	kd
 4262 112f 2C       		.uleb128 0x2c
 4263 1130 25060000 		.4byte	.LASF141
 4264 1134 01       		.byte	0x1
 4265 1135 5F       		.byte	0x5f
 4266 1136 BD000000 		.4byte	0xbd
 4267 113a 05       		.uleb128 0x5
 4268 113b 03       		.byte	0x3
 4269 113c 00000000 		.4byte	refSampleTime
 4270 1140 2C       		.uleb128 0x2c
 4271 1141 58030000 		.4byte	.LASF142
 4272 1145 01       		.byte	0x1
 4273 1146 60       		.byte	0x60
 4274 1147 25000000 		.4byte	0x25
 4275 114b 05       		.uleb128 0x5
 4276 114c 03       		.byte	0x3
 4277 114d 00000000 		.4byte	outMax_Total
 4278 1151 2C       		.uleb128 0x2c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 105


 4279 1152 1B080000 		.4byte	.LASF143
 4280 1156 01       		.byte	0x1
 4281 1157 60       		.byte	0x60
 4282 1158 25000000 		.4byte	0x25
 4283 115c 05       		.uleb128 0x5
 4284 115d 03       		.byte	0x3
 4285 115e 00000000 		.4byte	outMax_ITerm
 4286 1162 2C       		.uleb128 0x2c
 4287 1163 33000000 		.4byte	.LASF144
 4288 1167 01       		.byte	0x1
 4289 1168 61       		.byte	0x61
 4290 1169 25000000 		.4byte	0x25
 4291 116d 05       		.uleb128 0x5
 4292 116e 03       		.byte	0x3
 4293 116f 00000000 		.4byte	pwmLimit
 4294 1173 2C       		.uleb128 0x2c
 4295 1174 3C080000 		.4byte	.LASF145
 4296 1178 01       		.byte	0x1
 4297 1179 61       		.byte	0x61
 4298 117a 25000000 		.4byte	0x25
 4299 117e 05       		.uleb128 0x5
 4300 117f 03       		.byte	0x3
 4301 1180 00000000 		.4byte	pwmMax
 4302 1184 2C       		.uleb128 0x2c
 4303 1185 4B020000 		.4byte	.LASF146
 4304 1189 01       		.byte	0x1
 4305 118a 61       		.byte	0x61
 4306 118b 25000000 		.4byte	0x25
 4307 118f 05       		.uleb128 0x5
 4308 1190 03       		.byte	0x3
 4309 1191 00000000 		.4byte	pwmMin
 4310 1195 2C       		.uleb128 0x2c
 4311 1196 B2020000 		.4byte	.LASF147
 4312 119a 01       		.byte	0x1
 4313 119b CD       		.byte	0xcd
 4314 119c A6110000 		.4byte	0x11a6
 4315 11a0 05       		.uleb128 0x5
 4316 11a1 03       		.byte	0x3
 4317 11a2 00000000 		.4byte	ConfigState
 4318 11a6 06       		.uleb128 0x6
 4319 11a7 C2010000 		.4byte	0x1c2
 4320 11ab 2C       		.uleb128 0x2c
 4321 11ac 79090000 		.4byte	.LASF148
 4322 11b0 01       		.byte	0x1
 4323 11b1 CE       		.byte	0xce
 4324 11b2 FB000000 		.4byte	0xfb
 4325 11b6 05       		.uleb128 0x5
 4326 11b7 03       		.byte	0x3
 4327 11b8 00000000 		.4byte	FaultState
 4328 11bc 2C       		.uleb128 0x2c
 4329 11bd 9F090000 		.4byte	.LASF149
 4330 11c1 01       		.byte	0x1
 4331 11c2 CF       		.byte	0xcf
 4332 11c3 FB000000 		.4byte	0xfb
 4333 11c7 05       		.uleb128 0x5
 4334 11c8 03       		.byte	0x3
 4335 11c9 00000000 		.4byte	ConfigSequence
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 106


 4336 11cd 2C       		.uleb128 0x2c
 4337 11ce AF080000 		.4byte	.LASF150
 4338 11d2 01       		.byte	0x1
 4339 11d3 D0       		.byte	0xd0
 4340 11d4 00010000 		.4byte	0x100
 4341 11d8 05       		.uleb128 0x5
 4342 11d9 03       		.byte	0x3
 4343 11da 00000000 		.4byte	ChecksumErrors
 4344 11de 2C       		.uleb128 0x2c
 4345 11df 98000000 		.4byte	.LASF151
 4346 11e3 01       		.byte	0x1
 4347 11e4 D1       		.byte	0xd1
 4348 11e5 11080000 		.4byte	0x811
 4349 11e9 05       		.uleb128 0x5
 4350 11ea 03       		.byte	0x3
 4351 11eb 00000000 		.4byte	Current
 4352 11ef 2D       		.uleb128 0x2d
 4353 11f0 50574D00 		.ascii	"PWM\000"
 4354 11f4 01       		.byte	0x1
 4355 11f5 D2       		.byte	0xd2
 4356 11f6 00120000 		.4byte	0x1200
 4357 11fa 05       		.uleb128 0x5
 4358 11fb 03       		.byte	0x3
 4359 11fc 00000000 		.4byte	PWM
 4360 1200 06       		.uleb128 0x6
 4361 1201 25000000 		.4byte	0x25
 4362 1205 16       		.uleb128 0x16
 4363 1206 A5000000 		.4byte	0xa5
 4364 120a 15120000 		.4byte	0x1215
 4365 120e 17       		.uleb128 0x17
 4366 120f 29010000 		.4byte	0x129
 4367 1213 13       		.byte	0x13
 4368 1214 00       		.byte	0
 4369 1215 2C       		.uleb128 0x2c
 4370 1216 15060000 		.4byte	.LASF152
 4371 121a 01       		.byte	0x1
 4372 121b D3       		.byte	0xd3
 4373 121c 05120000 		.4byte	0x1205
 4374 1220 05       		.uleb128 0x5
 4375 1221 03       		.byte	0x3
 4376 1222 00000000 		.4byte	CurrentI2Cinbuf
 4377 1226 2C       		.uleb128 0x2c
 4378 1227 28080000 		.4byte	.LASF153
 4379 122b 01       		.byte	0x1
 4380 122c D6       		.byte	0xd6
 4381 122d 98010000 		.4byte	0x198
 4382 1231 05       		.uleb128 0x5
 4383 1232 03       		.byte	0x3
 4384 1233 00000000 		.4byte	uxHighWaterMark_PID
 4385 1237 2C       		.uleb128 0x2c
 4386 1238 87060000 		.4byte	.LASF154
 4387 123c 01       		.byte	0x1
 4388 123d D7       		.byte	0xd7
 4389 123e 98010000 		.4byte	0x198
 4390 1242 05       		.uleb128 0x5
 4391 1243 03       		.byte	0x3
 4392 1244 00000000 		.4byte	uxHighWaterMark_Current
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 107


 4393 1248 2C       		.uleb128 0x2c
 4394 1249 940A0000 		.4byte	.LASF155
 4395 124d 01       		.byte	0x1
 4396 124e D8       		.byte	0xd8
 4397 124f 98010000 		.4byte	0x198
 4398 1253 05       		.uleb128 0x5
 4399 1254 03       		.byte	0x3
 4400 1255 00000000 		.4byte	uxHighWaterMark_Comm
 4401 1259 2C       		.uleb128 0x2c
 4402 125a 46000000 		.4byte	.LASF156
 4403 125e 01       		.byte	0x1
 4404 125f DB       		.byte	0xdb
 4405 1260 8D010000 		.4byte	0x18d
 4406 1264 05       		.uleb128 0x5
 4407 1265 03       		.byte	0x3
 4408 1266 00000000 		.4byte	Lock
 4409 126a 2C       		.uleb128 0x2c
 4410 126b 61060000 		.4byte	.LASF157
 4411 126f 01       		.byte	0x1
 4412 1270 ED       		.byte	0xed
 4413 1271 BD000000 		.4byte	0xbd
 4414 1275 05       		.uleb128 0x5
 4415 1276 03       		.byte	0x3
 4416 1277 00000000 		.4byte	LastMessageTimeTick
 4417 127b 2E       		.uleb128 0x2e
 4418 127c 22000000 		.4byte	.LASF158
 4419 1280 01       		.byte	0x1
 4420 1281 2201     		.2byte	0x122
 4421 1283 8F030000 		.4byte	0x38f
 4422 1287 05       		.uleb128 0x5
 4423 1288 03       		.byte	0x3
 4424 1289 00000000 		.4byte	rxMessage
 4425 128d 2E       		.uleb128 0x2e
 4426 128e 40060000 		.4byte	.LASF159
 4427 1292 01       		.byte	0x1
 4428 1293 3901     		.2byte	0x139
 4429 1295 98040000 		.4byte	0x498
 4430 1299 05       		.uleb128 0x5
 4431 129a 03       		.byte	0x3
 4432 129b 00000000 		.4byte	txMessage
 4433 129f 2E       		.uleb128 0x2e
 4434 12a0 C9070000 		.4byte	.LASF160
 4435 12a4 01       		.byte	0x1
 4436 12a5 4101     		.2byte	0x141
 4437 12a7 D4040000 		.4byte	0x4d4
 4438 12ab 05       		.uleb128 0x5
 4439 12ac 03       		.byte	0x3
 4440 12ad 00000000 		.4byte	txMessageState
 4441 12b1 2F       		.uleb128 0x2f
 4442 12b2 15050000 		.4byte	.LASF161
 4443 12b6 15050000 		.4byte	.LASF161
 4444 12ba 08       		.byte	0x8
 4445 12bb 28       		.byte	0x28
 4446 12bc 2F       		.uleb128 0x2f
 4447 12bd CD090000 		.4byte	.LASF162
 4448 12c1 CD090000 		.4byte	.LASF162
 4449 12c5 09       		.byte	0x9
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 108


 4450 12c6 39       		.byte	0x39
 4451 12c7 2F       		.uleb128 0x2f
 4452 12c8 4A060000 		.4byte	.LASF163
 4453 12cc 4A060000 		.4byte	.LASF163
 4454 12d0 0A       		.byte	0xa
 4455 12d1 5A       		.byte	0x5a
 4456 12d2 2F       		.uleb128 0x2f
 4457 12d3 52020000 		.4byte	.LASF164
 4458 12d7 52020000 		.4byte	.LASF164
 4459 12db 0B       		.byte	0xb
 4460 12dc 5A       		.byte	0x5a
 4461 12dd 2F       		.uleb128 0x2f
 4462 12de CA0A0000 		.4byte	.LASF165
 4463 12e2 CA0A0000 		.4byte	.LASF165
 4464 12e6 0C       		.byte	0xc
 4465 12e7 28       		.byte	0x28
 4466 12e8 2F       		.uleb128 0x2f
 4467 12e9 D0000000 		.4byte	.LASF166
 4468 12ed D0000000 		.4byte	.LASF166
 4469 12f1 0D       		.byte	0xd
 4470 12f2 39       		.byte	0x39
 4471 12f3 2F       		.uleb128 0x2f
 4472 12f4 C9030000 		.4byte	.LASF167
 4473 12f8 C9030000 		.4byte	.LASF167
 4474 12fc 0E       		.byte	0xe
 4475 12fd 39       		.byte	0x39
 4476 12fe 2F       		.uleb128 0x2f
 4477 12ff FA010000 		.4byte	.LASF168
 4478 1303 FA010000 		.4byte	.LASF168
 4479 1307 0E       		.byte	0xe
 4480 1308 32       		.byte	0x32
 4481 1309 30       		.uleb128 0x30
 4482 130a 71050000 		.4byte	.LASF169
 4483 130e 71050000 		.4byte	.LASF169
 4484 1312 0F       		.byte	0xf
 4485 1313 3E05     		.2byte	0x53e
 4486 1315 31       		.uleb128 0x31
 4487 1316 DA050000 		.4byte	.LASF211
 4488 131a DA050000 		.4byte	.LASF211
 4489 131e 30       		.uleb128 0x30
 4490 131f 63080000 		.4byte	.LASF170
 4491 1323 63080000 		.4byte	.LASF170
 4492 1327 10       		.byte	0x10
 4493 1328 3D03     		.2byte	0x33d
 4494 132a 30       		.uleb128 0x30
 4495 132b 94040000 		.4byte	.LASF171
 4496 132f 94040000 		.4byte	.LASF171
 4497 1333 10       		.byte	0x10
 4498 1334 3F03     		.2byte	0x33f
 4499 1336 30       		.uleb128 0x30
 4500 1337 64010000 		.4byte	.LASF172
 4501 133b 64010000 		.4byte	.LASF172
 4502 133f 10       		.byte	0x10
 4503 1340 4703     		.2byte	0x347
 4504 1342 2F       		.uleb128 0x2f
 4505 1343 91070000 		.4byte	.LASF173
 4506 1347 91070000 		.4byte	.LASF173
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 109


 4507 134b 11       		.byte	0x11
 4508 134c BA       		.byte	0xba
 4509 134d 30       		.uleb128 0x30
 4510 134e 84020000 		.4byte	.LASF174
 4511 1352 84020000 		.4byte	.LASF174
 4512 1356 0F       		.byte	0xf
 4513 1357 8E05     		.2byte	0x58e
 4514 1359 30       		.uleb128 0x30
 4515 135a 7B080000 		.4byte	.LASF175
 4516 135e 7B080000 		.4byte	.LASF175
 4517 1362 12       		.byte	0x12
 4518 1363 1B01     		.2byte	0x11b
 4519 1365 30       		.uleb128 0x30
 4520 1366 74000000 		.4byte	.LASF176
 4521 136a 74000000 		.4byte	.LASF176
 4522 136e 12       		.byte	0x12
 4523 136f 1E01     		.2byte	0x11e
 4524 1371 30       		.uleb128 0x30
 4525 1372 32050000 		.4byte	.LASF177
 4526 1376 32050000 		.4byte	.LASF177
 4527 137a 12       		.byte	0x12
 4528 137b 1D01     		.2byte	0x11d
 4529 137d 30       		.uleb128 0x30
 4530 137e 1E010000 		.4byte	.LASF178
 4531 1382 1E010000 		.4byte	.LASF178
 4532 1386 12       		.byte	0x12
 4533 1387 1401     		.2byte	0x114
 4534 1389 30       		.uleb128 0x30
 4535 138a 72030000 		.4byte	.LASF179
 4536 138e 72030000 		.4byte	.LASF179
 4537 1392 0F       		.byte	0xf
 4538 1393 ED02     		.2byte	0x2ed
 4539 1395 30       		.uleb128 0x30
 4540 1396 FB040000 		.4byte	.LASF180
 4541 139a FB040000 		.4byte	.LASF180
 4542 139e 13       		.byte	0x13
 4543 139f 5501     		.2byte	0x155
 4544 13a1 2F       		.uleb128 0x2f
 4545 13a2 EB030000 		.4byte	.LASF181
 4546 13a6 EB030000 		.4byte	.LASF181
 4547 13aa 0A       		.byte	0xa
 4548 13ab 5D       		.byte	0x5d
 4549 13ac 30       		.uleb128 0x30
 4550 13ad 9F030000 		.4byte	.LASF182
 4551 13b1 9F030000 		.4byte	.LASF182
 4552 13b5 06       		.byte	0x6
 4553 13b6 8805     		.2byte	0x588
 4554 13b8 30       		.uleb128 0x30
 4555 13b9 B3030000 		.4byte	.LASF183
 4556 13bd B3030000 		.4byte	.LASF183
 4557 13c1 10       		.byte	0x10
 4558 13c2 4503     		.2byte	0x345
 4559 13c4 30       		.uleb128 0x30
 4560 13c5 01040000 		.4byte	.LASF184
 4561 13c9 01040000 		.4byte	.LASF184
 4562 13cd 06       		.byte	0x6
 4563 13ce 8802     		.2byte	0x288
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 110


 4564 13d0 2F       		.uleb128 0x2f
 4565 13d1 0A0A0000 		.4byte	.LASF185
 4566 13d5 0A0A0000 		.4byte	.LASF185
 4567 13d9 14       		.byte	0x14
 4568 13da 33       		.byte	0x33
 4569 13db 2F       		.uleb128 0x2f
 4570 13dc C4050000 		.4byte	.LASF186
 4571 13e0 C4050000 		.4byte	.LASF186
 4572 13e4 15       		.byte	0x15
 4573 13e5 77       		.byte	0x77
 4574 13e6 2F       		.uleb128 0x2f
 4575 13e7 D8070000 		.4byte	.LASF187
 4576 13eb D8070000 		.4byte	.LASF187
 4577 13ef 16       		.byte	0x16
 4578 13f0 36       		.byte	0x36
 4579 13f1 2F       		.uleb128 0x2f
 4580 13f2 E3010000 		.4byte	.LASF188
 4581 13f6 E3010000 		.4byte	.LASF188
 4582 13fa 17       		.byte	0x17
 4583 13fb 36       		.byte	0x36
 4584 13fc 2F       		.uleb128 0x2f
 4585 13fd EE080000 		.4byte	.LASF189
 4586 1401 EE080000 		.4byte	.LASF189
 4587 1405 0B       		.byte	0xb
 4588 1406 5D       		.byte	0x5d
 4589 1407 30       		.uleb128 0x30
 4590 1408 D8040000 		.4byte	.LASF190
 4591 140c D8040000 		.4byte	.LASF190
 4592 1410 0F       		.byte	0xf
 4593 1411 4101     		.2byte	0x141
 4594 1413 30       		.uleb128 0x30
 4595 1414 48050000 		.4byte	.LASF191
 4596 1418 48050000 		.4byte	.LASF191
 4597 141c 06       		.byte	0x6
 4598 141d 8405     		.2byte	0x584
 4599 141f 2F       		.uleb128 0x2f
 4600 1420 ED000000 		.4byte	.LASF192
 4601 1424 ED000000 		.4byte	.LASF192
 4602 1428 18       		.byte	0x18
 4603 1429 33       		.byte	0x33
 4604 142a 2F       		.uleb128 0x2f
 4605 142b AF040000 		.4byte	.LASF193
 4606 142f AF040000 		.4byte	.LASF193
 4607 1433 11       		.byte	0x11
 4608 1434 D9       		.byte	0xd9
 4609 1435 2F       		.uleb128 0x2f
 4610 1436 160A0000 		.4byte	.LASF194
 4611 143a 160A0000 		.4byte	.LASF194
 4612 143e 0C       		.byte	0xc
 4613 143f 18       		.byte	0x18
 4614 1440 2F       		.uleb128 0x2f
 4615 1441 B20A0000 		.4byte	.LASF195
 4616 1445 B20A0000 		.4byte	.LASF195
 4617 1449 08       		.byte	0x8
 4618 144a 18       		.byte	0x18
 4619 144b 2F       		.uleb128 0x2f
 4620 144c C1010000 		.4byte	.LASF196
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 111


 4621 1450 C1010000 		.4byte	.LASF196
 4622 1454 19       		.byte	0x19
 4623 1455 18       		.byte	0x18
 4624 1456 2F       		.uleb128 0x2f
 4625 1457 D9080000 		.4byte	.LASF197
 4626 145b D9080000 		.4byte	.LASF197
 4627 145f 0C       		.byte	0xc
 4628 1460 20       		.byte	0x20
 4629 1461 2F       		.uleb128 0x2f
 4630 1462 42040000 		.4byte	.LASF198
 4631 1466 42040000 		.4byte	.LASF198
 4632 146a 08       		.byte	0x8
 4633 146b 20       		.byte	0x20
 4634 146c 2F       		.uleb128 0x2f
 4635 146d 5A050000 		.4byte	.LASF199
 4636 1471 5A050000 		.4byte	.LASF199
 4637 1475 19       		.byte	0x19
 4638 1476 20       		.byte	0x20
 4639 1477 2F       		.uleb128 0x2f
 4640 1478 4A010000 		.4byte	.LASF200
 4641 147c 4A010000 		.4byte	.LASF200
 4642 1480 1A       		.byte	0x1a
 4643 1481 72       		.byte	0x72
 4644 1482 2F       		.uleb128 0x2f
 4645 1483 38090000 		.4byte	.LASF201
 4646 1487 38090000 		.4byte	.LASF201
 4647 148b 1B       		.byte	0x1b
 4648 148c 72       		.byte	0x72
 4649 148d 30       		.uleb128 0x30
 4650 148e A0000000 		.4byte	.LASF202
 4651 1492 A0000000 		.4byte	.LASF202
 4652 1496 13       		.byte	0x13
 4653 1497 3201     		.2byte	0x132
 4654 1499 30       		.uleb128 0x30
 4655 149a A0020000 		.4byte	.LASF203
 4656 149e A0020000 		.4byte	.LASF203
 4657 14a2 13       		.byte	0x13
 4658 14a3 5001     		.2byte	0x150
 4659 14a5 2F       		.uleb128 0x2f
 4660 14a6 52090000 		.4byte	.LASF204
 4661 14aa 52090000 		.4byte	.LASF204
 4662 14ae 0A       		.byte	0xa
 4663 14af 4F       		.byte	0x4f
 4664 14b0 2F       		.uleb128 0x2f
 4665 14b1 7E0A0000 		.4byte	.LASF205
 4666 14b5 7E0A0000 		.4byte	.LASF205
 4667 14b9 0B       		.byte	0xb
 4668 14ba 4F       		.byte	0x4f
 4669 14bb 30       		.uleb128 0x30
 4670 14bc 1C090000 		.4byte	.LASF206
 4671 14c0 1C090000 		.4byte	.LASF206
 4672 14c4 0F       		.byte	0xf
 4673 14c5 8E04     		.2byte	0x48e
 4674 14c7 00       		.byte	0
 4675              		.section	.debug_abbrev,"",%progbits
 4676              	.Ldebug_abbrev0:
 4677 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 112


 4678 0001 11       		.uleb128 0x11
 4679 0002 01       		.byte	0x1
 4680 0003 25       		.uleb128 0x25
 4681 0004 0E       		.uleb128 0xe
 4682 0005 13       		.uleb128 0x13
 4683 0006 0B       		.uleb128 0xb
 4684 0007 03       		.uleb128 0x3
 4685 0008 0E       		.uleb128 0xe
 4686 0009 1B       		.uleb128 0x1b
 4687 000a 0E       		.uleb128 0xe
 4688 000b 55       		.uleb128 0x55
 4689 000c 17       		.uleb128 0x17
 4690 000d 11       		.uleb128 0x11
 4691 000e 01       		.uleb128 0x1
 4692 000f 10       		.uleb128 0x10
 4693 0010 17       		.uleb128 0x17
 4694 0011 00       		.byte	0
 4695 0012 00       		.byte	0
 4696 0013 02       		.uleb128 0x2
 4697 0014 24       		.uleb128 0x24
 4698 0015 00       		.byte	0
 4699 0016 0B       		.uleb128 0xb
 4700 0017 0B       		.uleb128 0xb
 4701 0018 3E       		.uleb128 0x3e
 4702 0019 0B       		.uleb128 0xb
 4703 001a 03       		.uleb128 0x3
 4704 001b 0E       		.uleb128 0xe
 4705 001c 00       		.byte	0
 4706 001d 00       		.byte	0
 4707 001e 03       		.uleb128 0x3
 4708 001f 24       		.uleb128 0x24
 4709 0020 00       		.byte	0
 4710 0021 0B       		.uleb128 0xb
 4711 0022 0B       		.uleb128 0xb
 4712 0023 3E       		.uleb128 0x3e
 4713 0024 0B       		.uleb128 0xb
 4714 0025 03       		.uleb128 0x3
 4715 0026 08       		.uleb128 0x8
 4716 0027 00       		.byte	0
 4717 0028 00       		.byte	0
 4718 0029 04       		.uleb128 0x4
 4719 002a 16       		.uleb128 0x16
 4720 002b 00       		.byte	0
 4721 002c 03       		.uleb128 0x3
 4722 002d 0E       		.uleb128 0xe
 4723 002e 3A       		.uleb128 0x3a
 4724 002f 0B       		.uleb128 0xb
 4725 0030 3B       		.uleb128 0x3b
 4726 0031 0B       		.uleb128 0xb
 4727 0032 49       		.uleb128 0x49
 4728 0033 13       		.uleb128 0x13
 4729 0034 00       		.byte	0
 4730 0035 00       		.byte	0
 4731 0036 05       		.uleb128 0x5
 4732 0037 16       		.uleb128 0x16
 4733 0038 00       		.byte	0
 4734 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 113


 4735 003a 0E       		.uleb128 0xe
 4736 003b 3A       		.uleb128 0x3a
 4737 003c 0B       		.uleb128 0xb
 4738 003d 3B       		.uleb128 0x3b
 4739 003e 05       		.uleb128 0x5
 4740 003f 49       		.uleb128 0x49
 4741 0040 13       		.uleb128 0x13
 4742 0041 00       		.byte	0
 4743 0042 00       		.byte	0
 4744 0043 06       		.uleb128 0x6
 4745 0044 35       		.uleb128 0x35
 4746 0045 00       		.byte	0
 4747 0046 49       		.uleb128 0x49
 4748 0047 13       		.uleb128 0x13
 4749 0048 00       		.byte	0
 4750 0049 00       		.byte	0
 4751 004a 07       		.uleb128 0x7
 4752 004b 0F       		.uleb128 0xf
 4753 004c 00       		.byte	0
 4754 004d 0B       		.uleb128 0xb
 4755 004e 0B       		.uleb128 0xb
 4756 004f 49       		.uleb128 0x49
 4757 0050 13       		.uleb128 0x13
 4758 0051 00       		.byte	0
 4759 0052 00       		.byte	0
 4760 0053 08       		.uleb128 0x8
 4761 0054 15       		.uleb128 0x15
 4762 0055 00       		.byte	0
 4763 0056 27       		.uleb128 0x27
 4764 0057 19       		.uleb128 0x19
 4765 0058 00       		.byte	0
 4766 0059 00       		.byte	0
 4767 005a 09       		.uleb128 0x9
 4768 005b 0F       		.uleb128 0xf
 4769 005c 00       		.byte	0
 4770 005d 0B       		.uleb128 0xb
 4771 005e 0B       		.uleb128 0xb
 4772 005f 00       		.byte	0
 4773 0060 00       		.byte	0
 4774 0061 0A       		.uleb128 0xa
 4775 0062 04       		.uleb128 0x4
 4776 0063 01       		.byte	0x1
 4777 0064 03       		.uleb128 0x3
 4778 0065 0E       		.uleb128 0xe
 4779 0066 0B       		.uleb128 0xb
 4780 0067 0B       		.uleb128 0xb
 4781 0068 49       		.uleb128 0x49
 4782 0069 13       		.uleb128 0x13
 4783 006a 3A       		.uleb128 0x3a
 4784 006b 0B       		.uleb128 0xb
 4785 006c 3B       		.uleb128 0x3b
 4786 006d 0B       		.uleb128 0xb
 4787 006e 01       		.uleb128 0x1
 4788 006f 13       		.uleb128 0x13
 4789 0070 00       		.byte	0
 4790 0071 00       		.byte	0
 4791 0072 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 114


 4792 0073 28       		.uleb128 0x28
 4793 0074 00       		.byte	0
 4794 0075 03       		.uleb128 0x3
 4795 0076 0E       		.uleb128 0xe
 4796 0077 1C       		.uleb128 0x1c
 4797 0078 0D       		.uleb128 0xd
 4798 0079 00       		.byte	0
 4799 007a 00       		.byte	0
 4800 007b 0C       		.uleb128 0xc
 4801 007c 04       		.uleb128 0x4
 4802 007d 01       		.byte	0x1
 4803 007e 0B       		.uleb128 0xb
 4804 007f 0B       		.uleb128 0xb
 4805 0080 49       		.uleb128 0x49
 4806 0081 13       		.uleb128 0x13
 4807 0082 3A       		.uleb128 0x3a
 4808 0083 0B       		.uleb128 0xb
 4809 0084 3B       		.uleb128 0x3b
 4810 0085 0B       		.uleb128 0xb
 4811 0086 01       		.uleb128 0x1
 4812 0087 13       		.uleb128 0x13
 4813 0088 00       		.byte	0
 4814 0089 00       		.byte	0
 4815 008a 0D       		.uleb128 0xd
 4816 008b 28       		.uleb128 0x28
 4817 008c 00       		.byte	0
 4818 008d 03       		.uleb128 0x3
 4819 008e 0E       		.uleb128 0xe
 4820 008f 1C       		.uleb128 0x1c
 4821 0090 0B       		.uleb128 0xb
 4822 0091 00       		.byte	0
 4823 0092 00       		.byte	0
 4824 0093 0E       		.uleb128 0xe
 4825 0094 13       		.uleb128 0x13
 4826 0095 01       		.byte	0x1
 4827 0096 0B       		.uleb128 0xb
 4828 0097 0B       		.uleb128 0xb
 4829 0098 3A       		.uleb128 0x3a
 4830 0099 0B       		.uleb128 0xb
 4831 009a 3B       		.uleb128 0x3b
 4832 009b 0B       		.uleb128 0xb
 4833 009c 01       		.uleb128 0x1
 4834 009d 13       		.uleb128 0x13
 4835 009e 00       		.byte	0
 4836 009f 00       		.byte	0
 4837 00a0 0F       		.uleb128 0xf
 4838 00a1 0D       		.uleb128 0xd
 4839 00a2 00       		.byte	0
 4840 00a3 03       		.uleb128 0x3
 4841 00a4 0E       		.uleb128 0xe
 4842 00a5 3A       		.uleb128 0x3a
 4843 00a6 0B       		.uleb128 0xb
 4844 00a7 3B       		.uleb128 0x3b
 4845 00a8 0B       		.uleb128 0xb
 4846 00a9 49       		.uleb128 0x49
 4847 00aa 13       		.uleb128 0x13
 4848 00ab 38       		.uleb128 0x38
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 115


 4849 00ac 0B       		.uleb128 0xb
 4850 00ad 00       		.byte	0
 4851 00ae 00       		.byte	0
 4852 00af 10       		.uleb128 0x10
 4853 00b0 13       		.uleb128 0x13
 4854 00b1 01       		.byte	0x1
 4855 00b2 0B       		.uleb128 0xb
 4856 00b3 0B       		.uleb128 0xb
 4857 00b4 3A       		.uleb128 0x3a
 4858 00b5 0B       		.uleb128 0xb
 4859 00b6 3B       		.uleb128 0x3b
 4860 00b7 05       		.uleb128 0x5
 4861 00b8 01       		.uleb128 0x1
 4862 00b9 13       		.uleb128 0x13
 4863 00ba 00       		.byte	0
 4864 00bb 00       		.byte	0
 4865 00bc 11       		.uleb128 0x11
 4866 00bd 0D       		.uleb128 0xd
 4867 00be 00       		.byte	0
 4868 00bf 03       		.uleb128 0x3
 4869 00c0 0E       		.uleb128 0xe
 4870 00c1 3A       		.uleb128 0x3a
 4871 00c2 0B       		.uleb128 0xb
 4872 00c3 3B       		.uleb128 0x3b
 4873 00c4 05       		.uleb128 0x5
 4874 00c5 49       		.uleb128 0x49
 4875 00c6 13       		.uleb128 0x13
 4876 00c7 38       		.uleb128 0x38
 4877 00c8 0B       		.uleb128 0xb
 4878 00c9 00       		.byte	0
 4879 00ca 00       		.byte	0
 4880 00cb 12       		.uleb128 0x12
 4881 00cc 0D       		.uleb128 0xd
 4882 00cd 00       		.byte	0
 4883 00ce 03       		.uleb128 0x3
 4884 00cf 08       		.uleb128 0x8
 4885 00d0 3A       		.uleb128 0x3a
 4886 00d1 0B       		.uleb128 0xb
 4887 00d2 3B       		.uleb128 0x3b
 4888 00d3 05       		.uleb128 0x5
 4889 00d4 49       		.uleb128 0x49
 4890 00d5 13       		.uleb128 0x13
 4891 00d6 38       		.uleb128 0x38
 4892 00d7 0B       		.uleb128 0xb
 4893 00d8 00       		.byte	0
 4894 00d9 00       		.byte	0
 4895 00da 13       		.uleb128 0x13
 4896 00db 17       		.uleb128 0x17
 4897 00dc 01       		.byte	0x1
 4898 00dd 0B       		.uleb128 0xb
 4899 00de 0B       		.uleb128 0xb
 4900 00df 3A       		.uleb128 0x3a
 4901 00e0 0B       		.uleb128 0xb
 4902 00e1 3B       		.uleb128 0x3b
 4903 00e2 05       		.uleb128 0x5
 4904 00e3 01       		.uleb128 0x1
 4905 00e4 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 116


 4906 00e5 00       		.byte	0
 4907 00e6 00       		.byte	0
 4908 00e7 14       		.uleb128 0x14
 4909 00e8 0D       		.uleb128 0xd
 4910 00e9 00       		.byte	0
 4911 00ea 03       		.uleb128 0x3
 4912 00eb 08       		.uleb128 0x8
 4913 00ec 3A       		.uleb128 0x3a
 4914 00ed 0B       		.uleb128 0xb
 4915 00ee 3B       		.uleb128 0x3b
 4916 00ef 05       		.uleb128 0x5
 4917 00f0 49       		.uleb128 0x49
 4918 00f1 13       		.uleb128 0x13
 4919 00f2 00       		.byte	0
 4920 00f3 00       		.byte	0
 4921 00f4 15       		.uleb128 0x15
 4922 00f5 0D       		.uleb128 0xd
 4923 00f6 00       		.byte	0
 4924 00f7 03       		.uleb128 0x3
 4925 00f8 0E       		.uleb128 0xe
 4926 00f9 3A       		.uleb128 0x3a
 4927 00fa 0B       		.uleb128 0xb
 4928 00fb 3B       		.uleb128 0x3b
 4929 00fc 05       		.uleb128 0x5
 4930 00fd 49       		.uleb128 0x49
 4931 00fe 13       		.uleb128 0x13
 4932 00ff 00       		.byte	0
 4933 0100 00       		.byte	0
 4934 0101 16       		.uleb128 0x16
 4935 0102 01       		.uleb128 0x1
 4936 0103 01       		.byte	0x1
 4937 0104 49       		.uleb128 0x49
 4938 0105 13       		.uleb128 0x13
 4939 0106 01       		.uleb128 0x1
 4940 0107 13       		.uleb128 0x13
 4941 0108 00       		.byte	0
 4942 0109 00       		.byte	0
 4943 010a 17       		.uleb128 0x17
 4944 010b 21       		.uleb128 0x21
 4945 010c 00       		.byte	0
 4946 010d 49       		.uleb128 0x49
 4947 010e 13       		.uleb128 0x13
 4948 010f 2F       		.uleb128 0x2f
 4949 0110 0B       		.uleb128 0xb
 4950 0111 00       		.byte	0
 4951 0112 00       		.byte	0
 4952 0113 18       		.uleb128 0x18
 4953 0114 04       		.uleb128 0x4
 4954 0115 01       		.byte	0x1
 4955 0116 0B       		.uleb128 0xb
 4956 0117 0B       		.uleb128 0xb
 4957 0118 49       		.uleb128 0x49
 4958 0119 13       		.uleb128 0x13
 4959 011a 3A       		.uleb128 0x3a
 4960 011b 0B       		.uleb128 0xb
 4961 011c 3B       		.uleb128 0x3b
 4962 011d 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 117


 4963 011e 01       		.uleb128 0x1
 4964 011f 13       		.uleb128 0x13
 4965 0120 00       		.byte	0
 4966 0121 00       		.byte	0
 4967 0122 19       		.uleb128 0x19
 4968 0123 2E       		.uleb128 0x2e
 4969 0124 01       		.byte	0x1
 4970 0125 3F       		.uleb128 0x3f
 4971 0126 19       		.uleb128 0x19
 4972 0127 03       		.uleb128 0x3
 4973 0128 0E       		.uleb128 0xe
 4974 0129 3A       		.uleb128 0x3a
 4975 012a 0B       		.uleb128 0xb
 4976 012b 3B       		.uleb128 0x3b
 4977 012c 05       		.uleb128 0x5
 4978 012d 27       		.uleb128 0x27
 4979 012e 19       		.uleb128 0x19
 4980 012f 11       		.uleb128 0x11
 4981 0130 01       		.uleb128 0x1
 4982 0131 12       		.uleb128 0x12
 4983 0132 06       		.uleb128 0x6
 4984 0133 40       		.uleb128 0x40
 4985 0134 18       		.uleb128 0x18
 4986 0135 9742     		.uleb128 0x2117
 4987 0137 19       		.uleb128 0x19
 4988 0138 01       		.uleb128 0x1
 4989 0139 13       		.uleb128 0x13
 4990 013a 00       		.byte	0
 4991 013b 00       		.byte	0
 4992 013c 1A       		.uleb128 0x1a
 4993 013d 898201   		.uleb128 0x4109
 4994 0140 00       		.byte	0
 4995 0141 11       		.uleb128 0x11
 4996 0142 01       		.uleb128 0x1
 4997 0143 31       		.uleb128 0x31
 4998 0144 13       		.uleb128 0x13
 4999 0145 00       		.byte	0
 5000 0146 00       		.byte	0
 5001 0147 1B       		.uleb128 0x1b
 5002 0148 898201   		.uleb128 0x4109
 5003 014b 01       		.byte	0x1
 5004 014c 11       		.uleb128 0x11
 5005 014d 01       		.uleb128 0x1
 5006 014e 31       		.uleb128 0x31
 5007 014f 13       		.uleb128 0x13
 5008 0150 01       		.uleb128 0x1
 5009 0151 13       		.uleb128 0x13
 5010 0152 00       		.byte	0
 5011 0153 00       		.byte	0
 5012 0154 1C       		.uleb128 0x1c
 5013 0155 8A8201   		.uleb128 0x410a
 5014 0158 00       		.byte	0
 5015 0159 02       		.uleb128 0x2
 5016 015a 18       		.uleb128 0x18
 5017 015b 9142     		.uleb128 0x2111
 5018 015d 18       		.uleb128 0x18
 5019 015e 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 118


 5020 015f 00       		.byte	0
 5021 0160 1D       		.uleb128 0x1d
 5022 0161 898201   		.uleb128 0x4109
 5023 0164 01       		.byte	0x1
 5024 0165 11       		.uleb128 0x11
 5025 0166 01       		.uleb128 0x1
 5026 0167 31       		.uleb128 0x31
 5027 0168 13       		.uleb128 0x13
 5028 0169 00       		.byte	0
 5029 016a 00       		.byte	0
 5030 016b 1E       		.uleb128 0x1e
 5031 016c 34       		.uleb128 0x34
 5032 016d 00       		.byte	0
 5033 016e 03       		.uleb128 0x3
 5034 016f 08       		.uleb128 0x8
 5035 0170 3A       		.uleb128 0x3a
 5036 0171 0B       		.uleb128 0xb
 5037 0172 3B       		.uleb128 0x3b
 5038 0173 05       		.uleb128 0x5
 5039 0174 49       		.uleb128 0x49
 5040 0175 13       		.uleb128 0x13
 5041 0176 02       		.uleb128 0x2
 5042 0177 17       		.uleb128 0x17
 5043 0178 00       		.byte	0
 5044 0179 00       		.byte	0
 5045 017a 1F       		.uleb128 0x1f
 5046 017b 05       		.uleb128 0x5
 5047 017c 00       		.byte	0
 5048 017d 03       		.uleb128 0x3
 5049 017e 0E       		.uleb128 0xe
 5050 017f 3A       		.uleb128 0x3a
 5051 0180 0B       		.uleb128 0xb
 5052 0181 3B       		.uleb128 0x3b
 5053 0182 05       		.uleb128 0x5
 5054 0183 49       		.uleb128 0x49
 5055 0184 13       		.uleb128 0x13
 5056 0185 02       		.uleb128 0x2
 5057 0186 17       		.uleb128 0x17
 5058 0187 00       		.byte	0
 5059 0188 00       		.byte	0
 5060 0189 20       		.uleb128 0x20
 5061 018a 2E       		.uleb128 0x2e
 5062 018b 01       		.byte	0x1
 5063 018c 3F       		.uleb128 0x3f
 5064 018d 19       		.uleb128 0x19
 5065 018e 03       		.uleb128 0x3
 5066 018f 0E       		.uleb128 0xe
 5067 0190 3A       		.uleb128 0x3a
 5068 0191 0B       		.uleb128 0xb
 5069 0192 3B       		.uleb128 0x3b
 5070 0193 05       		.uleb128 0x5
 5071 0194 27       		.uleb128 0x27
 5072 0195 19       		.uleb128 0x19
 5073 0196 8701     		.uleb128 0x87
 5074 0198 19       		.uleb128 0x19
 5075 0199 11       		.uleb128 0x11
 5076 019a 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 119


 5077 019b 12       		.uleb128 0x12
 5078 019c 06       		.uleb128 0x6
 5079 019d 40       		.uleb128 0x40
 5080 019e 18       		.uleb128 0x18
 5081 019f 9742     		.uleb128 0x2117
 5082 01a1 19       		.uleb128 0x19
 5083 01a2 01       		.uleb128 0x1
 5084 01a3 13       		.uleb128 0x13
 5085 01a4 00       		.byte	0
 5086 01a5 00       		.byte	0
 5087 01a6 21       		.uleb128 0x21
 5088 01a7 05       		.uleb128 0x5
 5089 01a8 00       		.byte	0
 5090 01a9 03       		.uleb128 0x3
 5091 01aa 08       		.uleb128 0x8
 5092 01ab 3A       		.uleb128 0x3a
 5093 01ac 0B       		.uleb128 0xb
 5094 01ad 3B       		.uleb128 0x3b
 5095 01ae 05       		.uleb128 0x5
 5096 01af 49       		.uleb128 0x49
 5097 01b0 13       		.uleb128 0x13
 5098 01b1 02       		.uleb128 0x2
 5099 01b2 17       		.uleb128 0x17
 5100 01b3 00       		.byte	0
 5101 01b4 00       		.byte	0
 5102 01b5 22       		.uleb128 0x22
 5103 01b6 34       		.uleb128 0x34
 5104 01b7 00       		.byte	0
 5105 01b8 03       		.uleb128 0x3
 5106 01b9 08       		.uleb128 0x8
 5107 01ba 3A       		.uleb128 0x3a
 5108 01bb 0B       		.uleb128 0xb
 5109 01bc 3B       		.uleb128 0x3b
 5110 01bd 05       		.uleb128 0x5
 5111 01be 49       		.uleb128 0x49
 5112 01bf 13       		.uleb128 0x13
 5113 01c0 02       		.uleb128 0x2
 5114 01c1 18       		.uleb128 0x18
 5115 01c2 00       		.byte	0
 5116 01c3 00       		.byte	0
 5117 01c4 23       		.uleb128 0x23
 5118 01c5 34       		.uleb128 0x34
 5119 01c6 00       		.byte	0
 5120 01c7 03       		.uleb128 0x3
 5121 01c8 0E       		.uleb128 0xe
 5122 01c9 3A       		.uleb128 0x3a
 5123 01ca 0B       		.uleb128 0xb
 5124 01cb 3B       		.uleb128 0x3b
 5125 01cc 05       		.uleb128 0x5
 5126 01cd 49       		.uleb128 0x49
 5127 01ce 13       		.uleb128 0x13
 5128 01cf 02       		.uleb128 0x2
 5129 01d0 17       		.uleb128 0x17
 5130 01d1 00       		.byte	0
 5131 01d2 00       		.byte	0
 5132 01d3 24       		.uleb128 0x24
 5133 01d4 34       		.uleb128 0x34
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 120


 5134 01d5 00       		.byte	0
 5135 01d6 03       		.uleb128 0x3
 5136 01d7 0E       		.uleb128 0xe
 5137 01d8 3A       		.uleb128 0x3a
 5138 01d9 0B       		.uleb128 0xb
 5139 01da 3B       		.uleb128 0x3b
 5140 01db 05       		.uleb128 0x5
 5141 01dc 49       		.uleb128 0x49
 5142 01dd 13       		.uleb128 0x13
 5143 01de 02       		.uleb128 0x2
 5144 01df 18       		.uleb128 0x18
 5145 01e0 00       		.byte	0
 5146 01e1 00       		.byte	0
 5147 01e2 25       		.uleb128 0x25
 5148 01e3 05       		.uleb128 0x5
 5149 01e4 00       		.byte	0
 5150 01e5 03       		.uleb128 0x3
 5151 01e6 0E       		.uleb128 0xe
 5152 01e7 3A       		.uleb128 0x3a
 5153 01e8 0B       		.uleb128 0xb
 5154 01e9 3B       		.uleb128 0x3b
 5155 01ea 05       		.uleb128 0x5
 5156 01eb 49       		.uleb128 0x49
 5157 01ec 13       		.uleb128 0x13
 5158 01ed 02       		.uleb128 0x2
 5159 01ee 18       		.uleb128 0x18
 5160 01ef 00       		.byte	0
 5161 01f0 00       		.byte	0
 5162 01f1 26       		.uleb128 0x26
 5163 01f2 2E       		.uleb128 0x2e
 5164 01f3 01       		.byte	0x1
 5165 01f4 3F       		.uleb128 0x3f
 5166 01f5 19       		.uleb128 0x19
 5167 01f6 03       		.uleb128 0x3
 5168 01f7 0E       		.uleb128 0xe
 5169 01f8 3A       		.uleb128 0x3a
 5170 01f9 0B       		.uleb128 0xb
 5171 01fa 3B       		.uleb128 0x3b
 5172 01fb 05       		.uleb128 0x5
 5173 01fc 27       		.uleb128 0x27
 5174 01fd 19       		.uleb128 0x19
 5175 01fe 11       		.uleb128 0x11
 5176 01ff 01       		.uleb128 0x1
 5177 0200 12       		.uleb128 0x12
 5178 0201 06       		.uleb128 0x6
 5179 0202 40       		.uleb128 0x40
 5180 0203 18       		.uleb128 0x18
 5181 0204 9642     		.uleb128 0x2116
 5182 0206 19       		.uleb128 0x19
 5183 0207 01       		.uleb128 0x1
 5184 0208 13       		.uleb128 0x13
 5185 0209 00       		.byte	0
 5186 020a 00       		.byte	0
 5187 020b 27       		.uleb128 0x27
 5188 020c 2E       		.uleb128 0x2e
 5189 020d 01       		.byte	0x1
 5190 020e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 121


 5191 020f 19       		.uleb128 0x19
 5192 0210 03       		.uleb128 0x3
 5193 0211 0E       		.uleb128 0xe
 5194 0212 3A       		.uleb128 0x3a
 5195 0213 0B       		.uleb128 0xb
 5196 0214 3B       		.uleb128 0x3b
 5197 0215 05       		.uleb128 0x5
 5198 0216 27       		.uleb128 0x27
 5199 0217 19       		.uleb128 0x19
 5200 0218 49       		.uleb128 0x49
 5201 0219 13       		.uleb128 0x13
 5202 021a 11       		.uleb128 0x11
 5203 021b 01       		.uleb128 0x1
 5204 021c 12       		.uleb128 0x12
 5205 021d 06       		.uleb128 0x6
 5206 021e 40       		.uleb128 0x40
 5207 021f 18       		.uleb128 0x18
 5208 0220 9742     		.uleb128 0x2117
 5209 0222 19       		.uleb128 0x19
 5210 0223 01       		.uleb128 0x1
 5211 0224 13       		.uleb128 0x13
 5212 0225 00       		.byte	0
 5213 0226 00       		.byte	0
 5214 0227 28       		.uleb128 0x28
 5215 0228 2E       		.uleb128 0x2e
 5216 0229 01       		.byte	0x1
 5217 022a 3F       		.uleb128 0x3f
 5218 022b 19       		.uleb128 0x19
 5219 022c 03       		.uleb128 0x3
 5220 022d 0E       		.uleb128 0xe
 5221 022e 3A       		.uleb128 0x3a
 5222 022f 0B       		.uleb128 0xb
 5223 0230 3B       		.uleb128 0x3b
 5224 0231 05       		.uleb128 0x5
 5225 0232 27       		.uleb128 0x27
 5226 0233 19       		.uleb128 0x19
 5227 0234 8701     		.uleb128 0x87
 5228 0236 19       		.uleb128 0x19
 5229 0237 11       		.uleb128 0x11
 5230 0238 01       		.uleb128 0x1
 5231 0239 12       		.uleb128 0x12
 5232 023a 06       		.uleb128 0x6
 5233 023b 40       		.uleb128 0x40
 5234 023c 18       		.uleb128 0x18
 5235 023d 9642     		.uleb128 0x2116
 5236 023f 19       		.uleb128 0x19
 5237 0240 01       		.uleb128 0x1
 5238 0241 13       		.uleb128 0x13
 5239 0242 00       		.byte	0
 5240 0243 00       		.byte	0
 5241 0244 29       		.uleb128 0x29
 5242 0245 0B       		.uleb128 0xb
 5243 0246 01       		.byte	0x1
 5244 0247 11       		.uleb128 0x11
 5245 0248 01       		.uleb128 0x1
 5246 0249 12       		.uleb128 0x12
 5247 024a 06       		.uleb128 0x6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 122


 5248 024b 00       		.byte	0
 5249 024c 00       		.byte	0
 5250 024d 2A       		.uleb128 0x2a
 5251 024e 2E       		.uleb128 0x2e
 5252 024f 01       		.byte	0x1
 5253 0250 3F       		.uleb128 0x3f
 5254 0251 19       		.uleb128 0x19
 5255 0252 03       		.uleb128 0x3
 5256 0253 0E       		.uleb128 0xe
 5257 0254 3A       		.uleb128 0x3a
 5258 0255 0B       		.uleb128 0xb
 5259 0256 3B       		.uleb128 0x3b
 5260 0257 05       		.uleb128 0x5
 5261 0258 27       		.uleb128 0x27
 5262 0259 19       		.uleb128 0x19
 5263 025a 49       		.uleb128 0x49
 5264 025b 13       		.uleb128 0x13
 5265 025c 11       		.uleb128 0x11
 5266 025d 01       		.uleb128 0x1
 5267 025e 12       		.uleb128 0x12
 5268 025f 06       		.uleb128 0x6
 5269 0260 40       		.uleb128 0x40
 5270 0261 18       		.uleb128 0x18
 5271 0262 9642     		.uleb128 0x2116
 5272 0264 19       		.uleb128 0x19
 5273 0265 01       		.uleb128 0x1
 5274 0266 13       		.uleb128 0x13
 5275 0267 00       		.byte	0
 5276 0268 00       		.byte	0
 5277 0269 2B       		.uleb128 0x2b
 5278 026a 34       		.uleb128 0x34
 5279 026b 00       		.byte	0
 5280 026c 03       		.uleb128 0x3
 5281 026d 0E       		.uleb128 0xe
 5282 026e 3A       		.uleb128 0x3a
 5283 026f 0B       		.uleb128 0xb
 5284 0270 3B       		.uleb128 0x3b
 5285 0271 05       		.uleb128 0x5
 5286 0272 49       		.uleb128 0x49
 5287 0273 13       		.uleb128 0x13
 5288 0274 1C       		.uleb128 0x1c
 5289 0275 0B       		.uleb128 0xb
 5290 0276 00       		.byte	0
 5291 0277 00       		.byte	0
 5292 0278 2C       		.uleb128 0x2c
 5293 0279 34       		.uleb128 0x34
 5294 027a 00       		.byte	0
 5295 027b 03       		.uleb128 0x3
 5296 027c 0E       		.uleb128 0xe
 5297 027d 3A       		.uleb128 0x3a
 5298 027e 0B       		.uleb128 0xb
 5299 027f 3B       		.uleb128 0x3b
 5300 0280 0B       		.uleb128 0xb
 5301 0281 49       		.uleb128 0x49
 5302 0282 13       		.uleb128 0x13
 5303 0283 3F       		.uleb128 0x3f
 5304 0284 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 123


 5305 0285 02       		.uleb128 0x2
 5306 0286 18       		.uleb128 0x18
 5307 0287 00       		.byte	0
 5308 0288 00       		.byte	0
 5309 0289 2D       		.uleb128 0x2d
 5310 028a 34       		.uleb128 0x34
 5311 028b 00       		.byte	0
 5312 028c 03       		.uleb128 0x3
 5313 028d 08       		.uleb128 0x8
 5314 028e 3A       		.uleb128 0x3a
 5315 028f 0B       		.uleb128 0xb
 5316 0290 3B       		.uleb128 0x3b
 5317 0291 0B       		.uleb128 0xb
 5318 0292 49       		.uleb128 0x49
 5319 0293 13       		.uleb128 0x13
 5320 0294 3F       		.uleb128 0x3f
 5321 0295 19       		.uleb128 0x19
 5322 0296 02       		.uleb128 0x2
 5323 0297 18       		.uleb128 0x18
 5324 0298 00       		.byte	0
 5325 0299 00       		.byte	0
 5326 029a 2E       		.uleb128 0x2e
 5327 029b 34       		.uleb128 0x34
 5328 029c 00       		.byte	0
 5329 029d 03       		.uleb128 0x3
 5330 029e 0E       		.uleb128 0xe
 5331 029f 3A       		.uleb128 0x3a
 5332 02a0 0B       		.uleb128 0xb
 5333 02a1 3B       		.uleb128 0x3b
 5334 02a2 05       		.uleb128 0x5
 5335 02a3 49       		.uleb128 0x49
 5336 02a4 13       		.uleb128 0x13
 5337 02a5 3F       		.uleb128 0x3f
 5338 02a6 19       		.uleb128 0x19
 5339 02a7 02       		.uleb128 0x2
 5340 02a8 18       		.uleb128 0x18
 5341 02a9 00       		.byte	0
 5342 02aa 00       		.byte	0
 5343 02ab 2F       		.uleb128 0x2f
 5344 02ac 2E       		.uleb128 0x2e
 5345 02ad 00       		.byte	0
 5346 02ae 3F       		.uleb128 0x3f
 5347 02af 19       		.uleb128 0x19
 5348 02b0 3C       		.uleb128 0x3c
 5349 02b1 19       		.uleb128 0x19
 5350 02b2 6E       		.uleb128 0x6e
 5351 02b3 0E       		.uleb128 0xe
 5352 02b4 03       		.uleb128 0x3
 5353 02b5 0E       		.uleb128 0xe
 5354 02b6 3A       		.uleb128 0x3a
 5355 02b7 0B       		.uleb128 0xb
 5356 02b8 3B       		.uleb128 0x3b
 5357 02b9 0B       		.uleb128 0xb
 5358 02ba 00       		.byte	0
 5359 02bb 00       		.byte	0
 5360 02bc 30       		.uleb128 0x30
 5361 02bd 2E       		.uleb128 0x2e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 124


 5362 02be 00       		.byte	0
 5363 02bf 3F       		.uleb128 0x3f
 5364 02c0 19       		.uleb128 0x19
 5365 02c1 3C       		.uleb128 0x3c
 5366 02c2 19       		.uleb128 0x19
 5367 02c3 6E       		.uleb128 0x6e
 5368 02c4 0E       		.uleb128 0xe
 5369 02c5 03       		.uleb128 0x3
 5370 02c6 0E       		.uleb128 0xe
 5371 02c7 3A       		.uleb128 0x3a
 5372 02c8 0B       		.uleb128 0xb
 5373 02c9 3B       		.uleb128 0x3b
 5374 02ca 05       		.uleb128 0x5
 5375 02cb 00       		.byte	0
 5376 02cc 00       		.byte	0
 5377 02cd 31       		.uleb128 0x31
 5378 02ce 2E       		.uleb128 0x2e
 5379 02cf 00       		.byte	0
 5380 02d0 3F       		.uleb128 0x3f
 5381 02d1 19       		.uleb128 0x19
 5382 02d2 3C       		.uleb128 0x3c
 5383 02d3 19       		.uleb128 0x19
 5384 02d4 6E       		.uleb128 0x6e
 5385 02d5 0E       		.uleb128 0xe
 5386 02d6 03       		.uleb128 0x3
 5387 02d7 0E       		.uleb128 0xe
 5388 02d8 00       		.byte	0
 5389 02d9 00       		.byte	0
 5390 02da 00       		.byte	0
 5391              		.section	.debug_loc,"",%progbits
 5392              	.Ldebug_loc0:
 5393              	.LLST0:
 5394 0000 28000000 		.4byte	.LVL10
 5395 0004 2C000000 		.4byte	.LVL11
 5396 0008 0200     		.2byte	0x2
 5397 000a 30       		.byte	0x30
 5398 000b 9F       		.byte	0x9f
 5399 000c 2C000000 		.4byte	.LVL11
 5400 0010 48000000 		.4byte	.LVL16
 5401 0014 0100     		.2byte	0x1
 5402 0016 54       		.byte	0x54
 5403 0017 00000000 		.4byte	0
 5404 001b 00000000 		.4byte	0
 5405              	.LLST1:
 5406 001f 00000000 		.4byte	.LVL20
 5407 0023 12000000 		.4byte	.LVL21
 5408 0027 0100     		.2byte	0x1
 5409 0029 50       		.byte	0x50
 5410 002a 12000000 		.4byte	.LVL21
 5411 002e 1C000000 		.4byte	.LFE33
 5412 0032 0400     		.2byte	0x4
 5413 0034 F3       		.byte	0xf3
 5414 0035 01       		.uleb128 0x1
 5415 0036 50       		.byte	0x50
 5416 0037 9F       		.byte	0x9f
 5417 0038 00000000 		.4byte	0
 5418 003c 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 125


 5419              	.LLST2:
 5420 0040 00000000 		.4byte	.LVL22
 5421 0044 06000000 		.4byte	.LVL23
 5422 0048 0100     		.2byte	0x1
 5423 004a 50       		.byte	0x50
 5424 004b 06000000 		.4byte	.LVL23
 5425 004f D8000000 		.4byte	.LFE35
 5426 0053 0400     		.2byte	0x4
 5427 0055 F3       		.byte	0xf3
 5428 0056 01       		.uleb128 0x1
 5429 0057 50       		.byte	0x50
 5430 0058 9F       		.byte	0x9f
 5431 0059 00000000 		.4byte	0
 5432 005d 00000000 		.4byte	0
 5433              	.LLST3:
 5434 0061 28000000 		.4byte	.LVL26
 5435 0065 40000000 		.4byte	.LVL30
 5436 0069 0300     		.2byte	0x3
 5437 006b 08       		.byte	0x8
 5438 006c 20       		.byte	0x20
 5439 006d 9F       		.byte	0x9f
 5440 006e 00000000 		.4byte	0
 5441 0072 00000000 		.4byte	0
 5442              	.LLST4:
 5443 0076 30000000 		.4byte	.LVL27
 5444 007a 40000000 		.4byte	.LVL30
 5445 007e 0200     		.2byte	0x2
 5446 0080 30       		.byte	0x30
 5447 0081 9F       		.byte	0x9f
 5448 0082 00000000 		.4byte	0
 5449 0086 00000000 		.4byte	0
 5450              	.LLST5:
 5451 008a 00000000 		.4byte	.LVL41
 5452 008e 0D000000 		.4byte	.LVL43-1
 5453 0092 0100     		.2byte	0x1
 5454 0094 50       		.byte	0x50
 5455 0095 0D000000 		.4byte	.LVL43-1
 5456 0099 36000000 		.4byte	.LVL50
 5457 009d 0100     		.2byte	0x1
 5458 009f 55       		.byte	0x55
 5459 00a0 36000000 		.4byte	.LVL50
 5460 00a4 40000000 		.4byte	.LFE37
 5461 00a8 0600     		.2byte	0x6
 5462 00aa F3       		.byte	0xf3
 5463 00ab 03       		.uleb128 0x3
 5464 00ac F5       		.byte	0xf5
 5465 00ad 00       		.uleb128 0
 5466 00ae 25       		.uleb128 0x25
 5467 00af 9F       		.byte	0x9f
 5468 00b0 00000000 		.4byte	0
 5469 00b4 00000000 		.4byte	0
 5470              	.LLST6:
 5471 00b8 04000000 		.4byte	.LVL42
 5472 00bc 0D000000 		.4byte	.LVL43-1
 5473 00c0 0100     		.2byte	0x1
 5474 00c2 50       		.byte	0x50
 5475 00c3 0D000000 		.4byte	.LVL43-1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 126


 5476 00c7 24000000 		.4byte	.LVL45
 5477 00cb 0100     		.2byte	0x1
 5478 00cd 55       		.byte	0x55
 5479 00ce 24000000 		.4byte	.LVL45
 5480 00d2 36000000 		.4byte	.LVL49
 5481 00d6 0100     		.2byte	0x1
 5482 00d8 54       		.byte	0x54
 5483 00d9 00000000 		.4byte	0
 5484 00dd 00000000 		.4byte	0
 5485              	.LLST7:
 5486 00e1 06000000 		.4byte	.LVL51
 5487 00e5 14000000 		.4byte	.LVL52
 5488 00e9 0100     		.2byte	0x1
 5489 00eb 50       		.byte	0x50
 5490 00ec 00000000 		.4byte	0
 5491 00f0 00000000 		.4byte	0
 5492              	.LLST8:
 5493 00f4 00000000 		.4byte	.LVL53
 5494 00f8 04000000 		.4byte	.LVL54
 5495 00fc 0100     		.2byte	0x1
 5496 00fe 50       		.byte	0x50
 5497 00ff 04000000 		.4byte	.LVL54
 5498 0103 D4020000 		.4byte	.LFE36
 5499 0107 0400     		.2byte	0x4
 5500 0109 F3       		.byte	0xf3
 5501 010a 01       		.uleb128 0x1
 5502 010b 50       		.byte	0x50
 5503 010c 9F       		.byte	0x9f
 5504 010d 00000000 		.4byte	0
 5505 0111 00000000 		.4byte	0
 5506              	.LLST9:
 5507 0115 36000000 		.4byte	.LVL58
 5508 0119 E8000000 		.4byte	.LVL73
 5509 011d 0100     		.2byte	0x1
 5510 011f 54       		.byte	0x54
 5511 0120 3E010000 		.4byte	.LVL82
 5512 0124 6E010000 		.4byte	.LVL86
 5513 0128 0100     		.2byte	0x1
 5514 012a 54       		.byte	0x54
 5515 012b 00000000 		.4byte	0
 5516 012f 00000000 		.4byte	0
 5517              	.LLST10:
 5518 0133 34000000 		.4byte	.LVL57
 5519 0137 DC000000 		.4byte	.LVL70
 5520 013b 0100     		.2byte	0x1
 5521 013d 50       		.byte	0x50
 5522 013e 3E010000 		.4byte	.LVL82
 5523 0142 40010000 		.4byte	.LVL83
 5524 0146 0100     		.2byte	0x1
 5525 0148 50       		.byte	0x50
 5526 0149 00000000 		.4byte	0
 5527 014d 00000000 		.4byte	0
 5528              	.LLST11:
 5529 0151 3C000000 		.4byte	.LVL59
 5530 0155 42000000 		.4byte	.LVL60
 5531 0159 0200     		.2byte	0x2
 5532 015b 30       		.byte	0x30
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 127


 5533 015c 9F       		.byte	0x9f
 5534 015d 42000000 		.4byte	.LVL60
 5535 0161 4C000000 		.4byte	.LVL63
 5536 0165 0100     		.2byte	0x1
 5537 0167 53       		.byte	0x53
 5538 0168 4E000000 		.4byte	.LVL64
 5539 016c 58000000 		.4byte	.LVL65
 5540 0170 0100     		.2byte	0x1
 5541 0172 53       		.byte	0x53
 5542 0173 6A000000 		.4byte	.LVL67
 5543 0177 6C000000 		.4byte	.LVL68
 5544 017b 0100     		.2byte	0x1
 5545 017d 53       		.byte	0x53
 5546 017e 0A020000 		.4byte	.LVL89
 5547 0182 10020000 		.4byte	.LVL90
 5548 0186 0200     		.2byte	0x2
 5549 0188 30       		.byte	0x30
 5550 0189 9F       		.byte	0x9f
 5551 018a 10020000 		.4byte	.LVL90
 5552 018e 1A020000 		.4byte	.LVL93
 5553 0192 0100     		.2byte	0x1
 5554 0194 53       		.byte	0x53
 5555 0195 1C020000 		.4byte	.LVL94
 5556 0199 2B020000 		.4byte	.LVL96-1
 5557 019d 0100     		.2byte	0x1
 5558 019f 53       		.byte	0x53
 5559 01a0 00000000 		.4byte	0
 5560 01a4 00000000 		.4byte	0
 5561              	.LLST12:
 5562 01a8 3C000000 		.4byte	.LVL59
 5563 01ac 42000000 		.4byte	.LVL60
 5564 01b0 0200     		.2byte	0x2
 5565 01b2 30       		.byte	0x30
 5566 01b3 9F       		.byte	0x9f
 5567 01b4 42000000 		.4byte	.LVL60
 5568 01b8 48000000 		.4byte	.LVL61
 5569 01bc 0100     		.2byte	0x1
 5570 01be 52       		.byte	0x52
 5571 01bf 4A000000 		.4byte	.LVL62
 5572 01c3 5C000000 		.4byte	.LVL66
 5573 01c7 0100     		.2byte	0x1
 5574 01c9 52       		.byte	0x52
 5575 01ca 6A000000 		.4byte	.LVL67
 5576 01ce 82000000 		.4byte	.LVL69
 5577 01d2 0100     		.2byte	0x1
 5578 01d4 52       		.byte	0x52
 5579 01d5 3E010000 		.4byte	.LVL82
 5580 01d9 46010000 		.4byte	.LVL84
 5581 01dd 0100     		.2byte	0x1
 5582 01df 52       		.byte	0x52
 5583 01e0 0A020000 		.4byte	.LVL89
 5584 01e4 10020000 		.4byte	.LVL90
 5585 01e8 0200     		.2byte	0x2
 5586 01ea 30       		.byte	0x30
 5587 01eb 9F       		.byte	0x9f
 5588 01ec 10020000 		.4byte	.LVL90
 5589 01f0 16020000 		.4byte	.LVL91
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 128


 5590 01f4 0100     		.2byte	0x1
 5591 01f6 52       		.byte	0x52
 5592 01f7 18020000 		.4byte	.LVL92
 5593 01fb 24020000 		.4byte	.LVL95
 5594 01ff 0100     		.2byte	0x1
 5595 0201 52       		.byte	0x52
 5596 0202 00000000 		.4byte	0
 5597 0206 00000000 		.4byte	0
 5598              	.LLST13:
 5599 020a DC000000 		.4byte	.LVL70
 5600 020e E5000000 		.4byte	.LVL72-1
 5601 0212 0100     		.2byte	0x1
 5602 0214 50       		.byte	0x50
 5603 0215 F0000000 		.4byte	.LVL74
 5604 0219 F9000000 		.4byte	.LVL76-1
 5605 021d 0100     		.2byte	0x1
 5606 021f 50       		.byte	0x50
 5607 0220 00000000 		.4byte	0
 5608 0224 00000000 		.4byte	0
 5609              	.LLST14:
 5610 0228 00000000 		.4byte	.LVL102
 5611 022c 0F000000 		.4byte	.LVL103-1
 5612 0230 0100     		.2byte	0x1
 5613 0232 50       		.byte	0x50
 5614 0233 0F000000 		.4byte	.LVL103-1
 5615 0237 44000000 		.4byte	.LFE40
 5616 023b 0400     		.2byte	0x4
 5617 023d F3       		.byte	0xf3
 5618 023e 01       		.uleb128 0x1
 5619 023f 50       		.byte	0x50
 5620 0240 9F       		.byte	0x9f
 5621 0241 00000000 		.4byte	0
 5622 0245 00000000 		.4byte	0
 5623              	.LLST15:
 5624 0249 00000000 		.4byte	.LVL102
 5625 024d 0F000000 		.4byte	.LVL103-1
 5626 0251 0100     		.2byte	0x1
 5627 0253 51       		.byte	0x51
 5628 0254 0F000000 		.4byte	.LVL103-1
 5629 0258 32000000 		.4byte	.LVL111
 5630 025c 0100     		.2byte	0x1
 5631 025e 56       		.byte	0x56
 5632 025f 32000000 		.4byte	.LVL111
 5633 0263 44000000 		.4byte	.LFE40
 5634 0267 0600     		.2byte	0x6
 5635 0269 F3       		.byte	0xf3
 5636 026a 03       		.uleb128 0x3
 5637 026b F5       		.byte	0xf5
 5638 026c 01       		.uleb128 0x1
 5639 026d 25       		.uleb128 0x25
 5640 026e 9F       		.byte	0x9f
 5641 026f 00000000 		.4byte	0
 5642 0273 00000000 		.4byte	0
 5643              	.LLST16:
 5644 0277 00000000 		.4byte	.LVL102
 5645 027b 0F000000 		.4byte	.LVL103-1
 5646 027f 0100     		.2byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 129


 5647 0281 52       		.byte	0x52
 5648 0282 0F000000 		.4byte	.LVL103-1
 5649 0286 32000000 		.4byte	.LVL110
 5650 028a 0100     		.2byte	0x1
 5651 028c 55       		.byte	0x55
 5652 028d 32000000 		.4byte	.LVL110
 5653 0291 44000000 		.4byte	.LFE40
 5654 0295 0600     		.2byte	0x6
 5655 0297 F3       		.byte	0xf3
 5656 0298 03       		.uleb128 0x3
 5657 0299 F5       		.byte	0xf5
 5658 029a 02       		.uleb128 0x2
 5659 029b 25       		.uleb128 0x25
 5660 029c 9F       		.byte	0x9f
 5661 029d 00000000 		.4byte	0
 5662 02a1 00000000 		.4byte	0
 5663              	.LLST17:
 5664 02a5 00000000 		.4byte	.LVL102
 5665 02a9 0F000000 		.4byte	.LVL103-1
 5666 02ad 0100     		.2byte	0x1
 5667 02af 53       		.byte	0x53
 5668 02b0 0F000000 		.4byte	.LVL103-1
 5669 02b4 32000000 		.4byte	.LVL109
 5670 02b8 0100     		.2byte	0x1
 5671 02ba 54       		.byte	0x54
 5672 02bb 32000000 		.4byte	.LVL109
 5673 02bf 44000000 		.4byte	.LFE40
 5674 02c3 0600     		.2byte	0x6
 5675 02c5 F3       		.byte	0xf3
 5676 02c6 03       		.uleb128 0x3
 5677 02c7 F5       		.byte	0xf5
 5678 02c8 03       		.uleb128 0x3
 5679 02c9 25       		.uleb128 0x25
 5680 02ca 9F       		.byte	0x9f
 5681 02cb 00000000 		.4byte	0
 5682 02cf 00000000 		.4byte	0
 5683              	.LLST18:
 5684 02d3 18000000 		.4byte	.LVL105
 5685 02d7 21000000 		.4byte	.LVL106-1
 5686 02db 0100     		.2byte	0x1
 5687 02dd 50       		.byte	0x50
 5688 02de 21000000 		.4byte	.LVL106-1
 5689 02e2 32000000 		.4byte	.LVL108
 5690 02e6 0100     		.2byte	0x1
 5691 02e8 57       		.byte	0x57
 5692 02e9 00000000 		.4byte	0
 5693 02ed 00000000 		.4byte	0
 5694              	.LLST19:
 5695 02f1 00000000 		.4byte	.LVL112
 5696 02f5 11000000 		.4byte	.LVL113-1
 5697 02f9 0100     		.2byte	0x1
 5698 02fb 50       		.byte	0x50
 5699 02fc 11000000 		.4byte	.LVL113-1
 5700 0300 F8000000 		.4byte	.LVL132
 5701 0304 0100     		.2byte	0x1
 5702 0306 54       		.byte	0x54
 5703 0307 F8000000 		.4byte	.LVL132
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 130


 5704 030b FA000000 		.4byte	.LVL133
 5705 030f 0100     		.2byte	0x1
 5706 0311 50       		.byte	0x50
 5707 0312 FA000000 		.4byte	.LVL133
 5708 0316 FA000000 		.4byte	.LVL134
 5709 031a 0100     		.2byte	0x1
 5710 031c 54       		.byte	0x54
 5711 031d FA000000 		.4byte	.LVL134
 5712 0321 38010000 		.4byte	.LFE41
 5713 0325 0400     		.2byte	0x4
 5714 0327 F3       		.byte	0xf3
 5715 0328 01       		.uleb128 0x1
 5716 0329 50       		.byte	0x50
 5717 032a 9F       		.byte	0x9f
 5718 032b 00000000 		.4byte	0
 5719 032f 00000000 		.4byte	0
 5720              	.LLST20:
 5721 0333 00000000 		.4byte	.LVL112
 5722 0337 11000000 		.4byte	.LVL113-1
 5723 033b 0100     		.2byte	0x1
 5724 033d 51       		.byte	0x51
 5725 033e 11000000 		.4byte	.LVL113-1
 5726 0342 4A000000 		.4byte	.LVL119
 5727 0346 0100     		.2byte	0x1
 5728 0348 55       		.byte	0x55
 5729 0349 4A000000 		.4byte	.LVL119
 5730 034d F8000000 		.4byte	.LVL132
 5731 0351 0400     		.2byte	0x4
 5732 0353 F3       		.byte	0xf3
 5733 0354 01       		.uleb128 0x1
 5734 0355 51       		.byte	0x51
 5735 0356 9F       		.byte	0x9f
 5736 0357 F8000000 		.4byte	.LVL132
 5737 035b FA000000 		.4byte	.LVL133
 5738 035f 0100     		.2byte	0x1
 5739 0361 51       		.byte	0x51
 5740 0362 FA000000 		.4byte	.LVL133
 5741 0366 38010000 		.4byte	.LFE41
 5742 036a 0400     		.2byte	0x4
 5743 036c F3       		.byte	0xf3
 5744 036d 01       		.uleb128 0x1
 5745 036e 51       		.byte	0x51
 5746 036f 9F       		.byte	0x9f
 5747 0370 00000000 		.4byte	0
 5748 0374 00000000 		.4byte	0
 5749              	.LLST21:
 5750 0378 3A000000 		.4byte	.LVL116
 5751 037c 3D000000 		.4byte	.LVL117-1
 5752 0380 0100     		.2byte	0x1
 5753 0382 50       		.byte	0x50
 5754 0383 00000000 		.4byte	0
 5755 0387 00000000 		.4byte	0
 5756              	.LLST22:
 5757 038b 8A000000 		.4byte	.LVL123
 5758 038f BE000000 		.4byte	.LVL129
 5759 0393 0100     		.2byte	0x1
 5760 0395 55       		.byte	0x55
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 131


 5761 0396 00000000 		.4byte	0
 5762 039a 00000000 		.4byte	0
 5763              	.LLST23:
 5764 039e 1C000000 		.4byte	.LVL114
 5765 03a2 33000000 		.4byte	.LVL115-1
 5766 03a6 0100     		.2byte	0x1
 5767 03a8 50       		.byte	0x50
 5768 03a9 00000000 		.4byte	0
 5769 03ad 00000000 		.4byte	0
 5770              	.LLST24:
 5771 03b1 00000000 		.4byte	.LVL135
 5772 03b5 19000000 		.4byte	.LVL137-1
 5773 03b9 0100     		.2byte	0x1
 5774 03bb 50       		.byte	0x50
 5775 03bc 19000000 		.4byte	.LVL137-1
 5776 03c0 24000000 		.4byte	.LFE42
 5777 03c4 0400     		.2byte	0x4
 5778 03c6 F3       		.byte	0xf3
 5779 03c7 01       		.uleb128 0x1
 5780 03c8 50       		.byte	0x50
 5781 03c9 9F       		.byte	0x9f
 5782 03ca 00000000 		.4byte	0
 5783 03ce 00000000 		.4byte	0
 5784              	.LLST25:
 5785 03d2 0A000000 		.4byte	.LVL136
 5786 03d6 1E000000 		.4byte	.LVL138
 5787 03da 0100     		.2byte	0x1
 5788 03dc 54       		.byte	0x54
 5789 03dd 1E000000 		.4byte	.LVL138
 5790 03e1 24000000 		.4byte	.LFE42
 5791 03e5 0500     		.2byte	0x5
 5792 03e7 03       		.byte	0x3
 5793 03e8 00000000 		.4byte	inAuto
 5794 03ec 00000000 		.4byte	0
 5795 03f0 00000000 		.4byte	0
 5796              	.LLST26:
 5797 03f4 00000000 		.4byte	.LVL139
 5798 03f8 07000000 		.4byte	.LVL140-1
 5799 03fc 0100     		.2byte	0x1
 5800 03fe 50       		.byte	0x50
 5801 03ff 07000000 		.4byte	.LVL140-1
 5802 0403 1C000000 		.4byte	.LFE43
 5803 0407 0600     		.2byte	0x6
 5804 0409 F3       		.byte	0xf3
 5805 040a 03       		.uleb128 0x3
 5806 040b F5       		.byte	0xf5
 5807 040c 00       		.uleb128 0
 5808 040d 25       		.uleb128 0x25
 5809 040e 9F       		.byte	0x9f
 5810 040f 00000000 		.4byte	0
 5811 0413 00000000 		.4byte	0
 5812              	.LLST27:
 5813 0417 10000000 		.4byte	.LVL141
 5814 041b 13000000 		.4byte	.LVL142-1
 5815 041f 0100     		.2byte	0x1
 5816 0421 50       		.byte	0x50
 5817 0422 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 132


 5818 0426 00000000 		.4byte	0
 5819              	.LLST28:
 5820 042a 00000000 		.4byte	.LVL143
 5821 042e 04000000 		.4byte	.LVL145
 5822 0432 0100     		.2byte	0x1
 5823 0434 50       		.byte	0x50
 5824 0435 04000000 		.4byte	.LVL145
 5825 0439 34020000 		.4byte	.LFE44
 5826 043d 0400     		.2byte	0x4
 5827 043f F3       		.byte	0xf3
 5828 0440 01       		.uleb128 0x1
 5829 0441 50       		.byte	0x50
 5830 0442 9F       		.byte	0x9f
 5831 0443 00000000 		.4byte	0
 5832 0447 00000000 		.4byte	0
 5833              	.LLST29:
 5834 044b 48000000 		.4byte	.LVL150
 5835 044f 60000000 		.4byte	.LVL151
 5836 0453 0200     		.2byte	0x2
 5837 0455 30       		.byte	0x30
 5838 0456 9F       		.byte	0x9f
 5839 0457 74000000 		.4byte	.LVL155
 5840 045b 88000000 		.4byte	.LVL156
 5841 045f 0100     		.2byte	0x1
 5842 0461 50       		.byte	0x50
 5843 0462 88000000 		.4byte	.LVL156
 5844 0466 98000000 		.4byte	.LVL158
 5845 046a 0100     		.2byte	0x1
 5846 046c 54       		.byte	0x54
 5847 046d 98000000 		.4byte	.LVL158
 5848 0471 A4000000 		.4byte	.LVL159
 5849 0475 0100     		.2byte	0x1
 5850 0477 50       		.byte	0x50
 5851 0478 A4000000 		.4byte	.LVL159
 5852 047c 34020000 		.4byte	.LFE44
 5853 0480 0100     		.2byte	0x1
 5854 0482 54       		.byte	0x54
 5855 0483 00000000 		.4byte	0
 5856 0487 00000000 		.4byte	0
 5857              	.LLST30:
 5858 048b AE010000 		.4byte	.LVL176
 5859 048f B5010000 		.4byte	.LVL177-1
 5860 0493 0100     		.2byte	0x1
 5861 0495 50       		.byte	0x50
 5862 0496 00000000 		.4byte	0
 5863 049a 00000000 		.4byte	0
 5864              	.LLST31:
 5865 049e 00010000 		.4byte	.LVL166
 5866 04a2 06010000 		.4byte	.LVL167
 5867 04a6 0100     		.2byte	0x1
 5868 04a8 50       		.byte	0x50
 5869 04a9 00000000 		.4byte	0
 5870 04ad 00000000 		.4byte	0
 5871              	.LLST32:
 5872 04b1 0C010000 		.4byte	.LVL168
 5873 04b5 2E010000 		.4byte	.LVL173
 5874 04b9 0100     		.2byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 133


 5875 04bb 55       		.byte	0x55
 5876 04bc 00000000 		.4byte	0
 5877 04c0 00000000 		.4byte	0
 5878              	.LLST33:
 5879 04c4 12010000 		.4byte	.LVL170
 5880 04c8 1C010000 		.4byte	.LVL171
 5881 04cc 0100     		.2byte	0x1
 5882 04ce 50       		.byte	0x50
 5883 04cf 1C010000 		.4byte	.LVL171
 5884 04d3 2E010000 		.4byte	.LVL173
 5885 04d7 0100     		.2byte	0x1
 5886 04d9 56       		.byte	0x56
 5887 04da 00000000 		.4byte	0
 5888 04de 00000000 		.4byte	0
 5889              	.LLST34:
 5890 04e2 5C000000 		.4byte	.LVL188
 5891 04e6 60000000 		.4byte	.LVL189
 5892 04ea 0100     		.2byte	0x1
 5893 04ec 54       		.byte	0x54
 5894 04ed 62000000 		.4byte	.LVL190
 5895 04f1 72000000 		.4byte	.LVL193
 5896 04f5 0100     		.2byte	0x1
 5897 04f7 54       		.byte	0x54
 5898 04f8 00000000 		.4byte	0
 5899 04fc 00000000 		.4byte	0
 5900              		.section	.debug_aranges,"",%progbits
 5901 0000 9C000000 		.4byte	0x9c
 5902 0004 0200     		.2byte	0x2
 5903 0006 00000000 		.4byte	.Ldebug_info0
 5904 000a 04       		.byte	0x4
 5905 000b 00       		.byte	0
 5906 000c 0000     		.2byte	0
 5907 000e 0000     		.2byte	0
 5908 0010 00000000 		.4byte	.LFB46
 5909 0014 18000000 		.4byte	.LFE46-.LFB46
 5910 0018 00000000 		.4byte	.LFB47
 5911 001c 12000000 		.4byte	.LFE47-.LFB47
 5912 0020 00000000 		.4byte	.LFB48
 5913 0024 5C000000 		.4byte	.LFE48-.LFB48
 5914 0028 00000000 		.4byte	.LFB32
 5915 002c 28000000 		.4byte	.LFE32-.LFB32
 5916 0030 00000000 		.4byte	.LFB33
 5917 0034 1C000000 		.4byte	.LFE33-.LFB33
 5918 0038 00000000 		.4byte	.LFB35
 5919 003c D8000000 		.4byte	.LFE35-.LFB35
 5920 0040 00000000 		.4byte	.LFB34
 5921 0044 1C000000 		.4byte	.LFE34-.LFB34
 5922 0048 00000000 		.4byte	.LFB37
 5923 004c 40000000 		.4byte	.LFE37-.LFB37
 5924 0050 00000000 		.4byte	.LFB38
 5925 0054 24000000 		.4byte	.LFE38-.LFB38
 5926 0058 00000000 		.4byte	.LFB36
 5927 005c D4020000 		.4byte	.LFE36-.LFB36
 5928 0060 00000000 		.4byte	.LFB39
 5929 0064 24000000 		.4byte	.LFE39-.LFB39
 5930 0068 00000000 		.4byte	.LFB40
 5931 006c 44000000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 134


 5932 0070 00000000 		.4byte	.LFB41
 5933 0074 38010000 		.4byte	.LFE41-.LFB41
 5934 0078 00000000 		.4byte	.LFB42
 5935 007c 24000000 		.4byte	.LFE42-.LFB42
 5936 0080 00000000 		.4byte	.LFB43
 5937 0084 1C000000 		.4byte	.LFE43-.LFB43
 5938 0088 00000000 		.4byte	.LFB44
 5939 008c 34020000 		.4byte	.LFE44-.LFB44
 5940 0090 00000000 		.4byte	.LFB45
 5941 0094 40010000 		.4byte	.LFE45-.LFB45
 5942 0098 00000000 		.4byte	0
 5943 009c 00000000 		.4byte	0
 5944              		.section	.debug_ranges,"",%progbits
 5945              	.Ldebug_ranges0:
 5946 0000 00000000 		.4byte	.LFB46
 5947 0004 18000000 		.4byte	.LFE46
 5948 0008 00000000 		.4byte	.LFB47
 5949 000c 12000000 		.4byte	.LFE47
 5950 0010 00000000 		.4byte	.LFB48
 5951 0014 5C000000 		.4byte	.LFE48
 5952 0018 00000000 		.4byte	.LFB32
 5953 001c 28000000 		.4byte	.LFE32
 5954 0020 00000000 		.4byte	.LFB33
 5955 0024 1C000000 		.4byte	.LFE33
 5956 0028 00000000 		.4byte	.LFB35
 5957 002c D8000000 		.4byte	.LFE35
 5958 0030 00000000 		.4byte	.LFB34
 5959 0034 1C000000 		.4byte	.LFE34
 5960 0038 00000000 		.4byte	.LFB37
 5961 003c 40000000 		.4byte	.LFE37
 5962 0040 00000000 		.4byte	.LFB38
 5963 0044 24000000 		.4byte	.LFE38
 5964 0048 00000000 		.4byte	.LFB36
 5965 004c D4020000 		.4byte	.LFE36
 5966 0050 00000000 		.4byte	.LFB39
 5967 0054 24000000 		.4byte	.LFE39
 5968 0058 00000000 		.4byte	.LFB40
 5969 005c 44000000 		.4byte	.LFE40
 5970 0060 00000000 		.4byte	.LFB41
 5971 0064 38010000 		.4byte	.LFE41
 5972 0068 00000000 		.4byte	.LFB42
 5973 006c 24000000 		.4byte	.LFE42
 5974 0070 00000000 		.4byte	.LFB43
 5975 0074 1C000000 		.4byte	.LFE43
 5976 0078 00000000 		.4byte	.LFB44
 5977 007c 34020000 		.4byte	.LFE44
 5978 0080 00000000 		.4byte	.LFB45
 5979 0084 40010000 		.4byte	.LFE45
 5980 0088 00000000 		.4byte	0
 5981 008c 00000000 		.4byte	0
 5982              		.section	.debug_line,"",%progbits
 5983              	.Ldebug_line0:
 5984 0000 47050000 		.section	.debug_str,"MS",%progbits,1
 5984      02009902 
 5984      00000201 
 5984      FB0E0D00 
 5984      01010101 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 135


 5985              	.LASF97:
 5986 0000 43757272 		.ascii	"Current_Read_Task\000"
 5986      656E745F 
 5986      52656164 
 5986      5F546173 
 5986      6B00
 5987              	.LASF122:
 5988 0012 43757272 		.ascii	"CurrentPosition\000"
 5988      656E7450 
 5988      6F736974 
 5988      696F6E00 
 5989              	.LASF158:
 5990 0022 72784D65 		.ascii	"rxMessage\000"
 5990      73736167 
 5990      6500
 5991              	.LASF208:
 5992 002c 6D61696E 		.ascii	"main.c\000"
 5992      2E6300
 5993              	.LASF144:
 5994 0033 70776D4C 		.ascii	"pwmLimit\000"
 5994      696D6974 
 5994      00
 5995              	.LASF82:
 5996 003c 74786D73 		.ascii	"txmsClear\000"
 5996      436C6561 
 5996      7200
 5997              	.LASF156:
 5998 0046 4C6F636B 		.ascii	"Lock\000"
 5998      00
 5999              	.LASF64:
 6000 004b 65666673 		.ascii	"effsetdelta\000"
 6000      65746465 
 6000      6C746100 
 6001              	.LASF43:
 6002 0057 6673456E 		.ascii	"fsEncoder\000"
 6002      636F6465 
 6002      7200
 6003              	.LASF37:
 6004 0061 6373556E 		.ascii	"csUnconfig\000"
 6004      636F6E66 
 6004      696700
 6005              	.LASF116:
 6006 006c 6E657741 		.ascii	"newAuto\000"
 6006      75746F00 
 6007              	.LASF176:
 6008 0074 4932435F 		.ascii	"I2C_I2CMasterWriteByte\000"
 6008      4932434D 
 6008      61737465 
 6008      72577269 
 6008      74654279 
 6009              	.LASF1:
 6010 008b 756E7369 		.ascii	"unsigned int\000"
 6010      676E6564 
 6010      20696E74 
 6010      00
 6011              	.LASF151:
 6012 0098 43757272 		.ascii	"Current\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 136


 6012      656E7400 
 6013              	.LASF202:
 6014 00a0 50574D5F 		.ascii	"PWM_1_Start\000"
 6014      315F5374 
 6014      61727400 
 6015              	.LASF68:
 6016 00ac 636C6561 		.ascii	"clearfaults\000"
 6016      72666175 
 6016      6C747300 
 6017              	.LASF19:
 6018 00b8 696E7431 		.ascii	"int16\000"
 6018      3600
 6019              	.LASF108:
 6020 00be 6E65774B 		.ascii	"newKd\000"
 6020      6400
 6021              	.LASF107:
 6022 00c4 6E65774B 		.ascii	"newKi\000"
 6022      6900
 6023              	.LASF106:
 6024 00ca 6E65774B 		.ascii	"newKp\000"
 6024      7000
 6025              	.LASF166:
 6026 00d0 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 6026      5F494E5F 
 6026      436C6561 
 6026      72496E74 
 6026      65727275 
 6027              	.LASF102:
 6028 00e7 6C696D69 		.ascii	"limit\000"
 6028      7400
 6029              	.LASF192:
 6030 00ed 4C45445F 		.ascii	"LED_Write\000"
 6030      57726974 
 6030      6500
 6031              	.LASF86:
 6032 00f7 486F6D65 		.ascii	"HomeIsrHandler\000"
 6032      49737248 
 6032      616E646C 
 6032      657200
 6033              	.LASF84:
 6034 0106 74784D65 		.ascii	"txMessageStates_t\000"
 6034      73736167 
 6034      65537461 
 6034      7465735F 
 6034      7400
 6035              	.LASF111:
 6036 0118 6572726F 		.ascii	"error\000"
 6036      7200
 6037              	.LASF178:
 6038 011e 4932435F 		.ascii	"I2C_I2CMasterReadBuf\000"
 6038      4932434D 
 6038      61737465 
 6038      72526561 
 6038      64427566 
 6039              	.LASF93:
 6040 0133 436C6561 		.ascii	"ClearFault\000"
 6040      72466175 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 137


 6040      6C7400
 6041              	.LASF29:
 6042 013e 50656E64 		.ascii	"PendSV_IRQn\000"
 6042      53565F49 
 6042      52516E00 
 6043              	.LASF200:
 6044 014a 4932435F 		.ascii	"I2C_Start\000"
 6044      53746172 
 6044      7400
 6045              	.LASF127:
 6046 0154 4C617374 		.ascii	"LastJog\000"
 6046      4A6F6700 
 6047              	.LASF38:
 6048 015c 63735265 		.ascii	"csReady\000"
 6048      61647900 
 6049              	.LASF172:
 6050 0164 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 6050      315F5370 
 6050      69556172 
 6050      74436C65 
 6050      61725478 
 6051              	.LASF14:
 6052 017f 75696E74 		.ascii	"uint32_t\000"
 6052      33325F74 
 6052      00
 6053              	.LASF56:
 6054 0188 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 6054      73736167 
 6054      655F6F70 
 6054      636F6465 
 6054      735F7400 
 6055              	.LASF69:
 6056 019c 72784D65 		.ascii	"rxMessage_status_t\000"
 6056      73736167 
 6056      655F7374 
 6056      61747573 
 6056      5F7400
 6057              	.LASF89:
 6058 01af 41737365 		.ascii	"AssertFault\000"
 6058      72744661 
 6058      756C7400 
 6059              	.LASF0:
 6060 01bb 666C6F61 		.ascii	"float\000"
 6060      7400
 6061              	.LASF196:
 6062 01c1 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 6062      7370695F 
 6062      73735F53 
 6062      74617274 
 6062      457800
 6063              	.LASF57:
 6064 01d4 63686563 		.ascii	"checksum\000"
 6064      6B73756D 
 6064      00
 6065              	.LASF20:
 6066 01dd 696E7433 		.ascii	"int32\000"
 6066      3200
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 138


 6067              	.LASF188:
 6068 01e3 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 6068      585F4F55 
 6068      545F5365 
 6068      74447269 
 6068      76654D6F 
 6069              	.LASF168:
 6070 01fa 7370695F 		.ascii	"spi_ss_Read\000"
 6070      73735F52 
 6070      65616400 
 6071              	.LASF100:
 6072 0206 72657375 		.ascii	"result\000"
 6072      6C7400
 6073              	.LASF12:
 6074 020d 6C6F6E67 		.ascii	"long long unsigned int\000"
 6074      206C6F6E 
 6074      6720756E 
 6074      7369676E 
 6074      65642069 
 6075              	.LASF132:
 6076 0224 5049445F 		.ascii	"PID_EffSetDelta\000"
 6076      45666653 
 6076      65744465 
 6076      6C746100 
 6077              	.LASF88:
 6078 0234 73657475 		.ascii	"setupFreeRTOS\000"
 6078      70467265 
 6078      6552544F 
 6078      5300
 6079              	.LASF133:
 6080 0242 6C617374 		.ascii	"lastTime\000"
 6080      54696D65 
 6080      00
 6081              	.LASF146:
 6082 024b 70776D4D 		.ascii	"pwmMin\000"
 6082      696E00
 6083              	.LASF164:
 6084 0252 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 6084      785F436F 
 6084      756E7465 
 6084      725F315F 
 6084      57726974 
 6085              	.LASF135:
 6086 026f 49546572 		.ascii	"ITerm\000"
 6086      6D00
 6087              	.LASF90:
 6088 0275 62797465 		.ascii	"byteMSB\000"
 6088      4D534200 
 6089              	.LASF66:
 6090 027d 656E6162 		.ascii	"enable\000"
 6090      6C6500
 6091              	.LASF174:
 6092 0284 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 6092      736B4765 
 6092      74537461 
 6092      636B4869 
 6092      67685761 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 139


 6093              	.LASF203:
 6094 02a0 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 6094      315F5772 
 6094      69746550 
 6094      6572696F 
 6094      6400
 6095              	.LASF147:
 6096 02b2 436F6E66 		.ascii	"ConfigState\000"
 6096      69675374 
 6096      61746500 
 6097              	.LASF207:
 6098 02be 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6098      43313120 
 6098      352E342E 
 6098      31203230 
 6098      31363036 
 6099 02f1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6099      20726576 
 6099      6973696F 
 6099      6E203233 
 6099      37373135 
 6100 0324 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6100      66756E63 
 6100      74696F6E 
 6100      2D736563 
 6100      74696F6E 
 6101              	.LASF63:
 6102 034c 6C696D69 		.ascii	"limit_ITerm\000"
 6102      745F4954 
 6102      65726D00 
 6103              	.LASF142:
 6104 0358 6F75744D 		.ascii	"outMax_Total\000"
 6104      61785F54 
 6104      6F74616C 
 6104      00
 6105              	.LASF118:
 6106 0365 5049445F 		.ascii	"PID_SetDrive\000"
 6106      53657444 
 6106      72697665 
 6106      00
 6107              	.LASF179:
 6108 0372 76546173 		.ascii	"vTaskDelay\000"
 6108      6B44656C 
 6108      617900
 6109              	.LASF117:
 6110 037d 5F426F6F 		.ascii	"_Bool\000"
 6110      6C00
 6111              	.LASF42:
 6112 0383 6673556E 		.ascii	"fsUnconfigured\000"
 6112      636F6E66 
 6112      69677572 
 6112      656400
 6113              	.LASF126:
 6114 0392 696E4175 		.ascii	"inAuto\000"
 6114      746F00
 6115              	.LASF96:
 6116 0399 64726976 		.ascii	"drive\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 140


 6116      6500
 6117              	.LASF182:
 6118 039f 78517565 		.ascii	"xQueueSemaphoreTake\000"
 6118      75655365 
 6118      6D617068 
 6118      6F726554 
 6118      616B6500 
 6119              	.LASF183:
 6120 03b3 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 6120      315F5370 
 6120      69556172 
 6120      74507574 
 6120      41727261 
 6121              	.LASF167:
 6122 03c9 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 6122      73735F43 
 6122      6C656172 
 6122      496E7465 
 6122      72727570 
 6123              	.LASF92:
 6124 03df 43757272 		.ascii	"CurrentTemp\000"
 6124      656E7454 
 6124      656D7000 
 6125              	.LASF181:
 6126 03eb 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 6126      7465725F 
 6126      315F5265 
 6126      6164436F 
 6126      756E7465 
 6127              	.LASF184:
 6128 0401 78517565 		.ascii	"xQueueGenericSend\000"
 6128      75654765 
 6128      6E657269 
 6128      6353656E 
 6128      6400
 6129              	.LASF73:
 6130 0413 76657273 		.ascii	"version0\000"
 6130      696F6E30 
 6130      00
 6131              	.LASF74:
 6132 041c 76657273 		.ascii	"version1\000"
 6132      696F6E31 
 6132      00
 6133              	.LASF75:
 6134 0425 76657273 		.ascii	"version2\000"
 6134      696F6E32 
 6134      00
 6135              	.LASF60:
 6136 042e 72784D65 		.ascii	"rxMessage_overlay_t\000"
 6136      73736167 
 6136      655F6F76 
 6136      65726C61 
 6136      795F7400 
 6137              	.LASF198:
 6138 0442 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 6138      7273745F 
 6138      656E636F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 141


 6138      6465725F 
 6138      53657450 
 6139              	.LASF136:
 6140 045e 506F7369 		.ascii	"Position\000"
 6140      74696F6E 
 6140      00
 6141              	.LASF22:
 6142 0467 63686172 		.ascii	"char\000"
 6142      00
 6143              	.LASF32:
 6144 046c 55426173 		.ascii	"UBaseType_t\000"
 6144      65547970 
 6144      655F7400 
 6145              	.LASF70:
 6146 0478 6F766572 		.ascii	"overlay\000"
 6146      6C617900 
 6147              	.LASF114:
 6148 0480 5049445F 		.ascii	"PID_SetMode\000"
 6148      5365744D 
 6148      6F646500 
 6149              	.LASF94:
 6150 048c 50574D5F 		.ascii	"PWM_Set\000"
 6150      53657400 
 6151              	.LASF171:
 6152 0494 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 6152      315F5370 
 6152      69556172 
 6152      74436C65 
 6152      61725278 
 6153              	.LASF193:
 6154 04af 43794465 		.ascii	"CyDelay\000"
 6154      6C617900 
 6155              	.LASF16:
 6156 04b7 75696E74 		.ascii	"uint16\000"
 6156      313600
 6157              	.LASF18:
 6158 04be 696E7438 		.ascii	"int8\000"
 6158      00
 6159              	.LASF59:
 6160 04c3 6F70636F 		.ascii	"opcode\000"
 6160      646500
 6161              	.LASF34:
 6162 04ca 51756575 		.ascii	"QueueHandle_t\000"
 6162      6548616E 
 6162      646C655F 
 6162      7400
 6163              	.LASF190:
 6164 04d8 78546173 		.ascii	"xTaskCreate\000"
 6164      6B437265 
 6164      61746500 
 6165              	.LASF13:
 6166 04e4 75696E74 		.ascii	"uint8_t\000"
 6166      385F7400 
 6167              	.LASF72:
 6168 04ec 73746174 		.ascii	"status\000"
 6168      757300
 6169              	.LASF44:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 142


 6170 04f3 6673496E 		.ascii	"fsIndex\000"
 6170      64657800 
 6171              	.LASF180:
 6172 04fb 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 6172      315F5772 
 6172      69746543 
 6172      6F6D7061 
 6172      726500
 6173              	.LASF41:
 6174 050e 66734E4F 		.ascii	"fsNONE\000"
 6174      4E4500
 6175              	.LASF161:
 6176 0515 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 6176      7273745F 
 6176      656E636F 
 6176      6465725F 
 6176      436C6561 
 6177              	.LASF177:
 6178 0532 4932435F 		.ascii	"I2C_I2CMasterSendStop\000"
 6178      4932434D 
 6178      61737465 
 6178      7253656E 
 6178      6453746F 
 6179              	.LASF191:
 6180 0548 78517565 		.ascii	"xQueueCreateMutex\000"
 6180      75654372 
 6180      65617465 
 6180      4D757465 
 6180      7800
 6181              	.LASF199:
 6182 055a 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 6182      7370695F 
 6182      73735F53 
 6182      65745072 
 6182      696F7269 
 6183              	.LASF169:
 6184 0571 78546173 		.ascii	"xTaskGetTickCount\000"
 6184      6B476574 
 6184      5469636B 
 6184      436F756E 
 6184      7400
 6185              	.LASF113:
 6186 0583 74696D65 		.ascii	"timeChange\000"
 6186      4368616E 
 6186      676500
 6187              	.LASF2:
 6188 058e 6C6F6E67 		.ascii	"long long int\000"
 6188      206C6F6E 
 6188      6720696E 
 6188      7400
 6189              	.LASF46:
 6190 059c 66734368 		.ascii	"fsChecksum\000"
 6190      65636B73 
 6190      756D00
 6191              	.LASF31:
 6192 05a7 42617365 		.ascii	"BaseType_t\000"
 6192      54797065 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 143


 6192      5F7400
 6193              	.LASF54:
 6194 05b2 6F704572 		.ascii	"opError\000"
 6194      726F7200 
 6195              	.LASF121:
 6196 05ba 736C6565 		.ascii	"sleeptime\000"
 6196      7074696D 
 6196      6500
 6197              	.LASF186:
 6198 05c4 43795379 		.ascii	"CySysWdtResetCounters\000"
 6198      73576474 
 6198      52657365 
 6198      74436F75 
 6198      6E746572 
 6199              	.LASF211:
 6200 05da 6D656D73 		.ascii	"memset\000"
 6200      657400
 6201              	.LASF24:
 6202 05e1 63796973 		.ascii	"cyisraddress\000"
 6202      72616464 
 6202      72657373 
 6202      00
 6203              	.LASF78:
 6204 05ee 63686563 		.ascii	"checksum_errors\000"
 6204      6B73756D 
 6204      5F657272 
 6204      6F727300 
 6205              	.LASF58:
 6206 05fe 73697A65 		.ascii	"size\000"
 6206      00
 6207              	.LASF17:
 6208 0603 75696E74 		.ascii	"uint32\000"
 6208      333200
 6209              	.LASF83:
 6210 060a 74786D73 		.ascii	"txmsLoaded\000"
 6210      4C6F6164 
 6210      656400
 6211              	.LASF152:
 6212 0615 43757272 		.ascii	"CurrentI2Cinbuf\000"
 6212      656E7449 
 6212      3243696E 
 6212      62756600 
 6213              	.LASF141:
 6214 0625 72656653 		.ascii	"refSampleTime\000"
 6214      616D706C 
 6214      6554696D 
 6214      6500
 6215              	.LASF137:
 6216 0633 4C617374 		.ascii	"LastPosition\000"
 6216      506F7369 
 6216      74696F6E 
 6216      00
 6217              	.LASF159:
 6218 0640 74784D65 		.ascii	"txMessage\000"
 6218      73736167 
 6218      6500
 6219              	.LASF163:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 144


 6220 064a 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 6220      7465725F 
 6220      315F5772 
 6220      69746543 
 6220      6F756E74 
 6221              	.LASF157:
 6222 0661 4C617374 		.ascii	"LastMessageTimeTick\000"
 6222      4D657373 
 6222      61676554 
 6222      696D6554 
 6222      69636B00 
 6223              	.LASF87:
 6224 0675 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 6224      53535F49 
 6224      73724861 
 6224      6E646C65 
 6224      7200
 6225              	.LASF154:
 6226 0687 75784869 		.ascii	"uxHighWaterMark_Current\000"
 6226      67685761 
 6226      7465724D 
 6226      61726B5F 
 6226      43757272 
 6227              	.LASF33:
 6228 069f 5469636B 		.ascii	"TickType_t\000"
 6228      54797065 
 6228      5F7400
 6229              	.LASF40:
 6230 06aa 436F6E66 		.ascii	"ConfigStates_t\000"
 6230      69675374 
 6230      61746573 
 6230      5F7400
 6231              	.LASF104:
 6232 06b9 5049445F 		.ascii	"PID_SetTunings\000"
 6232      53657454 
 6232      756E696E 
 6232      677300
 6233              	.LASF3:
 6234 06c8 6C6F6E67 		.ascii	"long double\000"
 6234      20646F75 
 6234      626C6500 
 6235              	.LASF210:
 6236 06d4 4952516E 		.ascii	"IRQn\000"
 6236      00
 6237              	.LASF23:
 6238 06d9 72656733 		.ascii	"reg32\000"
 6238      3200
 6239              	.LASF36:
 6240 06df 6373554E 		.ascii	"csUNDEFINED\000"
 6240      44454649 
 6240      4E454400 
 6241              	.LASF110:
 6242 06eb 5049445F 		.ascii	"PID_Compute\000"
 6242      436F6D70 
 6242      75746500 
 6243              	.LASF105:
 6244 06f7 6E657753 		.ascii	"newSampleTime\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 145


 6244      616D706C 
 6244      6554696D 
 6244      6500
 6245              	.LASF61:
 6246 0705 73657175 		.ascii	"sequence\000"
 6246      656E6365 
 6246      00
 6247              	.LASF134:
 6248 070e 4F757470 		.ascii	"Output\000"
 6248      757400
 6249              	.LASF71:
 6250 0715 636F6E66 		.ascii	"config\000"
 6250      696700
 6251              	.LASF45:
 6252 071c 66734375 		.ascii	"fsCurrentRead\000"
 6252      7272656E 
 6252      74526561 
 6252      6400
 6253              	.LASF6:
 6254 072a 73686F72 		.ascii	"short int\000"
 6254      7420696E 
 6254      7400
 6255              	.LASF112:
 6256 0734 64506F73 		.ascii	"dPosition\000"
 6256      6974696F 
 6256      6E00
 6257              	.LASF65:
 6258 073e 72784D65 		.ascii	"rxMessage_config_t\000"
 6258      73736167 
 6258      655F636F 
 6258      6E666967 
 6258      5F7400
 6259              	.LASF129:
 6260 0751 5049445F 		.ascii	"PID_Was_Enabled\000"
 6260      5761735F 
 6260      456E6162 
 6260      6C656400 
 6261              	.LASF128:
 6262 0761 5049445F 		.ascii	"PID_Enabled\000"
 6262      456E6162 
 6262      6C656400 
 6263              	.LASF115:
 6264 076d 4D6F6465 		.ascii	"Mode\000"
 6264      00
 6265              	.LASF8:
 6266 0772 6C6F6E67 		.ascii	"long int\000"
 6266      20696E74 
 6266      00
 6267              	.LASF39:
 6268 077b 63734D41 		.ascii	"csMAX\000"
 6268      5800
 6269              	.LASF109:
 6270 0781 73616D70 		.ascii	"sampleTimeInSec\000"
 6270      6C655469 
 6270      6D65496E 
 6270      53656300 
 6271              	.LASF173:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 146


 6272 0791 4379496E 		.ascii	"CyIntSetSysVector\000"
 6272      74536574 
 6272      53797356 
 6272      6563746F 
 6272      7200
 6273              	.LASF26:
 6274 07a3 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6274      61736B61 
 6274      626C6549 
 6274      6E745F49 
 6274      52516E00 
 6275              	.LASF35:
 6276 07b7 53656D61 		.ascii	"SemaphoreHandle_t\000"
 6276      70686F72 
 6276      6548616E 
 6276      646C655F 
 6276      7400
 6277              	.LASF160:
 6278 07c9 74784D65 		.ascii	"txMessageState\000"
 6278      73736167 
 6278      65537461 
 6278      746500
 6279              	.LASF187:
 6280 07d8 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 6280      5F4F5554 
 6280      5F536574 
 6280      44726976 
 6280      654D6F64 
 6281              	.LASF99:
 6282 07ee 52617750 		.ascii	"RawPosition\000"
 6282      6F736974 
 6282      696F6E00 
 6283              	.LASF81:
 6284 07fa 74784D65 		.ascii	"txMessage_t\000"
 6284      73736167 
 6284      655F7400 
 6285              	.LASF67:
 6286 0806 73657470 		.ascii	"setpoint\000"
 6286      6F696E74 
 6286      00
 6287              	.LASF98:
 6288 080f 47657450 		.ascii	"GetPosition\000"
 6288      6F736974 
 6288      696F6E00 
 6289              	.LASF143:
 6290 081b 6F75744D 		.ascii	"outMax_ITerm\000"
 6290      61785F49 
 6290      5465726D 
 6290      00
 6291              	.LASF153:
 6292 0828 75784869 		.ascii	"uxHighWaterMark_PID\000"
 6292      67685761 
 6292      7465724D 
 6292      61726B5F 
 6292      50494400 
 6293              	.LASF145:
 6294 083c 70776D4D 		.ascii	"pwmMax\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 147


 6294      617800
 6295              	.LASF130:
 6296 0843 5049445F 		.ascii	"PID_Setpoint\000"
 6296      53657470 
 6296      6F696E74 
 6296      00
 6297              	.LASF9:
 6298 0850 5F5F7569 		.ascii	"__uint8_t\000"
 6298      6E74385F 
 6298      7400
 6299              	.LASF53:
 6300 085a 6F705374 		.ascii	"opStatus\000"
 6300      61747573 
 6300      00
 6301              	.LASF170:
 6302 0863 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 6302      315F5370 
 6302      69556172 
 6302      74526561 
 6302      64527844 
 6303              	.LASF175:
 6304 087b 4932435F 		.ascii	"I2C_I2CMasterSendStart\000"
 6304      4932434D 
 6304      61737465 
 6304      7253656E 
 6304      64537461 
 6305              	.LASF55:
 6306 0892 6F704D41 		.ascii	"opMAX\000"
 6306      5800
 6307              	.LASF101:
 6308 0898 436F6D6D 		.ascii	"Comm_Task\000"
 6308      5F546173 
 6308      6B00
 6309              	.LASF30:
 6310 08a2 53797354 		.ascii	"SysTick_IRQn\000"
 6310      69636B5F 
 6310      4952516E 
 6310      00
 6311              	.LASF150:
 6312 08af 43686563 		.ascii	"ChecksumErrors\000"
 6312      6B73756D 
 6312      4572726F 
 6312      727300
 6313              	.LASF25:
 6314 08be 73697A65 		.ascii	"sizetype\000"
 6314      74797065 
 6314      00
 6315              	.LASF11:
 6316 08c7 6C6F6E67 		.ascii	"long unsigned int\000"
 6316      20756E73 
 6316      69676E65 
 6316      6420696E 
 6316      7400
 6317              	.LASF197:
 6318 08d9 6973725F 		.ascii	"isr_home_SetPriority\000"
 6318      686F6D65 
 6318      5F536574 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 148


 6318      5072696F 
 6318      72697479 
 6319              	.LASF189:
 6320 08ee 496E6465 		.ascii	"Index_Counter_1_ReadCounter\000"
 6320      785F436F 
 6320      756E7465 
 6320      725F315F 
 6320      52656164 
 6321              	.LASF124:
 6322 090a 43757272 		.ascii	"CurrentIndexCount\000"
 6322      656E7449 
 6322      6E646578 
 6322      436F756E 
 6322      7400
 6323              	.LASF206:
 6324 091c 76546173 		.ascii	"vTaskStartScheduler\000"
 6324      6B537461 
 6324      72745363 
 6324      68656475 
 6324      6C657200 
 6325              	.LASF119:
 6326 0930 70657263 		.ascii	"percent\000"
 6326      656E7400 
 6327              	.LASF201:
 6328 0938 5350495F 		.ascii	"SPI_1_Start\000"
 6328      315F5374 
 6328      61727400 
 6329              	.LASF5:
 6330 0944 756E7369 		.ascii	"unsigned char\000"
 6330      676E6564 
 6330      20636861 
 6330      7200
 6331              	.LASF204:
 6332 0952 436F756E 		.ascii	"Counter_1_Start\000"
 6332      7465725F 
 6332      315F5374 
 6332      61727400 
 6333              	.LASF10:
 6334 0962 5F5F7569 		.ascii	"__uint32_t\000"
 6334      6E743332 
 6334      5F7400
 6335              	.LASF51:
 6336 096d 6F70554E 		.ascii	"opUNDEFINED\000"
 6336      44454649 
 6336      4E454400 
 6337              	.LASF148:
 6338 0979 4661756C 		.ascii	"FaultState\000"
 6338      74537461 
 6338      746500
 6339              	.LASF28:
 6340 0984 53564361 		.ascii	"SVCall_IRQn\000"
 6340      6C6C5F49 
 6340      52516E00 
 6341              	.LASF47:
 6342 0990 66735832 		.ascii	"fsX2\000"
 6342      00
 6343              	.LASF48:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 149


 6344 0995 66735833 		.ascii	"fsX3\000"
 6344      00
 6345              	.LASF49:
 6346 099a 66735834 		.ascii	"fsX4\000"
 6346      00
 6347              	.LASF149:
 6348 099f 436F6E66 		.ascii	"ConfigSequence\000"
 6348      69675365 
 6348      7175656E 
 6348      636500
 6349              	.LASF95:
 6350 09ae 64757479 		.ascii	"dutycycle\000"
 6350      6379636C 
 6350      6500
 6351              	.LASF140:
 6352 09b8 7265664B 		.ascii	"refKd\000"
 6352      6400
 6353              	.LASF139:
 6354 09be 7265664B 		.ascii	"refKi\000"
 6354      6900
 6355              	.LASF120:
 6356 09c4 5049445F 		.ascii	"PID_Task\000"
 6356      5461736B 
 6356      00
 6357              	.LASF162:
 6358 09cd 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 6358      745F456E 
 6358      636F6465 
 6358      725F436C 
 6358      65617249 
 6359              	.LASF138:
 6360 09ea 7265664B 		.ascii	"refKp\000"
 6360      7000
 6361              	.LASF76:
 6362 09f0 73746174 		.ascii	"state\000"
 6362      6500
 6363              	.LASF62:
 6364 09f6 6C696D69 		.ascii	"limit_Total\000"
 6364      745F546F 
 6364      74616C00 
 6365              	.LASF91:
 6366 0a02 62797465 		.ascii	"byteLSB\000"
 6366      4C534200 
 6367              	.LASF185:
 6368 0a0a 50524F42 		.ascii	"PROBE_Write\000"
 6368      455F5772 
 6368      69746500 
 6369              	.LASF194:
 6370 0a16 6973725F 		.ascii	"isr_home_StartEx\000"
 6370      686F6D65 
 6370      5F537461 
 6370      72744578 
 6370      00
 6371              	.LASF4:
 6372 0a27 7369676E 		.ascii	"signed char\000"
 6372      65642063 
 6372      68617200 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 150


 6373              	.LASF7:
 6374 0a33 73686F72 		.ascii	"short unsigned int\000"
 6374      7420756E 
 6374      7369676E 
 6374      65642069 
 6374      6E7400
 6375              	.LASF103:
 6376 0a46 5049445F 		.ascii	"PID_Initialize\000"
 6376      496E6974 
 6376      69616C69 
 6376      7A6500
 6377              	.LASF125:
 6378 0a55 6D61696E 		.ascii	"main\000"
 6378      00
 6379              	.LASF27:
 6380 0a5a 48617264 		.ascii	"HardFault_IRQn\000"
 6380      4661756C 
 6380      745F4952 
 6380      516E00
 6381              	.LASF79:
 6382 0a69 63757272 		.ascii	"current\000"
 6382      656E7400 
 6383              	.LASF15:
 6384 0a71 75696E74 		.ascii	"uint8\000"
 6384      3800
 6385              	.LASF21:
 6386 0a77 646F7562 		.ascii	"double\000"
 6386      6C6500
 6387              	.LASF205:
 6388 0a7e 496E6465 		.ascii	"Index_Counter_1_Start\000"
 6388      785F436F 
 6388      756E7465 
 6388      725F315F 
 6388      53746172 
 6389              	.LASF155:
 6390 0a94 75784869 		.ascii	"uxHighWaterMark_Comm\000"
 6390      67685761 
 6390      7465724D 
 6390      61726B5F 
 6390      436F6D6D 
 6391              	.LASF52:
 6392 0aa9 6F70436F 		.ascii	"opConfig\000"
 6392      6E666967 
 6392      00
 6393              	.LASF195:
 6394 0ab2 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 6394      7273745F 
 6394      656E636F 
 6394      6465725F 
 6394      53746172 
 6395              	.LASF165:
 6396 0aca 6973725F 		.ascii	"isr_home_ClearPending\000"
 6396      686F6D65 
 6396      5F436C65 
 6396      61725065 
 6396      6E64696E 
 6397              	.LASF77:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccFZK9jA.s 			page 151


 6398 0ae0 6661756C 		.ascii	"fault\000"
 6398      7400
 6399              	.LASF85:
 6400 0ae6 52535449 		.ascii	"RSTIsrHandler\000"
 6400      73724861 
 6400      6E646C65 
 6400      7200
 6401              	.LASF80:
 6402 0af4 706F7369 		.ascii	"position\000"
 6402      74696F6E 
 6402      00
 6403              	.LASF50:
 6404 0afd 4661756C 		.ascii	"FaultStates_t\000"
 6404      74537461 
 6404      7465735F 
 6404      7400
 6405              	.LASF131:
 6406 0b0b 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 6406      45666665 
 6406      63746976 
 6406      65536574 
 6406      706F696E 
 6407              	.LASF209:
 6408 0b21 433A5C70 		.ascii	"C:\\proj\\acsnb-motor-cypress\\QuadEncoderRTOS.cyds"
 6408      726F6A5C 
 6408      6163736E 
 6408      622D6D6F 
 6408      746F722D 
 6409 0b51 6E00     		.ascii	"n\000"
 6410              	.LASF123:
 6411 0b53 44656C74 		.ascii	"DeltaPosition\000"
 6411      61506F73 
 6411      6974696F 
 6411      6E00
 6412              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
