ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB43:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 02/08/23 PMR  Rev: 0-2-0 rework PID algorithm based on Galil findings
  12:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  13:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  14:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  15:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  16:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  17:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  18:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  19:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  20:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  21:main.c        **** *******************************************************************************/
  22:main.c        **** #include <I2C_I2C.h>
  23:main.c        **** #include <stdbool.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <math.h>
  26:main.c        **** #include "pid.h"
  27:main.c        **** #include "INA219.h"
  28:main.c        **** 
  29:main.c        **** /* Firmware revision as of 2023-02-08 */
  30:main.c        **** #define FIRMWARE_REV_0 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 2


  31:main.c        **** #define FIRMWARE_REV_1 2
  32:main.c        **** #define FIRMWARE_REV_2 0
  33:main.c        **** 
  34:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  35:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  36:main.c        **** 
  37:main.c        **** /* ACS Test set: the drives are wired backwards! */
  38:main.c        **** #define DRIVE_POLARITY -1
  39:main.c        **** 
  40:main.c        **** /* --------------------------------------------------------------------- 
  41:main.c        ****  * CONSTANTS
  42:main.c        ****  * --------------------------------------------------------------------- */
  43:main.c        **** 
  44:main.c        **** /* Interrupt priorities */
  45:main.c        **** #define NESTED_ISR                             (1u)
  46:main.c        **** #define HIGHER_PRIORITY                        (2u)
  47:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  48:main.c        **** 
  49:main.c        **** /* Interrupt prototypes */
  50:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  51:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  52:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  53:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  54:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  55:main.c        **** 
  56:main.c        **** /* --------------------------------------------------------------------- 
  57:main.c        ****  * WDT Defines
  58:main.c        ****  *
  59:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  60:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  61:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  62:main.c        ****  * --------------------------------------------------------------------- */
  63:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  64:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  65:main.c        **** 
  66:main.c        **** /* --------------------------------------------------------------------- 
  67:main.c        ****  * PWM Defines
  68:main.c        ****  * --------------------------------------------------------------------- */
  69:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  70:main.c        **** //#define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * (PWM_15KHZ_PERIOD/100))
  71:main.c        **** //#define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * 16)
  72:main.c        **** //#define PWM_IDLE                               (50)
  73:main.c        **** //#define PWM_NEUTRAL                            (PWM_15KHZ_PERIOD / 2)
  74:main.c        **** #define PWM_NEUTRAL                            (0)
  75:main.c        **** 
  76:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  77:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  78:main.c        **** #define INA219_CAL_VALUE                       (8192)
  79:main.c        **** 
  80:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  81:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  82:main.c        **** 
  83:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  84:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  85:main.c        **** 
  86:main.c        **** /* --------------------------------------------------------------------- 
  87:main.c        ****  * PID Defines
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 3


  88:main.c        ****  * --------------------------------------------------------------------- */
  89:main.c        **** #define PID_MANUAL                             (0)
  90:main.c        **** #define PID_AUTOMATIC                          (1)
  91:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (25)
  92:main.c        **** bool inAuto = false;
  93:main.c        **** 
  94:main.c        **** volatile int8_t Jog, LastJog;
  95:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  96:main.c        **** int32_t PID_Setpoint, PID_EffectiveSetpoint;
  97:main.c        **** uint8_t PID_EffSetDelta;
  98:main.c        **** uint32_t lastTime;
  99:main.c        **** 
 100:main.c        **** uint32_t refSampleTime = 5; // Default to 5ms
 101:main.c        **** volatile int32_t Position, LastPosition;
 102:main.c        **** volatile int32_t Output;
 103:main.c        **** 
 104:main.c        **** #define OVERRIDE_PID_CONSTANTS 1
 105:main.c        **** uint32_t kp = 20; // Proportional constant
 106:main.c        **** uint32_t ki = 10; // Integral constant
 107:main.c        **** uint32_t kd = 0; // Derivative constant
 108:main.c        **** 
 109:main.c        **** int32_t outMax_Total, outMax_ITerm;
 110:main.c        **** int32_t pwmLimit, pwmMax, pwmMin;    
 111:main.c        **** 
 112:main.c        **** bool homingDone = true;
 113:main.c        **** 
 114:main.c        **** /* --------------------------------------------------------------------- 
 115:main.c        ****  * Timekeeping defines
 116:main.c        ****  * --------------------------------------------------------------------- */
 117:main.c        **** volatile uint64_t UptimeMicroseconds = 0;
 118:main.c        **** volatile uint64_t UptimeMicrosecondsAccumulator = 0;
 119:main.c        **** volatile uint64_t UptimeMilliseconds = 0;
 120:main.c        **** volatile uint64_t UptimeMillisecondsAccumulator = 0;
 121:main.c        **** volatile uint64_t UptimeSeconds = 0;
 122:main.c        **** 
 123:main.c        **** /* --------------------------------------------------------------------- 
 124:main.c        ****  * ENCODER PROPERTIES
 125:main.c        ****  *
 126:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 127:main.c        ****  *
 128:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 129:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 130:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 131:main.c        ****  * flag and resetting the counter to 0 again.
 132:main.c        ****  *
 133:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 134:main.c        ****  * --------------------------------------------------------------------- */
 135:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 136:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 137:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 138:main.c        **** 
 139:main.c        **** /* --------------------------------------------------------------------- 
 140:main.c        ****  * GLOBALS
 141:main.c        ****  * --------------------------------------------------------------------- */
 142:main.c        **** /* Coarse reporting of state back to the node box software */
 143:main.c        **** typedef enum {    
 144:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 4


 145:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 146:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 147:main.c        ****     csMAX    
 148:main.c        **** } ConfigStates_t;
 149:main.c        **** 
 150:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 151:main.c        **** 
 152:main.c        **** /* Fault codes, these are bit encoded into a uint8_t */
 153:main.c        **** typedef enum {
 154:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 155:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 156:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 157:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 158:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 159:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 160:main.c        ****     fsX2           = 0b00100000,    /* */
 161:main.c        ****     fsX3           = 0b01000000,    /* */
 162:main.c        ****     fsX4           = 0b10000000     /* */
 163:main.c        **** } FaultStates_t;
 164:main.c        **** 
 165:main.c        **** volatile ConfigStates_t ConfigState;
 166:main.c        **** volatile uint8_t FaultState;
 167:main.c        **** volatile uint8_t ConfigSequence;
 168:main.c        **** volatile uint16_t ChecksumErrors;
 169:main.c        **** volatile int16_t MotorCurrent;
 170:main.c        **** uint8_t CurrentI2Cinbuf[20];
 171:main.c        **** 
 172:main.c        **** /* --------------------------------------------------------------------- 
 173:main.c        ****  * SPI MESSAGING
 174:main.c        ****  * --------------------------------------------------------------------- */
 175:main.c        **** /* V2 protocol 
 176:main.c        **** 
 177:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 178:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 179:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 180:main.c        **** */
 181:main.c        ****     
 182:main.c        **** /* Set this to be at least the size of the status response message, 23 bytes */    
 183:main.c        **** #define MAX_MESSAGE_SIZE 30
 184:main.c        ****     
 185:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 186:main.c        ****    talking.  Nominally 1 second max of not talking. */
 187:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 188:main.c        **** uint32_t LastMessageTimeSeconds;
 189:main.c        **** 
 190:main.c        **** /* Opcodes that can come from the node box software */
 191:main.c        **** typedef enum {
 192:main.c        ****     opUNDEFINED = 0,
 193:main.c        ****     opConfig    = 1,
 194:main.c        ****     opStatus    = 2,
 195:main.c        ****     opSetEnc    = 3,
 196:main.c        ****     opMAX       
 197:main.c        **** } rxMessage_opcodes_t;    
 198:main.c        **** 
 199:main.c        **** /* Sanity check for opcodes */
 200:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 201:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 5


 202:main.c        **** typedef struct { 
 203:main.c        ****     uint8_t checksum;        
 204:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 205:main.c        ****     uint8_t opcode;     /* Operation (generic overlay for previewing opcode value) */
 206:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 207:main.c        **** 
 208:main.c        **** /* Configuration message, 19 bytes */
 209:main.c        **** typedef struct {
 210:main.c        ****     uint8_t checksum;        
 211:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 212:main.c        ****     uint8_t opcode;     /* Operation: 01 == config */        
 213:main.c        ****     uint8_t sequence;   /* Configuration message sequence number */
 214:main.c        ****     uint32_t Kp;
 215:main.c        ****     uint32_t Ki;
 216:main.c        ****     uint32_t Kd;
 217:main.c        ****     
 218:main.c        ****     uint8_t limit_Total;/* Total drive output limit, +/- percentage */
 219:main.c        ****     uint8_t limit_ITerm;/* PID I term output limit, also +/- percentage */
 220:main.c        ****     uint8_t effsetdelta;/* PID effective setpoint increment delta, nominally 25 steps */
 221:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 222:main.c        **** 
 223:main.c        **** /* Status message, contains desired position and such values, 10 bytes */
 224:main.c        **** typedef struct {
 225:main.c        ****     uint8_t  checksum;        
 226:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 227:main.c        ****     uint8_t  opcode;     /* Operation: 02 == status */
 228:main.c        ****     uint8_t  enable;     /* Enable/disable PID algorithm */
 229:main.c        ****     int32_t  setpoint;   /* Setpoint (desired actuator position) */
 230:main.c        ****     int8_t   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 231:main.c        ****     uint8_t  clearfaults;/* Set to nonzero to clear all the current faults */
 232:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 233:main.c        ****    
 234:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 235:main.c        **** typedef struct {
 236:main.c        ****     uint8_t  checksum;        
 237:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 238:main.c        ****     uint8_t  opcode;     /* Operation: 03 == set encoders */
 239:main.c        ****     int32_t  setpoint;   /* Setpoint (force an actuator logical position) */
 240:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 241:main.c        **** 
 242:main.c        **** 
 243:main.c        **** /* Wrap the message with an array of bytes */
 244:main.c        **** union {
 245:main.c        ****     uint8_t             buf[MAX_MESSAGE_SIZE];
 246:main.c        ****     rxMessage_overlay_t overlay;
 247:main.c        ****     rxMessage_config_t  config;
 248:main.c        ****     rxMessage_status_t  status;  
 249:main.c        ****     rxMessage_setenc_t  setenc;
 250:main.c        **** } rxMessage;
 251:main.c        **** 
 252:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (25 bytes) */
 253:main.c        **** typedef struct  {  
 254:main.c        ****     uint8_t  checksum;        /* Message checksum */    
 255:main.c        ****     uint8_t  version0;        /* Version byte 0 */ 
 256:main.c        ****     uint8_t  version1;        /* Version byte 1 */
 257:main.c        ****     uint8_t  version2;        /* Version byte 2 */
 258:main.c        ****     uint8_t  size;            /* Size of the message bytes, including opcode and size and checksum 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 6


 259:main.c        ****     uint8_t  opcode;          /* Echo back of the opcode this response is for, operation: 02 == sta
 260:main.c        ****     uint8_t  state;           /* Enum value for current device configuration state */ 
 261:main.c        ****     uint8_t  fault;           /* Bit encoded fields for current fault status */
 262:main.c        ****     uint8_t  sequence;        /* Echo back the config sequence number currently set */
 263:main.c        ****     uint16_t checksum_errors; /* Count of checksum errors */
 264:main.c        ****     int16_t  motor_current;   /* Motor current consumption (mA) */
 265:main.c        ****     int32_t  position;        /* Actual actuator position, signed value */ 
 266:main.c        ****     int16_t  pwm;             /* PWM value the motor is moving at */     
 267:main.c        ****     int32_t  iterm;           /* PID iterm value */
 268:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 269:main.c        **** 
 270:main.c        **** /* Wrap the message with an array of bytes */
 271:main.c        **** union {    
 272:main.c        ****     uint8_t     buf[MAX_MESSAGE_SIZE];
 273:main.c        ****     txMessage_t msg;
 274:main.c        **** } txMessage;
 275:main.c        **** 
 276:main.c        **** /* State machine definition for transmit side of messaging */
 277:main.c        **** typedef enum {
 278:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 279:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 280:main.c        **** } txMessageStates_t;
 281:main.c        **** 
 282:main.c        **** txMessageStates_t txMessageState;
 283:main.c        **** 
 284:main.c        **** /* --------------------------------------------------------------------- 
 285:main.c        ****  * Function prototypes
 286:main.c        ****  * --------------------------------------------------------------------- */
 287:main.c        **** int32_t GetPosition(void);
 288:main.c        **** void runRateGroup1_PID(void);
 289:main.c        **** void runRateGroup3_SPI(void);
 290:main.c        **** void MotorCurrentRead(void);
 291:main.c        **** 
 292:main.c        **** 
 293:main.c        **** /*******************************************************************************
 294:main.c        **** * Function Name: AssertFault
 295:main.c        **** ********************************************************************************
 296:main.c        **** * Summary:
 297:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 298:main.c        **** *  all faults.
 299:main.c        **** *
 300:main.c        **** * Parameters: FaultStates_t of the fault detected.
 301:main.c        **** * Return: None
 302:main.c        **** *******************************************************************************/
 303:main.c        **** void AssertFault(FaultStates_t fault) {
 304:main.c        ****  
 305:main.c        ****     switch (fault) {
 306:main.c        ****      
 307:main.c        ****         /* Clears all asserted faults */
 308:main.c        ****         case fsNONE:
 309:main.c        ****             FaultState = fsNONE;
 310:main.c        ****             break;        
 311:main.c        ****         
 312:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 313:main.c        ****         default:
 314:main.c        ****             FaultState |= fault;
 315:main.c        ****             break;        
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 7


 316:main.c        ****     }    
 317:main.c        **** }
 318:main.c        **** 
 319:main.c        **** 
 320:main.c        **** /*******************************************************************************
 321:main.c        **** * Function Name: ClearFault
 322:main.c        **** ********************************************************************************
 323:main.c        **** * Summary:
 324:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 325:main.c        **** *  all faults.
 326:main.c        **** *
 327:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 328:main.c        **** * Return: None
 329:main.c        **** *******************************************************************************/
 330:main.c        **** void ClearFault(FaultStates_t fault) {
 331:main.c        ****  
 332:main.c        ****     switch (fault) {
 333:main.c        ****      
 334:main.c        ****         /* Clears all asserted faults */
 335:main.c        ****         case fsNONE:
 336:main.c        ****             FaultState = fsNONE;
 337:main.c        ****             break;        
 338:main.c        ****         
 339:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 340:main.c        ****         default:
 341:main.c        ****             FaultState &= ~fault;
 342:main.c        ****             break;        
 343:main.c        ****     }    
 344:main.c        **** }
 345:main.c        **** 
 346:main.c        **** 
 347:main.c        **** /*******************************************************************************
 348:main.c        **** * Function Name: MotorCurrentRead
 349:main.c        **** ********************************************************************************
 350:main.c        **** * Summary:
 351:main.c        **** *  Read the motor current consumption.
 352:main.c        **** *
 353:main.c        **** * Parameters: None
 354:main.c        **** * Return: None
 355:main.c        **** *******************************************************************************/
 356:main.c        **** void MotorCurrentRead(void) {
 357:main.c        ****     
 358:main.c        ****     //TODO: Convert this to integer math
 359:main.c        ****     float c;
 360:main.c        ****     
 361:main.c        ****     c = getCurrent_mA(INA219_I2C_ADDR);
 362:main.c        ****     
 363:main.c        ****     /* Assign the global MotorCurrent value */
 364:main.c        ****     MotorCurrent = (int16_t) c;       
 365:main.c        **** }
 366:main.c        **** 
 367:main.c        **** 
 368:main.c        **** /*******************************************************************************
 369:main.c        **** * Function Name: Comm_Task
 370:main.c        **** ********************************************************************************
 371:main.c        **** * Summary:
 372:main.c        **** *  Task to perform the SPI communications.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 8


 373:main.c        **** *
 374:main.c        **** * Parameters: None
 375:main.c        **** * Return: None
 376:main.c        **** *******************************************************************************/
 377:main.c        **** void runRateGroup3_SPI(void) {
 378:main.c        ****  
 379:main.c        ****     rxMessage_opcodes_t opcode;
 380:main.c        ****     uint8_t size;
 381:main.c        ****     uint8_t i;
 382:main.c        ****     uint8_t checksum;
 383:main.c        ****     
 384:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 385:main.c        ****        get to it next cycle! */
 386:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 387:main.c        ****         return;
 388:main.c        ****     
 389:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 390:main.c        ****     switch (txMessageState) {
 391:main.c        ****      
 392:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 393:main.c        ****         case txmsClear:
 394:main.c        ****                 
 395:main.c        ****             /* Get a few items out of the message before checking the sum */
 396:main.c        ****             size     = rxMessage.overlay.size;
 397:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 398:main.c        ****             
 399:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 400:main.c        ****             if (size > sizeof(txMessage.buf))
 401:main.c        ****                 size = sizeof(txMessage.buf);                            
 402:main.c        ****         
 403:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 404:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 405:main.c        ****                 checksum += rxMessage.buf[i]; 
 406:main.c        **** 
 407:main.c        ****             /* Checksum fault, don't try to process the messgage */
 408:main.c        ****             if ((checksum & 0xFF) != 0) {
 409:main.c        ****                 
 410:main.c        ****                 txMessage.msg.opcode = opcode;
 411:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 412:main.c        ****                 ChecksumErrors++;
 413:main.c        ****                 
 414:main.c        ****             /* Message looks fine, process it */
 415:main.c        ****             } else {
 416:main.c        **** 
 417:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 418:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 419:main.c        ****                 
 420:main.c        ****                     switch (opcode) {
 421:main.c        ****                     
 422:main.c        ****                         case opConfig:
 423:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 424:main.c        ****                         
 425:main.c        ****                             /* Remember where we were when the init was sent */
 426:main.c        ****                             LastPosition = GetPosition();
 427:main.c        ****                            
 428:main.c        ****                             /* Initialize the setpoints to be equal to where we are right now.*/
 429:main.c        ****                             PID_Setpoint = LastPosition;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 9


 430:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 431:main.c        ****                             
 432:main.c        ****                             /* Disable PID if it's on */
 433:main.c        ****                             PID_Was_Enabled = false;
 434:main.c        ****                             PID_Enabled = false;
 435:main.c        ****                                 
 436:main.c        ****                                 
 437:main.c        ****                             /* Update the PID values passed down from the server */
 438:main.c        ****                         
 439:main.c        **** #ifndef OVERRIDE_PID_CONSTANTS
 440:main.c        ****                             kp = rxMessage.config.Kp;
 441:main.c        ****                             ki = rxMessage.config.Ki;
 442:main.c        ****                             kd = rxMessage.config.Kd;      
 443:main.c        ****                         
 444:main.c        ****                             /* PID effective setpoint increment delta value */                     
 445:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
 446:main.c        ****                                
 447:main.c        ****                             /* Setup the output limits and stop a jog if one was in progress */
 448:main.c        ****                             Jog = 0;
 449:main.c        ****                         
 450:main.c        ****                             /* Clip the limits to 100% duty cycle */
 451:main.c        ****                             limit = rxMessage.config.limit_Total;
 452:main.c        ****                             if (limit > 100)
 453:main.c        ****                                 limit = 100;
 454:main.c        ****                         
 455:main.c        ****                             outMax_Total = limit;                                        
 456:main.c        ****                             
 457:main.c        ****                             limit = rxMessage.config.limit_ITerm;                                  
 458:main.c        ****                             if (limit > 100)
 459:main.c        ****                                 limit = 100;
 460:main.c        ****                             
 461:main.c        ****                             outMax_ITerm = limit;
 462:main.c        **** #endif
 463:main.c        ****                             
 464:main.c        ****                             /* Convert the configured output maximum also into a PWM value, because
 465:main.c        ****                             could be set from manual control of the PWM.  
 466:main.c        **** 
 467:main.c        ****                             outMax_Total ranges from 0 to 100% of power delivery, which means we ne
 468:main.c        ****                             convert it into a value symmetrically above and below the "neutral" cen
 469:main.c        ****                             point value of 50 */    
 470:main.c        ****                             pwmLimit = (outMax_Total/100 * 50);
 471:main.c        ****                             pwmMax = 50 + pwmLimit;
 472:main.c        ****                             pwmMin = 50 - pwmLimit;
 473:main.c        ****                         
 474:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 475:main.c        ****                             ConfigState = csReady;  
 476:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 477:main.c        ****                         
 478:main.c        ****                             /* Clear all the faults when reconfigured */
 479:main.c        ****                             ClearFault(fsNONE);
 480:main.c        ****                             break;
 481:main.c        **** 
 482:main.c        ****                         case opStatus:
 483:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 484:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 485:main.c        ****                             
 486:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 10


 487:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
 488:main.c        ****                                 
 489:main.c        ****                                 /* Remember where we started */
 490:main.c        ****                                 LastPosition = GetPosition();
 491:main.c        ****                                 
 492:main.c        ****                                 /* Update destination */
 493:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 494:main.c        ****                                 
 495:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 496:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 497:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 498:main.c        ****                                 
 499:main.c        ****                                 /* Reset counting of index marks */
 500:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 501:main.c        ****                             }                                        
 502:main.c        ****                         
 503:main.c        ****                             /* PWM jog value ranges from -50 to 50, where -50 is max-reverse curren
 504:main.c        ****                             Jog = rxMessage.status.jog;                                            
 505:main.c        ****                             break;
 506:main.c        ****                         
 507:main.c        ****                         case opSetEnc:
 508:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 509:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);
 510:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 511:main.c        ****                             break;                                        
 512:main.c        ****                             
 513:main.c        ****                         /* No other opcodes are valid */
 514:main.c        ****                         default:
 515:main.c        ****                             break;
 516:main.c        ****                     }                           
 517:main.c        ****                 }                            
 518:main.c        ****             }
 519:main.c        ****             
 520:main.c        ****             /* Get a fresh copy of the position information */
 521:main.c        ****             Position = GetPosition();
 522:main.c        ****             
 523:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 524:main.c        ****             txMessage.msg.checksum        = 0;
 525:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 526:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 527:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 528:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 529:main.c        ****             txMessage.msg.opcode          = opStatus;
 530:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 531:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 532:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 533:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 534:main.c        ****             txMessage.msg.position        = Position;
 535:main.c        ****             txMessage.msg.pwm             = Output;
 536:main.c        ****             txMessage.msg.iterm           = iterm;
 537:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                            
 538:main.c        ****             
 539:main.c        ****             /* Set the checksum in the response */
 540:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 541:main.c        ****                 checksum += txMessage.buf[i]; 
 542:main.c        ****                 
 543:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 11


 544:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 545:main.c        ****                 
 546:main.c        ****             /* Copy the readied buffer out to the FIFO */
 547:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 548:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 549:main.c        **** 
 550:main.c        ****             /* Indicate it's loaded for use */
 551:main.c        ****             txMessageState = txmsLoaded;
 552:main.c        ****             
 553:main.c        ****             /* Clear all the faults if told to */
 554:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 555:main.c        ****                 ClearFault(fsNONE);
 556:main.c        ****         
 557:main.c        ****             break;
 558:main.c        ****     
 559:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 560:main.c        ****         case txmsLoaded:                
 561:main.c        ****             break;
 562:main.c        ****                 
 563:main.c        ****     } // End of message state case statement
 564:main.c        **** 
 565:main.c        **** }
 566:main.c        ****     
 567:main.c        **** 
 568:main.c        **** /*******************************************************************************
 569:main.c        **** * Function Name: PWM_Set
 570:main.c        **** ********************************************************************************
 571:main.c        **** * Summary:
 572:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 573:main.c        **** *
 574:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 575:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 576:main.c        **** * Return: None
 577:main.c        **** *******************************************************************************/
 578:main.c        **** void PWM_Set(int32_t output) {    
 579:main.c        ****         
 580:main.c        ****     /* output varies from -800 to 800, which needs to be expressed as 0 to 1600 
 581:main.c        ****        for the PWM */
 582:main.c        ****     PWM_1_WriteCompare((PWM_15KHZ_PERIOD/2) + (DRIVE_POLARITY * output));    
 583:main.c        **** }
 584:main.c        **** 
 585:main.c        **** 
 586:main.c        **** /*******************************************************************************
 587:main.c        **** * Function Name: GetPosition
 588:main.c        **** ********************************************************************************
 589:main.c        **** * Summary:
 590:main.c        **** *  Get the physical position value and compensate for negative locations.
 591:main.c        **** *
 592:main.c        **** * Parameters: None
 593:main.c        **** * Return: int32_t (signed!) position value
 594:main.c        **** *******************************************************************************/
 595:main.c        **** int32_t GetPosition(void) {
 596:main.c        ****     
 597:main.c        ****     static volatile uint32_t RawPosition;
 598:main.c        ****     static volatile int32_t result;
 599:main.c        ****     
 600:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 12


 601:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 602:main.c        ****     
 603:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 604:main.c        ****        underflow and make that into a negative value */
 605:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 606:main.c        ****         
 607:main.c        ****         result = (-1) * ((int32_t) ENCODER_MAX - (int32_t) RawPosition);
 608:main.c        ****         
 609:main.c        ****     } else {
 610:main.c        ****      
 611:main.c        ****         /* Value is "positive", treat it normally */
 612:main.c        ****         result = (int32_t) RawPosition;
 613:main.c        ****     }
 614:main.c        ****     
 615:main.c        ****     /* Update the master copy of position information */
 616:main.c        ****     Position = result;
 617:main.c        ****     return result;
 618:main.c        **** }
 619:main.c        **** 
 620:main.c        **** 
 621:main.c        **** /*******************************************************************************
 622:main.c        **** * Function Name: PID_Initialize
 623:main.c        **** ********************************************************************************
 624:main.c        **** * Summary:
 625:main.c        **** *  Setup and reset the PID terms.
 626:main.c        **** *
 627:main.c        **** * Parameters: None
 628:main.c        **** * Return: None
 629:main.c        **** *******************************************************************************/
 630:main.c        **** void PID_Initialize(void) {
 631:main.c        ****     
 632:main.c        ****     /* Get up-to-date position */
 633:main.c        ****     Position = GetPosition();
 634:main.c        ****     LastPosition = Position;
 635:main.c        ****     
 636:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 637:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 638:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 639:main.c        ****     
 640:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 641:main.c        ****        switching from manual to auto frequently */
 642:main.c        ****     iterm = 0;
 643:main.c        **** }    
 644:main.c        **** 
 645:main.c        **** 
 646:main.c        **** /*******************************************************************************
 647:main.c        **** * Function Name: PID_SetMode
 648:main.c        **** ********************************************************************************
 649:main.c        **** * Summary:
 650:main.c        **** *  Sets the PID into automatic or manual mode.
 651:main.c        **** *
 652:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 653:main.c        **** * Return: None
 654:main.c        **** *******************************************************************************/
 655:main.c        **** void PID_SetMode(uint32_t Mode) {
 656:main.c        ****     
 657:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 13


 658:main.c        ****     
 659:main.c        ****     if (newAuto && !inAuto) {  
 660:main.c        ****         /*we just went from manual to auto*/
 661:main.c        ****         PID_Initialize();
 662:main.c        ****     }
 663:main.c        ****     
 664:main.c        ****     inAuto = newAuto;
 665:main.c        **** } 
 666:main.c        **** 
 667:main.c        **** 
 668:main.c        **** /*******************************************************************************
 669:main.c        **** * Function Name: PID_SetDrive
 670:main.c        **** ********************************************************************************
 671:main.c        **** * Summary:
 672:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 673:main.c        **** *
 674:main.c        **** * Parameters: Percentage output to drive the PWM.
 675:main.c        **** * Return: None
 676:main.c        **** *******************************************************************************/
 677:main.c        **** #ifdef ZERO
 678:main.c        **** void PID_SetDrive(int32_t percent) {
 679:main.c        **** 
 680:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 681:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 682:main.c        ****     
 683:main.c        ****     int32_t dutycycle = ( (DRIVE_POLARITY * percent) + 100) >> 1; // Shift right by 1 bit is the sa
 684:main.c        ****     
 685:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 686:main.c        ****     PWM_Set(dutycycle);  
 687:main.c        **** }
 688:main.c        **** #endif
 689:main.c        **** 
 690:main.c        **** 
 691:main.c        **** /*******************************************************************************
 692:main.c        **** * Function Name: runRateGroup1_PID
 693:main.c        **** ********************************************************************************
 694:main.c        **** * Summary:
 695:main.c        **** *  Task to perform the PID calculations.
 696:main.c        **** *
 697:main.c        **** * Parameters: None
 698:main.c        **** * Return: None
 699:main.c        **** *******************************************************************************/
 700:main.c        **** void runRateGroup1_PID(void) {
 701:main.c        ****    
 702:main.c        ****     /////////////////////////////////////////////////////
 703:main.c        ****     // TESTING ONLY
 704:main.c        ****     //ConfigState = csReady;
 705:main.c        ****     //PID_Enabled = true;
 706:main.c        ****     /////////////////////////////////////////////////////
 707:main.c        **** 
 708:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 709:main.c        ****        take preventative action and abandon any moves in progress. */
 710:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 711:main.c        ****         
 712:main.c        ****         /* Stop all motion */
 713:main.c        ****         ////PWM_Set(PWM_JOG_NEUTRAL);
 714:main.c        ****         PWM_Set(PWM_NEUTRAL);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 14


 715:main.c        ****         PID_Enabled = false;
 716:main.c        ****         
 717:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the next m
 718:main.c        ****            in which case we want to be neutral. */
 719:main.c        ****         Jog = 0;
 720:main.c        **** 
 721:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 722:main.c        ****     } else if (ConfigState == csReady) {
 723:main.c        ****         
 724:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 725:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 726:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 727:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 728:main.c        **** 
 729:main.c        ****         /* Handle mode switching */
 730:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 731:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 732:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 733:main.c        ****             PID_SetMode(PID_MANUAL);                
 734:main.c        ****         } else {
 735:main.c        ****             // No mode change happened   
 736:main.c        ****         }
 737:main.c        ****         
 738:main.c        ****         /* Save value for next cycle */
 739:main.c        ****         PID_Was_Enabled = PID_Enabled;
 740:main.c        ****         
 741:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 742:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 743:main.c        ****     
 744:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 745:main.c        ****         
 746:main.c        ****         1) The setpoint will change to 2000.
 747:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 748:main.c        ****         3) Calculate the PID and return.
 749:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 750:main.c        ****         5) Calculate the PID and return.
 751:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 752:main.c        ****         */
 753:main.c        ****         
 754:main.c        ****         if (PID_Enabled) {
 755:main.c        ****             
 756:main.c        ****             if (PID_EffSetDelta == 0) {
 757:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 758:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 759:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 760:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 761:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 762:main.c        ****             } else {
 763:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 764:main.c        ****             }
 765:main.c        ****             
 766:main.c        ****             /* Get most up-to-date current position */
 767:main.c        ****             Position = GetPosition();
 768:main.c        ****             
 769:main.c        ****             /* Run the PID algorithm once */
 770:main.c        ****             Output = PID_UpdateValues(PID_EffectiveSetpoint, Position);
 771:main.c        ****             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 15


 772:main.c        ****             /* Put the PID output value out on the wire */
 773:main.c        ****             PWM_Set(Output);
 774:main.c        **** 
 775:main.c        ****         } else {
 776:main.c        ****             /* If disabled, just return 0 */
 777:main.c        ****             Output = 0;
 778:main.c        ****         }        
 779:main.c        ****     }
 780:main.c        **** }
 781:main.c        **** 
 782:main.c        **** 
 783:main.c        **** /*******************************************************************************
 784:main.c        **** * Function Name: main
 785:main.c        **** ********************************************************************************
 786:main.c        **** * Summary:
 787:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 788:main.c        **** *
 789:main.c        **** * Parameters: None
 790:main.c        **** * Return: NEVER!
 791:main.c        **** *******************************************************************************/
 792:main.c        **** int main(void) {
 793:main.c        ****    
 794:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 795:main.c        ****        microprocessor.  There is a race condition here: unless the actuator is on a home
 796:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 797:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 798:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 799:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 800:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 801:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 802:main.c        **** 
 803:main.c        ****     
 804:main.c        ****     /********************************************************************** 
 805:main.c        ****     * Interrupts
 806:main.c        ****     **********************************************************************/
 807:main.c        ****     
 808:main.c        ****     /* BRMS timer interrupt */
 809:main.c        ****     Timer_BRMS_Start();
 810:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 811:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 812:main.c        **** 
 813:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 814:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 815:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 816:main.c        **** 
 817:main.c        ****     /* Encoder interrupt */
 818:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 819:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 820:main.c        ****     
 821:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 822:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 823:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 824:main.c        **** 
 825:main.c        ****     /* Enable the global interrupt */
 826:main.c        ****     CyGlobalIntEnable;
 827:main.c        ****     
 828:main.c        ****     /********************************************************************** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 16


 829:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 830:main.c        ****     **********************************************************************/
 831:main.c        **** 
 832:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 833:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 834:main.c        ****        when you hit a breakpoint. */
 835:main.c        **** 
 836:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 837:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 838:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
 839:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 840:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 841:main.c        **** 	
 842:main.c        **** 	/* Enable WDT counter 1 */
 843:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
 844:main.c        **** 	
 845:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
 846:main.c        **** 	CySysWdtLock();
 847:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 848:main.c        **** 	CySysWdtUnlock();        
 849:main.c        **** #endif    
 850:main.c        **** 
 851:main.c        ****     
 852:main.c        ****     /*********************************************************************** 
 853:main.c        ****     * Start the various subsystems.
 854:main.c        ****     ***********************************************************************/
 855:main.c        ****     I2C_Start();
 856:main.c        ****     
 857:main.c        ****     /* Start I2C for the Motor Current monitor */
 858:main.c        ****     //Init_INA(INA219_I2C_ADDR);
 859:main.c        ****     
 860:main.c        ****     CyDelay(100u);
 861:main.c        ****     SPI_1_Start();
 862:main.c        ****     
 863:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
 864:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
 865:main.c        ****     PWM_1_Start();
 866:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 867:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 868:main.c        ****     
 869:main.c        ****     /* Default the jog value to neutral (no movement) */
 870:main.c        ****     Jog = 0;
 871:main.c        ****     
 872:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
 873:main.c        ****     homingDone = false;
 874:main.c        ****    
 875:main.c        ****     /* Start counting the quadrature encoding */
 876:main.c        ****     Counter_1_Start();    
 877:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 878:main.c        ****     LastPosition = ENCODER_MAX;
 879:main.c        ****     
 880:main.c        ****     /* Clear and start the index mark counter */
 881:main.c        ****     Index_Counter_1_Start();
 882:main.c        ****     Index_Counter_1_WriteCounter(0);
 883:main.c        ****      
 884:main.c        ****     /* Start off unconfigured */
 885:main.c        ****     ConfigState = csUnconfig;  
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 17


 886:main.c        ****     ConfigSequence = 0;
 887:main.c        ****     ChecksumErrors = 0;
 888:main.c        ****     
 889:main.c        ****     /***************************/
 890:main.c        ****     /* Setup the PID subsystem */
 891:main.c        ****     PID_Initialize();
 892:main.c        ****     PID_SetMode(PID_MANUAL);
 893:main.c        ****     
 894:main.c        ****     /* Initially default to 100% output max until config tells us otherwise */
 895:main.c        ****     outMax_Total = 100;
 896:main.c        ****     outMax_ITerm = 100;
 897:main.c        **** 
 898:main.c        ****     /* Init the PWM limits the same way, full maximums */
 899:main.c        ****     pwmLimit = 50;   // This is a + or - value
 900:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 901:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 902:main.c        ****     
 903:main.c        ****     /* Start off disabled */
 904:main.c        ****     PID_Setpoint          = 0;  
 905:main.c        ****     PID_EffectiveSetpoint = 0;
 906:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 907:main.c        ****     PID_Was_Enabled       = false;
 908:main.c        ****     PID_Enabled           = false;
 909:main.c        ****     //PID_SetDrive(0); // Drive set to 0%
 910:main.c        ****     PWM_Set(PWM_NEUTRAL);
 911:main.c        ****   
 912:main.c        ****     /***********************************************************************
 913:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
 914:main.c        ****     * constantly interrupted by the task scheduler.
 915:main.c        ****     ***********************************************************************/
 916:main.c        ****     while (1) {
 917:main.c        **** 
 918:main.c        ****         //TODO: Enable/disable this mechanism based on some input from the SPI master,
 919:main.c        ****         //      which might be the ACS test set, or the beagle bone node box.  Disable it for
 920:main.c        ****         //      now to prevent multi-mastering of the I2C bus, which doesn't work.
 921:main.c        ****         /*
 922:main.c        ****         PROBE_Write(1);
 923:main.c        ****         MotorCurrentRead();
 924:main.c        ****         PROBE_Write(0);
 925:main.c        ****         */
 926:main.c        ****         
 927:main.c        ****         /*
 928:main.c        ****         if (UptimeMicroseconds > (LastUptimeMicroseconds + 500)) {
 929:main.c        ****             LastUptimeMicroseconds = UptimeMicroseconds;
 930:main.c        ****             
 931:main.c        ****             if (toggle) {
 932:main.c        ****                 PROBE_Write(1);
 933:main.c        ****                 toggle = false;
 934:main.c        ****             } else {
 935:main.c        ****                 PROBE_Write(0);
 936:main.c        ****                 toggle = true;
 937:main.c        ****             }
 938:main.c        ****         }
 939:main.c        ****         */
 940:main.c        ****         
 941:main.c        ****         
 942:main.c        ****         /* Use the LED as a heartbeat */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 18


 943:main.c        ****         if (UptimeSeconds % 2) {
 944:main.c        ****             LED_Write(1);
 945:main.c        ****         } else {
 946:main.c        ****             LED_Write(0);
 947:main.c        ****         } 
 948:main.c        ****         
 949:main.c        ****         // Delay 10ms before next loop iteration
 950:main.c        ****         CyDelay(10);         
 951:main.c        ****         
 952:main.c        ****         
 953:main.c        ****    
 954:main.c        ****     /* ------------------------------------------------------------------------------------ */
 955:main.c        ****     /* Every loop, refresh the counter of the watchdog to indicate the system is still alive
 956:main.c        ****        and not stalled out in some interrupt somewhre.  Were the BRMS to stop working or the 
 957:main.c        ****        motion thread to die, the CPU will be reset after 2 seconds. */
 958:main.c        **** ////    WDT_COUNT1_REFRESH();        
 959:main.c        ****     /* ------------------------------------------------------------------------------------ */
 960:main.c        ****         
 961:main.c        ****     }
 962:main.c        ****       
 963:main.c        ****     
 964:main.c        ****     /***********************************************************************
 965:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
 966:main.c        ****     ***********************************************************************/
 967:main.c        ****     return 1;       
 968:main.c        **** }
 969:main.c        **** 
 970:main.c        **** 
 971:main.c        **** /*******************************************************************************
 972:main.c        **** * Function Name: BRMS_Interrupt
 973:main.c        **** ********************************************************************************
 974:main.c        **** * Summary:
 975:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
 976:main.c        **** *
 977:main.c        **** * Parameters: None
 978:main.c        **** * Return: None
 979:main.c        **** *******************************************************************************/
 980:main.c        **** CY_ISR(BRMS_Interrupt) {
 981:main.c        ****     
 982:main.c        ****     static uint32_t brmsTask;                 // The BRMS schedule counter
 983:main.c        **** 
 984:main.c        ****     static uint32_t brmsRG1Mask = 0b00000001; // Rate group 1 mask
 985:main.c        ****     static uint32_t brmsRG2Mask = 0b00000010; // Rate group 2 mask
 986:main.c        ****     static uint32_t brmsRG3Mask = 0b00000100; // Rate group 3 mask
 987:main.c        ****     static uint32_t brmsRG4Mask = 0b00001000; // Rate group 4 mask
 988:main.c        ****     static uint32_t brmsRG5Mask = 0b00010000; // Rate group 5 mask
 989:main.c        ****     
 990:main.c        ****     /* Clears the timer interrupt */
 991:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
 992:main.c        **** 
 993:main.c        ****     PROBE_Write(1);
 994:main.c        ****     
 995:main.c        ****     /* Use this 200us interrupt as a clock mechanism */
 996:main.c        ****     UptimeMicroseconds += 200;
 997:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 998:main.c        ****     
 999:main.c        ****     /* Count milliseconds */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 19


1000:main.c        ****     if (UptimeMicrosecondsAccumulator > 1000) {
1001:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1002:main.c        ****         UptimeMilliseconds += 1;
1003:main.c        ****         UptimeMillisecondsAccumulator += 1;
1004:main.c        ****     }
1005:main.c        ****     
1006:main.c        ****     /* Count seconds */
1007:main.c        ****     if (UptimeMillisecondsAccumulator > 1000) {
1008:main.c        ****         UptimeMillisecondsAccumulator = 0;
1009:main.c        ****         UptimeSeconds += 1;
1010:main.c        ****     }
1011:main.c        ****     
1012:main.c        ****     /* Increment the BRMS task counter infinitely */
1013:main.c        ****     brmsTask++;
1014:main.c        **** 
1015:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
1016:main.c        ****        sequentially until one results in a "true" value.  
1017:main.c        ****     
1018:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1019:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1020:main.c        ****     
1021:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
1022:main.c        ****        value ends in 0bxx10. 
1023:main.c        ****     
1024:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1025:main.c        ****        ends in 0bx100.  
1026:main.c        ****     
1027:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1028:main.c        ****     
1029:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1030:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1031:main.c        ****        interrupt returns.
1032:main.c        ****     */
1033:main.c        ****     if (brmsTask & brmsRG1Mask) {
1034:main.c        ****         
1035:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1036:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1037:main.c        ****            to a 2.5KHz update rate. */
1038:main.c        ****         runRateGroup1_PID();
1039:main.c        ****         
1040:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1041:main.c        ****         
1042:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1043:main.c        ****         //runRateGroup2_TBD();           
1044:main.c        ****         
1045:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1046:main.c        ****         
1047:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1048:main.c        ****         runRateGroup3_SPI();
1049:main.c        ****         
1050:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1051:main.c        ****      
1052:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1053:main.c        ****         //runRateGroup4_TBD();
1054:main.c        **** 
1055:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1056:main.c        ****      
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 20


1057:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1058:main.c        ****         //runRateGroup5_TBD();
1059:main.c        ****     }
1060:main.c        ****     
1061:main.c        ****     PROBE_Write(0);
1062:main.c        ****    
1063:main.c        **** }
1064:main.c        **** 
1065:main.c        **** 
1066:main.c        **** /*******************************************************************************
1067:main.c        **** * Function Name: RSTIsrHandler
1068:main.c        **** ********************************************************************************
1069:main.c        **** * Summary:
1070:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1071:main.c        **** *  Clears a pending Interrupt.
1072:main.c        **** *  Clears a pin Interrupt.
1073:main.c        **** *
1074:main.c        **** * Parameters: None
1075:main.c        **** * Return: None
1076:main.c        **** *******************************************************************************/
1077:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1077 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1078:main.c        ****     
1079:main.c        ****     /* Clear pending Interrupt */
1080:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1080 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1081:main.c        ****     
1082:main.c        ****     /* Clear pin Interrupt */
1083:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1083 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1084:main.c        ****     
1085:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1086:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1086 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1087:main.c        ****     
1088:main.c        ****     /* Clear the index counter */
1089:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1089 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1090:main.c        ****     
1091:main.c        ****     /* When we hit the index mark, homing is complete */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 21


1092:main.c        ****     homingDone = true;    
  50              		.loc 1 1092 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1093:main.c        **** }
  54              		.loc 1 1093 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE43:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
  70              	HomeIsrHandler:
  71              	.LFB44:
1094:main.c        **** 
1095:main.c        **** 
1096:main.c        **** /*******************************************************************************
1097:main.c        **** * Function Name: HomeIsrHandler
1098:main.c        **** ********************************************************************************
1099:main.c        **** * Summary:
1100:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1101:main.c        **** *  Clears a pending Interrupt.
1102:main.c        **** *  Clears a pin Interrupt.
1103:main.c        **** *
1104:main.c        **** * Parameters: None
1105:main.c        **** * Return: None
1106:main.c        **** *******************************************************************************/
1107:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1107 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1108:main.c        ****     
1109:main.c        ****     /* Clear pending Interrupt */
1110:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1110 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1111:main.c        ****     
1112:main.c        ****     /* Clear pin Interrupt */
1113:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1113 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 22


  85              	.LVL5:
1114:main.c        **** 
1115:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1116:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1116 0
  87 000a 0020     		movs	r0, #0
  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1117:main.c        ****     
1118:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1119:main.c        ****     homingDone = false;
  90              		.loc 1 1119 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1120:main.c        **** }
  94              		.loc 1 1120 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 0018 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE44:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB45:
1121:main.c        **** 
1122:main.c        **** 
1123:main.c        **** /*******************************************************************************
1124:main.c        **** * Function Name: SPI_SS_IsrHandler
1125:main.c        **** ********************************************************************************
1126:main.c        **** * Summary:
1127:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1128:main.c        **** *  Clears a pin Interrupt.
1129:main.c        **** *
1130:main.c        **** * Parameters: None
1131:main.c        **** * Return: None
1132:main.c        **** *******************************************************************************/
1133:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1133 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1134:main.c        ****     
1135:main.c        ****     uint32_t i;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 23


1136:main.c        ****     
1137:main.c        ****     /* Clear SPI slave select pin Interrupt */
1138:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1138 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
1139:main.c        ****     
1140:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1141:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1141 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1142:main.c        ****         return;
1143:main.c        ****    
1144:main.c        ****     /* Update the last message tick timer */
1145:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1145 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
 132 0014 0E4B     		ldr	r3, .L12+4
 133 0016 1A60     		str	r2, [r3]
1146:main.c        **** 
1147:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1148:main.c        ****        check the messaging state before resetting the buffers */
1149:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1149 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1150:main.c        ****      
1151:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1152:main.c        ****         case txmsClear:
1153:main.c        ****             break;
1154:main.c        ****      
1155:main.c        ****         /* A message was readied for transmission */
1156:main.c        ****         case txmsLoaded:
1157:main.c        ****          
1158:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1159:main.c        ****             
1160:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1161:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1161 0
 140 0020 1E22     		movs	r2, #30
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1162:main.c        **** 
1163:main.c        ****             /* Message from the master is completely clocked in by now */     
1164:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1164 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 24


 148              	.LVL10:
 149              	.L11:
1165:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1165 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1164:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1164 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1164:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1164 0 is_stmt 0 discriminator 1
 160 0038 1D2C     		cmp	r4, #29
 161 003a F8D9     		bls	.L11
1166:main.c        ****             }
1167:main.c        ****             
1168:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1169:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1169 0 is_stmt 1
 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 164              	.LVL13:
1170:main.c        ****             
1171:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1172:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1172 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1173:main.c        ****             
1174:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1175:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1175 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1176:main.c        ****             break;
1177:main.c        ****             
1178:main.c        ****     } 
1179:main.c        ****         
1180:main.c        **** }
 174              		.loc 1 1180 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE45:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 25


 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 303:main.c        ****  
 196              		.loc 1 303 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
 305:main.c        ****      
 202              		.loc 1 305 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 309:main.c        ****             break;        
 205              		.loc 1 309 0
 206 0004 0022     		movs	r2, #0
 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 310:main.c        ****         
 209              		.loc 1 310 0
 210 000a 03E0     		b	.L14
 211              	.L18:
 314:main.c        ****             break;        
 212              		.loc 1 314 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 317:main.c        **** 
 219              		.loc 1 317 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 330:main.c        ****  
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 26


 237              		.loc 1 330 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
 332:main.c        ****      
 243              		.loc 1 332 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 336:main.c        ****             break;        
 246              		.loc 1 336 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 337:main.c        ****         
 250              		.loc 1 337 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 341:main.c        ****             break;        
 253              		.loc 1 341 0
 254 000c 024A     		ldr	r2, .L26
 255 000e 1378     		ldrb	r3, [r2]
 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 344:main.c        **** 
 259              		.loc 1 344 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.global	__aeabi_f2iz
 270              		.section	.text.MotorCurrentRead,"ax",%progbits
 271              		.align	2
 272              		.global	MotorCurrentRead
 273              		.code	16
 274              		.thumb_func
 275              		.type	MotorCurrentRead, %function
 276              	MotorCurrentRead:
 277              	.LFB34:
 356:main.c        ****     
 278              		.loc 1 356 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 361:main.c        ****     
 286              		.loc 1 361 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 27


 287 0002 4020     		movs	r0, #64
 288 0004 FFF7FEFF 		bl	getCurrent_mA
 289              	.LVL19:
 364:main.c        **** }
 290              		.loc 1 364 0
 291 0008 FFF7FEFF 		bl	__aeabi_f2iz
 292              	.LVL20:
 293 000c 00B2     		sxth	r0, r0
 294 000e 014B     		ldr	r3, .L29
 295 0010 1880     		strh	r0, [r3]
 365:main.c        **** 
 296              		.loc 1 365 0
 297              		@ sp needed
 298 0012 10BD     		pop	{r4, pc}
 299              	.L30:
 300              		.align	2
 301              	.L29:
 302 0014 00000000 		.word	MotorCurrent
 303              		.cfi_endproc
 304              	.LFE34:
 305              		.size	MotorCurrentRead, .-MotorCurrentRead
 306              		.section	.text.PWM_Set,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_Set
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_Set, %function
 312              	PWM_Set:
 313              	.LFB36:
 578:main.c        ****         
 314              		.loc 1 578 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL21:
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 582:main.c        **** }
 323              		.loc 1 582 0
 324 0002 C823     		movs	r3, #200
 325 0004 9B00     		lsls	r3, r3, #2
 326 0006 181A     		subs	r0, r3, r0
 327              	.LVL22:
 328 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 329              	.LVL23:
 583:main.c        **** 
 330              		.loc 1 583 0
 331              		@ sp needed
 332 000c 10BD     		pop	{r4, pc}
 333              		.cfi_endproc
 334              	.LFE36:
 335              		.size	PWM_Set, .-PWM_Set
 336 000e C046     		.section	.text.GetPosition,"ax",%progbits
 337              		.align	2
 338              		.global	GetPosition
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 28


 339              		.code	16
 340              		.thumb_func
 341              		.type	GetPosition, %function
 342              	GetPosition:
 343              	.LFB37:
 595:main.c        ****     
 344              		.loc 1 595 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 601:main.c        ****     
 352              		.loc 1 601 0
 353 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 354              	.LVL24:
 355 0006 0B4B     		ldr	r3, .L35
 356 0008 9860     		str	r0, [r3, #8]
 605:main.c        ****         
 357              		.loc 1 605 0
 358 000a 9A68     		ldr	r2, [r3, #8]
 359 000c 0A4B     		ldr	r3, .L35+4
 360 000e 9A42     		cmp	r2, r3
 361 0010 06D9     		bls	.L33
 607:main.c        ****         
 362              		.loc 1 607 0
 363 0012 084A     		ldr	r2, .L35
 364 0014 9368     		ldr	r3, [r2, #8]
 365 0016 0949     		ldr	r1, .L35+8
 366 0018 8C46     		mov	ip, r1
 367 001a 6344     		add	r3, r3, ip
 368 001c D360     		str	r3, [r2, #12]
 369 001e 02E0     		b	.L34
 370              	.L33:
 612:main.c        ****     }
 371              		.loc 1 612 0
 372 0020 044B     		ldr	r3, .L35
 373 0022 9A68     		ldr	r2, [r3, #8]
 374 0024 DA60     		str	r2, [r3, #12]
 375              	.L34:
 616:main.c        ****     return result;
 376              		.loc 1 616 0
 377 0026 034B     		ldr	r3, .L35
 378 0028 D968     		ldr	r1, [r3, #12]
 379 002a 054A     		ldr	r2, .L35+12
 380 002c 1160     		str	r1, [r2]
 617:main.c        **** }
 381              		.loc 1 617 0
 382 002e D868     		ldr	r0, [r3, #12]
 618:main.c        **** 
 383              		.loc 1 618 0
 384              		@ sp needed
 385 0030 10BD     		pop	{r4, pc}
 386              	.L36:
 387 0032 C046     		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 29


 388              	.L35:
 389 0034 00000000 		.word	.LANCHOR1
 390 0038 FFFFEF00 		.word	15728639
 391 003c 010000FF 		.word	-16777215
 392 0040 00000000 		.word	Position
 393              		.cfi_endproc
 394              	.LFE37:
 395              		.size	GetPosition, .-GetPosition
 396              		.global	__aeabi_idiv
 397              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 398              		.align	2
 399              		.global	runRateGroup3_SPI
 400              		.code	16
 401              		.thumb_func
 402              		.type	runRateGroup3_SPI, %function
 403              	runRateGroup3_SPI:
 404              	.LFB35:
 377:main.c        ****  
 405              		.loc 1 377 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 386:main.c        ****         return;
 413              		.loc 1 386 0
 414 0002 7F4B     		ldr	r3, .L52
 415 0004 1B68     		ldr	r3, [r3]
 416 0006 DB07     		lsls	r3, r3, #31
 417 0008 00D5     		bpl	.LCB319
 418 000a F8E0     		b	.L37	@long jump
 419              	.LCB319:
 390:main.c        ****      
 420              		.loc 1 390 0
 421 000c 7D4B     		ldr	r3, .L52+4
 422 000e 1B78     		ldrb	r3, [r3]
 423 0010 002B     		cmp	r3, #0
 424 0012 00D0     		beq	.LCB324
 425 0014 F3E0     		b	.L37	@long jump
 426              	.LCB324:
 396:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 427              		.loc 1 396 0
 428 0016 7C4B     		ldr	r3, .L52+8
 429 0018 5878     		ldrb	r0, [r3, #1]
 430              	.LVL25:
 397:main.c        ****             
 431              		.loc 1 397 0
 432 001a 9C78     		ldrb	r4, [r3, #2]
 433              	.LVL26:
 400:main.c        ****                 size = sizeof(txMessage.buf);                            
 434              		.loc 1 400 0
 435 001c 1E28     		cmp	r0, #30
 436 001e 00D9     		bls	.L40
 401:main.c        ****         
 437              		.loc 1 401 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 30


 438 0020 1E20     		movs	r0, #30
 439              	.LVL27:
 440              	.L40:
 404:main.c        ****                 checksum += rxMessage.buf[i]; 
 441              		.loc 1 404 0
 442 0022 0022     		movs	r2, #0
 443 0024 0023     		movs	r3, #0
 444 0026 05E0     		b	.L41
 445              	.LVL28:
 446              	.L42:
 405:main.c        **** 
 447              		.loc 1 405 0 discriminator 3
 448 0028 7749     		ldr	r1, .L52+8
 449 002a C95C     		ldrb	r1, [r1, r3]
 450 002c 5218     		adds	r2, r2, r1
 451              	.LVL29:
 452 002e D2B2     		uxtb	r2, r2
 453              	.LVL30:
 404:main.c        ****                 checksum += rxMessage.buf[i]; 
 454              		.loc 1 404 0 discriminator 3
 455 0030 0133     		adds	r3, r3, #1
 456              	.LVL31:
 457 0032 DBB2     		uxtb	r3, r3
 458              	.LVL32:
 459              	.L41:
 404:main.c        ****                 checksum += rxMessage.buf[i]; 
 460              		.loc 1 404 0 is_stmt 0 discriminator 1
 461 0034 9842     		cmp	r0, r3
 462 0036 F7D8     		bhi	.L42
 408:main.c        ****                 
 463              		.loc 1 408 0 is_stmt 1
 464 0038 002A     		cmp	r2, #0
 465 003a 09D0     		beq	.L43
 410:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 466              		.loc 1 410 0
 467 003c 734B     		ldr	r3, .L52+12
 468              	.LVL33:
 469 003e 5C71     		strb	r4, [r3, #5]
 411:main.c        ****                 ChecksumErrors++;
 470              		.loc 1 411 0
 471 0040 1722     		movs	r2, #23
 472              	.LVL34:
 473 0042 1A71     		strb	r2, [r3, #4]
 412:main.c        ****                 
 474              		.loc 1 412 0
 475 0044 724A     		ldr	r2, .L52+16
 476 0046 1388     		ldrh	r3, [r2]
 477 0048 0133     		adds	r3, r3, #1
 478 004a 9BB2     		uxth	r3, r3
 479 004c 1380     		strh	r3, [r2]
 480 004e 82E0     		b	.L44
 481              	.LVL35:
 482              	.L43:
 418:main.c        ****                 
 483              		.loc 1 418 0
 484 0050 631E     		subs	r3, r4, #1
 485              	.LVL36:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 31


 486 0052 DBB2     		uxtb	r3, r3
 487 0054 022B     		cmp	r3, #2
 488 0056 7ED8     		bhi	.L44
 420:main.c        ****                     
 489              		.loc 1 420 0
 490 0058 022C     		cmp	r4, #2
 491 005a 2DD0     		beq	.L45
 492 005c 032C     		cmp	r4, #3
 493 005e 5ED0     		beq	.L46
 494 0060 012C     		cmp	r4, #1
 495 0062 78D1     		bne	.L44
 426:main.c        ****                            
 496              		.loc 1 426 0
 497 0064 FFF7FEFF 		bl	GetPosition
 498              	.LVL37:
 499 0068 6A4B     		ldr	r3, .L52+20
 500 006a 1860     		str	r0, [r3]
 429:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 501              		.loc 1 429 0
 502 006c 1968     		ldr	r1, [r3]
 503 006e 6A4A     		ldr	r2, .L52+24
 504 0070 1160     		str	r1, [r2]
 430:main.c        ****                             
 505              		.loc 1 430 0
 506 0072 1A68     		ldr	r2, [r3]
 507 0074 694B     		ldr	r3, .L52+28
 508 0076 1A60     		str	r2, [r3]
 433:main.c        ****                             PID_Enabled = false;
 509              		.loc 1 433 0
 510 0078 0023     		movs	r3, #0
 511 007a 694A     		ldr	r2, .L52+32
 512 007c 1370     		strb	r3, [r2]
 434:main.c        ****                                 
 513              		.loc 1 434 0
 514 007e 694A     		ldr	r2, .L52+36
 515 0080 1370     		strb	r3, [r2]
 470:main.c        ****                             pwmMax = 50 + pwmLimit;
 516              		.loc 1 470 0
 517 0082 694B     		ldr	r3, .L52+40
 518 0084 1868     		ldr	r0, [r3]
 519 0086 6421     		movs	r1, #100
 520 0088 FFF7FEFF 		bl	__aeabi_idiv
 521              	.LVL38:
 522 008c 3223     		movs	r3, #50
 523 008e 5843     		muls	r0, r3
 524 0090 664A     		ldr	r2, .L52+44
 525 0092 1060     		str	r0, [r2]
 471:main.c        ****                             pwmMin = 50 - pwmLimit;
 526              		.loc 1 471 0
 527 0094 0100     		movs	r1, r0
 528 0096 3231     		adds	r1, r1, #50
 529 0098 654A     		ldr	r2, .L52+48
 530 009a 1160     		str	r1, [r2]
 472:main.c        ****                         
 531              		.loc 1 472 0
 532 009c 181A     		subs	r0, r3, r0
 533 009e 654B     		ldr	r3, .L52+52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 32


 534 00a0 1860     		str	r0, [r3]
 475:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 535              		.loc 1 475 0
 536 00a2 0222     		movs	r2, #2
 537 00a4 644B     		ldr	r3, .L52+56
 538 00a6 1A70     		strb	r2, [r3]
 476:main.c        ****                         
 539              		.loc 1 476 0
 540 00a8 574B     		ldr	r3, .L52+8
 541 00aa DA78     		ldrb	r2, [r3, #3]
 542 00ac 634B     		ldr	r3, .L52+60
 543 00ae 1A70     		strb	r2, [r3]
 479:main.c        ****                             break;
 544              		.loc 1 479 0
 545 00b0 0020     		movs	r0, #0
 546 00b2 FFF7FEFF 		bl	ClearFault
 547              	.LVL39:
 480:main.c        **** 
 548              		.loc 1 480 0
 549 00b6 4EE0     		b	.L44
 550              	.LVL40:
 551              	.L45:
 484:main.c        ****                             
 552              		.loc 1 484 0
 553 00b8 5348     		ldr	r0, .L52+8
 554              	.LVL41:
 555 00ba C378     		ldrb	r3, [r0, #3]
 556 00bc 5A1E     		subs	r2, r3, #1
 557 00be 9341     		sbcs	r3, r3, r2
 558              	.LVL42:
 559 00c0 584A     		ldr	r2, .L52+36
 560 00c2 1370     		strb	r3, [r2]
 487:main.c        ****                                 
 561              		.loc 1 487 0
 562 00c4 0379     		ldrb	r3, [r0, #4]
 563 00c6 4279     		ldrb	r2, [r0, #5]
 564 00c8 1202     		lsls	r2, r2, #8
 565 00ca 1A43     		orrs	r2, r3
 566 00cc 8379     		ldrb	r3, [r0, #6]
 567 00ce 1B04     		lsls	r3, r3, #16
 568 00d0 1343     		orrs	r3, r2
 569 00d2 1A00     		movs	r2, r3
 570 00d4 C379     		ldrb	r3, [r0, #7]
 571 00d6 1B06     		lsls	r3, r3, #24
 572 00d8 1343     		orrs	r3, r2
 573 00da 4F4A     		ldr	r2, .L52+24
 574 00dc 1268     		ldr	r2, [r2]
 575 00de 9342     		cmp	r3, r2
 576 00e0 17D0     		beq	.L48
 490:main.c        ****                                 
 577              		.loc 1 490 0
 578 00e2 FFF7FEFF 		bl	GetPosition
 579              	.LVL43:
 580 00e6 4B4C     		ldr	r4, .L52+20
 581              	.LVL44:
 582 00e8 2060     		str	r0, [r4]
 493:main.c        ****                                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 33


 583              		.loc 1 493 0
 584 00ea 4748     		ldr	r0, .L52+8
 585 00ec 0379     		ldrb	r3, [r0, #4]
 586 00ee 4279     		ldrb	r2, [r0, #5]
 587 00f0 1202     		lsls	r2, r2, #8
 588 00f2 1A43     		orrs	r2, r3
 589 00f4 8379     		ldrb	r3, [r0, #6]
 590 00f6 1B04     		lsls	r3, r3, #16
 591 00f8 1343     		orrs	r3, r2
 592 00fa 1A00     		movs	r2, r3
 593 00fc C379     		ldrb	r3, [r0, #7]
 594 00fe 1B06     		lsls	r3, r3, #24
 595 0100 1343     		orrs	r3, r2
 596 0102 454A     		ldr	r2, .L52+24
 597 0104 1360     		str	r3, [r2]
 497:main.c        ****                                 
 598              		.loc 1 497 0
 599 0106 2268     		ldr	r2, [r4]
 600 0108 444B     		ldr	r3, .L52+28
 601 010a 1A60     		str	r2, [r3]
 500:main.c        ****                             }                                        
 602              		.loc 1 500 0
 603 010c 0020     		movs	r0, #0
 604 010e FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 605              	.LVL45:
 606              	.L48:
 504:main.c        ****                             break;
 607              		.loc 1 504 0
 608 0112 3D4B     		ldr	r3, .L52+8
 609 0114 0822     		movs	r2, #8
 610 0116 9A56     		ldrsb	r2, [r3, r2]
 611 0118 494B     		ldr	r3, .L52+64
 612 011a 1A70     		strb	r2, [r3]
 505:main.c        ****                         
 613              		.loc 1 505 0
 614 011c 1BE0     		b	.L44
 615              	.LVL46:
 616              	.L46:
 509:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 617              		.loc 1 509 0
 618 011e 3A4C     		ldr	r4, .L52+8
 619              	.LVL47:
 620 0120 2179     		ldrb	r1, [r4, #4]
 621 0122 6379     		ldrb	r3, [r4, #5]
 622 0124 1B02     		lsls	r3, r3, #8
 623 0126 0B43     		orrs	r3, r1
 624 0128 1A00     		movs	r2, r3
 625              	.LVL48:
 626 012a A079     		ldrb	r0, [r4, #6]
 627              	.LVL49:
 628 012c 0004     		lsls	r0, r0, #16
 629 012e 0300     		movs	r3, r0
 630 0130 1343     		orrs	r3, r2
 631 0132 E079     		ldrb	r0, [r4, #7]
 632 0134 0006     		lsls	r0, r0, #24
 633 0136 1843     		orrs	r0, r3
 634 0138 FFF7FEFF 		bl	Counter_1_WriteCounter
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 34


 635              	.LVL50:
 510:main.c        ****                             break;                                        
 636              		.loc 1 510 0
 637 013c 2379     		ldrb	r3, [r4, #4]
 638 013e 6279     		ldrb	r2, [r4, #5]
 639 0140 1202     		lsls	r2, r2, #8
 640 0142 1A43     		orrs	r2, r3
 641 0144 A379     		ldrb	r3, [r4, #6]
 642 0146 1B04     		lsls	r3, r3, #16
 643 0148 1343     		orrs	r3, r2
 644 014a 1A00     		movs	r2, r3
 645 014c E379     		ldrb	r3, [r4, #7]
 646 014e 1B06     		lsls	r3, r3, #24
 647 0150 1343     		orrs	r3, r2
 648 0152 304A     		ldr	r2, .L52+20
 649 0154 1360     		str	r3, [r2]
 650              	.L44:
 521:main.c        ****             
 651              		.loc 1 521 0
 652 0156 FFF7FEFF 		bl	GetPosition
 653              	.LVL51:
 654 015a 3A49     		ldr	r1, .L52+68
 655 015c 0860     		str	r0, [r1]
 524:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 656              		.loc 1 524 0
 657 015e 2B4B     		ldr	r3, .L52+12
 658 0160 0022     		movs	r2, #0
 659 0162 1A70     		strb	r2, [r3]
 525:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 660              		.loc 1 525 0
 661 0164 5A70     		strb	r2, [r3, #1]
 526:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 662              		.loc 1 526 0
 663 0166 0220     		movs	r0, #2
 664 0168 9870     		strb	r0, [r3, #2]
 527:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 665              		.loc 1 527 0
 666 016a DA70     		strb	r2, [r3, #3]
 528:main.c        ****             txMessage.msg.opcode          = opStatus;
 667              		.loc 1 528 0
 668 016c 1732     		adds	r2, r2, #23
 669 016e 1A71     		strb	r2, [r3, #4]
 529:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 670              		.loc 1 529 0
 671 0170 5871     		strb	r0, [r3, #5]
 530:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 672              		.loc 1 530 0
 673 0172 314A     		ldr	r2, .L52+56
 674 0174 1278     		ldrb	r2, [r2]
 675 0176 9A71     		strb	r2, [r3, #6]
 531:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 676              		.loc 1 531 0
 677 0178 334A     		ldr	r2, .L52+72
 678 017a 1278     		ldrb	r2, [r2]
 679 017c DA71     		strb	r2, [r3, #7]
 532:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 680              		.loc 1 532 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 35


 681 017e 244A     		ldr	r2, .L52+16
 682 0180 1288     		ldrh	r2, [r2]
 683 0182 92B2     		uxth	r2, r2
 684 0184 5A72     		strb	r2, [r3, #9]
 685 0186 120A     		lsrs	r2, r2, #8
 686 0188 9A72     		strb	r2, [r3, #10]
 533:main.c        ****             txMessage.msg.position        = Position;
 687              		.loc 1 533 0
 688 018a 2C4A     		ldr	r2, .L52+60
 689 018c 1278     		ldrb	r2, [r2]
 690 018e 1A72     		strb	r2, [r3, #8]
 534:main.c        ****             txMessage.msg.pwm             = Output;
 691              		.loc 1 534 0
 692 0190 0A68     		ldr	r2, [r1]
 693 0192 5A73     		strb	r2, [r3, #13]
 694 0194 100A     		lsrs	r0, r2, #8
 695 0196 9873     		strb	r0, [r3, #14]
 696 0198 100C     		lsrs	r0, r2, #16
 697 019a D873     		strb	r0, [r3, #15]
 698 019c 120E     		lsrs	r2, r2, #24
 699 019e 1A74     		strb	r2, [r3, #16]
 535:main.c        ****             txMessage.msg.iterm           = iterm;
 700              		.loc 1 535 0
 701 01a0 2A4A     		ldr	r2, .L52+76
 702 01a2 1268     		ldr	r2, [r2]
 703 01a4 92B2     		uxth	r2, r2
 704 01a6 5A74     		strb	r2, [r3, #17]
 705 01a8 120A     		lsrs	r2, r2, #8
 706 01aa 9A74     		strb	r2, [r3, #18]
 536:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                            
 707              		.loc 1 536 0
 708 01ac 284A     		ldr	r2, .L52+80
 709 01ae 1078     		ldrb	r0, [r2]
 710 01b0 D874     		strb	r0, [r3, #19]
 711 01b2 5078     		ldrb	r0, [r2, #1]
 712 01b4 1875     		strb	r0, [r3, #20]
 713 01b6 9078     		ldrb	r0, [r2, #2]
 714 01b8 5875     		strb	r0, [r3, #21]
 715 01ba D278     		ldrb	r2, [r2, #3]
 716 01bc 9A75     		strb	r2, [r3, #22]
 537:main.c        ****             
 717              		.loc 1 537 0
 718 01be 254A     		ldr	r2, .L52+84
 719 01c0 1288     		ldrh	r2, [r2]
 720 01c2 DA72     		strb	r2, [r3, #11]
 721 01c4 120A     		lsrs	r2, r2, #8
 722 01c6 1A73     		strb	r2, [r3, #12]
 723              	.LVL52:
 540:main.c        ****                 checksum += txMessage.buf[i]; 
 724              		.loc 1 540 0
 725 01c8 0022     		movs	r2, #0
 726 01ca 0023     		movs	r3, #0
 727 01cc 05E0     		b	.L49
 728              	.LVL53:
 729              	.L50:
 541:main.c        ****                 
 730              		.loc 1 541 0 discriminator 3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 36


 731 01ce 0F49     		ldr	r1, .L52+12
 732 01d0 C95C     		ldrb	r1, [r1, r3]
 733 01d2 5218     		adds	r2, r2, r1
 734              	.LVL54:
 735 01d4 D2B2     		uxtb	r2, r2
 736              	.LVL55:
 540:main.c        ****                 checksum += txMessage.buf[i]; 
 737              		.loc 1 540 0 discriminator 3
 738 01d6 0133     		adds	r3, r3, #1
 739              	.LVL56:
 740 01d8 DBB2     		uxtb	r3, r3
 741              	.LVL57:
 742              	.L49:
 540:main.c        ****                 checksum += txMessage.buf[i]; 
 743              		.loc 1 540 0 is_stmt 0 discriminator 1
 744 01da 162B     		cmp	r3, #22
 745 01dc F7D9     		bls	.L50
 544:main.c        ****                 
 746              		.loc 1 544 0 is_stmt 1
 747 01de 0B48     		ldr	r0, .L52+12
 748 01e0 5242     		rsbs	r2, r2, #0
 749              	.LVL58:
 750 01e2 0270     		strb	r2, [r0]
 548:main.c        **** 
 751              		.loc 1 548 0
 752 01e4 1E21     		movs	r1, #30
 753 01e6 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 754              	.LVL59:
 551:main.c        ****             
 755              		.loc 1 551 0
 756 01ea 0122     		movs	r2, #1
 757 01ec 054B     		ldr	r3, .L52+4
 758 01ee 1A70     		strb	r2, [r3]
 554:main.c        ****                 ClearFault(fsNONE);
 759              		.loc 1 554 0
 760 01f0 054B     		ldr	r3, .L52+8
 761 01f2 5B7A     		ldrb	r3, [r3, #9]
 762 01f4 002B     		cmp	r3, #0
 763 01f6 02D0     		beq	.L37
 555:main.c        ****         
 764              		.loc 1 555 0
 765 01f8 0020     		movs	r0, #0
 766 01fa FFF7FEFF 		bl	ClearFault
 767              	.LVL60:
 768              	.L37:
 565:main.c        ****     
 769              		.loc 1 565 0
 770              		@ sp needed
 771 01fe 10BD     		pop	{r4, pc}
 772              	.L53:
 773              		.align	2
 774              	.L52:
 775 0200 24000740 		.word	1074200612
 776 0204 00000000 		.word	txMessageState
 777 0208 00000000 		.word	rxMessage
 778 020c 00000000 		.word	txMessage
 779 0210 00000000 		.word	ChecksumErrors
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 37


 780 0214 00000000 		.word	LastPosition
 781 0218 00000000 		.word	PID_Setpoint
 782 021c 00000000 		.word	PID_EffectiveSetpoint
 783 0220 00000000 		.word	PID_Was_Enabled
 784 0224 00000000 		.word	PID_Enabled
 785 0228 00000000 		.word	outMax_Total
 786 022c 00000000 		.word	pwmLimit
 787 0230 00000000 		.word	pwmMax
 788 0234 00000000 		.word	pwmMin
 789 0238 00000000 		.word	ConfigState
 790 023c 00000000 		.word	ConfigSequence
 791 0240 00000000 		.word	Jog
 792 0244 00000000 		.word	Position
 793 0248 00000000 		.word	FaultState
 794 024c 00000000 		.word	Output
 795 0250 00000000 		.word	iterm
 796 0254 00000000 		.word	MotorCurrent
 797              		.cfi_endproc
 798              	.LFE35:
 799              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 800              		.section	.text.PID_Initialize,"ax",%progbits
 801              		.align	2
 802              		.global	PID_Initialize
 803              		.code	16
 804              		.thumb_func
 805              		.type	PID_Initialize, %function
 806              	PID_Initialize:
 807              	.LFB38:
 630:main.c        ****     
 808              		.loc 1 630 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812 0000 10B5     		push	{r4, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 4, -8
 815              		.cfi_offset 14, -4
 633:main.c        ****     LastPosition = Position;
 816              		.loc 1 633 0
 817 0002 FFF7FEFF 		bl	GetPosition
 818              	.LVL61:
 819 0006 064B     		ldr	r3, .L55
 820 0008 1860     		str	r0, [r3]
 634:main.c        ****     
 821              		.loc 1 634 0
 822 000a 1A68     		ldr	r2, [r3]
 823 000c 054B     		ldr	r3, .L55+4
 824 000e 1A60     		str	r2, [r3]
 638:main.c        ****     
 825              		.loc 1 638 0
 826 0010 1A68     		ldr	r2, [r3]
 827 0012 054B     		ldr	r3, .L55+8
 828 0014 1A60     		str	r2, [r3]
 642:main.c        **** }    
 829              		.loc 1 642 0
 830 0016 0022     		movs	r2, #0
 831 0018 044B     		ldr	r3, .L55+12
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 38


 832 001a 1A60     		str	r2, [r3]
 643:main.c        **** 
 833              		.loc 1 643 0
 834              		@ sp needed
 835 001c 10BD     		pop	{r4, pc}
 836              	.L56:
 837 001e C046     		.align	2
 838              	.L55:
 839 0020 00000000 		.word	Position
 840 0024 00000000 		.word	LastPosition
 841 0028 00000000 		.word	PID_EffectiveSetpoint
 842 002c 00000000 		.word	iterm
 843              		.cfi_endproc
 844              	.LFE38:
 845              		.size	PID_Initialize, .-PID_Initialize
 846              		.section	.text.PID_SetMode,"ax",%progbits
 847              		.align	2
 848              		.global	PID_SetMode
 849              		.code	16
 850              		.thumb_func
 851              		.type	PID_SetMode, %function
 852              	PID_SetMode:
 853              	.LFB39:
 655:main.c        ****     
 854              		.loc 1 655 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              	.LVL62:
 859 0000 10B5     		push	{r4, lr}
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 4, -8
 862              		.cfi_offset 14, -4
 657:main.c        ****     
 863              		.loc 1 657 0
 864 0002 441E     		subs	r4, r0, #1
 865 0004 6342     		rsbs	r3, r4, #0
 866 0006 5C41     		adcs	r4, r4, r3
 867 0008 E4B2     		uxtb	r4, r4
 868              	.LVL63:
 659:main.c        ****         /*we just went from manual to auto*/
 869              		.loc 1 659 0
 870 000a 0128     		cmp	r0, #1
 871 000c 05D1     		bne	.L58
 659:main.c        ****         /*we just went from manual to auto*/
 872              		.loc 1 659 0 is_stmt 0 discriminator 1
 873 000e 044B     		ldr	r3, .L59
 874 0010 1B7C     		ldrb	r3, [r3, #16]
 875 0012 002B     		cmp	r3, #0
 876 0014 01D1     		bne	.L58
 661:main.c        ****     }
 877              		.loc 1 661 0 is_stmt 1
 878 0016 FFF7FEFF 		bl	PID_Initialize
 879              	.LVL64:
 880              	.L58:
 664:main.c        **** } 
 881              		.loc 1 664 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 39


 882 001a 014B     		ldr	r3, .L59
 883 001c 1C74     		strb	r4, [r3, #16]
 665:main.c        **** 
 884              		.loc 1 665 0
 885              		@ sp needed
 886              	.LVL65:
 887 001e 10BD     		pop	{r4, pc}
 888              	.L60:
 889              		.align	2
 890              	.L59:
 891 0020 00000000 		.word	.LANCHOR1
 892              		.cfi_endproc
 893              	.LFE39:
 894              		.size	PID_SetMode, .-PID_SetMode
 895              		.section	.text.runRateGroup1_PID,"ax",%progbits
 896              		.align	2
 897              		.global	runRateGroup1_PID
 898              		.code	16
 899              		.thumb_func
 900              		.type	runRateGroup1_PID, %function
 901              	runRateGroup1_PID:
 902              	.LFB40:
 700:main.c        ****    
 903              		.loc 1 700 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 10B5     		push	{r4, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 710:main.c        ****         
 911              		.loc 1 710 0
 912 0002 374B     		ldr	r3, .L73
 913 0004 1B68     		ldr	r3, [r3]
 914 0006 0133     		adds	r3, r3, #1
 915 0008 0024     		movs	r4, #0
 916 000a 364A     		ldr	r2, .L73+4
 917 000c 1068     		ldr	r0, [r2]
 918 000e 5168     		ldr	r1, [r2, #4]
 919 0010 0029     		cmp	r1, #0
 920 0012 03D1     		bne	.L72
 921 0014 A142     		cmp	r1, r4
 922 0016 0AD1     		bne	.L62
 923 0018 9842     		cmp	r0, r3
 924 001a 08D9     		bls	.L62
 925              	.L72:
 714:main.c        ****         PID_Enabled = false;
 926              		.loc 1 714 0
 927 001c 0020     		movs	r0, #0
 928 001e FFF7FEFF 		bl	PWM_Set
 929              	.LVL66:
 715:main.c        ****         
 930              		.loc 1 715 0
 931 0022 0023     		movs	r3, #0
 932 0024 304A     		ldr	r2, .L73+8
 933 0026 1370     		strb	r3, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 40


 719:main.c        **** 
 934              		.loc 1 719 0
 935 0028 304A     		ldr	r2, .L73+12
 936 002a 1370     		strb	r3, [r2]
 937 002c 56E0     		b	.L61
 938              	.L62:
 722:main.c        ****         
 939              		.loc 1 722 0
 940 002e 304B     		ldr	r3, .L73+16
 941 0030 1B78     		ldrb	r3, [r3]
 942 0032 022B     		cmp	r3, #2
 943 0034 52D1     		bne	.L61
 726:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 944              		.loc 1 726 0
 945 0036 0620     		movs	r0, #6
 946 0038 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 947              	.LVL67:
 727:main.c        **** 
 948              		.loc 1 727 0
 949 003c 0620     		movs	r0, #6
 950 003e FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 951              	.LVL68:
 730:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 952              		.loc 1 730 0
 953 0042 2C4B     		ldr	r3, .L73+20
 954 0044 1B78     		ldrb	r3, [r3]
 955 0046 002B     		cmp	r3, #0
 956 0048 07D1     		bne	.L65
 730:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 957              		.loc 1 730 0 is_stmt 0 discriminator 1
 958 004a 274A     		ldr	r2, .L73+8
 959 004c 1278     		ldrb	r2, [r2]
 960 004e 002A     		cmp	r2, #0
 961 0050 03D0     		beq	.L65
 731:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 962              		.loc 1 731 0 is_stmt 1
 963 0052 0120     		movs	r0, #1
 964 0054 FFF7FEFF 		bl	PID_SetMode
 965              	.LVL69:
 966 0058 08E0     		b	.L66
 967              	.L65:
 732:main.c        ****             PID_SetMode(PID_MANUAL);                
 968              		.loc 1 732 0
 969 005a 234A     		ldr	r2, .L73+8
 970 005c 1278     		ldrb	r2, [r2]
 971 005e 002A     		cmp	r2, #0
 972 0060 04D1     		bne	.L66
 732:main.c        ****             PID_SetMode(PID_MANUAL);                
 973              		.loc 1 732 0 is_stmt 0 discriminator 1
 974 0062 002B     		cmp	r3, #0
 975 0064 02D0     		beq	.L66
 733:main.c        ****         } else {
 976              		.loc 1 733 0 is_stmt 1
 977 0066 0020     		movs	r0, #0
 978 0068 FFF7FEFF 		bl	PID_SetMode
 979              	.LVL70:
 980              	.L66:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 41


 739:main.c        ****         
 981              		.loc 1 739 0
 982 006c 1E4B     		ldr	r3, .L73+8
 983 006e 1B78     		ldrb	r3, [r3]
 984 0070 204A     		ldr	r2, .L73+20
 985 0072 1370     		strb	r3, [r2]
 754:main.c        ****             
 986              		.loc 1 754 0
 987 0074 002B     		cmp	r3, #0
 988 0076 2ED0     		beq	.L67
 756:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 989              		.loc 1 756 0
 990 0078 1F4B     		ldr	r3, .L73+24
 991 007a 1B78     		ldrb	r3, [r3]
 992 007c 002B     		cmp	r3, #0
 993 007e 04D1     		bne	.L68
 757:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 994              		.loc 1 757 0
 995 0080 1E4B     		ldr	r3, .L73+28
 996 0082 1A68     		ldr	r2, [r3]
 997 0084 1E4B     		ldr	r3, .L73+32
 998 0086 1A60     		str	r2, [r3]
 999 0088 16E0     		b	.L69
 1000              	.L68:
 758:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 1001              		.loc 1 758 0
 1002 008a 1D4A     		ldr	r2, .L73+32
 1003 008c 1168     		ldr	r1, [r2]
 1004 008e 1B4A     		ldr	r2, .L73+28
 1005 0090 1068     		ldr	r0, [r2]
 1006 0092 0A1A     		subs	r2, r1, r0
 1007 0094 D417     		asrs	r4, r2, #31
 1008 0096 1219     		adds	r2, r2, r4
 1009 0098 6240     		eors	r2, r4
 1010 009a 5C00     		lsls	r4, r3, #1
 1011 009c A242     		cmp	r2, r4
 1012 009e 02DC     		bgt	.L70
 759:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1013              		.loc 1 759 0
 1014 00a0 174B     		ldr	r3, .L73+32
 1015 00a2 1860     		str	r0, [r3]
 1016 00a4 08E0     		b	.L69
 1017              	.L70:
 760:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1018              		.loc 1 760 0
 1019 00a6 8142     		cmp	r1, r0
 1020 00a8 03DA     		bge	.L71
 761:main.c        ****             } else {
 1021              		.loc 1 761 0
 1022 00aa CB18     		adds	r3, r1, r3
 1023 00ac 144A     		ldr	r2, .L73+32
 1024 00ae 1360     		str	r3, [r2]
 1025 00b0 02E0     		b	.L69
 1026              	.L71:
 763:main.c        ****             }
 1027              		.loc 1 763 0
 1028 00b2 CB1A     		subs	r3, r1, r3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 42


 1029 00b4 124A     		ldr	r2, .L73+32
 1030 00b6 1360     		str	r3, [r2]
 1031              	.L69:
 767:main.c        ****             
 1032              		.loc 1 767 0
 1033 00b8 FFF7FEFF 		bl	GetPosition
 1034              	.LVL71:
 1035 00bc 114B     		ldr	r3, .L73+36
 1036 00be 1860     		str	r0, [r3]
 770:main.c        ****             
 1037              		.loc 1 770 0
 1038 00c0 1968     		ldr	r1, [r3]
 1039 00c2 0F4B     		ldr	r3, .L73+32
 1040 00c4 1868     		ldr	r0, [r3]
 1041 00c6 FFF7FEFF 		bl	PID_UpdateValues
 1042              	.LVL72:
 1043 00ca 0F4B     		ldr	r3, .L73+40
 1044 00cc 1860     		str	r0, [r3]
 773:main.c        **** 
 1045              		.loc 1 773 0
 1046 00ce 1868     		ldr	r0, [r3]
 1047 00d0 FFF7FEFF 		bl	PWM_Set
 1048              	.LVL73:
 1049 00d4 02E0     		b	.L61
 1050              	.L67:
 777:main.c        ****         }        
 1051              		.loc 1 777 0
 1052 00d6 0022     		movs	r2, #0
 1053 00d8 0B4B     		ldr	r3, .L73+40
 1054 00da 1A60     		str	r2, [r3]
 1055              	.L61:
 780:main.c        **** 
 1056              		.loc 1 780 0
 1057              		@ sp needed
 1058 00dc 10BD     		pop	{r4, pc}
 1059              	.L74:
 1060 00de C046     		.align	2
 1061              	.L73:
 1062 00e0 00000000 		.word	LastMessageTimeSeconds
 1063 00e4 00000000 		.word	.LANCHOR1
 1064 00e8 00000000 		.word	PID_Enabled
 1065 00ec 00000000 		.word	Jog
 1066 00f0 00000000 		.word	ConfigState
 1067 00f4 00000000 		.word	PID_Was_Enabled
 1068 00f8 00000000 		.word	PID_EffSetDelta
 1069 00fc 00000000 		.word	PID_Setpoint
 1070 0100 00000000 		.word	PID_EffectiveSetpoint
 1071 0104 00000000 		.word	Position
 1072 0108 00000000 		.word	Output
 1073              		.cfi_endproc
 1074              	.LFE40:
 1075              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1076              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1077              		.align	2
 1078              		.global	BRMS_Interrupt
 1079              		.code	16
 1080              		.thumb_func
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 43


 1081              		.type	BRMS_Interrupt, %function
 1082              	BRMS_Interrupt:
 1083              	.LFB42:
 980:main.c        ****     
 1084              		.loc 1 980 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088 0000 70B5     		push	{r4, r5, r6, lr}
 1089              		.cfi_def_cfa_offset 16
 1090              		.cfi_offset 4, -16
 1091              		.cfi_offset 5, -12
 1092              		.cfi_offset 6, -8
 1093              		.cfi_offset 14, -4
 991:main.c        **** 
 1094              		.loc 1 991 0
 1095 0002 0220     		movs	r0, #2
 1096 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
 1097              	.LVL74:
 993:main.c        ****     
 1098              		.loc 1 993 0
 1099 0008 0120     		movs	r0, #1
 1100 000a FFF7FEFF 		bl	PROBE_Write
 1101              	.LVL75:
 996:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 1102              		.loc 1 996 0
 1103 000e 2A4B     		ldr	r3, .L84
 1104 0010 9C69     		ldr	r4, [r3, #24]
 1105 0012 DD69     		ldr	r5, [r3, #28]
 1106 0014 C820     		movs	r0, #200
 1107 0016 0021     		movs	r1, #0
 1108 0018 2418     		adds	r4, r4, r0
 1109 001a 4D41     		adcs	r5, r5, r1
 1110 001c 9C61     		str	r4, [r3, #24]
 1111 001e DD61     		str	r5, [r3, #28]
 997:main.c        ****     
 1112              		.loc 1 997 0
 1113 0020 1C6A     		ldr	r4, [r3, #32]
 1114 0022 5D6A     		ldr	r5, [r3, #36]
 1115 0024 0019     		adds	r0, r0, r4
 1116 0026 6941     		adcs	r1, r1, r5
 1117 0028 1862     		str	r0, [r3, #32]
 1118 002a 5962     		str	r1, [r3, #36]
1000:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1119              		.loc 1 1000 0
 1120 002c 196A     		ldr	r1, [r3, #32]
 1121 002e 5A6A     		ldr	r2, [r3, #36]
 1122 0030 002A     		cmp	r2, #0
 1123 0032 04D1     		bne	.L82
 1124 0034 16D1     		bne	.L76
 1125 0036 FA23     		movs	r3, #250
 1126 0038 9B00     		lsls	r3, r3, #2
 1127 003a 9942     		cmp	r1, r3
 1128 003c 12D9     		bls	.L76
 1129              	.L82:
1001:main.c        ****         UptimeMilliseconds += 1;
 1130              		.loc 1 1001 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 44


 1131 003e 1E4B     		ldr	r3, .L84
 1132 0040 0020     		movs	r0, #0
 1133 0042 0021     		movs	r1, #0
 1134 0044 1862     		str	r0, [r3, #32]
 1135 0046 5962     		str	r1, [r3, #36]
1002:main.c        ****         UptimeMillisecondsAccumulator += 1;
 1136              		.loc 1 1002 0
 1137 0048 9C6A     		ldr	r4, [r3, #40]
 1138 004a DD6A     		ldr	r5, [r3, #44]
 1139 004c 0120     		movs	r0, #1
 1140 004e 0021     		movs	r1, #0
 1141 0050 2418     		adds	r4, r4, r0
 1142 0052 4D41     		adcs	r5, r5, r1
 1143 0054 9C62     		str	r4, [r3, #40]
 1144 0056 DD62     		str	r5, [r3, #44]
1003:main.c        ****     }
 1145              		.loc 1 1003 0
 1146 0058 1C6B     		ldr	r4, [r3, #48]
 1147 005a 5D6B     		ldr	r5, [r3, #52]
 1148 005c 0019     		adds	r0, r0, r4
 1149 005e 6941     		adcs	r1, r1, r5
 1150 0060 1863     		str	r0, [r3, #48]
 1151 0062 5963     		str	r1, [r3, #52]
 1152              	.L76:
1007:main.c        ****         UptimeMillisecondsAccumulator = 0;
 1153              		.loc 1 1007 0
 1154 0064 144B     		ldr	r3, .L84
 1155 0066 196B     		ldr	r1, [r3, #48]
 1156 0068 5A6B     		ldr	r2, [r3, #52]
 1157 006a 002A     		cmp	r2, #0
 1158 006c 04D1     		bne	.L83
 1159 006e 10D1     		bne	.L78
 1160 0070 FA23     		movs	r3, #250
 1161 0072 9B00     		lsls	r3, r3, #2
 1162 0074 9942     		cmp	r1, r3
 1163 0076 0CD9     		bls	.L78
 1164              	.L83:
1008:main.c        ****         UptimeSeconds += 1;
 1165              		.loc 1 1008 0
 1166 0078 0F4B     		ldr	r3, .L84
 1167 007a 0020     		movs	r0, #0
 1168 007c 0021     		movs	r1, #0
 1169 007e 1863     		str	r0, [r3, #48]
 1170 0080 5963     		str	r1, [r3, #52]
1009:main.c        ****     }
 1171              		.loc 1 1009 0
 1172 0082 1C68     		ldr	r4, [r3]
 1173 0084 5D68     		ldr	r5, [r3, #4]
 1174 0086 0120     		movs	r0, #1
 1175 0088 0021     		movs	r1, #0
 1176 008a 0019     		adds	r0, r0, r4
 1177 008c 6941     		adcs	r1, r1, r5
 1178 008e 1860     		str	r0, [r3]
 1179 0090 5960     		str	r1, [r3, #4]
 1180              	.L78:
1013:main.c        **** 
 1181              		.loc 1 1013 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 45


 1182 0092 094A     		ldr	r2, .L84
 1183 0094 936B     		ldr	r3, [r2, #56]
 1184 0096 0133     		adds	r3, r3, #1
 1185 0098 9363     		str	r3, [r2, #56]
1033:main.c        ****         
 1186              		.loc 1 1033 0
 1187 009a DA07     		lsls	r2, r3, #31
 1188 009c 02D5     		bpl	.L80
1038:main.c        ****         
 1189              		.loc 1 1038 0
 1190 009e FFF7FEFF 		bl	runRateGroup1_PID
 1191              	.LVL76:
 1192 00a2 05E0     		b	.L81
 1193              	.L80:
1040:main.c        ****         
 1194              		.loc 1 1040 0
 1195 00a4 9A07     		lsls	r2, r3, #30
 1196 00a6 03D4     		bmi	.L81
1045:main.c        ****         
 1197              		.loc 1 1045 0
 1198 00a8 5B07     		lsls	r3, r3, #29
 1199 00aa 01D5     		bpl	.L81
1048:main.c        ****         
 1200              		.loc 1 1048 0
 1201 00ac FFF7FEFF 		bl	runRateGroup3_SPI
 1202              	.LVL77:
 1203              	.L81:
1061:main.c        ****    
 1204              		.loc 1 1061 0
 1205 00b0 0020     		movs	r0, #0
 1206 00b2 FFF7FEFF 		bl	PROBE_Write
 1207              	.LVL78:
1063:main.c        **** 
 1208              		.loc 1 1063 0
 1209              		@ sp needed
 1210 00b6 70BD     		pop	{r4, r5, r6, pc}
 1211              	.L85:
 1212              		.align	2
 1213              	.L84:
 1214 00b8 00000000 		.word	.LANCHOR1
 1215              		.cfi_endproc
 1216              	.LFE42:
 1217              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1218              		.section	.text.main,"ax",%progbits
 1219              		.align	2
 1220              		.global	main
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	main, %function
 1224              	main:
 1225              	.LFB41:
 792:main.c        ****    
 1226              		.loc 1 792 0
 1227              		.cfi_startproc
 1228              		@ Volatile: function does not return.
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 46


 1231 0000 70B5     		push	{r4, r5, r6, lr}
 1232              		.cfi_def_cfa_offset 16
 1233              		.cfi_offset 4, -16
 1234              		.cfi_offset 5, -12
 1235              		.cfi_offset 6, -8
 1236              		.cfi_offset 14, -4
 800:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1237              		.loc 1 800 0
 1238 0002 0120     		movs	r0, #1
 1239 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1240              	.LVL79:
 801:main.c        **** 
 1241              		.loc 1 801 0
 1242 0008 0120     		movs	r0, #1
 1243 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1244              	.LVL80:
 809:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1245              		.loc 1 809 0
 1246 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1247              	.LVL81:
 810:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1248              		.loc 1 810 0
 1249 0012 3948     		ldr	r0, .L91
 1250 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1251              	.LVL82:
 811:main.c        **** 
 1252              		.loc 1 811 0
 1253 0018 0220     		movs	r0, #2
 1254 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1255              	.LVL83:
 814:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1256              		.loc 1 814 0
 1257 001e 3748     		ldr	r0, .L91+4
 1258 0020 FFF7FEFF 		bl	isr_home_StartEx
 1259              	.LVL84:
 815:main.c        **** 
 1260              		.loc 1 815 0
 1261 0024 0320     		movs	r0, #3
 1262 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1263              	.LVL85:
 818:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1264              		.loc 1 818 0
 1265 002a 3548     		ldr	r0, .L91+8
 1266 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1267              	.LVL86:
 819:main.c        ****     
 1268              		.loc 1 819 0
 1269 0030 0320     		movs	r0, #3
 1270 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1271              	.LVL87:
 822:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 1272              		.loc 1 822 0
 1273 0036 3348     		ldr	r0, .L91+12
 1274 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1275              	.LVL88:
 823:main.c        **** 
 1276              		.loc 1 823 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 47


 1277 003c 0320     		movs	r0, #3
 1278 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1279              	.LVL89:
 826:main.c        ****     
 1280              		.loc 1 826 0
 1281              		.syntax divided
 1282              	@ 826 "main.c" 1
 1283 0042 62B6     		CPSIE   i
 1284              	@ 0 "" 2
 855:main.c        ****     
 1285              		.loc 1 855 0
 1286              		.thumb
 1287              		.syntax unified
 1288 0044 FFF7FEFF 		bl	I2C_Start
 1289              	.LVL90:
 860:main.c        ****     SPI_1_Start();
 1290              		.loc 1 860 0
 1291 0048 6420     		movs	r0, #100
 1292 004a FFF7FEFF 		bl	CyDelay
 1293              	.LVL91:
 861:main.c        ****     
 1294              		.loc 1 861 0
 1295 004e FFF7FEFF 		bl	SPI_1_Start
 1296              	.LVL92:
 865:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1297              		.loc 1 865 0
 1298 0052 FFF7FEFF 		bl	PWM_1_Start
 1299              	.LVL93:
 866:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 1300              		.loc 1 866 0
 1301 0056 C820     		movs	r0, #200
 1302 0058 C000     		lsls	r0, r0, #3
 1303 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1304              	.LVL94:
 867:main.c        ****     
 1305              		.loc 1 867 0
 1306 005e 0020     		movs	r0, #0
 1307 0060 FFF7FEFF 		bl	PWM_Set
 1308              	.LVL95:
 870:main.c        ****     
 1309              		.loc 1 870 0
 1310 0064 0024     		movs	r4, #0
 1311 0066 284B     		ldr	r3, .L91+16
 1312 0068 1C70     		strb	r4, [r3]
 873:main.c        ****    
 1313              		.loc 1 873 0
 1314 006a 284B     		ldr	r3, .L91+20
 1315 006c 1C70     		strb	r4, [r3]
 876:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1316              		.loc 1 876 0
 1317 006e FFF7FEFF 		bl	Counter_1_Start
 1318              	.LVL96:
 877:main.c        ****     LastPosition = ENCODER_MAX;
 1319              		.loc 1 877 0
 1320 0072 274D     		ldr	r5, .L91+24
 1321 0074 2800     		movs	r0, r5
 1322 0076 FFF7FEFF 		bl	Counter_1_WriteCounter
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 48


 1323              	.LVL97:
 878:main.c        ****     
 1324              		.loc 1 878 0
 1325 007a 264B     		ldr	r3, .L91+28
 1326 007c 1D60     		str	r5, [r3]
 881:main.c        ****     Index_Counter_1_WriteCounter(0);
 1327              		.loc 1 881 0
 1328 007e FFF7FEFF 		bl	Index_Counter_1_Start
 1329              	.LVL98:
 882:main.c        ****      
 1330              		.loc 1 882 0
 1331 0082 0020     		movs	r0, #0
 1332 0084 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1333              	.LVL99:
 885:main.c        ****     ConfigSequence = 0;
 1334              		.loc 1 885 0
 1335 0088 0122     		movs	r2, #1
 1336 008a 234B     		ldr	r3, .L91+32
 1337 008c 1A70     		strb	r2, [r3]
 886:main.c        ****     ChecksumErrors = 0;
 1338              		.loc 1 886 0
 1339 008e 234B     		ldr	r3, .L91+36
 1340 0090 1C70     		strb	r4, [r3]
 887:main.c        ****     
 1341              		.loc 1 887 0
 1342 0092 234B     		ldr	r3, .L91+40
 1343 0094 1C80     		strh	r4, [r3]
 891:main.c        ****     PID_SetMode(PID_MANUAL);
 1344              		.loc 1 891 0
 1345 0096 FFF7FEFF 		bl	PID_Initialize
 1346              	.LVL100:
 892:main.c        ****     
 1347              		.loc 1 892 0
 1348 009a 0020     		movs	r0, #0
 1349 009c FFF7FEFF 		bl	PID_SetMode
 1350              	.LVL101:
 895:main.c        ****     outMax_ITerm = 100;
 1351              		.loc 1 895 0
 1352 00a0 6423     		movs	r3, #100
 1353 00a2 204A     		ldr	r2, .L91+44
 1354 00a4 1360     		str	r3, [r2]
 896:main.c        **** 
 1355              		.loc 1 896 0
 1356 00a6 204A     		ldr	r2, .L91+48
 1357 00a8 1360     		str	r3, [r2]
 899:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 1358              		.loc 1 899 0
 1359 00aa 3221     		movs	r1, #50
 1360 00ac 1F4A     		ldr	r2, .L91+52
 1361 00ae 1160     		str	r1, [r2]
 900:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 1362              		.loc 1 900 0
 1363 00b0 1F4A     		ldr	r2, .L91+56
 1364 00b2 1360     		str	r3, [r2]
 901:main.c        ****     
 1365              		.loc 1 901 0
 1366 00b4 1F4B     		ldr	r3, .L91+60
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 49


 1367 00b6 1C60     		str	r4, [r3]
 904:main.c        ****     PID_EffectiveSetpoint = 0;
 1368              		.loc 1 904 0
 1369 00b8 1F4B     		ldr	r3, .L91+64
 1370 00ba 1C60     		str	r4, [r3]
 905:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1371              		.loc 1 905 0
 1372 00bc 1F4B     		ldr	r3, .L91+68
 1373 00be 1C60     		str	r4, [r3]
 906:main.c        ****     PID_Was_Enabled       = false;
 1374              		.loc 1 906 0
 1375 00c0 FA22     		movs	r2, #250
 1376 00c2 1F4B     		ldr	r3, .L91+72
 1377 00c4 1A70     		strb	r2, [r3]
 907:main.c        ****     PID_Enabled           = false;
 1378              		.loc 1 907 0
 1379 00c6 1F4B     		ldr	r3, .L91+76
 1380 00c8 0022     		movs	r2, #0
 1381 00ca 1A70     		strb	r2, [r3]
 908:main.c        ****     //PID_SetDrive(0); // Drive set to 0%
 1382              		.loc 1 908 0
 1383 00cc 1E4B     		ldr	r3, .L91+80
 1384 00ce 1A70     		strb	r2, [r3]
 910:main.c        ****   
 1385              		.loc 1 910 0
 1386 00d0 0020     		movs	r0, #0
 1387 00d2 FFF7FEFF 		bl	PWM_Set
 1388              	.LVL102:
 1389              	.L90:
 943:main.c        ****             LED_Write(1);
 1390              		.loc 1 943 0
 1391 00d6 1D4B     		ldr	r3, .L91+84
 1392 00d8 1A68     		ldr	r2, [r3]
 1393 00da 5B68     		ldr	r3, [r3, #4]
 1394 00dc 0123     		movs	r3, #1
 1395 00de 1342     		tst	r3, r2
 1396 00e0 03D0     		beq	.L87
 944:main.c        ****         } else {
 1397              		.loc 1 944 0
 1398 00e2 0120     		movs	r0, #1
 1399 00e4 FFF7FEFF 		bl	LED_Write
 1400              	.LVL103:
 1401 00e8 02E0     		b	.L89
 1402              	.L87:
 946:main.c        ****         } 
 1403              		.loc 1 946 0
 1404 00ea 0020     		movs	r0, #0
 1405 00ec FFF7FEFF 		bl	LED_Write
 1406              	.LVL104:
 1407              	.L89:
 950:main.c        ****         
 1408              		.loc 1 950 0
 1409 00f0 0A20     		movs	r0, #10
 1410 00f2 FFF7FEFF 		bl	CyDelay
 1411              	.LVL105:
 961:main.c        ****       
 1412              		.loc 1 961 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 50


 1413 00f6 EEE7     		b	.L90
 1414              	.L92:
 1415              		.align	2
 1416              	.L91:
 1417 00f8 00000000 		.word	BRMS_Interrupt
 1418 00fc 00000000 		.word	HomeIsrHandler
 1419 0100 00000000 		.word	RSTIsrHandler
 1420 0104 00000000 		.word	SPI_SS_IsrHandler
 1421 0108 00000000 		.word	Jog
 1422 010c 00000000 		.word	.LANCHOR0
 1423 0110 FFFFFF00 		.word	16777215
 1424 0114 00000000 		.word	LastPosition
 1425 0118 00000000 		.word	ConfigState
 1426 011c 00000000 		.word	ConfigSequence
 1427 0120 00000000 		.word	ChecksumErrors
 1428 0124 00000000 		.word	outMax_Total
 1429 0128 00000000 		.word	outMax_ITerm
 1430 012c 00000000 		.word	pwmLimit
 1431 0130 00000000 		.word	pwmMax
 1432 0134 00000000 		.word	pwmMin
 1433 0138 00000000 		.word	PID_Setpoint
 1434 013c 00000000 		.word	PID_EffectiveSetpoint
 1435 0140 00000000 		.word	PID_EffSetDelta
 1436 0144 00000000 		.word	PID_Was_Enabled
 1437 0148 00000000 		.word	PID_Enabled
 1438 014c 00000000 		.word	.LANCHOR1
 1439              		.cfi_endproc
 1440              	.LFE41:
 1441              		.size	main, .-main
 1442              		.comm	txMessageState,1,1
 1443              		.comm	txMessage,30,4
 1444              		.comm	rxMessage,30,4
 1445              		.comm	LastMessageTimeSeconds,4,4
 1446              		.comm	CurrentI2Cinbuf,20,4
 1447              		.comm	MotorCurrent,2,2
 1448              		.comm	ChecksumErrors,2,2
 1449              		.comm	ConfigSequence,1,1
 1450              		.comm	FaultState,1,1
 1451              		.comm	ConfigState,1,1
 1452              		.global	UptimeSeconds
 1453              		.global	UptimeMillisecondsAccumulator
 1454              		.global	UptimeMilliseconds
 1455              		.global	UptimeMicrosecondsAccumulator
 1456              		.global	UptimeMicroseconds
 1457              		.global	homingDone
 1458              		.comm	pwmMin,4,4
 1459              		.comm	pwmMax,4,4
 1460              		.comm	pwmLimit,4,4
 1461              		.comm	outMax_ITerm,4,4
 1462              		.comm	outMax_Total,4,4
 1463              		.global	kd
 1464              		.global	ki
 1465              		.global	kp
 1466              		.comm	Output,4,4
 1467              		.comm	LastPosition,4,4
 1468              		.comm	Position,4,4
 1469              		.global	refSampleTime
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 51


 1470              		.comm	lastTime,4,4
 1471              		.comm	PID_EffSetDelta,1,1
 1472              		.comm	PID_EffectiveSetpoint,4,4
 1473              		.comm	PID_Setpoint,4,4
 1474              		.comm	PID_Was_Enabled,1,1
 1475              		.comm	PID_Enabled,1,1
 1476              		.comm	LastJog,1,1
 1477              		.comm	Jog,1,1
 1478              		.global	inAuto
 1479              		.data
 1480              		.align	2
 1481              		.set	.LANCHOR0,. + 0
 1482              		.type	homingDone, %object
 1483              		.size	homingDone, 1
 1484              	homingDone:
 1485 0000 01       		.byte	1
 1486 0001 000000   		.space	3
 1487              		.type	ki, %object
 1488              		.size	ki, 4
 1489              	ki:
 1490 0004 0A000000 		.word	10
 1491              		.type	kp, %object
 1492              		.size	kp, 4
 1493              	kp:
 1494 0008 14000000 		.word	20
 1495              		.type	refSampleTime, %object
 1496              		.size	refSampleTime, 4
 1497              	refSampleTime:
 1498 000c 05000000 		.word	5
 1499              		.bss
 1500              		.align	3
 1501              		.set	.LANCHOR1,. + 0
 1502              		.type	UptimeSeconds, %object
 1503              		.size	UptimeSeconds, 8
 1504              	UptimeSeconds:
 1505 0000 00000000 		.space	8
 1505      00000000 
 1506              		.type	RawPosition.7275, %object
 1507              		.size	RawPosition.7275, 4
 1508              	RawPosition.7275:
 1509 0008 00000000 		.space	4
 1510              		.type	result.7276, %object
 1511              		.size	result.7276, 4
 1512              	result.7276:
 1513 000c 00000000 		.space	4
 1514              		.type	inAuto, %object
 1515              		.size	inAuto, 1
 1516              	inAuto:
 1517 0010 00       		.space	1
 1518 0011 00000000 		.space	7
 1518      000000
 1519              		.type	UptimeMicroseconds, %object
 1520              		.size	UptimeMicroseconds, 8
 1521              	UptimeMicroseconds:
 1522 0018 00000000 		.space	8
 1522      00000000 
 1523              		.type	UptimeMicrosecondsAccumulator, %object
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 52


 1524              		.size	UptimeMicrosecondsAccumulator, 8
 1525              	UptimeMicrosecondsAccumulator:
 1526 0020 00000000 		.space	8
 1526      00000000 
 1527              		.type	UptimeMilliseconds, %object
 1528              		.size	UptimeMilliseconds, 8
 1529              	UptimeMilliseconds:
 1530 0028 00000000 		.space	8
 1530      00000000 
 1531              		.type	UptimeMillisecondsAccumulator, %object
 1532              		.size	UptimeMillisecondsAccumulator, 8
 1533              	UptimeMillisecondsAccumulator:
 1534 0030 00000000 		.space	8
 1534      00000000 
 1535              		.type	brmsTask.7294, %object
 1536              		.size	brmsTask.7294, 4
 1537              	brmsTask.7294:
 1538 0038 00000000 		.space	4
 1539              		.type	kd, %object
 1540              		.size	kd, 4
 1541              	kd:
 1542 003c 00000000 		.space	4
 1543              		.text
 1544              	.Letext0:
 1545              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1546              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1547              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1548              		.file 5 "pid.h"
 1549              		.file 6 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1550              		.file 7 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1551              		.file 8 "Generated_Source\\PSoC4/Counter_1.h"
 1552              		.file 9 "Generated_Source\\PSoC4/Index_Counter_1.h"
 1553              		.file 10 "Generated_Source\\PSoC4/isr_home.h"
 1554              		.file 11 "Generated_Source\\PSoC4/HOME_IN.h"
 1555              		.file 12 "Generated_Source\\PSoC4/spi_ss.h"
 1556              		.file 13 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1557              		.file 14 "INA219.h"
 1558              		.file 15 "Generated_Source\\PSoC4/PWM_1.h"
 1559              		.file 16 "Generated_Source\\PSoC4/HOME_OUT.h"
 1560              		.file 17 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1561              		.file 18 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1562              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 1563              		.file 20 "Generated_Source\\PSoC4/isr_brms.h"
 1564              		.file 21 "Generated_Source\\PSoC4/isr_spi_ss.h"
 1565              		.file 22 "Generated_Source\\PSoC4/I2C.h"
 1566              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1567              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1568              		.file 25 "Generated_Source\\PSoC4/LED.h"
 1569              		.section	.debug_info,"",%progbits
 1570              	.Ldebug_info0:
 1571 0000 920F0000 		.4byte	0xf92
 1572 0004 0400     		.2byte	0x4
 1573 0006 00000000 		.4byte	.Ldebug_abbrev0
 1574 000a 04       		.byte	0x4
 1575 000b 01       		.uleb128 0x1
 1576 000c 49020000 		.4byte	.LASF176
 1577 0010 0C       		.byte	0xc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 53


 1578 0011 12000000 		.4byte	.LASF177
 1579 0015 59050000 		.4byte	.LASF178
 1580 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1581 001d 00000000 		.4byte	0
 1582 0021 00000000 		.4byte	.Ldebug_line0
 1583 0025 02       		.uleb128 0x2
 1584 0026 0B060000 		.4byte	.LASF0
 1585 002a 02       		.byte	0x2
 1586 002b 1B       		.byte	0x1b
 1587 002c 30000000 		.4byte	0x30
 1588 0030 03       		.uleb128 0x3
 1589 0031 01       		.byte	0x1
 1590 0032 06       		.byte	0x6
 1591 0033 2B090000 		.4byte	.LASF2
 1592 0037 02       		.uleb128 0x2
 1593 0038 CA070000 		.4byte	.LASF1
 1594 003c 02       		.byte	0x2
 1595 003d 1D       		.byte	0x1d
 1596 003e 42000000 		.4byte	0x42
 1597 0042 03       		.uleb128 0x3
 1598 0043 01       		.byte	0x1
 1599 0044 08       		.byte	0x8
 1600 0045 67080000 		.4byte	.LASF3
 1601 0049 02       		.uleb128 0x2
 1602 004a FE040000 		.4byte	.LASF4
 1603 004e 02       		.byte	0x2
 1604 004f 29       		.byte	0x29
 1605 0050 54000000 		.4byte	0x54
 1606 0054 03       		.uleb128 0x3
 1607 0055 02       		.byte	0x2
 1608 0056 05       		.byte	0x5
 1609 0057 A4060000 		.4byte	.LASF5
 1610 005b 02       		.uleb128 0x2
 1611 005c 19020000 		.4byte	.LASF6
 1612 0060 02       		.byte	0x2
 1613 0061 2B       		.byte	0x2b
 1614 0062 66000000 		.4byte	0x66
 1615 0066 03       		.uleb128 0x3
 1616 0067 02       		.byte	0x2
 1617 0068 07       		.byte	0x7
 1618 0069 37090000 		.4byte	.LASF7
 1619 006d 02       		.uleb128 0x2
 1620 006e CE000000 		.4byte	.LASF8
 1621 0072 02       		.byte	0x2
 1622 0073 3F       		.byte	0x3f
 1623 0074 78000000 		.4byte	0x78
 1624 0078 03       		.uleb128 0x3
 1625 0079 04       		.byte	0x4
 1626 007a 05       		.byte	0x5
 1627 007b EE060000 		.4byte	.LASF9
 1628 007f 02       		.uleb128 0x2
 1629 0080 75080000 		.4byte	.LASF10
 1630 0084 02       		.byte	0x2
 1631 0085 41       		.byte	0x41
 1632 0086 8A000000 		.4byte	0x8a
 1633 008a 03       		.uleb128 0x3
 1634 008b 04       		.byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 54


 1635 008c 07       		.byte	0x7
 1636 008d 13080000 		.4byte	.LASF11
 1637 0091 03       		.uleb128 0x3
 1638 0092 08       		.byte	0x8
 1639 0093 05       		.byte	0x5
 1640 0094 BF040000 		.4byte	.LASF12
 1641 0098 02       		.uleb128 0x2
 1642 0099 2E030000 		.4byte	.LASF13
 1643 009d 02       		.byte	0x2
 1644 009e 5B       		.byte	0x5b
 1645 009f A3000000 		.4byte	0xa3
 1646 00a3 03       		.uleb128 0x3
 1647 00a4 08       		.byte	0x8
 1648 00a5 07       		.byte	0x7
 1649 00a6 D5010000 		.4byte	.LASF14
 1650 00aa 04       		.uleb128 0x4
 1651 00ab 04       		.byte	0x4
 1652 00ac 05       		.byte	0x5
 1653 00ad 696E7400 		.ascii	"int\000"
 1654 00b1 03       		.uleb128 0x3
 1655 00b2 04       		.byte	0x4
 1656 00b3 07       		.byte	0x7
 1657 00b4 87000000 		.4byte	.LASF15
 1658 00b8 02       		.uleb128 0x2
 1659 00b9 63010000 		.4byte	.LASF16
 1660 00bd 03       		.byte	0x3
 1661 00be 14       		.byte	0x14
 1662 00bf 25000000 		.4byte	0x25
 1663 00c3 02       		.uleb128 0x2
 1664 00c4 3D040000 		.4byte	.LASF17
 1665 00c8 03       		.byte	0x3
 1666 00c9 18       		.byte	0x18
 1667 00ca 37000000 		.4byte	0x37
 1668 00ce 02       		.uleb128 0x2
 1669 00cf C6010000 		.4byte	.LASF18
 1670 00d3 03       		.byte	0x3
 1671 00d4 20       		.byte	0x20
 1672 00d5 49000000 		.4byte	0x49
 1673 00d9 02       		.uleb128 0x2
 1674 00da 64060000 		.4byte	.LASF19
 1675 00de 03       		.byte	0x3
 1676 00df 24       		.byte	0x24
 1677 00e0 5B000000 		.4byte	0x5b
 1678 00e4 02       		.uleb128 0x2
 1679 00e5 3A080000 		.4byte	.LASF20
 1680 00e9 03       		.byte	0x3
 1681 00ea 2C       		.byte	0x2c
 1682 00eb 6D000000 		.4byte	0x6d
 1683 00ef 02       		.uleb128 0x2
 1684 00f0 5A010000 		.4byte	.LASF21
 1685 00f4 03       		.byte	0x3
 1686 00f5 30       		.byte	0x30
 1687 00f6 7F000000 		.4byte	0x7f
 1688 00fa 02       		.uleb128 0x2
 1689 00fb 71070000 		.4byte	.LASF22
 1690 00ff 03       		.byte	0x3
 1691 0100 3C       		.byte	0x3c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 55


 1692 0101 98000000 		.4byte	0x98
 1693 0105 05       		.uleb128 0x5
 1694 0106 9B050000 		.4byte	.LASF23
 1695 010a 04       		.byte	0x4
 1696 010b FE01     		.2byte	0x1fe
 1697 010d 8A000000 		.4byte	0x8a
 1698 0111 03       		.uleb128 0x3
 1699 0112 04       		.byte	0x4
 1700 0113 04       		.byte	0x4
 1701 0114 9D010000 		.4byte	.LASF24
 1702 0118 03       		.uleb128 0x3
 1703 0119 08       		.byte	0x8
 1704 011a 04       		.byte	0x4
 1705 011b 64090000 		.4byte	.LASF25
 1706 011f 03       		.uleb128 0x3
 1707 0120 01       		.byte	0x1
 1708 0121 08       		.byte	0x8
 1709 0122 E2030000 		.4byte	.LASF26
 1710 0126 05       		.uleb128 0x5
 1711 0127 6D060000 		.4byte	.LASF27
 1712 012b 04       		.byte	0x4
 1713 012c A802     		.2byte	0x2a8
 1714 012e 32010000 		.4byte	0x132
 1715 0132 06       		.uleb128 0x6
 1716 0133 05010000 		.4byte	0x105
 1717 0137 03       		.uleb128 0x3
 1718 0138 08       		.byte	0x8
 1719 0139 04       		.byte	0x4
 1720 013a 4A060000 		.4byte	.LASF28
 1721 013e 03       		.uleb128 0x3
 1722 013f 04       		.byte	0x4
 1723 0140 07       		.byte	0x7
 1724 0141 0A080000 		.4byte	.LASF29
 1725 0145 06       		.uleb128 0x6
 1726 0146 EF000000 		.4byte	0xef
 1727 014a 07       		.uleb128 0x7
 1728 014b 01       		.byte	0x1
 1729 014c 42000000 		.4byte	0x42
 1730 0150 01       		.byte	0x1
 1731 0151 8F       		.byte	0x8f
 1732 0152 6F010000 		.4byte	0x16f
 1733 0156 08       		.uleb128 0x8
 1734 0157 73060000 		.4byte	.LASF30
 1735 015b 00       		.byte	0
 1736 015c 08       		.uleb128 0x8
 1737 015d 74000000 		.4byte	.LASF31
 1738 0161 01       		.byte	0x1
 1739 0162 08       		.uleb128 0x8
 1740 0163 37010000 		.4byte	.LASF32
 1741 0167 02       		.byte	0x2
 1742 0168 08       		.uleb128 0x8
 1743 0169 F7060000 		.4byte	.LASF33
 1744 016d 03       		.byte	0x3
 1745 016e 00       		.byte	0
 1746 016f 02       		.uleb128 0x2
 1747 0170 14060000 		.4byte	.LASF34
 1748 0174 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 56


 1749 0175 94       		.byte	0x94
 1750 0176 4A010000 		.4byte	0x14a
 1751 017a 07       		.uleb128 0x7
 1752 017b 01       		.byte	0x1
 1753 017c 42000000 		.4byte	0x42
 1754 0180 01       		.byte	0x1
 1755 0181 99       		.byte	0x99
 1756 0182 BD010000 		.4byte	0x1bd
 1757 0186 08       		.uleb128 0x8
 1758 0187 84040000 		.4byte	.LASF35
 1759 018b 00       		.byte	0
 1760 018c 08       		.uleb128 0x8
 1761 018d 18030000 		.4byte	.LASF36
 1762 0191 01       		.byte	0x1
 1763 0192 08       		.uleb128 0x8
 1764 0193 6A000000 		.4byte	.LASF37
 1765 0197 02       		.byte	0x2
 1766 0198 08       		.uleb128 0x8
 1767 0199 4C040000 		.4byte	.LASF38
 1768 019d 04       		.byte	0x4
 1769 019e 08       		.uleb128 0x8
 1770 019f 96060000 		.4byte	.LASF39
 1771 01a3 08       		.byte	0x8
 1772 01a4 08       		.uleb128 0x8
 1773 01a5 E7040000 		.4byte	.LASF40
 1774 01a9 10       		.byte	0x10
 1775 01aa 08       		.uleb128 0x8
 1776 01ab A9080000 		.4byte	.LASF41
 1777 01af 20       		.byte	0x20
 1778 01b0 08       		.uleb128 0x8
 1779 01b1 AE080000 		.4byte	.LASF42
 1780 01b5 40       		.byte	0x40
 1781 01b6 08       		.uleb128 0x8
 1782 01b7 B3080000 		.4byte	.LASF43
 1783 01bb 80       		.byte	0x80
 1784 01bc 00       		.byte	0
 1785 01bd 02       		.uleb128 0x2
 1786 01be F3090000 		.4byte	.LASF44
 1787 01c2 01       		.byte	0x1
 1788 01c3 A3       		.byte	0xa3
 1789 01c4 7A010000 		.4byte	0x17a
 1790 01c8 07       		.uleb128 0x7
 1791 01c9 01       		.byte	0x1
 1792 01ca 42000000 		.4byte	0x42
 1793 01ce 01       		.byte	0x1
 1794 01cf BF       		.byte	0xbf
 1795 01d0 F3010000 		.4byte	0x1f3
 1796 01d4 08       		.uleb128 0x8
 1797 01d5 80080000 		.4byte	.LASF45
 1798 01d9 00       		.byte	0
 1799 01da 08       		.uleb128 0x8
 1800 01db 9F090000 		.4byte	.LASF46
 1801 01df 01       		.byte	0x1
 1802 01e0 08       		.uleb128 0x8
 1803 01e1 D4070000 		.4byte	.LASF47
 1804 01e5 02       		.byte	0x2
 1805 01e6 08       		.uleb128 0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 57


 1806 01e7 8C080000 		.4byte	.LASF48
 1807 01eb 03       		.byte	0x3
 1808 01ec 08       		.uleb128 0x8
 1809 01ed F5070000 		.4byte	.LASF49
 1810 01f1 04       		.byte	0x4
 1811 01f2 00       		.byte	0
 1812 01f3 02       		.uleb128 0x2
 1813 01f4 6A010000 		.4byte	.LASF50
 1814 01f8 01       		.byte	0x1
 1815 01f9 C5       		.byte	0xc5
 1816 01fa C8010000 		.4byte	0x1c8
 1817 01fe 09       		.uleb128 0x9
 1818 01ff 03       		.byte	0x3
 1819 0200 01       		.byte	0x1
 1820 0201 CA       		.byte	0xca
 1821 0202 2B020000 		.4byte	0x22b
 1822 0206 0A       		.uleb128 0xa
 1823 0207 B6010000 		.4byte	.LASF51
 1824 020b 01       		.byte	0x1
 1825 020c CB       		.byte	0xcb
 1826 020d C3000000 		.4byte	0xc3
 1827 0211 00       		.byte	0
 1828 0212 0A       		.uleb128 0xa
 1829 0213 54050000 		.4byte	.LASF52
 1830 0217 01       		.byte	0x1
 1831 0218 CC       		.byte	0xcc
 1832 0219 C3000000 		.4byte	0xc3
 1833 021d 01       		.byte	0x1
 1834 021e 0A       		.uleb128 0xa
 1835 021f 36040000 		.4byte	.LASF53
 1836 0223 01       		.byte	0x1
 1837 0224 CD       		.byte	0xcd
 1838 0225 C3000000 		.4byte	0xc3
 1839 0229 02       		.byte	0x2
 1840 022a 00       		.byte	0
 1841 022b 02       		.uleb128 0x2
 1842 022c A9030000 		.4byte	.LASF54
 1843 0230 01       		.byte	0x1
 1844 0231 CE       		.byte	0xce
 1845 0232 FE010000 		.4byte	0x1fe
 1846 0236 09       		.uleb128 0x9
 1847 0237 13       		.byte	0x13
 1848 0238 01       		.byte	0x1
 1849 0239 D1       		.byte	0xd1
 1850 023a B4020000 		.4byte	0x2b4
 1851 023e 0A       		.uleb128 0xa
 1852 023f B6010000 		.4byte	.LASF51
 1853 0243 01       		.byte	0x1
 1854 0244 D2       		.byte	0xd2
 1855 0245 C3000000 		.4byte	0xc3
 1856 0249 00       		.byte	0
 1857 024a 0A       		.uleb128 0xa
 1858 024b 54050000 		.4byte	.LASF52
 1859 024f 01       		.byte	0x1
 1860 0250 D3       		.byte	0xd3
 1861 0251 C3000000 		.4byte	0xc3
 1862 0255 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 58


 1863 0256 0A       		.uleb128 0xa
 1864 0257 36040000 		.4byte	.LASF53
 1865 025b 01       		.byte	0x1
 1866 025c D4       		.byte	0xd4
 1867 025d C3000000 		.4byte	0xc3
 1868 0261 02       		.byte	0x2
 1869 0262 0A       		.uleb128 0xa
 1870 0263 7F060000 		.4byte	.LASF55
 1871 0267 01       		.byte	0x1
 1872 0268 D5       		.byte	0xd5
 1873 0269 C3000000 		.4byte	0xc3
 1874 026d 03       		.byte	0x3
 1875 026e 0B       		.uleb128 0xb
 1876 026f 4B7000   		.ascii	"Kp\000"
 1877 0272 01       		.byte	0x1
 1878 0273 D6       		.byte	0xd6
 1879 0274 EF000000 		.4byte	0xef
 1880 0278 04       		.byte	0x4
 1881 0279 0B       		.uleb128 0xb
 1882 027a 4B6900   		.ascii	"Ki\000"
 1883 027d 01       		.byte	0x1
 1884 027e D7       		.byte	0xd7
 1885 027f EF000000 		.4byte	0xef
 1886 0283 08       		.byte	0x8
 1887 0284 0B       		.uleb128 0xb
 1888 0285 4B6400   		.ascii	"Kd\000"
 1889 0288 01       		.byte	0x1
 1890 0289 D8       		.byte	0xd8
 1891 028a EF000000 		.4byte	0xef
 1892 028e 0C       		.byte	0xc
 1893 028f 0A       		.uleb128 0xa
 1894 0290 02090000 		.4byte	.LASF56
 1895 0294 01       		.byte	0x1
 1896 0295 DA       		.byte	0xda
 1897 0296 C3000000 		.4byte	0xc3
 1898 029a 10       		.byte	0x10
 1899 029b 0A       		.uleb128 0xa
 1900 029c D7020000 		.4byte	.LASF57
 1901 02a0 01       		.byte	0x1
 1902 02a1 DB       		.byte	0xdb
 1903 02a2 C3000000 		.4byte	0xc3
 1904 02a6 11       		.byte	0x11
 1905 02a7 0A       		.uleb128 0xa
 1906 02a8 5E000000 		.4byte	.LASF58
 1907 02ac 01       		.byte	0x1
 1908 02ad DC       		.byte	0xdc
 1909 02ae C3000000 		.4byte	0xc3
 1910 02b2 12       		.byte	0x12
 1911 02b3 00       		.byte	0
 1912 02b4 02       		.uleb128 0x2
 1913 02b5 AE060000 		.4byte	.LASF59
 1914 02b9 01       		.byte	0x1
 1915 02ba DD       		.byte	0xdd
 1916 02bb 36020000 		.4byte	0x236
 1917 02bf 09       		.uleb128 0x9
 1918 02c0 0A       		.byte	0xa
 1919 02c1 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 59


 1920 02c2 E0       		.byte	0xe0
 1921 02c3 1C030000 		.4byte	0x31c
 1922 02c7 0A       		.uleb128 0xa
 1923 02c8 B6010000 		.4byte	.LASF51
 1924 02cc 01       		.byte	0x1
 1925 02cd E1       		.byte	0xe1
 1926 02ce C3000000 		.4byte	0xc3
 1927 02d2 00       		.byte	0
 1928 02d3 0A       		.uleb128 0xa
 1929 02d4 54050000 		.4byte	.LASF52
 1930 02d8 01       		.byte	0x1
 1931 02d9 E2       		.byte	0xe2
 1932 02da C3000000 		.4byte	0xc3
 1933 02de 01       		.byte	0x1
 1934 02df 0A       		.uleb128 0xa
 1935 02e0 36040000 		.4byte	.LASF53
 1936 02e4 01       		.byte	0x1
 1937 02e5 E3       		.byte	0xe3
 1938 02e6 C3000000 		.4byte	0xc3
 1939 02ea 02       		.byte	0x2
 1940 02eb 0A       		.uleb128 0xa
 1941 02ec 24020000 		.4byte	.LASF60
 1942 02f0 01       		.byte	0x1
 1943 02f1 E4       		.byte	0xe4
 1944 02f2 C3000000 		.4byte	0xc3
 1945 02f6 03       		.byte	0x3
 1946 02f7 0A       		.uleb128 0xa
 1947 02f8 7A070000 		.4byte	.LASF61
 1948 02fc 01       		.byte	0x1
 1949 02fd E5       		.byte	0xe5
 1950 02fe E4000000 		.4byte	0xe4
 1951 0302 04       		.byte	0x4
 1952 0303 0B       		.uleb128 0xb
 1953 0304 6A6F6700 		.ascii	"jog\000"
 1954 0308 01       		.byte	0x1
 1955 0309 E6       		.byte	0xe6
 1956 030a B8000000 		.4byte	0xb8
 1957 030e 08       		.byte	0x8
 1958 030f 0A       		.uleb128 0xa
 1959 0310 C2000000 		.4byte	.LASF62
 1960 0314 01       		.byte	0x1
 1961 0315 E7       		.byte	0xe7
 1962 0316 C3000000 		.4byte	0xc3
 1963 031a 09       		.byte	0x9
 1964 031b 00       		.byte	0
 1965 031c 02       		.uleb128 0x2
 1966 031d 7E010000 		.4byte	.LASF63
 1967 0321 01       		.byte	0x1
 1968 0322 E8       		.byte	0xe8
 1969 0323 BF020000 		.4byte	0x2bf
 1970 0327 09       		.uleb128 0x9
 1971 0328 07       		.byte	0x7
 1972 0329 01       		.byte	0x1
 1973 032a EB       		.byte	0xeb
 1974 032b 60030000 		.4byte	0x360
 1975 032f 0A       		.uleb128 0xa
 1976 0330 B6010000 		.4byte	.LASF51
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 60


 1977 0334 01       		.byte	0x1
 1978 0335 EC       		.byte	0xec
 1979 0336 C3000000 		.4byte	0xc3
 1980 033a 00       		.byte	0
 1981 033b 0A       		.uleb128 0xa
 1982 033c 54050000 		.4byte	.LASF52
 1983 0340 01       		.byte	0x1
 1984 0341 ED       		.byte	0xed
 1985 0342 C3000000 		.4byte	0xc3
 1986 0346 01       		.byte	0x1
 1987 0347 0A       		.uleb128 0xa
 1988 0348 36040000 		.4byte	.LASF53
 1989 034c 01       		.byte	0x1
 1990 034d EE       		.byte	0xee
 1991 034e C3000000 		.4byte	0xc3
 1992 0352 02       		.byte	0x2
 1993 0353 0A       		.uleb128 0xa
 1994 0354 7A070000 		.4byte	.LASF61
 1995 0358 01       		.byte	0x1
 1996 0359 EF       		.byte	0xef
 1997 035a E4000000 		.4byte	0xe4
 1998 035e 03       		.byte	0x3
 1999 035f 00       		.byte	0
 2000 0360 02       		.uleb128 0x2
 2001 0361 EF080000 		.4byte	.LASF64
 2002 0365 01       		.byte	0x1
 2003 0366 F0       		.byte	0xf0
 2004 0367 27030000 		.4byte	0x327
 2005 036b 0C       		.uleb128 0xc
 2006 036c 1E       		.byte	0x1e
 2007 036d 01       		.byte	0x1
 2008 036e F4       		.byte	0xf4
 2009 036f AB030000 		.4byte	0x3ab
 2010 0373 0D       		.uleb128 0xd
 2011 0374 62756600 		.ascii	"buf\000"
 2012 0378 01       		.byte	0x1
 2013 0379 F5       		.byte	0xf5
 2014 037a AB030000 		.4byte	0x3ab
 2015 037e 0E       		.uleb128 0xe
 2016 037f FD060000 		.4byte	.LASF65
 2017 0383 01       		.byte	0x1
 2018 0384 F6       		.byte	0xf6
 2019 0385 2B020000 		.4byte	0x22b
 2020 0389 0E       		.uleb128 0xe
 2021 038a 8F060000 		.4byte	.LASF66
 2022 038e 01       		.byte	0x1
 2023 038f F7       		.byte	0xf7
 2024 0390 B4020000 		.4byte	0x2b4
 2025 0394 0E       		.uleb128 0xe
 2026 0395 45040000 		.4byte	.LASF67
 2027 0399 01       		.byte	0x1
 2028 039a F8       		.byte	0xf8
 2029 039b 1C030000 		.4byte	0x31c
 2030 039f 0E       		.uleb128 0xe
 2031 03a0 BF010000 		.4byte	.LASF68
 2032 03a4 01       		.byte	0x1
 2033 03a5 F9       		.byte	0xf9
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 61


 2034 03a6 60030000 		.4byte	0x360
 2035 03aa 00       		.byte	0
 2036 03ab 0F       		.uleb128 0xf
 2037 03ac C3000000 		.4byte	0xc3
 2038 03b0 BB030000 		.4byte	0x3bb
 2039 03b4 10       		.uleb128 0x10
 2040 03b5 3E010000 		.4byte	0x13e
 2041 03b9 1D       		.byte	0x1d
 2042 03ba 00       		.byte	0
 2043 03bb 09       		.uleb128 0x9
 2044 03bc 17       		.byte	0x17
 2045 03bd 01       		.byte	0x1
 2046 03be FD       		.byte	0xfd
 2047 03bf 78040000 		.4byte	0x478
 2048 03c3 0A       		.uleb128 0xa
 2049 03c4 B6010000 		.4byte	.LASF51
 2050 03c8 01       		.byte	0x1
 2051 03c9 FE       		.byte	0xfe
 2052 03ca C3000000 		.4byte	0xc3
 2053 03ce 00       		.byte	0
 2054 03cf 0A       		.uleb128 0xa
 2055 03d0 8E030000 		.4byte	.LASF69
 2056 03d4 01       		.byte	0x1
 2057 03d5 FF       		.byte	0xff
 2058 03d6 C3000000 		.4byte	0xc3
 2059 03da 01       		.byte	0x1
 2060 03db 11       		.uleb128 0x11
 2061 03dc 97030000 		.4byte	.LASF70
 2062 03e0 01       		.byte	0x1
 2063 03e1 0001     		.2byte	0x100
 2064 03e3 C3000000 		.4byte	0xc3
 2065 03e7 02       		.byte	0x2
 2066 03e8 11       		.uleb128 0x11
 2067 03e9 A0030000 		.4byte	.LASF71
 2068 03ed 01       		.byte	0x1
 2069 03ee 0101     		.2byte	0x101
 2070 03f0 C3000000 		.4byte	0xc3
 2071 03f4 03       		.byte	0x3
 2072 03f5 11       		.uleb128 0x11
 2073 03f6 54050000 		.4byte	.LASF52
 2074 03fa 01       		.byte	0x1
 2075 03fb 0201     		.2byte	0x102
 2076 03fd C3000000 		.4byte	0xc3
 2077 0401 04       		.byte	0x4
 2078 0402 11       		.uleb128 0x11
 2079 0403 36040000 		.4byte	.LASF53
 2080 0407 01       		.byte	0x1
 2081 0408 0301     		.2byte	0x103
 2082 040a C3000000 		.4byte	0xc3
 2083 040e 05       		.byte	0x5
 2084 040f 11       		.uleb128 0x11
 2085 0410 55080000 		.4byte	.LASF72
 2086 0414 01       		.byte	0x1
 2087 0415 0401     		.2byte	0x104
 2088 0417 C3000000 		.4byte	0xc3
 2089 041b 06       		.byte	0x6
 2090 041c 11       		.uleb128 0x11
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 62


 2091 041d D6090000 		.4byte	.LASF73
 2092 0421 01       		.byte	0x1
 2093 0422 0501     		.2byte	0x105
 2094 0424 C3000000 		.4byte	0xc3
 2095 0428 07       		.byte	0x7
 2096 0429 11       		.uleb128 0x11
 2097 042a 7F060000 		.4byte	.LASF55
 2098 042e 01       		.byte	0x1
 2099 042f 0601     		.2byte	0x106
 2100 0431 C3000000 		.4byte	0xc3
 2101 0435 08       		.byte	0x8
 2102 0436 11       		.uleb128 0x11
 2103 0437 44050000 		.4byte	.LASF74
 2104 043b 01       		.byte	0x1
 2105 043c 0701     		.2byte	0x107
 2106 043e D9000000 		.4byte	0xd9
 2107 0442 09       		.byte	0x9
 2108 0443 11       		.uleb128 0x11
 2109 0444 19000000 		.4byte	.LASF75
 2110 0448 01       		.byte	0x1
 2111 0449 0801     		.2byte	0x108
 2112 044b CE000000 		.4byte	0xce
 2113 044f 0B       		.byte	0xb
 2114 0450 11       		.uleb128 0x11
 2115 0451 EA090000 		.4byte	.LASF76
 2116 0455 01       		.byte	0x1
 2117 0456 0901     		.2byte	0x109
 2118 0458 E4000000 		.4byte	0xe4
 2119 045c 0D       		.byte	0xd
 2120 045d 12       		.uleb128 0x12
 2121 045e 70776D00 		.ascii	"pwm\000"
 2122 0462 01       		.byte	0x1
 2123 0463 0A01     		.2byte	0x10a
 2124 0465 CE000000 		.4byte	0xce
 2125 0469 11       		.byte	0x11
 2126 046a 11       		.uleb128 0x11
 2127 046b 5E090000 		.4byte	.LASF77
 2128 046f 01       		.byte	0x1
 2129 0470 0B01     		.2byte	0x10b
 2130 0472 E4000000 		.4byte	0xe4
 2131 0476 13       		.byte	0x13
 2132 0477 00       		.byte	0
 2133 0478 05       		.uleb128 0x5
 2134 0479 65070000 		.4byte	.LASF78
 2135 047d 01       		.byte	0x1
 2136 047e 0C01     		.2byte	0x10c
 2137 0480 BB030000 		.4byte	0x3bb
 2138 0484 13       		.uleb128 0x13
 2139 0485 1E       		.byte	0x1e
 2140 0486 01       		.byte	0x1
 2141 0487 0F01     		.2byte	0x10f
 2142 0489 A6040000 		.4byte	0x4a6
 2143 048d 14       		.uleb128 0x14
 2144 048e 62756600 		.ascii	"buf\000"
 2145 0492 01       		.byte	0x1
 2146 0493 1001     		.2byte	0x110
 2147 0495 AB030000 		.4byte	0x3ab
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 63


 2148 0499 14       		.uleb128 0x14
 2149 049a 6D736700 		.ascii	"msg\000"
 2150 049e 01       		.byte	0x1
 2151 049f 1101     		.2byte	0x111
 2152 04a1 78040000 		.4byte	0x478
 2153 04a5 00       		.byte	0
 2154 04a6 15       		.uleb128 0x15
 2155 04a7 01       		.byte	0x1
 2156 04a8 42000000 		.4byte	0x42
 2157 04ac 01       		.byte	0x1
 2158 04ad 1501     		.2byte	0x115
 2159 04af C0040000 		.4byte	0x4c0
 2160 04b3 08       		.uleb128 0x8
 2161 04b4 33000000 		.4byte	.LASF79
 2162 04b8 00       		.byte	0
 2163 04b9 08       		.uleb128 0x8
 2164 04ba A2050000 		.4byte	.LASF80
 2165 04be 01       		.byte	0x1
 2166 04bf 00       		.byte	0
 2167 04c0 05       		.uleb128 0x5
 2168 04c1 08010000 		.4byte	.LASF81
 2169 04c5 01       		.byte	0x1
 2170 04c6 1801     		.2byte	0x118
 2171 04c8 A6040000 		.4byte	0x4a6
 2172 04cc 16       		.uleb128 0x16
 2173 04cd DC090000 		.4byte	.LASF82
 2174 04d1 01       		.byte	0x1
 2175 04d2 3504     		.2byte	0x435
 2176 04d4 00000000 		.4byte	.LFB43
 2177 04d8 24000000 		.4byte	.LFE43-.LFB43
 2178 04dc 01       		.uleb128 0x1
 2179 04dd 9C       		.byte	0x9c
 2180 04de 17050000 		.4byte	0x517
 2181 04e2 17       		.uleb128 0x17
 2182 04e3 06000000 		.4byte	.LVL0
 2183 04e7 EC0D0000 		.4byte	0xdec
 2184 04eb 17       		.uleb128 0x17
 2185 04ec 0A000000 		.4byte	.LVL1
 2186 04f0 F70D0000 		.4byte	0xdf7
 2187 04f4 18       		.uleb128 0x18
 2188 04f5 10000000 		.4byte	.LVL2
 2189 04f9 020E0000 		.4byte	0xe02
 2190 04fd 07050000 		.4byte	0x507
 2191 0501 19       		.uleb128 0x19
 2192 0502 01       		.uleb128 0x1
 2193 0503 50       		.byte	0x50
 2194 0504 01       		.uleb128 0x1
 2195 0505 30       		.byte	0x30
 2196 0506 00       		.byte	0
 2197 0507 1A       		.uleb128 0x1a
 2198 0508 16000000 		.4byte	.LVL3
 2199 050c 0D0E0000 		.4byte	0xe0d
 2200 0510 19       		.uleb128 0x19
 2201 0511 01       		.uleb128 0x1
 2202 0512 50       		.byte	0x50
 2203 0513 01       		.uleb128 0x1
 2204 0514 30       		.byte	0x30
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 64


 2205 0515 00       		.byte	0
 2206 0516 00       		.byte	0
 2207 0517 16       		.uleb128 0x16
 2208 0518 F9000000 		.4byte	.LASF83
 2209 051c 01       		.byte	0x1
 2210 051d 5304     		.2byte	0x453
 2211 051f 00000000 		.4byte	.LFB44
 2212 0523 1C000000 		.4byte	.LFE44-.LFB44
 2213 0527 01       		.uleb128 0x1
 2214 0528 9C       		.byte	0x9c
 2215 0529 4F050000 		.4byte	0x54f
 2216 052d 17       		.uleb128 0x17
 2217 052e 06000000 		.4byte	.LVL4
 2218 0532 180E0000 		.4byte	0xe18
 2219 0536 17       		.uleb128 0x17
 2220 0537 0A000000 		.4byte	.LVL5
 2221 053b 230E0000 		.4byte	0xe23
 2222 053f 1A       		.uleb128 0x1a
 2223 0540 10000000 		.4byte	.LVL6
 2224 0544 020E0000 		.4byte	0xe02
 2225 0548 19       		.uleb128 0x19
 2226 0549 01       		.uleb128 0x1
 2227 054a 50       		.byte	0x50
 2228 054b 01       		.uleb128 0x1
 2229 054c 30       		.byte	0x30
 2230 054d 00       		.byte	0
 2231 054e 00       		.byte	0
 2232 054f 16       		.uleb128 0x16
 2233 0550 F9050000 		.4byte	.LASF84
 2234 0554 01       		.byte	0x1
 2235 0555 6D04     		.2byte	0x46d
 2236 0557 00000000 		.4byte	.LFB45
 2237 055b 60000000 		.4byte	.LFE45-.LFB45
 2238 055f 01       		.uleb128 0x1
 2239 0560 9C       		.byte	0x9c
 2240 0561 C2050000 		.4byte	0x5c2
 2241 0565 1B       		.uleb128 0x1b
 2242 0566 6900     		.ascii	"i\000"
 2243 0568 01       		.byte	0x1
 2244 0569 6F04     		.2byte	0x46f
 2245 056b EF000000 		.4byte	0xef
 2246 056f 00000000 		.4byte	.LLST0
 2247 0573 17       		.uleb128 0x17
 2248 0574 06000000 		.4byte	.LVL7
 2249 0578 2E0E0000 		.4byte	0xe2e
 2250 057c 17       		.uleb128 0x17
 2251 057d 0A000000 		.4byte	.LVL8
 2252 0581 390E0000 		.4byte	0xe39
 2253 0585 18       		.uleb128 0x18
 2254 0586 2A000000 		.4byte	.LVL9
 2255 058a 440E0000 		.4byte	0xe44
 2256 058e A6050000 		.4byte	0x5a6
 2257 0592 19       		.uleb128 0x19
 2258 0593 01       		.uleb128 0x1
 2259 0594 50       		.byte	0x50
 2260 0595 05       		.uleb128 0x5
 2261 0596 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 65


 2262 0597 00000000 		.4byte	txMessage
 2263 059b 19       		.uleb128 0x19
 2264 059c 01       		.uleb128 0x1
 2265 059d 51       		.byte	0x51
 2266 059e 01       		.uleb128 0x1
 2267 059f 30       		.byte	0x30
 2268 05a0 19       		.uleb128 0x19
 2269 05a1 01       		.uleb128 0x1
 2270 05a2 52       		.byte	0x52
 2271 05a3 01       		.uleb128 0x1
 2272 05a4 4E       		.byte	0x4e
 2273 05a5 00       		.byte	0
 2274 05a6 17       		.uleb128 0x17
 2275 05a7 32000000 		.4byte	.LVL11
 2276 05ab 4D0E0000 		.4byte	0xe4d
 2277 05af 17       		.uleb128 0x17
 2278 05b0 40000000 		.4byte	.LVL13
 2279 05b4 590E0000 		.4byte	0xe59
 2280 05b8 17       		.uleb128 0x17
 2281 05b9 44000000 		.4byte	.LVL14
 2282 05bd 650E0000 		.4byte	0xe65
 2283 05c1 00       		.byte	0
 2284 05c2 16       		.uleb128 0x16
 2285 05c3 91010000 		.4byte	.LASF85
 2286 05c7 01       		.byte	0x1
 2287 05c8 2F01     		.2byte	0x12f
 2288 05ca 00000000 		.4byte	.LFB32
 2289 05ce 1C000000 		.4byte	.LFE32-.LFB32
 2290 05d2 01       		.uleb128 0x1
 2291 05d3 9C       		.byte	0x9c
 2292 05d4 E9050000 		.4byte	0x5e9
 2293 05d8 1C       		.uleb128 0x1c
 2294 05d9 D6090000 		.4byte	.LASF73
 2295 05dd 01       		.byte	0x1
 2296 05de 2F01     		.2byte	0x12f
 2297 05e0 BD010000 		.4byte	0x1bd
 2298 05e4 1F000000 		.4byte	.LLST1
 2299 05e8 00       		.byte	0
 2300 05e9 16       		.uleb128 0x16
 2301 05ea 1A010000 		.4byte	.LASF86
 2302 05ee 01       		.byte	0x1
 2303 05ef 4A01     		.2byte	0x14a
 2304 05f1 00000000 		.4byte	.LFB33
 2305 05f5 1C000000 		.4byte	.LFE33-.LFB33
 2306 05f9 01       		.uleb128 0x1
 2307 05fa 9C       		.byte	0x9c
 2308 05fb 0E060000 		.4byte	0x60e
 2309 05ff 1D       		.uleb128 0x1d
 2310 0600 D6090000 		.4byte	.LASF73
 2311 0604 01       		.byte	0x1
 2312 0605 4A01     		.2byte	0x14a
 2313 0607 BD010000 		.4byte	0x1bd
 2314 060b 01       		.uleb128 0x1
 2315 060c 50       		.byte	0x50
 2316 060d 00       		.byte	0
 2317 060e 1E       		.uleb128 0x1e
 2318 060f 44000000 		.4byte	.LASF87
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 66


 2319 0613 01       		.byte	0x1
 2320 0614 6401     		.2byte	0x164
 2321 0616 00000000 		.4byte	.LFB34
 2322 061a 18000000 		.4byte	.LFE34-.LFB34
 2323 061e 01       		.uleb128 0x1
 2324 061f 9C       		.byte	0x9c
 2325 0620 43060000 		.4byte	0x643
 2326 0624 1B       		.uleb128 0x1b
 2327 0625 6300     		.ascii	"c\000"
 2328 0627 01       		.byte	0x1
 2329 0628 6701     		.2byte	0x167
 2330 062a 11010000 		.4byte	0x111
 2331 062e 40000000 		.4byte	.LLST2
 2332 0632 1A       		.uleb128 0x1a
 2333 0633 08000000 		.4byte	.LVL19
 2334 0637 710E0000 		.4byte	0xe71
 2335 063b 19       		.uleb128 0x19
 2336 063c 01       		.uleb128 0x1
 2337 063d 50       		.byte	0x50
 2338 063e 02       		.uleb128 0x2
 2339 063f 08       		.byte	0x8
 2340 0640 40       		.byte	0x40
 2341 0641 00       		.byte	0
 2342 0642 00       		.byte	0
 2343 0643 16       		.uleb128 0x16
 2344 0644 04040000 		.4byte	.LASF88
 2345 0648 01       		.byte	0x1
 2346 0649 4202     		.2byte	0x242
 2347 064b 00000000 		.4byte	.LFB36
 2348 064f 0E000000 		.4byte	.LFE36-.LFB36
 2349 0653 01       		.uleb128 0x1
 2350 0654 9C       		.byte	0x9c
 2351 0655 7F060000 		.4byte	0x67f
 2352 0659 1C       		.uleb128 0x1c
 2353 065a 3D000000 		.4byte	.LASF89
 2354 065e 01       		.byte	0x1
 2355 065f 4202     		.2byte	0x242
 2356 0661 E4000000 		.4byte	0xe4
 2357 0665 53000000 		.4byte	.LLST3
 2358 0669 1A       		.uleb128 0x1a
 2359 066a 0C000000 		.4byte	.LVL23
 2360 066e 7C0E0000 		.4byte	0xe7c
 2361 0672 19       		.uleb128 0x19
 2362 0673 01       		.uleb128 0x1
 2363 0674 50       		.byte	0x50
 2364 0675 07       		.uleb128 0x7
 2365 0676 0A       		.byte	0xa
 2366 0677 2003     		.2byte	0x320
 2367 0679 F3       		.byte	0xf3
 2368 067a 01       		.uleb128 0x1
 2369 067b 50       		.byte	0x50
 2370 067c 1C       		.byte	0x1c
 2371 067d 00       		.byte	0
 2372 067e 00       		.byte	0
 2373 067f 1F       		.uleb128 0x1f
 2374 0680 8F070000 		.4byte	.LASF179
 2375 0684 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 67


 2376 0685 5302     		.2byte	0x253
 2377 0687 E4000000 		.4byte	0xe4
 2378 068b 00000000 		.4byte	.LFB37
 2379 068f 44000000 		.4byte	.LFE37-.LFB37
 2380 0693 01       		.uleb128 0x1
 2381 0694 9C       		.byte	0x9c
 2382 0695 C7060000 		.4byte	0x6c7
 2383 0699 20       		.uleb128 0x20
 2384 069a 36070000 		.4byte	.LASF90
 2385 069e 01       		.byte	0x1
 2386 069f 5502     		.2byte	0x255
 2387 06a1 45010000 		.4byte	0x145
 2388 06a5 05       		.uleb128 0x5
 2389 06a6 03       		.byte	0x3
 2390 06a7 08000000 		.4byte	RawPosition.7275
 2391 06ab 20       		.uleb128 0x20
 2392 06ac CE010000 		.4byte	.LASF91
 2393 06b0 01       		.byte	0x1
 2394 06b1 5602     		.2byte	0x256
 2395 06b3 C7060000 		.4byte	0x6c7
 2396 06b7 05       		.uleb128 0x5
 2397 06b8 03       		.byte	0x3
 2398 06b9 0C000000 		.4byte	result.7276
 2399 06bd 17       		.uleb128 0x17
 2400 06be 06000000 		.4byte	.LVL24
 2401 06c2 880E0000 		.4byte	0xe88
 2402 06c6 00       		.byte	0
 2403 06c7 06       		.uleb128 0x6
 2404 06c8 E4000000 		.4byte	0xe4
 2405 06cc 1E       		.uleb128 0x1e
 2406 06cd 23060000 		.4byte	.LASF92
 2407 06d1 01       		.byte	0x1
 2408 06d2 7901     		.2byte	0x179
 2409 06d4 00000000 		.4byte	.LFB35
 2410 06d8 58020000 		.4byte	.LFE35-.LFB35
 2411 06dc 01       		.uleb128 0x1
 2412 06dd 9C       		.byte	0x9c
 2413 06de 96070000 		.4byte	0x796
 2414 06e2 21       		.uleb128 0x21
 2415 06e3 36040000 		.4byte	.LASF53
 2416 06e7 01       		.byte	0x1
 2417 06e8 7B01     		.2byte	0x17b
 2418 06ea F3010000 		.4byte	0x1f3
 2419 06ee 74000000 		.4byte	.LLST4
 2420 06f2 21       		.uleb128 0x21
 2421 06f3 54050000 		.4byte	.LASF52
 2422 06f7 01       		.byte	0x1
 2423 06f8 7C01     		.2byte	0x17c
 2424 06fa C3000000 		.4byte	0xc3
 2425 06fe 9E000000 		.4byte	.LLST5
 2426 0702 1B       		.uleb128 0x1b
 2427 0703 6900     		.ascii	"i\000"
 2428 0705 01       		.byte	0x1
 2429 0706 7D01     		.2byte	0x17d
 2430 0708 C3000000 		.4byte	0xc3
 2431 070c C7000000 		.4byte	.LLST6
 2432 0710 21       		.uleb128 0x21
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 68


 2433 0711 B6010000 		.4byte	.LASF51
 2434 0715 01       		.byte	0x1
 2435 0716 7E01     		.2byte	0x17e
 2436 0718 C3000000 		.4byte	0xc3
 2437 071c 1E010000 		.4byte	.LLST7
 2438 0720 17       		.uleb128 0x17
 2439 0721 68000000 		.4byte	.LVL37
 2440 0725 7F060000 		.4byte	0x67f
 2441 0729 18       		.uleb128 0x18
 2442 072a B6000000 		.4byte	.LVL39
 2443 072e E9050000 		.4byte	0x5e9
 2444 0732 3C070000 		.4byte	0x73c
 2445 0736 19       		.uleb128 0x19
 2446 0737 01       		.uleb128 0x1
 2447 0738 50       		.byte	0x50
 2448 0739 01       		.uleb128 0x1
 2449 073a 30       		.byte	0x30
 2450 073b 00       		.byte	0
 2451 073c 17       		.uleb128 0x17
 2452 073d E6000000 		.4byte	.LVL43
 2453 0741 7F060000 		.4byte	0x67f
 2454 0745 18       		.uleb128 0x18
 2455 0746 12010000 		.4byte	.LVL45
 2456 074a 0D0E0000 		.4byte	0xe0d
 2457 074e 58070000 		.4byte	0x758
 2458 0752 19       		.uleb128 0x19
 2459 0753 01       		.uleb128 0x1
 2460 0754 50       		.byte	0x50
 2461 0755 01       		.uleb128 0x1
 2462 0756 30       		.byte	0x30
 2463 0757 00       		.byte	0
 2464 0758 17       		.uleb128 0x17
 2465 0759 3C010000 		.4byte	.LVL50
 2466 075d 020E0000 		.4byte	0xe02
 2467 0761 17       		.uleb128 0x17
 2468 0762 5A010000 		.4byte	.LVL51
 2469 0766 7F060000 		.4byte	0x67f
 2470 076a 18       		.uleb128 0x18
 2471 076b EA010000 		.4byte	.LVL59
 2472 076f 930E0000 		.4byte	0xe93
 2473 0773 86070000 		.4byte	0x786
 2474 0777 19       		.uleb128 0x19
 2475 0778 01       		.uleb128 0x1
 2476 0779 50       		.byte	0x50
 2477 077a 05       		.uleb128 0x5
 2478 077b 03       		.byte	0x3
 2479 077c 00000000 		.4byte	txMessage
 2480 0780 19       		.uleb128 0x19
 2481 0781 01       		.uleb128 0x1
 2482 0782 51       		.byte	0x51
 2483 0783 01       		.uleb128 0x1
 2484 0784 4E       		.byte	0x4e
 2485 0785 00       		.byte	0
 2486 0786 1A       		.uleb128 0x1a
 2487 0787 FE010000 		.4byte	.LVL60
 2488 078b E9050000 		.4byte	0x5e9
 2489 078f 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 69


 2490 0790 01       		.uleb128 0x1
 2491 0791 50       		.byte	0x50
 2492 0792 01       		.uleb128 0x1
 2493 0793 30       		.byte	0x30
 2494 0794 00       		.byte	0
 2495 0795 00       		.byte	0
 2496 0796 16       		.uleb128 0x16
 2497 0797 4A090000 		.4byte	.LASF93
 2498 079b 01       		.byte	0x1
 2499 079c 7602     		.2byte	0x276
 2500 079e 00000000 		.4byte	.LFB38
 2501 07a2 30000000 		.4byte	.LFE38-.LFB38
 2502 07a6 01       		.uleb128 0x1
 2503 07a7 9C       		.byte	0x9c
 2504 07a8 B6070000 		.4byte	0x7b6
 2505 07ac 17       		.uleb128 0x17
 2506 07ad 06000000 		.4byte	.LVL61
 2507 07b1 7F060000 		.4byte	0x67f
 2508 07b5 00       		.byte	0
 2509 07b6 16       		.uleb128 0x16
 2510 07b7 F8030000 		.4byte	.LASF94
 2511 07bb 01       		.byte	0x1
 2512 07bc 8F02     		.2byte	0x28f
 2513 07be 00000000 		.4byte	.LFB39
 2514 07c2 24000000 		.4byte	.LFE39-.LFB39
 2515 07c6 01       		.uleb128 0x1
 2516 07c7 9C       		.byte	0x9c
 2517 07c8 F6070000 		.4byte	0x7f6
 2518 07cc 1C       		.uleb128 0x1c
 2519 07cd DD060000 		.4byte	.LASF95
 2520 07d1 01       		.byte	0x1
 2521 07d2 8F02     		.2byte	0x28f
 2522 07d4 EF000000 		.4byte	0xef
 2523 07d8 8B010000 		.4byte	.LLST8
 2524 07dc 21       		.uleb128 0x21
 2525 07dd 7F000000 		.4byte	.LASF96
 2526 07e1 01       		.byte	0x1
 2527 07e2 9102     		.2byte	0x291
 2528 07e4 F6070000 		.4byte	0x7f6
 2529 07e8 AC010000 		.4byte	.LLST9
 2530 07ec 17       		.uleb128 0x17
 2531 07ed 1A000000 		.4byte	.LVL64
 2532 07f1 96070000 		.4byte	0x796
 2533 07f5 00       		.byte	0
 2534 07f6 03       		.uleb128 0x3
 2535 07f7 01       		.byte	0x1
 2536 07f8 02       		.byte	0x2
 2537 07f9 12030000 		.4byte	.LASF97
 2538 07fd 16       		.uleb128 0x16
 2539 07fe B0000000 		.4byte	.LASF98
 2540 0802 01       		.byte	0x1
 2541 0803 BC02     		.2byte	0x2bc
 2542 0805 00000000 		.4byte	.LFB40
 2543 0809 0C010000 		.4byte	.LFE40-.LFB40
 2544 080d 01       		.uleb128 0x1
 2545 080e 9C       		.byte	0x9c
 2546 080f 90080000 		.4byte	0x890
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 70


 2547 0813 18       		.uleb128 0x18
 2548 0814 22000000 		.4byte	.LVL66
 2549 0818 43060000 		.4byte	0x643
 2550 081c 27080000 		.4byte	0x827
 2551 0820 19       		.uleb128 0x19
 2552 0821 01       		.uleb128 0x1
 2553 0822 50       		.byte	0x50
 2554 0823 02       		.uleb128 0x2
 2555 0824 74       		.byte	0x74
 2556 0825 00       		.sleb128 0
 2557 0826 00       		.byte	0
 2558 0827 18       		.uleb128 0x18
 2559 0828 3C000000 		.4byte	.LVL67
 2560 082c 9F0E0000 		.4byte	0xe9f
 2561 0830 3A080000 		.4byte	0x83a
 2562 0834 19       		.uleb128 0x19
 2563 0835 01       		.uleb128 0x1
 2564 0836 50       		.byte	0x50
 2565 0837 01       		.uleb128 0x1
 2566 0838 36       		.byte	0x36
 2567 0839 00       		.byte	0
 2568 083a 18       		.uleb128 0x18
 2569 083b 42000000 		.4byte	.LVL68
 2570 083f AA0E0000 		.4byte	0xeaa
 2571 0843 4D080000 		.4byte	0x84d
 2572 0847 19       		.uleb128 0x19
 2573 0848 01       		.uleb128 0x1
 2574 0849 50       		.byte	0x50
 2575 084a 01       		.uleb128 0x1
 2576 084b 36       		.byte	0x36
 2577 084c 00       		.byte	0
 2578 084d 18       		.uleb128 0x18
 2579 084e 58000000 		.4byte	.LVL69
 2580 0852 B6070000 		.4byte	0x7b6
 2581 0856 60080000 		.4byte	0x860
 2582 085a 19       		.uleb128 0x19
 2583 085b 01       		.uleb128 0x1
 2584 085c 50       		.byte	0x50
 2585 085d 01       		.uleb128 0x1
 2586 085e 31       		.byte	0x31
 2587 085f 00       		.byte	0
 2588 0860 18       		.uleb128 0x18
 2589 0861 6C000000 		.4byte	.LVL70
 2590 0865 B6070000 		.4byte	0x7b6
 2591 0869 74080000 		.4byte	0x874
 2592 086d 19       		.uleb128 0x19
 2593 086e 01       		.uleb128 0x1
 2594 086f 50       		.byte	0x50
 2595 0870 02       		.uleb128 0x2
 2596 0871 74       		.byte	0x74
 2597 0872 00       		.sleb128 0
 2598 0873 00       		.byte	0
 2599 0874 17       		.uleb128 0x17
 2600 0875 BC000000 		.4byte	.LVL71
 2601 0879 7F060000 		.4byte	0x67f
 2602 087d 17       		.uleb128 0x17
 2603 087e CA000000 		.4byte	.LVL72
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 71


 2604 0882 B50E0000 		.4byte	0xeb5
 2605 0886 17       		.uleb128 0x17
 2606 0887 D4000000 		.4byte	.LVL73
 2607 088b 43060000 		.4byte	0x643
 2608 088f 00       		.byte	0
 2609 0890 16       		.uleb128 0x16
 2610 0891 0C040000 		.4byte	.LASF99
 2611 0895 01       		.byte	0x1
 2612 0896 D403     		.2byte	0x3d4
 2613 0898 00000000 		.4byte	.LFB42
 2614 089c BC000000 		.4byte	.LFE42-.LFB42
 2615 08a0 01       		.uleb128 0x1
 2616 08a1 9C       		.byte	0x9c
 2617 08a2 41090000 		.4byte	0x941
 2618 08a6 20       		.uleb128 0x20
 2619 08a7 55000000 		.4byte	.LASF100
 2620 08ab 01       		.byte	0x1
 2621 08ac D603     		.2byte	0x3d6
 2622 08ae EF000000 		.4byte	0xef
 2623 08b2 05       		.uleb128 0x5
 2624 08b3 03       		.byte	0x3
 2625 08b4 38000000 		.4byte	brmsTask.7294
 2626 08b8 22       		.uleb128 0x22
 2627 08b9 94000000 		.4byte	.LASF101
 2628 08bd 01       		.byte	0x1
 2629 08be D803     		.2byte	0x3d8
 2630 08c0 41090000 		.4byte	0x941
 2631 08c4 01       		.byte	0x1
 2632 08c5 22       		.uleb128 0x22
 2633 08c6 83070000 		.4byte	.LASF102
 2634 08ca 01       		.byte	0x1
 2635 08cb D903     		.2byte	0x3d9
 2636 08cd 46090000 		.4byte	0x946
 2637 08d1 02       		.byte	0x2
 2638 08d2 22       		.uleb128 0x22
 2639 08d3 59070000 		.4byte	.LASF103
 2640 08d7 01       		.byte	0x1
 2641 08d8 DA03     		.2byte	0x3da
 2642 08da 4B090000 		.4byte	0x94b
 2643 08de 04       		.byte	0x4
 2644 08df 22       		.uleb128 0x22
 2645 08e0 27000000 		.4byte	.LASF104
 2646 08e4 01       		.byte	0x1
 2647 08e5 DB03     		.2byte	0x3db
 2648 08e7 50090000 		.4byte	0x950
 2649 08eb 08       		.byte	0x8
 2650 08ec 22       		.uleb128 0x22
 2651 08ed E2060000 		.4byte	.LASF105
 2652 08f1 01       		.byte	0x1
 2653 08f2 DC03     		.2byte	0x3dc
 2654 08f4 EF000000 		.4byte	0xef
 2655 08f8 10       		.byte	0x10
 2656 08f9 18       		.uleb128 0x18
 2657 08fa 08000000 		.4byte	.LVL74
 2658 08fe C00E0000 		.4byte	0xec0
 2659 0902 0C090000 		.4byte	0x90c
 2660 0906 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 72


 2661 0907 01       		.uleb128 0x1
 2662 0908 50       		.byte	0x50
 2663 0909 01       		.uleb128 0x1
 2664 090a 32       		.byte	0x32
 2665 090b 00       		.byte	0
 2666 090c 18       		.uleb128 0x18
 2667 090d 0E000000 		.4byte	.LVL75
 2668 0911 CC0E0000 		.4byte	0xecc
 2669 0915 1F090000 		.4byte	0x91f
 2670 0919 19       		.uleb128 0x19
 2671 091a 01       		.uleb128 0x1
 2672 091b 50       		.byte	0x50
 2673 091c 01       		.uleb128 0x1
 2674 091d 31       		.byte	0x31
 2675 091e 00       		.byte	0
 2676 091f 17       		.uleb128 0x17
 2677 0920 A2000000 		.4byte	.LVL76
 2678 0924 FD070000 		.4byte	0x7fd
 2679 0928 17       		.uleb128 0x17
 2680 0929 B0000000 		.4byte	.LVL77
 2681 092d CC060000 		.4byte	0x6cc
 2682 0931 1A       		.uleb128 0x1a
 2683 0932 B6000000 		.4byte	.LVL78
 2684 0936 CC0E0000 		.4byte	0xecc
 2685 093a 19       		.uleb128 0x19
 2686 093b 01       		.uleb128 0x1
 2687 093c 50       		.byte	0x50
 2688 093d 01       		.uleb128 0x1
 2689 093e 30       		.byte	0x30
 2690 093f 00       		.byte	0
 2691 0940 00       		.byte	0
 2692 0941 23       		.uleb128 0x23
 2693 0942 EF000000 		.4byte	0xef
 2694 0946 23       		.uleb128 0x23
 2695 0947 EF000000 		.4byte	0xef
 2696 094b 23       		.uleb128 0x23
 2697 094c EF000000 		.4byte	0xef
 2698 0950 23       		.uleb128 0x23
 2699 0951 EF000000 		.4byte	0xef
 2700 0955 24       		.uleb128 0x24
 2701 0956 59090000 		.4byte	.LASF180
 2702 095a 01       		.byte	0x1
 2703 095b 1803     		.2byte	0x318
 2704 095d AA000000 		.4byte	0xaa
 2705 0961 00000000 		.4byte	.LFB41
 2706 0965 50010000 		.4byte	.LFE41-.LFB41
 2707 0969 01       		.uleb128 0x1
 2708 096a 9C       		.byte	0x9c
 2709 096b 3F0B0000 		.4byte	0xb3f
 2710 096f 18       		.uleb128 0x18
 2711 0970 08000000 		.4byte	.LVL79
 2712 0974 9F0E0000 		.4byte	0xe9f
 2713 0978 82090000 		.4byte	0x982
 2714 097c 19       		.uleb128 0x19
 2715 097d 01       		.uleb128 0x1
 2716 097e 50       		.byte	0x50
 2717 097f 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 73


 2718 0980 31       		.byte	0x31
 2719 0981 00       		.byte	0
 2720 0982 18       		.uleb128 0x18
 2721 0983 0E000000 		.4byte	.LVL80
 2722 0987 AA0E0000 		.4byte	0xeaa
 2723 098b 95090000 		.4byte	0x995
 2724 098f 19       		.uleb128 0x19
 2725 0990 01       		.uleb128 0x1
 2726 0991 50       		.byte	0x50
 2727 0992 01       		.uleb128 0x1
 2728 0993 31       		.byte	0x31
 2729 0994 00       		.byte	0
 2730 0995 17       		.uleb128 0x17
 2731 0996 12000000 		.4byte	.LVL81
 2732 099a D70E0000 		.4byte	0xed7
 2733 099e 18       		.uleb128 0x18
 2734 099f 18000000 		.4byte	.LVL82
 2735 09a3 E30E0000 		.4byte	0xee3
 2736 09a7 B5090000 		.4byte	0x9b5
 2737 09ab 19       		.uleb128 0x19
 2738 09ac 01       		.uleb128 0x1
 2739 09ad 50       		.byte	0x50
 2740 09ae 05       		.uleb128 0x5
 2741 09af 03       		.byte	0x3
 2742 09b0 00000000 		.4byte	BRMS_Interrupt
 2743 09b4 00       		.byte	0
 2744 09b5 18       		.uleb128 0x18
 2745 09b6 1E000000 		.4byte	.LVL83
 2746 09ba EE0E0000 		.4byte	0xeee
 2747 09be C8090000 		.4byte	0x9c8
 2748 09c2 19       		.uleb128 0x19
 2749 09c3 01       		.uleb128 0x1
 2750 09c4 50       		.byte	0x50
 2751 09c5 01       		.uleb128 0x1
 2752 09c6 32       		.byte	0x32
 2753 09c7 00       		.byte	0
 2754 09c8 18       		.uleb128 0x18
 2755 09c9 24000000 		.4byte	.LVL84
 2756 09cd F90E0000 		.4byte	0xef9
 2757 09d1 DF090000 		.4byte	0x9df
 2758 09d5 19       		.uleb128 0x19
 2759 09d6 01       		.uleb128 0x1
 2760 09d7 50       		.byte	0x50
 2761 09d8 05       		.uleb128 0x5
 2762 09d9 03       		.byte	0x3
 2763 09da 00000000 		.4byte	HomeIsrHandler
 2764 09de 00       		.byte	0
 2765 09df 18       		.uleb128 0x18
 2766 09e0 2A000000 		.4byte	.LVL85
 2767 09e4 040F0000 		.4byte	0xf04
 2768 09e8 F2090000 		.4byte	0x9f2
 2769 09ec 19       		.uleb128 0x19
 2770 09ed 01       		.uleb128 0x1
 2771 09ee 50       		.byte	0x50
 2772 09ef 01       		.uleb128 0x1
 2773 09f0 33       		.byte	0x33
 2774 09f1 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 74


 2775 09f2 18       		.uleb128 0x18
 2776 09f3 30000000 		.4byte	.LVL86
 2777 09f7 0F0F0000 		.4byte	0xf0f
 2778 09fb 090A0000 		.4byte	0xa09
 2779 09ff 19       		.uleb128 0x19
 2780 0a00 01       		.uleb128 0x1
 2781 0a01 50       		.byte	0x50
 2782 0a02 05       		.uleb128 0x5
 2783 0a03 03       		.byte	0x3
 2784 0a04 00000000 		.4byte	RSTIsrHandler
 2785 0a08 00       		.byte	0
 2786 0a09 18       		.uleb128 0x18
 2787 0a0a 36000000 		.4byte	.LVL87
 2788 0a0e 1A0F0000 		.4byte	0xf1a
 2789 0a12 1C0A0000 		.4byte	0xa1c
 2790 0a16 19       		.uleb128 0x19
 2791 0a17 01       		.uleb128 0x1
 2792 0a18 50       		.byte	0x50
 2793 0a19 01       		.uleb128 0x1
 2794 0a1a 33       		.byte	0x33
 2795 0a1b 00       		.byte	0
 2796 0a1c 18       		.uleb128 0x18
 2797 0a1d 3C000000 		.4byte	.LVL88
 2798 0a21 250F0000 		.4byte	0xf25
 2799 0a25 330A0000 		.4byte	0xa33
 2800 0a29 19       		.uleb128 0x19
 2801 0a2a 01       		.uleb128 0x1
 2802 0a2b 50       		.byte	0x50
 2803 0a2c 05       		.uleb128 0x5
 2804 0a2d 03       		.byte	0x3
 2805 0a2e 00000000 		.4byte	SPI_SS_IsrHandler
 2806 0a32 00       		.byte	0
 2807 0a33 18       		.uleb128 0x18
 2808 0a34 42000000 		.4byte	.LVL89
 2809 0a38 300F0000 		.4byte	0xf30
 2810 0a3c 460A0000 		.4byte	0xa46
 2811 0a40 19       		.uleb128 0x19
 2812 0a41 01       		.uleb128 0x1
 2813 0a42 50       		.byte	0x50
 2814 0a43 01       		.uleb128 0x1
 2815 0a44 33       		.byte	0x33
 2816 0a45 00       		.byte	0
 2817 0a46 17       		.uleb128 0x17
 2818 0a47 48000000 		.4byte	.LVL90
 2819 0a4b 3B0F0000 		.4byte	0xf3b
 2820 0a4f 18       		.uleb128 0x18
 2821 0a50 4E000000 		.4byte	.LVL91
 2822 0a54 460F0000 		.4byte	0xf46
 2823 0a58 630A0000 		.4byte	0xa63
 2824 0a5c 19       		.uleb128 0x19
 2825 0a5d 01       		.uleb128 0x1
 2826 0a5e 50       		.byte	0x50
 2827 0a5f 02       		.uleb128 0x2
 2828 0a60 08       		.byte	0x8
 2829 0a61 64       		.byte	0x64
 2830 0a62 00       		.byte	0
 2831 0a63 17       		.uleb128 0x17
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 75


 2832 0a64 52000000 		.4byte	.LVL92
 2833 0a68 510F0000 		.4byte	0xf51
 2834 0a6c 17       		.uleb128 0x17
 2835 0a6d 56000000 		.4byte	.LVL93
 2836 0a71 5C0F0000 		.4byte	0xf5c
 2837 0a75 18       		.uleb128 0x18
 2838 0a76 5E000000 		.4byte	.LVL94
 2839 0a7a 680F0000 		.4byte	0xf68
 2840 0a7e 8A0A0000 		.4byte	0xa8a
 2841 0a82 19       		.uleb128 0x19
 2842 0a83 01       		.uleb128 0x1
 2843 0a84 50       		.byte	0x50
 2844 0a85 03       		.uleb128 0x3
 2845 0a86 0A       		.byte	0xa
 2846 0a87 4006     		.2byte	0x640
 2847 0a89 00       		.byte	0
 2848 0a8a 18       		.uleb128 0x18
 2849 0a8b 64000000 		.4byte	.LVL95
 2850 0a8f 43060000 		.4byte	0x643
 2851 0a93 9D0A0000 		.4byte	0xa9d
 2852 0a97 19       		.uleb128 0x19
 2853 0a98 01       		.uleb128 0x1
 2854 0a99 50       		.byte	0x50
 2855 0a9a 01       		.uleb128 0x1
 2856 0a9b 30       		.byte	0x30
 2857 0a9c 00       		.byte	0
 2858 0a9d 17       		.uleb128 0x17
 2859 0a9e 72000000 		.4byte	.LVL96
 2860 0aa2 740F0000 		.4byte	0xf74
 2861 0aa6 18       		.uleb128 0x18
 2862 0aa7 7A000000 		.4byte	.LVL97
 2863 0aab 020E0000 		.4byte	0xe02
 2864 0aaf BA0A0000 		.4byte	0xaba
 2865 0ab3 19       		.uleb128 0x19
 2866 0ab4 01       		.uleb128 0x1
 2867 0ab5 50       		.byte	0x50
 2868 0ab6 02       		.uleb128 0x2
 2869 0ab7 75       		.byte	0x75
 2870 0ab8 00       		.sleb128 0
 2871 0ab9 00       		.byte	0
 2872 0aba 17       		.uleb128 0x17
 2873 0abb 82000000 		.4byte	.LVL98
 2874 0abf 7F0F0000 		.4byte	0xf7f
 2875 0ac3 18       		.uleb128 0x18
 2876 0ac4 88000000 		.4byte	.LVL99
 2877 0ac8 0D0E0000 		.4byte	0xe0d
 2878 0acc D70A0000 		.4byte	0xad7
 2879 0ad0 19       		.uleb128 0x19
 2880 0ad1 01       		.uleb128 0x1
 2881 0ad2 50       		.byte	0x50
 2882 0ad3 02       		.uleb128 0x2
 2883 0ad4 74       		.byte	0x74
 2884 0ad5 00       		.sleb128 0
 2885 0ad6 00       		.byte	0
 2886 0ad7 17       		.uleb128 0x17
 2887 0ad8 9A000000 		.4byte	.LVL100
 2888 0adc 96070000 		.4byte	0x796
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 76


 2889 0ae0 18       		.uleb128 0x18
 2890 0ae1 A0000000 		.4byte	.LVL101
 2891 0ae5 B6070000 		.4byte	0x7b6
 2892 0ae9 F40A0000 		.4byte	0xaf4
 2893 0aed 19       		.uleb128 0x19
 2894 0aee 01       		.uleb128 0x1
 2895 0aef 50       		.byte	0x50
 2896 0af0 02       		.uleb128 0x2
 2897 0af1 74       		.byte	0x74
 2898 0af2 00       		.sleb128 0
 2899 0af3 00       		.byte	0
 2900 0af4 18       		.uleb128 0x18
 2901 0af5 D6000000 		.4byte	.LVL102
 2902 0af9 43060000 		.4byte	0x643
 2903 0afd 080B0000 		.4byte	0xb08
 2904 0b01 19       		.uleb128 0x19
 2905 0b02 01       		.uleb128 0x1
 2906 0b03 50       		.byte	0x50
 2907 0b04 02       		.uleb128 0x2
 2908 0b05 74       		.byte	0x74
 2909 0b06 00       		.sleb128 0
 2910 0b07 00       		.byte	0
 2911 0b08 18       		.uleb128 0x18
 2912 0b09 E8000000 		.4byte	.LVL103
 2913 0b0d 8A0F0000 		.4byte	0xf8a
 2914 0b11 1B0B0000 		.4byte	0xb1b
 2915 0b15 19       		.uleb128 0x19
 2916 0b16 01       		.uleb128 0x1
 2917 0b17 50       		.byte	0x50
 2918 0b18 01       		.uleb128 0x1
 2919 0b19 31       		.byte	0x31
 2920 0b1a 00       		.byte	0
 2921 0b1b 18       		.uleb128 0x18
 2922 0b1c F0000000 		.4byte	.LVL104
 2923 0b20 8A0F0000 		.4byte	0xf8a
 2924 0b24 2F0B0000 		.4byte	0xb2f
 2925 0b28 19       		.uleb128 0x19
 2926 0b29 01       		.uleb128 0x1
 2927 0b2a 50       		.byte	0x50
 2928 0b2b 02       		.uleb128 0x2
 2929 0b2c 74       		.byte	0x74
 2930 0b2d 00       		.sleb128 0
 2931 0b2e 00       		.byte	0
 2932 0b2f 1A       		.uleb128 0x1a
 2933 0b30 F6000000 		.4byte	.LVL105
 2934 0b34 460F0000 		.4byte	0xf46
 2935 0b38 19       		.uleb128 0x19
 2936 0b39 01       		.uleb128 0x1
 2937 0b3a 50       		.byte	0x50
 2938 0b3b 01       		.uleb128 0x1
 2939 0b3c 3A       		.byte	0x3a
 2940 0b3d 00       		.byte	0
 2941 0b3e 00       		.byte	0
 2942 0b3f 25       		.uleb128 0x25
 2943 0b40 5E090000 		.4byte	.LASF77
 2944 0b44 05       		.byte	0x5
 2945 0b45 0C       		.byte	0xc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 77


 2946 0b46 E4000000 		.4byte	0xe4
 2947 0b4a 26       		.uleb128 0x26
 2948 0b4b 27030000 		.4byte	.LASF106
 2949 0b4f 01       		.byte	0x1
 2950 0b50 5C       		.byte	0x5c
 2951 0b51 F6070000 		.4byte	0x7f6
 2952 0b55 05       		.uleb128 0x5
 2953 0b56 03       		.byte	0x3
 2954 0b57 00000000 		.4byte	inAuto
 2955 0b5b 27       		.uleb128 0x27
 2956 0b5c 4A6F6700 		.ascii	"Jog\000"
 2957 0b60 01       		.byte	0x1
 2958 0b61 5E       		.byte	0x5e
 2959 0b62 6C0B0000 		.4byte	0xb6c
 2960 0b66 05       		.uleb128 0x5
 2961 0b67 03       		.byte	0x3
 2962 0b68 00000000 		.4byte	Jog
 2963 0b6c 06       		.uleb128 0x6
 2964 0b6d B8000000 		.4byte	0xb8
 2965 0b71 26       		.uleb128 0x26
 2966 0b72 2F010000 		.4byte	.LASF107
 2967 0b76 01       		.byte	0x1
 2968 0b77 5E       		.byte	0x5e
 2969 0b78 6C0B0000 		.4byte	0xb6c
 2970 0b7c 05       		.uleb128 0x5
 2971 0b7d 03       		.byte	0x3
 2972 0b7e 00000000 		.4byte	LastJog
 2973 0b82 26       		.uleb128 0x26
 2974 0b83 D1060000 		.4byte	.LASF108
 2975 0b87 01       		.byte	0x1
 2976 0b88 5F       		.byte	0x5f
 2977 0b89 F6070000 		.4byte	0x7f6
 2978 0b8d 05       		.uleb128 0x5
 2979 0b8e 03       		.byte	0x3
 2980 0b8f 00000000 		.4byte	PID_Enabled
 2981 0b93 26       		.uleb128 0x26
 2982 0b94 C1060000 		.4byte	.LASF109
 2983 0b98 01       		.byte	0x1
 2984 0b99 5F       		.byte	0x5f
 2985 0b9a F6070000 		.4byte	0x7f6
 2986 0b9e 05       		.uleb128 0x5
 2987 0b9f 03       		.byte	0x3
 2988 0ba0 00000000 		.4byte	PID_Was_Enabled
 2989 0ba4 26       		.uleb128 0x26
 2990 0ba5 BD070000 		.4byte	.LASF110
 2991 0ba9 01       		.byte	0x1
 2992 0baa 60       		.byte	0x60
 2993 0bab E4000000 		.4byte	0xe4
 2994 0baf 05       		.uleb128 0x5
 2995 0bb0 03       		.byte	0x3
 2996 0bb1 00000000 		.4byte	PID_Setpoint
 2997 0bb5 26       		.uleb128 0x26
 2998 0bb6 010A0000 		.4byte	.LASF111
 2999 0bba 01       		.byte	0x1
 3000 0bbb 60       		.byte	0x60
 3001 0bbc E4000000 		.4byte	0xe4
 3002 0bc0 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 78


 3003 0bc1 03       		.byte	0x3
 3004 0bc2 00000000 		.4byte	PID_EffectiveSetpoint
 3005 0bc6 26       		.uleb128 0x26
 3006 0bc7 EC010000 		.4byte	.LASF112
 3007 0bcb 01       		.byte	0x1
 3008 0bcc 61       		.byte	0x61
 3009 0bcd C3000000 		.4byte	0xc3
 3010 0bd1 05       		.uleb128 0x5
 3011 0bd2 03       		.byte	0x3
 3012 0bd3 00000000 		.4byte	PID_EffSetDelta
 3013 0bd7 26       		.uleb128 0x26
 3014 0bd8 FC010000 		.4byte	.LASF113
 3015 0bdc 01       		.byte	0x1
 3016 0bdd 62       		.byte	0x62
 3017 0bde EF000000 		.4byte	0xef
 3018 0be2 05       		.uleb128 0x5
 3019 0be3 03       		.byte	0x3
 3020 0be4 00000000 		.4byte	lastTime
 3021 0be8 26       		.uleb128 0x26
 3022 0be9 BD050000 		.4byte	.LASF114
 3023 0bed 01       		.byte	0x1
 3024 0bee 64       		.byte	0x64
 3025 0bef EF000000 		.4byte	0xef
 3026 0bf3 05       		.uleb128 0x5
 3027 0bf4 03       		.byte	0x3
 3028 0bf5 00000000 		.4byte	refSampleTime
 3029 0bf9 26       		.uleb128 0x26
 3030 0bfa D9030000 		.4byte	.LASF115
 3031 0bfe 01       		.byte	0x1
 3032 0bff 65       		.byte	0x65
 3033 0c00 C7060000 		.4byte	0x6c7
 3034 0c04 05       		.uleb128 0x5
 3035 0c05 03       		.byte	0x3
 3036 0c06 00000000 		.4byte	Position
 3037 0c0a 26       		.uleb128 0x26
 3038 0c0b CB050000 		.4byte	.LASF116
 3039 0c0f 01       		.byte	0x1
 3040 0c10 65       		.byte	0x65
 3041 0c11 C7060000 		.4byte	0x6c7
 3042 0c15 05       		.uleb128 0x5
 3043 0c16 03       		.byte	0x3
 3044 0c17 00000000 		.4byte	LastPosition
 3045 0c1b 26       		.uleb128 0x26
 3046 0c1c 88060000 		.4byte	.LASF117
 3047 0c20 01       		.byte	0x1
 3048 0c21 66       		.byte	0x66
 3049 0c22 C7060000 		.4byte	0x6c7
 3050 0c26 05       		.uleb128 0x5
 3051 0c27 03       		.byte	0x3
 3052 0c28 00000000 		.4byte	Output
 3053 0c2c 27       		.uleb128 0x27
 3054 0c2d 6B7000   		.ascii	"kp\000"
 3055 0c30 01       		.byte	0x1
 3056 0c31 69       		.byte	0x69
 3057 0c32 EF000000 		.4byte	0xef
 3058 0c36 05       		.uleb128 0x5
 3059 0c37 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 79


 3060 0c38 00000000 		.4byte	kp
 3061 0c3c 27       		.uleb128 0x27
 3062 0c3d 6B6900   		.ascii	"ki\000"
 3063 0c40 01       		.byte	0x1
 3064 0c41 6A       		.byte	0x6a
 3065 0c42 EF000000 		.4byte	0xef
 3066 0c46 05       		.uleb128 0x5
 3067 0c47 03       		.byte	0x3
 3068 0c48 00000000 		.4byte	ki
 3069 0c4c 27       		.uleb128 0x27
 3070 0c4d 6B6400   		.ascii	"kd\000"
 3071 0c50 01       		.byte	0x1
 3072 0c51 6B       		.byte	0x6b
 3073 0c52 EF000000 		.4byte	0xef
 3074 0c56 05       		.uleb128 0x5
 3075 0c57 03       		.byte	0x3
 3076 0c58 00000000 		.4byte	kd
 3077 0c5c 26       		.uleb128 0x26
 3078 0c5d E3020000 		.4byte	.LASF118
 3079 0c61 01       		.byte	0x1
 3080 0c62 6D       		.byte	0x6d
 3081 0c63 E4000000 		.4byte	0xe4
 3082 0c67 05       		.uleb128 0x5
 3083 0c68 03       		.byte	0x3
 3084 0c69 00000000 		.4byte	outMax_Total
 3085 0c6d 26       		.uleb128 0x26
 3086 0c6e 9B070000 		.4byte	.LASF119
 3087 0c72 01       		.byte	0x1
 3088 0c73 6D       		.byte	0x6d
 3089 0c74 E4000000 		.4byte	0xe4
 3090 0c78 05       		.uleb128 0x5
 3091 0c79 03       		.byte	0x3
 3092 0c7a 00000000 		.4byte	outMax_ITerm
 3093 0c7e 26       		.uleb128 0x26
 3094 0c7f A0080000 		.4byte	.LASF120
 3095 0c83 01       		.byte	0x1
 3096 0c84 6E       		.byte	0x6e
 3097 0c85 E4000000 		.4byte	0xe4
 3098 0c89 05       		.uleb128 0x5
 3099 0c8a 03       		.byte	0x3
 3100 0c8b 00000000 		.4byte	pwmLimit
 3101 0c8f 26       		.uleb128 0x26
 3102 0c90 B6070000 		.4byte	.LASF121
 3103 0c94 01       		.byte	0x1
 3104 0c95 6E       		.byte	0x6e
 3105 0c96 E4000000 		.4byte	0xe4
 3106 0c9a 05       		.uleb128 0x5
 3107 0c9b 03       		.byte	0x3
 3108 0c9c 00000000 		.4byte	pwmMax
 3109 0ca0 26       		.uleb128 0x26
 3110 0ca1 05020000 		.4byte	.LASF122
 3111 0ca5 01       		.byte	0x1
 3112 0ca6 6E       		.byte	0x6e
 3113 0ca7 E4000000 		.4byte	0xe4
 3114 0cab 05       		.uleb128 0x5
 3115 0cac 03       		.byte	0x3
 3116 0cad 00000000 		.4byte	pwmMin
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 80


 3117 0cb1 26       		.uleb128 0x26
 3118 0cb2 C7080000 		.4byte	.LASF123
 3119 0cb6 01       		.byte	0x1
 3120 0cb7 70       		.byte	0x70
 3121 0cb8 F6070000 		.4byte	0x7f6
 3122 0cbc 05       		.uleb128 0x5
 3123 0cbd 03       		.byte	0x3
 3124 0cbe 00000000 		.4byte	homingDone
 3125 0cc2 26       		.uleb128 0x26
 3126 0cc3 42080000 		.4byte	.LASF124
 3127 0cc7 01       		.byte	0x1
 3128 0cc8 75       		.byte	0x75
 3129 0cc9 D30C0000 		.4byte	0xcd3
 3130 0ccd 05       		.uleb128 0x5
 3131 0cce 03       		.byte	0x3
 3132 0ccf 00000000 		.4byte	UptimeMicroseconds
 3133 0cd3 06       		.uleb128 0x6
 3134 0cd4 FA000000 		.4byte	0xfa
 3135 0cd8 26       		.uleb128 0x26
 3136 0cd9 81090000 		.4byte	.LASF125
 3137 0cdd 01       		.byte	0x1
 3138 0cde 76       		.byte	0x76
 3139 0cdf D30C0000 		.4byte	0xcd3
 3140 0ce3 05       		.uleb128 0x5
 3141 0ce4 03       		.byte	0x3
 3142 0ce5 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3143 0ce9 26       		.uleb128 0x26
 3144 0cea 65030000 		.4byte	.LASF126
 3145 0cee 01       		.byte	0x1
 3146 0cef 77       		.byte	0x77
 3147 0cf0 D30C0000 		.4byte	0xcd3
 3148 0cf4 05       		.uleb128 0x5
 3149 0cf5 03       		.byte	0x3
 3150 0cf6 00000000 		.4byte	UptimeMilliseconds
 3151 0cfa 26       		.uleb128 0x26
 3152 0cfb 26050000 		.4byte	.LASF127
 3153 0cff 01       		.byte	0x1
 3154 0d00 78       		.byte	0x78
 3155 0d01 D30C0000 		.4byte	0xcd3
 3156 0d05 05       		.uleb128 0x5
 3157 0d06 03       		.byte	0x3
 3158 0d07 00000000 		.4byte	UptimeMillisecondsAccumulator
 3159 0d0b 26       		.uleb128 0x26
 3160 0d0c A8070000 		.4byte	.LASF128
 3161 0d10 01       		.byte	0x1
 3162 0d11 79       		.byte	0x79
 3163 0d12 D30C0000 		.4byte	0xcd3
 3164 0d16 05       		.uleb128 0x5
 3165 0d17 03       		.byte	0x3
 3166 0d18 00000000 		.4byte	UptimeSeconds
 3167 0d1c 26       		.uleb128 0x26
 3168 0d1d 3D020000 		.4byte	.LASF129
 3169 0d21 01       		.byte	0x1
 3170 0d22 A5       		.byte	0xa5
 3171 0d23 2D0D0000 		.4byte	0xd2d
 3172 0d27 05       		.uleb128 0x5
 3173 0d28 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 81


 3174 0d29 00000000 		.4byte	ConfigState
 3175 0d2d 06       		.uleb128 0x6
 3176 0d2e 6F010000 		.4byte	0x16f
 3177 0d32 26       		.uleb128 0x26
 3178 0d33 95080000 		.4byte	.LASF130
 3179 0d37 01       		.byte	0x1
 3180 0d38 A6       		.byte	0xa6
 3181 0d39 430D0000 		.4byte	0xd43
 3182 0d3d 05       		.uleb128 0x5
 3183 0d3e 03       		.byte	0x3
 3184 0d3f 00000000 		.4byte	FaultState
 3185 0d43 06       		.uleb128 0x6
 3186 0d44 C3000000 		.4byte	0xc3
 3187 0d48 26       		.uleb128 0x26
 3188 0d49 B8080000 		.4byte	.LASF131
 3189 0d4d 01       		.byte	0x1
 3190 0d4e A7       		.byte	0xa7
 3191 0d4f 430D0000 		.4byte	0xd43
 3192 0d53 05       		.uleb128 0x5
 3193 0d54 03       		.byte	0x3
 3194 0d55 00000000 		.4byte	ConfigSequence
 3195 0d59 26       		.uleb128 0x26
 3196 0d5a FB070000 		.4byte	.LASF132
 3197 0d5e 01       		.byte	0x1
 3198 0d5f A8       		.byte	0xa8
 3199 0d60 6A0D0000 		.4byte	0xd6a
 3200 0d64 05       		.uleb128 0x5
 3201 0d65 03       		.byte	0x3
 3202 0d66 00000000 		.4byte	ChecksumErrors
 3203 0d6a 06       		.uleb128 0x6
 3204 0d6b D9000000 		.4byte	0xd9
 3205 0d6f 26       		.uleb128 0x26
 3206 0d70 0C020000 		.4byte	.LASF133
 3207 0d74 01       		.byte	0x1
 3208 0d75 A9       		.byte	0xa9
 3209 0d76 800D0000 		.4byte	0xd80
 3210 0d7a 05       		.uleb128 0x5
 3211 0d7b 03       		.byte	0x3
 3212 0d7c 00000000 		.4byte	MotorCurrent
 3213 0d80 06       		.uleb128 0x6
 3214 0d81 CE000000 		.4byte	0xce
 3215 0d85 0F       		.uleb128 0xf
 3216 0d86 C3000000 		.4byte	0xc3
 3217 0d8a 950D0000 		.4byte	0xd95
 3218 0d8e 10       		.uleb128 0x10
 3219 0d8f 3E010000 		.4byte	0x13e
 3220 0d93 13       		.byte	0x13
 3221 0d94 00       		.byte	0
 3222 0d95 26       		.uleb128 0x26
 3223 0d96 AD050000 		.4byte	.LASF134
 3224 0d9a 01       		.byte	0x1
 3225 0d9b AA       		.byte	0xaa
 3226 0d9c 850D0000 		.4byte	0xd85
 3227 0da0 05       		.uleb128 0x5
 3228 0da1 03       		.byte	0x3
 3229 0da2 00000000 		.4byte	CurrentI2Cinbuf
 3230 0da6 26       		.uleb128 0x26
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 82


 3231 0da7 42070000 		.4byte	.LASF135
 3232 0dab 01       		.byte	0x1
 3233 0dac BC       		.byte	0xbc
 3234 0dad EF000000 		.4byte	0xef
 3235 0db1 05       		.uleb128 0x5
 3236 0db2 03       		.byte	0x3
 3237 0db3 00000000 		.4byte	LastMessageTimeSeconds
 3238 0db7 26       		.uleb128 0x26
 3239 0db8 08000000 		.4byte	.LASF136
 3240 0dbc 01       		.byte	0x1
 3241 0dbd FA       		.byte	0xfa
 3242 0dbe 6B030000 		.4byte	0x36b
 3243 0dc2 05       		.uleb128 0x5
 3244 0dc3 03       		.byte	0x3
 3245 0dc4 00000000 		.4byte	rxMessage
 3246 0dc8 28       		.uleb128 0x28
 3247 0dc9 D8050000 		.4byte	.LASF137
 3248 0dcd 01       		.byte	0x1
 3249 0dce 1201     		.2byte	0x112
 3250 0dd0 84040000 		.4byte	0x484
 3251 0dd4 05       		.uleb128 0x5
 3252 0dd5 03       		.byte	0x3
 3253 0dd6 00000000 		.4byte	txMessage
 3254 0dda 28       		.uleb128 0x28
 3255 0ddb 11070000 		.4byte	.LASF138
 3256 0ddf 01       		.byte	0x1
 3257 0de0 1A01     		.2byte	0x11a
 3258 0de2 C0040000 		.4byte	0x4c0
 3259 0de6 05       		.uleb128 0x5
 3260 0de7 03       		.byte	0x3
 3261 0de8 00000000 		.4byte	txMessageState
 3262 0dec 29       		.uleb128 0x29
 3263 0ded 8B040000 		.4byte	.LASF139
 3264 0df1 8B040000 		.4byte	.LASF139
 3265 0df5 06       		.byte	0x6
 3266 0df6 28       		.byte	0x28
 3267 0df7 29       		.uleb128 0x29
 3268 0df8 D2080000 		.4byte	.LASF140
 3269 0dfc D2080000 		.4byte	.LASF140
 3270 0e00 07       		.byte	0x7
 3271 0e01 39       		.byte	0x39
 3272 0e02 29       		.uleb128 0x29
 3273 0e03 E2050000 		.4byte	.LASF141
 3274 0e07 E2050000 		.4byte	.LASF141
 3275 0e0b 08       		.byte	0x8
 3276 0e0c 5A       		.byte	0x5a
 3277 0e0d 29       		.uleb128 0x29
 3278 0e0e 54040000 		.4byte	.LASF142
 3279 0e12 54040000 		.4byte	.LASF142
 3280 0e16 09       		.byte	0x9
 3281 0e17 5A       		.byte	0x5a
 3282 0e18 29       		.uleb128 0x29
 3283 0e19 C0090000 		.4byte	.LASF143
 3284 0e1d C0090000 		.4byte	.LASF143
 3285 0e21 0A       		.byte	0xa
 3286 0e22 28       		.byte	0x28
 3287 0e23 29       		.uleb128 0x29
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 83


 3288 0e24 D8000000 		.4byte	.LASF144
 3289 0e28 D8000000 		.4byte	.LASF144
 3290 0e2c 0B       		.byte	0xb
 3291 0e2d 39       		.byte	0x39
 3292 0e2e 29       		.uleb128 0x29
 3293 0e2f 4F030000 		.4byte	.LASF145
 3294 0e33 4F030000 		.4byte	.LASF145
 3295 0e37 0C       		.byte	0xc
 3296 0e38 39       		.byte	0x39
 3297 0e39 29       		.uleb128 0x29
 3298 0e3a F2040000 		.4byte	.LASF146
 3299 0e3e F2040000 		.4byte	.LASF146
 3300 0e42 0C       		.byte	0xc
 3301 0e43 32       		.byte	0x32
 3302 0e44 2A       		.uleb128 0x2a
 3303 0e45 1F050000 		.4byte	.LASF181
 3304 0e49 1F050000 		.4byte	.LASF181
 3305 0e4d 2B       		.uleb128 0x2b
 3306 0e4e DD070000 		.4byte	.LASF147
 3307 0e52 DD070000 		.4byte	.LASF147
 3308 0e56 0D       		.byte	0xd
 3309 0e57 3D03     		.2byte	0x33d
 3310 0e59 2B       		.uleb128 0x2b
 3311 0e5a 1B040000 		.4byte	.LASF148
 3312 0e5e 1B040000 		.4byte	.LASF148
 3313 0e62 0D       		.byte	0xd
 3314 0e63 3F03     		.2byte	0x33f
 3315 0e65 2B       		.uleb128 0x2b
 3316 0e66 3F010000 		.4byte	.LASF149
 3317 0e6a 3F010000 		.4byte	.LASF149
 3318 0e6e 0D       		.byte	0xd
 3319 0e6f 4703     		.2byte	0x347
 3320 0e71 29       		.uleb128 0x29
 3321 0e72 56060000 		.4byte	.LASF150
 3322 0e76 56060000 		.4byte	.LASF150
 3323 0e7a 0E       		.byte	0xe
 3324 0e7b 70       		.byte	0x70
 3325 0e7c 2B       		.uleb128 0x2b
 3326 0e7d 71040000 		.4byte	.LASF151
 3327 0e81 71040000 		.4byte	.LASF151
 3328 0e85 0F       		.byte	0xf
 3329 0e86 5501     		.2byte	0x155
 3330 0e88 29       		.uleb128 0x29
 3331 0e89 78030000 		.4byte	.LASF152
 3332 0e8d 78030000 		.4byte	.LASF152
 3333 0e91 08       		.byte	0x8
 3334 0e92 5D       		.byte	0x5d
 3335 0e93 2B       		.uleb128 0x2b
 3336 0e94 39030000 		.4byte	.LASF153
 3337 0e98 39030000 		.4byte	.LASF153
 3338 0e9c 0D       		.byte	0xd
 3339 0e9d 4503     		.2byte	0x345
 3340 0e9f 29       		.uleb128 0x29
 3341 0ea0 20070000 		.4byte	.LASF154
 3342 0ea4 20070000 		.4byte	.LASF154
 3343 0ea8 10       		.byte	0x10
 3344 0ea9 36       		.byte	0x36
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 84


 3345 0eaa 29       		.uleb128 0x29
 3346 0eab 08050000 		.4byte	.LASF155
 3347 0eaf 08050000 		.4byte	.LASF155
 3348 0eb3 11       		.byte	0x11
 3349 0eb4 36       		.byte	0x36
 3350 0eb5 29       		.uleb128 0x29
 3351 0eb6 E7030000 		.4byte	.LASF156
 3352 0eba E7030000 		.4byte	.LASF156
 3353 0ebe 05       		.byte	0x5
 3354 0ebf 0D       		.byte	0xd
 3355 0ec0 2B       		.uleb128 0x2b
 3356 0ec1 CD040000 		.4byte	.LASF157
 3357 0ec5 CD040000 		.4byte	.LASF157
 3358 0ec9 12       		.byte	0x12
 3359 0eca 4701     		.2byte	0x147
 3360 0ecc 29       		.uleb128 0x29
 3361 0ecd 0E090000 		.4byte	.LASF158
 3362 0ed1 0E090000 		.4byte	.LASF158
 3363 0ed5 13       		.byte	0x13
 3364 0ed6 33       		.byte	0x33
 3365 0ed7 2B       		.uleb128 0x2b
 3366 0ed8 01030000 		.4byte	.LASF159
 3367 0edc 01030000 		.4byte	.LASF159
 3368 0ee0 12       		.byte	0x12
 3369 0ee1 3201     		.2byte	0x132
 3370 0ee3 29       		.uleb128 0x29
 3371 0ee4 F0020000 		.4byte	.LASF160
 3372 0ee8 F0020000 		.4byte	.LASF160
 3373 0eec 14       		.byte	0x14
 3374 0eed 18       		.byte	0x18
 3375 0eee 29       		.uleb128 0x29
 3376 0eef 35060000 		.4byte	.LASF161
 3377 0ef3 35060000 		.4byte	.LASF161
 3378 0ef7 14       		.byte	0x14
 3379 0ef8 20       		.byte	0x20
 3380 0ef9 29       		.uleb128 0x29
 3381 0efa 1A090000 		.4byte	.LASF162
 3382 0efe 1A090000 		.4byte	.LASF162
 3383 0f02 0A       		.byte	0xa
 3384 0f03 18       		.byte	0x18
 3385 0f04 29       		.uleb128 0x29
 3386 0f05 25080000 		.4byte	.LASF163
 3387 0f09 25080000 		.4byte	.LASF163
 3388 0f0d 0A       		.byte	0xa
 3389 0f0e 20       		.byte	0x20
 3390 0f0f 29       		.uleb128 0x29
 3391 0f10 A8090000 		.4byte	.LASF164
 3392 0f14 A8090000 		.4byte	.LASF164
 3393 0f18 06       		.byte	0x6
 3394 0f19 18       		.byte	0x18
 3395 0f1a 29       		.uleb128 0x29
 3396 0f1b BD030000 		.4byte	.LASF165
 3397 0f1f BD030000 		.4byte	.LASF165
 3398 0f23 06       		.byte	0x6
 3399 0f24 20       		.byte	0x20
 3400 0f25 29       		.uleb128 0x29
 3401 0f26 A3010000 		.4byte	.LASF166
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 85


 3402 0f2a A3010000 		.4byte	.LASF166
 3403 0f2e 15       		.byte	0x15
 3404 0f2f 18       		.byte	0x18
 3405 0f30 29       		.uleb128 0x29
 3406 0f31 A8040000 		.4byte	.LASF167
 3407 0f35 A8040000 		.4byte	.LASF167
 3408 0f39 15       		.byte	0x15
 3409 0f3a 20       		.byte	0x20
 3410 0f3b 29       		.uleb128 0x29
 3411 0f3c 25010000 		.4byte	.LASF168
 3412 0f40 25010000 		.4byte	.LASF168
 3413 0f44 16       		.byte	0x16
 3414 0f45 72       		.byte	0x72
 3415 0f46 29       		.uleb128 0x29
 3416 0f47 00000000 		.4byte	.LASF169
 3417 0f4b 00000000 		.4byte	.LASF169
 3418 0f4f 17       		.byte	0x17
 3419 0f50 EC       		.byte	0xec
 3420 0f51 29       		.uleb128 0x29
 3421 0f52 5B080000 		.4byte	.LASF170
 3422 0f56 5B080000 		.4byte	.LASF170
 3423 0f5a 18       		.byte	0x18
 3424 0f5b 72       		.byte	0x72
 3425 0f5c 2B       		.uleb128 0x2b
 3426 0f5d 05070000 		.4byte	.LASF171
 3427 0f61 05070000 		.4byte	.LASF171
 3428 0f65 0F       		.byte	0xf
 3429 0f66 3201     		.2byte	0x132
 3430 0f68 2B       		.uleb128 0x2b
 3431 0f69 2B020000 		.4byte	.LASF172
 3432 0f6d 2B020000 		.4byte	.LASF172
 3433 0f71 0F       		.byte	0xf
 3434 0f72 5001     		.2byte	0x150
 3435 0f74 29       		.uleb128 0x29
 3436 0f75 A0000000 		.4byte	.LASF173
 3437 0f79 A0000000 		.4byte	.LASF173
 3438 0f7d 08       		.byte	0x8
 3439 0f7e 4F       		.byte	0x4f
 3440 0f7f 29       		.uleb128 0x29
 3441 0f80 6B090000 		.4byte	.LASF174
 3442 0f84 6B090000 		.4byte	.LASF174
 3443 0f88 09       		.byte	0x9
 3444 0f89 4F       		.byte	0x4f
 3445 0f8a 29       		.uleb128 0x29
 3446 0f8b EF000000 		.4byte	.LASF175
 3447 0f8f EF000000 		.4byte	.LASF175
 3448 0f93 19       		.byte	0x19
 3449 0f94 33       		.byte	0x33
 3450 0f95 00       		.byte	0
 3451              		.section	.debug_abbrev,"",%progbits
 3452              	.Ldebug_abbrev0:
 3453 0000 01       		.uleb128 0x1
 3454 0001 11       		.uleb128 0x11
 3455 0002 01       		.byte	0x1
 3456 0003 25       		.uleb128 0x25
 3457 0004 0E       		.uleb128 0xe
 3458 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 86


 3459 0006 0B       		.uleb128 0xb
 3460 0007 03       		.uleb128 0x3
 3461 0008 0E       		.uleb128 0xe
 3462 0009 1B       		.uleb128 0x1b
 3463 000a 0E       		.uleb128 0xe
 3464 000b 55       		.uleb128 0x55
 3465 000c 17       		.uleb128 0x17
 3466 000d 11       		.uleb128 0x11
 3467 000e 01       		.uleb128 0x1
 3468 000f 10       		.uleb128 0x10
 3469 0010 17       		.uleb128 0x17
 3470 0011 00       		.byte	0
 3471 0012 00       		.byte	0
 3472 0013 02       		.uleb128 0x2
 3473 0014 16       		.uleb128 0x16
 3474 0015 00       		.byte	0
 3475 0016 03       		.uleb128 0x3
 3476 0017 0E       		.uleb128 0xe
 3477 0018 3A       		.uleb128 0x3a
 3478 0019 0B       		.uleb128 0xb
 3479 001a 3B       		.uleb128 0x3b
 3480 001b 0B       		.uleb128 0xb
 3481 001c 49       		.uleb128 0x49
 3482 001d 13       		.uleb128 0x13
 3483 001e 00       		.byte	0
 3484 001f 00       		.byte	0
 3485 0020 03       		.uleb128 0x3
 3486 0021 24       		.uleb128 0x24
 3487 0022 00       		.byte	0
 3488 0023 0B       		.uleb128 0xb
 3489 0024 0B       		.uleb128 0xb
 3490 0025 3E       		.uleb128 0x3e
 3491 0026 0B       		.uleb128 0xb
 3492 0027 03       		.uleb128 0x3
 3493 0028 0E       		.uleb128 0xe
 3494 0029 00       		.byte	0
 3495 002a 00       		.byte	0
 3496 002b 04       		.uleb128 0x4
 3497 002c 24       		.uleb128 0x24
 3498 002d 00       		.byte	0
 3499 002e 0B       		.uleb128 0xb
 3500 002f 0B       		.uleb128 0xb
 3501 0030 3E       		.uleb128 0x3e
 3502 0031 0B       		.uleb128 0xb
 3503 0032 03       		.uleb128 0x3
 3504 0033 08       		.uleb128 0x8
 3505 0034 00       		.byte	0
 3506 0035 00       		.byte	0
 3507 0036 05       		.uleb128 0x5
 3508 0037 16       		.uleb128 0x16
 3509 0038 00       		.byte	0
 3510 0039 03       		.uleb128 0x3
 3511 003a 0E       		.uleb128 0xe
 3512 003b 3A       		.uleb128 0x3a
 3513 003c 0B       		.uleb128 0xb
 3514 003d 3B       		.uleb128 0x3b
 3515 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 87


 3516 003f 49       		.uleb128 0x49
 3517 0040 13       		.uleb128 0x13
 3518 0041 00       		.byte	0
 3519 0042 00       		.byte	0
 3520 0043 06       		.uleb128 0x6
 3521 0044 35       		.uleb128 0x35
 3522 0045 00       		.byte	0
 3523 0046 49       		.uleb128 0x49
 3524 0047 13       		.uleb128 0x13
 3525 0048 00       		.byte	0
 3526 0049 00       		.byte	0
 3527 004a 07       		.uleb128 0x7
 3528 004b 04       		.uleb128 0x4
 3529 004c 01       		.byte	0x1
 3530 004d 0B       		.uleb128 0xb
 3531 004e 0B       		.uleb128 0xb
 3532 004f 49       		.uleb128 0x49
 3533 0050 13       		.uleb128 0x13
 3534 0051 3A       		.uleb128 0x3a
 3535 0052 0B       		.uleb128 0xb
 3536 0053 3B       		.uleb128 0x3b
 3537 0054 0B       		.uleb128 0xb
 3538 0055 01       		.uleb128 0x1
 3539 0056 13       		.uleb128 0x13
 3540 0057 00       		.byte	0
 3541 0058 00       		.byte	0
 3542 0059 08       		.uleb128 0x8
 3543 005a 28       		.uleb128 0x28
 3544 005b 00       		.byte	0
 3545 005c 03       		.uleb128 0x3
 3546 005d 0E       		.uleb128 0xe
 3547 005e 1C       		.uleb128 0x1c
 3548 005f 0B       		.uleb128 0xb
 3549 0060 00       		.byte	0
 3550 0061 00       		.byte	0
 3551 0062 09       		.uleb128 0x9
 3552 0063 13       		.uleb128 0x13
 3553 0064 01       		.byte	0x1
 3554 0065 0B       		.uleb128 0xb
 3555 0066 0B       		.uleb128 0xb
 3556 0067 3A       		.uleb128 0x3a
 3557 0068 0B       		.uleb128 0xb
 3558 0069 3B       		.uleb128 0x3b
 3559 006a 0B       		.uleb128 0xb
 3560 006b 01       		.uleb128 0x1
 3561 006c 13       		.uleb128 0x13
 3562 006d 00       		.byte	0
 3563 006e 00       		.byte	0
 3564 006f 0A       		.uleb128 0xa
 3565 0070 0D       		.uleb128 0xd
 3566 0071 00       		.byte	0
 3567 0072 03       		.uleb128 0x3
 3568 0073 0E       		.uleb128 0xe
 3569 0074 3A       		.uleb128 0x3a
 3570 0075 0B       		.uleb128 0xb
 3571 0076 3B       		.uleb128 0x3b
 3572 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 88


 3573 0078 49       		.uleb128 0x49
 3574 0079 13       		.uleb128 0x13
 3575 007a 38       		.uleb128 0x38
 3576 007b 0B       		.uleb128 0xb
 3577 007c 00       		.byte	0
 3578 007d 00       		.byte	0
 3579 007e 0B       		.uleb128 0xb
 3580 007f 0D       		.uleb128 0xd
 3581 0080 00       		.byte	0
 3582 0081 03       		.uleb128 0x3
 3583 0082 08       		.uleb128 0x8
 3584 0083 3A       		.uleb128 0x3a
 3585 0084 0B       		.uleb128 0xb
 3586 0085 3B       		.uleb128 0x3b
 3587 0086 0B       		.uleb128 0xb
 3588 0087 49       		.uleb128 0x49
 3589 0088 13       		.uleb128 0x13
 3590 0089 38       		.uleb128 0x38
 3591 008a 0B       		.uleb128 0xb
 3592 008b 00       		.byte	0
 3593 008c 00       		.byte	0
 3594 008d 0C       		.uleb128 0xc
 3595 008e 17       		.uleb128 0x17
 3596 008f 01       		.byte	0x1
 3597 0090 0B       		.uleb128 0xb
 3598 0091 0B       		.uleb128 0xb
 3599 0092 3A       		.uleb128 0x3a
 3600 0093 0B       		.uleb128 0xb
 3601 0094 3B       		.uleb128 0x3b
 3602 0095 0B       		.uleb128 0xb
 3603 0096 01       		.uleb128 0x1
 3604 0097 13       		.uleb128 0x13
 3605 0098 00       		.byte	0
 3606 0099 00       		.byte	0
 3607 009a 0D       		.uleb128 0xd
 3608 009b 0D       		.uleb128 0xd
 3609 009c 00       		.byte	0
 3610 009d 03       		.uleb128 0x3
 3611 009e 08       		.uleb128 0x8
 3612 009f 3A       		.uleb128 0x3a
 3613 00a0 0B       		.uleb128 0xb
 3614 00a1 3B       		.uleb128 0x3b
 3615 00a2 0B       		.uleb128 0xb
 3616 00a3 49       		.uleb128 0x49
 3617 00a4 13       		.uleb128 0x13
 3618 00a5 00       		.byte	0
 3619 00a6 00       		.byte	0
 3620 00a7 0E       		.uleb128 0xe
 3621 00a8 0D       		.uleb128 0xd
 3622 00a9 00       		.byte	0
 3623 00aa 03       		.uleb128 0x3
 3624 00ab 0E       		.uleb128 0xe
 3625 00ac 3A       		.uleb128 0x3a
 3626 00ad 0B       		.uleb128 0xb
 3627 00ae 3B       		.uleb128 0x3b
 3628 00af 0B       		.uleb128 0xb
 3629 00b0 49       		.uleb128 0x49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 89


 3630 00b1 13       		.uleb128 0x13
 3631 00b2 00       		.byte	0
 3632 00b3 00       		.byte	0
 3633 00b4 0F       		.uleb128 0xf
 3634 00b5 01       		.uleb128 0x1
 3635 00b6 01       		.byte	0x1
 3636 00b7 49       		.uleb128 0x49
 3637 00b8 13       		.uleb128 0x13
 3638 00b9 01       		.uleb128 0x1
 3639 00ba 13       		.uleb128 0x13
 3640 00bb 00       		.byte	0
 3641 00bc 00       		.byte	0
 3642 00bd 10       		.uleb128 0x10
 3643 00be 21       		.uleb128 0x21
 3644 00bf 00       		.byte	0
 3645 00c0 49       		.uleb128 0x49
 3646 00c1 13       		.uleb128 0x13
 3647 00c2 2F       		.uleb128 0x2f
 3648 00c3 0B       		.uleb128 0xb
 3649 00c4 00       		.byte	0
 3650 00c5 00       		.byte	0
 3651 00c6 11       		.uleb128 0x11
 3652 00c7 0D       		.uleb128 0xd
 3653 00c8 00       		.byte	0
 3654 00c9 03       		.uleb128 0x3
 3655 00ca 0E       		.uleb128 0xe
 3656 00cb 3A       		.uleb128 0x3a
 3657 00cc 0B       		.uleb128 0xb
 3658 00cd 3B       		.uleb128 0x3b
 3659 00ce 05       		.uleb128 0x5
 3660 00cf 49       		.uleb128 0x49
 3661 00d0 13       		.uleb128 0x13
 3662 00d1 38       		.uleb128 0x38
 3663 00d2 0B       		.uleb128 0xb
 3664 00d3 00       		.byte	0
 3665 00d4 00       		.byte	0
 3666 00d5 12       		.uleb128 0x12
 3667 00d6 0D       		.uleb128 0xd
 3668 00d7 00       		.byte	0
 3669 00d8 03       		.uleb128 0x3
 3670 00d9 08       		.uleb128 0x8
 3671 00da 3A       		.uleb128 0x3a
 3672 00db 0B       		.uleb128 0xb
 3673 00dc 3B       		.uleb128 0x3b
 3674 00dd 05       		.uleb128 0x5
 3675 00de 49       		.uleb128 0x49
 3676 00df 13       		.uleb128 0x13
 3677 00e0 38       		.uleb128 0x38
 3678 00e1 0B       		.uleb128 0xb
 3679 00e2 00       		.byte	0
 3680 00e3 00       		.byte	0
 3681 00e4 13       		.uleb128 0x13
 3682 00e5 17       		.uleb128 0x17
 3683 00e6 01       		.byte	0x1
 3684 00e7 0B       		.uleb128 0xb
 3685 00e8 0B       		.uleb128 0xb
 3686 00e9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 90


 3687 00ea 0B       		.uleb128 0xb
 3688 00eb 3B       		.uleb128 0x3b
 3689 00ec 05       		.uleb128 0x5
 3690 00ed 01       		.uleb128 0x1
 3691 00ee 13       		.uleb128 0x13
 3692 00ef 00       		.byte	0
 3693 00f0 00       		.byte	0
 3694 00f1 14       		.uleb128 0x14
 3695 00f2 0D       		.uleb128 0xd
 3696 00f3 00       		.byte	0
 3697 00f4 03       		.uleb128 0x3
 3698 00f5 08       		.uleb128 0x8
 3699 00f6 3A       		.uleb128 0x3a
 3700 00f7 0B       		.uleb128 0xb
 3701 00f8 3B       		.uleb128 0x3b
 3702 00f9 05       		.uleb128 0x5
 3703 00fa 49       		.uleb128 0x49
 3704 00fb 13       		.uleb128 0x13
 3705 00fc 00       		.byte	0
 3706 00fd 00       		.byte	0
 3707 00fe 15       		.uleb128 0x15
 3708 00ff 04       		.uleb128 0x4
 3709 0100 01       		.byte	0x1
 3710 0101 0B       		.uleb128 0xb
 3711 0102 0B       		.uleb128 0xb
 3712 0103 49       		.uleb128 0x49
 3713 0104 13       		.uleb128 0x13
 3714 0105 3A       		.uleb128 0x3a
 3715 0106 0B       		.uleb128 0xb
 3716 0107 3B       		.uleb128 0x3b
 3717 0108 05       		.uleb128 0x5
 3718 0109 01       		.uleb128 0x1
 3719 010a 13       		.uleb128 0x13
 3720 010b 00       		.byte	0
 3721 010c 00       		.byte	0
 3722 010d 16       		.uleb128 0x16
 3723 010e 2E       		.uleb128 0x2e
 3724 010f 01       		.byte	0x1
 3725 0110 3F       		.uleb128 0x3f
 3726 0111 19       		.uleb128 0x19
 3727 0112 03       		.uleb128 0x3
 3728 0113 0E       		.uleb128 0xe
 3729 0114 3A       		.uleb128 0x3a
 3730 0115 0B       		.uleb128 0xb
 3731 0116 3B       		.uleb128 0x3b
 3732 0117 05       		.uleb128 0x5
 3733 0118 27       		.uleb128 0x27
 3734 0119 19       		.uleb128 0x19
 3735 011a 11       		.uleb128 0x11
 3736 011b 01       		.uleb128 0x1
 3737 011c 12       		.uleb128 0x12
 3738 011d 06       		.uleb128 0x6
 3739 011e 40       		.uleb128 0x40
 3740 011f 18       		.uleb128 0x18
 3741 0120 9742     		.uleb128 0x2117
 3742 0122 19       		.uleb128 0x19
 3743 0123 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 91


 3744 0124 13       		.uleb128 0x13
 3745 0125 00       		.byte	0
 3746 0126 00       		.byte	0
 3747 0127 17       		.uleb128 0x17
 3748 0128 898201   		.uleb128 0x4109
 3749 012b 00       		.byte	0
 3750 012c 11       		.uleb128 0x11
 3751 012d 01       		.uleb128 0x1
 3752 012e 31       		.uleb128 0x31
 3753 012f 13       		.uleb128 0x13
 3754 0130 00       		.byte	0
 3755 0131 00       		.byte	0
 3756 0132 18       		.uleb128 0x18
 3757 0133 898201   		.uleb128 0x4109
 3758 0136 01       		.byte	0x1
 3759 0137 11       		.uleb128 0x11
 3760 0138 01       		.uleb128 0x1
 3761 0139 31       		.uleb128 0x31
 3762 013a 13       		.uleb128 0x13
 3763 013b 01       		.uleb128 0x1
 3764 013c 13       		.uleb128 0x13
 3765 013d 00       		.byte	0
 3766 013e 00       		.byte	0
 3767 013f 19       		.uleb128 0x19
 3768 0140 8A8201   		.uleb128 0x410a
 3769 0143 00       		.byte	0
 3770 0144 02       		.uleb128 0x2
 3771 0145 18       		.uleb128 0x18
 3772 0146 9142     		.uleb128 0x2111
 3773 0148 18       		.uleb128 0x18
 3774 0149 00       		.byte	0
 3775 014a 00       		.byte	0
 3776 014b 1A       		.uleb128 0x1a
 3777 014c 898201   		.uleb128 0x4109
 3778 014f 01       		.byte	0x1
 3779 0150 11       		.uleb128 0x11
 3780 0151 01       		.uleb128 0x1
 3781 0152 31       		.uleb128 0x31
 3782 0153 13       		.uleb128 0x13
 3783 0154 00       		.byte	0
 3784 0155 00       		.byte	0
 3785 0156 1B       		.uleb128 0x1b
 3786 0157 34       		.uleb128 0x34
 3787 0158 00       		.byte	0
 3788 0159 03       		.uleb128 0x3
 3789 015a 08       		.uleb128 0x8
 3790 015b 3A       		.uleb128 0x3a
 3791 015c 0B       		.uleb128 0xb
 3792 015d 3B       		.uleb128 0x3b
 3793 015e 05       		.uleb128 0x5
 3794 015f 49       		.uleb128 0x49
 3795 0160 13       		.uleb128 0x13
 3796 0161 02       		.uleb128 0x2
 3797 0162 17       		.uleb128 0x17
 3798 0163 00       		.byte	0
 3799 0164 00       		.byte	0
 3800 0165 1C       		.uleb128 0x1c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 92


 3801 0166 05       		.uleb128 0x5
 3802 0167 00       		.byte	0
 3803 0168 03       		.uleb128 0x3
 3804 0169 0E       		.uleb128 0xe
 3805 016a 3A       		.uleb128 0x3a
 3806 016b 0B       		.uleb128 0xb
 3807 016c 3B       		.uleb128 0x3b
 3808 016d 05       		.uleb128 0x5
 3809 016e 49       		.uleb128 0x49
 3810 016f 13       		.uleb128 0x13
 3811 0170 02       		.uleb128 0x2
 3812 0171 17       		.uleb128 0x17
 3813 0172 00       		.byte	0
 3814 0173 00       		.byte	0
 3815 0174 1D       		.uleb128 0x1d
 3816 0175 05       		.uleb128 0x5
 3817 0176 00       		.byte	0
 3818 0177 03       		.uleb128 0x3
 3819 0178 0E       		.uleb128 0xe
 3820 0179 3A       		.uleb128 0x3a
 3821 017a 0B       		.uleb128 0xb
 3822 017b 3B       		.uleb128 0x3b
 3823 017c 05       		.uleb128 0x5
 3824 017d 49       		.uleb128 0x49
 3825 017e 13       		.uleb128 0x13
 3826 017f 02       		.uleb128 0x2
 3827 0180 18       		.uleb128 0x18
 3828 0181 00       		.byte	0
 3829 0182 00       		.byte	0
 3830 0183 1E       		.uleb128 0x1e
 3831 0184 2E       		.uleb128 0x2e
 3832 0185 01       		.byte	0x1
 3833 0186 3F       		.uleb128 0x3f
 3834 0187 19       		.uleb128 0x19
 3835 0188 03       		.uleb128 0x3
 3836 0189 0E       		.uleb128 0xe
 3837 018a 3A       		.uleb128 0x3a
 3838 018b 0B       		.uleb128 0xb
 3839 018c 3B       		.uleb128 0x3b
 3840 018d 05       		.uleb128 0x5
 3841 018e 27       		.uleb128 0x27
 3842 018f 19       		.uleb128 0x19
 3843 0190 11       		.uleb128 0x11
 3844 0191 01       		.uleb128 0x1
 3845 0192 12       		.uleb128 0x12
 3846 0193 06       		.uleb128 0x6
 3847 0194 40       		.uleb128 0x40
 3848 0195 18       		.uleb128 0x18
 3849 0196 9642     		.uleb128 0x2116
 3850 0198 19       		.uleb128 0x19
 3851 0199 01       		.uleb128 0x1
 3852 019a 13       		.uleb128 0x13
 3853 019b 00       		.byte	0
 3854 019c 00       		.byte	0
 3855 019d 1F       		.uleb128 0x1f
 3856 019e 2E       		.uleb128 0x2e
 3857 019f 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 93


 3858 01a0 3F       		.uleb128 0x3f
 3859 01a1 19       		.uleb128 0x19
 3860 01a2 03       		.uleb128 0x3
 3861 01a3 0E       		.uleb128 0xe
 3862 01a4 3A       		.uleb128 0x3a
 3863 01a5 0B       		.uleb128 0xb
 3864 01a6 3B       		.uleb128 0x3b
 3865 01a7 05       		.uleb128 0x5
 3866 01a8 27       		.uleb128 0x27
 3867 01a9 19       		.uleb128 0x19
 3868 01aa 49       		.uleb128 0x49
 3869 01ab 13       		.uleb128 0x13
 3870 01ac 11       		.uleb128 0x11
 3871 01ad 01       		.uleb128 0x1
 3872 01ae 12       		.uleb128 0x12
 3873 01af 06       		.uleb128 0x6
 3874 01b0 40       		.uleb128 0x40
 3875 01b1 18       		.uleb128 0x18
 3876 01b2 9742     		.uleb128 0x2117
 3877 01b4 19       		.uleb128 0x19
 3878 01b5 01       		.uleb128 0x1
 3879 01b6 13       		.uleb128 0x13
 3880 01b7 00       		.byte	0
 3881 01b8 00       		.byte	0
 3882 01b9 20       		.uleb128 0x20
 3883 01ba 34       		.uleb128 0x34
 3884 01bb 00       		.byte	0
 3885 01bc 03       		.uleb128 0x3
 3886 01bd 0E       		.uleb128 0xe
 3887 01be 3A       		.uleb128 0x3a
 3888 01bf 0B       		.uleb128 0xb
 3889 01c0 3B       		.uleb128 0x3b
 3890 01c1 05       		.uleb128 0x5
 3891 01c2 49       		.uleb128 0x49
 3892 01c3 13       		.uleb128 0x13
 3893 01c4 02       		.uleb128 0x2
 3894 01c5 18       		.uleb128 0x18
 3895 01c6 00       		.byte	0
 3896 01c7 00       		.byte	0
 3897 01c8 21       		.uleb128 0x21
 3898 01c9 34       		.uleb128 0x34
 3899 01ca 00       		.byte	0
 3900 01cb 03       		.uleb128 0x3
 3901 01cc 0E       		.uleb128 0xe
 3902 01cd 3A       		.uleb128 0x3a
 3903 01ce 0B       		.uleb128 0xb
 3904 01cf 3B       		.uleb128 0x3b
 3905 01d0 05       		.uleb128 0x5
 3906 01d1 49       		.uleb128 0x49
 3907 01d2 13       		.uleb128 0x13
 3908 01d3 02       		.uleb128 0x2
 3909 01d4 17       		.uleb128 0x17
 3910 01d5 00       		.byte	0
 3911 01d6 00       		.byte	0
 3912 01d7 22       		.uleb128 0x22
 3913 01d8 34       		.uleb128 0x34
 3914 01d9 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 94


 3915 01da 03       		.uleb128 0x3
 3916 01db 0E       		.uleb128 0xe
 3917 01dc 3A       		.uleb128 0x3a
 3918 01dd 0B       		.uleb128 0xb
 3919 01de 3B       		.uleb128 0x3b
 3920 01df 05       		.uleb128 0x5
 3921 01e0 49       		.uleb128 0x49
 3922 01e1 13       		.uleb128 0x13
 3923 01e2 1C       		.uleb128 0x1c
 3924 01e3 0B       		.uleb128 0xb
 3925 01e4 00       		.byte	0
 3926 01e5 00       		.byte	0
 3927 01e6 23       		.uleb128 0x23
 3928 01e7 26       		.uleb128 0x26
 3929 01e8 00       		.byte	0
 3930 01e9 49       		.uleb128 0x49
 3931 01ea 13       		.uleb128 0x13
 3932 01eb 00       		.byte	0
 3933 01ec 00       		.byte	0
 3934 01ed 24       		.uleb128 0x24
 3935 01ee 2E       		.uleb128 0x2e
 3936 01ef 01       		.byte	0x1
 3937 01f0 3F       		.uleb128 0x3f
 3938 01f1 19       		.uleb128 0x19
 3939 01f2 03       		.uleb128 0x3
 3940 01f3 0E       		.uleb128 0xe
 3941 01f4 3A       		.uleb128 0x3a
 3942 01f5 0B       		.uleb128 0xb
 3943 01f6 3B       		.uleb128 0x3b
 3944 01f7 05       		.uleb128 0x5
 3945 01f8 27       		.uleb128 0x27
 3946 01f9 19       		.uleb128 0x19
 3947 01fa 49       		.uleb128 0x49
 3948 01fb 13       		.uleb128 0x13
 3949 01fc 8701     		.uleb128 0x87
 3950 01fe 19       		.uleb128 0x19
 3951 01ff 11       		.uleb128 0x11
 3952 0200 01       		.uleb128 0x1
 3953 0201 12       		.uleb128 0x12
 3954 0202 06       		.uleb128 0x6
 3955 0203 40       		.uleb128 0x40
 3956 0204 18       		.uleb128 0x18
 3957 0205 9742     		.uleb128 0x2117
 3958 0207 19       		.uleb128 0x19
 3959 0208 01       		.uleb128 0x1
 3960 0209 13       		.uleb128 0x13
 3961 020a 00       		.byte	0
 3962 020b 00       		.byte	0
 3963 020c 25       		.uleb128 0x25
 3964 020d 34       		.uleb128 0x34
 3965 020e 00       		.byte	0
 3966 020f 03       		.uleb128 0x3
 3967 0210 0E       		.uleb128 0xe
 3968 0211 3A       		.uleb128 0x3a
 3969 0212 0B       		.uleb128 0xb
 3970 0213 3B       		.uleb128 0x3b
 3971 0214 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 95


 3972 0215 49       		.uleb128 0x49
 3973 0216 13       		.uleb128 0x13
 3974 0217 3F       		.uleb128 0x3f
 3975 0218 19       		.uleb128 0x19
 3976 0219 3C       		.uleb128 0x3c
 3977 021a 19       		.uleb128 0x19
 3978 021b 00       		.byte	0
 3979 021c 00       		.byte	0
 3980 021d 26       		.uleb128 0x26
 3981 021e 34       		.uleb128 0x34
 3982 021f 00       		.byte	0
 3983 0220 03       		.uleb128 0x3
 3984 0221 0E       		.uleb128 0xe
 3985 0222 3A       		.uleb128 0x3a
 3986 0223 0B       		.uleb128 0xb
 3987 0224 3B       		.uleb128 0x3b
 3988 0225 0B       		.uleb128 0xb
 3989 0226 49       		.uleb128 0x49
 3990 0227 13       		.uleb128 0x13
 3991 0228 3F       		.uleb128 0x3f
 3992 0229 19       		.uleb128 0x19
 3993 022a 02       		.uleb128 0x2
 3994 022b 18       		.uleb128 0x18
 3995 022c 00       		.byte	0
 3996 022d 00       		.byte	0
 3997 022e 27       		.uleb128 0x27
 3998 022f 34       		.uleb128 0x34
 3999 0230 00       		.byte	0
 4000 0231 03       		.uleb128 0x3
 4001 0232 08       		.uleb128 0x8
 4002 0233 3A       		.uleb128 0x3a
 4003 0234 0B       		.uleb128 0xb
 4004 0235 3B       		.uleb128 0x3b
 4005 0236 0B       		.uleb128 0xb
 4006 0237 49       		.uleb128 0x49
 4007 0238 13       		.uleb128 0x13
 4008 0239 3F       		.uleb128 0x3f
 4009 023a 19       		.uleb128 0x19
 4010 023b 02       		.uleb128 0x2
 4011 023c 18       		.uleb128 0x18
 4012 023d 00       		.byte	0
 4013 023e 00       		.byte	0
 4014 023f 28       		.uleb128 0x28
 4015 0240 34       		.uleb128 0x34
 4016 0241 00       		.byte	0
 4017 0242 03       		.uleb128 0x3
 4018 0243 0E       		.uleb128 0xe
 4019 0244 3A       		.uleb128 0x3a
 4020 0245 0B       		.uleb128 0xb
 4021 0246 3B       		.uleb128 0x3b
 4022 0247 05       		.uleb128 0x5
 4023 0248 49       		.uleb128 0x49
 4024 0249 13       		.uleb128 0x13
 4025 024a 3F       		.uleb128 0x3f
 4026 024b 19       		.uleb128 0x19
 4027 024c 02       		.uleb128 0x2
 4028 024d 18       		.uleb128 0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 96


 4029 024e 00       		.byte	0
 4030 024f 00       		.byte	0
 4031 0250 29       		.uleb128 0x29
 4032 0251 2E       		.uleb128 0x2e
 4033 0252 00       		.byte	0
 4034 0253 3F       		.uleb128 0x3f
 4035 0254 19       		.uleb128 0x19
 4036 0255 3C       		.uleb128 0x3c
 4037 0256 19       		.uleb128 0x19
 4038 0257 6E       		.uleb128 0x6e
 4039 0258 0E       		.uleb128 0xe
 4040 0259 03       		.uleb128 0x3
 4041 025a 0E       		.uleb128 0xe
 4042 025b 3A       		.uleb128 0x3a
 4043 025c 0B       		.uleb128 0xb
 4044 025d 3B       		.uleb128 0x3b
 4045 025e 0B       		.uleb128 0xb
 4046 025f 00       		.byte	0
 4047 0260 00       		.byte	0
 4048 0261 2A       		.uleb128 0x2a
 4049 0262 2E       		.uleb128 0x2e
 4050 0263 00       		.byte	0
 4051 0264 3F       		.uleb128 0x3f
 4052 0265 19       		.uleb128 0x19
 4053 0266 3C       		.uleb128 0x3c
 4054 0267 19       		.uleb128 0x19
 4055 0268 6E       		.uleb128 0x6e
 4056 0269 0E       		.uleb128 0xe
 4057 026a 03       		.uleb128 0x3
 4058 026b 0E       		.uleb128 0xe
 4059 026c 00       		.byte	0
 4060 026d 00       		.byte	0
 4061 026e 2B       		.uleb128 0x2b
 4062 026f 2E       		.uleb128 0x2e
 4063 0270 00       		.byte	0
 4064 0271 3F       		.uleb128 0x3f
 4065 0272 19       		.uleb128 0x19
 4066 0273 3C       		.uleb128 0x3c
 4067 0274 19       		.uleb128 0x19
 4068 0275 6E       		.uleb128 0x6e
 4069 0276 0E       		.uleb128 0xe
 4070 0277 03       		.uleb128 0x3
 4071 0278 0E       		.uleb128 0xe
 4072 0279 3A       		.uleb128 0x3a
 4073 027a 0B       		.uleb128 0xb
 4074 027b 3B       		.uleb128 0x3b
 4075 027c 05       		.uleb128 0x5
 4076 027d 00       		.byte	0
 4077 027e 00       		.byte	0
 4078 027f 00       		.byte	0
 4079              		.section	.debug_loc,"",%progbits
 4080              	.Ldebug_loc0:
 4081              	.LLST0:
 4082 0000 2A000000 		.4byte	.LVL9
 4083 0004 2E000000 		.4byte	.LVL10
 4084 0008 0200     		.2byte	0x2
 4085 000a 30       		.byte	0x30
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 97


 4086 000b 9F       		.byte	0x9f
 4087 000c 2E000000 		.4byte	.LVL10
 4088 0010 4A000000 		.4byte	.LVL15
 4089 0014 0100     		.2byte	0x1
 4090 0016 54       		.byte	0x54
 4091 0017 00000000 		.4byte	0
 4092 001b 00000000 		.4byte	0
 4093              	.LLST1:
 4094 001f 00000000 		.4byte	.LVL16
 4095 0023 12000000 		.4byte	.LVL17
 4096 0027 0100     		.2byte	0x1
 4097 0029 50       		.byte	0x50
 4098 002a 12000000 		.4byte	.LVL17
 4099 002e 1C000000 		.4byte	.LFE32
 4100 0032 0400     		.2byte	0x4
 4101 0034 F3       		.byte	0xf3
 4102 0035 01       		.uleb128 0x1
 4103 0036 50       		.byte	0x50
 4104 0037 9F       		.byte	0x9f
 4105 0038 00000000 		.4byte	0
 4106 003c 00000000 		.4byte	0
 4107              	.LLST2:
 4108 0040 08000000 		.4byte	.LVL19
 4109 0044 0B000000 		.4byte	.LVL20-1
 4110 0048 0100     		.2byte	0x1
 4111 004a 50       		.byte	0x50
 4112 004b 00000000 		.4byte	0
 4113 004f 00000000 		.4byte	0
 4114              	.LLST3:
 4115 0053 00000000 		.4byte	.LVL21
 4116 0057 08000000 		.4byte	.LVL22
 4117 005b 0100     		.2byte	0x1
 4118 005d 50       		.byte	0x50
 4119 005e 08000000 		.4byte	.LVL22
 4120 0062 0E000000 		.4byte	.LFE36
 4121 0066 0400     		.2byte	0x4
 4122 0068 F3       		.byte	0xf3
 4123 0069 01       		.uleb128 0x1
 4124 006a 50       		.byte	0x50
 4125 006b 9F       		.byte	0x9f
 4126 006c 00000000 		.4byte	0
 4127 0070 00000000 		.4byte	0
 4128              	.LLST4:
 4129 0074 1C000000 		.4byte	.LVL26
 4130 0078 E8000000 		.4byte	.LVL44
 4131 007c 0100     		.2byte	0x1
 4132 007e 54       		.byte	0x54
 4133 007f 1E010000 		.4byte	.LVL46
 4134 0083 20010000 		.4byte	.LVL47
 4135 0087 0100     		.2byte	0x1
 4136 0089 54       		.byte	0x54
 4137 008a 20010000 		.4byte	.LVL47
 4138 008e 3B010000 		.4byte	.LVL50-1
 4139 0092 0200     		.2byte	0x2
 4140 0094 74       		.byte	0x74
 4141 0095 02       		.sleb128 2
 4142 0096 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 98


 4143 009a 00000000 		.4byte	0
 4144              	.LLST5:
 4145 009e 1A000000 		.4byte	.LVL25
 4146 00a2 67000000 		.4byte	.LVL37-1
 4147 00a6 0100     		.2byte	0x1
 4148 00a8 50       		.byte	0x50
 4149 00a9 B8000000 		.4byte	.LVL40
 4150 00ad BA000000 		.4byte	.LVL41
 4151 00b1 0100     		.2byte	0x1
 4152 00b3 50       		.byte	0x50
 4153 00b4 1E010000 		.4byte	.LVL46
 4154 00b8 2C010000 		.4byte	.LVL49
 4155 00bc 0100     		.2byte	0x1
 4156 00be 50       		.byte	0x50
 4157 00bf 00000000 		.4byte	0
 4158 00c3 00000000 		.4byte	0
 4159              	.LLST6:
 4160 00c7 22000000 		.4byte	.LVL27
 4161 00cb 28000000 		.4byte	.LVL28
 4162 00cf 0200     		.2byte	0x2
 4163 00d1 30       		.byte	0x30
 4164 00d2 9F       		.byte	0x9f
 4165 00d3 28000000 		.4byte	.LVL28
 4166 00d7 32000000 		.4byte	.LVL31
 4167 00db 0100     		.2byte	0x1
 4168 00dd 53       		.byte	0x53
 4169 00de 34000000 		.4byte	.LVL32
 4170 00e2 3E000000 		.4byte	.LVL33
 4171 00e6 0100     		.2byte	0x1
 4172 00e8 53       		.byte	0x53
 4173 00e9 50000000 		.4byte	.LVL35
 4174 00ed 52000000 		.4byte	.LVL36
 4175 00f1 0100     		.2byte	0x1
 4176 00f3 53       		.byte	0x53
 4177 00f4 C8010000 		.4byte	.LVL52
 4178 00f8 CE010000 		.4byte	.LVL53
 4179 00fc 0200     		.2byte	0x2
 4180 00fe 30       		.byte	0x30
 4181 00ff 9F       		.byte	0x9f
 4182 0100 CE010000 		.4byte	.LVL53
 4183 0104 D8010000 		.4byte	.LVL56
 4184 0108 0100     		.2byte	0x1
 4185 010a 53       		.byte	0x53
 4186 010b DA010000 		.4byte	.LVL57
 4187 010f E9010000 		.4byte	.LVL59-1
 4188 0113 0100     		.2byte	0x1
 4189 0115 53       		.byte	0x53
 4190 0116 00000000 		.4byte	0
 4191 011a 00000000 		.4byte	0
 4192              	.LLST7:
 4193 011e 22000000 		.4byte	.LVL27
 4194 0122 28000000 		.4byte	.LVL28
 4195 0126 0200     		.2byte	0x2
 4196 0128 30       		.byte	0x30
 4197 0129 9F       		.byte	0x9f
 4198 012a 28000000 		.4byte	.LVL28
 4199 012e 2E000000 		.4byte	.LVL29
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 99


 4200 0132 0100     		.2byte	0x1
 4201 0134 52       		.byte	0x52
 4202 0135 30000000 		.4byte	.LVL30
 4203 0139 42000000 		.4byte	.LVL34
 4204 013d 0100     		.2byte	0x1
 4205 013f 52       		.byte	0x52
 4206 0140 50000000 		.4byte	.LVL35
 4207 0144 67000000 		.4byte	.LVL37-1
 4208 0148 0100     		.2byte	0x1
 4209 014a 52       		.byte	0x52
 4210 014b B8000000 		.4byte	.LVL40
 4211 014f C0000000 		.4byte	.LVL42
 4212 0153 0100     		.2byte	0x1
 4213 0155 52       		.byte	0x52
 4214 0156 1E010000 		.4byte	.LVL46
 4215 015a 2A010000 		.4byte	.LVL48
 4216 015e 0100     		.2byte	0x1
 4217 0160 52       		.byte	0x52
 4218 0161 C8010000 		.4byte	.LVL52
 4219 0165 CE010000 		.4byte	.LVL53
 4220 0169 0200     		.2byte	0x2
 4221 016b 30       		.byte	0x30
 4222 016c 9F       		.byte	0x9f
 4223 016d CE010000 		.4byte	.LVL53
 4224 0171 D4010000 		.4byte	.LVL54
 4225 0175 0100     		.2byte	0x1
 4226 0177 52       		.byte	0x52
 4227 0178 D6010000 		.4byte	.LVL55
 4228 017c E2010000 		.4byte	.LVL58
 4229 0180 0100     		.2byte	0x1
 4230 0182 52       		.byte	0x52
 4231 0183 00000000 		.4byte	0
 4232 0187 00000000 		.4byte	0
 4233              	.LLST8:
 4234 018b 00000000 		.4byte	.LVL62
 4235 018f 19000000 		.4byte	.LVL64-1
 4236 0193 0100     		.2byte	0x1
 4237 0195 50       		.byte	0x50
 4238 0196 19000000 		.4byte	.LVL64-1
 4239 019a 24000000 		.4byte	.LFE39
 4240 019e 0400     		.2byte	0x4
 4241 01a0 F3       		.byte	0xf3
 4242 01a1 01       		.uleb128 0x1
 4243 01a2 50       		.byte	0x50
 4244 01a3 9F       		.byte	0x9f
 4245 01a4 00000000 		.4byte	0
 4246 01a8 00000000 		.4byte	0
 4247              	.LLST9:
 4248 01ac 0A000000 		.4byte	.LVL63
 4249 01b0 1E000000 		.4byte	.LVL65
 4250 01b4 0100     		.2byte	0x1
 4251 01b6 54       		.byte	0x54
 4252 01b7 1E000000 		.4byte	.LVL65
 4253 01bb 24000000 		.4byte	.LFE39
 4254 01bf 0500     		.2byte	0x5
 4255 01c1 03       		.byte	0x3
 4256 01c2 00000000 		.4byte	inAuto
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 100


 4257 01c6 00000000 		.4byte	0
 4258 01ca 00000000 		.4byte	0
 4259              		.section	.debug_aranges,"",%progbits
 4260 0000 84000000 		.4byte	0x84
 4261 0004 0200     		.2byte	0x2
 4262 0006 00000000 		.4byte	.Ldebug_info0
 4263 000a 04       		.byte	0x4
 4264 000b 00       		.byte	0
 4265 000c 0000     		.2byte	0
 4266 000e 0000     		.2byte	0
 4267 0010 00000000 		.4byte	.LFB43
 4268 0014 24000000 		.4byte	.LFE43-.LFB43
 4269 0018 00000000 		.4byte	.LFB44
 4270 001c 1C000000 		.4byte	.LFE44-.LFB44
 4271 0020 00000000 		.4byte	.LFB45
 4272 0024 60000000 		.4byte	.LFE45-.LFB45
 4273 0028 00000000 		.4byte	.LFB32
 4274 002c 1C000000 		.4byte	.LFE32-.LFB32
 4275 0030 00000000 		.4byte	.LFB33
 4276 0034 1C000000 		.4byte	.LFE33-.LFB33
 4277 0038 00000000 		.4byte	.LFB34
 4278 003c 18000000 		.4byte	.LFE34-.LFB34
 4279 0040 00000000 		.4byte	.LFB36
 4280 0044 0E000000 		.4byte	.LFE36-.LFB36
 4281 0048 00000000 		.4byte	.LFB37
 4282 004c 44000000 		.4byte	.LFE37-.LFB37
 4283 0050 00000000 		.4byte	.LFB35
 4284 0054 58020000 		.4byte	.LFE35-.LFB35
 4285 0058 00000000 		.4byte	.LFB38
 4286 005c 30000000 		.4byte	.LFE38-.LFB38
 4287 0060 00000000 		.4byte	.LFB39
 4288 0064 24000000 		.4byte	.LFE39-.LFB39
 4289 0068 00000000 		.4byte	.LFB40
 4290 006c 0C010000 		.4byte	.LFE40-.LFB40
 4291 0070 00000000 		.4byte	.LFB42
 4292 0074 BC000000 		.4byte	.LFE42-.LFB42
 4293 0078 00000000 		.4byte	.LFB41
 4294 007c 50010000 		.4byte	.LFE41-.LFB41
 4295 0080 00000000 		.4byte	0
 4296 0084 00000000 		.4byte	0
 4297              		.section	.debug_ranges,"",%progbits
 4298              	.Ldebug_ranges0:
 4299 0000 00000000 		.4byte	.LFB43
 4300 0004 24000000 		.4byte	.LFE43
 4301 0008 00000000 		.4byte	.LFB44
 4302 000c 1C000000 		.4byte	.LFE44
 4303 0010 00000000 		.4byte	.LFB45
 4304 0014 60000000 		.4byte	.LFE45
 4305 0018 00000000 		.4byte	.LFB32
 4306 001c 1C000000 		.4byte	.LFE32
 4307 0020 00000000 		.4byte	.LFB33
 4308 0024 1C000000 		.4byte	.LFE33
 4309 0028 00000000 		.4byte	.LFB34
 4310 002c 18000000 		.4byte	.LFE34
 4311 0030 00000000 		.4byte	.LFB36
 4312 0034 0E000000 		.4byte	.LFE36
 4313 0038 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 101


 4314 003c 44000000 		.4byte	.LFE37
 4315 0040 00000000 		.4byte	.LFB35
 4316 0044 58020000 		.4byte	.LFE35
 4317 0048 00000000 		.4byte	.LFB38
 4318 004c 30000000 		.4byte	.LFE38
 4319 0050 00000000 		.4byte	.LFB39
 4320 0054 24000000 		.4byte	.LFE39
 4321 0058 00000000 		.4byte	.LFB40
 4322 005c 0C010000 		.4byte	.LFE40
 4323 0060 00000000 		.4byte	.LFB42
 4324 0064 BC000000 		.4byte	.LFE42
 4325 0068 00000000 		.4byte	.LFB41
 4326 006c 50010000 		.4byte	.LFE41
 4327 0070 00000000 		.4byte	0
 4328 0074 00000000 		.4byte	0
 4329              		.section	.debug_line,"",%progbits
 4330              	.Ldebug_line0:
 4331 0000 73040000 		.section	.debug_str,"MS",%progbits,1
 4331      02006302 
 4331      00000201 
 4331      FB0E0D00 
 4331      01010101 
 4332              	.LASF169:
 4333 0000 43794465 		.ascii	"CyDelay\000"
 4333      6C617900 
 4334              	.LASF136:
 4335 0008 72784D65 		.ascii	"rxMessage\000"
 4335      73736167 
 4335      6500
 4336              	.LASF177:
 4337 0012 6D61696E 		.ascii	"main.c\000"
 4337      2E6300
 4338              	.LASF75:
 4339 0019 6D6F746F 		.ascii	"motor_current\000"
 4339      725F6375 
 4339      7272656E 
 4339      7400
 4340              	.LASF104:
 4341 0027 62726D73 		.ascii	"brmsRG4Mask\000"
 4341      5247344D 
 4341      61736B00 
 4342              	.LASF79:
 4343 0033 74786D73 		.ascii	"txmsClear\000"
 4343      436C6561 
 4343      7200
 4344              	.LASF89:
 4345 003d 6F757470 		.ascii	"output\000"
 4345      757400
 4346              	.LASF87:
 4347 0044 4D6F746F 		.ascii	"MotorCurrentRead\000"
 4347      72437572 
 4347      72656E74 
 4347      52656164 
 4347      00
 4348              	.LASF100:
 4349 0055 62726D73 		.ascii	"brmsTask\000"
 4349      5461736B 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 102


 4349      00
 4350              	.LASF58:
 4351 005e 65666673 		.ascii	"effsetdelta\000"
 4351      65746465 
 4351      6C746100 
 4352              	.LASF37:
 4353 006a 6673456E 		.ascii	"fsEncoder\000"
 4353      636F6465 
 4353      7200
 4354              	.LASF31:
 4355 0074 6373556E 		.ascii	"csUnconfig\000"
 4355      636F6E66 
 4355      696700
 4356              	.LASF96:
 4357 007f 6E657741 		.ascii	"newAuto\000"
 4357      75746F00 
 4358              	.LASF15:
 4359 0087 756E7369 		.ascii	"unsigned int\000"
 4359      676E6564 
 4359      20696E74 
 4359      00
 4360              	.LASF101:
 4361 0094 62726D73 		.ascii	"brmsRG1Mask\000"
 4361      5247314D 
 4361      61736B00 
 4362              	.LASF173:
 4363 00a0 436F756E 		.ascii	"Counter_1_Start\000"
 4363      7465725F 
 4363      315F5374 
 4363      61727400 
 4364              	.LASF98:
 4365 00b0 72756E52 		.ascii	"runRateGroup1_PID\000"
 4365      61746547 
 4365      726F7570 
 4365      315F5049 
 4365      4400
 4366              	.LASF62:
 4367 00c2 636C6561 		.ascii	"clearfaults\000"
 4367      72666175 
 4367      6C747300 
 4368              	.LASF8:
 4369 00ce 5F5F696E 		.ascii	"__int32_t\000"
 4369      7433325F 
 4369      7400
 4370              	.LASF144:
 4371 00d8 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4371      5F494E5F 
 4371      436C6561 
 4371      72496E74 
 4371      65727275 
 4372              	.LASF175:
 4373 00ef 4C45445F 		.ascii	"LED_Write\000"
 4373      57726974 
 4373      6500
 4374              	.LASF83:
 4375 00f9 486F6D65 		.ascii	"HomeIsrHandler\000"
 4375      49737248 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 103


 4375      616E646C 
 4375      657200
 4376              	.LASF81:
 4377 0108 74784D65 		.ascii	"txMessageStates_t\000"
 4377      73736167 
 4377      65537461 
 4377      7465735F 
 4377      7400
 4378              	.LASF86:
 4379 011a 436C6561 		.ascii	"ClearFault\000"
 4379      72466175 
 4379      6C7400
 4380              	.LASF168:
 4381 0125 4932435F 		.ascii	"I2C_Start\000"
 4381      53746172 
 4381      7400
 4382              	.LASF107:
 4383 012f 4C617374 		.ascii	"LastJog\000"
 4383      4A6F6700 
 4384              	.LASF32:
 4385 0137 63735265 		.ascii	"csReady\000"
 4385      61647900 
 4386              	.LASF149:
 4387 013f 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4387      315F5370 
 4387      69556172 
 4387      74436C65 
 4387      61725478 
 4388              	.LASF21:
 4389 015a 75696E74 		.ascii	"uint32_t\000"
 4389      33325F74 
 4389      00
 4390              	.LASF16:
 4391 0163 696E7438 		.ascii	"int8_t\000"
 4391      5F7400
 4392              	.LASF50:
 4393 016a 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4393      73736167 
 4393      655F6F70 
 4393      636F6465 
 4393      735F7400 
 4394              	.LASF63:
 4395 017e 72784D65 		.ascii	"rxMessage_status_t\000"
 4395      73736167 
 4395      655F7374 
 4395      61747573 
 4395      5F7400
 4396              	.LASF85:
 4397 0191 41737365 		.ascii	"AssertFault\000"
 4397      72744661 
 4397      756C7400 
 4398              	.LASF24:
 4399 019d 666C6F61 		.ascii	"float\000"
 4399      7400
 4400              	.LASF166:
 4401 01a3 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4401      7370695F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 104


 4401      73735F53 
 4401      74617274 
 4401      457800
 4402              	.LASF51:
 4403 01b6 63686563 		.ascii	"checksum\000"
 4403      6B73756D 
 4403      00
 4404              	.LASF68:
 4405 01bf 73657465 		.ascii	"setenc\000"
 4405      6E6300
 4406              	.LASF18:
 4407 01c6 696E7431 		.ascii	"int16_t\000"
 4407      365F7400 
 4408              	.LASF91:
 4409 01ce 72657375 		.ascii	"result\000"
 4409      6C7400
 4410              	.LASF14:
 4411 01d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4411      206C6F6E 
 4411      6720756E 
 4411      7369676E 
 4411      65642069 
 4412              	.LASF112:
 4413 01ec 5049445F 		.ascii	"PID_EffSetDelta\000"
 4413      45666653 
 4413      65744465 
 4413      6C746100 
 4414              	.LASF113:
 4415 01fc 6C617374 		.ascii	"lastTime\000"
 4415      54696D65 
 4415      00
 4416              	.LASF122:
 4417 0205 70776D4D 		.ascii	"pwmMin\000"
 4417      696E00
 4418              	.LASF133:
 4419 020c 4D6F746F 		.ascii	"MotorCurrent\000"
 4419      72437572 
 4419      72656E74 
 4419      00
 4420              	.LASF6:
 4421 0219 5F5F7569 		.ascii	"__uint16_t\000"
 4421      6E743136 
 4421      5F7400
 4422              	.LASF60:
 4423 0224 656E6162 		.ascii	"enable\000"
 4423      6C6500
 4424              	.LASF172:
 4425 022b 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4425      315F5772 
 4425      69746550 
 4425      6572696F 
 4425      6400
 4426              	.LASF129:
 4427 023d 436F6E66 		.ascii	"ConfigState\000"
 4427      69675374 
 4427      61746500 
 4428              	.LASF176:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 105


 4429 0249 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4429      43313120 
 4429      352E342E 
 4429      31203230 
 4429      31363036 
 4430 027c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4430      20726576 
 4430      6973696F 
 4430      6E203233 
 4430      37373135 
 4431 02af 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4431      66756E63 
 4431      74696F6E 
 4431      2D736563 
 4431      74696F6E 
 4432              	.LASF57:
 4433 02d7 6C696D69 		.ascii	"limit_ITerm\000"
 4433      745F4954 
 4433      65726D00 
 4434              	.LASF118:
 4435 02e3 6F75744D 		.ascii	"outMax_Total\000"
 4435      61785F54 
 4435      6F74616C 
 4435      00
 4436              	.LASF160:
 4437 02f0 6973725F 		.ascii	"isr_brms_StartEx\000"
 4437      62726D73 
 4437      5F537461 
 4437      72744578 
 4437      00
 4438              	.LASF159:
 4439 0301 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4439      725F4252 
 4439      4D535F53 
 4439      74617274 
 4439      00
 4440              	.LASF97:
 4441 0312 5F426F6F 		.ascii	"_Bool\000"
 4441      6C00
 4442              	.LASF36:
 4443 0318 6673556E 		.ascii	"fsUnconfigured\000"
 4443      636F6E66 
 4443      69677572 
 4443      656400
 4444              	.LASF106:
 4445 0327 696E4175 		.ascii	"inAuto\000"
 4445      746F00
 4446              	.LASF13:
 4447 032e 5F5F7569 		.ascii	"__uint64_t\000"
 4447      6E743634 
 4447      5F7400
 4448              	.LASF153:
 4449 0339 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4449      315F5370 
 4449      69556172 
 4449      74507574 
 4449      41727261 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 106


 4450              	.LASF145:
 4451 034f 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4451      73735F43 
 4451      6C656172 
 4451      496E7465 
 4451      72727570 
 4452              	.LASF126:
 4453 0365 55707469 		.ascii	"UptimeMilliseconds\000"
 4453      6D654D69 
 4453      6C6C6973 
 4453      65636F6E 
 4453      647300
 4454              	.LASF152:
 4455 0378 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4455      7465725F 
 4455      315F5265 
 4455      6164436F 
 4455      756E7465 
 4456              	.LASF69:
 4457 038e 76657273 		.ascii	"version0\000"
 4457      696F6E30 
 4457      00
 4458              	.LASF70:
 4459 0397 76657273 		.ascii	"version1\000"
 4459      696F6E31 
 4459      00
 4460              	.LASF71:
 4461 03a0 76657273 		.ascii	"version2\000"
 4461      696F6E32 
 4461      00
 4462              	.LASF54:
 4463 03a9 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4463      73736167 
 4463      655F6F76 
 4463      65726C61 
 4463      795F7400 
 4464              	.LASF165:
 4465 03bd 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4465      7273745F 
 4465      656E636F 
 4465      6465725F 
 4465      53657450 
 4466              	.LASF115:
 4467 03d9 506F7369 		.ascii	"Position\000"
 4467      74696F6E 
 4467      00
 4468              	.LASF26:
 4469 03e2 63686172 		.ascii	"char\000"
 4469      00
 4470              	.LASF156:
 4471 03e7 5049445F 		.ascii	"PID_UpdateValues\000"
 4471      55706461 
 4471      74655661 
 4471      6C756573 
 4471      00
 4472              	.LASF94:
 4473 03f8 5049445F 		.ascii	"PID_SetMode\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 107


 4473      5365744D 
 4473      6F646500 
 4474              	.LASF88:
 4475 0404 50574D5F 		.ascii	"PWM_Set\000"
 4475      53657400 
 4476              	.LASF99:
 4477 040c 42524D53 		.ascii	"BRMS_Interrupt\000"
 4477      5F496E74 
 4477      65727275 
 4477      707400
 4478              	.LASF148:
 4479 041b 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4479      315F5370 
 4479      69556172 
 4479      74436C65 
 4479      61725278 
 4480              	.LASF53:
 4481 0436 6F70636F 		.ascii	"opcode\000"
 4481      646500
 4482              	.LASF17:
 4483 043d 75696E74 		.ascii	"uint8_t\000"
 4483      385F7400 
 4484              	.LASF67:
 4485 0445 73746174 		.ascii	"status\000"
 4485      757300
 4486              	.LASF38:
 4487 044c 6673496E 		.ascii	"fsIndex\000"
 4487      64657800 
 4488              	.LASF142:
 4489 0454 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4489      785F436F 
 4489      756E7465 
 4489      725F315F 
 4489      57726974 
 4490              	.LASF151:
 4491 0471 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4491      315F5772 
 4491      69746543 
 4491      6F6D7061 
 4491      726500
 4492              	.LASF35:
 4493 0484 66734E4F 		.ascii	"fsNONE\000"
 4493      4E4500
 4494              	.LASF139:
 4495 048b 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4495      7273745F 
 4495      656E636F 
 4495      6465725F 
 4495      436C6561 
 4496              	.LASF167:
 4497 04a8 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4497      7370695F 
 4497      73735F53 
 4497      65745072 
 4497      696F7269 
 4498              	.LASF12:
 4499 04bf 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 108


 4499      206C6F6E 
 4499      6720696E 
 4499      7400
 4500              	.LASF157:
 4501 04cd 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4501      725F4252 
 4501      4D535F43 
 4501      6C656172 
 4501      496E7465 
 4502              	.LASF40:
 4503 04e7 66734368 		.ascii	"fsChecksum\000"
 4503      65636B73 
 4503      756D00
 4504              	.LASF146:
 4505 04f2 7370695F 		.ascii	"spi_ss_Read\000"
 4505      73735F52 
 4505      65616400 
 4506              	.LASF4:
 4507 04fe 5F5F696E 		.ascii	"__int16_t\000"
 4507      7431365F 
 4507      7400
 4508              	.LASF155:
 4509 0508 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4509      585F4F55 
 4509      545F5365 
 4509      74447269 
 4509      76654D6F 
 4510              	.LASF181:
 4511 051f 6D656D73 		.ascii	"memset\000"
 4511      657400
 4512              	.LASF127:
 4513 0526 55707469 		.ascii	"UptimeMillisecondsAccumulator\000"
 4513      6D654D69 
 4513      6C6C6973 
 4513      65636F6E 
 4513      64734163 
 4514              	.LASF74:
 4515 0544 63686563 		.ascii	"checksum_errors\000"
 4515      6B73756D 
 4515      5F657272 
 4515      6F727300 
 4516              	.LASF52:
 4517 0554 73697A65 		.ascii	"size\000"
 4517      00
 4518              	.LASF178:
 4519 0559 433A5C55 		.ascii	"C:\\Users\\prichards\\proj\\acsnb-motor-cypress\\Qu"
 4519      73657273 
 4519      5C707269 
 4519      63686172 
 4519      64735C70 
 4520 0587 6164456E 		.ascii	"adEncoderRTOS.cydsn\000"
 4520      636F6465 
 4520      7252544F 
 4520      532E6379 
 4520      64736E00 
 4521              	.LASF23:
 4522 059b 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 109


 4522      333200
 4523              	.LASF80:
 4524 05a2 74786D73 		.ascii	"txmsLoaded\000"
 4524      4C6F6164 
 4524      656400
 4525              	.LASF134:
 4526 05ad 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4526      656E7449 
 4526      3243696E 
 4526      62756600 
 4527              	.LASF114:
 4528 05bd 72656653 		.ascii	"refSampleTime\000"
 4528      616D706C 
 4528      6554696D 
 4528      6500
 4529              	.LASF116:
 4530 05cb 4C617374 		.ascii	"LastPosition\000"
 4530      506F7369 
 4530      74696F6E 
 4530      00
 4531              	.LASF137:
 4532 05d8 74784D65 		.ascii	"txMessage\000"
 4532      73736167 
 4532      6500
 4533              	.LASF141:
 4534 05e2 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4534      7465725F 
 4534      315F5772 
 4534      69746543 
 4534      6F756E74 
 4535              	.LASF84:
 4536 05f9 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4536      53535F49 
 4536      73724861 
 4536      6E646C65 
 4536      7200
 4537              	.LASF0:
 4538 060b 5F5F696E 		.ascii	"__int8_t\000"
 4538      74385F74 
 4538      00
 4539              	.LASF34:
 4540 0614 436F6E66 		.ascii	"ConfigStates_t\000"
 4540      69675374 
 4540      61746573 
 4540      5F7400
 4541              	.LASF92:
 4542 0623 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4542      61746547 
 4542      726F7570 
 4542      335F5350 
 4542      4900
 4543              	.LASF161:
 4544 0635 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4544      62726D73 
 4544      5F536574 
 4544      5072696F 
 4544      72697479 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 110


 4545              	.LASF28:
 4546 064a 6C6F6E67 		.ascii	"long double\000"
 4546      20646F75 
 4546      626C6500 
 4547              	.LASF150:
 4548 0656 67657443 		.ascii	"getCurrent_mA\000"
 4548      75727265 
 4548      6E745F6D 
 4548      4100
 4549              	.LASF19:
 4550 0664 75696E74 		.ascii	"uint16_t\000"
 4550      31365F74 
 4550      00
 4551              	.LASF27:
 4552 066d 72656733 		.ascii	"reg32\000"
 4552      3200
 4553              	.LASF30:
 4554 0673 6373554E 		.ascii	"csUNDEFINED\000"
 4554      44454649 
 4554      4E454400 
 4555              	.LASF55:
 4556 067f 73657175 		.ascii	"sequence\000"
 4556      656E6365 
 4556      00
 4557              	.LASF117:
 4558 0688 4F757470 		.ascii	"Output\000"
 4558      757400
 4559              	.LASF66:
 4560 068f 636F6E66 		.ascii	"config\000"
 4560      696700
 4561              	.LASF39:
 4562 0696 66734375 		.ascii	"fsCurrentRead\000"
 4562      7272656E 
 4562      74526561 
 4562      6400
 4563              	.LASF5:
 4564 06a4 73686F72 		.ascii	"short int\000"
 4564      7420696E 
 4564      7400
 4565              	.LASF59:
 4566 06ae 72784D65 		.ascii	"rxMessage_config_t\000"
 4566      73736167 
 4566      655F636F 
 4566      6E666967 
 4566      5F7400
 4567              	.LASF109:
 4568 06c1 5049445F 		.ascii	"PID_Was_Enabled\000"
 4568      5761735F 
 4568      456E6162 
 4568      6C656400 
 4569              	.LASF108:
 4570 06d1 5049445F 		.ascii	"PID_Enabled\000"
 4570      456E6162 
 4570      6C656400 
 4571              	.LASF95:
 4572 06dd 4D6F6465 		.ascii	"Mode\000"
 4572      00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 111


 4573              	.LASF105:
 4574 06e2 62726D73 		.ascii	"brmsRG5Mask\000"
 4574      5247354D 
 4574      61736B00 
 4575              	.LASF9:
 4576 06ee 6C6F6E67 		.ascii	"long int\000"
 4576      20696E74 
 4576      00
 4577              	.LASF33:
 4578 06f7 63734D41 		.ascii	"csMAX\000"
 4578      5800
 4579              	.LASF65:
 4580 06fd 6F766572 		.ascii	"overlay\000"
 4580      6C617900 
 4581              	.LASF171:
 4582 0705 50574D5F 		.ascii	"PWM_1_Start\000"
 4582      315F5374 
 4582      61727400 
 4583              	.LASF138:
 4584 0711 74784D65 		.ascii	"txMessageState\000"
 4584      73736167 
 4584      65537461 
 4584      746500
 4585              	.LASF154:
 4586 0720 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4586      5F4F5554 
 4586      5F536574 
 4586      44726976 
 4586      654D6F64 
 4587              	.LASF90:
 4588 0736 52617750 		.ascii	"RawPosition\000"
 4588      6F736974 
 4588      696F6E00 
 4589              	.LASF135:
 4590 0742 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4590      4D657373 
 4590      61676554 
 4590      696D6553 
 4590      65636F6E 
 4591              	.LASF103:
 4592 0759 62726D73 		.ascii	"brmsRG3Mask\000"
 4592      5247334D 
 4592      61736B00 
 4593              	.LASF78:
 4594 0765 74784D65 		.ascii	"txMessage_t\000"
 4594      73736167 
 4594      655F7400 
 4595              	.LASF22:
 4596 0771 75696E74 		.ascii	"uint64_t\000"
 4596      36345F74 
 4596      00
 4597              	.LASF61:
 4598 077a 73657470 		.ascii	"setpoint\000"
 4598      6F696E74 
 4598      00
 4599              	.LASF102:
 4600 0783 62726D73 		.ascii	"brmsRG2Mask\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 112


 4600      5247324D 
 4600      61736B00 
 4601              	.LASF179:
 4602 078f 47657450 		.ascii	"GetPosition\000"
 4602      6F736974 
 4602      696F6E00 
 4603              	.LASF119:
 4604 079b 6F75744D 		.ascii	"outMax_ITerm\000"
 4604      61785F49 
 4604      5465726D 
 4604      00
 4605              	.LASF128:
 4606 07a8 55707469 		.ascii	"UptimeSeconds\000"
 4606      6D655365 
 4606      636F6E64 
 4606      7300
 4607              	.LASF121:
 4608 07b6 70776D4D 		.ascii	"pwmMax\000"
 4608      617800
 4609              	.LASF110:
 4610 07bd 5049445F 		.ascii	"PID_Setpoint\000"
 4610      53657470 
 4610      6F696E74 
 4610      00
 4611              	.LASF1:
 4612 07ca 5F5F7569 		.ascii	"__uint8_t\000"
 4612      6E74385F 
 4612      7400
 4613              	.LASF47:
 4614 07d4 6F705374 		.ascii	"opStatus\000"
 4614      61747573 
 4614      00
 4615              	.LASF147:
 4616 07dd 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 4616      315F5370 
 4616      69556172 
 4616      74526561 
 4616      64527844 
 4617              	.LASF49:
 4618 07f5 6F704D41 		.ascii	"opMAX\000"
 4618      5800
 4619              	.LASF132:
 4620 07fb 43686563 		.ascii	"ChecksumErrors\000"
 4620      6B73756D 
 4620      4572726F 
 4620      727300
 4621              	.LASF29:
 4622 080a 73697A65 		.ascii	"sizetype\000"
 4622      74797065 
 4622      00
 4623              	.LASF11:
 4624 0813 6C6F6E67 		.ascii	"long unsigned int\000"
 4624      20756E73 
 4624      69676E65 
 4624      6420696E 
 4624      7400
 4625              	.LASF163:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 113


 4626 0825 6973725F 		.ascii	"isr_home_SetPriority\000"
 4626      686F6D65 
 4626      5F536574 
 4626      5072696F 
 4626      72697479 
 4627              	.LASF20:
 4628 083a 696E7433 		.ascii	"int32_t\000"
 4628      325F7400 
 4629              	.LASF124:
 4630 0842 55707469 		.ascii	"UptimeMicroseconds\000"
 4630      6D654D69 
 4630      63726F73 
 4630      65636F6E 
 4630      647300
 4631              	.LASF72:
 4632 0855 73746174 		.ascii	"state\000"
 4632      6500
 4633              	.LASF170:
 4634 085b 5350495F 		.ascii	"SPI_1_Start\000"
 4634      315F5374 
 4634      61727400 
 4635              	.LASF3:
 4636 0867 756E7369 		.ascii	"unsigned char\000"
 4636      676E6564 
 4636      20636861 
 4636      7200
 4637              	.LASF10:
 4638 0875 5F5F7569 		.ascii	"__uint32_t\000"
 4638      6E743332 
 4638      5F7400
 4639              	.LASF45:
 4640 0880 6F70554E 		.ascii	"opUNDEFINED\000"
 4640      44454649 
 4640      4E454400 
 4641              	.LASF48:
 4642 088c 6F705365 		.ascii	"opSetEnc\000"
 4642      74456E63 
 4642      00
 4643              	.LASF130:
 4644 0895 4661756C 		.ascii	"FaultState\000"
 4644      74537461 
 4644      746500
 4645              	.LASF120:
 4646 08a0 70776D4C 		.ascii	"pwmLimit\000"
 4646      696D6974 
 4646      00
 4647              	.LASF41:
 4648 08a9 66735832 		.ascii	"fsX2\000"
 4648      00
 4649              	.LASF42:
 4650 08ae 66735833 		.ascii	"fsX3\000"
 4650      00
 4651              	.LASF43:
 4652 08b3 66735834 		.ascii	"fsX4\000"
 4652      00
 4653              	.LASF131:
 4654 08b8 436F6E66 		.ascii	"ConfigSequence\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 114


 4654      69675365 
 4654      7175656E 
 4654      636500
 4655              	.LASF123:
 4656 08c7 686F6D69 		.ascii	"homingDone\000"
 4656      6E67446F 
 4656      6E6500
 4657              	.LASF140:
 4658 08d2 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 4658      745F456E 
 4658      636F6465 
 4658      725F436C 
 4658      65617249 
 4659              	.LASF64:
 4660 08ef 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4660      73736167 
 4660      655F7365 
 4660      74656E63 
 4660      5F7400
 4661              	.LASF56:
 4662 0902 6C696D69 		.ascii	"limit_Total\000"
 4662      745F546F 
 4662      74616C00 
 4663              	.LASF158:
 4664 090e 50524F42 		.ascii	"PROBE_Write\000"
 4664      455F5772 
 4664      69746500 
 4665              	.LASF162:
 4666 091a 6973725F 		.ascii	"isr_home_StartEx\000"
 4666      686F6D65 
 4666      5F537461 
 4666      72744578 
 4666      00
 4667              	.LASF2:
 4668 092b 7369676E 		.ascii	"signed char\000"
 4668      65642063 
 4668      68617200 
 4669              	.LASF7:
 4670 0937 73686F72 		.ascii	"short unsigned int\000"
 4670      7420756E 
 4670      7369676E 
 4670      65642069 
 4670      6E7400
 4671              	.LASF93:
 4672 094a 5049445F 		.ascii	"PID_Initialize\000"
 4672      496E6974 
 4672      69616C69 
 4672      7A6500
 4673              	.LASF180:
 4674 0959 6D61696E 		.ascii	"main\000"
 4674      00
 4675              	.LASF77:
 4676 095e 69746572 		.ascii	"iterm\000"
 4676      6D00
 4677              	.LASF25:
 4678 0964 646F7562 		.ascii	"double\000"
 4678      6C6500
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccB4DpIN.s 			page 115


 4679              	.LASF174:
 4680 096b 496E6465 		.ascii	"Index_Counter_1_Start\000"
 4680      785F436F 
 4680      756E7465 
 4680      725F315F 
 4680      53746172 
 4681              	.LASF125:
 4682 0981 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 4682      6D654D69 
 4682      63726F73 
 4682      65636F6E 
 4682      64734163 
 4683              	.LASF46:
 4684 099f 6F70436F 		.ascii	"opConfig\000"
 4684      6E666967 
 4684      00
 4685              	.LASF164:
 4686 09a8 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 4686      7273745F 
 4686      656E636F 
 4686      6465725F 
 4686      53746172 
 4687              	.LASF143:
 4688 09c0 6973725F 		.ascii	"isr_home_ClearPending\000"
 4688      686F6D65 
 4688      5F436C65 
 4688      61725065 
 4688      6E64696E 
 4689              	.LASF73:
 4690 09d6 6661756C 		.ascii	"fault\000"
 4690      7400
 4691              	.LASF82:
 4692 09dc 52535449 		.ascii	"RSTIsrHandler\000"
 4692      73724861 
 4692      6E646C65 
 4692      7200
 4693              	.LASF76:
 4694 09ea 706F7369 		.ascii	"position\000"
 4694      74696F6E 
 4694      00
 4695              	.LASF44:
 4696 09f3 4661756C 		.ascii	"FaultStates_t\000"
 4696      74537461 
 4696      7465735F 
 4696      7400
 4697              	.LASF111:
 4698 0a01 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 4698      45666665 
 4698      63746976 
 4698      65536574 
 4698      706F696E 
 4699              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
