ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB43:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 02/08/23 PMR  Rev: 0-2-0 rework PID algorithm based on Galil findings
  12:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  13:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  14:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  15:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  16:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  17:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  18:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  19:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  20:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  21:main.c        **** *******************************************************************************/
  22:main.c        **** #include <I2C_I2C.h>
  23:main.c        **** #include <stdbool.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <math.h>
  26:main.c        **** #include "pid.h"
  27:main.c        **** #include "INA219.h"
  28:main.c        **** 
  29:main.c        **** /* Firmware revision as of 2023-02-08 */
  30:main.c        **** #define FIRMWARE_REV_0 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 2


  31:main.c        **** #define FIRMWARE_REV_1 2
  32:main.c        **** #define FIRMWARE_REV_2 0
  33:main.c        **** 
  34:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  35:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  36:main.c        **** 
  37:main.c        **** /* ACS Test set: the drives are wired backwards! */
  38:main.c        **** #define DRIVE_POLARITY -1
  39:main.c        **** 
  40:main.c        **** /* --------------------------------------------------------------------- 
  41:main.c        ****  * CONSTANTS
  42:main.c        ****  * --------------------------------------------------------------------- */
  43:main.c        **** 
  44:main.c        **** /* Interrupt priorities */
  45:main.c        **** #define NESTED_ISR                             (1u)
  46:main.c        **** #define HIGHER_PRIORITY                        (2u)
  47:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  48:main.c        **** 
  49:main.c        **** /* Interrupt prototypes */
  50:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  51:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  52:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  53:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  54:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  55:main.c        **** 
  56:main.c        **** /* --------------------------------------------------------------------- 
  57:main.c        ****  * WDT Defines
  58:main.c        ****  *
  59:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  60:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  61:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  62:main.c        ****  * --------------------------------------------------------------------- */
  63:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  64:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  65:main.c        **** 
  66:main.c        **** /* --------------------------------------------------------------------- 
  67:main.c        ****  * PWM Defines
  68:main.c        ****  * --------------------------------------------------------------------- */
  69:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  70:main.c        **** //#define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * (PWM_15KHZ_PERIOD/100))
  71:main.c        **** //#define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * 16)
  72:main.c        **** //#define PWM_IDLE                               (50)
  73:main.c        **** //#define PWM_NEUTRAL                            (PWM_15KHZ_PERIOD / 2)
  74:main.c        **** #define PWM_NEUTRAL                            (0)
  75:main.c        **** 
  76:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  77:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  78:main.c        **** #define INA219_CAL_VALUE                       (8192)
  79:main.c        **** 
  80:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  81:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  82:main.c        **** 
  83:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  84:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  85:main.c        **** 
  86:main.c        **** /* --------------------------------------------------------------------- 
  87:main.c        ****  * PID Defines
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 3


  88:main.c        ****  * --------------------------------------------------------------------- */
  89:main.c        **** #define PID_MANUAL                             (0)
  90:main.c        **** #define PID_AUTOMATIC                          (1)
  91:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (25)
  92:main.c        **** bool inAuto = false;
  93:main.c        **** 
  94:main.c        **** volatile int8_t Jog, LastJog;
  95:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  96:main.c        **** int32_t PID_Setpoint, PID_EffectiveSetpoint;
  97:main.c        **** uint8_t PID_EffSetDelta;
  98:main.c        **** uint32_t lastTime;
  99:main.c        **** 
 100:main.c        **** uint32_t refSampleTime = 5; // Default to 5ms
 101:main.c        **** volatile int32_t Position, LastPosition;
 102:main.c        **** 
 103:main.c        **** #ifdef FP_CONVERT
 104:main.c        **** float Output;
 105:main.c        **** float ITerm;
 106:main.c        **** float kp, ki, kd; // PID values
 107:main.c        **** float outMax_Total, outMax_ITerm;
 108:main.c        **** float pwmLimit, pwmMax, pwmMin;    
 109:main.c        **** volatile float PWM;
 110:main.c        **** #endif
 111:main.c        **** 
 112:main.c        **** int32_t Output;
 113:main.c        **** int32_t ITerm;
 114:main.c        **** 
 115:main.c        **** #define OVERRIDE_PID_CONSTANTS 1
 116:main.c        **** uint32_t kp = 20; // Proportional constant
 117:main.c        **** uint32_t ki = 10; // Integral constant
 118:main.c        **** uint32_t kd = 0; // Derivative constant
 119:main.c        **** 
 120:main.c        **** int32_t outMax_Total, outMax_ITerm;
 121:main.c        **** int32_t pwmLimit, pwmMax, pwmMin;    
 122:main.c        **** volatile int32_t PWM;
 123:main.c        **** 
 124:main.c        **** bool homingDone = true;
 125:main.c        **** 
 126:main.c        **** /* --------------------------------------------------------------------- 
 127:main.c        ****  * Timekeeping defines
 128:main.c        ****  * --------------------------------------------------------------------- */
 129:main.c        **** volatile uint64_t UptimeMicroseconds = 0;
 130:main.c        **** volatile uint64_t UptimeMicrosecondsAccumulator = 0;
 131:main.c        **** volatile uint64_t UptimeMilliseconds = 0;
 132:main.c        **** volatile uint64_t UptimeMillisecondsAccumulator = 0;
 133:main.c        **** volatile uint64_t UptimeSeconds = 0;
 134:main.c        **** 
 135:main.c        **** /* --------------------------------------------------------------------- 
 136:main.c        ****  * ENCODER PROPERTIES
 137:main.c        ****  *
 138:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 139:main.c        ****  *
 140:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 141:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 142:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 143:main.c        ****  * flag and resetting the counter to 0 again.
 144:main.c        ****  *
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 4


 145:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 146:main.c        ****  * --------------------------------------------------------------------- */
 147:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 148:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 149:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 150:main.c        **** 
 151:main.c        **** /* --------------------------------------------------------------------- 
 152:main.c        ****  * GLOBALS
 153:main.c        ****  * --------------------------------------------------------------------- */
 154:main.c        **** /* Coarse reporting of state back to the node box software */
 155:main.c        **** typedef enum {    
 156:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 157:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 158:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 159:main.c        ****     csMAX    
 160:main.c        **** } ConfigStates_t;
 161:main.c        **** 
 162:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 163:main.c        **** 
 164:main.c        **** /* Fault codes, these are bit encoded into a uint8_t */
 165:main.c        **** typedef enum {
 166:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 167:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 168:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 169:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 170:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 171:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 172:main.c        ****     fsX2           = 0b00100000,    /* */
 173:main.c        ****     fsX3           = 0b01000000,    /* */
 174:main.c        ****     fsX4           = 0b10000000     /* */
 175:main.c        **** } FaultStates_t;
 176:main.c        **** 
 177:main.c        **** volatile ConfigStates_t ConfigState;
 178:main.c        **** volatile uint8_t FaultState;
 179:main.c        **** volatile uint8_t ConfigSequence;
 180:main.c        **** volatile uint16_t ChecksumErrors;
 181:main.c        **** volatile int16_t MotorCurrent;
 182:main.c        **** uint8_t CurrentI2Cinbuf[20];
 183:main.c        **** 
 184:main.c        **** /* --------------------------------------------------------------------- 
 185:main.c        ****  * SPI MESSAGING
 186:main.c        ****  * --------------------------------------------------------------------- */
 187:main.c        **** /* V2 protocol 
 188:main.c        **** 
 189:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 190:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 191:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 192:main.c        **** */
 193:main.c        ****     
 194:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 195:main.c        **** #define MAX_MESSAGE_SIZE 30
 196:main.c        ****     
 197:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 198:main.c        ****    talking.  Nominally 1 second max of not talking. */
 199:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 200:main.c        **** uint32_t LastMessageTimeSeconds;
 201:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 5


 202:main.c        **** /* Opcodes that can come from the node box software */
 203:main.c        **** typedef enum {
 204:main.c        ****     opUNDEFINED = 0,
 205:main.c        ****     opConfig    = 1,
 206:main.c        ****     opStatus    = 2,
 207:main.c        ****     opSetEnc    = 3,
 208:main.c        ****     opMAX       
 209:main.c        **** } rxMessage_opcodes_t;    
 210:main.c        **** 
 211:main.c        **** /* Sanity check for opcodes */
 212:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 213:main.c        **** 
 214:main.c        **** typedef struct { 
 215:main.c        ****     uint8_t checksum;        
 216:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 217:main.c        ****     uint8_t opcode;     /* Operation (generic overlay for previewing opcode value) */
 218:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 219:main.c        **** 
 220:main.c        **** /* Configuration message, 19 bytes */
 221:main.c        **** typedef struct {
 222:main.c        ****     uint8_t checksum;        
 223:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 224:main.c        ****     uint8_t opcode;     /* Operation: 01 == config */        
 225:main.c        ****     uint8_t sequence;   /* Configuration message sequence number */
 226:main.c        **** #ifdef FP_CONVERT    
 227:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 228:main.c        ****     float Ki;
 229:main.c        ****     float Kd;
 230:main.c        **** #endif
 231:main.c        **** 
 232:main.c        ****     uint32_t Kp;
 233:main.c        ****     uint32_t Ki;
 234:main.c        ****     uint32_t Kd;
 235:main.c        ****     
 236:main.c        ****     uint8_t limit_Total;/* Total drive output limit, +/- percentage */
 237:main.c        ****     uint8_t limit_ITerm;/* PID I term output limit, also +/- percentage */
 238:main.c        ****     uint8_t effsetdelta;/* PID effective setpoint increment delta, nominally 25 steps */
 239:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 240:main.c        **** 
 241:main.c        **** /* Status message, contains desired position and such values, 10 bytes */
 242:main.c        **** typedef struct {
 243:main.c        ****     uint8_t  checksum;        
 244:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 245:main.c        ****     uint8_t  opcode;     /* Operation: 02 == status */
 246:main.c        ****     uint8_t  enable;     /* Enable/disable PID algorithm */
 247:main.c        ****     int32_t  setpoint;   /* Setpoint (desired actuator position) */
 248:main.c        ****     int8_t   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 249:main.c        ****     uint8_t  clearfaults;/* Set to nonzero to clear all the current faults */
 250:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 251:main.c        ****    
 252:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 253:main.c        **** typedef struct {
 254:main.c        ****     uint8_t  checksum;        
 255:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 256:main.c        ****     uint8_t  opcode;     /* Operation: 03 == set encoders */
 257:main.c        ****     int32_t  setpoint;   /* Setpoint (force an actuator logical position) */
 258:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 6


 259:main.c        **** 
 260:main.c        **** 
 261:main.c        **** /* Wrap the message with an array of bytes */
 262:main.c        **** union {
 263:main.c        ****     uint8_t             buf[MAX_MESSAGE_SIZE];
 264:main.c        ****     rxMessage_overlay_t overlay;
 265:main.c        ****     rxMessage_config_t  config;
 266:main.c        ****     rxMessage_status_t  status;  
 267:main.c        ****     rxMessage_setenc_t  setenc;
 268:main.c        **** } rxMessage;
 269:main.c        **** 
 270:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 21 byt
 271:main.c        **** typedef struct  {  
 272:main.c        ****     uint8_t  checksum;        /* Message checksum */    
 273:main.c        ****     uint8_t  version0;        /* Version byte 0 */ 
 274:main.c        ****     uint8_t  version1;        /* Version byte 1 */
 275:main.c        ****     uint8_t  version2;        /* Version byte 2 */
 276:main.c        ****     uint8_t  size;            /* Size of the message bytes, including opcode and size and checksum 
 277:main.c        ****     uint8_t  opcode;          /* Echo back of the opcode this response is for, operation: 02 == sta
 278:main.c        ****     uint8_t  state;           /* Enum value for current device configuration state */ 
 279:main.c        ****     uint8_t  fault;           /* Bit encoded fields for current fault status */
 280:main.c        ****     uint8_t  sequence;        /* Echo back the config sequence number currently set */
 281:main.c        ****     uint16_t checksum_errors; /* Count of checksum errors */
 282:main.c        ****     int16_t  motor_current;   /* Motor current consumption (mA) */
 283:main.c        ****     int32_t  position;        /* Actual actuator position, signed value */ 
 284:main.c        ****     //float  pwm;             /* PWM value the motor is moving at */     
 285:main.c        ****     uint32_t pwm;             /* PWM value the motor is moving at */     
 286:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 287:main.c        **** 
 288:main.c        **** /* Wrap the message with an array of bytes */
 289:main.c        **** union {    
 290:main.c        ****     uint8_t     buf[MAX_MESSAGE_SIZE];
 291:main.c        ****     txMessage_t msg;
 292:main.c        **** } txMessage;
 293:main.c        **** 
 294:main.c        **** /* State machine definition for transmit side of messaging */
 295:main.c        **** typedef enum {
 296:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 297:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 298:main.c        **** } txMessageStates_t;
 299:main.c        **** 
 300:main.c        **** txMessageStates_t txMessageState;
 301:main.c        **** 
 302:main.c        **** /* --------------------------------------------------------------------- 
 303:main.c        ****  * Function prototypes
 304:main.c        ****  * --------------------------------------------------------------------- */
 305:main.c        **** int32_t GetPosition(void);
 306:main.c        **** void runRateGroup1_PID(void);
 307:main.c        **** void runRateGroup3_SPI(void);
 308:main.c        **** void MotorCurrentRead(void);
 309:main.c        **** 
 310:main.c        **** 
 311:main.c        **** /*******************************************************************************
 312:main.c        **** * Function Name: AssertFault
 313:main.c        **** ********************************************************************************
 314:main.c        **** * Summary:
 315:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 7


 316:main.c        **** *  all faults.
 317:main.c        **** *
 318:main.c        **** * Parameters: FaultStates_t of the fault detected.
 319:main.c        **** * Return: None
 320:main.c        **** *******************************************************************************/
 321:main.c        **** void AssertFault(FaultStates_t fault) {
 322:main.c        ****  
 323:main.c        ****     switch (fault) {
 324:main.c        ****      
 325:main.c        ****         /* Clears all asserted faults */
 326:main.c        ****         case fsNONE:
 327:main.c        ****             FaultState = fsNONE;
 328:main.c        ****             break;        
 329:main.c        ****         
 330:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 331:main.c        ****         default:
 332:main.c        ****             FaultState |= fault;
 333:main.c        ****             break;        
 334:main.c        ****     }    
 335:main.c        **** }
 336:main.c        **** 
 337:main.c        **** 
 338:main.c        **** /*******************************************************************************
 339:main.c        **** * Function Name: ClearFault
 340:main.c        **** ********************************************************************************
 341:main.c        **** * Summary:
 342:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 343:main.c        **** *  all faults.
 344:main.c        **** *
 345:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 346:main.c        **** * Return: None
 347:main.c        **** *******************************************************************************/
 348:main.c        **** void ClearFault(FaultStates_t fault) {
 349:main.c        ****  
 350:main.c        ****     switch (fault) {
 351:main.c        ****      
 352:main.c        ****         /* Clears all asserted faults */
 353:main.c        ****         case fsNONE:
 354:main.c        ****             FaultState = fsNONE;
 355:main.c        ****             break;        
 356:main.c        ****         
 357:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 358:main.c        ****         default:
 359:main.c        ****             FaultState &= ~fault;
 360:main.c        ****             break;        
 361:main.c        ****     }    
 362:main.c        **** }
 363:main.c        **** 
 364:main.c        **** 
 365:main.c        **** /*******************************************************************************
 366:main.c        **** * Function Name: MotorCurrentRead
 367:main.c        **** ********************************************************************************
 368:main.c        **** * Summary:
 369:main.c        **** *  Read the motor current consumption.
 370:main.c        **** *
 371:main.c        **** * Parameters: None
 372:main.c        **** * Return: None
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 8


 373:main.c        **** *******************************************************************************/
 374:main.c        **** void MotorCurrentRead(void) {
 375:main.c        ****     
 376:main.c        ****     //TODO: Convert this to integer math
 377:main.c        ****     float c;
 378:main.c        ****     
 379:main.c        ****     c = getCurrent_mA(INA219_I2C_ADDR);
 380:main.c        ****     
 381:main.c        ****     /* Assign the global MotorCurrent value */
 382:main.c        ****     MotorCurrent = (int16_t) c;       
 383:main.c        **** }
 384:main.c        **** 
 385:main.c        **** 
 386:main.c        **** /*******************************************************************************
 387:main.c        **** * Function Name: Comm_Task
 388:main.c        **** ********************************************************************************
 389:main.c        **** * Summary:
 390:main.c        **** *  Task to perform the SPI communications.
 391:main.c        **** *
 392:main.c        **** * Parameters: None
 393:main.c        **** * Return: None
 394:main.c        **** *******************************************************************************/
 395:main.c        **** void runRateGroup3_SPI(void) {
 396:main.c        ****  
 397:main.c        ****     rxMessage_opcodes_t opcode;
 398:main.c        ****     uint8_t size;
 399:main.c        ****     uint8_t i;
 400:main.c        ****     uint8_t checksum;
 401:main.c        ****     uint8_t limit;    
 402:main.c        ****     
 403:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 404:main.c        ****        get to it next cycle! */
 405:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 406:main.c        ****         return;
 407:main.c        ****     
 408:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 409:main.c        ****     switch (txMessageState) {
 410:main.c        ****      
 411:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 412:main.c        ****         case txmsClear:
 413:main.c        ****                 
 414:main.c        ****             /* Get a few items out of the message before checking the sum */
 415:main.c        ****             size     = rxMessage.overlay.size;
 416:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 417:main.c        ****             
 418:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 419:main.c        ****             if (size > sizeof(txMessage.buf))
 420:main.c        ****                 size = sizeof(txMessage.buf);                            
 421:main.c        ****         
 422:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 423:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 424:main.c        ****                 checksum += rxMessage.buf[i]; 
 425:main.c        **** 
 426:main.c        ****             /* Checksum fault, don't try to process the messgage */
 427:main.c        ****             if ((checksum & 0xFF) != 0) {
 428:main.c        ****                 
 429:main.c        ****                 txMessage.msg.opcode = opcode;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 9


 430:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 431:main.c        ****                 ChecksumErrors++;
 432:main.c        ****                 
 433:main.c        ****             /* Message looks fine, process it */
 434:main.c        ****             } else {
 435:main.c        **** 
 436:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 437:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 438:main.c        ****                 
 439:main.c        ****                     switch (opcode) {
 440:main.c        ****                     
 441:main.c        ****                         case opConfig:
 442:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 443:main.c        ****                         
 444:main.c        ****                             /* Remember where we were when the init was sent */
 445:main.c        ****                             LastPosition = GetPosition();
 446:main.c        ****                            
 447:main.c        ****                             /* Initialize the setpoints to be equal to where we are right now.*/
 448:main.c        ****                             PID_Setpoint = LastPosition;
 449:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 450:main.c        ****                             
 451:main.c        ****                             /* Disable PID if it's on */
 452:main.c        ****                             PID_Was_Enabled = false;
 453:main.c        ****                             PID_Enabled = false;
 454:main.c        ****                                 
 455:main.c        ****                                 
 456:main.c        ****                             /* Update the PID values passed down from the server */
 457:main.c        ****                         
 458:main.c        **** #ifndef OVERRIDE_PID_CONSTANTS
 459:main.c        ****                             kp = rxMessage.config.Kp;
 460:main.c        ****                             ki = rxMessage.config.Ki;
 461:main.c        ****                             kd = rxMessage.config.Kd;      
 462:main.c        ****                         
 463:main.c        ****                             /* PID effective setpoint increment delta value */                     
 464:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
 465:main.c        ****                                
 466:main.c        ****                             /* Setup the output limits and stop a jog if one was in progress */
 467:main.c        ****                             Jog = 0;
 468:main.c        ****                         
 469:main.c        ****                             /* Clip the limits to 100% duty cycle */
 470:main.c        ****                             limit = rxMessage.config.limit_Total;
 471:main.c        ****                             if (limit > 100)
 472:main.c        ****                                 limit = 100;
 473:main.c        ****                         
 474:main.c        ****                             outMax_Total = limit;                                        
 475:main.c        ****                             
 476:main.c        ****                             limit = rxMessage.config.limit_ITerm;                                  
 477:main.c        ****                             if (limit > 100)
 478:main.c        ****                                 limit = 100;
 479:main.c        ****                             
 480:main.c        ****                             outMax_ITerm = limit;
 481:main.c        **** #endif
 482:main.c        ****                             
 483:main.c        ****                             /* Convert the configured output maximum also into a PWM value, because
 484:main.c        ****                             could be set from manual control of the PWM.  
 485:main.c        **** 
 486:main.c        ****                             outMax_Total ranges from 0 to 100% of power delivery, which means we ne
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 10


 487:main.c        ****                             convert it into a value symmetrically above and below the "neutral" cen
 488:main.c        ****                             point value of 50 */    
 489:main.c        ****                             pwmLimit = (outMax_Total/100 * 50);
 490:main.c        ****                             pwmMax = 50 + pwmLimit;
 491:main.c        ****                             pwmMin = 50 - pwmLimit;
 492:main.c        ****                         
 493:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 494:main.c        ****                             ConfigState = csReady;  
 495:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 496:main.c        ****                         
 497:main.c        ****                             /* Clear all the faults when reconfigured */
 498:main.c        ****                             ClearFault(fsNONE);
 499:main.c        ****                             break;
 500:main.c        **** 
 501:main.c        ****                         case opStatus:
 502:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 503:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 504:main.c        ****                             
 505:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
 506:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
 507:main.c        ****                                 
 508:main.c        ****                                 /* Remember where we started */
 509:main.c        ****                                 LastPosition = GetPosition();
 510:main.c        ****                                 
 511:main.c        ****                                 /* Update destination */
 512:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 513:main.c        ****                                 
 514:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 515:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 516:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 517:main.c        ****                                 
 518:main.c        ****                                 /* Reset counting of index marks */
 519:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 520:main.c        ****                             }                                        
 521:main.c        ****                         
 522:main.c        ****                             /* PWM jog value ranges from -50 to 50, where -50 is max-reverse curren
 523:main.c        ****                             Jog = rxMessage.status.jog;                                            
 524:main.c        ****                             break;
 525:main.c        ****                         
 526:main.c        ****                         case opSetEnc:
 527:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 528:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);
 529:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 530:main.c        ****                             break;                                        
 531:main.c        ****                             
 532:main.c        ****                         /* No other opcodes are valid */
 533:main.c        ****                         default:
 534:main.c        ****                             break;
 535:main.c        ****                     }                           
 536:main.c        ****                 }                            
 537:main.c        ****             }
 538:main.c        ****             
 539:main.c        ****             /* Get a fresh copy of the position information */
 540:main.c        ****             Position = GetPosition();
 541:main.c        ****             
 542:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 543:main.c        ****             txMessage.msg.checksum        = 0;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 11


 544:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 545:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 546:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 547:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 548:main.c        ****             txMessage.msg.opcode          = opStatus;
 549:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 550:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 551:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 552:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 553:main.c        ****             txMessage.msg.position        = Position;
 554:main.c        ****             txMessage.msg.pwm             = PWM;
 555:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                            
 556:main.c        ****             
 557:main.c        ****             /* Set the checksum in the response */
 558:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 559:main.c        ****                 checksum += txMessage.buf[i]; 
 560:main.c        ****                 
 561:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
 562:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 563:main.c        ****                 
 564:main.c        ****             /* Copy the readied buffer out to the FIFO */
 565:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 566:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 567:main.c        **** 
 568:main.c        ****             /* Indicate it's loaded for use */
 569:main.c        ****             txMessageState = txmsLoaded;
 570:main.c        ****             
 571:main.c        ****             /* Clear all the faults if told to */
 572:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 573:main.c        ****                 ClearFault(fsNONE);
 574:main.c        ****         
 575:main.c        ****             break;
 576:main.c        ****     
 577:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 578:main.c        ****         case txmsLoaded:                
 579:main.c        ****             break;
 580:main.c        ****                 
 581:main.c        ****     } // End of message state case statement
 582:main.c        **** 
 583:main.c        **** }
 584:main.c        ****     
 585:main.c        **** 
 586:main.c        **** /*******************************************************************************
 587:main.c        **** * Function Name: PWM_Set
 588:main.c        **** ********************************************************************************
 589:main.c        **** * Summary:
 590:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 591:main.c        **** *
 592:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 593:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 594:main.c        **** * Return: None
 595:main.c        **** *******************************************************************************/
 596:main.c        **** //void PWM_Set(uint8_t dutycycle) {
 597:main.c        **** void PWM_Set(int32_t output) {    
 598:main.c        ****     
 599:main.c        **** #ifdef REFACTOR
 600:main.c        ****     uint8_t drive = dutycycle;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 12


 601:main.c        ****     
 602:main.c        ****     /* Clip to the max PWM drive +/- around 50 */
 603:main.c        ****     if (drive > pwmMax) {
 604:main.c        ****         drive = pwmMax;
 605:main.c        ****     } else if (drive < pwmMin) {
 606:main.c        ****         drive = pwmMin;
 607:main.c        ****     }
 608:main.c        ****     
 609:main.c        ****     PWM_1_WriteCompare(drive * 16);    
 610:main.c        **** #endif
 611:main.c        ****     
 612:main.c        ****     /* output varies from -800 to 800, which needs to be expressed as 0 to 1600 
 613:main.c        ****        for the PWM */
 614:main.c        ****     PWM_1_WriteCompare((PWM_15KHZ_PERIOD/2) + (DRIVE_POLARITY * output));    
 615:main.c        **** }
 616:main.c        **** 
 617:main.c        **** 
 618:main.c        **** /*******************************************************************************
 619:main.c        **** * Function Name: GetPosition
 620:main.c        **** ********************************************************************************
 621:main.c        **** * Summary:
 622:main.c        **** *  Get the physical position value and compensate for negative locations.
 623:main.c        **** *
 624:main.c        **** * Parameters: None
 625:main.c        **** * Return: int32_t (signed!) position value
 626:main.c        **** *******************************************************************************/
 627:main.c        **** int32_t GetPosition(void) {
 628:main.c        ****     
 629:main.c        ****     static volatile uint32_t RawPosition;
 630:main.c        ****     static volatile int32_t result;
 631:main.c        ****     
 632:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 633:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 634:main.c        ****     
 635:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 636:main.c        ****        underflow and make that into a negative value */
 637:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 638:main.c        ****         
 639:main.c        ****         result = (-1) * ((int32_t) ENCODER_MAX - (int32_t) RawPosition);
 640:main.c        ****         
 641:main.c        ****     } else {
 642:main.c        ****      
 643:main.c        ****         /* Value is "positive", treat it normally */
 644:main.c        ****         result = (int32_t) RawPosition;
 645:main.c        ****     }
 646:main.c        ****     
 647:main.c        ****     /* Update the master copy of position information */
 648:main.c        ****     Position = result;
 649:main.c        ****     return result;
 650:main.c        **** }
 651:main.c        **** 
 652:main.c        **** 
 653:main.c        **** /*******************************************************************************
 654:main.c        **** * Function Name: PID_Initialize
 655:main.c        **** ********************************************************************************
 656:main.c        **** * Summary:
 657:main.c        **** *  Setup and reset the PID terms.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 13


 658:main.c        **** *
 659:main.c        **** * Parameters: None
 660:main.c        **** * Return: None
 661:main.c        **** *******************************************************************************/
 662:main.c        **** void PID_Initialize(void) {
 663:main.c        ****     
 664:main.c        ****     /* Get up-to-date position */
 665:main.c        ****     Position = GetPosition();
 666:main.c        ****     LastPosition = Position;
 667:main.c        ****     
 668:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 669:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 670:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 671:main.c        ****     
 672:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 673:main.c        ****        switching from manual to auto frequently */
 674:main.c        ****     ITerm = 0;
 675:main.c        **** }    
 676:main.c        **** 
 677:main.c        **** 
 678:main.c        **** /*******************************************************************************
 679:main.c        **** * Function Name: PID_SetMode
 680:main.c        **** ********************************************************************************
 681:main.c        **** * Summary:
 682:main.c        **** *  Sets the PID into automatic or manual mode.
 683:main.c        **** *
 684:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 685:main.c        **** * Return: None
 686:main.c        **** *******************************************************************************/
 687:main.c        **** void PID_SetMode(uint32_t Mode) {
 688:main.c        ****     
 689:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 690:main.c        ****     
 691:main.c        ****     if (newAuto && !inAuto) {  
 692:main.c        ****         /*we just went from manual to auto*/
 693:main.c        ****         PID_Initialize();
 694:main.c        ****     }
 695:main.c        ****     
 696:main.c        ****     inAuto = newAuto;
 697:main.c        **** } 
 698:main.c        **** 
 699:main.c        **** 
 700:main.c        **** /*******************************************************************************
 701:main.c        **** * Function Name: PID_SetDrive
 702:main.c        **** ********************************************************************************
 703:main.c        **** * Summary:
 704:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 705:main.c        **** *
 706:main.c        **** * Parameters: Percentage output to drive the PWM.
 707:main.c        **** * Return: None
 708:main.c        **** *******************************************************************************/
 709:main.c        **** #ifdef ZERO
 710:main.c        **** void PID_SetDrive(int32_t percent) {
 711:main.c        **** 
 712:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 713:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 714:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 14


 715:main.c        ****     int32_t dutycycle = ( (DRIVE_POLARITY * percent) + 100) >> 1; // Shift right by 1 bit is the sa
 716:main.c        ****     
 717:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 718:main.c        ****     PWM_Set(dutycycle);  
 719:main.c        **** }
 720:main.c        **** #endif
 721:main.c        **** 
 722:main.c        **** 
 723:main.c        **** /*******************************************************************************
 724:main.c        **** * Function Name: runRateGroup1_PID
 725:main.c        **** ********************************************************************************
 726:main.c        **** * Summary:
 727:main.c        **** *  Task to perform the PID calculations.
 728:main.c        **** *
 729:main.c        **** * Parameters: None
 730:main.c        **** * Return: None
 731:main.c        **** *******************************************************************************/
 732:main.c        **** void runRateGroup1_PID(void) {
 733:main.c        ****     
 734:main.c        ****     static int32_t DeltaPosition;
 735:main.c        ****     static uint32_t CurrentIndexCount;
 736:main.c        ****     int32_t error, dPosition;
 737:main.c        ****     
 738:main.c        ****     
 739:main.c        ****     
 740:main.c        ****     /////////////////////////////////////////////////////
 741:main.c        ****     // TESTING ONLY
 742:main.c        ****     //ConfigState = csReady;
 743:main.c        ****     //PID_Enabled = true;
 744:main.c        ****     /////////////////////////////////////////////////////
 745:main.c        **** 
 746:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 747:main.c        ****        take preventative action and abandon any moves in progress. */
 748:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 749:main.c        ****         
 750:main.c        ****         /* Stop all motion */
 751:main.c        ****         ////PWM_Set(PWM_JOG_NEUTRAL);
 752:main.c        ****         PWM_Set(PWM_NEUTRAL);
 753:main.c        ****         PID_Enabled = false;
 754:main.c        ****         
 755:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the next m
 756:main.c        ****            in which case we want to be neutral. */
 757:main.c        ****         Jog = 0;
 758:main.c        **** 
 759:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 760:main.c        ****     } else if (ConfigState == csReady) {
 761:main.c        ****         
 762:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 763:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 764:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 765:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 766:main.c        **** 
 767:main.c        ****         /* Handle mode switching */
 768:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 769:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 770:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 771:main.c        ****             PID_SetMode(PID_MANUAL);                
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 15


 772:main.c        ****         } else {
 773:main.c        ****             // No mode change happened   
 774:main.c        ****         }
 775:main.c        ****         
 776:main.c        ****         /* Save value for next cycle */
 777:main.c        ****         PID_Was_Enabled = PID_Enabled;
 778:main.c        ****         
 779:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 780:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 781:main.c        ****     
 782:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 783:main.c        ****         
 784:main.c        ****         1) The setpoint will change to 2000.
 785:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 786:main.c        ****         3) Calculate the PID and return.
 787:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 788:main.c        ****         5) Calculate the PID and return.
 789:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 790:main.c        ****         */
 791:main.c        **** 
 792:main.c        ****         
 793:main.c        ****         
 794:main.c        ****         
 795:main.c        ****         if (PID_Enabled) {
 796:main.c        ****             
 797:main.c        ****             if (PID_EffSetDelta == 0) {
 798:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 799:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 800:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 801:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 802:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 803:main.c        ****             } else {
 804:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 805:main.c        ****             }
 806:main.c        ****             
 807:main.c        ****             /* Get most up-to-date current position */
 808:main.c        ****             Position = GetPosition();
 809:main.c        **** 
 810:main.c        ****             
 811:main.c        ****             Output = PID_UpdateValues(PID_EffectiveSetpoint, Position);
 812:main.c        ****             
 813:main.c        ****             
 814:main.c        ****             /* Use the global PWM value to communicate back the percentage of drive to the server *
 815:main.c        ****             PWM = Output;
 816:main.c        ****             
 817:main.c        ****             /* Put the PID drive percentage out on the wire */
 818:main.c        ****             //PID_SetDrive(Output);
 819:main.c        ****             PWM_Set(Output);
 820:main.c        **** 
 821:main.c        ****         } else {
 822:main.c        ****             /* If disabled, just return 0 */
 823:main.c        ****             PWM = 0;
 824:main.c        ****         }
 825:main.c        **** 
 826:main.c        ****         
 827:main.c        ****         
 828:main.c        ****     }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 16


 829:main.c        **** 
 830:main.c        **** 
 831:main.c        **** }
 832:main.c        **** 
 833:main.c        **** 
 834:main.c        **** /*******************************************************************************
 835:main.c        **** * Function Name: main
 836:main.c        **** ********************************************************************************
 837:main.c        **** * Summary:
 838:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 839:main.c        **** *
 840:main.c        **** * Parameters: None
 841:main.c        **** * Return: NEVER!
 842:main.c        **** *******************************************************************************/
 843:main.c        **** int main(void) {
 844:main.c        ****    
 845:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 846:main.c        ****        microprocessor.  There is a race condition here: unless the actuator is on a home
 847:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 848:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 849:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 850:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 851:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 852:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 853:main.c        **** 
 854:main.c        ****     
 855:main.c        ****     /********************************************************************** 
 856:main.c        ****     * Interrupts
 857:main.c        ****     **********************************************************************/
 858:main.c        ****     
 859:main.c        ****     /* BRMS timer interrupt */
 860:main.c        ****     Timer_BRMS_Start();
 861:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 862:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 863:main.c        **** 
 864:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 865:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 866:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 867:main.c        **** 
 868:main.c        ****     /* Encoder interrupt */
 869:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 870:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 871:main.c        ****     
 872:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 873:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 874:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 875:main.c        **** 
 876:main.c        ****     /* Enable the global interrupt */
 877:main.c        ****     CyGlobalIntEnable;
 878:main.c        ****     
 879:main.c        ****     /********************************************************************** 
 880:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 881:main.c        ****     **********************************************************************/
 882:main.c        **** 
 883:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 884:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 885:main.c        ****        when you hit a breakpoint. */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 17


 886:main.c        **** 
 887:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 888:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 889:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
 890:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 891:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 892:main.c        **** 	
 893:main.c        **** 	/* Enable WDT counter 1 */
 894:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
 895:main.c        **** 	
 896:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
 897:main.c        **** 	CySysWdtLock();
 898:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 899:main.c        **** 	CySysWdtUnlock();        
 900:main.c        **** #endif    
 901:main.c        **** 
 902:main.c        ****     
 903:main.c        ****     /*********************************************************************** 
 904:main.c        ****     * Start the various subsystems.
 905:main.c        ****     ***********************************************************************/
 906:main.c        ****     I2C_Start();
 907:main.c        ****     
 908:main.c        ****     /* Start I2C for the Motor Current monitor */
 909:main.c        ****     //Init_INA(INA219_I2C_ADDR);
 910:main.c        ****     
 911:main.c        ****     CyDelay(100u);
 912:main.c        ****     SPI_1_Start();
 913:main.c        ****     
 914:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
 915:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
 916:main.c        ****     PWM_1_Start();
 917:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 918:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 919:main.c        ****     
 920:main.c        ****     /* Default the jog value to neutral (no movement) */
 921:main.c        ****     Jog = 0;
 922:main.c        ****     
 923:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
 924:main.c        ****     homingDone = false;
 925:main.c        ****    
 926:main.c        ****     /* Start counting the quadrature encoding */
 927:main.c        ****     Counter_1_Start();    
 928:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 929:main.c        ****     LastPosition = ENCODER_MAX;
 930:main.c        ****     
 931:main.c        ****     /* Clear and start the index mark counter */
 932:main.c        ****     Index_Counter_1_Start();
 933:main.c        ****     Index_Counter_1_WriteCounter(0);
 934:main.c        ****      
 935:main.c        ****     /* Start off unconfigured */
 936:main.c        ****     ConfigState = csUnconfig;  
 937:main.c        ****     ConfigSequence = 0;
 938:main.c        ****     ChecksumErrors = 0;
 939:main.c        ****     
 940:main.c        ****     /***************************/
 941:main.c        ****     /* Setup the PID subsystem */
 942:main.c        ****     PID_Initialize();
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 18


 943:main.c        ****     PID_SetMode(PID_MANUAL);
 944:main.c        ****     
 945:main.c        ****     /* Initially default to 100% output max until config tells us otherwise */
 946:main.c        ****     outMax_Total = 100;
 947:main.c        ****     outMax_ITerm = 100;
 948:main.c        **** 
 949:main.c        ****     /* Init the PWM limits the same way, full maximums */
 950:main.c        ****     pwmLimit = 50;   // This is a + or - value
 951:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 952:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 953:main.c        ****     
 954:main.c        ****     /* Start off disabled */
 955:main.c        ****     PID_Setpoint          = 0;  
 956:main.c        ****     PID_EffectiveSetpoint = 0;
 957:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 958:main.c        ****     PID_Was_Enabled       = false;
 959:main.c        ****     PID_Enabled           = false;
 960:main.c        ****     //PID_SetDrive(0); // Drive set to 0%
 961:main.c        ****     PWM_Set(PWM_NEUTRAL);
 962:main.c        ****     
 963:main.c        ****     uint32_t LastUptimeSeconds = 0;
 964:main.c        ****     int8_t drive = -100;
 965:main.c        ****     bool goingUp = true;
 966:main.c        ****     /***************************/
 967:main.c        **** 
 968:main.c        ****     
 969:main.c        ****     /***********************************************************************
 970:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
 971:main.c        ****     * constantly interrupted by the task scheduler.
 972:main.c        ****     ***********************************************************************/
 973:main.c        ****     while (1) {
 974:main.c        **** 
 975:main.c        ****         //TODO: Enable/disable this mechanism based on some input from the SPI master,
 976:main.c        ****         //      which might be the ACS test set, or the beagle bone node box.  Disable it for
 977:main.c        ****         //      now to prevent multi-mastering of the I2C bus, which doesn't work.
 978:main.c        ****         /*
 979:main.c        ****         PROBE_Write(1);
 980:main.c        ****         MotorCurrentRead();
 981:main.c        ****         PROBE_Write(0);
 982:main.c        ****         */
 983:main.c        ****         
 984:main.c        ****         /*
 985:main.c        ****         if (UptimeMicroseconds > (LastUptimeMicroseconds + 500)) {
 986:main.c        ****             LastUptimeMicroseconds = UptimeMicroseconds;
 987:main.c        ****             
 988:main.c        ****             if (toggle) {
 989:main.c        ****                 PROBE_Write(1);
 990:main.c        ****                 toggle = false;
 991:main.c        ****             } else {
 992:main.c        ****                 PROBE_Write(0);
 993:main.c        ****                 toggle = true;
 994:main.c        ****             }
 995:main.c        ****         }
 996:main.c        ****         */
 997:main.c        ****         
 998:main.c        ****         
 999:main.c        ****         /* Use the LED as a heartbeat */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 19


1000:main.c        ****         if (UptimeSeconds % 2) {
1001:main.c        ****             LED_Write(1);
1002:main.c        ****         } else {
1003:main.c        ****             LED_Write(0);
1004:main.c        ****         } 
1005:main.c        ****         
1006:main.c        ****         // Delay 10ms before next loop iteration
1007:main.c        ****         CyDelay(10);         
1008:main.c        ****         
1009:main.c        ****         
1010:main.c        ****    
1011:main.c        ****     /* ------------------------------------------------------------------------------------ */
1012:main.c        ****     /* Every loop, refresh the counter of the watchdog to indicate the system is still alive
1013:main.c        ****        and not stalled out in some interrupt somewhre.  Were the BRMS to stop working or the 
1014:main.c        ****        motion thread to die, the CPU will be reset after 2 seconds. */
1015:main.c        **** ////    WDT_COUNT1_REFRESH();        
1016:main.c        ****     /* ------------------------------------------------------------------------------------ */
1017:main.c        ****         
1018:main.c        ****     }
1019:main.c        ****       
1020:main.c        ****     
1021:main.c        ****     /***********************************************************************
1022:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
1023:main.c        ****     ***********************************************************************/
1024:main.c        ****     return 1;       
1025:main.c        **** }
1026:main.c        **** 
1027:main.c        **** 
1028:main.c        **** /*******************************************************************************
1029:main.c        **** * Function Name: BRMS_Interrupt
1030:main.c        **** ********************************************************************************
1031:main.c        **** * Summary:
1032:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
1033:main.c        **** *
1034:main.c        **** * Parameters: None
1035:main.c        **** * Return: None
1036:main.c        **** *******************************************************************************/
1037:main.c        **** CY_ISR(BRMS_Interrupt) {
1038:main.c        ****     
1039:main.c        ****     static uint32_t brmsTask;                 // The BRMS schedule counter
1040:main.c        **** 
1041:main.c        ****     static uint32_t brmsRG1Mask = 0b00000001; // Rate group 1 mask
1042:main.c        ****     static uint32_t brmsRG2Mask = 0b00000010; // Rate group 2 mask
1043:main.c        ****     static uint32_t brmsRG3Mask = 0b00000100; // Rate group 3 mask
1044:main.c        ****     static uint32_t brmsRG4Mask = 0b00001000; // Rate group 4 mask
1045:main.c        ****     static uint32_t brmsRG5Mask = 0b00010000; // Rate group 5 mask
1046:main.c        ****     
1047:main.c        ****     /* Clears the timer interrupt */
1048:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
1049:main.c        **** 
1050:main.c        ****     PROBE_Write(1);
1051:main.c        ****     
1052:main.c        ****     /* Use this 200us interrupt as a clock mechanism */
1053:main.c        ****     UptimeMicroseconds += 200;
1054:main.c        ****     UptimeMicrosecondsAccumulator += 200;
1055:main.c        ****     
1056:main.c        ****     /* Count milliseconds */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 20


1057:main.c        ****     if (UptimeMicrosecondsAccumulator > 1000) {
1058:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1059:main.c        ****         UptimeMilliseconds += 1;
1060:main.c        ****         UptimeMillisecondsAccumulator += 1;
1061:main.c        ****     }
1062:main.c        ****     
1063:main.c        ****     /* Count seconds */
1064:main.c        ****     if (UptimeMillisecondsAccumulator > 1000) {
1065:main.c        ****         UptimeMillisecondsAccumulator = 0;
1066:main.c        ****         UptimeSeconds += 1;
1067:main.c        ****     }
1068:main.c        ****     
1069:main.c        ****     /* Increment the BRMS task counter infinitely */
1070:main.c        ****     brmsTask++;
1071:main.c        **** 
1072:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
1073:main.c        ****        sequentially until one results in a "true" value.  
1074:main.c        ****     
1075:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1076:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1077:main.c        ****     
1078:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
1079:main.c        ****        value ends in 0bxx10. 
1080:main.c        ****     
1081:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1082:main.c        ****        ends in 0bx100.  
1083:main.c        ****     
1084:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1085:main.c        ****     
1086:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1087:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1088:main.c        ****        interrupt returns.
1089:main.c        ****     */
1090:main.c        ****     if (brmsTask & brmsRG1Mask) {
1091:main.c        ****         
1092:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1093:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1094:main.c        ****            to a 2.5KHz update rate. */
1095:main.c        ****         runRateGroup1_PID();
1096:main.c        ****         
1097:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1098:main.c        ****         
1099:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1100:main.c        ****         //runRateGroup2_TBD();           
1101:main.c        ****         
1102:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1103:main.c        ****         
1104:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1105:main.c        ****         runRateGroup3_SPI();
1106:main.c        ****         
1107:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1108:main.c        ****      
1109:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1110:main.c        ****         //runRateGroup4_TBD();
1111:main.c        **** 
1112:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1113:main.c        ****      
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 21


1114:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1115:main.c        ****         //runRateGroup5_TBD();
1116:main.c        ****     }
1117:main.c        ****     
1118:main.c        ****     PROBE_Write(0);
1119:main.c        ****    
1120:main.c        **** }
1121:main.c        **** 
1122:main.c        **** 
1123:main.c        **** /*******************************************************************************
1124:main.c        **** * Function Name: RSTIsrHandler
1125:main.c        **** ********************************************************************************
1126:main.c        **** * Summary:
1127:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1128:main.c        **** *  Clears a pending Interrupt.
1129:main.c        **** *  Clears a pin Interrupt.
1130:main.c        **** *
1131:main.c        **** * Parameters: None
1132:main.c        **** * Return: None
1133:main.c        **** *******************************************************************************/
1134:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1134 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1135:main.c        ****     
1136:main.c        ****     /* Clear pending Interrupt */
1137:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1137 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1138:main.c        ****     
1139:main.c        ****     /* Clear pin Interrupt */
1140:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1140 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1141:main.c        ****     
1142:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1143:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1143 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1144:main.c        ****     
1145:main.c        ****     /* Clear the index counter */
1146:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1146 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1147:main.c        ****     
1148:main.c        ****     /* When we hit the index mark, homing is complete */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 22


1149:main.c        ****     homingDone = true;    
  50              		.loc 1 1149 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1150:main.c        **** }
  54              		.loc 1 1150 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE43:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
  70              	HomeIsrHandler:
  71              	.LFB44:
1151:main.c        **** 
1152:main.c        **** 
1153:main.c        **** /*******************************************************************************
1154:main.c        **** * Function Name: HomeIsrHandler
1155:main.c        **** ********************************************************************************
1156:main.c        **** * Summary:
1157:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1158:main.c        **** *  Clears a pending Interrupt.
1159:main.c        **** *  Clears a pin Interrupt.
1160:main.c        **** *
1161:main.c        **** * Parameters: None
1162:main.c        **** * Return: None
1163:main.c        **** *******************************************************************************/
1164:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1164 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1165:main.c        ****     
1166:main.c        ****     /* Clear pending Interrupt */
1167:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1167 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1168:main.c        ****     
1169:main.c        ****     /* Clear pin Interrupt */
1170:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1170 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 23


  85              	.LVL5:
1171:main.c        **** 
1172:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1173:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1173 0
  87 000a 0020     		movs	r0, #0
  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1174:main.c        ****     
1175:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1176:main.c        ****     homingDone = false;
  90              		.loc 1 1176 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1177:main.c        **** }
  94              		.loc 1 1177 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 0018 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE44:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB45:
1178:main.c        **** 
1179:main.c        **** 
1180:main.c        **** /*******************************************************************************
1181:main.c        **** * Function Name: SPI_SS_IsrHandler
1182:main.c        **** ********************************************************************************
1183:main.c        **** * Summary:
1184:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1185:main.c        **** *  Clears a pin Interrupt.
1186:main.c        **** *
1187:main.c        **** * Parameters: None
1188:main.c        **** * Return: None
1189:main.c        **** *******************************************************************************/
1190:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1190 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1191:main.c        ****     
1192:main.c        ****     uint32_t i;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 24


1193:main.c        ****     
1194:main.c        ****     /* Clear SPI slave select pin Interrupt */
1195:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1195 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
1196:main.c        ****     
1197:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1198:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1198 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1199:main.c        ****         return;
1200:main.c        ****    
1201:main.c        ****     /* Update the last message tick timer */
1202:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1202 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
 132 0014 0E4B     		ldr	r3, .L12+4
 133 0016 1A60     		str	r2, [r3]
1203:main.c        **** 
1204:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1205:main.c        ****        check the messaging state before resetting the buffers */
1206:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1206 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1207:main.c        ****      
1208:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1209:main.c        ****         case txmsClear:
1210:main.c        ****             break;
1211:main.c        ****      
1212:main.c        ****         /* A message was readied for transmission */
1213:main.c        ****         case txmsLoaded:
1214:main.c        ****          
1215:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1216:main.c        ****             
1217:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1218:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1218 0
 140 0020 1E22     		movs	r2, #30
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1219:main.c        **** 
1220:main.c        ****             /* Message from the master is completely clocked in by now */     
1221:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1221 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 25


 148              	.LVL10:
 149              	.L11:
1222:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1222 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1221:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1221 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1221:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1221 0 is_stmt 0 discriminator 1
 160 0038 1D2C     		cmp	r4, #29
 161 003a F8D9     		bls	.L11
1223:main.c        ****             }
1224:main.c        ****             
1225:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1226:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1226 0 is_stmt 1
 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 164              	.LVL13:
1227:main.c        ****             
1228:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1229:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1229 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1230:main.c        ****             
1231:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1232:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1232 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1233:main.c        ****             break;
1234:main.c        ****             
1235:main.c        ****     } 
1236:main.c        ****         
1237:main.c        **** }
 174              		.loc 1 1237 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE45:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 26


 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 321:main.c        ****  
 196              		.loc 1 321 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
 323:main.c        ****      
 202              		.loc 1 323 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 327:main.c        ****             break;        
 205              		.loc 1 327 0
 206 0004 0022     		movs	r2, #0
 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 328:main.c        ****         
 209              		.loc 1 328 0
 210 000a 03E0     		b	.L14
 211              	.L18:
 332:main.c        ****             break;        
 212              		.loc 1 332 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 335:main.c        **** 
 219              		.loc 1 335 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 348:main.c        ****  
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 27


 237              		.loc 1 348 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
 350:main.c        ****      
 243              		.loc 1 350 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 354:main.c        ****             break;        
 246              		.loc 1 354 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 355:main.c        ****         
 250              		.loc 1 355 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 359:main.c        ****             break;        
 253              		.loc 1 359 0
 254 000c 024A     		ldr	r2, .L26
 255 000e 1378     		ldrb	r3, [r2]
 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 362:main.c        **** 
 259              		.loc 1 362 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.global	__aeabi_f2iz
 270              		.section	.text.MotorCurrentRead,"ax",%progbits
 271              		.align	2
 272              		.global	MotorCurrentRead
 273              		.code	16
 274              		.thumb_func
 275              		.type	MotorCurrentRead, %function
 276              	MotorCurrentRead:
 277              	.LFB34:
 374:main.c        ****     
 278              		.loc 1 374 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 379:main.c        ****     
 286              		.loc 1 379 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 28


 287 0002 4020     		movs	r0, #64
 288 0004 FFF7FEFF 		bl	getCurrent_mA
 289              	.LVL19:
 382:main.c        **** }
 290              		.loc 1 382 0
 291 0008 FFF7FEFF 		bl	__aeabi_f2iz
 292              	.LVL20:
 293 000c 00B2     		sxth	r0, r0
 294 000e 014B     		ldr	r3, .L29
 295 0010 1880     		strh	r0, [r3]
 383:main.c        **** 
 296              		.loc 1 383 0
 297              		@ sp needed
 298 0012 10BD     		pop	{r4, pc}
 299              	.L30:
 300              		.align	2
 301              	.L29:
 302 0014 00000000 		.word	MotorCurrent
 303              		.cfi_endproc
 304              	.LFE34:
 305              		.size	MotorCurrentRead, .-MotorCurrentRead
 306              		.section	.text.PWM_Set,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_Set
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_Set, %function
 312              	PWM_Set:
 313              	.LFB36:
 597:main.c        ****     
 314              		.loc 1 597 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL21:
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 614:main.c        **** }
 323              		.loc 1 614 0
 324 0002 C823     		movs	r3, #200
 325 0004 9B00     		lsls	r3, r3, #2
 326 0006 181A     		subs	r0, r3, r0
 327              	.LVL22:
 328 0008 FFF7FEFF 		bl	PWM_1_WriteCompare
 329              	.LVL23:
 615:main.c        **** 
 330              		.loc 1 615 0
 331              		@ sp needed
 332 000c 10BD     		pop	{r4, pc}
 333              		.cfi_endproc
 334              	.LFE36:
 335              		.size	PWM_Set, .-PWM_Set
 336 000e C046     		.section	.text.GetPosition,"ax",%progbits
 337              		.align	2
 338              		.global	GetPosition
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 29


 339              		.code	16
 340              		.thumb_func
 341              		.type	GetPosition, %function
 342              	GetPosition:
 343              	.LFB37:
 627:main.c        ****     
 344              		.loc 1 627 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 633:main.c        ****     
 352              		.loc 1 633 0
 353 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 354              	.LVL24:
 355 0006 0B4B     		ldr	r3, .L35
 356 0008 9860     		str	r0, [r3, #8]
 637:main.c        ****         
 357              		.loc 1 637 0
 358 000a 9A68     		ldr	r2, [r3, #8]
 359 000c 0A4B     		ldr	r3, .L35+4
 360 000e 9A42     		cmp	r2, r3
 361 0010 06D9     		bls	.L33
 639:main.c        ****         
 362              		.loc 1 639 0
 363 0012 084A     		ldr	r2, .L35
 364 0014 9368     		ldr	r3, [r2, #8]
 365 0016 0949     		ldr	r1, .L35+8
 366 0018 8C46     		mov	ip, r1
 367 001a 6344     		add	r3, r3, ip
 368 001c D360     		str	r3, [r2, #12]
 369 001e 02E0     		b	.L34
 370              	.L33:
 644:main.c        ****     }
 371              		.loc 1 644 0
 372 0020 044B     		ldr	r3, .L35
 373 0022 9A68     		ldr	r2, [r3, #8]
 374 0024 DA60     		str	r2, [r3, #12]
 375              	.L34:
 648:main.c        ****     return result;
 376              		.loc 1 648 0
 377 0026 034B     		ldr	r3, .L35
 378 0028 D968     		ldr	r1, [r3, #12]
 379 002a 054A     		ldr	r2, .L35+12
 380 002c 1160     		str	r1, [r2]
 649:main.c        **** }
 381              		.loc 1 649 0
 382 002e D868     		ldr	r0, [r3, #12]
 650:main.c        **** 
 383              		.loc 1 650 0
 384              		@ sp needed
 385 0030 10BD     		pop	{r4, pc}
 386              	.L36:
 387 0032 C046     		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 30


 388              	.L35:
 389 0034 00000000 		.word	.LANCHOR1
 390 0038 FFFFEF00 		.word	15728639
 391 003c 010000FF 		.word	-16777215
 392 0040 00000000 		.word	Position
 393              		.cfi_endproc
 394              	.LFE37:
 395              		.size	GetPosition, .-GetPosition
 396              		.global	__aeabi_idiv
 397              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 398              		.align	2
 399              		.global	runRateGroup3_SPI
 400              		.code	16
 401              		.thumb_func
 402              		.type	runRateGroup3_SPI, %function
 403              	runRateGroup3_SPI:
 404              	.LFB35:
 395:main.c        ****  
 405              		.loc 1 395 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 405:main.c        ****         return;
 413              		.loc 1 405 0
 414 0002 7C4B     		ldr	r3, .L52
 415 0004 1B68     		ldr	r3, [r3]
 416 0006 DB07     		lsls	r3, r3, #31
 417 0008 00D5     		bpl	.LCB319
 418 000a F2E0     		b	.L37	@long jump
 419              	.LCB319:
 409:main.c        ****      
 420              		.loc 1 409 0
 421 000c 7A4B     		ldr	r3, .L52+4
 422 000e 1B78     		ldrb	r3, [r3]
 423 0010 002B     		cmp	r3, #0
 424 0012 00D0     		beq	.LCB324
 425 0014 EDE0     		b	.L37	@long jump
 426              	.LCB324:
 415:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 427              		.loc 1 415 0
 428 0016 794B     		ldr	r3, .L52+8
 429 0018 5878     		ldrb	r0, [r3, #1]
 430              	.LVL25:
 416:main.c        ****             
 431              		.loc 1 416 0
 432 001a 9C78     		ldrb	r4, [r3, #2]
 433              	.LVL26:
 419:main.c        ****                 size = sizeof(txMessage.buf);                            
 434              		.loc 1 419 0
 435 001c 1E28     		cmp	r0, #30
 436 001e 00D9     		bls	.L40
 420:main.c        ****         
 437              		.loc 1 420 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 31


 438 0020 1E20     		movs	r0, #30
 439              	.LVL27:
 440              	.L40:
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
 441              		.loc 1 423 0
 442 0022 0022     		movs	r2, #0
 443 0024 0023     		movs	r3, #0
 444 0026 05E0     		b	.L41
 445              	.LVL28:
 446              	.L42:
 424:main.c        **** 
 447              		.loc 1 424 0 discriminator 3
 448 0028 7449     		ldr	r1, .L52+8
 449 002a C95C     		ldrb	r1, [r1, r3]
 450 002c 5218     		adds	r2, r2, r1
 451              	.LVL29:
 452 002e D2B2     		uxtb	r2, r2
 453              	.LVL30:
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
 454              		.loc 1 423 0 discriminator 3
 455 0030 0133     		adds	r3, r3, #1
 456              	.LVL31:
 457 0032 DBB2     		uxtb	r3, r3
 458              	.LVL32:
 459              	.L41:
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
 460              		.loc 1 423 0 is_stmt 0 discriminator 1
 461 0034 9842     		cmp	r0, r3
 462 0036 F7D8     		bhi	.L42
 427:main.c        ****                 
 463              		.loc 1 427 0 is_stmt 1
 464 0038 002A     		cmp	r2, #0
 465 003a 09D0     		beq	.L43
 429:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 466              		.loc 1 429 0
 467 003c 704B     		ldr	r3, .L52+12
 468              	.LVL33:
 469 003e 5C71     		strb	r4, [r3, #5]
 430:main.c        ****                 ChecksumErrors++;
 470              		.loc 1 430 0
 471 0040 1522     		movs	r2, #21
 472              	.LVL34:
 473 0042 1A71     		strb	r2, [r3, #4]
 431:main.c        ****                 
 474              		.loc 1 431 0
 475 0044 6F4A     		ldr	r2, .L52+16
 476 0046 1388     		ldrh	r3, [r2]
 477 0048 0133     		adds	r3, r3, #1
 478 004a 9BB2     		uxth	r3, r3
 479 004c 1380     		strh	r3, [r2]
 480 004e 82E0     		b	.L44
 481              	.LVL35:
 482              	.L43:
 437:main.c        ****                 
 483              		.loc 1 437 0
 484 0050 631E     		subs	r3, r4, #1
 485              	.LVL36:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 32


 486 0052 DBB2     		uxtb	r3, r3
 487 0054 022B     		cmp	r3, #2
 488 0056 7ED8     		bhi	.L44
 439:main.c        ****                     
 489              		.loc 1 439 0
 490 0058 022C     		cmp	r4, #2
 491 005a 2DD0     		beq	.L45
 492 005c 032C     		cmp	r4, #3
 493 005e 5ED0     		beq	.L46
 494 0060 012C     		cmp	r4, #1
 495 0062 78D1     		bne	.L44
 445:main.c        ****                            
 496              		.loc 1 445 0
 497 0064 FFF7FEFF 		bl	GetPosition
 498              	.LVL37:
 499 0068 674B     		ldr	r3, .L52+20
 500 006a 1860     		str	r0, [r3]
 448:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 501              		.loc 1 448 0
 502 006c 1968     		ldr	r1, [r3]
 503 006e 674A     		ldr	r2, .L52+24
 504 0070 1160     		str	r1, [r2]
 449:main.c        ****                             
 505              		.loc 1 449 0
 506 0072 1A68     		ldr	r2, [r3]
 507 0074 664B     		ldr	r3, .L52+28
 508 0076 1A60     		str	r2, [r3]
 452:main.c        ****                             PID_Enabled = false;
 509              		.loc 1 452 0
 510 0078 0023     		movs	r3, #0
 511 007a 664A     		ldr	r2, .L52+32
 512 007c 1370     		strb	r3, [r2]
 453:main.c        ****                                 
 513              		.loc 1 453 0
 514 007e 664A     		ldr	r2, .L52+36
 515 0080 1370     		strb	r3, [r2]
 489:main.c        ****                             pwmMax = 50 + pwmLimit;
 516              		.loc 1 489 0
 517 0082 664B     		ldr	r3, .L52+40
 518 0084 1868     		ldr	r0, [r3]
 519 0086 6421     		movs	r1, #100
 520 0088 FFF7FEFF 		bl	__aeabi_idiv
 521              	.LVL38:
 522 008c 3223     		movs	r3, #50
 523 008e 5843     		muls	r0, r3
 524 0090 634A     		ldr	r2, .L52+44
 525 0092 1060     		str	r0, [r2]
 490:main.c        ****                             pwmMin = 50 - pwmLimit;
 526              		.loc 1 490 0
 527 0094 0100     		movs	r1, r0
 528 0096 3231     		adds	r1, r1, #50
 529 0098 624A     		ldr	r2, .L52+48
 530 009a 1160     		str	r1, [r2]
 491:main.c        ****                         
 531              		.loc 1 491 0
 532 009c 181A     		subs	r0, r3, r0
 533 009e 624B     		ldr	r3, .L52+52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 33


 534 00a0 1860     		str	r0, [r3]
 494:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 535              		.loc 1 494 0
 536 00a2 0222     		movs	r2, #2
 537 00a4 614B     		ldr	r3, .L52+56
 538 00a6 1A70     		strb	r2, [r3]
 495:main.c        ****                         
 539              		.loc 1 495 0
 540 00a8 544B     		ldr	r3, .L52+8
 541 00aa DA78     		ldrb	r2, [r3, #3]
 542 00ac 604B     		ldr	r3, .L52+60
 543 00ae 1A70     		strb	r2, [r3]
 498:main.c        ****                             break;
 544              		.loc 1 498 0
 545 00b0 0020     		movs	r0, #0
 546 00b2 FFF7FEFF 		bl	ClearFault
 547              	.LVL39:
 499:main.c        **** 
 548              		.loc 1 499 0
 549 00b6 4EE0     		b	.L44
 550              	.LVL40:
 551              	.L45:
 503:main.c        ****                             
 552              		.loc 1 503 0
 553 00b8 5048     		ldr	r0, .L52+8
 554              	.LVL41:
 555 00ba C378     		ldrb	r3, [r0, #3]
 556 00bc 5A1E     		subs	r2, r3, #1
 557 00be 9341     		sbcs	r3, r3, r2
 558              	.LVL42:
 559 00c0 554A     		ldr	r2, .L52+36
 560 00c2 1370     		strb	r3, [r2]
 506:main.c        ****                                 
 561              		.loc 1 506 0
 562 00c4 0379     		ldrb	r3, [r0, #4]
 563 00c6 4279     		ldrb	r2, [r0, #5]
 564 00c8 1202     		lsls	r2, r2, #8
 565 00ca 1A43     		orrs	r2, r3
 566 00cc 8379     		ldrb	r3, [r0, #6]
 567 00ce 1B04     		lsls	r3, r3, #16
 568 00d0 1343     		orrs	r3, r2
 569 00d2 1A00     		movs	r2, r3
 570 00d4 C379     		ldrb	r3, [r0, #7]
 571 00d6 1B06     		lsls	r3, r3, #24
 572 00d8 1343     		orrs	r3, r2
 573 00da 4C4A     		ldr	r2, .L52+24
 574 00dc 1268     		ldr	r2, [r2]
 575 00de 9342     		cmp	r3, r2
 576 00e0 17D0     		beq	.L48
 509:main.c        ****                                 
 577              		.loc 1 509 0
 578 00e2 FFF7FEFF 		bl	GetPosition
 579              	.LVL43:
 580 00e6 484C     		ldr	r4, .L52+20
 581              	.LVL44:
 582 00e8 2060     		str	r0, [r4]
 512:main.c        ****                                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 34


 583              		.loc 1 512 0
 584 00ea 4448     		ldr	r0, .L52+8
 585 00ec 0379     		ldrb	r3, [r0, #4]
 586 00ee 4279     		ldrb	r2, [r0, #5]
 587 00f0 1202     		lsls	r2, r2, #8
 588 00f2 1A43     		orrs	r2, r3
 589 00f4 8379     		ldrb	r3, [r0, #6]
 590 00f6 1B04     		lsls	r3, r3, #16
 591 00f8 1343     		orrs	r3, r2
 592 00fa 1A00     		movs	r2, r3
 593 00fc C379     		ldrb	r3, [r0, #7]
 594 00fe 1B06     		lsls	r3, r3, #24
 595 0100 1343     		orrs	r3, r2
 596 0102 424A     		ldr	r2, .L52+24
 597 0104 1360     		str	r3, [r2]
 516:main.c        ****                                 
 598              		.loc 1 516 0
 599 0106 2268     		ldr	r2, [r4]
 600 0108 414B     		ldr	r3, .L52+28
 601 010a 1A60     		str	r2, [r3]
 519:main.c        ****                             }                                        
 602              		.loc 1 519 0
 603 010c 0020     		movs	r0, #0
 604 010e FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 605              	.LVL45:
 606              	.L48:
 523:main.c        ****                             break;
 607              		.loc 1 523 0
 608 0112 3A4B     		ldr	r3, .L52+8
 609 0114 0822     		movs	r2, #8
 610 0116 9A56     		ldrsb	r2, [r3, r2]
 611 0118 464B     		ldr	r3, .L52+64
 612 011a 1A70     		strb	r2, [r3]
 524:main.c        ****                         
 613              		.loc 1 524 0
 614 011c 1BE0     		b	.L44
 615              	.LVL46:
 616              	.L46:
 528:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 617              		.loc 1 528 0
 618 011e 374C     		ldr	r4, .L52+8
 619              	.LVL47:
 620 0120 2179     		ldrb	r1, [r4, #4]
 621 0122 6379     		ldrb	r3, [r4, #5]
 622 0124 1B02     		lsls	r3, r3, #8
 623 0126 0B43     		orrs	r3, r1
 624 0128 1A00     		movs	r2, r3
 625              	.LVL48:
 626 012a A079     		ldrb	r0, [r4, #6]
 627              	.LVL49:
 628 012c 0004     		lsls	r0, r0, #16
 629 012e 0300     		movs	r3, r0
 630 0130 1343     		orrs	r3, r2
 631 0132 E079     		ldrb	r0, [r4, #7]
 632 0134 0006     		lsls	r0, r0, #24
 633 0136 1843     		orrs	r0, r3
 634 0138 FFF7FEFF 		bl	Counter_1_WriteCounter
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 35


 635              	.LVL50:
 529:main.c        ****                             break;                                        
 636              		.loc 1 529 0
 637 013c 2379     		ldrb	r3, [r4, #4]
 638 013e 6279     		ldrb	r2, [r4, #5]
 639 0140 1202     		lsls	r2, r2, #8
 640 0142 1A43     		orrs	r2, r3
 641 0144 A379     		ldrb	r3, [r4, #6]
 642 0146 1B04     		lsls	r3, r3, #16
 643 0148 1343     		orrs	r3, r2
 644 014a 1A00     		movs	r2, r3
 645 014c E379     		ldrb	r3, [r4, #7]
 646 014e 1B06     		lsls	r3, r3, #24
 647 0150 1343     		orrs	r3, r2
 648 0152 2D4A     		ldr	r2, .L52+20
 649 0154 1360     		str	r3, [r2]
 650              	.L44:
 540:main.c        ****             
 651              		.loc 1 540 0
 652 0156 FFF7FEFF 		bl	GetPosition
 653              	.LVL51:
 654 015a 3749     		ldr	r1, .L52+68
 655 015c 0860     		str	r0, [r1]
 543:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 656              		.loc 1 543 0
 657 015e 284B     		ldr	r3, .L52+12
 658 0160 0022     		movs	r2, #0
 659 0162 1A70     		strb	r2, [r3]
 544:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 660              		.loc 1 544 0
 661 0164 5A70     		strb	r2, [r3, #1]
 545:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 662              		.loc 1 545 0
 663 0166 0220     		movs	r0, #2
 664 0168 9870     		strb	r0, [r3, #2]
 546:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 665              		.loc 1 546 0
 666 016a DA70     		strb	r2, [r3, #3]
 547:main.c        ****             txMessage.msg.opcode          = opStatus;
 667              		.loc 1 547 0
 668 016c 1532     		adds	r2, r2, #21
 669 016e 1A71     		strb	r2, [r3, #4]
 548:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 670              		.loc 1 548 0
 671 0170 5871     		strb	r0, [r3, #5]
 549:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 672              		.loc 1 549 0
 673 0172 2E4A     		ldr	r2, .L52+56
 674 0174 1278     		ldrb	r2, [r2]
 675 0176 9A71     		strb	r2, [r3, #6]
 550:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 676              		.loc 1 550 0
 677 0178 304A     		ldr	r2, .L52+72
 678 017a 1278     		ldrb	r2, [r2]
 679 017c DA71     		strb	r2, [r3, #7]
 551:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 680              		.loc 1 551 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 36


 681 017e 214A     		ldr	r2, .L52+16
 682 0180 1288     		ldrh	r2, [r2]
 683 0182 92B2     		uxth	r2, r2
 684 0184 5A72     		strb	r2, [r3, #9]
 685 0186 120A     		lsrs	r2, r2, #8
 686 0188 9A72     		strb	r2, [r3, #10]
 552:main.c        ****             txMessage.msg.position        = Position;
 687              		.loc 1 552 0
 688 018a 294A     		ldr	r2, .L52+60
 689 018c 1278     		ldrb	r2, [r2]
 690 018e 1A72     		strb	r2, [r3, #8]
 553:main.c        ****             txMessage.msg.pwm             = PWM;
 691              		.loc 1 553 0
 692 0190 0A68     		ldr	r2, [r1]
 693 0192 5A73     		strb	r2, [r3, #13]
 694 0194 100A     		lsrs	r0, r2, #8
 695 0196 9873     		strb	r0, [r3, #14]
 696 0198 100C     		lsrs	r0, r2, #16
 697 019a D873     		strb	r0, [r3, #15]
 698 019c 120E     		lsrs	r2, r2, #24
 699 019e 1A74     		strb	r2, [r3, #16]
 554:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                            
 700              		.loc 1 554 0
 701 01a0 274A     		ldr	r2, .L52+76
 702 01a2 1268     		ldr	r2, [r2]
 703 01a4 5A74     		strb	r2, [r3, #17]
 704 01a6 100A     		lsrs	r0, r2, #8
 705 01a8 9874     		strb	r0, [r3, #18]
 706 01aa 100C     		lsrs	r0, r2, #16
 707 01ac D874     		strb	r0, [r3, #19]
 708 01ae 120E     		lsrs	r2, r2, #24
 709 01b0 1A75     		strb	r2, [r3, #20]
 555:main.c        ****             
 710              		.loc 1 555 0
 711 01b2 244A     		ldr	r2, .L52+80
 712 01b4 1288     		ldrh	r2, [r2]
 713 01b6 DA72     		strb	r2, [r3, #11]
 714 01b8 120A     		lsrs	r2, r2, #8
 715 01ba 1A73     		strb	r2, [r3, #12]
 716              	.LVL52:
 558:main.c        ****                 checksum += txMessage.buf[i]; 
 717              		.loc 1 558 0
 718 01bc 0022     		movs	r2, #0
 719 01be 0023     		movs	r3, #0
 720 01c0 05E0     		b	.L49
 721              	.LVL53:
 722              	.L50:
 559:main.c        ****                 
 723              		.loc 1 559 0 discriminator 3
 724 01c2 0F49     		ldr	r1, .L52+12
 725 01c4 C95C     		ldrb	r1, [r1, r3]
 726 01c6 5218     		adds	r2, r2, r1
 727              	.LVL54:
 728 01c8 D2B2     		uxtb	r2, r2
 729              	.LVL55:
 558:main.c        ****                 checksum += txMessage.buf[i]; 
 730              		.loc 1 558 0 discriminator 3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 37


 731 01ca 0133     		adds	r3, r3, #1
 732              	.LVL56:
 733 01cc DBB2     		uxtb	r3, r3
 734              	.LVL57:
 735              	.L49:
 558:main.c        ****                 checksum += txMessage.buf[i]; 
 736              		.loc 1 558 0 is_stmt 0 discriminator 1
 737 01ce 142B     		cmp	r3, #20
 738 01d0 F7D9     		bls	.L50
 562:main.c        ****                 
 739              		.loc 1 562 0 is_stmt 1
 740 01d2 0B48     		ldr	r0, .L52+12
 741 01d4 5242     		rsbs	r2, r2, #0
 742              	.LVL58:
 743 01d6 0270     		strb	r2, [r0]
 566:main.c        **** 
 744              		.loc 1 566 0
 745 01d8 1E21     		movs	r1, #30
 746 01da FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 747              	.LVL59:
 569:main.c        ****             
 748              		.loc 1 569 0
 749 01de 0122     		movs	r2, #1
 750 01e0 054B     		ldr	r3, .L52+4
 751 01e2 1A70     		strb	r2, [r3]
 572:main.c        ****                 ClearFault(fsNONE);
 752              		.loc 1 572 0
 753 01e4 054B     		ldr	r3, .L52+8
 754 01e6 5B7A     		ldrb	r3, [r3, #9]
 755 01e8 002B     		cmp	r3, #0
 756 01ea 02D0     		beq	.L37
 573:main.c        ****         
 757              		.loc 1 573 0
 758 01ec 0020     		movs	r0, #0
 759 01ee FFF7FEFF 		bl	ClearFault
 760              	.LVL60:
 761              	.L37:
 583:main.c        ****     
 762              		.loc 1 583 0
 763              		@ sp needed
 764 01f2 10BD     		pop	{r4, pc}
 765              	.L53:
 766              		.align	2
 767              	.L52:
 768 01f4 24000740 		.word	1074200612
 769 01f8 00000000 		.word	txMessageState
 770 01fc 00000000 		.word	rxMessage
 771 0200 00000000 		.word	txMessage
 772 0204 00000000 		.word	ChecksumErrors
 773 0208 00000000 		.word	LastPosition
 774 020c 00000000 		.word	PID_Setpoint
 775 0210 00000000 		.word	PID_EffectiveSetpoint
 776 0214 00000000 		.word	PID_Was_Enabled
 777 0218 00000000 		.word	PID_Enabled
 778 021c 00000000 		.word	outMax_Total
 779 0220 00000000 		.word	pwmLimit
 780 0224 00000000 		.word	pwmMax
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 38


 781 0228 00000000 		.word	pwmMin
 782 022c 00000000 		.word	ConfigState
 783 0230 00000000 		.word	ConfigSequence
 784 0234 00000000 		.word	Jog
 785 0238 00000000 		.word	Position
 786 023c 00000000 		.word	FaultState
 787 0240 00000000 		.word	PWM
 788 0244 00000000 		.word	MotorCurrent
 789              		.cfi_endproc
 790              	.LFE35:
 791              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 792              		.section	.text.PID_Initialize,"ax",%progbits
 793              		.align	2
 794              		.global	PID_Initialize
 795              		.code	16
 796              		.thumb_func
 797              		.type	PID_Initialize, %function
 798              	PID_Initialize:
 799              	.LFB38:
 662:main.c        ****     
 800              		.loc 1 662 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804 0000 10B5     		push	{r4, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 665:main.c        ****     LastPosition = Position;
 808              		.loc 1 665 0
 809 0002 FFF7FEFF 		bl	GetPosition
 810              	.LVL61:
 811 0006 064B     		ldr	r3, .L55
 812 0008 1860     		str	r0, [r3]
 666:main.c        ****     
 813              		.loc 1 666 0
 814 000a 1A68     		ldr	r2, [r3]
 815 000c 054B     		ldr	r3, .L55+4
 816 000e 1A60     		str	r2, [r3]
 670:main.c        ****     
 817              		.loc 1 670 0
 818 0010 1A68     		ldr	r2, [r3]
 819 0012 054B     		ldr	r3, .L55+8
 820 0014 1A60     		str	r2, [r3]
 674:main.c        **** }    
 821              		.loc 1 674 0
 822 0016 0022     		movs	r2, #0
 823 0018 044B     		ldr	r3, .L55+12
 824 001a 1A60     		str	r2, [r3]
 675:main.c        **** 
 825              		.loc 1 675 0
 826              		@ sp needed
 827 001c 10BD     		pop	{r4, pc}
 828              	.L56:
 829 001e C046     		.align	2
 830              	.L55:
 831 0020 00000000 		.word	Position
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 39


 832 0024 00000000 		.word	LastPosition
 833 0028 00000000 		.word	PID_EffectiveSetpoint
 834 002c 00000000 		.word	ITerm
 835              		.cfi_endproc
 836              	.LFE38:
 837              		.size	PID_Initialize, .-PID_Initialize
 838              		.section	.text.PID_SetMode,"ax",%progbits
 839              		.align	2
 840              		.global	PID_SetMode
 841              		.code	16
 842              		.thumb_func
 843              		.type	PID_SetMode, %function
 844              	PID_SetMode:
 845              	.LFB39:
 687:main.c        ****     
 846              		.loc 1 687 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              	.LVL62:
 851 0000 10B5     		push	{r4, lr}
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 4, -8
 854              		.cfi_offset 14, -4
 689:main.c        ****     
 855              		.loc 1 689 0
 856 0002 441E     		subs	r4, r0, #1
 857 0004 6342     		rsbs	r3, r4, #0
 858 0006 5C41     		adcs	r4, r4, r3
 859 0008 E4B2     		uxtb	r4, r4
 860              	.LVL63:
 691:main.c        ****         /*we just went from manual to auto*/
 861              		.loc 1 691 0
 862 000a 0128     		cmp	r0, #1
 863 000c 05D1     		bne	.L58
 691:main.c        ****         /*we just went from manual to auto*/
 864              		.loc 1 691 0 is_stmt 0 discriminator 1
 865 000e 044B     		ldr	r3, .L59
 866 0010 1B7C     		ldrb	r3, [r3, #16]
 867 0012 002B     		cmp	r3, #0
 868 0014 01D1     		bne	.L58
 693:main.c        ****     }
 869              		.loc 1 693 0 is_stmt 1
 870 0016 FFF7FEFF 		bl	PID_Initialize
 871              	.LVL64:
 872              	.L58:
 696:main.c        **** } 
 873              		.loc 1 696 0
 874 001a 014B     		ldr	r3, .L59
 875 001c 1C74     		strb	r4, [r3, #16]
 697:main.c        **** 
 876              		.loc 1 697 0
 877              		@ sp needed
 878              	.LVL65:
 879 001e 10BD     		pop	{r4, pc}
 880              	.L60:
 881              		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 40


 882              	.L59:
 883 0020 00000000 		.word	.LANCHOR1
 884              		.cfi_endproc
 885              	.LFE39:
 886              		.size	PID_SetMode, .-PID_SetMode
 887              		.section	.text.runRateGroup1_PID,"ax",%progbits
 888              		.align	2
 889              		.global	runRateGroup1_PID
 890              		.code	16
 891              		.thumb_func
 892              		.type	runRateGroup1_PID, %function
 893              	runRateGroup1_PID:
 894              	.LFB40:
 732:main.c        ****     
 895              		.loc 1 732 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899 0000 10B5     		push	{r4, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 14, -4
 748:main.c        ****         
 903              		.loc 1 748 0
 904 0002 374B     		ldr	r3, .L73
 905 0004 1B68     		ldr	r3, [r3]
 906 0006 0133     		adds	r3, r3, #1
 907 0008 0024     		movs	r4, #0
 908 000a 364A     		ldr	r2, .L73+4
 909 000c 1068     		ldr	r0, [r2]
 910 000e 5168     		ldr	r1, [r2, #4]
 911 0010 0029     		cmp	r1, #0
 912 0012 03D1     		bne	.L72
 913 0014 A142     		cmp	r1, r4
 914 0016 0AD1     		bne	.L62
 915 0018 9842     		cmp	r0, r3
 916 001a 08D9     		bls	.L62
 917              	.L72:
 752:main.c        ****         PID_Enabled = false;
 918              		.loc 1 752 0
 919 001c 0020     		movs	r0, #0
 920 001e FFF7FEFF 		bl	PWM_Set
 921              	.LVL66:
 753:main.c        ****         
 922              		.loc 1 753 0
 923 0022 0023     		movs	r3, #0
 924 0024 304A     		ldr	r2, .L73+8
 925 0026 1370     		strb	r3, [r2]
 757:main.c        **** 
 926              		.loc 1 757 0
 927 0028 304A     		ldr	r2, .L73+12
 928 002a 1370     		strb	r3, [r2]
 929 002c 57E0     		b	.L61
 930              	.L62:
 760:main.c        ****         
 931              		.loc 1 760 0
 932 002e 304B     		ldr	r3, .L73+16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 41


 933 0030 1B78     		ldrb	r3, [r3]
 934 0032 022B     		cmp	r3, #2
 935 0034 53D1     		bne	.L61
 764:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 936              		.loc 1 764 0
 937 0036 0620     		movs	r0, #6
 938 0038 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 939              	.LVL67:
 765:main.c        **** 
 940              		.loc 1 765 0
 941 003c 0620     		movs	r0, #6
 942 003e FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 943              	.LVL68:
 768:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 944              		.loc 1 768 0
 945 0042 2C4B     		ldr	r3, .L73+20
 946 0044 1B78     		ldrb	r3, [r3]
 947 0046 002B     		cmp	r3, #0
 948 0048 07D1     		bne	.L65
 768:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 949              		.loc 1 768 0 is_stmt 0 discriminator 1
 950 004a 274A     		ldr	r2, .L73+8
 951 004c 1278     		ldrb	r2, [r2]
 952 004e 002A     		cmp	r2, #0
 953 0050 03D0     		beq	.L65
 769:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 954              		.loc 1 769 0 is_stmt 1
 955 0052 0120     		movs	r0, #1
 956 0054 FFF7FEFF 		bl	PID_SetMode
 957              	.LVL69:
 958 0058 08E0     		b	.L66
 959              	.L65:
 770:main.c        ****             PID_SetMode(PID_MANUAL);                
 960              		.loc 1 770 0
 961 005a 234A     		ldr	r2, .L73+8
 962 005c 1278     		ldrb	r2, [r2]
 963 005e 002A     		cmp	r2, #0
 964 0060 04D1     		bne	.L66
 770:main.c        ****             PID_SetMode(PID_MANUAL);                
 965              		.loc 1 770 0 is_stmt 0 discriminator 1
 966 0062 002B     		cmp	r3, #0
 967 0064 02D0     		beq	.L66
 771:main.c        ****         } else {
 968              		.loc 1 771 0 is_stmt 1
 969 0066 0020     		movs	r0, #0
 970 0068 FFF7FEFF 		bl	PID_SetMode
 971              	.LVL70:
 972              	.L66:
 777:main.c        ****         
 973              		.loc 1 777 0
 974 006c 1E4B     		ldr	r3, .L73+8
 975 006e 1B78     		ldrb	r3, [r3]
 976 0070 204A     		ldr	r2, .L73+20
 977 0072 1370     		strb	r3, [r2]
 795:main.c        ****             
 978              		.loc 1 795 0
 979 0074 002B     		cmp	r3, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 42


 980 0076 2FD0     		beq	.L67
 797:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 981              		.loc 1 797 0
 982 0078 1F4B     		ldr	r3, .L73+24
 983 007a 1B78     		ldrb	r3, [r3]
 984 007c 002B     		cmp	r3, #0
 985 007e 04D1     		bne	.L68
 798:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 986              		.loc 1 798 0
 987 0080 1E4B     		ldr	r3, .L73+28
 988 0082 1A68     		ldr	r2, [r3]
 989 0084 1E4B     		ldr	r3, .L73+32
 990 0086 1A60     		str	r2, [r3]
 991 0088 16E0     		b	.L69
 992              	.L68:
 799:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 993              		.loc 1 799 0
 994 008a 1D4A     		ldr	r2, .L73+32
 995 008c 1168     		ldr	r1, [r2]
 996 008e 1B4A     		ldr	r2, .L73+28
 997 0090 1068     		ldr	r0, [r2]
 998 0092 0A1A     		subs	r2, r1, r0
 999 0094 D417     		asrs	r4, r2, #31
 1000 0096 1219     		adds	r2, r2, r4
 1001 0098 6240     		eors	r2, r4
 1002 009a 5C00     		lsls	r4, r3, #1
 1003 009c A242     		cmp	r2, r4
 1004 009e 02DC     		bgt	.L70
 800:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1005              		.loc 1 800 0
 1006 00a0 174B     		ldr	r3, .L73+32
 1007 00a2 1860     		str	r0, [r3]
 1008 00a4 08E0     		b	.L69
 1009              	.L70:
 801:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1010              		.loc 1 801 0
 1011 00a6 8142     		cmp	r1, r0
 1012 00a8 03DA     		bge	.L71
 802:main.c        ****             } else {
 1013              		.loc 1 802 0
 1014 00aa CB18     		adds	r3, r1, r3
 1015 00ac 144A     		ldr	r2, .L73+32
 1016 00ae 1360     		str	r3, [r2]
 1017 00b0 02E0     		b	.L69
 1018              	.L71:
 804:main.c        ****             }
 1019              		.loc 1 804 0
 1020 00b2 CB1A     		subs	r3, r1, r3
 1021 00b4 124A     		ldr	r2, .L73+32
 1022 00b6 1360     		str	r3, [r2]
 1023              	.L69:
 808:main.c        **** 
 1024              		.loc 1 808 0
 1025 00b8 FFF7FEFF 		bl	GetPosition
 1026              	.LVL71:
 1027 00bc 114B     		ldr	r3, .L73+36
 1028 00be 1860     		str	r0, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 43


 811:main.c        ****             
 1029              		.loc 1 811 0
 1030 00c0 1968     		ldr	r1, [r3]
 1031 00c2 0F4B     		ldr	r3, .L73+32
 1032 00c4 1868     		ldr	r0, [r3]
 1033 00c6 FFF7FEFF 		bl	PID_UpdateValues
 1034              	.LVL72:
 1035 00ca 0F4B     		ldr	r3, .L73+40
 1036 00cc 1860     		str	r0, [r3]
 815:main.c        ****             
 1037              		.loc 1 815 0
 1038 00ce 0F4B     		ldr	r3, .L73+44
 1039 00d0 1860     		str	r0, [r3]
 819:main.c        **** 
 1040              		.loc 1 819 0
 1041 00d2 FFF7FEFF 		bl	PWM_Set
 1042              	.LVL73:
 1043 00d6 02E0     		b	.L61
 1044              	.L67:
 823:main.c        ****         }
 1045              		.loc 1 823 0
 1046 00d8 0022     		movs	r2, #0
 1047 00da 0C4B     		ldr	r3, .L73+44
 1048 00dc 1A60     		str	r2, [r3]
 1049              	.L61:
 831:main.c        **** 
 1050              		.loc 1 831 0
 1051              		@ sp needed
 1052 00de 10BD     		pop	{r4, pc}
 1053              	.L74:
 1054              		.align	2
 1055              	.L73:
 1056 00e0 00000000 		.word	LastMessageTimeSeconds
 1057 00e4 00000000 		.word	.LANCHOR1
 1058 00e8 00000000 		.word	PID_Enabled
 1059 00ec 00000000 		.word	Jog
 1060 00f0 00000000 		.word	ConfigState
 1061 00f4 00000000 		.word	PID_Was_Enabled
 1062 00f8 00000000 		.word	PID_EffSetDelta
 1063 00fc 00000000 		.word	PID_Setpoint
 1064 0100 00000000 		.word	PID_EffectiveSetpoint
 1065 0104 00000000 		.word	Position
 1066 0108 00000000 		.word	Output
 1067 010c 00000000 		.word	PWM
 1068              		.cfi_endproc
 1069              	.LFE40:
 1070              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1071              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1072              		.align	2
 1073              		.global	BRMS_Interrupt
 1074              		.code	16
 1075              		.thumb_func
 1076              		.type	BRMS_Interrupt, %function
 1077              	BRMS_Interrupt:
 1078              	.LFB42:
1037:main.c        ****     
 1079              		.loc 1 1037 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 44


 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083 0000 70B5     		push	{r4, r5, r6, lr}
 1084              		.cfi_def_cfa_offset 16
 1085              		.cfi_offset 4, -16
 1086              		.cfi_offset 5, -12
 1087              		.cfi_offset 6, -8
 1088              		.cfi_offset 14, -4
1048:main.c        **** 
 1089              		.loc 1 1048 0
 1090 0002 0220     		movs	r0, #2
 1091 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
 1092              	.LVL74:
1050:main.c        ****     
 1093              		.loc 1 1050 0
 1094 0008 0120     		movs	r0, #1
 1095 000a FFF7FEFF 		bl	PROBE_Write
 1096              	.LVL75:
1053:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 1097              		.loc 1 1053 0
 1098 000e 2A4B     		ldr	r3, .L84
 1099 0010 9C69     		ldr	r4, [r3, #24]
 1100 0012 DD69     		ldr	r5, [r3, #28]
 1101 0014 C820     		movs	r0, #200
 1102 0016 0021     		movs	r1, #0
 1103 0018 2418     		adds	r4, r4, r0
 1104 001a 4D41     		adcs	r5, r5, r1
 1105 001c 9C61     		str	r4, [r3, #24]
 1106 001e DD61     		str	r5, [r3, #28]
1054:main.c        ****     
 1107              		.loc 1 1054 0
 1108 0020 1C6A     		ldr	r4, [r3, #32]
 1109 0022 5D6A     		ldr	r5, [r3, #36]
 1110 0024 0019     		adds	r0, r0, r4
 1111 0026 6941     		adcs	r1, r1, r5
 1112 0028 1862     		str	r0, [r3, #32]
 1113 002a 5962     		str	r1, [r3, #36]
1057:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1114              		.loc 1 1057 0
 1115 002c 196A     		ldr	r1, [r3, #32]
 1116 002e 5A6A     		ldr	r2, [r3, #36]
 1117 0030 002A     		cmp	r2, #0
 1118 0032 04D1     		bne	.L82
 1119 0034 16D1     		bne	.L76
 1120 0036 FA23     		movs	r3, #250
 1121 0038 9B00     		lsls	r3, r3, #2
 1122 003a 9942     		cmp	r1, r3
 1123 003c 12D9     		bls	.L76
 1124              	.L82:
1058:main.c        ****         UptimeMilliseconds += 1;
 1125              		.loc 1 1058 0
 1126 003e 1E4B     		ldr	r3, .L84
 1127 0040 0020     		movs	r0, #0
 1128 0042 0021     		movs	r1, #0
 1129 0044 1862     		str	r0, [r3, #32]
 1130 0046 5962     		str	r1, [r3, #36]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 45


1059:main.c        ****         UptimeMillisecondsAccumulator += 1;
 1131              		.loc 1 1059 0
 1132 0048 9C6A     		ldr	r4, [r3, #40]
 1133 004a DD6A     		ldr	r5, [r3, #44]
 1134 004c 0120     		movs	r0, #1
 1135 004e 0021     		movs	r1, #0
 1136 0050 2418     		adds	r4, r4, r0
 1137 0052 4D41     		adcs	r5, r5, r1
 1138 0054 9C62     		str	r4, [r3, #40]
 1139 0056 DD62     		str	r5, [r3, #44]
1060:main.c        ****     }
 1140              		.loc 1 1060 0
 1141 0058 1C6B     		ldr	r4, [r3, #48]
 1142 005a 5D6B     		ldr	r5, [r3, #52]
 1143 005c 0019     		adds	r0, r0, r4
 1144 005e 6941     		adcs	r1, r1, r5
 1145 0060 1863     		str	r0, [r3, #48]
 1146 0062 5963     		str	r1, [r3, #52]
 1147              	.L76:
1064:main.c        ****         UptimeMillisecondsAccumulator = 0;
 1148              		.loc 1 1064 0
 1149 0064 144B     		ldr	r3, .L84
 1150 0066 196B     		ldr	r1, [r3, #48]
 1151 0068 5A6B     		ldr	r2, [r3, #52]
 1152 006a 002A     		cmp	r2, #0
 1153 006c 04D1     		bne	.L83
 1154 006e 10D1     		bne	.L78
 1155 0070 FA23     		movs	r3, #250
 1156 0072 9B00     		lsls	r3, r3, #2
 1157 0074 9942     		cmp	r1, r3
 1158 0076 0CD9     		bls	.L78
 1159              	.L83:
1065:main.c        ****         UptimeSeconds += 1;
 1160              		.loc 1 1065 0
 1161 0078 0F4B     		ldr	r3, .L84
 1162 007a 0020     		movs	r0, #0
 1163 007c 0021     		movs	r1, #0
 1164 007e 1863     		str	r0, [r3, #48]
 1165 0080 5963     		str	r1, [r3, #52]
1066:main.c        ****     }
 1166              		.loc 1 1066 0
 1167 0082 1C68     		ldr	r4, [r3]
 1168 0084 5D68     		ldr	r5, [r3, #4]
 1169 0086 0120     		movs	r0, #1
 1170 0088 0021     		movs	r1, #0
 1171 008a 0019     		adds	r0, r0, r4
 1172 008c 6941     		adcs	r1, r1, r5
 1173 008e 1860     		str	r0, [r3]
 1174 0090 5960     		str	r1, [r3, #4]
 1175              	.L78:
1070:main.c        **** 
 1176              		.loc 1 1070 0
 1177 0092 094A     		ldr	r2, .L84
 1178 0094 936B     		ldr	r3, [r2, #56]
 1179 0096 0133     		adds	r3, r3, #1
 1180 0098 9363     		str	r3, [r2, #56]
1090:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 46


 1181              		.loc 1 1090 0
 1182 009a DA07     		lsls	r2, r3, #31
 1183 009c 02D5     		bpl	.L80
1095:main.c        ****         
 1184              		.loc 1 1095 0
 1185 009e FFF7FEFF 		bl	runRateGroup1_PID
 1186              	.LVL76:
 1187 00a2 05E0     		b	.L81
 1188              	.L80:
1097:main.c        ****         
 1189              		.loc 1 1097 0
 1190 00a4 9A07     		lsls	r2, r3, #30
 1191 00a6 03D4     		bmi	.L81
1102:main.c        ****         
 1192              		.loc 1 1102 0
 1193 00a8 5B07     		lsls	r3, r3, #29
 1194 00aa 01D5     		bpl	.L81
1105:main.c        ****         
 1195              		.loc 1 1105 0
 1196 00ac FFF7FEFF 		bl	runRateGroup3_SPI
 1197              	.LVL77:
 1198              	.L81:
1118:main.c        ****    
 1199              		.loc 1 1118 0
 1200 00b0 0020     		movs	r0, #0
 1201 00b2 FFF7FEFF 		bl	PROBE_Write
 1202              	.LVL78:
1120:main.c        **** 
 1203              		.loc 1 1120 0
 1204              		@ sp needed
 1205 00b6 70BD     		pop	{r4, r5, r6, pc}
 1206              	.L85:
 1207              		.align	2
 1208              	.L84:
 1209 00b8 00000000 		.word	.LANCHOR1
 1210              		.cfi_endproc
 1211              	.LFE42:
 1212              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1213              		.section	.text.main,"ax",%progbits
 1214              		.align	2
 1215              		.global	main
 1216              		.code	16
 1217              		.thumb_func
 1218              		.type	main, %function
 1219              	main:
 1220              	.LFB41:
 843:main.c        ****    
 1221              		.loc 1 843 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0000 70B5     		push	{r4, r5, r6, lr}
 1226              		.cfi_def_cfa_offset 16
 1227              		.cfi_offset 4, -16
 1228              		.cfi_offset 5, -12
 1229              		.cfi_offset 6, -8
 1230              		.cfi_offset 14, -4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 47


 851:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1231              		.loc 1 851 0
 1232 0002 0120     		movs	r0, #1
 1233 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1234              	.LVL79:
 852:main.c        **** 
 1235              		.loc 1 852 0
 1236 0008 0120     		movs	r0, #1
 1237 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1238              	.LVL80:
 860:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1239              		.loc 1 860 0
 1240 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1241              	.LVL81:
 861:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1242              		.loc 1 861 0
 1243 0012 3948     		ldr	r0, .L91
 1244 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1245              	.LVL82:
 862:main.c        **** 
 1246              		.loc 1 862 0
 1247 0018 0220     		movs	r0, #2
 1248 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1249              	.LVL83:
 865:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1250              		.loc 1 865 0
 1251 001e 3748     		ldr	r0, .L91+4
 1252 0020 FFF7FEFF 		bl	isr_home_StartEx
 1253              	.LVL84:
 866:main.c        **** 
 1254              		.loc 1 866 0
 1255 0024 0320     		movs	r0, #3
 1256 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1257              	.LVL85:
 869:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1258              		.loc 1 869 0
 1259 002a 3548     		ldr	r0, .L91+8
 1260 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1261              	.LVL86:
 870:main.c        ****     
 1262              		.loc 1 870 0
 1263 0030 0320     		movs	r0, #3
 1264 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1265              	.LVL87:
 873:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 1266              		.loc 1 873 0
 1267 0036 3348     		ldr	r0, .L91+12
 1268 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1269              	.LVL88:
 874:main.c        **** 
 1270              		.loc 1 874 0
 1271 003c 0320     		movs	r0, #3
 1272 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1273              	.LVL89:
 877:main.c        ****     
 1274              		.loc 1 877 0
 1275              		.syntax divided
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 48


 1276              	@ 877 "main.c" 1
 1277 0042 62B6     		CPSIE   i
 1278              	@ 0 "" 2
 906:main.c        ****     
 1279              		.loc 1 906 0
 1280              		.thumb
 1281              		.syntax unified
 1282 0044 FFF7FEFF 		bl	I2C_Start
 1283              	.LVL90:
 911:main.c        ****     SPI_1_Start();
 1284              		.loc 1 911 0
 1285 0048 6420     		movs	r0, #100
 1286 004a FFF7FEFF 		bl	CyDelay
 1287              	.LVL91:
 912:main.c        ****     
 1288              		.loc 1 912 0
 1289 004e FFF7FEFF 		bl	SPI_1_Start
 1290              	.LVL92:
 916:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1291              		.loc 1 916 0
 1292 0052 FFF7FEFF 		bl	PWM_1_Start
 1293              	.LVL93:
 917:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 1294              		.loc 1 917 0
 1295 0056 C820     		movs	r0, #200
 1296 0058 C000     		lsls	r0, r0, #3
 1297 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1298              	.LVL94:
 918:main.c        ****     
 1299              		.loc 1 918 0
 1300 005e 0020     		movs	r0, #0
 1301 0060 FFF7FEFF 		bl	PWM_Set
 1302              	.LVL95:
 921:main.c        ****     
 1303              		.loc 1 921 0
 1304 0064 0024     		movs	r4, #0
 1305 0066 284B     		ldr	r3, .L91+16
 1306 0068 1C70     		strb	r4, [r3]
 924:main.c        ****    
 1307              		.loc 1 924 0
 1308 006a 284B     		ldr	r3, .L91+20
 1309 006c 1C70     		strb	r4, [r3]
 927:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1310              		.loc 1 927 0
 1311 006e FFF7FEFF 		bl	Counter_1_Start
 1312              	.LVL96:
 928:main.c        ****     LastPosition = ENCODER_MAX;
 1313              		.loc 1 928 0
 1314 0072 274D     		ldr	r5, .L91+24
 1315 0074 2800     		movs	r0, r5
 1316 0076 FFF7FEFF 		bl	Counter_1_WriteCounter
 1317              	.LVL97:
 929:main.c        ****     
 1318              		.loc 1 929 0
 1319 007a 264B     		ldr	r3, .L91+28
 1320 007c 1D60     		str	r5, [r3]
 932:main.c        ****     Index_Counter_1_WriteCounter(0);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 49


 1321              		.loc 1 932 0
 1322 007e FFF7FEFF 		bl	Index_Counter_1_Start
 1323              	.LVL98:
 933:main.c        ****      
 1324              		.loc 1 933 0
 1325 0082 0020     		movs	r0, #0
 1326 0084 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1327              	.LVL99:
 936:main.c        ****     ConfigSequence = 0;
 1328              		.loc 1 936 0
 1329 0088 0122     		movs	r2, #1
 1330 008a 234B     		ldr	r3, .L91+32
 1331 008c 1A70     		strb	r2, [r3]
 937:main.c        ****     ChecksumErrors = 0;
 1332              		.loc 1 937 0
 1333 008e 234B     		ldr	r3, .L91+36
 1334 0090 1C70     		strb	r4, [r3]
 938:main.c        ****     
 1335              		.loc 1 938 0
 1336 0092 234B     		ldr	r3, .L91+40
 1337 0094 1C80     		strh	r4, [r3]
 942:main.c        ****     PID_SetMode(PID_MANUAL);
 1338              		.loc 1 942 0
 1339 0096 FFF7FEFF 		bl	PID_Initialize
 1340              	.LVL100:
 943:main.c        ****     
 1341              		.loc 1 943 0
 1342 009a 0020     		movs	r0, #0
 1343 009c FFF7FEFF 		bl	PID_SetMode
 1344              	.LVL101:
 946:main.c        ****     outMax_ITerm = 100;
 1345              		.loc 1 946 0
 1346 00a0 6423     		movs	r3, #100
 1347 00a2 204A     		ldr	r2, .L91+44
 1348 00a4 1360     		str	r3, [r2]
 947:main.c        **** 
 1349              		.loc 1 947 0
 1350 00a6 204A     		ldr	r2, .L91+48
 1351 00a8 1360     		str	r3, [r2]
 950:main.c        ****     pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 1352              		.loc 1 950 0
 1353 00aa 3221     		movs	r1, #50
 1354 00ac 1F4A     		ldr	r2, .L91+52
 1355 00ae 1160     		str	r1, [r2]
 951:main.c        ****     pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 1356              		.loc 1 951 0
 1357 00b0 1F4A     		ldr	r2, .L91+56
 1358 00b2 1360     		str	r3, [r2]
 952:main.c        ****     
 1359              		.loc 1 952 0
 1360 00b4 1F4B     		ldr	r3, .L91+60
 1361 00b6 1C60     		str	r4, [r3]
 955:main.c        ****     PID_EffectiveSetpoint = 0;
 1362              		.loc 1 955 0
 1363 00b8 1F4B     		ldr	r3, .L91+64
 1364 00ba 1C60     		str	r4, [r3]
 956:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 50


 1365              		.loc 1 956 0
 1366 00bc 1F4B     		ldr	r3, .L91+68
 1367 00be 1C60     		str	r4, [r3]
 957:main.c        ****     PID_Was_Enabled       = false;
 1368              		.loc 1 957 0
 1369 00c0 FA22     		movs	r2, #250
 1370 00c2 1F4B     		ldr	r3, .L91+72
 1371 00c4 1A70     		strb	r2, [r3]
 958:main.c        ****     PID_Enabled           = false;
 1372              		.loc 1 958 0
 1373 00c6 1F4B     		ldr	r3, .L91+76
 1374 00c8 0022     		movs	r2, #0
 1375 00ca 1A70     		strb	r2, [r3]
 959:main.c        ****     //PID_SetDrive(0); // Drive set to 0%
 1376              		.loc 1 959 0
 1377 00cc 1E4B     		ldr	r3, .L91+80
 1378 00ce 1A70     		strb	r2, [r3]
 961:main.c        ****     
 1379              		.loc 1 961 0
 1380 00d0 0020     		movs	r0, #0
 1381 00d2 FFF7FEFF 		bl	PWM_Set
 1382              	.LVL102:
 1383              	.L90:
1000:main.c        ****             LED_Write(1);
 1384              		.loc 1 1000 0
 1385 00d6 1D4B     		ldr	r3, .L91+84
 1386 00d8 1A68     		ldr	r2, [r3]
 1387 00da 5B68     		ldr	r3, [r3, #4]
 1388 00dc 0123     		movs	r3, #1
 1389 00de 1342     		tst	r3, r2
 1390 00e0 03D0     		beq	.L87
1001:main.c        ****         } else {
 1391              		.loc 1 1001 0
 1392 00e2 0120     		movs	r0, #1
 1393 00e4 FFF7FEFF 		bl	LED_Write
 1394              	.LVL103:
 1395 00e8 02E0     		b	.L89
 1396              	.L87:
1003:main.c        ****         } 
 1397              		.loc 1 1003 0
 1398 00ea 0020     		movs	r0, #0
 1399 00ec FFF7FEFF 		bl	LED_Write
 1400              	.LVL104:
 1401              	.L89:
1007:main.c        ****         
 1402              		.loc 1 1007 0
 1403 00f0 0A20     		movs	r0, #10
 1404 00f2 FFF7FEFF 		bl	CyDelay
 1405              	.LVL105:
1018:main.c        ****       
 1406              		.loc 1 1018 0
 1407 00f6 EEE7     		b	.L90
 1408              	.L92:
 1409              		.align	2
 1410              	.L91:
 1411 00f8 00000000 		.word	BRMS_Interrupt
 1412 00fc 00000000 		.word	HomeIsrHandler
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 51


 1413 0100 00000000 		.word	RSTIsrHandler
 1414 0104 00000000 		.word	SPI_SS_IsrHandler
 1415 0108 00000000 		.word	Jog
 1416 010c 00000000 		.word	.LANCHOR0
 1417 0110 FFFFFF00 		.word	16777215
 1418 0114 00000000 		.word	LastPosition
 1419 0118 00000000 		.word	ConfigState
 1420 011c 00000000 		.word	ConfigSequence
 1421 0120 00000000 		.word	ChecksumErrors
 1422 0124 00000000 		.word	outMax_Total
 1423 0128 00000000 		.word	outMax_ITerm
 1424 012c 00000000 		.word	pwmLimit
 1425 0130 00000000 		.word	pwmMax
 1426 0134 00000000 		.word	pwmMin
 1427 0138 00000000 		.word	PID_Setpoint
 1428 013c 00000000 		.word	PID_EffectiveSetpoint
 1429 0140 00000000 		.word	PID_EffSetDelta
 1430 0144 00000000 		.word	PID_Was_Enabled
 1431 0148 00000000 		.word	PID_Enabled
 1432 014c 00000000 		.word	.LANCHOR1
 1433              		.cfi_endproc
 1434              	.LFE41:
 1435              		.size	main, .-main
 1436              		.comm	txMessageState,1,1
 1437              		.comm	txMessage,30,4
 1438              		.comm	rxMessage,30,4
 1439              		.comm	LastMessageTimeSeconds,4,4
 1440              		.comm	CurrentI2Cinbuf,20,4
 1441              		.comm	MotorCurrent,2,2
 1442              		.comm	ChecksumErrors,2,2
 1443              		.comm	ConfigSequence,1,1
 1444              		.comm	FaultState,1,1
 1445              		.comm	ConfigState,1,1
 1446              		.global	UptimeSeconds
 1447              		.global	UptimeMillisecondsAccumulator
 1448              		.global	UptimeMilliseconds
 1449              		.global	UptimeMicrosecondsAccumulator
 1450              		.global	UptimeMicroseconds
 1451              		.global	homingDone
 1452              		.comm	PWM,4,4
 1453              		.comm	pwmMin,4,4
 1454              		.comm	pwmMax,4,4
 1455              		.comm	pwmLimit,4,4
 1456              		.comm	outMax_ITerm,4,4
 1457              		.comm	outMax_Total,4,4
 1458              		.global	kd
 1459              		.global	ki
 1460              		.global	kp
 1461              		.comm	ITerm,4,4
 1462              		.comm	Output,4,4
 1463              		.comm	LastPosition,4,4
 1464              		.comm	Position,4,4
 1465              		.global	refSampleTime
 1466              		.comm	lastTime,4,4
 1467              		.comm	PID_EffSetDelta,1,1
 1468              		.comm	PID_EffectiveSetpoint,4,4
 1469              		.comm	PID_Setpoint,4,4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 52


 1470              		.comm	PID_Was_Enabled,1,1
 1471              		.comm	PID_Enabled,1,1
 1472              		.comm	LastJog,1,1
 1473              		.comm	Jog,1,1
 1474              		.global	inAuto
 1475              		.data
 1476              		.align	2
 1477              		.set	.LANCHOR0,. + 0
 1478              		.type	homingDone, %object
 1479              		.size	homingDone, 1
 1480              	homingDone:
 1481 0000 01       		.byte	1
 1482 0001 000000   		.space	3
 1483              		.type	ki, %object
 1484              		.size	ki, 4
 1485              	ki:
 1486 0004 0A000000 		.word	10
 1487              		.type	kp, %object
 1488              		.size	kp, 4
 1489              	kp:
 1490 0008 14000000 		.word	20
 1491              		.type	refSampleTime, %object
 1492              		.size	refSampleTime, 4
 1493              	refSampleTime:
 1494 000c 05000000 		.word	5
 1495              		.bss
 1496              		.align	3
 1497              		.set	.LANCHOR1,. + 0
 1498              		.type	UptimeSeconds, %object
 1499              		.size	UptimeSeconds, 8
 1500              	UptimeSeconds:
 1501 0000 00000000 		.space	8
 1501      00000000 
 1502              		.type	RawPosition.7276, %object
 1503              		.size	RawPosition.7276, 4
 1504              	RawPosition.7276:
 1505 0008 00000000 		.space	4
 1506              		.type	result.7277, %object
 1507              		.size	result.7277, 4
 1508              	result.7277:
 1509 000c 00000000 		.space	4
 1510              		.type	inAuto, %object
 1511              		.size	inAuto, 1
 1512              	inAuto:
 1513 0010 00       		.space	1
 1514 0011 00000000 		.space	7
 1514      000000
 1515              		.type	UptimeMicroseconds, %object
 1516              		.size	UptimeMicroseconds, 8
 1517              	UptimeMicroseconds:
 1518 0018 00000000 		.space	8
 1518      00000000 
 1519              		.type	UptimeMicrosecondsAccumulator, %object
 1520              		.size	UptimeMicrosecondsAccumulator, 8
 1521              	UptimeMicrosecondsAccumulator:
 1522 0020 00000000 		.space	8
 1522      00000000 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 53


 1523              		.type	UptimeMilliseconds, %object
 1524              		.size	UptimeMilliseconds, 8
 1525              	UptimeMilliseconds:
 1526 0028 00000000 		.space	8
 1526      00000000 
 1527              		.type	UptimeMillisecondsAccumulator, %object
 1528              		.size	UptimeMillisecondsAccumulator, 8
 1529              	UptimeMillisecondsAccumulator:
 1530 0030 00000000 		.space	8
 1530      00000000 
 1531              		.type	brmsTask.7302, %object
 1532              		.size	brmsTask.7302, 4
 1533              	brmsTask.7302:
 1534 0038 00000000 		.space	4
 1535              		.type	kd, %object
 1536              		.size	kd, 4
 1537              	kd:
 1538 003c 00000000 		.space	4
 1539              		.text
 1540              	.Letext0:
 1541              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1542              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1543              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1544              		.file 5 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1545              		.file 6 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1546              		.file 7 "Generated_Source\\PSoC4/Counter_1.h"
 1547              		.file 8 "Generated_Source\\PSoC4/Index_Counter_1.h"
 1548              		.file 9 "Generated_Source\\PSoC4/isr_home.h"
 1549              		.file 10 "Generated_Source\\PSoC4/HOME_IN.h"
 1550              		.file 11 "Generated_Source\\PSoC4/spi_ss.h"
 1551              		.file 12 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1552              		.file 13 "INA219.h"
 1553              		.file 14 "Generated_Source\\PSoC4/PWM_1.h"
 1554              		.file 15 "Generated_Source\\PSoC4/HOME_OUT.h"
 1555              		.file 16 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1556              		.file 17 "pid.h"
 1557              		.file 18 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1558              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 1559              		.file 20 "Generated_Source\\PSoC4/isr_brms.h"
 1560              		.file 21 "Generated_Source\\PSoC4/isr_spi_ss.h"
 1561              		.file 22 "Generated_Source\\PSoC4/I2C.h"
 1562              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1563              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1564              		.file 25 "Generated_Source\\PSoC4/LED.h"
 1565              		.section	.debug_info,"",%progbits
 1566              	.Ldebug_info0:
 1567 0000 0D100000 		.4byte	0x100d
 1568 0004 0400     		.2byte	0x4
 1569 0006 00000000 		.4byte	.Ldebug_abbrev0
 1570 000a 04       		.byte	0x4
 1571 000b 01       		.uleb128 0x1
 1572 000c 61020000 		.4byte	.LASF184
 1573 0010 0C       		.byte	0xc
 1574 0011 12000000 		.4byte	.LASF185
 1575 0015 8B050000 		.4byte	.LASF186
 1576 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1577 001d 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 54


 1578 0021 00000000 		.4byte	.Ldebug_line0
 1579 0025 02       		.uleb128 0x2
 1580 0026 3D060000 		.4byte	.LASF0
 1581 002a 02       		.byte	0x2
 1582 002b 1B       		.byte	0x1b
 1583 002c 30000000 		.4byte	0x30
 1584 0030 03       		.uleb128 0x3
 1585 0031 01       		.byte	0x1
 1586 0032 06       		.byte	0x6
 1587 0033 79090000 		.4byte	.LASF2
 1588 0037 02       		.uleb128 0x2
 1589 0038 06080000 		.4byte	.LASF1
 1590 003c 02       		.byte	0x2
 1591 003d 1D       		.byte	0x1d
 1592 003e 42000000 		.4byte	0x42
 1593 0042 03       		.uleb128 0x3
 1594 0043 01       		.byte	0x1
 1595 0044 08       		.byte	0x8
 1596 0045 B5080000 		.4byte	.LASF3
 1597 0049 02       		.uleb128 0x2
 1598 004a 28050000 		.4byte	.LASF4
 1599 004e 02       		.byte	0x2
 1600 004f 29       		.byte	0x29
 1601 0050 54000000 		.4byte	0x54
 1602 0054 03       		.uleb128 0x3
 1603 0055 02       		.byte	0x2
 1604 0056 05       		.byte	0x5
 1605 0057 D6060000 		.4byte	.LASF5
 1606 005b 02       		.uleb128 0x2
 1607 005c 2B020000 		.4byte	.LASF6
 1608 0060 02       		.byte	0x2
 1609 0061 2B       		.byte	0x2b
 1610 0062 66000000 		.4byte	0x66
 1611 0066 03       		.uleb128 0x3
 1612 0067 02       		.byte	0x2
 1613 0068 07       		.byte	0x7
 1614 0069 85090000 		.4byte	.LASF7
 1615 006d 02       		.uleb128 0x2
 1616 006e D4000000 		.4byte	.LASF8
 1617 0072 02       		.byte	0x2
 1618 0073 3F       		.byte	0x3f
 1619 0074 78000000 		.4byte	0x78
 1620 0078 03       		.uleb128 0x3
 1621 0079 04       		.byte	0x4
 1622 007a 05       		.byte	0x5
 1623 007b 2A070000 		.4byte	.LASF9
 1624 007f 02       		.uleb128 0x2
 1625 0080 C3080000 		.4byte	.LASF10
 1626 0084 02       		.byte	0x2
 1627 0085 41       		.byte	0x41
 1628 0086 8A000000 		.4byte	0x8a
 1629 008a 03       		.uleb128 0x3
 1630 008b 04       		.byte	0x4
 1631 008c 07       		.byte	0x7
 1632 008d 4F080000 		.4byte	.LASF11
 1633 0091 03       		.uleb128 0x3
 1634 0092 08       		.byte	0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 55


 1635 0093 05       		.byte	0x5
 1636 0094 E9040000 		.4byte	.LASF12
 1637 0098 02       		.uleb128 0x2
 1638 0099 46030000 		.4byte	.LASF13
 1639 009d 02       		.byte	0x2
 1640 009e 5B       		.byte	0x5b
 1641 009f A3000000 		.4byte	0xa3
 1642 00a3 03       		.uleb128 0x3
 1643 00a4 08       		.byte	0x8
 1644 00a5 07       		.byte	0x7
 1645 00a6 E7010000 		.4byte	.LASF14
 1646 00aa 04       		.uleb128 0x4
 1647 00ab 04       		.byte	0x4
 1648 00ac 05       		.byte	0x5
 1649 00ad 696E7400 		.ascii	"int\000"
 1650 00b1 03       		.uleb128 0x3
 1651 00b2 04       		.byte	0x4
 1652 00b3 07       		.byte	0x7
 1653 00b4 8D000000 		.4byte	.LASF15
 1654 00b8 02       		.uleb128 0x2
 1655 00b9 75010000 		.4byte	.LASF16
 1656 00bd 03       		.byte	0x3
 1657 00be 14       		.byte	0x14
 1658 00bf 25000000 		.4byte	0x25
 1659 00c3 02       		.uleb128 0x2
 1660 00c4 67040000 		.4byte	.LASF17
 1661 00c8 03       		.byte	0x3
 1662 00c9 18       		.byte	0x18
 1663 00ca 37000000 		.4byte	0x37
 1664 00ce 02       		.uleb128 0x2
 1665 00cf D8010000 		.4byte	.LASF18
 1666 00d3 03       		.byte	0x3
 1667 00d4 20       		.byte	0x20
 1668 00d5 49000000 		.4byte	0x49
 1669 00d9 02       		.uleb128 0x2
 1670 00da 96060000 		.4byte	.LASF19
 1671 00de 03       		.byte	0x3
 1672 00df 24       		.byte	0x24
 1673 00e0 5B000000 		.4byte	0x5b
 1674 00e4 02       		.uleb128 0x2
 1675 00e5 88080000 		.4byte	.LASF20
 1676 00e9 03       		.byte	0x3
 1677 00ea 2C       		.byte	0x2c
 1678 00eb 6D000000 		.4byte	0x6d
 1679 00ef 02       		.uleb128 0x2
 1680 00f0 6C010000 		.4byte	.LASF21
 1681 00f4 03       		.byte	0x3
 1682 00f5 30       		.byte	0x30
 1683 00f6 7F000000 		.4byte	0x7f
 1684 00fa 02       		.uleb128 0x2
 1685 00fb AD070000 		.4byte	.LASF22
 1686 00ff 03       		.byte	0x3
 1687 0100 3C       		.byte	0x3c
 1688 0101 98000000 		.4byte	0x98
 1689 0105 05       		.uleb128 0x5
 1690 0106 CD050000 		.4byte	.LASF23
 1691 010a 04       		.byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 56


 1692 010b FE01     		.2byte	0x1fe
 1693 010d 8A000000 		.4byte	0x8a
 1694 0111 03       		.uleb128 0x3
 1695 0112 04       		.byte	0x4
 1696 0113 04       		.byte	0x4
 1697 0114 AF010000 		.4byte	.LASF24
 1698 0118 03       		.uleb128 0x3
 1699 0119 08       		.byte	0x8
 1700 011a 04       		.byte	0x4
 1701 011b AC090000 		.4byte	.LASF25
 1702 011f 03       		.uleb128 0x3
 1703 0120 01       		.byte	0x1
 1704 0121 08       		.byte	0x8
 1705 0122 FA030000 		.4byte	.LASF26
 1706 0126 05       		.uleb128 0x5
 1707 0127 9F060000 		.4byte	.LASF27
 1708 012b 04       		.byte	0x4
 1709 012c A802     		.2byte	0x2a8
 1710 012e 32010000 		.4byte	0x132
 1711 0132 06       		.uleb128 0x6
 1712 0133 05010000 		.4byte	0x105
 1713 0137 03       		.uleb128 0x3
 1714 0138 08       		.byte	0x8
 1715 0139 04       		.byte	0x4
 1716 013a 7C060000 		.4byte	.LASF28
 1717 013e 03       		.uleb128 0x3
 1718 013f 04       		.byte	0x4
 1719 0140 07       		.byte	0x7
 1720 0141 46080000 		.4byte	.LASF29
 1721 0145 06       		.uleb128 0x6
 1722 0146 EF000000 		.4byte	0xef
 1723 014a 07       		.uleb128 0x7
 1724 014b 01       		.byte	0x1
 1725 014c 42000000 		.4byte	0x42
 1726 0150 01       		.byte	0x1
 1727 0151 9B       		.byte	0x9b
 1728 0152 6F010000 		.4byte	0x16f
 1729 0156 08       		.uleb128 0x8
 1730 0157 A5060000 		.4byte	.LASF30
 1731 015b 00       		.byte	0
 1732 015c 08       		.uleb128 0x8
 1733 015d 7A000000 		.4byte	.LASF31
 1734 0161 01       		.byte	0x1
 1735 0162 08       		.uleb128 0x8
 1736 0163 49010000 		.4byte	.LASF32
 1737 0167 02       		.byte	0x2
 1738 0168 08       		.uleb128 0x8
 1739 0169 33070000 		.4byte	.LASF33
 1740 016d 03       		.byte	0x3
 1741 016e 00       		.byte	0
 1742 016f 02       		.uleb128 0x2
 1743 0170 46060000 		.4byte	.LASF34
 1744 0174 01       		.byte	0x1
 1745 0175 A0       		.byte	0xa0
 1746 0176 4A010000 		.4byte	0x14a
 1747 017a 07       		.uleb128 0x7
 1748 017b 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 57


 1749 017c 42000000 		.4byte	0x42
 1750 0180 01       		.byte	0x1
 1751 0181 A5       		.byte	0xa5
 1752 0182 BD010000 		.4byte	0x1bd
 1753 0186 08       		.uleb128 0x8
 1754 0187 AE040000 		.4byte	.LASF35
 1755 018b 00       		.byte	0
 1756 018c 08       		.uleb128 0x8
 1757 018d 30030000 		.4byte	.LASF36
 1758 0191 01       		.byte	0x1
 1759 0192 08       		.uleb128 0x8
 1760 0193 70000000 		.4byte	.LASF37
 1761 0197 02       		.byte	0x2
 1762 0198 08       		.uleb128 0x8
 1763 0199 76040000 		.4byte	.LASF38
 1764 019d 04       		.byte	0x4
 1765 019e 08       		.uleb128 0x8
 1766 019f C8060000 		.4byte	.LASF39
 1767 01a3 08       		.byte	0x8
 1768 01a4 08       		.uleb128 0x8
 1769 01a5 11050000 		.4byte	.LASF40
 1770 01a9 10       		.byte	0x10
 1771 01aa 08       		.uleb128 0x8
 1772 01ab F7080000 		.4byte	.LASF41
 1773 01af 20       		.byte	0x20
 1774 01b0 08       		.uleb128 0x8
 1775 01b1 FC080000 		.4byte	.LASF42
 1776 01b5 40       		.byte	0x40
 1777 01b6 08       		.uleb128 0x8
 1778 01b7 01090000 		.4byte	.LASF43
 1779 01bb 80       		.byte	0x80
 1780 01bc 00       		.byte	0
 1781 01bd 02       		.uleb128 0x2
 1782 01be 3B0A0000 		.4byte	.LASF44
 1783 01c2 01       		.byte	0x1
 1784 01c3 AF       		.byte	0xaf
 1785 01c4 7A010000 		.4byte	0x17a
 1786 01c8 07       		.uleb128 0x7
 1787 01c9 01       		.byte	0x1
 1788 01ca 42000000 		.4byte	0x42
 1789 01ce 01       		.byte	0x1
 1790 01cf CB       		.byte	0xcb
 1791 01d0 F3010000 		.4byte	0x1f3
 1792 01d4 08       		.uleb128 0x8
 1793 01d5 CE080000 		.4byte	.LASF45
 1794 01d9 00       		.byte	0
 1795 01da 08       		.uleb128 0x8
 1796 01db E7090000 		.4byte	.LASF46
 1797 01df 01       		.byte	0x1
 1798 01e0 08       		.uleb128 0x8
 1799 01e1 10080000 		.4byte	.LASF47
 1800 01e5 02       		.byte	0x2
 1801 01e6 08       		.uleb128 0x8
 1802 01e7 DA080000 		.4byte	.LASF48
 1803 01eb 03       		.byte	0x3
 1804 01ec 08       		.uleb128 0x8
 1805 01ed 31080000 		.4byte	.LASF49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 58


 1806 01f1 04       		.byte	0x4
 1807 01f2 00       		.byte	0
 1808 01f3 02       		.uleb128 0x2
 1809 01f4 7C010000 		.4byte	.LASF50
 1810 01f8 01       		.byte	0x1
 1811 01f9 D1       		.byte	0xd1
 1812 01fa C8010000 		.4byte	0x1c8
 1813 01fe 09       		.uleb128 0x9
 1814 01ff 03       		.byte	0x3
 1815 0200 01       		.byte	0x1
 1816 0201 D6       		.byte	0xd6
 1817 0202 2B020000 		.4byte	0x22b
 1818 0206 0A       		.uleb128 0xa
 1819 0207 C8010000 		.4byte	.LASF51
 1820 020b 01       		.byte	0x1
 1821 020c D7       		.byte	0xd7
 1822 020d C3000000 		.4byte	0xc3
 1823 0211 00       		.byte	0
 1824 0212 0A       		.uleb128 0xa
 1825 0213 86050000 		.4byte	.LASF52
 1826 0217 01       		.byte	0x1
 1827 0218 D8       		.byte	0xd8
 1828 0219 C3000000 		.4byte	0xc3
 1829 021d 01       		.byte	0x1
 1830 021e 0A       		.uleb128 0xa
 1831 021f 60040000 		.4byte	.LASF53
 1832 0223 01       		.byte	0x1
 1833 0224 D9       		.byte	0xd9
 1834 0225 C3000000 		.4byte	0xc3
 1835 0229 02       		.byte	0x2
 1836 022a 00       		.byte	0
 1837 022b 02       		.uleb128 0x2
 1838 022c C1030000 		.4byte	.LASF54
 1839 0230 01       		.byte	0x1
 1840 0231 DA       		.byte	0xda
 1841 0232 FE010000 		.4byte	0x1fe
 1842 0236 09       		.uleb128 0x9
 1843 0237 13       		.byte	0x13
 1844 0238 01       		.byte	0x1
 1845 0239 DD       		.byte	0xdd
 1846 023a B4020000 		.4byte	0x2b4
 1847 023e 0A       		.uleb128 0xa
 1848 023f C8010000 		.4byte	.LASF51
 1849 0243 01       		.byte	0x1
 1850 0244 DE       		.byte	0xde
 1851 0245 C3000000 		.4byte	0xc3
 1852 0249 00       		.byte	0
 1853 024a 0A       		.uleb128 0xa
 1854 024b 86050000 		.4byte	.LASF52
 1855 024f 01       		.byte	0x1
 1856 0250 DF       		.byte	0xdf
 1857 0251 C3000000 		.4byte	0xc3
 1858 0255 01       		.byte	0x1
 1859 0256 0A       		.uleb128 0xa
 1860 0257 60040000 		.4byte	.LASF53
 1861 025b 01       		.byte	0x1
 1862 025c E0       		.byte	0xe0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 59


 1863 025d C3000000 		.4byte	0xc3
 1864 0261 02       		.byte	0x2
 1865 0262 0A       		.uleb128 0xa
 1866 0263 B1060000 		.4byte	.LASF55
 1867 0267 01       		.byte	0x1
 1868 0268 E1       		.byte	0xe1
 1869 0269 C3000000 		.4byte	0xc3
 1870 026d 03       		.byte	0x3
 1871 026e 0B       		.uleb128 0xb
 1872 026f 4B7000   		.ascii	"Kp\000"
 1873 0272 01       		.byte	0x1
 1874 0273 E8       		.byte	0xe8
 1875 0274 EF000000 		.4byte	0xef
 1876 0278 04       		.byte	0x4
 1877 0279 0B       		.uleb128 0xb
 1878 027a 4B6900   		.ascii	"Ki\000"
 1879 027d 01       		.byte	0x1
 1880 027e E9       		.byte	0xe9
 1881 027f EF000000 		.4byte	0xef
 1882 0283 08       		.byte	0x8
 1883 0284 0B       		.uleb128 0xb
 1884 0285 4B6400   		.ascii	"Kd\000"
 1885 0288 01       		.byte	0x1
 1886 0289 EA       		.byte	0xea
 1887 028a EF000000 		.4byte	0xef
 1888 028e 0C       		.byte	0xc
 1889 028f 0A       		.uleb128 0xa
 1890 0290 50090000 		.4byte	.LASF56
 1891 0294 01       		.byte	0x1
 1892 0295 EC       		.byte	0xec
 1893 0296 C3000000 		.4byte	0xc3
 1894 029a 10       		.byte	0x10
 1895 029b 0A       		.uleb128 0xa
 1896 029c EF020000 		.4byte	.LASF57
 1897 02a0 01       		.byte	0x1
 1898 02a1 ED       		.byte	0xed
 1899 02a2 C3000000 		.4byte	0xc3
 1900 02a6 11       		.byte	0x11
 1901 02a7 0A       		.uleb128 0xa
 1902 02a8 64000000 		.4byte	.LASF58
 1903 02ac 01       		.byte	0x1
 1904 02ad EE       		.byte	0xee
 1905 02ae C3000000 		.4byte	0xc3
 1906 02b2 12       		.byte	0x12
 1907 02b3 00       		.byte	0
 1908 02b4 02       		.uleb128 0x2
 1909 02b5 EA060000 		.4byte	.LASF59
 1910 02b9 01       		.byte	0x1
 1911 02ba EF       		.byte	0xef
 1912 02bb 36020000 		.4byte	0x236
 1913 02bf 09       		.uleb128 0x9
 1914 02c0 0A       		.byte	0xa
 1915 02c1 01       		.byte	0x1
 1916 02c2 F2       		.byte	0xf2
 1917 02c3 1C030000 		.4byte	0x31c
 1918 02c7 0A       		.uleb128 0xa
 1919 02c8 C8010000 		.4byte	.LASF51
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 60


 1920 02cc 01       		.byte	0x1
 1921 02cd F3       		.byte	0xf3
 1922 02ce C3000000 		.4byte	0xc3
 1923 02d2 00       		.byte	0
 1924 02d3 0A       		.uleb128 0xa
 1925 02d4 86050000 		.4byte	.LASF52
 1926 02d8 01       		.byte	0x1
 1927 02d9 F4       		.byte	0xf4
 1928 02da C3000000 		.4byte	0xc3
 1929 02de 01       		.byte	0x1
 1930 02df 0A       		.uleb128 0xa
 1931 02e0 60040000 		.4byte	.LASF53
 1932 02e4 01       		.byte	0x1
 1933 02e5 F5       		.byte	0xf5
 1934 02e6 C3000000 		.4byte	0xc3
 1935 02ea 02       		.byte	0x2
 1936 02eb 0A       		.uleb128 0xa
 1937 02ec 3C020000 		.4byte	.LASF60
 1938 02f0 01       		.byte	0x1
 1939 02f1 F6       		.byte	0xf6
 1940 02f2 C3000000 		.4byte	0xc3
 1941 02f6 03       		.byte	0x3
 1942 02f7 0A       		.uleb128 0xa
 1943 02f8 B6070000 		.4byte	.LASF61
 1944 02fc 01       		.byte	0x1
 1945 02fd F7       		.byte	0xf7
 1946 02fe E4000000 		.4byte	0xe4
 1947 0302 04       		.byte	0x4
 1948 0303 0B       		.uleb128 0xb
 1949 0304 6A6F6700 		.ascii	"jog\000"
 1950 0308 01       		.byte	0x1
 1951 0309 F8       		.byte	0xf8
 1952 030a B8000000 		.4byte	0xb8
 1953 030e 08       		.byte	0x8
 1954 030f 0A       		.uleb128 0xa
 1955 0310 C8000000 		.4byte	.LASF62
 1956 0314 01       		.byte	0x1
 1957 0315 F9       		.byte	0xf9
 1958 0316 C3000000 		.4byte	0xc3
 1959 031a 09       		.byte	0x9
 1960 031b 00       		.byte	0
 1961 031c 02       		.uleb128 0x2
 1962 031d 90010000 		.4byte	.LASF63
 1963 0321 01       		.byte	0x1
 1964 0322 FA       		.byte	0xfa
 1965 0323 BF020000 		.4byte	0x2bf
 1966 0327 09       		.uleb128 0x9
 1967 0328 07       		.byte	0x7
 1968 0329 01       		.byte	0x1
 1969 032a FD       		.byte	0xfd
 1970 032b 62030000 		.4byte	0x362
 1971 032f 0A       		.uleb128 0xa
 1972 0330 C8010000 		.4byte	.LASF51
 1973 0334 01       		.byte	0x1
 1974 0335 FE       		.byte	0xfe
 1975 0336 C3000000 		.4byte	0xc3
 1976 033a 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 61


 1977 033b 0A       		.uleb128 0xa
 1978 033c 86050000 		.4byte	.LASF52
 1979 0340 01       		.byte	0x1
 1980 0341 FF       		.byte	0xff
 1981 0342 C3000000 		.4byte	0xc3
 1982 0346 01       		.byte	0x1
 1983 0347 0C       		.uleb128 0xc
 1984 0348 60040000 		.4byte	.LASF53
 1985 034c 01       		.byte	0x1
 1986 034d 0001     		.2byte	0x100
 1987 034f C3000000 		.4byte	0xc3
 1988 0353 02       		.byte	0x2
 1989 0354 0C       		.uleb128 0xc
 1990 0355 B6070000 		.4byte	.LASF61
 1991 0359 01       		.byte	0x1
 1992 035a 0101     		.2byte	0x101
 1993 035c E4000000 		.4byte	0xe4
 1994 0360 03       		.byte	0x3
 1995 0361 00       		.byte	0
 1996 0362 05       		.uleb128 0x5
 1997 0363 3D090000 		.4byte	.LASF64
 1998 0367 01       		.byte	0x1
 1999 0368 0201     		.2byte	0x102
 2000 036a 27030000 		.4byte	0x327
 2001 036e 0D       		.uleb128 0xd
 2002 036f 1E       		.byte	0x1e
 2003 0370 01       		.byte	0x1
 2004 0371 0601     		.2byte	0x106
 2005 0373 B4030000 		.4byte	0x3b4
 2006 0377 0E       		.uleb128 0xe
 2007 0378 62756600 		.ascii	"buf\000"
 2008 037c 01       		.byte	0x1
 2009 037d 0701     		.2byte	0x107
 2010 037f B4030000 		.4byte	0x3b4
 2011 0383 0F       		.uleb128 0xf
 2012 0384 39070000 		.4byte	.LASF65
 2013 0388 01       		.byte	0x1
 2014 0389 0801     		.2byte	0x108
 2015 038b 2B020000 		.4byte	0x22b
 2016 038f 0F       		.uleb128 0xf
 2017 0390 C1060000 		.4byte	.LASF66
 2018 0394 01       		.byte	0x1
 2019 0395 0901     		.2byte	0x109
 2020 0397 B4020000 		.4byte	0x2b4
 2021 039b 0F       		.uleb128 0xf
 2022 039c 6F040000 		.4byte	.LASF67
 2023 03a0 01       		.byte	0x1
 2024 03a1 0A01     		.2byte	0x10a
 2025 03a3 1C030000 		.4byte	0x31c
 2026 03a7 0F       		.uleb128 0xf
 2027 03a8 D1010000 		.4byte	.LASF68
 2028 03ac 01       		.byte	0x1
 2029 03ad 0B01     		.2byte	0x10b
 2030 03af 62030000 		.4byte	0x362
 2031 03b3 00       		.byte	0
 2032 03b4 10       		.uleb128 0x10
 2033 03b5 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 62


 2034 03b9 C4030000 		.4byte	0x3c4
 2035 03bd 11       		.uleb128 0x11
 2036 03be 3E010000 		.4byte	0x13e
 2037 03c2 1D       		.byte	0x1d
 2038 03c3 00       		.byte	0
 2039 03c4 12       		.uleb128 0x12
 2040 03c5 15       		.byte	0x15
 2041 03c6 01       		.byte	0x1
 2042 03c7 0F01     		.2byte	0x10f
 2043 03c9 77040000 		.4byte	0x477
 2044 03cd 0C       		.uleb128 0xc
 2045 03ce C8010000 		.4byte	.LASF51
 2046 03d2 01       		.byte	0x1
 2047 03d3 1001     		.2byte	0x110
 2048 03d5 C3000000 		.4byte	0xc3
 2049 03d9 00       		.byte	0
 2050 03da 0C       		.uleb128 0xc
 2051 03db A6030000 		.4byte	.LASF69
 2052 03df 01       		.byte	0x1
 2053 03e0 1101     		.2byte	0x111
 2054 03e2 C3000000 		.4byte	0xc3
 2055 03e6 01       		.byte	0x1
 2056 03e7 0C       		.uleb128 0xc
 2057 03e8 AF030000 		.4byte	.LASF70
 2058 03ec 01       		.byte	0x1
 2059 03ed 1201     		.2byte	0x112
 2060 03ef C3000000 		.4byte	0xc3
 2061 03f3 02       		.byte	0x2
 2062 03f4 0C       		.uleb128 0xc
 2063 03f5 B8030000 		.4byte	.LASF71
 2064 03f9 01       		.byte	0x1
 2065 03fa 1301     		.2byte	0x113
 2066 03fc C3000000 		.4byte	0xc3
 2067 0400 03       		.byte	0x3
 2068 0401 0C       		.uleb128 0xc
 2069 0402 86050000 		.4byte	.LASF52
 2070 0406 01       		.byte	0x1
 2071 0407 1401     		.2byte	0x114
 2072 0409 C3000000 		.4byte	0xc3
 2073 040d 04       		.byte	0x4
 2074 040e 0C       		.uleb128 0xc
 2075 040f 60040000 		.4byte	.LASF53
 2076 0413 01       		.byte	0x1
 2077 0414 1501     		.2byte	0x115
 2078 0416 C3000000 		.4byte	0xc3
 2079 041a 05       		.byte	0x5
 2080 041b 0C       		.uleb128 0xc
 2081 041c A3080000 		.4byte	.LASF72
 2082 0420 01       		.byte	0x1
 2083 0421 1601     		.2byte	0x116
 2084 0423 C3000000 		.4byte	0xc3
 2085 0427 06       		.byte	0x6
 2086 0428 0C       		.uleb128 0xc
 2087 0429 1E0A0000 		.4byte	.LASF73
 2088 042d 01       		.byte	0x1
 2089 042e 1701     		.2byte	0x117
 2090 0430 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 63


 2091 0434 07       		.byte	0x7
 2092 0435 0C       		.uleb128 0xc
 2093 0436 B1060000 		.4byte	.LASF55
 2094 043a 01       		.byte	0x1
 2095 043b 1801     		.2byte	0x118
 2096 043d C3000000 		.4byte	0xc3
 2097 0441 08       		.byte	0x8
 2098 0442 0C       		.uleb128 0xc
 2099 0443 76050000 		.4byte	.LASF74
 2100 0447 01       		.byte	0x1
 2101 0448 1901     		.2byte	0x119
 2102 044a D9000000 		.4byte	0xd9
 2103 044e 09       		.byte	0x9
 2104 044f 0C       		.uleb128 0xc
 2105 0450 19000000 		.4byte	.LASF75
 2106 0454 01       		.byte	0x1
 2107 0455 1A01     		.2byte	0x11a
 2108 0457 CE000000 		.4byte	0xce
 2109 045b 0B       		.byte	0xb
 2110 045c 0C       		.uleb128 0xc
 2111 045d 320A0000 		.4byte	.LASF76
 2112 0461 01       		.byte	0x1
 2113 0462 1B01     		.2byte	0x11b
 2114 0464 E4000000 		.4byte	0xe4
 2115 0468 0D       		.byte	0xd
 2116 0469 13       		.uleb128 0x13
 2117 046a 70776D00 		.ascii	"pwm\000"
 2118 046e 01       		.byte	0x1
 2119 046f 1D01     		.2byte	0x11d
 2120 0471 EF000000 		.4byte	0xef
 2121 0475 11       		.byte	0x11
 2122 0476 00       		.byte	0
 2123 0477 05       		.uleb128 0x5
 2124 0478 A1070000 		.4byte	.LASF77
 2125 047c 01       		.byte	0x1
 2126 047d 1E01     		.2byte	0x11e
 2127 047f C4030000 		.4byte	0x3c4
 2128 0483 0D       		.uleb128 0xd
 2129 0484 1E       		.byte	0x1e
 2130 0485 01       		.byte	0x1
 2131 0486 2101     		.2byte	0x121
 2132 0488 A5040000 		.4byte	0x4a5
 2133 048c 0E       		.uleb128 0xe
 2134 048d 62756600 		.ascii	"buf\000"
 2135 0491 01       		.byte	0x1
 2136 0492 2201     		.2byte	0x122
 2137 0494 B4030000 		.4byte	0x3b4
 2138 0498 0E       		.uleb128 0xe
 2139 0499 6D736700 		.ascii	"msg\000"
 2140 049d 01       		.byte	0x1
 2141 049e 2301     		.2byte	0x123
 2142 04a0 77040000 		.4byte	0x477
 2143 04a4 00       		.byte	0
 2144 04a5 14       		.uleb128 0x14
 2145 04a6 01       		.byte	0x1
 2146 04a7 42000000 		.4byte	0x42
 2147 04ab 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 64


 2148 04ac 2701     		.2byte	0x127
 2149 04ae BF040000 		.4byte	0x4bf
 2150 04b2 08       		.uleb128 0x8
 2151 04b3 39000000 		.4byte	.LASF78
 2152 04b7 00       		.byte	0
 2153 04b8 08       		.uleb128 0x8
 2154 04b9 D4050000 		.4byte	.LASF79
 2155 04bd 01       		.byte	0x1
 2156 04be 00       		.byte	0
 2157 04bf 05       		.uleb128 0x5
 2158 04c0 14010000 		.4byte	.LASF80
 2159 04c4 01       		.byte	0x1
 2160 04c5 2A01     		.2byte	0x12a
 2161 04c7 A5040000 		.4byte	0x4a5
 2162 04cb 15       		.uleb128 0x15
 2163 04cc 240A0000 		.4byte	.LASF81
 2164 04d0 01       		.byte	0x1
 2165 04d1 6E04     		.2byte	0x46e
 2166 04d3 00000000 		.4byte	.LFB43
 2167 04d7 24000000 		.4byte	.LFE43-.LFB43
 2168 04db 01       		.uleb128 0x1
 2169 04dc 9C       		.byte	0x9c
 2170 04dd 16050000 		.4byte	0x516
 2171 04e1 16       		.uleb128 0x16
 2172 04e2 06000000 		.4byte	.LVL0
 2173 04e6 670E0000 		.4byte	0xe67
 2174 04ea 16       		.uleb128 0x16
 2175 04eb 0A000000 		.4byte	.LVL1
 2176 04ef 720E0000 		.4byte	0xe72
 2177 04f3 17       		.uleb128 0x17
 2178 04f4 10000000 		.4byte	.LVL2
 2179 04f8 7D0E0000 		.4byte	0xe7d
 2180 04fc 06050000 		.4byte	0x506
 2181 0500 18       		.uleb128 0x18
 2182 0501 01       		.uleb128 0x1
 2183 0502 50       		.byte	0x50
 2184 0503 01       		.uleb128 0x1
 2185 0504 30       		.byte	0x30
 2186 0505 00       		.byte	0
 2187 0506 19       		.uleb128 0x19
 2188 0507 16000000 		.4byte	.LVL3
 2189 050b 880E0000 		.4byte	0xe88
 2190 050f 18       		.uleb128 0x18
 2191 0510 01       		.uleb128 0x1
 2192 0511 50       		.byte	0x50
 2193 0512 01       		.uleb128 0x1
 2194 0513 30       		.byte	0x30
 2195 0514 00       		.byte	0
 2196 0515 00       		.byte	0
 2197 0516 15       		.uleb128 0x15
 2198 0517 05010000 		.4byte	.LASF82
 2199 051b 01       		.byte	0x1
 2200 051c 8C04     		.2byte	0x48c
 2201 051e 00000000 		.4byte	.LFB44
 2202 0522 1C000000 		.4byte	.LFE44-.LFB44
 2203 0526 01       		.uleb128 0x1
 2204 0527 9C       		.byte	0x9c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 65


 2205 0528 4E050000 		.4byte	0x54e
 2206 052c 16       		.uleb128 0x16
 2207 052d 06000000 		.4byte	.LVL4
 2208 0531 930E0000 		.4byte	0xe93
 2209 0535 16       		.uleb128 0x16
 2210 0536 0A000000 		.4byte	.LVL5
 2211 053a 9E0E0000 		.4byte	0xe9e
 2212 053e 19       		.uleb128 0x19
 2213 053f 10000000 		.4byte	.LVL6
 2214 0543 7D0E0000 		.4byte	0xe7d
 2215 0547 18       		.uleb128 0x18
 2216 0548 01       		.uleb128 0x1
 2217 0549 50       		.byte	0x50
 2218 054a 01       		.uleb128 0x1
 2219 054b 30       		.byte	0x30
 2220 054c 00       		.byte	0
 2221 054d 00       		.byte	0
 2222 054e 15       		.uleb128 0x15
 2223 054f 2B060000 		.4byte	.LASF83
 2224 0553 01       		.byte	0x1
 2225 0554 A604     		.2byte	0x4a6
 2226 0556 00000000 		.4byte	.LFB45
 2227 055a 60000000 		.4byte	.LFE45-.LFB45
 2228 055e 01       		.uleb128 0x1
 2229 055f 9C       		.byte	0x9c
 2230 0560 C1050000 		.4byte	0x5c1
 2231 0564 1A       		.uleb128 0x1a
 2232 0565 6900     		.ascii	"i\000"
 2233 0567 01       		.byte	0x1
 2234 0568 A804     		.2byte	0x4a8
 2235 056a EF000000 		.4byte	0xef
 2236 056e 00000000 		.4byte	.LLST0
 2237 0572 16       		.uleb128 0x16
 2238 0573 06000000 		.4byte	.LVL7
 2239 0577 A90E0000 		.4byte	0xea9
 2240 057b 16       		.uleb128 0x16
 2241 057c 0A000000 		.4byte	.LVL8
 2242 0580 B40E0000 		.4byte	0xeb4
 2243 0584 17       		.uleb128 0x17
 2244 0585 2A000000 		.4byte	.LVL9
 2245 0589 BF0E0000 		.4byte	0xebf
 2246 058d A5050000 		.4byte	0x5a5
 2247 0591 18       		.uleb128 0x18
 2248 0592 01       		.uleb128 0x1
 2249 0593 50       		.byte	0x50
 2250 0594 05       		.uleb128 0x5
 2251 0595 03       		.byte	0x3
 2252 0596 00000000 		.4byte	txMessage
 2253 059a 18       		.uleb128 0x18
 2254 059b 01       		.uleb128 0x1
 2255 059c 51       		.byte	0x51
 2256 059d 01       		.uleb128 0x1
 2257 059e 30       		.byte	0x30
 2258 059f 18       		.uleb128 0x18
 2259 05a0 01       		.uleb128 0x1
 2260 05a1 52       		.byte	0x52
 2261 05a2 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 66


 2262 05a3 4E       		.byte	0x4e
 2263 05a4 00       		.byte	0
 2264 05a5 16       		.uleb128 0x16
 2265 05a6 32000000 		.4byte	.LVL11
 2266 05aa C80E0000 		.4byte	0xec8
 2267 05ae 16       		.uleb128 0x16
 2268 05af 40000000 		.4byte	.LVL13
 2269 05b3 D40E0000 		.4byte	0xed4
 2270 05b7 16       		.uleb128 0x16
 2271 05b8 44000000 		.4byte	.LVL14
 2272 05bc E00E0000 		.4byte	0xee0
 2273 05c0 00       		.byte	0
 2274 05c1 15       		.uleb128 0x15
 2275 05c2 A3010000 		.4byte	.LASF84
 2276 05c6 01       		.byte	0x1
 2277 05c7 4101     		.2byte	0x141
 2278 05c9 00000000 		.4byte	.LFB32
 2279 05cd 1C000000 		.4byte	.LFE32-.LFB32
 2280 05d1 01       		.uleb128 0x1
 2281 05d2 9C       		.byte	0x9c
 2282 05d3 E8050000 		.4byte	0x5e8
 2283 05d7 1B       		.uleb128 0x1b
 2284 05d8 1E0A0000 		.4byte	.LASF73
 2285 05dc 01       		.byte	0x1
 2286 05dd 4101     		.2byte	0x141
 2287 05df BD010000 		.4byte	0x1bd
 2288 05e3 1F000000 		.4byte	.LLST1
 2289 05e7 00       		.byte	0
 2290 05e8 15       		.uleb128 0x15
 2291 05e9 2C010000 		.4byte	.LASF85
 2292 05ed 01       		.byte	0x1
 2293 05ee 5C01     		.2byte	0x15c
 2294 05f0 00000000 		.4byte	.LFB33
 2295 05f4 1C000000 		.4byte	.LFE33-.LFB33
 2296 05f8 01       		.uleb128 0x1
 2297 05f9 9C       		.byte	0x9c
 2298 05fa 0D060000 		.4byte	0x60d
 2299 05fe 1C       		.uleb128 0x1c
 2300 05ff 1E0A0000 		.4byte	.LASF73
 2301 0603 01       		.byte	0x1
 2302 0604 5C01     		.2byte	0x15c
 2303 0606 BD010000 		.4byte	0x1bd
 2304 060a 01       		.uleb128 0x1
 2305 060b 50       		.byte	0x50
 2306 060c 00       		.byte	0
 2307 060d 1D       		.uleb128 0x1d
 2308 060e 4A000000 		.4byte	.LASF86
 2309 0612 01       		.byte	0x1
 2310 0613 7601     		.2byte	0x176
 2311 0615 00000000 		.4byte	.LFB34
 2312 0619 18000000 		.4byte	.LFE34-.LFB34
 2313 061d 01       		.uleb128 0x1
 2314 061e 9C       		.byte	0x9c
 2315 061f 42060000 		.4byte	0x642
 2316 0623 1A       		.uleb128 0x1a
 2317 0624 6300     		.ascii	"c\000"
 2318 0626 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 67


 2319 0627 7901     		.2byte	0x179
 2320 0629 11010000 		.4byte	0x111
 2321 062d 40000000 		.4byte	.LLST2
 2322 0631 19       		.uleb128 0x19
 2323 0632 08000000 		.4byte	.LVL19
 2324 0636 EC0E0000 		.4byte	0xeec
 2325 063a 18       		.uleb128 0x18
 2326 063b 01       		.uleb128 0x1
 2327 063c 50       		.byte	0x50
 2328 063d 02       		.uleb128 0x2
 2329 063e 08       		.byte	0x8
 2330 063f 40       		.byte	0x40
 2331 0640 00       		.byte	0
 2332 0641 00       		.byte	0
 2333 0642 15       		.uleb128 0x15
 2334 0643 2E040000 		.4byte	.LASF87
 2335 0647 01       		.byte	0x1
 2336 0648 5502     		.2byte	0x255
 2337 064a 00000000 		.4byte	.LFB36
 2338 064e 0E000000 		.4byte	.LFE36-.LFB36
 2339 0652 01       		.uleb128 0x1
 2340 0653 9C       		.byte	0x9c
 2341 0654 7E060000 		.4byte	0x67e
 2342 0658 1B       		.uleb128 0x1b
 2343 0659 43000000 		.4byte	.LASF88
 2344 065d 01       		.byte	0x1
 2345 065e 5502     		.2byte	0x255
 2346 0660 E4000000 		.4byte	0xe4
 2347 0664 53000000 		.4byte	.LLST3
 2348 0668 19       		.uleb128 0x19
 2349 0669 0C000000 		.4byte	.LVL23
 2350 066d F70E0000 		.4byte	0xef7
 2351 0671 18       		.uleb128 0x18
 2352 0672 01       		.uleb128 0x1
 2353 0673 50       		.byte	0x50
 2354 0674 07       		.uleb128 0x7
 2355 0675 0A       		.byte	0xa
 2356 0676 2003     		.2byte	0x320
 2357 0678 F3       		.byte	0xf3
 2358 0679 01       		.uleb128 0x1
 2359 067a 50       		.byte	0x50
 2360 067b 1C       		.byte	0x1c
 2361 067c 00       		.byte	0
 2362 067d 00       		.byte	0
 2363 067e 1E       		.uleb128 0x1e
 2364 067f CB070000 		.4byte	.LASF187
 2365 0683 01       		.byte	0x1
 2366 0684 7302     		.2byte	0x273
 2367 0686 E4000000 		.4byte	0xe4
 2368 068a 00000000 		.4byte	.LFB37
 2369 068e 44000000 		.4byte	.LFE37-.LFB37
 2370 0692 01       		.uleb128 0x1
 2371 0693 9C       		.byte	0x9c
 2372 0694 C6060000 		.4byte	0x6c6
 2373 0698 1F       		.uleb128 0x1f
 2374 0699 72070000 		.4byte	.LASF89
 2375 069d 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 68


 2376 069e 7502     		.2byte	0x275
 2377 06a0 45010000 		.4byte	0x145
 2378 06a4 05       		.uleb128 0x5
 2379 06a5 03       		.byte	0x3
 2380 06a6 08000000 		.4byte	RawPosition.7276
 2381 06aa 1F       		.uleb128 0x1f
 2382 06ab E0010000 		.4byte	.LASF90
 2383 06af 01       		.byte	0x1
 2384 06b0 7602     		.2byte	0x276
 2385 06b2 C6060000 		.4byte	0x6c6
 2386 06b6 05       		.uleb128 0x5
 2387 06b7 03       		.byte	0x3
 2388 06b8 0C000000 		.4byte	result.7277
 2389 06bc 16       		.uleb128 0x16
 2390 06bd 06000000 		.4byte	.LVL24
 2391 06c1 030F0000 		.4byte	0xf03
 2392 06c5 00       		.byte	0
 2393 06c6 06       		.uleb128 0x6
 2394 06c7 E4000000 		.4byte	0xe4
 2395 06cb 1D       		.uleb128 0x1d
 2396 06cc 55060000 		.4byte	.LASF91
 2397 06d0 01       		.byte	0x1
 2398 06d1 8B01     		.2byte	0x18b
 2399 06d3 00000000 		.4byte	.LFB35
 2400 06d7 48020000 		.4byte	.LFE35-.LFB35
 2401 06db 01       		.uleb128 0x1
 2402 06dc 9C       		.byte	0x9c
 2403 06dd A1070000 		.4byte	0x7a1
 2404 06e1 20       		.uleb128 0x20
 2405 06e2 60040000 		.4byte	.LASF53
 2406 06e6 01       		.byte	0x1
 2407 06e7 8D01     		.2byte	0x18d
 2408 06e9 F3010000 		.4byte	0x1f3
 2409 06ed 74000000 		.4byte	.LLST4
 2410 06f1 20       		.uleb128 0x20
 2411 06f2 86050000 		.4byte	.LASF52
 2412 06f6 01       		.byte	0x1
 2413 06f7 8E01     		.2byte	0x18e
 2414 06f9 C3000000 		.4byte	0xc3
 2415 06fd 9E000000 		.4byte	.LLST5
 2416 0701 1A       		.uleb128 0x1a
 2417 0702 6900     		.ascii	"i\000"
 2418 0704 01       		.byte	0x1
 2419 0705 8F01     		.2byte	0x18f
 2420 0707 C3000000 		.4byte	0xc3
 2421 070b C7000000 		.4byte	.LLST6
 2422 070f 20       		.uleb128 0x20
 2423 0710 C8010000 		.4byte	.LASF51
 2424 0714 01       		.byte	0x1
 2425 0715 9001     		.2byte	0x190
 2426 0717 C3000000 		.4byte	0xc3
 2427 071b 1E010000 		.4byte	.LLST7
 2428 071f 21       		.uleb128 0x21
 2429 0720 F5000000 		.4byte	.LASF98
 2430 0724 01       		.byte	0x1
 2431 0725 9101     		.2byte	0x191
 2432 0727 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 69


 2433 072b 16       		.uleb128 0x16
 2434 072c 68000000 		.4byte	.LVL37
 2435 0730 7E060000 		.4byte	0x67e
 2436 0734 17       		.uleb128 0x17
 2437 0735 B6000000 		.4byte	.LVL39
 2438 0739 E8050000 		.4byte	0x5e8
 2439 073d 47070000 		.4byte	0x747
 2440 0741 18       		.uleb128 0x18
 2441 0742 01       		.uleb128 0x1
 2442 0743 50       		.byte	0x50
 2443 0744 01       		.uleb128 0x1
 2444 0745 30       		.byte	0x30
 2445 0746 00       		.byte	0
 2446 0747 16       		.uleb128 0x16
 2447 0748 E6000000 		.4byte	.LVL43
 2448 074c 7E060000 		.4byte	0x67e
 2449 0750 17       		.uleb128 0x17
 2450 0751 12010000 		.4byte	.LVL45
 2451 0755 880E0000 		.4byte	0xe88
 2452 0759 63070000 		.4byte	0x763
 2453 075d 18       		.uleb128 0x18
 2454 075e 01       		.uleb128 0x1
 2455 075f 50       		.byte	0x50
 2456 0760 01       		.uleb128 0x1
 2457 0761 30       		.byte	0x30
 2458 0762 00       		.byte	0
 2459 0763 16       		.uleb128 0x16
 2460 0764 3C010000 		.4byte	.LVL50
 2461 0768 7D0E0000 		.4byte	0xe7d
 2462 076c 16       		.uleb128 0x16
 2463 076d 5A010000 		.4byte	.LVL51
 2464 0771 7E060000 		.4byte	0x67e
 2465 0775 17       		.uleb128 0x17
 2466 0776 DE010000 		.4byte	.LVL59
 2467 077a 0E0F0000 		.4byte	0xf0e
 2468 077e 91070000 		.4byte	0x791
 2469 0782 18       		.uleb128 0x18
 2470 0783 01       		.uleb128 0x1
 2471 0784 50       		.byte	0x50
 2472 0785 05       		.uleb128 0x5
 2473 0786 03       		.byte	0x3
 2474 0787 00000000 		.4byte	txMessage
 2475 078b 18       		.uleb128 0x18
 2476 078c 01       		.uleb128 0x1
 2477 078d 51       		.byte	0x51
 2478 078e 01       		.uleb128 0x1
 2479 078f 4E       		.byte	0x4e
 2480 0790 00       		.byte	0
 2481 0791 19       		.uleb128 0x19
 2482 0792 F2010000 		.4byte	.LVL60
 2483 0796 E8050000 		.4byte	0x5e8
 2484 079a 18       		.uleb128 0x18
 2485 079b 01       		.uleb128 0x1
 2486 079c 50       		.byte	0x50
 2487 079d 01       		.uleb128 0x1
 2488 079e 30       		.byte	0x30
 2489 079f 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 70


 2490 07a0 00       		.byte	0
 2491 07a1 15       		.uleb128 0x15
 2492 07a2 98090000 		.4byte	.LASF92
 2493 07a6 01       		.byte	0x1
 2494 07a7 9602     		.2byte	0x296
 2495 07a9 00000000 		.4byte	.LFB38
 2496 07ad 30000000 		.4byte	.LFE38-.LFB38
 2497 07b1 01       		.uleb128 0x1
 2498 07b2 9C       		.byte	0x9c
 2499 07b3 C1070000 		.4byte	0x7c1
 2500 07b7 16       		.uleb128 0x16
 2501 07b8 06000000 		.4byte	.LVL61
 2502 07bc 7E060000 		.4byte	0x67e
 2503 07c0 00       		.byte	0
 2504 07c1 15       		.uleb128 0x15
 2505 07c2 22040000 		.4byte	.LASF93
 2506 07c6 01       		.byte	0x1
 2507 07c7 AF02     		.2byte	0x2af
 2508 07c9 00000000 		.4byte	.LFB39
 2509 07cd 24000000 		.4byte	.LFE39-.LFB39
 2510 07d1 01       		.uleb128 0x1
 2511 07d2 9C       		.byte	0x9c
 2512 07d3 01080000 		.4byte	0x801
 2513 07d7 1B       		.uleb128 0x1b
 2514 07d8 19070000 		.4byte	.LASF94
 2515 07dc 01       		.byte	0x1
 2516 07dd AF02     		.2byte	0x2af
 2517 07df EF000000 		.4byte	0xef
 2518 07e3 8B010000 		.4byte	.LLST8
 2519 07e7 20       		.uleb128 0x20
 2520 07e8 85000000 		.4byte	.LASF95
 2521 07ec 01       		.byte	0x1
 2522 07ed B102     		.2byte	0x2b1
 2523 07ef 01080000 		.4byte	0x801
 2524 07f3 AC010000 		.4byte	.LLST9
 2525 07f7 16       		.uleb128 0x16
 2526 07f8 1A000000 		.4byte	.LVL64
 2527 07fc A1070000 		.4byte	0x7a1
 2528 0800 00       		.byte	0
 2529 0801 03       		.uleb128 0x3
 2530 0802 01       		.byte	0x1
 2531 0803 02       		.byte	0x2
 2532 0804 2A030000 		.4byte	.LASF96
 2533 0808 15       		.uleb128 0x15
 2534 0809 B6000000 		.4byte	.LASF97
 2535 080d 01       		.byte	0x1
 2536 080e DC02     		.2byte	0x2dc
 2537 0810 00000000 		.4byte	.LFB40
 2538 0814 10010000 		.4byte	.LFE40-.LFB40
 2539 0818 01       		.uleb128 0x1
 2540 0819 9C       		.byte	0x9c
 2541 081a CB080000 		.4byte	0x8cb
 2542 081e 21       		.uleb128 0x21
 2543 081f 5F0A0000 		.4byte	.LASF99
 2544 0823 01       		.byte	0x1
 2545 0824 DE02     		.2byte	0x2de
 2546 0826 E4000000 		.4byte	0xe4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 71


 2547 082a 21       		.uleb128 0x21
 2548 082b 76080000 		.4byte	.LASF100
 2549 082f 01       		.byte	0x1
 2550 0830 DF02     		.2byte	0x2df
 2551 0832 EF000000 		.4byte	0xef
 2552 0836 21       		.uleb128 0x21
 2553 0837 26010000 		.4byte	.LASF101
 2554 083b 01       		.byte	0x1
 2555 083c E002     		.2byte	0x2e0
 2556 083e E4000000 		.4byte	0xe4
 2557 0842 21       		.uleb128 0x21
 2558 0843 E0060000 		.4byte	.LASF102
 2559 0847 01       		.byte	0x1
 2560 0848 E002     		.2byte	0x2e0
 2561 084a E4000000 		.4byte	0xe4
 2562 084e 17       		.uleb128 0x17
 2563 084f 22000000 		.4byte	.LVL66
 2564 0853 42060000 		.4byte	0x642
 2565 0857 62080000 		.4byte	0x862
 2566 085b 18       		.uleb128 0x18
 2567 085c 01       		.uleb128 0x1
 2568 085d 50       		.byte	0x50
 2569 085e 02       		.uleb128 0x2
 2570 085f 74       		.byte	0x74
 2571 0860 00       		.sleb128 0
 2572 0861 00       		.byte	0
 2573 0862 17       		.uleb128 0x17
 2574 0863 3C000000 		.4byte	.LVL67
 2575 0867 1A0F0000 		.4byte	0xf1a
 2576 086b 75080000 		.4byte	0x875
 2577 086f 18       		.uleb128 0x18
 2578 0870 01       		.uleb128 0x1
 2579 0871 50       		.byte	0x50
 2580 0872 01       		.uleb128 0x1
 2581 0873 36       		.byte	0x36
 2582 0874 00       		.byte	0
 2583 0875 17       		.uleb128 0x17
 2584 0876 42000000 		.4byte	.LVL68
 2585 087a 250F0000 		.4byte	0xf25
 2586 087e 88080000 		.4byte	0x888
 2587 0882 18       		.uleb128 0x18
 2588 0883 01       		.uleb128 0x1
 2589 0884 50       		.byte	0x50
 2590 0885 01       		.uleb128 0x1
 2591 0886 36       		.byte	0x36
 2592 0887 00       		.byte	0
 2593 0888 17       		.uleb128 0x17
 2594 0889 58000000 		.4byte	.LVL69
 2595 088d C1070000 		.4byte	0x7c1
 2596 0891 9B080000 		.4byte	0x89b
 2597 0895 18       		.uleb128 0x18
 2598 0896 01       		.uleb128 0x1
 2599 0897 50       		.byte	0x50
 2600 0898 01       		.uleb128 0x1
 2601 0899 31       		.byte	0x31
 2602 089a 00       		.byte	0
 2603 089b 17       		.uleb128 0x17
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 72


 2604 089c 6C000000 		.4byte	.LVL70
 2605 08a0 C1070000 		.4byte	0x7c1
 2606 08a4 AF080000 		.4byte	0x8af
 2607 08a8 18       		.uleb128 0x18
 2608 08a9 01       		.uleb128 0x1
 2609 08aa 50       		.byte	0x50
 2610 08ab 02       		.uleb128 0x2
 2611 08ac 74       		.byte	0x74
 2612 08ad 00       		.sleb128 0
 2613 08ae 00       		.byte	0
 2614 08af 16       		.uleb128 0x16
 2615 08b0 BC000000 		.4byte	.LVL71
 2616 08b4 7E060000 		.4byte	0x67e
 2617 08b8 16       		.uleb128 0x16
 2618 08b9 CA000000 		.4byte	.LVL72
 2619 08bd 300F0000 		.4byte	0xf30
 2620 08c1 16       		.uleb128 0x16
 2621 08c2 D6000000 		.4byte	.LVL73
 2622 08c6 42060000 		.4byte	0x642
 2623 08ca 00       		.byte	0
 2624 08cb 15       		.uleb128 0x15
 2625 08cc 36040000 		.4byte	.LASF103
 2626 08d0 01       		.byte	0x1
 2627 08d1 0D04     		.2byte	0x40d
 2628 08d3 00000000 		.4byte	.LFB42
 2629 08d7 BC000000 		.4byte	.LFE42-.LFB42
 2630 08db 01       		.uleb128 0x1
 2631 08dc 9C       		.byte	0x9c
 2632 08dd 7C090000 		.4byte	0x97c
 2633 08e1 1F       		.uleb128 0x1f
 2634 08e2 5B000000 		.4byte	.LASF104
 2635 08e6 01       		.byte	0x1
 2636 08e7 0F04     		.2byte	0x40f
 2637 08e9 EF000000 		.4byte	0xef
 2638 08ed 05       		.uleb128 0x5
 2639 08ee 03       		.byte	0x3
 2640 08ef 38000000 		.4byte	brmsTask.7302
 2641 08f3 22       		.uleb128 0x22
 2642 08f4 9A000000 		.4byte	.LASF105
 2643 08f8 01       		.byte	0x1
 2644 08f9 1104     		.2byte	0x411
 2645 08fb 7C090000 		.4byte	0x97c
 2646 08ff 01       		.byte	0x1
 2647 0900 22       		.uleb128 0x22
 2648 0901 BF070000 		.4byte	.LASF106
 2649 0905 01       		.byte	0x1
 2650 0906 1204     		.2byte	0x412
 2651 0908 81090000 		.4byte	0x981
 2652 090c 02       		.byte	0x2
 2653 090d 22       		.uleb128 0x22
 2654 090e 95070000 		.4byte	.LASF107
 2655 0912 01       		.byte	0x1
 2656 0913 1304     		.2byte	0x413
 2657 0915 86090000 		.4byte	0x986
 2658 0919 04       		.byte	0x4
 2659 091a 22       		.uleb128 0x22
 2660 091b 2D000000 		.4byte	.LASF108
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 73


 2661 091f 01       		.byte	0x1
 2662 0920 1404     		.2byte	0x414
 2663 0922 8B090000 		.4byte	0x98b
 2664 0926 08       		.byte	0x8
 2665 0927 22       		.uleb128 0x22
 2666 0928 1E070000 		.4byte	.LASF109
 2667 092c 01       		.byte	0x1
 2668 092d 1504     		.2byte	0x415
 2669 092f EF000000 		.4byte	0xef
 2670 0933 10       		.byte	0x10
 2671 0934 17       		.uleb128 0x17
 2672 0935 08000000 		.4byte	.LVL74
 2673 0939 3B0F0000 		.4byte	0xf3b
 2674 093d 47090000 		.4byte	0x947
 2675 0941 18       		.uleb128 0x18
 2676 0942 01       		.uleb128 0x1
 2677 0943 50       		.byte	0x50
 2678 0944 01       		.uleb128 0x1
 2679 0945 32       		.byte	0x32
 2680 0946 00       		.byte	0
 2681 0947 17       		.uleb128 0x17
 2682 0948 0E000000 		.4byte	.LVL75
 2683 094c 470F0000 		.4byte	0xf47
 2684 0950 5A090000 		.4byte	0x95a
 2685 0954 18       		.uleb128 0x18
 2686 0955 01       		.uleb128 0x1
 2687 0956 50       		.byte	0x50
 2688 0957 01       		.uleb128 0x1
 2689 0958 31       		.byte	0x31
 2690 0959 00       		.byte	0
 2691 095a 16       		.uleb128 0x16
 2692 095b A2000000 		.4byte	.LVL76
 2693 095f 08080000 		.4byte	0x808
 2694 0963 16       		.uleb128 0x16
 2695 0964 B0000000 		.4byte	.LVL77
 2696 0968 CB060000 		.4byte	0x6cb
 2697 096c 19       		.uleb128 0x19
 2698 096d B6000000 		.4byte	.LVL78
 2699 0971 470F0000 		.4byte	0xf47
 2700 0975 18       		.uleb128 0x18
 2701 0976 01       		.uleb128 0x1
 2702 0977 50       		.byte	0x50
 2703 0978 01       		.uleb128 0x1
 2704 0979 30       		.byte	0x30
 2705 097a 00       		.byte	0
 2706 097b 00       		.byte	0
 2707 097c 23       		.uleb128 0x23
 2708 097d EF000000 		.4byte	0xef
 2709 0981 23       		.uleb128 0x23
 2710 0982 EF000000 		.4byte	0xef
 2711 0986 23       		.uleb128 0x23
 2712 0987 EF000000 		.4byte	0xef
 2713 098b 23       		.uleb128 0x23
 2714 098c EF000000 		.4byte	0xef
 2715 0990 24       		.uleb128 0x24
 2716 0991 A7090000 		.4byte	.LASF188
 2717 0995 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 74


 2718 0996 4B03     		.2byte	0x34b
 2719 0998 AA000000 		.4byte	0xaa
 2720 099c 00000000 		.4byte	.LFB41
 2721 09a0 50010000 		.4byte	.LFE41-.LFB41
 2722 09a4 01       		.uleb128 0x1
 2723 09a5 9C       		.byte	0x9c
 2724 09a6 A20B0000 		.4byte	0xba2
 2725 09aa 22       		.uleb128 0x22
 2726 09ab FF030000 		.4byte	.LASF110
 2727 09af 01       		.byte	0x1
 2728 09b0 C303     		.2byte	0x3c3
 2729 09b2 EF000000 		.4byte	0xef
 2730 09b6 00       		.byte	0
 2731 09b7 25       		.uleb128 0x25
 2732 09b8 27000000 		.4byte	.LASF111
 2733 09bc 01       		.byte	0x1
 2734 09bd C403     		.2byte	0x3c4
 2735 09bf B8000000 		.4byte	0xb8
 2736 09c3 9C7F     		.sleb128 -100
 2737 09c5 22       		.uleb128 0x22
 2738 09c6 6E050000 		.4byte	.LASF112
 2739 09ca 01       		.byte	0x1
 2740 09cb C503     		.2byte	0x3c5
 2741 09cd 01080000 		.4byte	0x801
 2742 09d1 01       		.byte	0x1
 2743 09d2 17       		.uleb128 0x17
 2744 09d3 08000000 		.4byte	.LVL79
 2745 09d7 1A0F0000 		.4byte	0xf1a
 2746 09db E5090000 		.4byte	0x9e5
 2747 09df 18       		.uleb128 0x18
 2748 09e0 01       		.uleb128 0x1
 2749 09e1 50       		.byte	0x50
 2750 09e2 01       		.uleb128 0x1
 2751 09e3 31       		.byte	0x31
 2752 09e4 00       		.byte	0
 2753 09e5 17       		.uleb128 0x17
 2754 09e6 0E000000 		.4byte	.LVL80
 2755 09ea 250F0000 		.4byte	0xf25
 2756 09ee F8090000 		.4byte	0x9f8
 2757 09f2 18       		.uleb128 0x18
 2758 09f3 01       		.uleb128 0x1
 2759 09f4 50       		.byte	0x50
 2760 09f5 01       		.uleb128 0x1
 2761 09f6 31       		.byte	0x31
 2762 09f7 00       		.byte	0
 2763 09f8 16       		.uleb128 0x16
 2764 09f9 12000000 		.4byte	.LVL81
 2765 09fd 520F0000 		.4byte	0xf52
 2766 0a01 17       		.uleb128 0x17
 2767 0a02 18000000 		.4byte	.LVL82
 2768 0a06 5E0F0000 		.4byte	0xf5e
 2769 0a0a 180A0000 		.4byte	0xa18
 2770 0a0e 18       		.uleb128 0x18
 2771 0a0f 01       		.uleb128 0x1
 2772 0a10 50       		.byte	0x50
 2773 0a11 05       		.uleb128 0x5
 2774 0a12 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 75


 2775 0a13 00000000 		.4byte	BRMS_Interrupt
 2776 0a17 00       		.byte	0
 2777 0a18 17       		.uleb128 0x17
 2778 0a19 1E000000 		.4byte	.LVL83
 2779 0a1d 690F0000 		.4byte	0xf69
 2780 0a21 2B0A0000 		.4byte	0xa2b
 2781 0a25 18       		.uleb128 0x18
 2782 0a26 01       		.uleb128 0x1
 2783 0a27 50       		.byte	0x50
 2784 0a28 01       		.uleb128 0x1
 2785 0a29 32       		.byte	0x32
 2786 0a2a 00       		.byte	0
 2787 0a2b 17       		.uleb128 0x17
 2788 0a2c 24000000 		.4byte	.LVL84
 2789 0a30 740F0000 		.4byte	0xf74
 2790 0a34 420A0000 		.4byte	0xa42
 2791 0a38 18       		.uleb128 0x18
 2792 0a39 01       		.uleb128 0x1
 2793 0a3a 50       		.byte	0x50
 2794 0a3b 05       		.uleb128 0x5
 2795 0a3c 03       		.byte	0x3
 2796 0a3d 00000000 		.4byte	HomeIsrHandler
 2797 0a41 00       		.byte	0
 2798 0a42 17       		.uleb128 0x17
 2799 0a43 2A000000 		.4byte	.LVL85
 2800 0a47 7F0F0000 		.4byte	0xf7f
 2801 0a4b 550A0000 		.4byte	0xa55
 2802 0a4f 18       		.uleb128 0x18
 2803 0a50 01       		.uleb128 0x1
 2804 0a51 50       		.byte	0x50
 2805 0a52 01       		.uleb128 0x1
 2806 0a53 33       		.byte	0x33
 2807 0a54 00       		.byte	0
 2808 0a55 17       		.uleb128 0x17
 2809 0a56 30000000 		.4byte	.LVL86
 2810 0a5a 8A0F0000 		.4byte	0xf8a
 2811 0a5e 6C0A0000 		.4byte	0xa6c
 2812 0a62 18       		.uleb128 0x18
 2813 0a63 01       		.uleb128 0x1
 2814 0a64 50       		.byte	0x50
 2815 0a65 05       		.uleb128 0x5
 2816 0a66 03       		.byte	0x3
 2817 0a67 00000000 		.4byte	RSTIsrHandler
 2818 0a6b 00       		.byte	0
 2819 0a6c 17       		.uleb128 0x17
 2820 0a6d 36000000 		.4byte	.LVL87
 2821 0a71 950F0000 		.4byte	0xf95
 2822 0a75 7F0A0000 		.4byte	0xa7f
 2823 0a79 18       		.uleb128 0x18
 2824 0a7a 01       		.uleb128 0x1
 2825 0a7b 50       		.byte	0x50
 2826 0a7c 01       		.uleb128 0x1
 2827 0a7d 33       		.byte	0x33
 2828 0a7e 00       		.byte	0
 2829 0a7f 17       		.uleb128 0x17
 2830 0a80 3C000000 		.4byte	.LVL88
 2831 0a84 A00F0000 		.4byte	0xfa0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 76


 2832 0a88 960A0000 		.4byte	0xa96
 2833 0a8c 18       		.uleb128 0x18
 2834 0a8d 01       		.uleb128 0x1
 2835 0a8e 50       		.byte	0x50
 2836 0a8f 05       		.uleb128 0x5
 2837 0a90 03       		.byte	0x3
 2838 0a91 00000000 		.4byte	SPI_SS_IsrHandler
 2839 0a95 00       		.byte	0
 2840 0a96 17       		.uleb128 0x17
 2841 0a97 42000000 		.4byte	.LVL89
 2842 0a9b AB0F0000 		.4byte	0xfab
 2843 0a9f A90A0000 		.4byte	0xaa9
 2844 0aa3 18       		.uleb128 0x18
 2845 0aa4 01       		.uleb128 0x1
 2846 0aa5 50       		.byte	0x50
 2847 0aa6 01       		.uleb128 0x1
 2848 0aa7 33       		.byte	0x33
 2849 0aa8 00       		.byte	0
 2850 0aa9 16       		.uleb128 0x16
 2851 0aaa 48000000 		.4byte	.LVL90
 2852 0aae B60F0000 		.4byte	0xfb6
 2853 0ab2 17       		.uleb128 0x17
 2854 0ab3 4E000000 		.4byte	.LVL91
 2855 0ab7 C10F0000 		.4byte	0xfc1
 2856 0abb C60A0000 		.4byte	0xac6
 2857 0abf 18       		.uleb128 0x18
 2858 0ac0 01       		.uleb128 0x1
 2859 0ac1 50       		.byte	0x50
 2860 0ac2 02       		.uleb128 0x2
 2861 0ac3 08       		.byte	0x8
 2862 0ac4 64       		.byte	0x64
 2863 0ac5 00       		.byte	0
 2864 0ac6 16       		.uleb128 0x16
 2865 0ac7 52000000 		.4byte	.LVL92
 2866 0acb CC0F0000 		.4byte	0xfcc
 2867 0acf 16       		.uleb128 0x16
 2868 0ad0 56000000 		.4byte	.LVL93
 2869 0ad4 D70F0000 		.4byte	0xfd7
 2870 0ad8 17       		.uleb128 0x17
 2871 0ad9 5E000000 		.4byte	.LVL94
 2872 0add E30F0000 		.4byte	0xfe3
 2873 0ae1 ED0A0000 		.4byte	0xaed
 2874 0ae5 18       		.uleb128 0x18
 2875 0ae6 01       		.uleb128 0x1
 2876 0ae7 50       		.byte	0x50
 2877 0ae8 03       		.uleb128 0x3
 2878 0ae9 0A       		.byte	0xa
 2879 0aea 4006     		.2byte	0x640
 2880 0aec 00       		.byte	0
 2881 0aed 17       		.uleb128 0x17
 2882 0aee 64000000 		.4byte	.LVL95
 2883 0af2 42060000 		.4byte	0x642
 2884 0af6 000B0000 		.4byte	0xb00
 2885 0afa 18       		.uleb128 0x18
 2886 0afb 01       		.uleb128 0x1
 2887 0afc 50       		.byte	0x50
 2888 0afd 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 77


 2889 0afe 30       		.byte	0x30
 2890 0aff 00       		.byte	0
 2891 0b00 16       		.uleb128 0x16
 2892 0b01 72000000 		.4byte	.LVL96
 2893 0b05 EF0F0000 		.4byte	0xfef
 2894 0b09 17       		.uleb128 0x17
 2895 0b0a 7A000000 		.4byte	.LVL97
 2896 0b0e 7D0E0000 		.4byte	0xe7d
 2897 0b12 1D0B0000 		.4byte	0xb1d
 2898 0b16 18       		.uleb128 0x18
 2899 0b17 01       		.uleb128 0x1
 2900 0b18 50       		.byte	0x50
 2901 0b19 02       		.uleb128 0x2
 2902 0b1a 75       		.byte	0x75
 2903 0b1b 00       		.sleb128 0
 2904 0b1c 00       		.byte	0
 2905 0b1d 16       		.uleb128 0x16
 2906 0b1e 82000000 		.4byte	.LVL98
 2907 0b22 FA0F0000 		.4byte	0xffa
 2908 0b26 17       		.uleb128 0x17
 2909 0b27 88000000 		.4byte	.LVL99
 2910 0b2b 880E0000 		.4byte	0xe88
 2911 0b2f 3A0B0000 		.4byte	0xb3a
 2912 0b33 18       		.uleb128 0x18
 2913 0b34 01       		.uleb128 0x1
 2914 0b35 50       		.byte	0x50
 2915 0b36 02       		.uleb128 0x2
 2916 0b37 74       		.byte	0x74
 2917 0b38 00       		.sleb128 0
 2918 0b39 00       		.byte	0
 2919 0b3a 16       		.uleb128 0x16
 2920 0b3b 9A000000 		.4byte	.LVL100
 2921 0b3f A1070000 		.4byte	0x7a1
 2922 0b43 17       		.uleb128 0x17
 2923 0b44 A0000000 		.4byte	.LVL101
 2924 0b48 C1070000 		.4byte	0x7c1
 2925 0b4c 570B0000 		.4byte	0xb57
 2926 0b50 18       		.uleb128 0x18
 2927 0b51 01       		.uleb128 0x1
 2928 0b52 50       		.byte	0x50
 2929 0b53 02       		.uleb128 0x2
 2930 0b54 74       		.byte	0x74
 2931 0b55 00       		.sleb128 0
 2932 0b56 00       		.byte	0
 2933 0b57 17       		.uleb128 0x17
 2934 0b58 D6000000 		.4byte	.LVL102
 2935 0b5c 42060000 		.4byte	0x642
 2936 0b60 6B0B0000 		.4byte	0xb6b
 2937 0b64 18       		.uleb128 0x18
 2938 0b65 01       		.uleb128 0x1
 2939 0b66 50       		.byte	0x50
 2940 0b67 02       		.uleb128 0x2
 2941 0b68 74       		.byte	0x74
 2942 0b69 00       		.sleb128 0
 2943 0b6a 00       		.byte	0
 2944 0b6b 17       		.uleb128 0x17
 2945 0b6c E8000000 		.4byte	.LVL103
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 78


 2946 0b70 05100000 		.4byte	0x1005
 2947 0b74 7E0B0000 		.4byte	0xb7e
 2948 0b78 18       		.uleb128 0x18
 2949 0b79 01       		.uleb128 0x1
 2950 0b7a 50       		.byte	0x50
 2951 0b7b 01       		.uleb128 0x1
 2952 0b7c 31       		.byte	0x31
 2953 0b7d 00       		.byte	0
 2954 0b7e 17       		.uleb128 0x17
 2955 0b7f F0000000 		.4byte	.LVL104
 2956 0b83 05100000 		.4byte	0x1005
 2957 0b87 920B0000 		.4byte	0xb92
 2958 0b8b 18       		.uleb128 0x18
 2959 0b8c 01       		.uleb128 0x1
 2960 0b8d 50       		.byte	0x50
 2961 0b8e 02       		.uleb128 0x2
 2962 0b8f 74       		.byte	0x74
 2963 0b90 00       		.sleb128 0
 2964 0b91 00       		.byte	0
 2965 0b92 19       		.uleb128 0x19
 2966 0b93 F6000000 		.4byte	.LVL105
 2967 0b97 C10F0000 		.4byte	0xfc1
 2968 0b9b 18       		.uleb128 0x18
 2969 0b9c 01       		.uleb128 0x1
 2970 0b9d 50       		.byte	0x50
 2971 0b9e 01       		.uleb128 0x1
 2972 0b9f 3A       		.byte	0x3a
 2973 0ba0 00       		.byte	0
 2974 0ba1 00       		.byte	0
 2975 0ba2 26       		.uleb128 0x26
 2976 0ba3 3F030000 		.4byte	.LASF113
 2977 0ba7 01       		.byte	0x1
 2978 0ba8 5C       		.byte	0x5c
 2979 0ba9 01080000 		.4byte	0x801
 2980 0bad 05       		.uleb128 0x5
 2981 0bae 03       		.byte	0x3
 2982 0baf 00000000 		.4byte	inAuto
 2983 0bb3 27       		.uleb128 0x27
 2984 0bb4 4A6F6700 		.ascii	"Jog\000"
 2985 0bb8 01       		.byte	0x1
 2986 0bb9 5E       		.byte	0x5e
 2987 0bba C40B0000 		.4byte	0xbc4
 2988 0bbe 05       		.uleb128 0x5
 2989 0bbf 03       		.byte	0x3
 2990 0bc0 00000000 		.4byte	Jog
 2991 0bc4 06       		.uleb128 0x6
 2992 0bc5 B8000000 		.4byte	0xb8
 2993 0bc9 26       		.uleb128 0x26
 2994 0bca 41010000 		.4byte	.LASF114
 2995 0bce 01       		.byte	0x1
 2996 0bcf 5E       		.byte	0x5e
 2997 0bd0 C40B0000 		.4byte	0xbc4
 2998 0bd4 05       		.uleb128 0x5
 2999 0bd5 03       		.byte	0x3
 3000 0bd6 00000000 		.4byte	LastJog
 3001 0bda 26       		.uleb128 0x26
 3002 0bdb 0D070000 		.4byte	.LASF115
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 79


 3003 0bdf 01       		.byte	0x1
 3004 0be0 5F       		.byte	0x5f
 3005 0be1 01080000 		.4byte	0x801
 3006 0be5 05       		.uleb128 0x5
 3007 0be6 03       		.byte	0x3
 3008 0be7 00000000 		.4byte	PID_Enabled
 3009 0beb 26       		.uleb128 0x26
 3010 0bec FD060000 		.4byte	.LASF116
 3011 0bf0 01       		.byte	0x1
 3012 0bf1 5F       		.byte	0x5f
 3013 0bf2 01080000 		.4byte	0x801
 3014 0bf6 05       		.uleb128 0x5
 3015 0bf7 03       		.byte	0x3
 3016 0bf8 00000000 		.4byte	PID_Was_Enabled
 3017 0bfc 26       		.uleb128 0x26
 3018 0bfd F9070000 		.4byte	.LASF117
 3019 0c01 01       		.byte	0x1
 3020 0c02 60       		.byte	0x60
 3021 0c03 E4000000 		.4byte	0xe4
 3022 0c07 05       		.uleb128 0x5
 3023 0c08 03       		.byte	0x3
 3024 0c09 00000000 		.4byte	PID_Setpoint
 3025 0c0d 26       		.uleb128 0x26
 3026 0c0e 490A0000 		.4byte	.LASF118
 3027 0c12 01       		.byte	0x1
 3028 0c13 60       		.byte	0x60
 3029 0c14 E4000000 		.4byte	0xe4
 3030 0c18 05       		.uleb128 0x5
 3031 0c19 03       		.byte	0x3
 3032 0c1a 00000000 		.4byte	PID_EffectiveSetpoint
 3033 0c1e 26       		.uleb128 0x26
 3034 0c1f FE010000 		.4byte	.LASF119
 3035 0c23 01       		.byte	0x1
 3036 0c24 61       		.byte	0x61
 3037 0c25 C3000000 		.4byte	0xc3
 3038 0c29 05       		.uleb128 0x5
 3039 0c2a 03       		.byte	0x3
 3040 0c2b 00000000 		.4byte	PID_EffSetDelta
 3041 0c2f 26       		.uleb128 0x26
 3042 0c30 0E020000 		.4byte	.LASF120
 3043 0c34 01       		.byte	0x1
 3044 0c35 62       		.byte	0x62
 3045 0c36 EF000000 		.4byte	0xef
 3046 0c3a 05       		.uleb128 0x5
 3047 0c3b 03       		.byte	0x3
 3048 0c3c 00000000 		.4byte	lastTime
 3049 0c40 26       		.uleb128 0x26
 3050 0c41 EF050000 		.4byte	.LASF121
 3051 0c45 01       		.byte	0x1
 3052 0c46 64       		.byte	0x64
 3053 0c47 EF000000 		.4byte	0xef
 3054 0c4b 05       		.uleb128 0x5
 3055 0c4c 03       		.byte	0x3
 3056 0c4d 00000000 		.4byte	refSampleTime
 3057 0c51 26       		.uleb128 0x26
 3058 0c52 F1030000 		.4byte	.LASF122
 3059 0c56 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 80


 3060 0c57 65       		.byte	0x65
 3061 0c58 C6060000 		.4byte	0x6c6
 3062 0c5c 05       		.uleb128 0x5
 3063 0c5d 03       		.byte	0x3
 3064 0c5e 00000000 		.4byte	Position
 3065 0c62 26       		.uleb128 0x26
 3066 0c63 FD050000 		.4byte	.LASF123
 3067 0c67 01       		.byte	0x1
 3068 0c68 65       		.byte	0x65
 3069 0c69 C6060000 		.4byte	0x6c6
 3070 0c6d 05       		.uleb128 0x5
 3071 0c6e 03       		.byte	0x3
 3072 0c6f 00000000 		.4byte	LastPosition
 3073 0c73 26       		.uleb128 0x26
 3074 0c74 BA060000 		.4byte	.LASF124
 3075 0c78 01       		.byte	0x1
 3076 0c79 70       		.byte	0x70
 3077 0c7a E4000000 		.4byte	0xe4
 3078 0c7e 05       		.uleb128 0x5
 3079 0c7f 03       		.byte	0x3
 3080 0c80 00000000 		.4byte	Output
 3081 0c84 26       		.uleb128 0x26
 3082 0c85 36020000 		.4byte	.LASF125
 3083 0c89 01       		.byte	0x1
 3084 0c8a 71       		.byte	0x71
 3085 0c8b E4000000 		.4byte	0xe4
 3086 0c8f 05       		.uleb128 0x5
 3087 0c90 03       		.byte	0x3
 3088 0c91 00000000 		.4byte	ITerm
 3089 0c95 27       		.uleb128 0x27
 3090 0c96 6B7000   		.ascii	"kp\000"
 3091 0c99 01       		.byte	0x1
 3092 0c9a 74       		.byte	0x74
 3093 0c9b EF000000 		.4byte	0xef
 3094 0c9f 05       		.uleb128 0x5
 3095 0ca0 03       		.byte	0x3
 3096 0ca1 00000000 		.4byte	kp
 3097 0ca5 27       		.uleb128 0x27
 3098 0ca6 6B6900   		.ascii	"ki\000"
 3099 0ca9 01       		.byte	0x1
 3100 0caa 75       		.byte	0x75
 3101 0cab EF000000 		.4byte	0xef
 3102 0caf 05       		.uleb128 0x5
 3103 0cb0 03       		.byte	0x3
 3104 0cb1 00000000 		.4byte	ki
 3105 0cb5 27       		.uleb128 0x27
 3106 0cb6 6B6400   		.ascii	"kd\000"
 3107 0cb9 01       		.byte	0x1
 3108 0cba 76       		.byte	0x76
 3109 0cbb EF000000 		.4byte	0xef
 3110 0cbf 05       		.uleb128 0x5
 3111 0cc0 03       		.byte	0x3
 3112 0cc1 00000000 		.4byte	kd
 3113 0cc5 26       		.uleb128 0x26
 3114 0cc6 FB020000 		.4byte	.LASF126
 3115 0cca 01       		.byte	0x1
 3116 0ccb 78       		.byte	0x78
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 81


 3117 0ccc E4000000 		.4byte	0xe4
 3118 0cd0 05       		.uleb128 0x5
 3119 0cd1 03       		.byte	0x3
 3120 0cd2 00000000 		.4byte	outMax_Total
 3121 0cd6 26       		.uleb128 0x26
 3122 0cd7 D7070000 		.4byte	.LASF127
 3123 0cdb 01       		.byte	0x1
 3124 0cdc 78       		.byte	0x78
 3125 0cdd E4000000 		.4byte	0xe4
 3126 0ce1 05       		.uleb128 0x5
 3127 0ce2 03       		.byte	0x3
 3128 0ce3 00000000 		.4byte	outMax_ITerm
 3129 0ce7 26       		.uleb128 0x26
 3130 0ce8 EE080000 		.4byte	.LASF128
 3131 0cec 01       		.byte	0x1
 3132 0ced 79       		.byte	0x79
 3133 0cee E4000000 		.4byte	0xe4
 3134 0cf2 05       		.uleb128 0x5
 3135 0cf3 03       		.byte	0x3
 3136 0cf4 00000000 		.4byte	pwmLimit
 3137 0cf8 26       		.uleb128 0x26
 3138 0cf9 F2070000 		.4byte	.LASF129
 3139 0cfd 01       		.byte	0x1
 3140 0cfe 79       		.byte	0x79
 3141 0cff E4000000 		.4byte	0xe4
 3142 0d03 05       		.uleb128 0x5
 3143 0d04 03       		.byte	0x3
 3144 0d05 00000000 		.4byte	pwmMax
 3145 0d09 26       		.uleb128 0x26
 3146 0d0a 17020000 		.4byte	.LASF130
 3147 0d0e 01       		.byte	0x1
 3148 0d0f 79       		.byte	0x79
 3149 0d10 E4000000 		.4byte	0xe4
 3150 0d14 05       		.uleb128 0x5
 3151 0d15 03       		.byte	0x3
 3152 0d16 00000000 		.4byte	pwmMin
 3153 0d1a 27       		.uleb128 0x27
 3154 0d1b 50574D00 		.ascii	"PWM\000"
 3155 0d1f 01       		.byte	0x1
 3156 0d20 7A       		.byte	0x7a
 3157 0d21 C6060000 		.4byte	0x6c6
 3158 0d25 05       		.uleb128 0x5
 3159 0d26 03       		.byte	0x3
 3160 0d27 00000000 		.4byte	PWM
 3161 0d2b 26       		.uleb128 0x26
 3162 0d2c 15090000 		.4byte	.LASF131
 3163 0d30 01       		.byte	0x1
 3164 0d31 7C       		.byte	0x7c
 3165 0d32 01080000 		.4byte	0x801
 3166 0d36 05       		.uleb128 0x5
 3167 0d37 03       		.byte	0x3
 3168 0d38 00000000 		.4byte	homingDone
 3169 0d3c 26       		.uleb128 0x26
 3170 0d3d 90080000 		.4byte	.LASF132
 3171 0d41 01       		.byte	0x1
 3172 0d42 81       		.byte	0x81
 3173 0d43 4D0D0000 		.4byte	0xd4d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 82


 3174 0d47 05       		.uleb128 0x5
 3175 0d48 03       		.byte	0x3
 3176 0d49 00000000 		.4byte	UptimeMicroseconds
 3177 0d4d 06       		.uleb128 0x6
 3178 0d4e FA000000 		.4byte	0xfa
 3179 0d52 26       		.uleb128 0x26
 3180 0d53 C9090000 		.4byte	.LASF133
 3181 0d57 01       		.byte	0x1
 3182 0d58 82       		.byte	0x82
 3183 0d59 4D0D0000 		.4byte	0xd4d
 3184 0d5d 05       		.uleb128 0x5
 3185 0d5e 03       		.byte	0x3
 3186 0d5f 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3187 0d63 26       		.uleb128 0x26
 3188 0d64 7D030000 		.4byte	.LASF134
 3189 0d68 01       		.byte	0x1
 3190 0d69 83       		.byte	0x83
 3191 0d6a 4D0D0000 		.4byte	0xd4d
 3192 0d6e 05       		.uleb128 0x5
 3193 0d6f 03       		.byte	0x3
 3194 0d70 00000000 		.4byte	UptimeMilliseconds
 3195 0d74 26       		.uleb128 0x26
 3196 0d75 50050000 		.4byte	.LASF135
 3197 0d79 01       		.byte	0x1
 3198 0d7a 84       		.byte	0x84
 3199 0d7b 4D0D0000 		.4byte	0xd4d
 3200 0d7f 05       		.uleb128 0x5
 3201 0d80 03       		.byte	0x3
 3202 0d81 00000000 		.4byte	UptimeMillisecondsAccumulator
 3203 0d85 26       		.uleb128 0x26
 3204 0d86 E4070000 		.4byte	.LASF136
 3205 0d8a 01       		.byte	0x1
 3206 0d8b 85       		.byte	0x85
 3207 0d8c 4D0D0000 		.4byte	0xd4d
 3208 0d90 05       		.uleb128 0x5
 3209 0d91 03       		.byte	0x3
 3210 0d92 00000000 		.4byte	UptimeSeconds
 3211 0d96 26       		.uleb128 0x26
 3212 0d97 55020000 		.4byte	.LASF137
 3213 0d9b 01       		.byte	0x1
 3214 0d9c B1       		.byte	0xb1
 3215 0d9d A70D0000 		.4byte	0xda7
 3216 0da1 05       		.uleb128 0x5
 3217 0da2 03       		.byte	0x3
 3218 0da3 00000000 		.4byte	ConfigState
 3219 0da7 06       		.uleb128 0x6
 3220 0da8 6F010000 		.4byte	0x16f
 3221 0dac 26       		.uleb128 0x26
 3222 0dad E3080000 		.4byte	.LASF138
 3223 0db1 01       		.byte	0x1
 3224 0db2 B2       		.byte	0xb2
 3225 0db3 BD0D0000 		.4byte	0xdbd
 3226 0db7 05       		.uleb128 0x5
 3227 0db8 03       		.byte	0x3
 3228 0db9 00000000 		.4byte	FaultState
 3229 0dbd 06       		.uleb128 0x6
 3230 0dbe C3000000 		.4byte	0xc3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 83


 3231 0dc2 26       		.uleb128 0x26
 3232 0dc3 06090000 		.4byte	.LASF139
 3233 0dc7 01       		.byte	0x1
 3234 0dc8 B3       		.byte	0xb3
 3235 0dc9 BD0D0000 		.4byte	0xdbd
 3236 0dcd 05       		.uleb128 0x5
 3237 0dce 03       		.byte	0x3
 3238 0dcf 00000000 		.4byte	ConfigSequence
 3239 0dd3 26       		.uleb128 0x26
 3240 0dd4 37080000 		.4byte	.LASF140
 3241 0dd8 01       		.byte	0x1
 3242 0dd9 B4       		.byte	0xb4
 3243 0dda E40D0000 		.4byte	0xde4
 3244 0dde 05       		.uleb128 0x5
 3245 0ddf 03       		.byte	0x3
 3246 0de0 00000000 		.4byte	ChecksumErrors
 3247 0de4 06       		.uleb128 0x6
 3248 0de5 D9000000 		.4byte	0xd9
 3249 0de9 26       		.uleb128 0x26
 3250 0dea 1E020000 		.4byte	.LASF141
 3251 0dee 01       		.byte	0x1
 3252 0def B5       		.byte	0xb5
 3253 0df0 FA0D0000 		.4byte	0xdfa
 3254 0df4 05       		.uleb128 0x5
 3255 0df5 03       		.byte	0x3
 3256 0df6 00000000 		.4byte	MotorCurrent
 3257 0dfa 06       		.uleb128 0x6
 3258 0dfb CE000000 		.4byte	0xce
 3259 0dff 10       		.uleb128 0x10
 3260 0e00 C3000000 		.4byte	0xc3
 3261 0e04 0F0E0000 		.4byte	0xe0f
 3262 0e08 11       		.uleb128 0x11
 3263 0e09 3E010000 		.4byte	0x13e
 3264 0e0d 13       		.byte	0x13
 3265 0e0e 00       		.byte	0
 3266 0e0f 26       		.uleb128 0x26
 3267 0e10 DF050000 		.4byte	.LASF142
 3268 0e14 01       		.byte	0x1
 3269 0e15 B6       		.byte	0xb6
 3270 0e16 FF0D0000 		.4byte	0xdff
 3271 0e1a 05       		.uleb128 0x5
 3272 0e1b 03       		.byte	0x3
 3273 0e1c 00000000 		.4byte	CurrentI2Cinbuf
 3274 0e20 26       		.uleb128 0x26
 3275 0e21 7E070000 		.4byte	.LASF143
 3276 0e25 01       		.byte	0x1
 3277 0e26 C8       		.byte	0xc8
 3278 0e27 EF000000 		.4byte	0xef
 3279 0e2b 05       		.uleb128 0x5
 3280 0e2c 03       		.byte	0x3
 3281 0e2d 00000000 		.4byte	LastMessageTimeSeconds
 3282 0e31 28       		.uleb128 0x28
 3283 0e32 08000000 		.4byte	.LASF144
 3284 0e36 01       		.byte	0x1
 3285 0e37 0C01     		.2byte	0x10c
 3286 0e39 6E030000 		.4byte	0x36e
 3287 0e3d 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 84


 3288 0e3e 03       		.byte	0x3
 3289 0e3f 00000000 		.4byte	rxMessage
 3290 0e43 28       		.uleb128 0x28
 3291 0e44 0A060000 		.4byte	.LASF145
 3292 0e48 01       		.byte	0x1
 3293 0e49 2401     		.2byte	0x124
 3294 0e4b 83040000 		.4byte	0x483
 3295 0e4f 05       		.uleb128 0x5
 3296 0e50 03       		.byte	0x3
 3297 0e51 00000000 		.4byte	txMessage
 3298 0e55 28       		.uleb128 0x28
 3299 0e56 4D070000 		.4byte	.LASF146
 3300 0e5a 01       		.byte	0x1
 3301 0e5b 2C01     		.2byte	0x12c
 3302 0e5d BF040000 		.4byte	0x4bf
 3303 0e61 05       		.uleb128 0x5
 3304 0e62 03       		.byte	0x3
 3305 0e63 00000000 		.4byte	txMessageState
 3306 0e67 29       		.uleb128 0x29
 3307 0e68 B5040000 		.4byte	.LASF147
 3308 0e6c B5040000 		.4byte	.LASF147
 3309 0e70 05       		.byte	0x5
 3310 0e71 28       		.byte	0x28
 3311 0e72 29       		.uleb128 0x29
 3312 0e73 20090000 		.4byte	.LASF148
 3313 0e77 20090000 		.4byte	.LASF148
 3314 0e7b 06       		.byte	0x6
 3315 0e7c 39       		.byte	0x39
 3316 0e7d 29       		.uleb128 0x29
 3317 0e7e 14060000 		.4byte	.LASF149
 3318 0e82 14060000 		.4byte	.LASF149
 3319 0e86 07       		.byte	0x7
 3320 0e87 5A       		.byte	0x5a
 3321 0e88 29       		.uleb128 0x29
 3322 0e89 7E040000 		.4byte	.LASF150
 3323 0e8d 7E040000 		.4byte	.LASF150
 3324 0e91 08       		.byte	0x8
 3325 0e92 5A       		.byte	0x5a
 3326 0e93 29       		.uleb128 0x29
 3327 0e94 080A0000 		.4byte	.LASF151
 3328 0e98 080A0000 		.4byte	.LASF151
 3329 0e9c 09       		.byte	0x9
 3330 0e9d 28       		.byte	0x28
 3331 0e9e 29       		.uleb128 0x29
 3332 0e9f DE000000 		.4byte	.LASF152
 3333 0ea3 DE000000 		.4byte	.LASF152
 3334 0ea7 0A       		.byte	0xa
 3335 0ea8 39       		.byte	0x39
 3336 0ea9 29       		.uleb128 0x29
 3337 0eaa 67030000 		.4byte	.LASF153
 3338 0eae 67030000 		.4byte	.LASF153
 3339 0eb2 0B       		.byte	0xb
 3340 0eb3 39       		.byte	0x39
 3341 0eb4 29       		.uleb128 0x29
 3342 0eb5 1C050000 		.4byte	.LASF154
 3343 0eb9 1C050000 		.4byte	.LASF154
 3344 0ebd 0B       		.byte	0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 85


 3345 0ebe 32       		.byte	0x32
 3346 0ebf 2A       		.uleb128 0x2a
 3347 0ec0 49050000 		.4byte	.LASF189
 3348 0ec4 49050000 		.4byte	.LASF189
 3349 0ec8 2B       		.uleb128 0x2b
 3350 0ec9 19080000 		.4byte	.LASF155
 3351 0ecd 19080000 		.4byte	.LASF155
 3352 0ed1 0C       		.byte	0xc
 3353 0ed2 3D03     		.2byte	0x33d
 3354 0ed4 2B       		.uleb128 0x2b
 3355 0ed5 45040000 		.4byte	.LASF156
 3356 0ed9 45040000 		.4byte	.LASF156
 3357 0edd 0C       		.byte	0xc
 3358 0ede 3F03     		.2byte	0x33f
 3359 0ee0 2B       		.uleb128 0x2b
 3360 0ee1 51010000 		.4byte	.LASF157
 3361 0ee5 51010000 		.4byte	.LASF157
 3362 0ee9 0C       		.byte	0xc
 3363 0eea 4703     		.2byte	0x347
 3364 0eec 29       		.uleb128 0x29
 3365 0eed 88060000 		.4byte	.LASF158
 3366 0ef1 88060000 		.4byte	.LASF158
 3367 0ef5 0D       		.byte	0xd
 3368 0ef6 70       		.byte	0x70
 3369 0ef7 2B       		.uleb128 0x2b
 3370 0ef8 9B040000 		.4byte	.LASF159
 3371 0efc 9B040000 		.4byte	.LASF159
 3372 0f00 0E       		.byte	0xe
 3373 0f01 5501     		.2byte	0x155
 3374 0f03 29       		.uleb128 0x29
 3375 0f04 90030000 		.4byte	.LASF160
 3376 0f08 90030000 		.4byte	.LASF160
 3377 0f0c 07       		.byte	0x7
 3378 0f0d 5D       		.byte	0x5d
 3379 0f0e 2B       		.uleb128 0x2b
 3380 0f0f 51030000 		.4byte	.LASF161
 3381 0f13 51030000 		.4byte	.LASF161
 3382 0f17 0C       		.byte	0xc
 3383 0f18 4503     		.2byte	0x345
 3384 0f1a 29       		.uleb128 0x29
 3385 0f1b 5C070000 		.4byte	.LASF162
 3386 0f1f 5C070000 		.4byte	.LASF162
 3387 0f23 0F       		.byte	0xf
 3388 0f24 36       		.byte	0x36
 3389 0f25 29       		.uleb128 0x29
 3390 0f26 32050000 		.4byte	.LASF163
 3391 0f2a 32050000 		.4byte	.LASF163
 3392 0f2e 10       		.byte	0x10
 3393 0f2f 36       		.byte	0x36
 3394 0f30 29       		.uleb128 0x29
 3395 0f31 11040000 		.4byte	.LASF164
 3396 0f35 11040000 		.4byte	.LASF164
 3397 0f39 11       		.byte	0x11
 3398 0f3a 06       		.byte	0x6
 3399 0f3b 2B       		.uleb128 0x2b
 3400 0f3c F7040000 		.4byte	.LASF165
 3401 0f40 F7040000 		.4byte	.LASF165
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 86


 3402 0f44 12       		.byte	0x12
 3403 0f45 4701     		.2byte	0x147
 3404 0f47 29       		.uleb128 0x29
 3405 0f48 5C090000 		.4byte	.LASF166
 3406 0f4c 5C090000 		.4byte	.LASF166
 3407 0f50 13       		.byte	0x13
 3408 0f51 33       		.byte	0x33
 3409 0f52 2B       		.uleb128 0x2b
 3410 0f53 19030000 		.4byte	.LASF167
 3411 0f57 19030000 		.4byte	.LASF167
 3412 0f5b 12       		.byte	0x12
 3413 0f5c 3201     		.2byte	0x132
 3414 0f5e 29       		.uleb128 0x29
 3415 0f5f 08030000 		.4byte	.LASF168
 3416 0f63 08030000 		.4byte	.LASF168
 3417 0f67 14       		.byte	0x14
 3418 0f68 18       		.byte	0x18
 3419 0f69 29       		.uleb128 0x29
 3420 0f6a 67060000 		.4byte	.LASF169
 3421 0f6e 67060000 		.4byte	.LASF169
 3422 0f72 14       		.byte	0x14
 3423 0f73 20       		.byte	0x20
 3424 0f74 29       		.uleb128 0x29
 3425 0f75 68090000 		.4byte	.LASF170
 3426 0f79 68090000 		.4byte	.LASF170
 3427 0f7d 09       		.byte	0x9
 3428 0f7e 18       		.byte	0x18
 3429 0f7f 29       		.uleb128 0x29
 3430 0f80 61080000 		.4byte	.LASF171
 3431 0f84 61080000 		.4byte	.LASF171
 3432 0f88 09       		.byte	0x9
 3433 0f89 20       		.byte	0x20
 3434 0f8a 29       		.uleb128 0x29
 3435 0f8b F0090000 		.4byte	.LASF172
 3436 0f8f F0090000 		.4byte	.LASF172
 3437 0f93 05       		.byte	0x5
 3438 0f94 18       		.byte	0x18
 3439 0f95 29       		.uleb128 0x29
 3440 0f96 D5030000 		.4byte	.LASF173
 3441 0f9a D5030000 		.4byte	.LASF173
 3442 0f9e 05       		.byte	0x5
 3443 0f9f 20       		.byte	0x20
 3444 0fa0 29       		.uleb128 0x29
 3445 0fa1 B5010000 		.4byte	.LASF174
 3446 0fa5 B5010000 		.4byte	.LASF174
 3447 0fa9 15       		.byte	0x15
 3448 0faa 18       		.byte	0x18
 3449 0fab 29       		.uleb128 0x29
 3450 0fac D2040000 		.4byte	.LASF175
 3451 0fb0 D2040000 		.4byte	.LASF175
 3452 0fb4 15       		.byte	0x15
 3453 0fb5 20       		.byte	0x20
 3454 0fb6 29       		.uleb128 0x29
 3455 0fb7 37010000 		.4byte	.LASF176
 3456 0fbb 37010000 		.4byte	.LASF176
 3457 0fbf 16       		.byte	0x16
 3458 0fc0 72       		.byte	0x72
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 87


 3459 0fc1 29       		.uleb128 0x29
 3460 0fc2 00000000 		.4byte	.LASF177
 3461 0fc6 00000000 		.4byte	.LASF177
 3462 0fca 17       		.byte	0x17
 3463 0fcb EC       		.byte	0xec
 3464 0fcc 29       		.uleb128 0x29
 3465 0fcd A9080000 		.4byte	.LASF178
 3466 0fd1 A9080000 		.4byte	.LASF178
 3467 0fd5 18       		.byte	0x18
 3468 0fd6 72       		.byte	0x72
 3469 0fd7 2B       		.uleb128 0x2b
 3470 0fd8 41070000 		.4byte	.LASF179
 3471 0fdc 41070000 		.4byte	.LASF179
 3472 0fe0 0E       		.byte	0xe
 3473 0fe1 3201     		.2byte	0x132
 3474 0fe3 2B       		.uleb128 0x2b
 3475 0fe4 43020000 		.4byte	.LASF180
 3476 0fe8 43020000 		.4byte	.LASF180
 3477 0fec 0E       		.byte	0xe
 3478 0fed 5001     		.2byte	0x150
 3479 0fef 29       		.uleb128 0x29
 3480 0ff0 A6000000 		.4byte	.LASF181
 3481 0ff4 A6000000 		.4byte	.LASF181
 3482 0ff8 07       		.byte	0x7
 3483 0ff9 4F       		.byte	0x4f
 3484 0ffa 29       		.uleb128 0x29
 3485 0ffb B3090000 		.4byte	.LASF182
 3486 0fff B3090000 		.4byte	.LASF182
 3487 1003 08       		.byte	0x8
 3488 1004 4F       		.byte	0x4f
 3489 1005 29       		.uleb128 0x29
 3490 1006 FB000000 		.4byte	.LASF183
 3491 100a FB000000 		.4byte	.LASF183
 3492 100e 19       		.byte	0x19
 3493 100f 33       		.byte	0x33
 3494 1010 00       		.byte	0
 3495              		.section	.debug_abbrev,"",%progbits
 3496              	.Ldebug_abbrev0:
 3497 0000 01       		.uleb128 0x1
 3498 0001 11       		.uleb128 0x11
 3499 0002 01       		.byte	0x1
 3500 0003 25       		.uleb128 0x25
 3501 0004 0E       		.uleb128 0xe
 3502 0005 13       		.uleb128 0x13
 3503 0006 0B       		.uleb128 0xb
 3504 0007 03       		.uleb128 0x3
 3505 0008 0E       		.uleb128 0xe
 3506 0009 1B       		.uleb128 0x1b
 3507 000a 0E       		.uleb128 0xe
 3508 000b 55       		.uleb128 0x55
 3509 000c 17       		.uleb128 0x17
 3510 000d 11       		.uleb128 0x11
 3511 000e 01       		.uleb128 0x1
 3512 000f 10       		.uleb128 0x10
 3513 0010 17       		.uleb128 0x17
 3514 0011 00       		.byte	0
 3515 0012 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 88


 3516 0013 02       		.uleb128 0x2
 3517 0014 16       		.uleb128 0x16
 3518 0015 00       		.byte	0
 3519 0016 03       		.uleb128 0x3
 3520 0017 0E       		.uleb128 0xe
 3521 0018 3A       		.uleb128 0x3a
 3522 0019 0B       		.uleb128 0xb
 3523 001a 3B       		.uleb128 0x3b
 3524 001b 0B       		.uleb128 0xb
 3525 001c 49       		.uleb128 0x49
 3526 001d 13       		.uleb128 0x13
 3527 001e 00       		.byte	0
 3528 001f 00       		.byte	0
 3529 0020 03       		.uleb128 0x3
 3530 0021 24       		.uleb128 0x24
 3531 0022 00       		.byte	0
 3532 0023 0B       		.uleb128 0xb
 3533 0024 0B       		.uleb128 0xb
 3534 0025 3E       		.uleb128 0x3e
 3535 0026 0B       		.uleb128 0xb
 3536 0027 03       		.uleb128 0x3
 3537 0028 0E       		.uleb128 0xe
 3538 0029 00       		.byte	0
 3539 002a 00       		.byte	0
 3540 002b 04       		.uleb128 0x4
 3541 002c 24       		.uleb128 0x24
 3542 002d 00       		.byte	0
 3543 002e 0B       		.uleb128 0xb
 3544 002f 0B       		.uleb128 0xb
 3545 0030 3E       		.uleb128 0x3e
 3546 0031 0B       		.uleb128 0xb
 3547 0032 03       		.uleb128 0x3
 3548 0033 08       		.uleb128 0x8
 3549 0034 00       		.byte	0
 3550 0035 00       		.byte	0
 3551 0036 05       		.uleb128 0x5
 3552 0037 16       		.uleb128 0x16
 3553 0038 00       		.byte	0
 3554 0039 03       		.uleb128 0x3
 3555 003a 0E       		.uleb128 0xe
 3556 003b 3A       		.uleb128 0x3a
 3557 003c 0B       		.uleb128 0xb
 3558 003d 3B       		.uleb128 0x3b
 3559 003e 05       		.uleb128 0x5
 3560 003f 49       		.uleb128 0x49
 3561 0040 13       		.uleb128 0x13
 3562 0041 00       		.byte	0
 3563 0042 00       		.byte	0
 3564 0043 06       		.uleb128 0x6
 3565 0044 35       		.uleb128 0x35
 3566 0045 00       		.byte	0
 3567 0046 49       		.uleb128 0x49
 3568 0047 13       		.uleb128 0x13
 3569 0048 00       		.byte	0
 3570 0049 00       		.byte	0
 3571 004a 07       		.uleb128 0x7
 3572 004b 04       		.uleb128 0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 89


 3573 004c 01       		.byte	0x1
 3574 004d 0B       		.uleb128 0xb
 3575 004e 0B       		.uleb128 0xb
 3576 004f 49       		.uleb128 0x49
 3577 0050 13       		.uleb128 0x13
 3578 0051 3A       		.uleb128 0x3a
 3579 0052 0B       		.uleb128 0xb
 3580 0053 3B       		.uleb128 0x3b
 3581 0054 0B       		.uleb128 0xb
 3582 0055 01       		.uleb128 0x1
 3583 0056 13       		.uleb128 0x13
 3584 0057 00       		.byte	0
 3585 0058 00       		.byte	0
 3586 0059 08       		.uleb128 0x8
 3587 005a 28       		.uleb128 0x28
 3588 005b 00       		.byte	0
 3589 005c 03       		.uleb128 0x3
 3590 005d 0E       		.uleb128 0xe
 3591 005e 1C       		.uleb128 0x1c
 3592 005f 0B       		.uleb128 0xb
 3593 0060 00       		.byte	0
 3594 0061 00       		.byte	0
 3595 0062 09       		.uleb128 0x9
 3596 0063 13       		.uleb128 0x13
 3597 0064 01       		.byte	0x1
 3598 0065 0B       		.uleb128 0xb
 3599 0066 0B       		.uleb128 0xb
 3600 0067 3A       		.uleb128 0x3a
 3601 0068 0B       		.uleb128 0xb
 3602 0069 3B       		.uleb128 0x3b
 3603 006a 0B       		.uleb128 0xb
 3604 006b 01       		.uleb128 0x1
 3605 006c 13       		.uleb128 0x13
 3606 006d 00       		.byte	0
 3607 006e 00       		.byte	0
 3608 006f 0A       		.uleb128 0xa
 3609 0070 0D       		.uleb128 0xd
 3610 0071 00       		.byte	0
 3611 0072 03       		.uleb128 0x3
 3612 0073 0E       		.uleb128 0xe
 3613 0074 3A       		.uleb128 0x3a
 3614 0075 0B       		.uleb128 0xb
 3615 0076 3B       		.uleb128 0x3b
 3616 0077 0B       		.uleb128 0xb
 3617 0078 49       		.uleb128 0x49
 3618 0079 13       		.uleb128 0x13
 3619 007a 38       		.uleb128 0x38
 3620 007b 0B       		.uleb128 0xb
 3621 007c 00       		.byte	0
 3622 007d 00       		.byte	0
 3623 007e 0B       		.uleb128 0xb
 3624 007f 0D       		.uleb128 0xd
 3625 0080 00       		.byte	0
 3626 0081 03       		.uleb128 0x3
 3627 0082 08       		.uleb128 0x8
 3628 0083 3A       		.uleb128 0x3a
 3629 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 90


 3630 0085 3B       		.uleb128 0x3b
 3631 0086 0B       		.uleb128 0xb
 3632 0087 49       		.uleb128 0x49
 3633 0088 13       		.uleb128 0x13
 3634 0089 38       		.uleb128 0x38
 3635 008a 0B       		.uleb128 0xb
 3636 008b 00       		.byte	0
 3637 008c 00       		.byte	0
 3638 008d 0C       		.uleb128 0xc
 3639 008e 0D       		.uleb128 0xd
 3640 008f 00       		.byte	0
 3641 0090 03       		.uleb128 0x3
 3642 0091 0E       		.uleb128 0xe
 3643 0092 3A       		.uleb128 0x3a
 3644 0093 0B       		.uleb128 0xb
 3645 0094 3B       		.uleb128 0x3b
 3646 0095 05       		.uleb128 0x5
 3647 0096 49       		.uleb128 0x49
 3648 0097 13       		.uleb128 0x13
 3649 0098 38       		.uleb128 0x38
 3650 0099 0B       		.uleb128 0xb
 3651 009a 00       		.byte	0
 3652 009b 00       		.byte	0
 3653 009c 0D       		.uleb128 0xd
 3654 009d 17       		.uleb128 0x17
 3655 009e 01       		.byte	0x1
 3656 009f 0B       		.uleb128 0xb
 3657 00a0 0B       		.uleb128 0xb
 3658 00a1 3A       		.uleb128 0x3a
 3659 00a2 0B       		.uleb128 0xb
 3660 00a3 3B       		.uleb128 0x3b
 3661 00a4 05       		.uleb128 0x5
 3662 00a5 01       		.uleb128 0x1
 3663 00a6 13       		.uleb128 0x13
 3664 00a7 00       		.byte	0
 3665 00a8 00       		.byte	0
 3666 00a9 0E       		.uleb128 0xe
 3667 00aa 0D       		.uleb128 0xd
 3668 00ab 00       		.byte	0
 3669 00ac 03       		.uleb128 0x3
 3670 00ad 08       		.uleb128 0x8
 3671 00ae 3A       		.uleb128 0x3a
 3672 00af 0B       		.uleb128 0xb
 3673 00b0 3B       		.uleb128 0x3b
 3674 00b1 05       		.uleb128 0x5
 3675 00b2 49       		.uleb128 0x49
 3676 00b3 13       		.uleb128 0x13
 3677 00b4 00       		.byte	0
 3678 00b5 00       		.byte	0
 3679 00b6 0F       		.uleb128 0xf
 3680 00b7 0D       		.uleb128 0xd
 3681 00b8 00       		.byte	0
 3682 00b9 03       		.uleb128 0x3
 3683 00ba 0E       		.uleb128 0xe
 3684 00bb 3A       		.uleb128 0x3a
 3685 00bc 0B       		.uleb128 0xb
 3686 00bd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 91


 3687 00be 05       		.uleb128 0x5
 3688 00bf 49       		.uleb128 0x49
 3689 00c0 13       		.uleb128 0x13
 3690 00c1 00       		.byte	0
 3691 00c2 00       		.byte	0
 3692 00c3 10       		.uleb128 0x10
 3693 00c4 01       		.uleb128 0x1
 3694 00c5 01       		.byte	0x1
 3695 00c6 49       		.uleb128 0x49
 3696 00c7 13       		.uleb128 0x13
 3697 00c8 01       		.uleb128 0x1
 3698 00c9 13       		.uleb128 0x13
 3699 00ca 00       		.byte	0
 3700 00cb 00       		.byte	0
 3701 00cc 11       		.uleb128 0x11
 3702 00cd 21       		.uleb128 0x21
 3703 00ce 00       		.byte	0
 3704 00cf 49       		.uleb128 0x49
 3705 00d0 13       		.uleb128 0x13
 3706 00d1 2F       		.uleb128 0x2f
 3707 00d2 0B       		.uleb128 0xb
 3708 00d3 00       		.byte	0
 3709 00d4 00       		.byte	0
 3710 00d5 12       		.uleb128 0x12
 3711 00d6 13       		.uleb128 0x13
 3712 00d7 01       		.byte	0x1
 3713 00d8 0B       		.uleb128 0xb
 3714 00d9 0B       		.uleb128 0xb
 3715 00da 3A       		.uleb128 0x3a
 3716 00db 0B       		.uleb128 0xb
 3717 00dc 3B       		.uleb128 0x3b
 3718 00dd 05       		.uleb128 0x5
 3719 00de 01       		.uleb128 0x1
 3720 00df 13       		.uleb128 0x13
 3721 00e0 00       		.byte	0
 3722 00e1 00       		.byte	0
 3723 00e2 13       		.uleb128 0x13
 3724 00e3 0D       		.uleb128 0xd
 3725 00e4 00       		.byte	0
 3726 00e5 03       		.uleb128 0x3
 3727 00e6 08       		.uleb128 0x8
 3728 00e7 3A       		.uleb128 0x3a
 3729 00e8 0B       		.uleb128 0xb
 3730 00e9 3B       		.uleb128 0x3b
 3731 00ea 05       		.uleb128 0x5
 3732 00eb 49       		.uleb128 0x49
 3733 00ec 13       		.uleb128 0x13
 3734 00ed 38       		.uleb128 0x38
 3735 00ee 0B       		.uleb128 0xb
 3736 00ef 00       		.byte	0
 3737 00f0 00       		.byte	0
 3738 00f1 14       		.uleb128 0x14
 3739 00f2 04       		.uleb128 0x4
 3740 00f3 01       		.byte	0x1
 3741 00f4 0B       		.uleb128 0xb
 3742 00f5 0B       		.uleb128 0xb
 3743 00f6 49       		.uleb128 0x49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 92


 3744 00f7 13       		.uleb128 0x13
 3745 00f8 3A       		.uleb128 0x3a
 3746 00f9 0B       		.uleb128 0xb
 3747 00fa 3B       		.uleb128 0x3b
 3748 00fb 05       		.uleb128 0x5
 3749 00fc 01       		.uleb128 0x1
 3750 00fd 13       		.uleb128 0x13
 3751 00fe 00       		.byte	0
 3752 00ff 00       		.byte	0
 3753 0100 15       		.uleb128 0x15
 3754 0101 2E       		.uleb128 0x2e
 3755 0102 01       		.byte	0x1
 3756 0103 3F       		.uleb128 0x3f
 3757 0104 19       		.uleb128 0x19
 3758 0105 03       		.uleb128 0x3
 3759 0106 0E       		.uleb128 0xe
 3760 0107 3A       		.uleb128 0x3a
 3761 0108 0B       		.uleb128 0xb
 3762 0109 3B       		.uleb128 0x3b
 3763 010a 05       		.uleb128 0x5
 3764 010b 27       		.uleb128 0x27
 3765 010c 19       		.uleb128 0x19
 3766 010d 11       		.uleb128 0x11
 3767 010e 01       		.uleb128 0x1
 3768 010f 12       		.uleb128 0x12
 3769 0110 06       		.uleb128 0x6
 3770 0111 40       		.uleb128 0x40
 3771 0112 18       		.uleb128 0x18
 3772 0113 9742     		.uleb128 0x2117
 3773 0115 19       		.uleb128 0x19
 3774 0116 01       		.uleb128 0x1
 3775 0117 13       		.uleb128 0x13
 3776 0118 00       		.byte	0
 3777 0119 00       		.byte	0
 3778 011a 16       		.uleb128 0x16
 3779 011b 898201   		.uleb128 0x4109
 3780 011e 00       		.byte	0
 3781 011f 11       		.uleb128 0x11
 3782 0120 01       		.uleb128 0x1
 3783 0121 31       		.uleb128 0x31
 3784 0122 13       		.uleb128 0x13
 3785 0123 00       		.byte	0
 3786 0124 00       		.byte	0
 3787 0125 17       		.uleb128 0x17
 3788 0126 898201   		.uleb128 0x4109
 3789 0129 01       		.byte	0x1
 3790 012a 11       		.uleb128 0x11
 3791 012b 01       		.uleb128 0x1
 3792 012c 31       		.uleb128 0x31
 3793 012d 13       		.uleb128 0x13
 3794 012e 01       		.uleb128 0x1
 3795 012f 13       		.uleb128 0x13
 3796 0130 00       		.byte	0
 3797 0131 00       		.byte	0
 3798 0132 18       		.uleb128 0x18
 3799 0133 8A8201   		.uleb128 0x410a
 3800 0136 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 93


 3801 0137 02       		.uleb128 0x2
 3802 0138 18       		.uleb128 0x18
 3803 0139 9142     		.uleb128 0x2111
 3804 013b 18       		.uleb128 0x18
 3805 013c 00       		.byte	0
 3806 013d 00       		.byte	0
 3807 013e 19       		.uleb128 0x19
 3808 013f 898201   		.uleb128 0x4109
 3809 0142 01       		.byte	0x1
 3810 0143 11       		.uleb128 0x11
 3811 0144 01       		.uleb128 0x1
 3812 0145 31       		.uleb128 0x31
 3813 0146 13       		.uleb128 0x13
 3814 0147 00       		.byte	0
 3815 0148 00       		.byte	0
 3816 0149 1A       		.uleb128 0x1a
 3817 014a 34       		.uleb128 0x34
 3818 014b 00       		.byte	0
 3819 014c 03       		.uleb128 0x3
 3820 014d 08       		.uleb128 0x8
 3821 014e 3A       		.uleb128 0x3a
 3822 014f 0B       		.uleb128 0xb
 3823 0150 3B       		.uleb128 0x3b
 3824 0151 05       		.uleb128 0x5
 3825 0152 49       		.uleb128 0x49
 3826 0153 13       		.uleb128 0x13
 3827 0154 02       		.uleb128 0x2
 3828 0155 17       		.uleb128 0x17
 3829 0156 00       		.byte	0
 3830 0157 00       		.byte	0
 3831 0158 1B       		.uleb128 0x1b
 3832 0159 05       		.uleb128 0x5
 3833 015a 00       		.byte	0
 3834 015b 03       		.uleb128 0x3
 3835 015c 0E       		.uleb128 0xe
 3836 015d 3A       		.uleb128 0x3a
 3837 015e 0B       		.uleb128 0xb
 3838 015f 3B       		.uleb128 0x3b
 3839 0160 05       		.uleb128 0x5
 3840 0161 49       		.uleb128 0x49
 3841 0162 13       		.uleb128 0x13
 3842 0163 02       		.uleb128 0x2
 3843 0164 17       		.uleb128 0x17
 3844 0165 00       		.byte	0
 3845 0166 00       		.byte	0
 3846 0167 1C       		.uleb128 0x1c
 3847 0168 05       		.uleb128 0x5
 3848 0169 00       		.byte	0
 3849 016a 03       		.uleb128 0x3
 3850 016b 0E       		.uleb128 0xe
 3851 016c 3A       		.uleb128 0x3a
 3852 016d 0B       		.uleb128 0xb
 3853 016e 3B       		.uleb128 0x3b
 3854 016f 05       		.uleb128 0x5
 3855 0170 49       		.uleb128 0x49
 3856 0171 13       		.uleb128 0x13
 3857 0172 02       		.uleb128 0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 94


 3858 0173 18       		.uleb128 0x18
 3859 0174 00       		.byte	0
 3860 0175 00       		.byte	0
 3861 0176 1D       		.uleb128 0x1d
 3862 0177 2E       		.uleb128 0x2e
 3863 0178 01       		.byte	0x1
 3864 0179 3F       		.uleb128 0x3f
 3865 017a 19       		.uleb128 0x19
 3866 017b 03       		.uleb128 0x3
 3867 017c 0E       		.uleb128 0xe
 3868 017d 3A       		.uleb128 0x3a
 3869 017e 0B       		.uleb128 0xb
 3870 017f 3B       		.uleb128 0x3b
 3871 0180 05       		.uleb128 0x5
 3872 0181 27       		.uleb128 0x27
 3873 0182 19       		.uleb128 0x19
 3874 0183 11       		.uleb128 0x11
 3875 0184 01       		.uleb128 0x1
 3876 0185 12       		.uleb128 0x12
 3877 0186 06       		.uleb128 0x6
 3878 0187 40       		.uleb128 0x40
 3879 0188 18       		.uleb128 0x18
 3880 0189 9642     		.uleb128 0x2116
 3881 018b 19       		.uleb128 0x19
 3882 018c 01       		.uleb128 0x1
 3883 018d 13       		.uleb128 0x13
 3884 018e 00       		.byte	0
 3885 018f 00       		.byte	0
 3886 0190 1E       		.uleb128 0x1e
 3887 0191 2E       		.uleb128 0x2e
 3888 0192 01       		.byte	0x1
 3889 0193 3F       		.uleb128 0x3f
 3890 0194 19       		.uleb128 0x19
 3891 0195 03       		.uleb128 0x3
 3892 0196 0E       		.uleb128 0xe
 3893 0197 3A       		.uleb128 0x3a
 3894 0198 0B       		.uleb128 0xb
 3895 0199 3B       		.uleb128 0x3b
 3896 019a 05       		.uleb128 0x5
 3897 019b 27       		.uleb128 0x27
 3898 019c 19       		.uleb128 0x19
 3899 019d 49       		.uleb128 0x49
 3900 019e 13       		.uleb128 0x13
 3901 019f 11       		.uleb128 0x11
 3902 01a0 01       		.uleb128 0x1
 3903 01a1 12       		.uleb128 0x12
 3904 01a2 06       		.uleb128 0x6
 3905 01a3 40       		.uleb128 0x40
 3906 01a4 18       		.uleb128 0x18
 3907 01a5 9742     		.uleb128 0x2117
 3908 01a7 19       		.uleb128 0x19
 3909 01a8 01       		.uleb128 0x1
 3910 01a9 13       		.uleb128 0x13
 3911 01aa 00       		.byte	0
 3912 01ab 00       		.byte	0
 3913 01ac 1F       		.uleb128 0x1f
 3914 01ad 34       		.uleb128 0x34
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 95


 3915 01ae 00       		.byte	0
 3916 01af 03       		.uleb128 0x3
 3917 01b0 0E       		.uleb128 0xe
 3918 01b1 3A       		.uleb128 0x3a
 3919 01b2 0B       		.uleb128 0xb
 3920 01b3 3B       		.uleb128 0x3b
 3921 01b4 05       		.uleb128 0x5
 3922 01b5 49       		.uleb128 0x49
 3923 01b6 13       		.uleb128 0x13
 3924 01b7 02       		.uleb128 0x2
 3925 01b8 18       		.uleb128 0x18
 3926 01b9 00       		.byte	0
 3927 01ba 00       		.byte	0
 3928 01bb 20       		.uleb128 0x20
 3929 01bc 34       		.uleb128 0x34
 3930 01bd 00       		.byte	0
 3931 01be 03       		.uleb128 0x3
 3932 01bf 0E       		.uleb128 0xe
 3933 01c0 3A       		.uleb128 0x3a
 3934 01c1 0B       		.uleb128 0xb
 3935 01c2 3B       		.uleb128 0x3b
 3936 01c3 05       		.uleb128 0x5
 3937 01c4 49       		.uleb128 0x49
 3938 01c5 13       		.uleb128 0x13
 3939 01c6 02       		.uleb128 0x2
 3940 01c7 17       		.uleb128 0x17
 3941 01c8 00       		.byte	0
 3942 01c9 00       		.byte	0
 3943 01ca 21       		.uleb128 0x21
 3944 01cb 34       		.uleb128 0x34
 3945 01cc 00       		.byte	0
 3946 01cd 03       		.uleb128 0x3
 3947 01ce 0E       		.uleb128 0xe
 3948 01cf 3A       		.uleb128 0x3a
 3949 01d0 0B       		.uleb128 0xb
 3950 01d1 3B       		.uleb128 0x3b
 3951 01d2 05       		.uleb128 0x5
 3952 01d3 49       		.uleb128 0x49
 3953 01d4 13       		.uleb128 0x13
 3954 01d5 00       		.byte	0
 3955 01d6 00       		.byte	0
 3956 01d7 22       		.uleb128 0x22
 3957 01d8 34       		.uleb128 0x34
 3958 01d9 00       		.byte	0
 3959 01da 03       		.uleb128 0x3
 3960 01db 0E       		.uleb128 0xe
 3961 01dc 3A       		.uleb128 0x3a
 3962 01dd 0B       		.uleb128 0xb
 3963 01de 3B       		.uleb128 0x3b
 3964 01df 05       		.uleb128 0x5
 3965 01e0 49       		.uleb128 0x49
 3966 01e1 13       		.uleb128 0x13
 3967 01e2 1C       		.uleb128 0x1c
 3968 01e3 0B       		.uleb128 0xb
 3969 01e4 00       		.byte	0
 3970 01e5 00       		.byte	0
 3971 01e6 23       		.uleb128 0x23
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 96


 3972 01e7 26       		.uleb128 0x26
 3973 01e8 00       		.byte	0
 3974 01e9 49       		.uleb128 0x49
 3975 01ea 13       		.uleb128 0x13
 3976 01eb 00       		.byte	0
 3977 01ec 00       		.byte	0
 3978 01ed 24       		.uleb128 0x24
 3979 01ee 2E       		.uleb128 0x2e
 3980 01ef 01       		.byte	0x1
 3981 01f0 3F       		.uleb128 0x3f
 3982 01f1 19       		.uleb128 0x19
 3983 01f2 03       		.uleb128 0x3
 3984 01f3 0E       		.uleb128 0xe
 3985 01f4 3A       		.uleb128 0x3a
 3986 01f5 0B       		.uleb128 0xb
 3987 01f6 3B       		.uleb128 0x3b
 3988 01f7 05       		.uleb128 0x5
 3989 01f8 27       		.uleb128 0x27
 3990 01f9 19       		.uleb128 0x19
 3991 01fa 49       		.uleb128 0x49
 3992 01fb 13       		.uleb128 0x13
 3993 01fc 8701     		.uleb128 0x87
 3994 01fe 19       		.uleb128 0x19
 3995 01ff 11       		.uleb128 0x11
 3996 0200 01       		.uleb128 0x1
 3997 0201 12       		.uleb128 0x12
 3998 0202 06       		.uleb128 0x6
 3999 0203 40       		.uleb128 0x40
 4000 0204 18       		.uleb128 0x18
 4001 0205 9742     		.uleb128 0x2117
 4002 0207 19       		.uleb128 0x19
 4003 0208 01       		.uleb128 0x1
 4004 0209 13       		.uleb128 0x13
 4005 020a 00       		.byte	0
 4006 020b 00       		.byte	0
 4007 020c 25       		.uleb128 0x25
 4008 020d 34       		.uleb128 0x34
 4009 020e 00       		.byte	0
 4010 020f 03       		.uleb128 0x3
 4011 0210 0E       		.uleb128 0xe
 4012 0211 3A       		.uleb128 0x3a
 4013 0212 0B       		.uleb128 0xb
 4014 0213 3B       		.uleb128 0x3b
 4015 0214 05       		.uleb128 0x5
 4016 0215 49       		.uleb128 0x49
 4017 0216 13       		.uleb128 0x13
 4018 0217 1C       		.uleb128 0x1c
 4019 0218 0D       		.uleb128 0xd
 4020 0219 00       		.byte	0
 4021 021a 00       		.byte	0
 4022 021b 26       		.uleb128 0x26
 4023 021c 34       		.uleb128 0x34
 4024 021d 00       		.byte	0
 4025 021e 03       		.uleb128 0x3
 4026 021f 0E       		.uleb128 0xe
 4027 0220 3A       		.uleb128 0x3a
 4028 0221 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 97


 4029 0222 3B       		.uleb128 0x3b
 4030 0223 0B       		.uleb128 0xb
 4031 0224 49       		.uleb128 0x49
 4032 0225 13       		.uleb128 0x13
 4033 0226 3F       		.uleb128 0x3f
 4034 0227 19       		.uleb128 0x19
 4035 0228 02       		.uleb128 0x2
 4036 0229 18       		.uleb128 0x18
 4037 022a 00       		.byte	0
 4038 022b 00       		.byte	0
 4039 022c 27       		.uleb128 0x27
 4040 022d 34       		.uleb128 0x34
 4041 022e 00       		.byte	0
 4042 022f 03       		.uleb128 0x3
 4043 0230 08       		.uleb128 0x8
 4044 0231 3A       		.uleb128 0x3a
 4045 0232 0B       		.uleb128 0xb
 4046 0233 3B       		.uleb128 0x3b
 4047 0234 0B       		.uleb128 0xb
 4048 0235 49       		.uleb128 0x49
 4049 0236 13       		.uleb128 0x13
 4050 0237 3F       		.uleb128 0x3f
 4051 0238 19       		.uleb128 0x19
 4052 0239 02       		.uleb128 0x2
 4053 023a 18       		.uleb128 0x18
 4054 023b 00       		.byte	0
 4055 023c 00       		.byte	0
 4056 023d 28       		.uleb128 0x28
 4057 023e 34       		.uleb128 0x34
 4058 023f 00       		.byte	0
 4059 0240 03       		.uleb128 0x3
 4060 0241 0E       		.uleb128 0xe
 4061 0242 3A       		.uleb128 0x3a
 4062 0243 0B       		.uleb128 0xb
 4063 0244 3B       		.uleb128 0x3b
 4064 0245 05       		.uleb128 0x5
 4065 0246 49       		.uleb128 0x49
 4066 0247 13       		.uleb128 0x13
 4067 0248 3F       		.uleb128 0x3f
 4068 0249 19       		.uleb128 0x19
 4069 024a 02       		.uleb128 0x2
 4070 024b 18       		.uleb128 0x18
 4071 024c 00       		.byte	0
 4072 024d 00       		.byte	0
 4073 024e 29       		.uleb128 0x29
 4074 024f 2E       		.uleb128 0x2e
 4075 0250 00       		.byte	0
 4076 0251 3F       		.uleb128 0x3f
 4077 0252 19       		.uleb128 0x19
 4078 0253 3C       		.uleb128 0x3c
 4079 0254 19       		.uleb128 0x19
 4080 0255 6E       		.uleb128 0x6e
 4081 0256 0E       		.uleb128 0xe
 4082 0257 03       		.uleb128 0x3
 4083 0258 0E       		.uleb128 0xe
 4084 0259 3A       		.uleb128 0x3a
 4085 025a 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 98


 4086 025b 3B       		.uleb128 0x3b
 4087 025c 0B       		.uleb128 0xb
 4088 025d 00       		.byte	0
 4089 025e 00       		.byte	0
 4090 025f 2A       		.uleb128 0x2a
 4091 0260 2E       		.uleb128 0x2e
 4092 0261 00       		.byte	0
 4093 0262 3F       		.uleb128 0x3f
 4094 0263 19       		.uleb128 0x19
 4095 0264 3C       		.uleb128 0x3c
 4096 0265 19       		.uleb128 0x19
 4097 0266 6E       		.uleb128 0x6e
 4098 0267 0E       		.uleb128 0xe
 4099 0268 03       		.uleb128 0x3
 4100 0269 0E       		.uleb128 0xe
 4101 026a 00       		.byte	0
 4102 026b 00       		.byte	0
 4103 026c 2B       		.uleb128 0x2b
 4104 026d 2E       		.uleb128 0x2e
 4105 026e 00       		.byte	0
 4106 026f 3F       		.uleb128 0x3f
 4107 0270 19       		.uleb128 0x19
 4108 0271 3C       		.uleb128 0x3c
 4109 0272 19       		.uleb128 0x19
 4110 0273 6E       		.uleb128 0x6e
 4111 0274 0E       		.uleb128 0xe
 4112 0275 03       		.uleb128 0x3
 4113 0276 0E       		.uleb128 0xe
 4114 0277 3A       		.uleb128 0x3a
 4115 0278 0B       		.uleb128 0xb
 4116 0279 3B       		.uleb128 0x3b
 4117 027a 05       		.uleb128 0x5
 4118 027b 00       		.byte	0
 4119 027c 00       		.byte	0
 4120 027d 00       		.byte	0
 4121              		.section	.debug_loc,"",%progbits
 4122              	.Ldebug_loc0:
 4123              	.LLST0:
 4124 0000 2A000000 		.4byte	.LVL9
 4125 0004 2E000000 		.4byte	.LVL10
 4126 0008 0200     		.2byte	0x2
 4127 000a 30       		.byte	0x30
 4128 000b 9F       		.byte	0x9f
 4129 000c 2E000000 		.4byte	.LVL10
 4130 0010 4A000000 		.4byte	.LVL15
 4131 0014 0100     		.2byte	0x1
 4132 0016 54       		.byte	0x54
 4133 0017 00000000 		.4byte	0
 4134 001b 00000000 		.4byte	0
 4135              	.LLST1:
 4136 001f 00000000 		.4byte	.LVL16
 4137 0023 12000000 		.4byte	.LVL17
 4138 0027 0100     		.2byte	0x1
 4139 0029 50       		.byte	0x50
 4140 002a 12000000 		.4byte	.LVL17
 4141 002e 1C000000 		.4byte	.LFE32
 4142 0032 0400     		.2byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 99


 4143 0034 F3       		.byte	0xf3
 4144 0035 01       		.uleb128 0x1
 4145 0036 50       		.byte	0x50
 4146 0037 9F       		.byte	0x9f
 4147 0038 00000000 		.4byte	0
 4148 003c 00000000 		.4byte	0
 4149              	.LLST2:
 4150 0040 08000000 		.4byte	.LVL19
 4151 0044 0B000000 		.4byte	.LVL20-1
 4152 0048 0100     		.2byte	0x1
 4153 004a 50       		.byte	0x50
 4154 004b 00000000 		.4byte	0
 4155 004f 00000000 		.4byte	0
 4156              	.LLST3:
 4157 0053 00000000 		.4byte	.LVL21
 4158 0057 08000000 		.4byte	.LVL22
 4159 005b 0100     		.2byte	0x1
 4160 005d 50       		.byte	0x50
 4161 005e 08000000 		.4byte	.LVL22
 4162 0062 0E000000 		.4byte	.LFE36
 4163 0066 0400     		.2byte	0x4
 4164 0068 F3       		.byte	0xf3
 4165 0069 01       		.uleb128 0x1
 4166 006a 50       		.byte	0x50
 4167 006b 9F       		.byte	0x9f
 4168 006c 00000000 		.4byte	0
 4169 0070 00000000 		.4byte	0
 4170              	.LLST4:
 4171 0074 1C000000 		.4byte	.LVL26
 4172 0078 E8000000 		.4byte	.LVL44
 4173 007c 0100     		.2byte	0x1
 4174 007e 54       		.byte	0x54
 4175 007f 1E010000 		.4byte	.LVL46
 4176 0083 20010000 		.4byte	.LVL47
 4177 0087 0100     		.2byte	0x1
 4178 0089 54       		.byte	0x54
 4179 008a 20010000 		.4byte	.LVL47
 4180 008e 3B010000 		.4byte	.LVL50-1
 4181 0092 0200     		.2byte	0x2
 4182 0094 74       		.byte	0x74
 4183 0095 02       		.sleb128 2
 4184 0096 00000000 		.4byte	0
 4185 009a 00000000 		.4byte	0
 4186              	.LLST5:
 4187 009e 1A000000 		.4byte	.LVL25
 4188 00a2 67000000 		.4byte	.LVL37-1
 4189 00a6 0100     		.2byte	0x1
 4190 00a8 50       		.byte	0x50
 4191 00a9 B8000000 		.4byte	.LVL40
 4192 00ad BA000000 		.4byte	.LVL41
 4193 00b1 0100     		.2byte	0x1
 4194 00b3 50       		.byte	0x50
 4195 00b4 1E010000 		.4byte	.LVL46
 4196 00b8 2C010000 		.4byte	.LVL49
 4197 00bc 0100     		.2byte	0x1
 4198 00be 50       		.byte	0x50
 4199 00bf 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 100


 4200 00c3 00000000 		.4byte	0
 4201              	.LLST6:
 4202 00c7 22000000 		.4byte	.LVL27
 4203 00cb 28000000 		.4byte	.LVL28
 4204 00cf 0200     		.2byte	0x2
 4205 00d1 30       		.byte	0x30
 4206 00d2 9F       		.byte	0x9f
 4207 00d3 28000000 		.4byte	.LVL28
 4208 00d7 32000000 		.4byte	.LVL31
 4209 00db 0100     		.2byte	0x1
 4210 00dd 53       		.byte	0x53
 4211 00de 34000000 		.4byte	.LVL32
 4212 00e2 3E000000 		.4byte	.LVL33
 4213 00e6 0100     		.2byte	0x1
 4214 00e8 53       		.byte	0x53
 4215 00e9 50000000 		.4byte	.LVL35
 4216 00ed 52000000 		.4byte	.LVL36
 4217 00f1 0100     		.2byte	0x1
 4218 00f3 53       		.byte	0x53
 4219 00f4 BC010000 		.4byte	.LVL52
 4220 00f8 C2010000 		.4byte	.LVL53
 4221 00fc 0200     		.2byte	0x2
 4222 00fe 30       		.byte	0x30
 4223 00ff 9F       		.byte	0x9f
 4224 0100 C2010000 		.4byte	.LVL53
 4225 0104 CC010000 		.4byte	.LVL56
 4226 0108 0100     		.2byte	0x1
 4227 010a 53       		.byte	0x53
 4228 010b CE010000 		.4byte	.LVL57
 4229 010f DD010000 		.4byte	.LVL59-1
 4230 0113 0100     		.2byte	0x1
 4231 0115 53       		.byte	0x53
 4232 0116 00000000 		.4byte	0
 4233 011a 00000000 		.4byte	0
 4234              	.LLST7:
 4235 011e 22000000 		.4byte	.LVL27
 4236 0122 28000000 		.4byte	.LVL28
 4237 0126 0200     		.2byte	0x2
 4238 0128 30       		.byte	0x30
 4239 0129 9F       		.byte	0x9f
 4240 012a 28000000 		.4byte	.LVL28
 4241 012e 2E000000 		.4byte	.LVL29
 4242 0132 0100     		.2byte	0x1
 4243 0134 52       		.byte	0x52
 4244 0135 30000000 		.4byte	.LVL30
 4245 0139 42000000 		.4byte	.LVL34
 4246 013d 0100     		.2byte	0x1
 4247 013f 52       		.byte	0x52
 4248 0140 50000000 		.4byte	.LVL35
 4249 0144 67000000 		.4byte	.LVL37-1
 4250 0148 0100     		.2byte	0x1
 4251 014a 52       		.byte	0x52
 4252 014b B8000000 		.4byte	.LVL40
 4253 014f C0000000 		.4byte	.LVL42
 4254 0153 0100     		.2byte	0x1
 4255 0155 52       		.byte	0x52
 4256 0156 1E010000 		.4byte	.LVL46
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 101


 4257 015a 2A010000 		.4byte	.LVL48
 4258 015e 0100     		.2byte	0x1
 4259 0160 52       		.byte	0x52
 4260 0161 BC010000 		.4byte	.LVL52
 4261 0165 C2010000 		.4byte	.LVL53
 4262 0169 0200     		.2byte	0x2
 4263 016b 30       		.byte	0x30
 4264 016c 9F       		.byte	0x9f
 4265 016d C2010000 		.4byte	.LVL53
 4266 0171 C8010000 		.4byte	.LVL54
 4267 0175 0100     		.2byte	0x1
 4268 0177 52       		.byte	0x52
 4269 0178 CA010000 		.4byte	.LVL55
 4270 017c D6010000 		.4byte	.LVL58
 4271 0180 0100     		.2byte	0x1
 4272 0182 52       		.byte	0x52
 4273 0183 00000000 		.4byte	0
 4274 0187 00000000 		.4byte	0
 4275              	.LLST8:
 4276 018b 00000000 		.4byte	.LVL62
 4277 018f 19000000 		.4byte	.LVL64-1
 4278 0193 0100     		.2byte	0x1
 4279 0195 50       		.byte	0x50
 4280 0196 19000000 		.4byte	.LVL64-1
 4281 019a 24000000 		.4byte	.LFE39
 4282 019e 0400     		.2byte	0x4
 4283 01a0 F3       		.byte	0xf3
 4284 01a1 01       		.uleb128 0x1
 4285 01a2 50       		.byte	0x50
 4286 01a3 9F       		.byte	0x9f
 4287 01a4 00000000 		.4byte	0
 4288 01a8 00000000 		.4byte	0
 4289              	.LLST9:
 4290 01ac 0A000000 		.4byte	.LVL63
 4291 01b0 1E000000 		.4byte	.LVL65
 4292 01b4 0100     		.2byte	0x1
 4293 01b6 54       		.byte	0x54
 4294 01b7 1E000000 		.4byte	.LVL65
 4295 01bb 24000000 		.4byte	.LFE39
 4296 01bf 0500     		.2byte	0x5
 4297 01c1 03       		.byte	0x3
 4298 01c2 00000000 		.4byte	inAuto
 4299 01c6 00000000 		.4byte	0
 4300 01ca 00000000 		.4byte	0
 4301              		.section	.debug_aranges,"",%progbits
 4302 0000 84000000 		.4byte	0x84
 4303 0004 0200     		.2byte	0x2
 4304 0006 00000000 		.4byte	.Ldebug_info0
 4305 000a 04       		.byte	0x4
 4306 000b 00       		.byte	0
 4307 000c 0000     		.2byte	0
 4308 000e 0000     		.2byte	0
 4309 0010 00000000 		.4byte	.LFB43
 4310 0014 24000000 		.4byte	.LFE43-.LFB43
 4311 0018 00000000 		.4byte	.LFB44
 4312 001c 1C000000 		.4byte	.LFE44-.LFB44
 4313 0020 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 102


 4314 0024 60000000 		.4byte	.LFE45-.LFB45
 4315 0028 00000000 		.4byte	.LFB32
 4316 002c 1C000000 		.4byte	.LFE32-.LFB32
 4317 0030 00000000 		.4byte	.LFB33
 4318 0034 1C000000 		.4byte	.LFE33-.LFB33
 4319 0038 00000000 		.4byte	.LFB34
 4320 003c 18000000 		.4byte	.LFE34-.LFB34
 4321 0040 00000000 		.4byte	.LFB36
 4322 0044 0E000000 		.4byte	.LFE36-.LFB36
 4323 0048 00000000 		.4byte	.LFB37
 4324 004c 44000000 		.4byte	.LFE37-.LFB37
 4325 0050 00000000 		.4byte	.LFB35
 4326 0054 48020000 		.4byte	.LFE35-.LFB35
 4327 0058 00000000 		.4byte	.LFB38
 4328 005c 30000000 		.4byte	.LFE38-.LFB38
 4329 0060 00000000 		.4byte	.LFB39
 4330 0064 24000000 		.4byte	.LFE39-.LFB39
 4331 0068 00000000 		.4byte	.LFB40
 4332 006c 10010000 		.4byte	.LFE40-.LFB40
 4333 0070 00000000 		.4byte	.LFB42
 4334 0074 BC000000 		.4byte	.LFE42-.LFB42
 4335 0078 00000000 		.4byte	.LFB41
 4336 007c 50010000 		.4byte	.LFE41-.LFB41
 4337 0080 00000000 		.4byte	0
 4338 0084 00000000 		.4byte	0
 4339              		.section	.debug_ranges,"",%progbits
 4340              	.Ldebug_ranges0:
 4341 0000 00000000 		.4byte	.LFB43
 4342 0004 24000000 		.4byte	.LFE43
 4343 0008 00000000 		.4byte	.LFB44
 4344 000c 1C000000 		.4byte	.LFE44
 4345 0010 00000000 		.4byte	.LFB45
 4346 0014 60000000 		.4byte	.LFE45
 4347 0018 00000000 		.4byte	.LFB32
 4348 001c 1C000000 		.4byte	.LFE32
 4349 0020 00000000 		.4byte	.LFB33
 4350 0024 1C000000 		.4byte	.LFE33
 4351 0028 00000000 		.4byte	.LFB34
 4352 002c 18000000 		.4byte	.LFE34
 4353 0030 00000000 		.4byte	.LFB36
 4354 0034 0E000000 		.4byte	.LFE36
 4355 0038 00000000 		.4byte	.LFB37
 4356 003c 44000000 		.4byte	.LFE37
 4357 0040 00000000 		.4byte	.LFB35
 4358 0044 48020000 		.4byte	.LFE35
 4359 0048 00000000 		.4byte	.LFB38
 4360 004c 30000000 		.4byte	.LFE38
 4361 0050 00000000 		.4byte	.LFB39
 4362 0054 24000000 		.4byte	.LFE39
 4363 0058 00000000 		.4byte	.LFB40
 4364 005c 10010000 		.4byte	.LFE40
 4365 0060 00000000 		.4byte	.LFB42
 4366 0064 BC000000 		.4byte	.LFE42
 4367 0068 00000000 		.4byte	.LFB41
 4368 006c 50010000 		.4byte	.LFE41
 4369 0070 00000000 		.4byte	0
 4370 0074 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 103


 4371              		.section	.debug_line,"",%progbits
 4372              	.Ldebug_line0:
 4373 0000 75040000 		.section	.debug_str,"MS",%progbits,1
 4373      02006302 
 4373      00000201 
 4373      FB0E0D00 
 4373      01010101 
 4374              	.LASF177:
 4375 0000 43794465 		.ascii	"CyDelay\000"
 4375      6C617900 
 4376              	.LASF144:
 4377 0008 72784D65 		.ascii	"rxMessage\000"
 4377      73736167 
 4377      6500
 4378              	.LASF185:
 4379 0012 6D61696E 		.ascii	"main.c\000"
 4379      2E6300
 4380              	.LASF75:
 4381 0019 6D6F746F 		.ascii	"motor_current\000"
 4381      725F6375 
 4381      7272656E 
 4381      7400
 4382              	.LASF111:
 4383 0027 64726976 		.ascii	"drive\000"
 4383      6500
 4384              	.LASF108:
 4385 002d 62726D73 		.ascii	"brmsRG4Mask\000"
 4385      5247344D 
 4385      61736B00 
 4386              	.LASF78:
 4387 0039 74786D73 		.ascii	"txmsClear\000"
 4387      436C6561 
 4387      7200
 4388              	.LASF88:
 4389 0043 6F757470 		.ascii	"output\000"
 4389      757400
 4390              	.LASF86:
 4391 004a 4D6F746F 		.ascii	"MotorCurrentRead\000"
 4391      72437572 
 4391      72656E74 
 4391      52656164 
 4391      00
 4392              	.LASF104:
 4393 005b 62726D73 		.ascii	"brmsTask\000"
 4393      5461736B 
 4393      00
 4394              	.LASF58:
 4395 0064 65666673 		.ascii	"effsetdelta\000"
 4395      65746465 
 4395      6C746100 
 4396              	.LASF37:
 4397 0070 6673456E 		.ascii	"fsEncoder\000"
 4397      636F6465 
 4397      7200
 4398              	.LASF31:
 4399 007a 6373556E 		.ascii	"csUnconfig\000"
 4399      636F6E66 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 104


 4399      696700
 4400              	.LASF95:
 4401 0085 6E657741 		.ascii	"newAuto\000"
 4401      75746F00 
 4402              	.LASF15:
 4403 008d 756E7369 		.ascii	"unsigned int\000"
 4403      676E6564 
 4403      20696E74 
 4403      00
 4404              	.LASF105:
 4405 009a 62726D73 		.ascii	"brmsRG1Mask\000"
 4405      5247314D 
 4405      61736B00 
 4406              	.LASF181:
 4407 00a6 436F756E 		.ascii	"Counter_1_Start\000"
 4407      7465725F 
 4407      315F5374 
 4407      61727400 
 4408              	.LASF97:
 4409 00b6 72756E52 		.ascii	"runRateGroup1_PID\000"
 4409      61746547 
 4409      726F7570 
 4409      315F5049 
 4409      4400
 4410              	.LASF62:
 4411 00c8 636C6561 		.ascii	"clearfaults\000"
 4411      72666175 
 4411      6C747300 
 4412              	.LASF8:
 4413 00d4 5F5F696E 		.ascii	"__int32_t\000"
 4413      7433325F 
 4413      7400
 4414              	.LASF152:
 4415 00de 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4415      5F494E5F 
 4415      436C6561 
 4415      72496E74 
 4415      65727275 
 4416              	.LASF98:
 4417 00f5 6C696D69 		.ascii	"limit\000"
 4417      7400
 4418              	.LASF183:
 4419 00fb 4C45445F 		.ascii	"LED_Write\000"
 4419      57726974 
 4419      6500
 4420              	.LASF82:
 4421 0105 486F6D65 		.ascii	"HomeIsrHandler\000"
 4421      49737248 
 4421      616E646C 
 4421      657200
 4422              	.LASF80:
 4423 0114 74784D65 		.ascii	"txMessageStates_t\000"
 4423      73736167 
 4423      65537461 
 4423      7465735F 
 4423      7400
 4424              	.LASF101:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 105


 4425 0126 6572726F 		.ascii	"error\000"
 4425      7200
 4426              	.LASF85:
 4427 012c 436C6561 		.ascii	"ClearFault\000"
 4427      72466175 
 4427      6C7400
 4428              	.LASF176:
 4429 0137 4932435F 		.ascii	"I2C_Start\000"
 4429      53746172 
 4429      7400
 4430              	.LASF114:
 4431 0141 4C617374 		.ascii	"LastJog\000"
 4431      4A6F6700 
 4432              	.LASF32:
 4433 0149 63735265 		.ascii	"csReady\000"
 4433      61647900 
 4434              	.LASF157:
 4435 0151 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4435      315F5370 
 4435      69556172 
 4435      74436C65 
 4435      61725478 
 4436              	.LASF21:
 4437 016c 75696E74 		.ascii	"uint32_t\000"
 4437      33325F74 
 4437      00
 4438              	.LASF16:
 4439 0175 696E7438 		.ascii	"int8_t\000"
 4439      5F7400
 4440              	.LASF50:
 4441 017c 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4441      73736167 
 4441      655F6F70 
 4441      636F6465 
 4441      735F7400 
 4442              	.LASF63:
 4443 0190 72784D65 		.ascii	"rxMessage_status_t\000"
 4443      73736167 
 4443      655F7374 
 4443      61747573 
 4443      5F7400
 4444              	.LASF84:
 4445 01a3 41737365 		.ascii	"AssertFault\000"
 4445      72744661 
 4445      756C7400 
 4446              	.LASF24:
 4447 01af 666C6F61 		.ascii	"float\000"
 4447      7400
 4448              	.LASF174:
 4449 01b5 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4449      7370695F 
 4449      73735F53 
 4449      74617274 
 4449      457800
 4450              	.LASF51:
 4451 01c8 63686563 		.ascii	"checksum\000"
 4451      6B73756D 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 106


 4451      00
 4452              	.LASF68:
 4453 01d1 73657465 		.ascii	"setenc\000"
 4453      6E6300
 4454              	.LASF18:
 4455 01d8 696E7431 		.ascii	"int16_t\000"
 4455      365F7400 
 4456              	.LASF90:
 4457 01e0 72657375 		.ascii	"result\000"
 4457      6C7400
 4458              	.LASF14:
 4459 01e7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4459      206C6F6E 
 4459      6720756E 
 4459      7369676E 
 4459      65642069 
 4460              	.LASF119:
 4461 01fe 5049445F 		.ascii	"PID_EffSetDelta\000"
 4461      45666653 
 4461      65744465 
 4461      6C746100 
 4462              	.LASF120:
 4463 020e 6C617374 		.ascii	"lastTime\000"
 4463      54696D65 
 4463      00
 4464              	.LASF130:
 4465 0217 70776D4D 		.ascii	"pwmMin\000"
 4465      696E00
 4466              	.LASF141:
 4467 021e 4D6F746F 		.ascii	"MotorCurrent\000"
 4467      72437572 
 4467      72656E74 
 4467      00
 4468              	.LASF6:
 4469 022b 5F5F7569 		.ascii	"__uint16_t\000"
 4469      6E743136 
 4469      5F7400
 4470              	.LASF125:
 4471 0236 49546572 		.ascii	"ITerm\000"
 4471      6D00
 4472              	.LASF60:
 4473 023c 656E6162 		.ascii	"enable\000"
 4473      6C6500
 4474              	.LASF180:
 4475 0243 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4475      315F5772 
 4475      69746550 
 4475      6572696F 
 4475      6400
 4476              	.LASF137:
 4477 0255 436F6E66 		.ascii	"ConfigState\000"
 4477      69675374 
 4477      61746500 
 4478              	.LASF184:
 4479 0261 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4479      43313120 
 4479      352E342E 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 107


 4479      31203230 
 4479      31363036 
 4480 0294 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4480      20726576 
 4480      6973696F 
 4480      6E203233 
 4480      37373135 
 4481 02c7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4481      66756E63 
 4481      74696F6E 
 4481      2D736563 
 4481      74696F6E 
 4482              	.LASF57:
 4483 02ef 6C696D69 		.ascii	"limit_ITerm\000"
 4483      745F4954 
 4483      65726D00 
 4484              	.LASF126:
 4485 02fb 6F75744D 		.ascii	"outMax_Total\000"
 4485      61785F54 
 4485      6F74616C 
 4485      00
 4486              	.LASF168:
 4487 0308 6973725F 		.ascii	"isr_brms_StartEx\000"
 4487      62726D73 
 4487      5F537461 
 4487      72744578 
 4487      00
 4488              	.LASF167:
 4489 0319 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4489      725F4252 
 4489      4D535F53 
 4489      74617274 
 4489      00
 4490              	.LASF96:
 4491 032a 5F426F6F 		.ascii	"_Bool\000"
 4491      6C00
 4492              	.LASF36:
 4493 0330 6673556E 		.ascii	"fsUnconfigured\000"
 4493      636F6E66 
 4493      69677572 
 4493      656400
 4494              	.LASF113:
 4495 033f 696E4175 		.ascii	"inAuto\000"
 4495      746F00
 4496              	.LASF13:
 4497 0346 5F5F7569 		.ascii	"__uint64_t\000"
 4497      6E743634 
 4497      5F7400
 4498              	.LASF161:
 4499 0351 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4499      315F5370 
 4499      69556172 
 4499      74507574 
 4499      41727261 
 4500              	.LASF153:
 4501 0367 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4501      73735F43 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 108


 4501      6C656172 
 4501      496E7465 
 4501      72727570 
 4502              	.LASF134:
 4503 037d 55707469 		.ascii	"UptimeMilliseconds\000"
 4503      6D654D69 
 4503      6C6C6973 
 4503      65636F6E 
 4503      647300
 4504              	.LASF160:
 4505 0390 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4505      7465725F 
 4505      315F5265 
 4505      6164436F 
 4505      756E7465 
 4506              	.LASF69:
 4507 03a6 76657273 		.ascii	"version0\000"
 4507      696F6E30 
 4507      00
 4508              	.LASF70:
 4509 03af 76657273 		.ascii	"version1\000"
 4509      696F6E31 
 4509      00
 4510              	.LASF71:
 4511 03b8 76657273 		.ascii	"version2\000"
 4511      696F6E32 
 4511      00
 4512              	.LASF54:
 4513 03c1 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4513      73736167 
 4513      655F6F76 
 4513      65726C61 
 4513      795F7400 
 4514              	.LASF173:
 4515 03d5 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4515      7273745F 
 4515      656E636F 
 4515      6465725F 
 4515      53657450 
 4516              	.LASF122:
 4517 03f1 506F7369 		.ascii	"Position\000"
 4517      74696F6E 
 4517      00
 4518              	.LASF26:
 4519 03fa 63686172 		.ascii	"char\000"
 4519      00
 4520              	.LASF110:
 4521 03ff 4C617374 		.ascii	"LastUptimeSeconds\000"
 4521      55707469 
 4521      6D655365 
 4521      636F6E64 
 4521      7300
 4522              	.LASF164:
 4523 0411 5049445F 		.ascii	"PID_UpdateValues\000"
 4523      55706461 
 4523      74655661 
 4523      6C756573 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 109


 4523      00
 4524              	.LASF93:
 4525 0422 5049445F 		.ascii	"PID_SetMode\000"
 4525      5365744D 
 4525      6F646500 
 4526              	.LASF87:
 4527 042e 50574D5F 		.ascii	"PWM_Set\000"
 4527      53657400 
 4528              	.LASF103:
 4529 0436 42524D53 		.ascii	"BRMS_Interrupt\000"
 4529      5F496E74 
 4529      65727275 
 4529      707400
 4530              	.LASF156:
 4531 0445 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4531      315F5370 
 4531      69556172 
 4531      74436C65 
 4531      61725278 
 4532              	.LASF53:
 4533 0460 6F70636F 		.ascii	"opcode\000"
 4533      646500
 4534              	.LASF17:
 4535 0467 75696E74 		.ascii	"uint8_t\000"
 4535      385F7400 
 4536              	.LASF67:
 4537 046f 73746174 		.ascii	"status\000"
 4537      757300
 4538              	.LASF38:
 4539 0476 6673496E 		.ascii	"fsIndex\000"
 4539      64657800 
 4540              	.LASF150:
 4541 047e 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4541      785F436F 
 4541      756E7465 
 4541      725F315F 
 4541      57726974 
 4542              	.LASF159:
 4543 049b 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4543      315F5772 
 4543      69746543 
 4543      6F6D7061 
 4543      726500
 4544              	.LASF35:
 4545 04ae 66734E4F 		.ascii	"fsNONE\000"
 4545      4E4500
 4546              	.LASF147:
 4547 04b5 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4547      7273745F 
 4547      656E636F 
 4547      6465725F 
 4547      436C6561 
 4548              	.LASF175:
 4549 04d2 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4549      7370695F 
 4549      73735F53 
 4549      65745072 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 110


 4549      696F7269 
 4550              	.LASF12:
 4551 04e9 6C6F6E67 		.ascii	"long long int\000"
 4551      206C6F6E 
 4551      6720696E 
 4551      7400
 4552              	.LASF165:
 4553 04f7 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4553      725F4252 
 4553      4D535F43 
 4553      6C656172 
 4553      496E7465 
 4554              	.LASF40:
 4555 0511 66734368 		.ascii	"fsChecksum\000"
 4555      65636B73 
 4555      756D00
 4556              	.LASF154:
 4557 051c 7370695F 		.ascii	"spi_ss_Read\000"
 4557      73735F52 
 4557      65616400 
 4558              	.LASF4:
 4559 0528 5F5F696E 		.ascii	"__int16_t\000"
 4559      7431365F 
 4559      7400
 4560              	.LASF163:
 4561 0532 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4561      585F4F55 
 4561      545F5365 
 4561      74447269 
 4561      76654D6F 
 4562              	.LASF189:
 4563 0549 6D656D73 		.ascii	"memset\000"
 4563      657400
 4564              	.LASF135:
 4565 0550 55707469 		.ascii	"UptimeMillisecondsAccumulator\000"
 4565      6D654D69 
 4565      6C6C6973 
 4565      65636F6E 
 4565      64734163 
 4566              	.LASF112:
 4567 056e 676F696E 		.ascii	"goingUp\000"
 4567      67557000 
 4568              	.LASF74:
 4569 0576 63686563 		.ascii	"checksum_errors\000"
 4569      6B73756D 
 4569      5F657272 
 4569      6F727300 
 4570              	.LASF52:
 4571 0586 73697A65 		.ascii	"size\000"
 4571      00
 4572              	.LASF186:
 4573 058b 433A5C55 		.ascii	"C:\\Users\\prichards\\proj\\acsnb-motor-cypress\\Qu"
 4573      73657273 
 4573      5C707269 
 4573      63686172 
 4573      64735C70 
 4574 05b9 6164456E 		.ascii	"adEncoderRTOS.cydsn\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 111


 4574      636F6465 
 4574      7252544F 
 4574      532E6379 
 4574      64736E00 
 4575              	.LASF23:
 4576 05cd 75696E74 		.ascii	"uint32\000"
 4576      333200
 4577              	.LASF79:
 4578 05d4 74786D73 		.ascii	"txmsLoaded\000"
 4578      4C6F6164 
 4578      656400
 4579              	.LASF142:
 4580 05df 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4580      656E7449 
 4580      3243696E 
 4580      62756600 
 4581              	.LASF121:
 4582 05ef 72656653 		.ascii	"refSampleTime\000"
 4582      616D706C 
 4582      6554696D 
 4582      6500
 4583              	.LASF123:
 4584 05fd 4C617374 		.ascii	"LastPosition\000"
 4584      506F7369 
 4584      74696F6E 
 4584      00
 4585              	.LASF145:
 4586 060a 74784D65 		.ascii	"txMessage\000"
 4586      73736167 
 4586      6500
 4587              	.LASF149:
 4588 0614 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4588      7465725F 
 4588      315F5772 
 4588      69746543 
 4588      6F756E74 
 4589              	.LASF83:
 4590 062b 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4590      53535F49 
 4590      73724861 
 4590      6E646C65 
 4590      7200
 4591              	.LASF0:
 4592 063d 5F5F696E 		.ascii	"__int8_t\000"
 4592      74385F74 
 4592      00
 4593              	.LASF34:
 4594 0646 436F6E66 		.ascii	"ConfigStates_t\000"
 4594      69675374 
 4594      61746573 
 4594      5F7400
 4595              	.LASF91:
 4596 0655 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4596      61746547 
 4596      726F7570 
 4596      335F5350 
 4596      4900
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 112


 4597              	.LASF169:
 4598 0667 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4598      62726D73 
 4598      5F536574 
 4598      5072696F 
 4598      72697479 
 4599              	.LASF28:
 4600 067c 6C6F6E67 		.ascii	"long double\000"
 4600      20646F75 
 4600      626C6500 
 4601              	.LASF158:
 4602 0688 67657443 		.ascii	"getCurrent_mA\000"
 4602      75727265 
 4602      6E745F6D 
 4602      4100
 4603              	.LASF19:
 4604 0696 75696E74 		.ascii	"uint16_t\000"
 4604      31365F74 
 4604      00
 4605              	.LASF27:
 4606 069f 72656733 		.ascii	"reg32\000"
 4606      3200
 4607              	.LASF30:
 4608 06a5 6373554E 		.ascii	"csUNDEFINED\000"
 4608      44454649 
 4608      4E454400 
 4609              	.LASF55:
 4610 06b1 73657175 		.ascii	"sequence\000"
 4610      656E6365 
 4610      00
 4611              	.LASF124:
 4612 06ba 4F757470 		.ascii	"Output\000"
 4612      757400
 4613              	.LASF66:
 4614 06c1 636F6E66 		.ascii	"config\000"
 4614      696700
 4615              	.LASF39:
 4616 06c8 66734375 		.ascii	"fsCurrentRead\000"
 4616      7272656E 
 4616      74526561 
 4616      6400
 4617              	.LASF5:
 4618 06d6 73686F72 		.ascii	"short int\000"
 4618      7420696E 
 4618      7400
 4619              	.LASF102:
 4620 06e0 64506F73 		.ascii	"dPosition\000"
 4620      6974696F 
 4620      6E00
 4621              	.LASF59:
 4622 06ea 72784D65 		.ascii	"rxMessage_config_t\000"
 4622      73736167 
 4622      655F636F 
 4622      6E666967 
 4622      5F7400
 4623              	.LASF116:
 4624 06fd 5049445F 		.ascii	"PID_Was_Enabled\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 113


 4624      5761735F 
 4624      456E6162 
 4624      6C656400 
 4625              	.LASF115:
 4626 070d 5049445F 		.ascii	"PID_Enabled\000"
 4626      456E6162 
 4626      6C656400 
 4627              	.LASF94:
 4628 0719 4D6F6465 		.ascii	"Mode\000"
 4628      00
 4629              	.LASF109:
 4630 071e 62726D73 		.ascii	"brmsRG5Mask\000"
 4630      5247354D 
 4630      61736B00 
 4631              	.LASF9:
 4632 072a 6C6F6E67 		.ascii	"long int\000"
 4632      20696E74 
 4632      00
 4633              	.LASF33:
 4634 0733 63734D41 		.ascii	"csMAX\000"
 4634      5800
 4635              	.LASF65:
 4636 0739 6F766572 		.ascii	"overlay\000"
 4636      6C617900 
 4637              	.LASF179:
 4638 0741 50574D5F 		.ascii	"PWM_1_Start\000"
 4638      315F5374 
 4638      61727400 
 4639              	.LASF146:
 4640 074d 74784D65 		.ascii	"txMessageState\000"
 4640      73736167 
 4640      65537461 
 4640      746500
 4641              	.LASF162:
 4642 075c 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4642      5F4F5554 
 4642      5F536574 
 4642      44726976 
 4642      654D6F64 
 4643              	.LASF89:
 4644 0772 52617750 		.ascii	"RawPosition\000"
 4644      6F736974 
 4644      696F6E00 
 4645              	.LASF143:
 4646 077e 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4646      4D657373 
 4646      61676554 
 4646      696D6553 
 4646      65636F6E 
 4647              	.LASF107:
 4648 0795 62726D73 		.ascii	"brmsRG3Mask\000"
 4648      5247334D 
 4648      61736B00 
 4649              	.LASF77:
 4650 07a1 74784D65 		.ascii	"txMessage_t\000"
 4650      73736167 
 4650      655F7400 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 114


 4651              	.LASF22:
 4652 07ad 75696E74 		.ascii	"uint64_t\000"
 4652      36345F74 
 4652      00
 4653              	.LASF61:
 4654 07b6 73657470 		.ascii	"setpoint\000"
 4654      6F696E74 
 4654      00
 4655              	.LASF106:
 4656 07bf 62726D73 		.ascii	"brmsRG2Mask\000"
 4656      5247324D 
 4656      61736B00 
 4657              	.LASF187:
 4658 07cb 47657450 		.ascii	"GetPosition\000"
 4658      6F736974 
 4658      696F6E00 
 4659              	.LASF127:
 4660 07d7 6F75744D 		.ascii	"outMax_ITerm\000"
 4660      61785F49 
 4660      5465726D 
 4660      00
 4661              	.LASF136:
 4662 07e4 55707469 		.ascii	"UptimeSeconds\000"
 4662      6D655365 
 4662      636F6E64 
 4662      7300
 4663              	.LASF129:
 4664 07f2 70776D4D 		.ascii	"pwmMax\000"
 4664      617800
 4665              	.LASF117:
 4666 07f9 5049445F 		.ascii	"PID_Setpoint\000"
 4666      53657470 
 4666      6F696E74 
 4666      00
 4667              	.LASF1:
 4668 0806 5F5F7569 		.ascii	"__uint8_t\000"
 4668      6E74385F 
 4668      7400
 4669              	.LASF47:
 4670 0810 6F705374 		.ascii	"opStatus\000"
 4670      61747573 
 4670      00
 4671              	.LASF155:
 4672 0819 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 4672      315F5370 
 4672      69556172 
 4672      74526561 
 4672      64527844 
 4673              	.LASF49:
 4674 0831 6F704D41 		.ascii	"opMAX\000"
 4674      5800
 4675              	.LASF140:
 4676 0837 43686563 		.ascii	"ChecksumErrors\000"
 4676      6B73756D 
 4676      4572726F 
 4676      727300
 4677              	.LASF29:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 115


 4678 0846 73697A65 		.ascii	"sizetype\000"
 4678      74797065 
 4678      00
 4679              	.LASF11:
 4680 084f 6C6F6E67 		.ascii	"long unsigned int\000"
 4680      20756E73 
 4680      69676E65 
 4680      6420696E 
 4680      7400
 4681              	.LASF171:
 4682 0861 6973725F 		.ascii	"isr_home_SetPriority\000"
 4682      686F6D65 
 4682      5F536574 
 4682      5072696F 
 4682      72697479 
 4683              	.LASF100:
 4684 0876 43757272 		.ascii	"CurrentIndexCount\000"
 4684      656E7449 
 4684      6E646578 
 4684      436F756E 
 4684      7400
 4685              	.LASF20:
 4686 0888 696E7433 		.ascii	"int32_t\000"
 4686      325F7400 
 4687              	.LASF132:
 4688 0890 55707469 		.ascii	"UptimeMicroseconds\000"
 4688      6D654D69 
 4688      63726F73 
 4688      65636F6E 
 4688      647300
 4689              	.LASF72:
 4690 08a3 73746174 		.ascii	"state\000"
 4690      6500
 4691              	.LASF178:
 4692 08a9 5350495F 		.ascii	"SPI_1_Start\000"
 4692      315F5374 
 4692      61727400 
 4693              	.LASF3:
 4694 08b5 756E7369 		.ascii	"unsigned char\000"
 4694      676E6564 
 4694      20636861 
 4694      7200
 4695              	.LASF10:
 4696 08c3 5F5F7569 		.ascii	"__uint32_t\000"
 4696      6E743332 
 4696      5F7400
 4697              	.LASF45:
 4698 08ce 6F70554E 		.ascii	"opUNDEFINED\000"
 4698      44454649 
 4698      4E454400 
 4699              	.LASF48:
 4700 08da 6F705365 		.ascii	"opSetEnc\000"
 4700      74456E63 
 4700      00
 4701              	.LASF138:
 4702 08e3 4661756C 		.ascii	"FaultState\000"
 4702      74537461 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 116


 4702      746500
 4703              	.LASF128:
 4704 08ee 70776D4C 		.ascii	"pwmLimit\000"
 4704      696D6974 
 4704      00
 4705              	.LASF41:
 4706 08f7 66735832 		.ascii	"fsX2\000"
 4706      00
 4707              	.LASF42:
 4708 08fc 66735833 		.ascii	"fsX3\000"
 4708      00
 4709              	.LASF43:
 4710 0901 66735834 		.ascii	"fsX4\000"
 4710      00
 4711              	.LASF139:
 4712 0906 436F6E66 		.ascii	"ConfigSequence\000"
 4712      69675365 
 4712      7175656E 
 4712      636500
 4713              	.LASF131:
 4714 0915 686F6D69 		.ascii	"homingDone\000"
 4714      6E67446F 
 4714      6E6500
 4715              	.LASF148:
 4716 0920 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 4716      745F456E 
 4716      636F6465 
 4716      725F436C 
 4716      65617249 
 4717              	.LASF64:
 4718 093d 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4718      73736167 
 4718      655F7365 
 4718      74656E63 
 4718      5F7400
 4719              	.LASF56:
 4720 0950 6C696D69 		.ascii	"limit_Total\000"
 4720      745F546F 
 4720      74616C00 
 4721              	.LASF166:
 4722 095c 50524F42 		.ascii	"PROBE_Write\000"
 4722      455F5772 
 4722      69746500 
 4723              	.LASF170:
 4724 0968 6973725F 		.ascii	"isr_home_StartEx\000"
 4724      686F6D65 
 4724      5F537461 
 4724      72744578 
 4724      00
 4725              	.LASF2:
 4726 0979 7369676E 		.ascii	"signed char\000"
 4726      65642063 
 4726      68617200 
 4727              	.LASF7:
 4728 0985 73686F72 		.ascii	"short unsigned int\000"
 4728      7420756E 
 4728      7369676E 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 117


 4728      65642069 
 4728      6E7400
 4729              	.LASF92:
 4730 0998 5049445F 		.ascii	"PID_Initialize\000"
 4730      496E6974 
 4730      69616C69 
 4730      7A6500
 4731              	.LASF188:
 4732 09a7 6D61696E 		.ascii	"main\000"
 4732      00
 4733              	.LASF25:
 4734 09ac 646F7562 		.ascii	"double\000"
 4734      6C6500
 4735              	.LASF182:
 4736 09b3 496E6465 		.ascii	"Index_Counter_1_Start\000"
 4736      785F436F 
 4736      756E7465 
 4736      725F315F 
 4736      53746172 
 4737              	.LASF133:
 4738 09c9 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 4738      6D654D69 
 4738      63726F73 
 4738      65636F6E 
 4738      64734163 
 4739              	.LASF46:
 4740 09e7 6F70436F 		.ascii	"opConfig\000"
 4740      6E666967 
 4740      00
 4741              	.LASF172:
 4742 09f0 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 4742      7273745F 
 4742      656E636F 
 4742      6465725F 
 4742      53746172 
 4743              	.LASF151:
 4744 0a08 6973725F 		.ascii	"isr_home_ClearPending\000"
 4744      686F6D65 
 4744      5F436C65 
 4744      61725065 
 4744      6E64696E 
 4745              	.LASF73:
 4746 0a1e 6661756C 		.ascii	"fault\000"
 4746      7400
 4747              	.LASF81:
 4748 0a24 52535449 		.ascii	"RSTIsrHandler\000"
 4748      73724861 
 4748      6E646C65 
 4748      7200
 4749              	.LASF76:
 4750 0a32 706F7369 		.ascii	"position\000"
 4750      74696F6E 
 4750      00
 4751              	.LASF44:
 4752 0a3b 4661756C 		.ascii	"FaultStates_t\000"
 4752      74537461 
 4752      7465735F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccMWo7Bn.s 			page 118


 4752      7400
 4753              	.LASF118:
 4754 0a49 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 4754      45666665 
 4754      63746976 
 4754      65536574 
 4754      706F696E 
 4755              	.LASF99:
 4756 0a5f 44656C74 		.ascii	"DeltaPosition\000"
 4756      61506F73 
 4756      6974696F 
 4756      6E00
 4757              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
