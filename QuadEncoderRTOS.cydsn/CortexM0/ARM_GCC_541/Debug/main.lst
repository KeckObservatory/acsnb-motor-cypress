ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB43:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 04/07/23 PMR  Rev: 0-2-1 add move timer to messaging, fix jog function
  12:main.c        **** * 02/08/23 PMR  Rev: 0-2-0 rework PID algorithm based on Galil findings
  13:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  14:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  15:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  16:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  17:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  18:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  19:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  20:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  21:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  22:main.c        **** *******************************************************************************/
  23:main.c        **** #include <I2C_I2C.h>
  24:main.c        **** #include <stdbool.h>
  25:main.c        **** #include <stdlib.h>
  26:main.c        **** #include <math.h>
  27:main.c        **** #include "pid.h"
  28:main.c        **** #include "INA219.h"
  29:main.c        **** 
  30:main.c        **** /* Firmware revision as of 2023-09-08 */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 2


  31:main.c        **** #define FIRMWARE_REV_0 0
  32:main.c        **** #define FIRMWARE_REV_1 2
  33:main.c        **** #define FIRMWARE_REV_2 2
  34:main.c        **** 
  35:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  36:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  37:main.c        **** 
  38:main.c        **** /* For the ACS test set, the drives are wired backwards!  Use a polarity of -1 in that case. */
  39:main.c        **** //#define DRIVE_POLARITY -1
  40:main.c        **** #define DRIVE_POLARITY 1
  41:main.c        **** 
  42:main.c        **** /* --------------------------------------------------------------------- 
  43:main.c        ****  * CONSTANTS
  44:main.c        ****  * --------------------------------------------------------------------- */
  45:main.c        **** 
  46:main.c        **** /* Interrupt priorities */
  47:main.c        **** #define NESTED_ISR                             (1u)
  48:main.c        **** #define HIGHER_PRIORITY                        (2u)
  49:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  50:main.c        **** 
  51:main.c        **** /* Interrupt prototypes */
  52:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  53:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  54:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  55:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  56:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  57:main.c        **** 
  58:main.c        **** /* --------------------------------------------------------------------- 
  59:main.c        ****  * WDT Defines
  60:main.c        ****  *
  61:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  62:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  63:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  64:main.c        ****  * --------------------------------------------------------------------- */
  65:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  66:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  67:main.c        **** 
  68:main.c        **** /* --------------------------------------------------------------------- 
  69:main.c        ****  * PWM Defines
  70:main.c        ****  * --------------------------------------------------------------------- */
  71:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  72:main.c        **** #define PWM_NEUTRAL_OLD                        (PWM_15KHZ_PERIOD/2)
  73:main.c        **** #define PWM_SET_NEUTRAL                        (0)
  74:main.c        **** 
  75:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  76:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  77:main.c        **** #define INA219_CAL_VALUE                       (8192)
  78:main.c        **** 
  79:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  80:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  81:main.c        **** 
  82:main.c        **** /* --------------------------------------------------------------------- 
  83:main.c        ****  * PID Defines
  84:main.c        ****  * --------------------------------------------------------------------- */
  85:main.c        **** #define PID_MANUAL                             (0)
  86:main.c        **** #define PID_AUTOMATIC                          (1)
  87:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (250)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 3


  88:main.c        **** #define OVERRIDE_PID_CONSTANTS                 1
  89:main.c        **** #define ITERM_90PCT_FIT_CONSTANT               (13)
  90:main.c        **** 
  91:main.c        **** bool inAuto = false;
  92:main.c        **** 
  93:main.c        **** volatile int8_t Jog;
  94:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  95:main.c        **** int32_t PID_Setpoint, PID_EffectiveSetpoint;
  96:main.c        **** uint8_t PID_EffSetDelta;
  97:main.c        **** uint32_t lastTime;
  98:main.c        **** 
  99:main.c        **** volatile int32_t Position, LastPosition;
 100:main.c        **** volatile int32_t Output;
 101:main.c        **** volatile uint16_t limitOutput;
 102:main.c        **** volatile uint16_t limitIterm;
 103:main.c        **** 
 104:main.c        **** bool homingDone = true;
 105:main.c        **** 
 106:main.c        **** /* --------------------------------------------------------------------- 
 107:main.c        ****  * Move timer defines
 108:main.c        ****  * 
 109:main.c        ****  * Wait for 30 samples of position to be the same before declaring a move
 110:main.c        ****  * done.
 111:main.c        ****  * --------------------------------------------------------------------- */
 112:main.c        **** #define LAST_MOVE_TIME_SAMPLE_COUNT 30
 113:main.c        **** 
 114:main.c        **** /* Use UptimeMicroseconds to calculate how long a move elapsed */
 115:main.c        **** uint32_t LastMoveStartTimeUsec = 0;
 116:main.c        **** uint32_t LastMoveEndTimeUsec = 0;
 117:main.c        **** 
 118:main.c        **** /* Counter for how many samples elapsed since the move was complete */
 119:main.c        **** uint16_t LastMoveStableCount = 0;
 120:main.c        **** 
 121:main.c        **** /* Time value in microseconds for how long the last move took */
 122:main.c        **** uint32_t LastMoveTimeUsec = 0;
 123:main.c        **** 
 124:main.c        **** /* Set this flag when a new move comes down from the ACS */
 125:main.c        **** bool NewCommandedMove = false;
 126:main.c        **** 
 127:main.c        **** /* --------------------------------------------------------------------- 
 128:main.c        ****  * Timekeeping defines
 129:main.c        ****  * --------------------------------------------------------------------- */
 130:main.c        **** volatile uint64_t UptimeMicroseconds = 0;
 131:main.c        **** volatile uint64_t UptimeMicrosecondsAccumulator = 0;
 132:main.c        **** volatile uint64_t UptimeMilliseconds = 0;
 133:main.c        **** volatile uint64_t UptimeMillisecondsAccumulator = 0;
 134:main.c        **** volatile uint64_t UptimeSeconds = 0;
 135:main.c        **** 
 136:main.c        **** /* --------------------------------------------------------------------- 
 137:main.c        ****  * ENCODER PROPERTIES
 138:main.c        ****  *
 139:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 140:main.c        ****  *
 141:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 142:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 143:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 144:main.c        ****  * flag and resetting the counter to 0 again.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 4


 145:main.c        ****  *
 146:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 147:main.c        ****  * --------------------------------------------------------------------- */
 148:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 149:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 150:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 151:main.c        **** 
 152:main.c        **** /* --------------------------------------------------------------------- 
 153:main.c        ****  * GLOBALS
 154:main.c        ****  * --------------------------------------------------------------------- */
 155:main.c        **** /* Coarse reporting of state back to the node box software */
 156:main.c        **** typedef enum {    
 157:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 158:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 159:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 160:main.c        ****     csMAX    
 161:main.c        **** } ConfigStates_t;
 162:main.c        **** 
 163:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 164:main.c        **** 
 165:main.c        **** /* Fault codes, these are bit encoded into a uint8_t */
 166:main.c        **** typedef enum {
 167:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 168:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 169:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 170:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 171:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 172:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 173:main.c        ****     fsX2           = 0b00100000,    /* */
 174:main.c        ****     fsX3           = 0b01000000,    /* */
 175:main.c        ****     fsX4           = 0b10000000     /* */
 176:main.c        **** } FaultStates_t;
 177:main.c        **** 
 178:main.c        **** volatile ConfigStates_t ConfigState;
 179:main.c        **** volatile uint8_t FaultState;
 180:main.c        **** volatile uint8_t ConfigSequence;
 181:main.c        **** volatile uint16_t ChecksumErrors;
 182:main.c        **** volatile int16_t MotorCurrent;
 183:main.c        **** uint8_t CurrentI2Cinbuf[20];
 184:main.c        **** 
 185:main.c        **** /* --------------------------------------------------------------------- 
 186:main.c        ****  * SPI MESSAGING
 187:main.c        ****  * --------------------------------------------------------------------- */
 188:main.c        **** /* V2 protocol 
 189:main.c        **** 
 190:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 191:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 192:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 193:main.c        **** */
 194:main.c        ****     
 195:main.c        **** /* Set this to be at least the size of the status response message */
 196:main.c        **** #define MAX_MESSAGE_SIZE 31
 197:main.c        ****     
 198:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 199:main.c        ****    talking.  Nominally 1 second max of not talking. */
 200:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 201:main.c        **** uint32_t LastMessageTimeSeconds;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 5


 202:main.c        **** 
 203:main.c        **** /* Opcodes that can come from the node box software */
 204:main.c        **** typedef enum {
 205:main.c        ****     opUNDEFINED = 0,
 206:main.c        ****     opConfig    = 1,
 207:main.c        ****     opStatus    = 2,
 208:main.c        ****     opSetEnc    = 3,
 209:main.c        ****     opMAX       
 210:main.c        **** } rxMessage_opcodes_t;    
 211:main.c        **** 
 212:main.c        **** /* Sanity check for opcodes */
 213:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 214:main.c        **** 
 215:main.c        **** typedef struct { 
 216:main.c        ****     uint8_t checksum;        
 217:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 218:main.c        ****     uint8_t opcode;     /* Operation (generic overlay for previewing opcode value) */
 219:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 220:main.c        **** 
 221:main.c        **** /* Configuration message, 22 bytes */
 222:main.c        **** typedef struct {
 223:main.c        ****     uint8_t checksum;        
 224:main.c        ****     uint8_t size;        /* Size of the message bytes, including opcode and size and checksum */
 225:main.c        ****     uint8_t opcode;      /* Operation: 01 == config */        
 226:main.c        ****     uint8_t sequence;    /* Configuration message sequence number */
 227:main.c        ****     
 228:main.c        ****     uint32_t overrideKp; /* If nonzero, override the PID P term */
 229:main.c        ****     uint32_t overrideKi; /* If nonzero, override the PID I term */
 230:main.c        ****     uint32_t overrideKd; /* If nonzero, override the PID D term */
 231:main.c        ****     
 232:main.c        ****     uint16_t limitOutput;/* Drive output limit, ranges from 0 to 800 */
 233:main.c        ****     uint16_t limitIterm; /* PID I term output limit, ranges from 0 to 800 */
 234:main.c        ****     uint16_t effsetdelta;/* PID effective setpoint increment delta, nominally 250 steps */
 235:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 236:main.c        **** 
 237:main.c        **** /* Status message, contains desired position and such values, 10 bytes */
 238:main.c        **** typedef struct {
 239:main.c        ****     uint8_t  checksum;        
 240:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 241:main.c        ****     uint8_t  opcode;     /* Operation: 02 == status */
 242:main.c        ****     uint8_t  enable;     /* Enable/disable PID algorithm */
 243:main.c        ****     int32_t  setpoint;   /* Setpoint (desired actuator position) */
 244:main.c        ****     int8_t   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 245:main.c        ****     uint8_t  clearfaults;/* Set to nonzero to clear all the current faults */
 246:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 247:main.c        ****    
 248:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 249:main.c        **** typedef struct {
 250:main.c        ****     uint8_t  checksum;        
 251:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 252:main.c        ****     uint8_t  opcode;     /* Operation: 03 == set encoders */
 253:main.c        ****     int32_t  setpoint;   /* Setpoint (force an actuator logical position) */
 254:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** /* Wrap the message with an array of bytes */
 258:main.c        **** union {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 6


 259:main.c        ****     uint8_t             buf[MAX_MESSAGE_SIZE];
 260:main.c        ****     rxMessage_overlay_t overlay;
 261:main.c        ****     rxMessage_config_t  config;
 262:main.c        ****     rxMessage_status_t  status;  
 263:main.c        ****     rxMessage_setenc_t  setenc;
 264:main.c        **** } rxMessage;
 265:main.c        **** 
 266:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (31 bytes) */
 267:main.c        **** typedef struct  {  
 268:main.c        ****     uint8_t  checksum;        /* Message checksum */    
 269:main.c        ****     uint8_t  version0;        /* Version byte 0 */ 
 270:main.c        ****     uint8_t  version1;        /* Version byte 1 */
 271:main.c        ****     uint8_t  version2;        /* Version byte 2 */
 272:main.c        ****     uint8_t  size;            /* Size of the message bytes, including opcode and size and checksum 
 273:main.c        ****     uint8_t  opcode;          /* Echo back of the opcode this response is for, operation: 02 == sta
 274:main.c        ****     uint8_t  state;           /* Enum value for current device configuration state */ 
 275:main.c        ****     uint8_t  fault;           /* Bit encoded fields for current fault status */
 276:main.c        ****     uint8_t  sequence;        /* Echo back the config sequence number currently set */
 277:main.c        ****     uint16_t checksum_errors; /* Count of checksum errors */
 278:main.c        ****     int16_t  motor_current;   /* Motor current consumption (mA) */
 279:main.c        ****     int32_t  position;        /* Actual actuator position, signed value */ 
 280:main.c        ****     int16_t  pwm;             /* PWM value the motor is moving at */     
 281:main.c        ****     int32_t  iterm;           /* Instantaneous PID iterm value */
 282:main.c        ****     uint32_t last_move_time;  /* Amount of time for the last move, in us */
 283:main.c        ****     int32_t  iterm_delay;     /* Hold-off time remaining before iterm kicks in */
 284:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 285:main.c        **** 
 286:main.c        **** /* Wrap the message with an array of bytes */
 287:main.c        **** union {    
 288:main.c        ****     uint8_t     buf[MAX_MESSAGE_SIZE];
 289:main.c        ****     txMessage_t msg;
 290:main.c        **** } txMessage;
 291:main.c        **** 
 292:main.c        **** /* State machine definition for transmit side of messaging */
 293:main.c        **** typedef enum {
 294:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 295:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 296:main.c        **** } txMessageStates_t;
 297:main.c        **** 
 298:main.c        **** txMessageStates_t txMessageState;
 299:main.c        **** 
 300:main.c        **** 
 301:main.c        **** 
 302:main.c        **** /* --------------------------------------------------------------------- 
 303:main.c        ****  * Function prototypes
 304:main.c        ****  * --------------------------------------------------------------------- */
 305:main.c        **** int32_t GetPosition(void);
 306:main.c        **** void runRateGroup1_PID(void);
 307:main.c        **** void runRateGroup3_SPI(void);
 308:main.c        **** void MotorCurrentRead(void);
 309:main.c        **** 
 310:main.c        **** 
 311:main.c        **** /*******************************************************************************
 312:main.c        **** * Function Name: AssertFault
 313:main.c        **** ********************************************************************************
 314:main.c        **** * Summary:
 315:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 7


 316:main.c        **** *  all faults.
 317:main.c        **** *
 318:main.c        **** * Parameters: FaultStates_t of the fault detected.
 319:main.c        **** * Return: None
 320:main.c        **** *******************************************************************************/
 321:main.c        **** void AssertFault(FaultStates_t fault) {
 322:main.c        ****  
 323:main.c        ****     switch (fault) {
 324:main.c        ****      
 325:main.c        ****         /* Clears all asserted faults */
 326:main.c        ****         case fsNONE:
 327:main.c        ****             FaultState = fsNONE;
 328:main.c        ****             break;        
 329:main.c        ****         
 330:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 331:main.c        ****         default:
 332:main.c        ****             FaultState |= fault;
 333:main.c        ****             break;        
 334:main.c        ****     }    
 335:main.c        **** }
 336:main.c        **** 
 337:main.c        **** 
 338:main.c        **** /*******************************************************************************
 339:main.c        **** * Function Name: ClearFault
 340:main.c        **** ********************************************************************************
 341:main.c        **** * Summary:
 342:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 343:main.c        **** *  all faults.
 344:main.c        **** *
 345:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 346:main.c        **** * Return: None
 347:main.c        **** *******************************************************************************/
 348:main.c        **** void ClearFault(FaultStates_t fault) {
 349:main.c        ****  
 350:main.c        ****     switch (fault) {
 351:main.c        ****      
 352:main.c        ****         /* Clears all asserted faults */
 353:main.c        ****         case fsNONE:
 354:main.c        ****             FaultState = fsNONE;
 355:main.c        ****             break;        
 356:main.c        ****         
 357:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 358:main.c        ****         default:
 359:main.c        ****             FaultState &= ~fault;
 360:main.c        ****             break;        
 361:main.c        ****     }    
 362:main.c        **** }
 363:main.c        **** 
 364:main.c        **** 
 365:main.c        **** /*******************************************************************************
 366:main.c        **** * Function Name: MotorCurrentRead
 367:main.c        **** ********************************************************************************
 368:main.c        **** * Summary:
 369:main.c        **** *  Read the motor current consumption.
 370:main.c        **** *
 371:main.c        **** * Parameters: None
 372:main.c        **** * Return: None
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 8


 373:main.c        **** *******************************************************************************/
 374:main.c        **** void MotorCurrentRead(void) {
 375:main.c        ****     
 376:main.c        ****     //TODO: Convert this to integer math
 377:main.c        ****     float c;
 378:main.c        ****     
 379:main.c        ****     //c = getCurrent_mA(INA219_I2C_ADDR);
 380:main.c        ****     c = getCurrent_raw(INA219_I2C_ADDR);
 381:main.c        ****     
 382:main.c        ****     /* Assign the global MotorCurrent value */
 383:main.c        ****     MotorCurrent = (int16_t) c;       
 384:main.c        **** }
 385:main.c        **** 
 386:main.c        **** 
 387:main.c        **** /*******************************************************************************
 388:main.c        **** * Function Name: Comm_Task
 389:main.c        **** ********************************************************************************
 390:main.c        **** * Summary:
 391:main.c        **** *  Task to perform the SPI communications.
 392:main.c        **** *
 393:main.c        **** * Parameters: None
 394:main.c        **** * Return: None
 395:main.c        **** *******************************************************************************/
 396:main.c        **** void runRateGroup3_SPI(void) {
 397:main.c        ****  
 398:main.c        ****     rxMessage_opcodes_t opcode;
 399:main.c        ****     uint8_t size;
 400:main.c        ****     uint8_t i;
 401:main.c        ****     uint8_t checksum;
 402:main.c        ****     int32_t distance;
 403:main.c        ****     
 404:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 405:main.c        ****        get to it next cycle! */
 406:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 407:main.c        ****         return;
 408:main.c        ****     
 409:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 410:main.c        ****     switch (txMessageState) {
 411:main.c        ****      
 412:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 413:main.c        ****         case txmsClear:
 414:main.c        ****                 
 415:main.c        ****             /* Get a few items out of the message before checking the sum */
 416:main.c        ****             size     = rxMessage.overlay.size;
 417:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 418:main.c        ****             
 419:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 420:main.c        ****             if (size > sizeof(txMessage.buf))
 421:main.c        ****                 size = sizeof(txMessage.buf);                            
 422:main.c        ****         
 423:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 424:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 425:main.c        ****                 checksum += rxMessage.buf[i]; 
 426:main.c        **** 
 427:main.c        ****             /* Checksum fault, don't try to process the messgage */
 428:main.c        ****             if ((checksum & 0xFF) != 0) {
 429:main.c        ****                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 9


 430:main.c        ****                 txMessage.msg.opcode = opcode;
 431:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 432:main.c        ****                 ChecksumErrors++;
 433:main.c        ****                 
 434:main.c        ****             /* Message looks fine, process it */
 435:main.c        ****             } else {
 436:main.c        **** 
 437:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 438:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 439:main.c        ****                 
 440:main.c        ****                     switch (opcode) {
 441:main.c        ****                     
 442:main.c        ****                         case opConfig:
 443:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 444:main.c        ****                         
 445:main.c        ****                             /* Remember where we were when the init was sent */
 446:main.c        ****                             LastPosition = GetPosition();
 447:main.c        ****                            
 448:main.c        ****                             /* Initialize the setpoints to be equal to where we are right now.*/
 449:main.c        ****                             PID_Setpoint = LastPosition;
 450:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 451:main.c        ****                             
 452:main.c        ****                             /* Disable PID if it's on */
 453:main.c        ****                             PID_Was_Enabled = false;
 454:main.c        ****                             PID_Enabled = false;
 455:main.c        **** 
 456:main.c        ****                             /* Stop a jog if one was in progress */
 457:main.c        ****                             Jog = 0;
 458:main.c        ****                             
 459:main.c        ****                             /* Output and Iterm limits */
 460:main.c        ****                             limitOutput = rxMessage.config.limitOutput;
 461:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 462:main.c        ****                                 
 463:main.c        ****                                 
 464:main.c        ****                             /* Update the PID values passed down from the server */
 465:main.c        ****                         
 466:main.c        **** #ifndef OVERRIDE_PID_CONSTANTS
 467:main.c        ****                             kp = rxMessage.config.Kp;
 468:main.c        ****                             ki = rxMessage.config.Ki;
 469:main.c        ****                             kd = rxMessage.config.Kd;      
 470:main.c        ****                         
 471:main.c        ****                             /* PID effective setpoint increment delta value */                     
 472:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
 473:main.c        **** #endif
 474:main.c        ****                         
 475:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 476:main.c        ****                             ConfigState = csReady;  
 477:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 478:main.c        ****                         
 479:main.c        ****                             /* Clear all the faults when reconfigured */
 480:main.c        ****                             ClearFault(fsNONE);
 481:main.c        ****                             break;
 482:main.c        **** 
 483:main.c        ****                         case opStatus:
 484:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 485:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 486:main.c        ****                             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 10


 487:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
 488:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
 489:main.c        ****                                 
 490:main.c        ****                                 /* This is a new move, start timing! */
 491:main.c        ****                                 NewCommandedMove = true;
 492:main.c        ****                                 LastMoveStartTimeUsec = UptimeMicroseconds;
 493:main.c        ****                                 
 494:main.c        ****                                 /* Remember where we started */
 495:main.c        ****                                 LastPosition = GetPosition();
 496:main.c        ****                                 
 497:main.c        ****                                 /* Update destination */
 498:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 499:main.c        ****                                 
 500:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 501:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 502:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 503:main.c        ****                                 
 504:main.c        ****                                 /* Reset counting of index marks */
 505:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 506:main.c        ****                                 
 507:main.c        ****                                 
 508:main.c        ****                                 /* The demand has changed.  Hold off the integrator for a certain a
 509:main.c        ****                                 dictated by the size of the move (if it's more than 50 counts) */
 510:main.c        ****                                 distance = PID_Setpoint - LastPosition;                            
 511:main.c        ****                                 if (distance < 0) {
 512:main.c        ****                                     distance = -distance;
 513:main.c        ****                                 }
 514:main.c        ****                                 
 515:main.c        ****                                 if (distance > 50) {                                
 516:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 517:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 518:main.c        ****                                 } else {
 519:main.c        ****                                     iterm_delay = 0;
 520:main.c        ****                                 }
 521:main.c        ****                                 
 522:main.c        ****                                 /* The demand has changed, reset the iterm to discharge any build u
 523:main.c        ****                                 iterm = 0;
 524:main.c        ****                             }                                        
 525:main.c        ****                         
 526:main.c        ****                             /* PWM jog value ranges from -100 to 100, where -100 is max-reverse cur
 527:main.c        ****                             100 is max-forward, 0 is neutral/no movement */
 528:main.c        ****                             Jog = rxMessage.status.jog;                                            
 529:main.c        ****                             break;
 530:main.c        ****                         
 531:main.c        ****                         case opSetEnc:
 532:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 533:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);
 534:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 535:main.c        ****                             break;                                        
 536:main.c        ****                             
 537:main.c        ****                         /* No other opcodes are valid */
 538:main.c        ****                         default:
 539:main.c        ****                             break;
 540:main.c        ****                     }                           
 541:main.c        ****                 }                            
 542:main.c        ****             }
 543:main.c        ****             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 11


 544:main.c        ****             /* Get a fresh copy of the position information */
 545:main.c        ****             Position = GetPosition();
 546:main.c        ****             
 547:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 548:main.c        ****             txMessage.msg.checksum        = 0;
 549:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 550:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 551:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 552:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 553:main.c        ****             txMessage.msg.opcode          = opStatus;
 554:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 555:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 556:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 557:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 558:main.c        ****             txMessage.msg.position        = Position;
 559:main.c        ****             txMessage.msg.pwm             = Output;
 560:main.c        ****             txMessage.msg.iterm           = iterm;
 561:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 562:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 563:main.c        ****             txMessage.msg.iterm_delay     = iterm_delay;
 564:main.c        ****             
 565:main.c        ****             /* Set the checksum in the response */
 566:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 567:main.c        ****                 checksum += txMessage.buf[i]; 
 568:main.c        ****                 
 569:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
 570:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 571:main.c        ****                 
 572:main.c        ****             /* Copy the readied buffer out to the FIFO */
 573:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 574:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 575:main.c        **** 
 576:main.c        ****             /* Indicate it's loaded for use */
 577:main.c        ****             txMessageState = txmsLoaded;
 578:main.c        ****             
 579:main.c        ****             /* Clear all the faults if told to */
 580:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 581:main.c        ****                 ClearFault(fsNONE);
 582:main.c        ****         
 583:main.c        ****             break;
 584:main.c        ****     
 585:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 586:main.c        ****         case txmsLoaded:                
 587:main.c        ****             break;
 588:main.c        ****                 
 589:main.c        ****     } // End of message state case statement
 590:main.c        **** 
 591:main.c        **** }
 592:main.c        ****     
 593:main.c        **** 
 594:main.c        **** /*******************************************************************************
 595:main.c        **** * Function Name: PWM_Set
 596:main.c        **** ********************************************************************************
 597:main.c        **** * Summary:
 598:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 599:main.c        **** *
 600:main.c        **** * Parameters: Duty cycle, from -800 to 800 where 0 is neutral (no movement).
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 12


 601:main.c        **** * 
 602:main.c        **** * Return: None
 603:main.c        **** *******************************************************************************/
 604:main.c        **** void PWM_Set(int32_t output) {    
 605:main.c        ****         
 606:main.c        ****     /* output varies from -800 to 800, which needs to be expressed as 0 to 1600 
 607:main.c        ****        for the PWM */
 608:main.c        ****     PWM_1_WriteCompare((PWM_15KHZ_PERIOD/2) + (DRIVE_POLARITY * output));    
 609:main.c        **** }
 610:main.c        **** 
 611:main.c        **** 
 612:main.c        **** /*******************************************************************************
 613:main.c        **** * Function Name: GetPosition
 614:main.c        **** ********************************************************************************
 615:main.c        **** * Summary:
 616:main.c        **** *  Get the physical position value and compensate for negative locations.
 617:main.c        **** *
 618:main.c        **** * Parameters: None
 619:main.c        **** * Return: int32_t (signed!) position value
 620:main.c        **** *******************************************************************************/
 621:main.c        **** int32_t GetPosition(void) {
 622:main.c        ****     
 623:main.c        ****     static volatile uint32_t RawPosition;
 624:main.c        ****     static volatile int32_t result;
 625:main.c        ****     
 626:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 627:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 628:main.c        ****     
 629:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 630:main.c        ****        underflow and make that into a negative value */
 631:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 632:main.c        ****         
 633:main.c        ****         result = (-1) * ((int32_t) ENCODER_MAX - (int32_t) RawPosition);
 634:main.c        ****         
 635:main.c        ****     } else {
 636:main.c        ****      
 637:main.c        ****         /* Value is "positive", treat it normally */
 638:main.c        ****         result = (int32_t) RawPosition;
 639:main.c        ****     }
 640:main.c        ****     
 641:main.c        ****     /* Update the master copy of position information */
 642:main.c        ****     Position = result;
 643:main.c        ****     return result;
 644:main.c        **** }
 645:main.c        **** 
 646:main.c        **** 
 647:main.c        **** /*******************************************************************************
 648:main.c        **** * Function Name: PID_Initialize
 649:main.c        **** ********************************************************************************
 650:main.c        **** * Summary:
 651:main.c        **** *  Setup and reset the PID terms.
 652:main.c        **** *
 653:main.c        **** * Parameters: None
 654:main.c        **** * Return: None
 655:main.c        **** *******************************************************************************/
 656:main.c        **** void PID_Initialize(void) {
 657:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 13


 658:main.c        ****     /* Get up-to-date position */
 659:main.c        ****     Position = GetPosition();
 660:main.c        ****     LastPosition = Position;
 661:main.c        ****     
 662:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 663:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 664:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 665:main.c        ****     
 666:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 667:main.c        ****        switching from manual to auto frequently */
 668:main.c        ****     iterm = 0;
 669:main.c        **** }    
 670:main.c        **** 
 671:main.c        **** 
 672:main.c        **** /*******************************************************************************
 673:main.c        **** * Function Name: PID_SetMode
 674:main.c        **** ********************************************************************************
 675:main.c        **** * Summary:
 676:main.c        **** *  Sets the PID into automatic or manual mode.
 677:main.c        **** *
 678:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 679:main.c        **** * Return: None
 680:main.c        **** *******************************************************************************/
 681:main.c        **** void PID_SetMode(uint32_t Mode) {
 682:main.c        ****     
 683:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 684:main.c        ****     
 685:main.c        ****     if (newAuto && !inAuto) {  
 686:main.c        ****         /*we just went from manual to auto*/
 687:main.c        ****         PID_Initialize();
 688:main.c        ****     }
 689:main.c        ****     
 690:main.c        ****     inAuto = newAuto;
 691:main.c        **** } 
 692:main.c        **** 
 693:main.c        **** 
 694:main.c        **** /*******************************************************************************
 695:main.c        **** * Function Name: runRateGroup1_PID
 696:main.c        **** ********************************************************************************
 697:main.c        **** * Summary:
 698:main.c        **** *  Task to perform the PID calculations.
 699:main.c        **** *
 700:main.c        **** * Parameters: None
 701:main.c        **** * Return: None
 702:main.c        **** *******************************************************************************/
 703:main.c        **** void runRateGroup1_PID(void) {
 704:main.c        ****      
 705:main.c        ****     /////////////////////////////////////////////////////
 706:main.c        ****     // TESTING ONLY
 707:main.c        ****     //ConfigState = csReady;
 708:main.c        ****     //PID_Enabled = true;
 709:main.c        ****     /////////////////////////////////////////////////////
 710:main.c        **** 
 711:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 712:main.c        ****        take preventative action and abandon any moves in progress. */
 713:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 714:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 14


 715:main.c        ****         /* Stop all motion */
 716:main.c        ****         PWM_Set(PWM_SET_NEUTRAL);
 717:main.c        ****         PID_Enabled = false;
 718:main.c        ****         
 719:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the 
 720:main.c        ****         next message might be a config, in which case we want to be neutral. */
 721:main.c        ****         Jog = 0;
 722:main.c        **** 
 723:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 724:main.c        ****     } else if (ConfigState == csReady) {
 725:main.c        ****         
 726:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 727:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 728:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 729:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 730:main.c        **** 
 731:main.c        ****         /* Handle mode switching */
 732:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 733:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 734:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 735:main.c        ****             PID_SetMode(PID_MANUAL);                
 736:main.c        ****         } else {
 737:main.c        ****             // No mode change happened   
 738:main.c        ****         }
 739:main.c        ****         
 740:main.c        ****         /* Save value for next cycle */
 741:main.c        ****         PID_Was_Enabled = PID_Enabled;
 742:main.c        ****         
 743:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 744:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 745:main.c        ****     
 746:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 747:main.c        ****         
 748:main.c        ****         1) The setpoint will change to 2000.
 749:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 750:main.c        ****         3) Calculate the PID and return.
 751:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 752:main.c        ****         5) Calculate the PID and return.
 753:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 754:main.c        ****         */
 755:main.c        ****         
 756:main.c        ****         if (PID_Enabled) {
 757:main.c        ****             
 758:main.c        ****             if (PID_EffSetDelta == 0) {
 759:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 760:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 761:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 762:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 763:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 764:main.c        ****             } else {
 765:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 766:main.c        ****             }
 767:main.c        ****             
 768:main.c        ****             /* Get most up-to-date current position */
 769:main.c        ****             Position = GetPosition();
 770:main.c        ****             
 771:main.c        ****             /* Run the PID algorithm once */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 15


 772:main.c        ****             Output = PID_UpdateValues(PID_EffectiveSetpoint, Position);
 773:main.c        ****             
 774:main.c        ****             /* Put the PID output value out on the wire */
 775:main.c        ****             PWM_Set(Output);
 776:main.c        ****             
 777:main.c        ****             /* Calculate how long the last commanded move has taken */
 778:main.c        ****             if (NewCommandedMove) {
 779:main.c        ****                 
 780:main.c        ****                 if (Position == PID_Setpoint) {
 781:main.c        ****                     
 782:main.c        ****                     /* We are at the set point, but it's not known if the motion is stable yet, we 
 783:main.c        ****                     Therefore, count how many times we have held at this location.  When it exceeds
 784:main.c        ****                     use the time we first reached this position as the move's end time. */
 785:main.c        ****                     if (LastMoveStableCount == LAST_MOVE_TIME_SAMPLE_COUNT) {
 786:main.c        ****                         
 787:main.c        ****                         /* We have arrived at the set point and have been here for 6ms (30 counts o
 788:main.c        ****                         good and calculate how long this move took */
 789:main.c        ****                         LastMoveTimeUsec = LastMoveEndTimeUsec - LastMoveStartTimeUsec;
 790:main.c        ****                         
 791:main.c        ****                         /* Clear the flag for this particular move */ 
 792:main.c        ****                         NewCommandedMove = false;
 793:main.c        ****                         
 794:main.c        ****                     } else {
 795:main.c        ****                         
 796:main.c        ****                         /* We have reached the destination but it is not yet proven stable. Increme
 797:main.c        ****                         It will be reset to zero if we deviate from this position. */              
 798:main.c        ****                         LastMoveStableCount += 1;
 799:main.c        **** 
 800:main.c        ****                         /* If the stable count is exactly 1, then this might be the start of a new 
 801:main.c        ****                         note the time.  This is potentially the END TIME of a move.  The start time
 802:main.c        ****                         when the node box sent a new set point. */
 803:main.c        ****                         if (LastMoveStableCount == 1) {
 804:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 805:main.c        ****                         }                    
 806:main.c        ****                     }                
 807:main.c        ****                     
 808:main.c        ****                 } else {
 809:main.c        ****                     
 810:main.c        ****                     /* Reset the stable counter, because we are not at the commanded location */
 811:main.c        ****                     LastMoveStableCount = 0;                
 812:main.c        ****                 }
 813:main.c        ****             }
 814:main.c        **** 
 815:main.c        ****         } else {
 816:main.c        ****             
 817:main.c        ****             /* If the server is asking us to jog, do that instead of PID.  Drive in the direction 
 818:main.c        ****             and speed the server told us.  Translate the jog percentage, from -100 to +100, into 
 819:main.c        ****             PWM_Set values from -800 to 800 */
 820:main.c        ****             Output = (Jog * 8);
 821:main.c        ****             
 822:main.c        ****             /* Put the new jog value on the wire, instead of a PID value */
 823:main.c        ****             PWM_Set(Output);            
 824:main.c        ****         }        
 825:main.c        ****         
 826:main.c        ****     } else {
 827:main.c        ****         
 828:main.c        ****         /* Config state is not ready (configured), inhibit all motion */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 16


 829:main.c        ****         PWM_Set(PWM_SET_NEUTRAL);        
 830:main.c        ****     }
 831:main.c        **** }
 832:main.c        **** 
 833:main.c        **** 
 834:main.c        **** /*******************************************************************************
 835:main.c        **** * Function Name: main
 836:main.c        **** ********************************************************************************
 837:main.c        **** * Summary:
 838:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 839:main.c        **** *
 840:main.c        **** * Parameters: None
 841:main.c        **** * Return: NEVER!
 842:main.c        **** *******************************************************************************/
 843:main.c        **** int main(void) {
 844:main.c        ****     
 845:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 846:main.c        ****        microprocessor.  There is a race condition here: unless the actuator is on a home
 847:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 848:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 849:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 850:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 851:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 852:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 853:main.c        **** 
 854:main.c        ****     
 855:main.c        ****     /********************************************************************** 
 856:main.c        ****     * Interrupts
 857:main.c        ****     **********************************************************************/
 858:main.c        ****     
 859:main.c        ****     /* BRMS timer interrupt */
 860:main.c        ****     Timer_BRMS_Start();
 861:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 862:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 863:main.c        **** 
 864:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 865:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 866:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 867:main.c        **** 
 868:main.c        ****     /* Encoder interrupt */
 869:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 870:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 871:main.c        ****     
 872:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 873:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 874:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 875:main.c        **** 
 876:main.c        ****     /* Enable the global interrupt */
 877:main.c        ****     CyGlobalIntEnable;
 878:main.c        ****     
 879:main.c        ****     /********************************************************************** 
 880:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 881:main.c        ****     **********************************************************************/
 882:main.c        **** 
 883:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 884:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 885:main.c        ****        when you hit a breakpoint. */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 17


 886:main.c        **** 
 887:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 888:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 889:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
 890:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 891:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 892:main.c        **** 	
 893:main.c        **** 	/* Enable WDT counter 1 */
 894:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
 895:main.c        **** 	
 896:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
 897:main.c        **** 	CySysWdtLock();
 898:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 899:main.c        **** 	CySysWdtUnlock();        
 900:main.c        **** #endif    
 901:main.c        **** 
 902:main.c        ****     
 903:main.c        ****     /*********************************************************************** 
 904:main.c        ****     * Start the various subsystems.
 905:main.c        ****     ***********************************************************************/
 906:main.c        ****     I2C_Start();
 907:main.c        ****     
 908:main.c        ****     /* Start I2C for the Motor Current monitor */
 909:main.c        ****     //Init_INA(INA219_I2C_ADDR);
 910:main.c        ****     
 911:main.c        ****     CyDelay(100u);
 912:main.c        ****     SPI_1_Start();
 913:main.c        ****     
 914:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
 915:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
 916:main.c        ****     PWM_1_Start();
 917:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 918:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);   
 919:main.c        ****     
 920:main.c        ****     /* Default the jog value to neutral (no movement) */
 921:main.c        ****     Jog = 0;
 922:main.c        ****     
 923:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
 924:main.c        ****     homingDone = false;
 925:main.c        ****    
 926:main.c        ****     /* Start counting the quadrature encoding */
 927:main.c        ****     Counter_1_Start();    
 928:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 929:main.c        ****     LastPosition = ENCODER_MAX;
 930:main.c        ****     
 931:main.c        ****     /* Clear and start the index mark counter */
 932:main.c        ****     Index_Counter_1_Start();
 933:main.c        ****     Index_Counter_1_WriteCounter(0);
 934:main.c        ****      
 935:main.c        ****     /* Start off unconfigured */
 936:main.c        ****     ConfigState = csUnconfig;  
 937:main.c        ****     ConfigSequence = 0;
 938:main.c        ****     ChecksumErrors = 0;
 939:main.c        ****     
 940:main.c        ****     /***************************/
 941:main.c        ****     /* Setup the PID subsystem */
 942:main.c        ****     PID_Initialize();
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 18


 943:main.c        ****     PID_SetMode(PID_MANUAL);
 944:main.c        ****     
 945:main.c        ****     /* Initially default to full output max until config tells us otherwise */
 946:main.c        ****     limitOutput = 800;
 947:main.c        ****     limitIterm = 800;
 948:main.c        ****     
 949:main.c        ****     /* Start off disabled */
 950:main.c        ****     PID_Setpoint          = 0;  
 951:main.c        ****     PID_EffectiveSetpoint = 0;
 952:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 953:main.c        ****     PID_Was_Enabled       = false;
 954:main.c        ****     PID_Enabled           = false;
 955:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);
 956:main.c        ****   
 957:main.c        ****     /* Set the encoder direction sense based on the drive polarity */
 958:main.c        ****     if (DRIVE_POLARITY == 1) {
 959:main.c        ****         EncoderDirection_Write(0);
 960:main.c        ****     } else {
 961:main.c        ****         EncoderDirection_Write(1);
 962:main.c        ****     }
 963:main.c        ****     
 964:main.c        ****     /***********************************************************************
 965:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
 966:main.c        ****     * constantly interrupted by the task scheduler.
 967:main.c        ****     ***********************************************************************/
 968:main.c        ****     while (1) {
 969:main.c        **** 
 970:main.c        ****         /* Read the current */
 971:main.c        ****         MotorCurrentRead();
 972:main.c        ****         
 973:main.c        ****         /* Use the LED as a heartbeat */
 974:main.c        ****         if (UptimeSeconds % 2) {
 975:main.c        ****             LED_Write(1);
 976:main.c        ****         } else {
 977:main.c        ****             LED_Write(0);
 978:main.c        ****         } 
 979:main.c        ****         
 980:main.c        ****         /* Delay 10ms before next loop iteration.  Tune this value to regulate
 981:main.c        ****         how often we read the motor current */ 
 982:main.c        ****         CyDelay(10);         
 983:main.c        ****         
 984:main.c        ****         
 985:main.c        ****    
 986:main.c        ****     /* ------------------------------------------------------------------------------------ */
 987:main.c        ****     /* Every loop, refresh the counter of the watchdog to indicate the system is still alive
 988:main.c        ****        and not stalled out in some interrupt somewhre.  Were the BRMS to stop working or the 
 989:main.c        ****        motion thread to die, the CPU will be reset after 2 seconds. */
 990:main.c        **** #ifndef DEBUG_PROBE_ATTACHED    
 991:main.c        ****         WDT_COUNT1_REFRESH();        
 992:main.c        **** #endif
 993:main.c        ****     /* ------------------------------------------------------------------------------------ */
 994:main.c        ****         
 995:main.c        ****     }
 996:main.c        ****       
 997:main.c        ****     
 998:main.c        ****     /***********************************************************************
 999:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 19


1000:main.c        ****     ***********************************************************************/
1001:main.c        ****     return 1;       
1002:main.c        **** }
1003:main.c        **** 
1004:main.c        **** 
1005:main.c        **** /*******************************************************************************
1006:main.c        **** * Function Name: BRMS_Interrupt
1007:main.c        **** ********************************************************************************
1008:main.c        **** * Summary:
1009:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
1010:main.c        **** *
1011:main.c        **** * Parameters: None
1012:main.c        **** * Return: None
1013:main.c        **** *******************************************************************************/
1014:main.c        **** CY_ISR(BRMS_Interrupt) {
1015:main.c        ****     
1016:main.c        ****     static uint32_t brmsTask;                 // The BRMS schedule counter
1017:main.c        **** 
1018:main.c        ****     static uint32_t brmsRG1Mask = 0b00000001; // Rate group 1 mask
1019:main.c        ****     static uint32_t brmsRG2Mask = 0b00000010; // Rate group 2 mask
1020:main.c        ****     static uint32_t brmsRG3Mask = 0b00000100; // Rate group 3 mask
1021:main.c        ****     static uint32_t brmsRG4Mask = 0b00001000; // Rate group 4 mask
1022:main.c        ****     static uint32_t brmsRG5Mask = 0b00010000; // Rate group 5 mask
1023:main.c        ****     
1024:main.c        ****     /* Clears the timer interrupt */
1025:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
1026:main.c        **** 
1027:main.c        ****     PROBE_Write(1);
1028:main.c        ****     
1029:main.c        ****     /* Use this 200us interrupt as a clock mechanism */
1030:main.c        ****     UptimeMicroseconds += 200;
1031:main.c        ****     UptimeMicrosecondsAccumulator += 200;
1032:main.c        ****     
1033:main.c        ****     /* Count milliseconds */
1034:main.c        ****     if (UptimeMicrosecondsAccumulator > 1000) {
1035:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1036:main.c        ****         UptimeMilliseconds += 1;
1037:main.c        ****         UptimeMillisecondsAccumulator += 1;
1038:main.c        ****     }
1039:main.c        ****     
1040:main.c        ****     /* Count seconds */
1041:main.c        ****     if (UptimeMillisecondsAccumulator > 1000) {
1042:main.c        ****         UptimeMillisecondsAccumulator = 0;
1043:main.c        ****         UptimeSeconds += 1;
1044:main.c        ****     }
1045:main.c        ****     
1046:main.c        ****     /* Increment the BRMS task counter infinitely */
1047:main.c        ****     brmsTask++;
1048:main.c        **** 
1049:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
1050:main.c        ****        sequentially until one results in a "true" value.  
1051:main.c        ****     
1052:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1053:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1054:main.c        ****     
1055:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
1056:main.c        ****        value ends in 0bxx10. 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 20


1057:main.c        ****     
1058:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1059:main.c        ****        ends in 0bx100.  
1060:main.c        ****     
1061:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1062:main.c        ****     
1063:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1064:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1065:main.c        ****        interrupt returns.
1066:main.c        ****     */
1067:main.c        ****     if (brmsTask & brmsRG1Mask) {
1068:main.c        ****         
1069:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1070:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1071:main.c        ****            to a 2.5KHz update rate. */
1072:main.c        ****         runRateGroup1_PID();
1073:main.c        ****         
1074:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1075:main.c        ****         
1076:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1077:main.c        ****         //runRateGroup2_TBD();           
1078:main.c        ****         
1079:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1080:main.c        ****         
1081:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1082:main.c        ****         runRateGroup3_SPI();
1083:main.c        ****         
1084:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1085:main.c        ****      
1086:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1087:main.c        ****         //runRateGroup4_TBD();
1088:main.c        **** 
1089:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1090:main.c        ****      
1091:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1092:main.c        ****         //runRateGroup5_TBD();
1093:main.c        ****     }
1094:main.c        ****     
1095:main.c        ****     PROBE_Write(0);
1096:main.c        ****    
1097:main.c        **** }
1098:main.c        **** 
1099:main.c        **** 
1100:main.c        **** /*******************************************************************************
1101:main.c        **** * Function Name: RSTIsrHandler
1102:main.c        **** ********************************************************************************
1103:main.c        **** * Summary:
1104:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1105:main.c        **** *  Clears a pending Interrupt.
1106:main.c        **** *  Clears a pin Interrupt.
1107:main.c        **** *
1108:main.c        **** * Parameters: None
1109:main.c        **** * Return: None
1110:main.c        **** *******************************************************************************/
1111:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1111 0
  29              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 21


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1112:main.c        ****     
1113:main.c        ****     /* Clear pending Interrupt */
1114:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1114 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1115:main.c        ****     
1116:main.c        ****     /* Clear pin Interrupt */
1117:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1117 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1118:main.c        ****     
1119:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1120:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1120 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1121:main.c        ****     
1122:main.c        ****     /* Clear the index counter */
1123:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1123 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1124:main.c        ****     
1125:main.c        ****     /* When we hit the index mark, homing is complete */
1126:main.c        ****     homingDone = true;    
  50              		.loc 1 1126 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1127:main.c        **** }
  54              		.loc 1 1127 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE43:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
  70              	HomeIsrHandler:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 22


  71              	.LFB44:
1128:main.c        **** 
1129:main.c        **** 
1130:main.c        **** /*******************************************************************************
1131:main.c        **** * Function Name: HomeIsrHandler
1132:main.c        **** ********************************************************************************
1133:main.c        **** * Summary:
1134:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1135:main.c        **** *  Clears a pending Interrupt.
1136:main.c        **** *  Clears a pin Interrupt.
1137:main.c        **** *
1138:main.c        **** * Parameters: None
1139:main.c        **** * Return: None
1140:main.c        **** *******************************************************************************/
1141:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1141 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1142:main.c        ****     
1143:main.c        ****     /* Clear pending Interrupt */
1144:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1144 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1145:main.c        ****     
1146:main.c        ****     /* Clear pin Interrupt */
1147:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1147 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  85              	.LVL5:
1148:main.c        **** 
1149:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1150:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1150 0
  87 000a 0020     		movs	r0, #0
  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1151:main.c        ****     
1152:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1153:main.c        ****     homingDone = false;
  90              		.loc 1 1153 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1154:main.c        **** }
  94              		.loc 1 1154 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 0018 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 23


 101              		.cfi_endproc
 102              	.LFE44:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB45:
1155:main.c        **** 
1156:main.c        **** 
1157:main.c        **** /*******************************************************************************
1158:main.c        **** * Function Name: SPI_SS_IsrHandler
1159:main.c        **** ********************************************************************************
1160:main.c        **** * Summary:
1161:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1162:main.c        **** *  Clears a pin Interrupt.
1163:main.c        **** *
1164:main.c        **** * Parameters: None
1165:main.c        **** * Return: None
1166:main.c        **** *******************************************************************************/
1167:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1167 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1168:main.c        ****     
1169:main.c        ****     uint32_t i;
1170:main.c        ****     
1171:main.c        ****     /* Clear SPI slave select pin Interrupt */
1172:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1172 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
1173:main.c        ****     
1174:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1175:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1175 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1176:main.c        ****         return;
1177:main.c        ****    
1178:main.c        ****     /* Update the last message tick timer */
1179:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1179 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
 132 0014 0E4B     		ldr	r3, .L12+4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 24


 133 0016 1A60     		str	r2, [r3]
1180:main.c        **** 
1181:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1182:main.c        ****        check the messaging state before resetting the buffers */
1183:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1183 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1184:main.c        ****      
1185:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1186:main.c        ****         case txmsClear:
1187:main.c        ****             break;
1188:main.c        ****      
1189:main.c        ****         /* A message was readied for transmission */
1190:main.c        ****         case txmsLoaded:
1191:main.c        ****          
1192:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1193:main.c        ****             
1194:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1195:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1195 0
 140 0020 1F22     		movs	r2, #31
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1196:main.c        **** 
1197:main.c        ****             /* Message from the master is completely clocked in by now */     
1198:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1198 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
 148              	.LVL10:
 149              	.L11:
1199:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1199 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1198:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1198 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1198:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1198 0 is_stmt 0 discriminator 1
 160 0038 1E2C     		cmp	r4, #30
 161 003a F8D9     		bls	.L11
1200:main.c        ****             }
1201:main.c        ****             
1202:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1203:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1203 0 is_stmt 1
 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 25


 164              	.LVL13:
1204:main.c        ****             
1205:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1206:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1206 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1207:main.c        ****             
1208:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1209:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1209 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1210:main.c        ****             break;
1211:main.c        ****             
1212:main.c        ****     } 
1213:main.c        ****         
1214:main.c        **** }
 174              		.loc 1 1214 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE45:
 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 321:main.c        ****  
 196              		.loc 1 321 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
 323:main.c        ****      
 202              		.loc 1 323 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 327:main.c        ****             break;        
 205              		.loc 1 327 0
 206 0004 0022     		movs	r2, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 26


 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 328:main.c        ****         
 209              		.loc 1 328 0
 210 000a 03E0     		b	.L14
 211              	.L18:
 332:main.c        ****             break;        
 212              		.loc 1 332 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 335:main.c        **** 
 219              		.loc 1 335 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 348:main.c        ****  
 237              		.loc 1 348 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
 350:main.c        ****      
 243              		.loc 1 350 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 354:main.c        ****             break;        
 246              		.loc 1 354 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 355:main.c        ****         
 250              		.loc 1 355 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 359:main.c        ****             break;        
 253              		.loc 1 359 0
 254 000c 024A     		ldr	r2, .L26
 255 000e 1378     		ldrb	r3, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 27


 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 362:main.c        **** 
 259              		.loc 1 362 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.section	.text.MotorCurrentRead,"ax",%progbits
 270              		.align	2
 271              		.global	MotorCurrentRead
 272              		.code	16
 273              		.thumb_func
 274              		.type	MotorCurrentRead, %function
 275              	MotorCurrentRead:
 276              	.LFB34:
 374:main.c        ****     
 277              		.loc 1 374 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 10B5     		push	{r4, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 4, -8
 284              		.cfi_offset 14, -4
 380:main.c        ****     
 285              		.loc 1 380 0
 286 0002 4020     		movs	r0, #64
 287 0004 FFF7FEFF 		bl	getCurrent_raw
 288              	.LVL19:
 383:main.c        **** }
 289              		.loc 1 383 0
 290 0008 014B     		ldr	r3, .L29
 291 000a 1880     		strh	r0, [r3]
 384:main.c        **** 
 292              		.loc 1 384 0
 293              		@ sp needed
 294 000c 10BD     		pop	{r4, pc}
 295              	.L30:
 296 000e C046     		.align	2
 297              	.L29:
 298 0010 00000000 		.word	MotorCurrent
 299              		.cfi_endproc
 300              	.LFE34:
 301              		.size	MotorCurrentRead, .-MotorCurrentRead
 302              		.section	.text.PWM_Set,"ax",%progbits
 303              		.align	2
 304              		.global	PWM_Set
 305              		.code	16
 306              		.thumb_func
 307              		.type	PWM_Set, %function
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 28


 308              	PWM_Set:
 309              	.LFB36:
 604:main.c        ****         
 310              		.loc 1 604 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              	.LVL20:
 315 0000 10B5     		push	{r4, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 608:main.c        **** }
 319              		.loc 1 608 0
 320 0002 C823     		movs	r3, #200
 321 0004 9B00     		lsls	r3, r3, #2
 322 0006 9C46     		mov	ip, r3
 323 0008 6044     		add	r0, r0, ip
 324              	.LVL21:
 325 000a FFF7FEFF 		bl	PWM_1_WriteCompare
 326              	.LVL22:
 609:main.c        **** 
 327              		.loc 1 609 0
 328              		@ sp needed
 329 000e 10BD     		pop	{r4, pc}
 330              		.cfi_endproc
 331              	.LFE36:
 332              		.size	PWM_Set, .-PWM_Set
 333              		.section	.text.GetPosition,"ax",%progbits
 334              		.align	2
 335              		.global	GetPosition
 336              		.code	16
 337              		.thumb_func
 338              		.type	GetPosition, %function
 339              	GetPosition:
 340              	.LFB37:
 621:main.c        ****     
 341              		.loc 1 621 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345 0000 10B5     		push	{r4, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 627:main.c        ****     
 349              		.loc 1 627 0
 350 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 351              	.LVL23:
 352 0006 0B4B     		ldr	r3, .L35
 353 0008 9860     		str	r0, [r3, #8]
 631:main.c        ****         
 354              		.loc 1 631 0
 355 000a 9A68     		ldr	r2, [r3, #8]
 356 000c 0A4B     		ldr	r3, .L35+4
 357 000e 9A42     		cmp	r2, r3
 358 0010 06D9     		bls	.L33
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 29


 633:main.c        ****         
 359              		.loc 1 633 0
 360 0012 084A     		ldr	r2, .L35
 361 0014 9368     		ldr	r3, [r2, #8]
 362 0016 0949     		ldr	r1, .L35+8
 363 0018 8C46     		mov	ip, r1
 364 001a 6344     		add	r3, r3, ip
 365 001c D360     		str	r3, [r2, #12]
 366 001e 02E0     		b	.L34
 367              	.L33:
 638:main.c        ****     }
 368              		.loc 1 638 0
 369 0020 044B     		ldr	r3, .L35
 370 0022 9A68     		ldr	r2, [r3, #8]
 371 0024 DA60     		str	r2, [r3, #12]
 372              	.L34:
 642:main.c        ****     return result;
 373              		.loc 1 642 0
 374 0026 034B     		ldr	r3, .L35
 375 0028 D968     		ldr	r1, [r3, #12]
 376 002a 054A     		ldr	r2, .L35+12
 377 002c 1160     		str	r1, [r2]
 643:main.c        **** }
 378              		.loc 1 643 0
 379 002e D868     		ldr	r0, [r3, #12]
 644:main.c        **** 
 380              		.loc 1 644 0
 381              		@ sp needed
 382 0030 10BD     		pop	{r4, pc}
 383              	.L36:
 384 0032 C046     		.align	2
 385              	.L35:
 386 0034 00000000 		.word	.LANCHOR1
 387 0038 FFFFEF00 		.word	15728639
 388 003c 010000FF 		.word	-16777215
 389 0040 00000000 		.word	Position
 390              		.cfi_endproc
 391              	.LFE37:
 392              		.size	GetPosition, .-GetPosition
 393              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 394              		.align	2
 395              		.global	runRateGroup3_SPI
 396              		.code	16
 397              		.thumb_func
 398              		.type	runRateGroup3_SPI, %function
 399              	runRateGroup3_SPI:
 400              	.LFB35:
 396:main.c        ****  
 401              		.loc 1 396 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405 0000 70B5     		push	{r4, r5, r6, lr}
 406              		.cfi_def_cfa_offset 16
 407              		.cfi_offset 4, -16
 408              		.cfi_offset 5, -12
 409              		.cfi_offset 6, -8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 30


 410              		.cfi_offset 14, -4
 406:main.c        ****         return;
 411              		.loc 1 406 0
 412 0002 9A4B     		ldr	r3, .L55
 413 0004 1B68     		ldr	r3, [r3]
 414 0006 DB07     		lsls	r3, r3, #31
 415 0008 00D5     		bpl	.LCB319
 416 000a 2EE1     		b	.L37	@long jump
 417              	.LCB319:
 410:main.c        ****      
 418              		.loc 1 410 0
 419 000c 984B     		ldr	r3, .L55+4
 420 000e 1B78     		ldrb	r3, [r3]
 421 0010 002B     		cmp	r3, #0
 422 0012 00D0     		beq	.LCB324
 423 0014 29E1     		b	.L37	@long jump
 424              	.LCB324:
 416:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 425              		.loc 1 416 0
 426 0016 974B     		ldr	r3, .L55+8
 427 0018 5878     		ldrb	r0, [r3, #1]
 428              	.LVL24:
 417:main.c        ****             
 429              		.loc 1 417 0
 430 001a 9C78     		ldrb	r4, [r3, #2]
 431              	.LVL25:
 420:main.c        ****                 size = sizeof(txMessage.buf);                            
 432              		.loc 1 420 0
 433 001c 1F28     		cmp	r0, #31
 434 001e 00D9     		bls	.L40
 421:main.c        ****         
 435              		.loc 1 421 0
 436 0020 1F20     		movs	r0, #31
 437              	.LVL26:
 438              	.L40:
 424:main.c        ****                 checksum += rxMessage.buf[i]; 
 439              		.loc 1 424 0
 440 0022 0022     		movs	r2, #0
 441 0024 0023     		movs	r3, #0
 442 0026 05E0     		b	.L41
 443              	.LVL27:
 444              	.L42:
 425:main.c        **** 
 445              		.loc 1 425 0 discriminator 3
 446 0028 9249     		ldr	r1, .L55+8
 447 002a C95C     		ldrb	r1, [r1, r3]
 448 002c 5218     		adds	r2, r2, r1
 449              	.LVL28:
 450 002e D2B2     		uxtb	r2, r2
 451              	.LVL29:
 424:main.c        ****                 checksum += rxMessage.buf[i]; 
 452              		.loc 1 424 0 discriminator 3
 453 0030 0133     		adds	r3, r3, #1
 454              	.LVL30:
 455 0032 DBB2     		uxtb	r3, r3
 456              	.LVL31:
 457              	.L41:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 31


 424:main.c        ****                 checksum += rxMessage.buf[i]; 
 458              		.loc 1 424 0 is_stmt 0 discriminator 1
 459 0034 9842     		cmp	r0, r3
 460 0036 F7D8     		bhi	.L42
 428:main.c        ****                 
 461              		.loc 1 428 0 is_stmt 1
 462 0038 002A     		cmp	r2, #0
 463 003a 09D0     		beq	.L43
 430:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 464              		.loc 1 430 0
 465 003c 8E4B     		ldr	r3, .L55+12
 466              	.LVL32:
 467 003e 5C71     		strb	r4, [r3, #5]
 431:main.c        ****                 ChecksumErrors++;
 468              		.loc 1 431 0
 469 0040 1F22     		movs	r2, #31
 470              	.LVL33:
 471 0042 1A71     		strb	r2, [r3, #4]
 432:main.c        ****                 
 472              		.loc 1 432 0
 473 0044 8D4A     		ldr	r2, .L55+16
 474 0046 1388     		ldrh	r3, [r2]
 475 0048 0133     		adds	r3, r3, #1
 476 004a 9BB2     		uxth	r3, r3
 477 004c 1380     		strh	r3, [r2]
 478 004e A1E0     		b	.L44
 479              	.LVL34:
 480              	.L43:
 438:main.c        ****                 
 481              		.loc 1 438 0
 482 0050 631E     		subs	r3, r4, #1
 483              	.LVL35:
 484 0052 DBB2     		uxtb	r3, r3
 485 0054 022B     		cmp	r3, #2
 486 0056 00D9     		bls	.LCB390
 487 0058 9CE0     		b	.L44	@long jump
 488              	.LCB390:
 440:main.c        ****                     
 489              		.loc 1 440 0
 490 005a 022C     		cmp	r4, #2
 491 005c 2CD0     		beq	.L45
 492 005e 032C     		cmp	r4, #3
 493 0060 7CD0     		beq	.L46
 494 0062 012C     		cmp	r4, #1
 495 0064 00D0     		beq	.LCB396
 496 0066 95E0     		b	.L44	@long jump
 497              	.LCB396:
 446:main.c        ****                            
 498              		.loc 1 446 0
 499 0068 FFF7FEFF 		bl	GetPosition
 500              	.LVL36:
 501 006c 844B     		ldr	r3, .L55+20
 502 006e 1860     		str	r0, [r3]
 449:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 503              		.loc 1 449 0
 504 0070 1968     		ldr	r1, [r3]
 505 0072 844A     		ldr	r2, .L55+24
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 32


 506 0074 1160     		str	r1, [r2]
 450:main.c        ****                             
 507              		.loc 1 450 0
 508 0076 1A68     		ldr	r2, [r3]
 509 0078 834B     		ldr	r3, .L55+28
 510 007a 1A60     		str	r2, [r3]
 453:main.c        ****                             PID_Enabled = false;
 511              		.loc 1 453 0
 512 007c 0023     		movs	r3, #0
 513 007e 834A     		ldr	r2, .L55+32
 514 0080 1370     		strb	r3, [r2]
 454:main.c        **** 
 515              		.loc 1 454 0
 516 0082 834A     		ldr	r2, .L55+36
 517 0084 1370     		strb	r3, [r2]
 457:main.c        ****                             
 518              		.loc 1 457 0
 519 0086 834A     		ldr	r2, .L55+40
 520 0088 1370     		strb	r3, [r2]
 460:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 521              		.loc 1 460 0
 522 008a 7A4B     		ldr	r3, .L55+8
 523 008c 197C     		ldrb	r1, [r3, #16]
 524 008e 5A7C     		ldrb	r2, [r3, #17]
 525 0090 1202     		lsls	r2, r2, #8
 526 0092 0A43     		orrs	r2, r1
 527 0094 8049     		ldr	r1, .L55+44
 528 0096 0A80     		strh	r2, [r1]
 461:main.c        ****                                 
 529              		.loc 1 461 0
 530 0098 997C     		ldrb	r1, [r3, #18]
 531 009a DA7C     		ldrb	r2, [r3, #19]
 532 009c 1202     		lsls	r2, r2, #8
 533 009e 0A43     		orrs	r2, r1
 534 00a0 7E49     		ldr	r1, .L55+48
 535 00a2 0A80     		strh	r2, [r1]
 476:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 536              		.loc 1 476 0
 537 00a4 0221     		movs	r1, #2
 538 00a6 7E4A     		ldr	r2, .L55+52
 539 00a8 1170     		strb	r1, [r2]
 477:main.c        ****                         
 540              		.loc 1 477 0
 541 00aa DA78     		ldrb	r2, [r3, #3]
 542 00ac 7D4B     		ldr	r3, .L55+56
 543 00ae 1A70     		strb	r2, [r3]
 480:main.c        ****                             break;
 544              		.loc 1 480 0
 545 00b0 0020     		movs	r0, #0
 546 00b2 FFF7FEFF 		bl	ClearFault
 547              	.LVL37:
 481:main.c        **** 
 548              		.loc 1 481 0
 549 00b6 6DE0     		b	.L44
 550              	.LVL38:
 551              	.L45:
 485:main.c        ****                             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 33


 552              		.loc 1 485 0
 553 00b8 6E48     		ldr	r0, .L55+8
 554              	.LVL39:
 555 00ba C378     		ldrb	r3, [r0, #3]
 556 00bc 5A1E     		subs	r2, r3, #1
 557 00be 9341     		sbcs	r3, r3, r2
 558              	.LVL40:
 559 00c0 734A     		ldr	r2, .L55+36
 560 00c2 1370     		strb	r3, [r2]
 488:main.c        ****                                 
 561              		.loc 1 488 0
 562 00c4 0379     		ldrb	r3, [r0, #4]
 563 00c6 4279     		ldrb	r2, [r0, #5]
 564 00c8 1202     		lsls	r2, r2, #8
 565 00ca 1A43     		orrs	r2, r3
 566 00cc 8379     		ldrb	r3, [r0, #6]
 567 00ce 1B04     		lsls	r3, r3, #16
 568 00d0 1343     		orrs	r3, r2
 569 00d2 1A00     		movs	r2, r3
 570 00d4 C379     		ldrb	r3, [r0, #7]
 571 00d6 1B06     		lsls	r3, r3, #24
 572 00d8 1343     		orrs	r3, r2
 573 00da 6A4A     		ldr	r2, .L55+24
 574 00dc 1268     		ldr	r2, [r2]
 575 00de 9342     		cmp	r3, r2
 576 00e0 36D0     		beq	.L48
 491:main.c        ****                                 LastMoveStartTimeUsec = UptimeMicroseconds;
 577              		.loc 1 491 0
 578 00e2 714B     		ldr	r3, .L55+60
 579 00e4 0122     		movs	r2, #1
 580 00e6 1A74     		strb	r2, [r3, #16]
 492:main.c        ****                                 
 581              		.loc 1 492 0
 582 00e8 9869     		ldr	r0, [r3, #24]
 583 00ea D969     		ldr	r1, [r3, #28]
 584 00ec 1862     		str	r0, [r3, #32]
 495:main.c        ****                                 
 585              		.loc 1 495 0
 586 00ee FFF7FEFF 		bl	GetPosition
 587              	.LVL41:
 588 00f2 634C     		ldr	r4, .L55+20
 589              	.LVL42:
 590 00f4 2060     		str	r0, [r4]
 498:main.c        ****                                 
 591              		.loc 1 498 0
 592 00f6 5F48     		ldr	r0, .L55+8
 593 00f8 0379     		ldrb	r3, [r0, #4]
 594 00fa 4279     		ldrb	r2, [r0, #5]
 595 00fc 1202     		lsls	r2, r2, #8
 596 00fe 1A43     		orrs	r2, r3
 597 0100 8379     		ldrb	r3, [r0, #6]
 598 0102 1B04     		lsls	r3, r3, #16
 599 0104 1343     		orrs	r3, r2
 600 0106 1A00     		movs	r2, r3
 601 0108 C379     		ldrb	r3, [r0, #7]
 602 010a 1B06     		lsls	r3, r3, #24
 603 010c 1343     		orrs	r3, r2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 34


 604 010e 5D4D     		ldr	r5, .L55+24
 605 0110 2B60     		str	r3, [r5]
 502:main.c        ****                                 
 606              		.loc 1 502 0
 607 0112 2268     		ldr	r2, [r4]
 608 0114 5C4B     		ldr	r3, .L55+28
 609 0116 1A60     		str	r2, [r3]
 505:main.c        ****                                 
 610              		.loc 1 505 0
 611 0118 0020     		movs	r0, #0
 612 011a FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 613              	.LVL43:
 510:main.c        ****                                 if (distance < 0) {
 614              		.loc 1 510 0
 615 011e 2B68     		ldr	r3, [r5]
 616 0120 2268     		ldr	r2, [r4]
 617 0122 9B1A     		subs	r3, r3, r2
 618              	.LVL44:
 511:main.c        ****                                     distance = -distance;
 619              		.loc 1 511 0
 620 0124 00D5     		bpl	.L49
 512:main.c        ****                                 }
 621              		.loc 1 512 0
 622 0126 5B42     		rsbs	r3, r3, #0
 623              	.LVL45:
 624              	.L49:
 515:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 625              		.loc 1 515 0
 626 0128 322B     		cmp	r3, #50
 627 012a 0BDD     		ble	.L50
 516:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 628              		.loc 1 516 0
 629 012c DA17     		asrs	r2, r3, #31
 630 012e 0F21     		movs	r1, #15
 631 0130 0A40     		ands	r2, r1
 632 0132 D318     		adds	r3, r2, r3
 633              	.LVL46:
 634 0134 1B11     		asrs	r3, r3, #4
 635 0136 0D33     		adds	r3, r3, #13
 636 0138 FA22     		movs	r2, #250
 637 013a 9200     		lsls	r2, r2, #2
 638 013c 5343     		muls	r3, r2
 639 013e 5B4A     		ldr	r2, .L55+64
 640 0140 1360     		str	r3, [r2]
 641 0142 02E0     		b	.L51
 642              	.LVL47:
 643              	.L50:
 519:main.c        ****                                 }
 644              		.loc 1 519 0
 645 0144 0022     		movs	r2, #0
 646 0146 594B     		ldr	r3, .L55+64
 647              	.LVL48:
 648 0148 1A60     		str	r2, [r3]
 649              	.L51:
 523:main.c        ****                             }                                        
 650              		.loc 1 523 0
 651 014a 0022     		movs	r2, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 35


 652 014c 584B     		ldr	r3, .L55+68
 653 014e 1A60     		str	r2, [r3]
 654              	.L48:
 528:main.c        ****                             break;
 655              		.loc 1 528 0
 656 0150 484B     		ldr	r3, .L55+8
 657 0152 0822     		movs	r2, #8
 658 0154 9A56     		ldrsb	r2, [r3, r2]
 659 0156 4F4B     		ldr	r3, .L55+40
 660 0158 1A70     		strb	r2, [r3]
 529:main.c        ****                         
 661              		.loc 1 529 0
 662 015a 1BE0     		b	.L44
 663              	.LVL49:
 664              	.L46:
 533:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 665              		.loc 1 533 0
 666 015c 454C     		ldr	r4, .L55+8
 667              	.LVL50:
 668 015e 2179     		ldrb	r1, [r4, #4]
 669 0160 6379     		ldrb	r3, [r4, #5]
 670 0162 1B02     		lsls	r3, r3, #8
 671 0164 0B43     		orrs	r3, r1
 672 0166 1A00     		movs	r2, r3
 673              	.LVL51:
 674 0168 A079     		ldrb	r0, [r4, #6]
 675              	.LVL52:
 676 016a 0004     		lsls	r0, r0, #16
 677 016c 0300     		movs	r3, r0
 678 016e 1343     		orrs	r3, r2
 679 0170 E079     		ldrb	r0, [r4, #7]
 680 0172 0006     		lsls	r0, r0, #24
 681 0174 1843     		orrs	r0, r3
 682 0176 FFF7FEFF 		bl	Counter_1_WriteCounter
 683              	.LVL53:
 534:main.c        ****                             break;                                        
 684              		.loc 1 534 0
 685 017a 2379     		ldrb	r3, [r4, #4]
 686 017c 6279     		ldrb	r2, [r4, #5]
 687 017e 1202     		lsls	r2, r2, #8
 688 0180 1A43     		orrs	r2, r3
 689 0182 A379     		ldrb	r3, [r4, #6]
 690 0184 1B04     		lsls	r3, r3, #16
 691 0186 1343     		orrs	r3, r2
 692 0188 1A00     		movs	r2, r3
 693 018a E379     		ldrb	r3, [r4, #7]
 694 018c 1B06     		lsls	r3, r3, #24
 695 018e 1343     		orrs	r3, r2
 696 0190 3B4A     		ldr	r2, .L55+20
 697 0192 1360     		str	r3, [r2]
 698              	.L44:
 545:main.c        ****             
 699              		.loc 1 545 0
 700 0194 FFF7FEFF 		bl	GetPosition
 701              	.LVL54:
 702 0198 4649     		ldr	r1, .L55+72
 703 019a 0860     		str	r0, [r1]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 36


 548:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 704              		.loc 1 548 0
 705 019c 364B     		ldr	r3, .L55+12
 706 019e 0022     		movs	r2, #0
 707 01a0 1A70     		strb	r2, [r3]
 549:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 708              		.loc 1 549 0
 709 01a2 5A70     		strb	r2, [r3, #1]
 550:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 710              		.loc 1 550 0
 711 01a4 0232     		adds	r2, r2, #2
 712 01a6 9A70     		strb	r2, [r3, #2]
 551:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 713              		.loc 1 551 0
 714 01a8 DA70     		strb	r2, [r3, #3]
 552:main.c        ****             txMessage.msg.opcode          = opStatus;
 715              		.loc 1 552 0
 716 01aa 1F20     		movs	r0, #31
 717 01ac 1871     		strb	r0, [r3, #4]
 553:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 718              		.loc 1 553 0
 719 01ae 5A71     		strb	r2, [r3, #5]
 554:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 720              		.loc 1 554 0
 721 01b0 3B4A     		ldr	r2, .L55+52
 722 01b2 1278     		ldrb	r2, [r2]
 723 01b4 9A71     		strb	r2, [r3, #6]
 555:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 724              		.loc 1 555 0
 725 01b6 404A     		ldr	r2, .L55+76
 726 01b8 1278     		ldrb	r2, [r2]
 727 01ba DA71     		strb	r2, [r3, #7]
 556:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 728              		.loc 1 556 0
 729 01bc 2F4A     		ldr	r2, .L55+16
 730 01be 1288     		ldrh	r2, [r2]
 731 01c0 92B2     		uxth	r2, r2
 732 01c2 5A72     		strb	r2, [r3, #9]
 733 01c4 120A     		lsrs	r2, r2, #8
 734 01c6 9A72     		strb	r2, [r3, #10]
 557:main.c        ****             txMessage.msg.position        = Position;
 735              		.loc 1 557 0
 736 01c8 364A     		ldr	r2, .L55+56
 737 01ca 1278     		ldrb	r2, [r2]
 738 01cc 1A72     		strb	r2, [r3, #8]
 558:main.c        ****             txMessage.msg.pwm             = Output;
 739              		.loc 1 558 0
 740 01ce 0A68     		ldr	r2, [r1]
 741 01d0 5A73     		strb	r2, [r3, #13]
 742 01d2 100A     		lsrs	r0, r2, #8
 743 01d4 9873     		strb	r0, [r3, #14]
 744 01d6 100C     		lsrs	r0, r2, #16
 745 01d8 D873     		strb	r0, [r3, #15]
 746 01da 120E     		lsrs	r2, r2, #24
 747 01dc 1A74     		strb	r2, [r3, #16]
 559:main.c        ****             txMessage.msg.iterm           = iterm;
 748              		.loc 1 559 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 37


 749 01de 374A     		ldr	r2, .L55+80
 750 01e0 1268     		ldr	r2, [r2]
 751 01e2 92B2     		uxth	r2, r2
 752 01e4 5A74     		strb	r2, [r3, #17]
 753 01e6 120A     		lsrs	r2, r2, #8
 754 01e8 9A74     		strb	r2, [r3, #18]
 560:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 755              		.loc 1 560 0
 756 01ea 314A     		ldr	r2, .L55+68
 757 01ec 1078     		ldrb	r0, [r2]
 758 01ee D874     		strb	r0, [r3, #19]
 759 01f0 5078     		ldrb	r0, [r2, #1]
 760 01f2 1875     		strb	r0, [r3, #20]
 761 01f4 9078     		ldrb	r0, [r2, #2]
 762 01f6 5875     		strb	r0, [r3, #21]
 763 01f8 D278     		ldrb	r2, [r2, #3]
 764 01fa 9A75     		strb	r2, [r3, #22]
 561:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 765              		.loc 1 561 0
 766 01fc 304A     		ldr	r2, .L55+84
 767 01fe 1288     		ldrh	r2, [r2]
 768 0200 DA72     		strb	r2, [r3, #11]
 769 0202 120A     		lsrs	r2, r2, #8
 770 0204 1A73     		strb	r2, [r3, #12]
 562:main.c        ****             txMessage.msg.iterm_delay     = iterm_delay;
 771              		.loc 1 562 0
 772 0206 284A     		ldr	r2, .L55+60
 773 0208 2420     		movs	r0, #36
 774 020a 105C     		ldrb	r0, [r2, r0]
 775 020c D875     		strb	r0, [r3, #23]
 776 020e 2520     		movs	r0, #37
 777 0210 105C     		ldrb	r0, [r2, r0]
 778 0212 1876     		strb	r0, [r3, #24]
 779 0214 2620     		movs	r0, #38
 780 0216 105C     		ldrb	r0, [r2, r0]
 781 0218 5876     		strb	r0, [r3, #25]
 782 021a 2720     		movs	r0, #39
 783 021c 125C     		ldrb	r2, [r2, r0]
 784 021e 9A76     		strb	r2, [r3, #26]
 563:main.c        ****             
 785              		.loc 1 563 0
 786 0220 224A     		ldr	r2, .L55+64
 787 0222 1900     		movs	r1, r3
 788 0224 1078     		ldrb	r0, [r2]
 789 0226 D876     		strb	r0, [r3, #27]
 790 0228 5378     		ldrb	r3, [r2, #1]
 791 022a 0B77     		strb	r3, [r1, #28]
 792 022c 9378     		ldrb	r3, [r2, #2]
 793 022e 4B77     		strb	r3, [r1, #29]
 794 0230 D378     		ldrb	r3, [r2, #3]
 795 0232 8B77     		strb	r3, [r1, #30]
 796              	.LVL55:
 566:main.c        ****                 checksum += txMessage.buf[i]; 
 797              		.loc 1 566 0
 798 0234 0022     		movs	r2, #0
 799 0236 0023     		movs	r3, #0
 800 0238 05E0     		b	.L52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 38


 801              	.LVL56:
 802              	.L53:
 567:main.c        ****                 
 803              		.loc 1 567 0 discriminator 3
 804 023a 0F49     		ldr	r1, .L55+12
 805 023c C95C     		ldrb	r1, [r1, r3]
 806 023e 5218     		adds	r2, r2, r1
 807              	.LVL57:
 808 0240 D2B2     		uxtb	r2, r2
 809              	.LVL58:
 566:main.c        ****                 checksum += txMessage.buf[i]; 
 810              		.loc 1 566 0 discriminator 3
 811 0242 0133     		adds	r3, r3, #1
 812              	.LVL59:
 813 0244 DBB2     		uxtb	r3, r3
 814              	.LVL60:
 815              	.L52:
 566:main.c        ****                 checksum += txMessage.buf[i]; 
 816              		.loc 1 566 0 is_stmt 0 discriminator 1
 817 0246 1E2B     		cmp	r3, #30
 818 0248 F7D9     		bls	.L53
 570:main.c        ****                 
 819              		.loc 1 570 0 is_stmt 1
 820 024a 0B48     		ldr	r0, .L55+12
 821 024c 5242     		rsbs	r2, r2, #0
 822              	.LVL61:
 823 024e 0270     		strb	r2, [r0]
 574:main.c        **** 
 824              		.loc 1 574 0
 825 0250 1F21     		movs	r1, #31
 826 0252 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 827              	.LVL62:
 577:main.c        ****             
 828              		.loc 1 577 0
 829 0256 0122     		movs	r2, #1
 830 0258 054B     		ldr	r3, .L55+4
 831 025a 1A70     		strb	r2, [r3]
 580:main.c        ****                 ClearFault(fsNONE);
 832              		.loc 1 580 0
 833 025c 054B     		ldr	r3, .L55+8
 834 025e 5B7A     		ldrb	r3, [r3, #9]
 835 0260 002B     		cmp	r3, #0
 836 0262 02D0     		beq	.L37
 581:main.c        ****         
 837              		.loc 1 581 0
 838 0264 0020     		movs	r0, #0
 839 0266 FFF7FEFF 		bl	ClearFault
 840              	.LVL63:
 841              	.L37:
 591:main.c        ****     
 842              		.loc 1 591 0
 843              		@ sp needed
 844 026a 70BD     		pop	{r4, r5, r6, pc}
 845              	.L56:
 846              		.align	2
 847              	.L55:
 848 026c 24000740 		.word	1074200612
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 39


 849 0270 00000000 		.word	txMessageState
 850 0274 00000000 		.word	rxMessage
 851 0278 00000000 		.word	txMessage
 852 027c 00000000 		.word	ChecksumErrors
 853 0280 00000000 		.word	LastPosition
 854 0284 00000000 		.word	PID_Setpoint
 855 0288 00000000 		.word	PID_EffectiveSetpoint
 856 028c 00000000 		.word	PID_Was_Enabled
 857 0290 00000000 		.word	PID_Enabled
 858 0294 00000000 		.word	Jog
 859 0298 00000000 		.word	limitOutput
 860 029c 00000000 		.word	limitIterm
 861 02a0 00000000 		.word	ConfigState
 862 02a4 00000000 		.word	ConfigSequence
 863 02a8 00000000 		.word	.LANCHOR1
 864 02ac 00000000 		.word	iterm_delay
 865 02b0 00000000 		.word	iterm
 866 02b4 00000000 		.word	Position
 867 02b8 00000000 		.word	FaultState
 868 02bc 00000000 		.word	Output
 869 02c0 00000000 		.word	MotorCurrent
 870              		.cfi_endproc
 871              	.LFE35:
 872              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 873              		.section	.text.PID_Initialize,"ax",%progbits
 874              		.align	2
 875              		.global	PID_Initialize
 876              		.code	16
 877              		.thumb_func
 878              		.type	PID_Initialize, %function
 879              	PID_Initialize:
 880              	.LFB38:
 656:main.c        ****     
 881              		.loc 1 656 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 10B5     		push	{r4, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 4, -8
 888              		.cfi_offset 14, -4
 659:main.c        ****     LastPosition = Position;
 889              		.loc 1 659 0
 890 0002 FFF7FEFF 		bl	GetPosition
 891              	.LVL64:
 892 0006 064B     		ldr	r3, .L58
 893 0008 1860     		str	r0, [r3]
 660:main.c        ****     
 894              		.loc 1 660 0
 895 000a 1A68     		ldr	r2, [r3]
 896 000c 054B     		ldr	r3, .L58+4
 897 000e 1A60     		str	r2, [r3]
 664:main.c        ****     
 898              		.loc 1 664 0
 899 0010 1A68     		ldr	r2, [r3]
 900 0012 054B     		ldr	r3, .L58+8
 901 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 40


 668:main.c        **** }    
 902              		.loc 1 668 0
 903 0016 0022     		movs	r2, #0
 904 0018 044B     		ldr	r3, .L58+12
 905 001a 1A60     		str	r2, [r3]
 669:main.c        **** 
 906              		.loc 1 669 0
 907              		@ sp needed
 908 001c 10BD     		pop	{r4, pc}
 909              	.L59:
 910 001e C046     		.align	2
 911              	.L58:
 912 0020 00000000 		.word	Position
 913 0024 00000000 		.word	LastPosition
 914 0028 00000000 		.word	PID_EffectiveSetpoint
 915 002c 00000000 		.word	iterm
 916              		.cfi_endproc
 917              	.LFE38:
 918              		.size	PID_Initialize, .-PID_Initialize
 919              		.section	.text.PID_SetMode,"ax",%progbits
 920              		.align	2
 921              		.global	PID_SetMode
 922              		.code	16
 923              		.thumb_func
 924              		.type	PID_SetMode, %function
 925              	PID_SetMode:
 926              	.LFB39:
 681:main.c        ****     
 927              		.loc 1 681 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              	.LVL65:
 932 0000 10B5     		push	{r4, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 4, -8
 935              		.cfi_offset 14, -4
 683:main.c        ****     
 936              		.loc 1 683 0
 937 0002 441E     		subs	r4, r0, #1
 938 0004 6342     		rsbs	r3, r4, #0
 939 0006 5C41     		adcs	r4, r4, r3
 940 0008 E4B2     		uxtb	r4, r4
 941              	.LVL66:
 685:main.c        ****         /*we just went from manual to auto*/
 942              		.loc 1 685 0
 943 000a 0128     		cmp	r0, #1
 944 000c 06D1     		bne	.L61
 685:main.c        ****         /*we just went from manual to auto*/
 945              		.loc 1 685 0 is_stmt 0 discriminator 1
 946 000e 2823     		movs	r3, #40
 947 0010 044A     		ldr	r2, .L62
 948 0012 D35C     		ldrb	r3, [r2, r3]
 949 0014 002B     		cmp	r3, #0
 950 0016 01D1     		bne	.L61
 687:main.c        ****     }
 951              		.loc 1 687 0 is_stmt 1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 41


 952 0018 FFF7FEFF 		bl	PID_Initialize
 953              	.LVL67:
 954              	.L61:
 690:main.c        **** } 
 955              		.loc 1 690 0
 956 001c 2823     		movs	r3, #40
 957 001e 014A     		ldr	r2, .L62
 958 0020 D454     		strb	r4, [r2, r3]
 691:main.c        **** 
 959              		.loc 1 691 0
 960              		@ sp needed
 961              	.LVL68:
 962 0022 10BD     		pop	{r4, pc}
 963              	.L63:
 964              		.align	2
 965              	.L62:
 966 0024 00000000 		.word	.LANCHOR1
 967              		.cfi_endproc
 968              	.LFE39:
 969              		.size	PID_SetMode, .-PID_SetMode
 970              		.section	.text.runRateGroup1_PID,"ax",%progbits
 971              		.align	2
 972              		.global	runRateGroup1_PID
 973              		.code	16
 974              		.thumb_func
 975              		.type	runRateGroup1_PID, %function
 976              	runRateGroup1_PID:
 977              	.LFB40:
 703:main.c        ****      
 978              		.loc 1 703 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982 0000 10B5     		push	{r4, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 4, -8
 985              		.cfi_offset 14, -4
 713:main.c        ****         
 986              		.loc 1 713 0
 987 0002 4D4B     		ldr	r3, .L79
 988 0004 1B68     		ldr	r3, [r3]
 989 0006 0133     		adds	r3, r3, #1
 990 0008 0024     		movs	r4, #0
 991 000a 4C4A     		ldr	r2, .L79+4
 992 000c 1068     		ldr	r0, [r2]
 993 000e 5168     		ldr	r1, [r2, #4]
 994 0010 0029     		cmp	r1, #0
 995 0012 03D1     		bne	.L78
 996 0014 A142     		cmp	r1, r4
 997 0016 0AD1     		bne	.L65
 998 0018 9842     		cmp	r0, r3
 999 001a 08D9     		bls	.L65
 1000              	.L78:
 716:main.c        ****         PID_Enabled = false;
 1001              		.loc 1 716 0
 1002 001c 0020     		movs	r0, #0
 1003 001e FFF7FEFF 		bl	PWM_Set
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 42


 1004              	.LVL69:
 717:main.c        ****         
 1005              		.loc 1 717 0
 1006 0022 0023     		movs	r3, #0
 1007 0024 464A     		ldr	r2, .L79+8
 1008 0026 1370     		strb	r3, [r2]
 721:main.c        **** 
 1009              		.loc 1 721 0
 1010 0028 464A     		ldr	r2, .L79+12
 1011 002a 1370     		strb	r3, [r2]
 1012 002c 83E0     		b	.L64
 1013              	.L65:
 724:main.c        ****         
 1014              		.loc 1 724 0
 1015 002e 464B     		ldr	r3, .L79+16
 1016 0030 1B78     		ldrb	r3, [r3]
 1017 0032 022B     		cmp	r3, #2
 1018 0034 7CD1     		bne	.L68
 728:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1019              		.loc 1 728 0
 1020 0036 0620     		movs	r0, #6
 1021 0038 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1022              	.LVL70:
 729:main.c        **** 
 1023              		.loc 1 729 0
 1024 003c 0620     		movs	r0, #6
 1025 003e FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1026              	.LVL71:
 732:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1027              		.loc 1 732 0
 1028 0042 424B     		ldr	r3, .L79+20
 1029 0044 1B78     		ldrb	r3, [r3]
 1030 0046 002B     		cmp	r3, #0
 1031 0048 07D1     		bne	.L69
 732:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1032              		.loc 1 732 0 is_stmt 0 discriminator 1
 1033 004a 3D4A     		ldr	r2, .L79+8
 1034 004c 1278     		ldrb	r2, [r2]
 1035 004e 002A     		cmp	r2, #0
 1036 0050 03D0     		beq	.L69
 733:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 1037              		.loc 1 733 0 is_stmt 1
 1038 0052 0120     		movs	r0, #1
 1039 0054 FFF7FEFF 		bl	PID_SetMode
 1040              	.LVL72:
 1041 0058 08E0     		b	.L70
 1042              	.L69:
 734:main.c        ****             PID_SetMode(PID_MANUAL);                
 1043              		.loc 1 734 0
 1044 005a 394A     		ldr	r2, .L79+8
 1045 005c 1278     		ldrb	r2, [r2]
 1046 005e 002A     		cmp	r2, #0
 1047 0060 04D1     		bne	.L70
 734:main.c        ****             PID_SetMode(PID_MANUAL);                
 1048              		.loc 1 734 0 is_stmt 0 discriminator 1
 1049 0062 002B     		cmp	r3, #0
 1050 0064 02D0     		beq	.L70
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 43


 735:main.c        ****         } else {
 1051              		.loc 1 735 0 is_stmt 1
 1052 0066 0020     		movs	r0, #0
 1053 0068 FFF7FEFF 		bl	PID_SetMode
 1054              	.LVL73:
 1055              	.L70:
 741:main.c        ****         
 1056              		.loc 1 741 0
 1057 006c 344B     		ldr	r3, .L79+8
 1058 006e 1B78     		ldrb	r3, [r3]
 1059 0070 364A     		ldr	r2, .L79+20
 1060 0072 1370     		strb	r3, [r2]
 756:main.c        ****             
 1061              		.loc 1 756 0
 1062 0074 002B     		cmp	r3, #0
 1063 0076 51D0     		beq	.L71
 758:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 1064              		.loc 1 758 0
 1065 0078 354B     		ldr	r3, .L79+24
 1066 007a 1B78     		ldrb	r3, [r3]
 1067 007c 002B     		cmp	r3, #0
 1068 007e 04D1     		bne	.L72
 759:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1069              		.loc 1 759 0
 1070 0080 344B     		ldr	r3, .L79+28
 1071 0082 1A68     		ldr	r2, [r3]
 1072 0084 344B     		ldr	r3, .L79+32
 1073 0086 1A60     		str	r2, [r3]
 1074 0088 16E0     		b	.L73
 1075              	.L72:
 760:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 1076              		.loc 1 760 0
 1077 008a 334A     		ldr	r2, .L79+32
 1078 008c 1168     		ldr	r1, [r2]
 1079 008e 314A     		ldr	r2, .L79+28
 1080 0090 1068     		ldr	r0, [r2]
 1081 0092 0A1A     		subs	r2, r1, r0
 1082 0094 D417     		asrs	r4, r2, #31
 1083 0096 1219     		adds	r2, r2, r4
 1084 0098 6240     		eors	r2, r4
 1085 009a 5C00     		lsls	r4, r3, #1
 1086 009c A242     		cmp	r2, r4
 1087 009e 02DC     		bgt	.L74
 761:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1088              		.loc 1 761 0
 1089 00a0 2D4B     		ldr	r3, .L79+32
 1090 00a2 1860     		str	r0, [r3]
 1091 00a4 08E0     		b	.L73
 1092              	.L74:
 762:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1093              		.loc 1 762 0
 1094 00a6 8142     		cmp	r1, r0
 1095 00a8 03DA     		bge	.L75
 763:main.c        ****             } else {
 1096              		.loc 1 763 0
 1097 00aa CB18     		adds	r3, r1, r3
 1098 00ac 2A4A     		ldr	r2, .L79+32
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 44


 1099 00ae 1360     		str	r3, [r2]
 1100 00b0 02E0     		b	.L73
 1101              	.L75:
 765:main.c        ****             }
 1102              		.loc 1 765 0
 1103 00b2 CB1A     		subs	r3, r1, r3
 1104 00b4 284A     		ldr	r2, .L79+32
 1105 00b6 1360     		str	r3, [r2]
 1106              	.L73:
 769:main.c        ****             
 1107              		.loc 1 769 0
 1108 00b8 FFF7FEFF 		bl	GetPosition
 1109              	.LVL74:
 1110 00bc 274B     		ldr	r3, .L79+36
 1111 00be 1860     		str	r0, [r3]
 772:main.c        ****             
 1112              		.loc 1 772 0
 1113 00c0 1968     		ldr	r1, [r3]
 1114 00c2 254B     		ldr	r3, .L79+32
 1115 00c4 1868     		ldr	r0, [r3]
 1116 00c6 FFF7FEFF 		bl	PID_UpdateValues
 1117              	.LVL75:
 1118 00ca 254B     		ldr	r3, .L79+40
 1119 00cc 1860     		str	r0, [r3]
 775:main.c        ****             
 1120              		.loc 1 775 0
 1121 00ce 1868     		ldr	r0, [r3]
 1122 00d0 FFF7FEFF 		bl	PWM_Set
 1123              	.LVL76:
 778:main.c        ****                 
 1124              		.loc 1 778 0
 1125 00d4 194B     		ldr	r3, .L79+4
 1126 00d6 1B7C     		ldrb	r3, [r3, #16]
 1127 00d8 002B     		cmp	r3, #0
 1128 00da 2CD0     		beq	.L64
 780:main.c        ****                     
 1129              		.loc 1 780 0
 1130 00dc 1F4B     		ldr	r3, .L79+36
 1131 00de 1A68     		ldr	r2, [r3]
 1132 00e0 1C4B     		ldr	r3, .L79+28
 1133 00e2 1B68     		ldr	r3, [r3]
 1134 00e4 9A42     		cmp	r2, r3
 1135 00e6 15D1     		bne	.L76
 785:main.c        ****                         
 1136              		.loc 1 785 0
 1137 00e8 144B     		ldr	r3, .L79+4
 1138 00ea 5B8D     		ldrh	r3, [r3, #42]
 1139 00ec 1E2B     		cmp	r3, #30
 1140 00ee 07D1     		bne	.L77
 789:main.c        ****                         
 1141              		.loc 1 789 0
 1142 00f0 124B     		ldr	r3, .L79+4
 1143 00f2 DA6A     		ldr	r2, [r3, #44]
 1144 00f4 196A     		ldr	r1, [r3, #32]
 1145 00f6 521A     		subs	r2, r2, r1
 1146 00f8 5A62     		str	r2, [r3, #36]
 792:main.c        ****                         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 45


 1147              		.loc 1 792 0
 1148 00fa 0022     		movs	r2, #0
 1149 00fc 1A74     		strb	r2, [r3, #16]
 1150 00fe 1AE0     		b	.L64
 1151              	.L77:
 798:main.c        **** 
 1152              		.loc 1 798 0
 1153 0100 0133     		adds	r3, r3, #1
 1154 0102 9BB2     		uxth	r3, r3
 1155 0104 0D4A     		ldr	r2, .L79+4
 1156 0106 5385     		strh	r3, [r2, #42]
 803:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 1157              		.loc 1 803 0
 1158 0108 012B     		cmp	r3, #1
 1159 010a 14D1     		bne	.L64
 804:main.c        ****                         }                    
 1160              		.loc 1 804 0
 1161 010c 9069     		ldr	r0, [r2, #24]
 1162 010e D169     		ldr	r1, [r2, #28]
 1163 0110 D062     		str	r0, [r2, #44]
 1164 0112 10E0     		b	.L64
 1165              	.L76:
 811:main.c        ****                 }
 1166              		.loc 1 811 0
 1167 0114 0022     		movs	r2, #0
 1168 0116 094B     		ldr	r3, .L79+4
 1169 0118 5A85     		strh	r2, [r3, #42]
 1170 011a 0CE0     		b	.L64
 1171              	.L71:
 820:main.c        ****             
 1172              		.loc 1 820 0
 1173 011c 094B     		ldr	r3, .L79+12
 1174 011e 1B78     		ldrb	r3, [r3]
 1175 0120 5BB2     		sxtb	r3, r3
 1176 0122 DB00     		lsls	r3, r3, #3
 1177 0124 0E4A     		ldr	r2, .L79+40
 1178 0126 1360     		str	r3, [r2]
 823:main.c        ****         }        
 1179              		.loc 1 823 0
 1180 0128 1068     		ldr	r0, [r2]
 1181 012a FFF7FEFF 		bl	PWM_Set
 1182              	.LVL77:
 1183 012e 02E0     		b	.L64
 1184              	.L68:
 829:main.c        ****     }
 1185              		.loc 1 829 0
 1186 0130 0020     		movs	r0, #0
 1187 0132 FFF7FEFF 		bl	PWM_Set
 1188              	.LVL78:
 1189              	.L64:
 831:main.c        **** 
 1190              		.loc 1 831 0
 1191              		@ sp needed
 1192 0136 10BD     		pop	{r4, pc}
 1193              	.L80:
 1194              		.align	2
 1195              	.L79:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 46


 1196 0138 00000000 		.word	LastMessageTimeSeconds
 1197 013c 00000000 		.word	.LANCHOR1
 1198 0140 00000000 		.word	PID_Enabled
 1199 0144 00000000 		.word	Jog
 1200 0148 00000000 		.word	ConfigState
 1201 014c 00000000 		.word	PID_Was_Enabled
 1202 0150 00000000 		.word	PID_EffSetDelta
 1203 0154 00000000 		.word	PID_Setpoint
 1204 0158 00000000 		.word	PID_EffectiveSetpoint
 1205 015c 00000000 		.word	Position
 1206 0160 00000000 		.word	Output
 1207              		.cfi_endproc
 1208              	.LFE40:
 1209              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1210              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1211              		.align	2
 1212              		.global	BRMS_Interrupt
 1213              		.code	16
 1214              		.thumb_func
 1215              		.type	BRMS_Interrupt, %function
 1216              	BRMS_Interrupt:
 1217              	.LFB42:
1014:main.c        ****     
 1218              		.loc 1 1014 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 0, uses_anonymous_args = 0
 1222 0000 70B5     		push	{r4, r5, r6, lr}
 1223              		.cfi_def_cfa_offset 16
 1224              		.cfi_offset 4, -16
 1225              		.cfi_offset 5, -12
 1226              		.cfi_offset 6, -8
 1227              		.cfi_offset 14, -4
1025:main.c        **** 
 1228              		.loc 1 1025 0
 1229 0002 0220     		movs	r0, #2
 1230 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
 1231              	.LVL79:
1027:main.c        ****     
 1232              		.loc 1 1027 0
 1233 0008 0120     		movs	r0, #1
 1234 000a FFF7FEFF 		bl	PROBE_Write
 1235              	.LVL80:
1030:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 1236              		.loc 1 1030 0
 1237 000e 2A4B     		ldr	r3, .L90
 1238 0010 9C69     		ldr	r4, [r3, #24]
 1239 0012 DD69     		ldr	r5, [r3, #28]
 1240 0014 C820     		movs	r0, #200
 1241 0016 0021     		movs	r1, #0
 1242 0018 2418     		adds	r4, r4, r0
 1243 001a 4D41     		adcs	r5, r5, r1
 1244 001c 9C61     		str	r4, [r3, #24]
 1245 001e DD61     		str	r5, [r3, #28]
1031:main.c        ****     
 1246              		.loc 1 1031 0
 1247 0020 1C6B     		ldr	r4, [r3, #48]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 47


 1248 0022 5D6B     		ldr	r5, [r3, #52]
 1249 0024 0019     		adds	r0, r0, r4
 1250 0026 6941     		adcs	r1, r1, r5
 1251 0028 1863     		str	r0, [r3, #48]
 1252 002a 5963     		str	r1, [r3, #52]
1034:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1253              		.loc 1 1034 0
 1254 002c 196B     		ldr	r1, [r3, #48]
 1255 002e 5A6B     		ldr	r2, [r3, #52]
 1256 0030 002A     		cmp	r2, #0
 1257 0032 04D1     		bne	.L88
 1258 0034 16D1     		bne	.L82
 1259 0036 FA23     		movs	r3, #250
 1260 0038 9B00     		lsls	r3, r3, #2
 1261 003a 9942     		cmp	r1, r3
 1262 003c 12D9     		bls	.L82
 1263              	.L88:
1035:main.c        ****         UptimeMilliseconds += 1;
 1264              		.loc 1 1035 0
 1265 003e 1E4B     		ldr	r3, .L90
 1266 0040 0020     		movs	r0, #0
 1267 0042 0021     		movs	r1, #0
 1268 0044 1863     		str	r0, [r3, #48]
 1269 0046 5963     		str	r1, [r3, #52]
1036:main.c        ****         UptimeMillisecondsAccumulator += 1;
 1270              		.loc 1 1036 0
 1271 0048 9C6B     		ldr	r4, [r3, #56]
 1272 004a DD6B     		ldr	r5, [r3, #60]
 1273 004c 0120     		movs	r0, #1
 1274 004e 0021     		movs	r1, #0
 1275 0050 2418     		adds	r4, r4, r0
 1276 0052 4D41     		adcs	r5, r5, r1
 1277 0054 9C63     		str	r4, [r3, #56]
 1278 0056 DD63     		str	r5, [r3, #60]
1037:main.c        ****     }
 1279              		.loc 1 1037 0
 1280 0058 1C6C     		ldr	r4, [r3, #64]
 1281 005a 5D6C     		ldr	r5, [r3, #68]
 1282 005c 0019     		adds	r0, r0, r4
 1283 005e 6941     		adcs	r1, r1, r5
 1284 0060 1864     		str	r0, [r3, #64]
 1285 0062 5964     		str	r1, [r3, #68]
 1286              	.L82:
1041:main.c        ****         UptimeMillisecondsAccumulator = 0;
 1287              		.loc 1 1041 0
 1288 0064 144B     		ldr	r3, .L90
 1289 0066 196C     		ldr	r1, [r3, #64]
 1290 0068 5A6C     		ldr	r2, [r3, #68]
 1291 006a 002A     		cmp	r2, #0
 1292 006c 04D1     		bne	.L89
 1293 006e 10D1     		bne	.L84
 1294 0070 FA23     		movs	r3, #250
 1295 0072 9B00     		lsls	r3, r3, #2
 1296 0074 9942     		cmp	r1, r3
 1297 0076 0CD9     		bls	.L84
 1298              	.L89:
1042:main.c        ****         UptimeSeconds += 1;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 48


 1299              		.loc 1 1042 0
 1300 0078 0F4B     		ldr	r3, .L90
 1301 007a 0020     		movs	r0, #0
 1302 007c 0021     		movs	r1, #0
 1303 007e 1864     		str	r0, [r3, #64]
 1304 0080 5964     		str	r1, [r3, #68]
1043:main.c        ****     }
 1305              		.loc 1 1043 0
 1306 0082 1C68     		ldr	r4, [r3]
 1307 0084 5D68     		ldr	r5, [r3, #4]
 1308 0086 0120     		movs	r0, #1
 1309 0088 0021     		movs	r1, #0
 1310 008a 0019     		adds	r0, r0, r4
 1311 008c 6941     		adcs	r1, r1, r5
 1312 008e 1860     		str	r0, [r3]
 1313 0090 5960     		str	r1, [r3, #4]
 1314              	.L84:
1047:main.c        **** 
 1315              		.loc 1 1047 0
 1316 0092 094A     		ldr	r2, .L90
 1317 0094 936C     		ldr	r3, [r2, #72]
 1318 0096 0133     		adds	r3, r3, #1
 1319 0098 9364     		str	r3, [r2, #72]
1067:main.c        ****         
 1320              		.loc 1 1067 0
 1321 009a DA07     		lsls	r2, r3, #31
 1322 009c 02D5     		bpl	.L86
1072:main.c        ****         
 1323              		.loc 1 1072 0
 1324 009e FFF7FEFF 		bl	runRateGroup1_PID
 1325              	.LVL81:
 1326 00a2 05E0     		b	.L87
 1327              	.L86:
1074:main.c        ****         
 1328              		.loc 1 1074 0
 1329 00a4 9A07     		lsls	r2, r3, #30
 1330 00a6 03D4     		bmi	.L87
1079:main.c        ****         
 1331              		.loc 1 1079 0
 1332 00a8 5B07     		lsls	r3, r3, #29
 1333 00aa 01D5     		bpl	.L87
1082:main.c        ****         
 1334              		.loc 1 1082 0
 1335 00ac FFF7FEFF 		bl	runRateGroup3_SPI
 1336              	.LVL82:
 1337              	.L87:
1095:main.c        ****    
 1338              		.loc 1 1095 0
 1339 00b0 0020     		movs	r0, #0
 1340 00b2 FFF7FEFF 		bl	PROBE_Write
 1341              	.LVL83:
1097:main.c        **** 
 1342              		.loc 1 1097 0
 1343              		@ sp needed
 1344 00b6 70BD     		pop	{r4, r5, r6, pc}
 1345              	.L91:
 1346              		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 49


 1347              	.L90:
 1348 00b8 00000000 		.word	.LANCHOR1
 1349              		.cfi_endproc
 1350              	.LFE42:
 1351              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1352              		.section	.text.main,"ax",%progbits
 1353              		.align	2
 1354              		.global	main
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	main, %function
 1358              	main:
 1359              	.LFB41:
 843:main.c        ****     
 1360              		.loc 1 843 0
 1361              		.cfi_startproc
 1362              		@ Volatile: function does not return.
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365 0000 70B5     		push	{r4, r5, r6, lr}
 1366              		.cfi_def_cfa_offset 16
 1367              		.cfi_offset 4, -16
 1368              		.cfi_offset 5, -12
 1369              		.cfi_offset 6, -8
 1370              		.cfi_offset 14, -4
 851:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1371              		.loc 1 851 0
 1372 0002 0120     		movs	r0, #1
 1373 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1374              	.LVL84:
 852:main.c        **** 
 1375              		.loc 1 852 0
 1376 0008 0120     		movs	r0, #1
 1377 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1378              	.LVL85:
 860:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1379              		.loc 1 860 0
 1380 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1381              	.LVL86:
 861:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1382              		.loc 1 861 0
 1383 0012 3948     		ldr	r0, .L97
 1384 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1385              	.LVL87:
 862:main.c        **** 
 1386              		.loc 1 862 0
 1387 0018 0220     		movs	r0, #2
 1388 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1389              	.LVL88:
 865:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1390              		.loc 1 865 0
 1391 001e 3748     		ldr	r0, .L97+4
 1392 0020 FFF7FEFF 		bl	isr_home_StartEx
 1393              	.LVL89:
 866:main.c        **** 
 1394              		.loc 1 866 0
 1395 0024 0320     		movs	r0, #3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 50


 1396 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1397              	.LVL90:
 869:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1398              		.loc 1 869 0
 1399 002a 3548     		ldr	r0, .L97+8
 1400 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1401              	.LVL91:
 870:main.c        ****     
 1402              		.loc 1 870 0
 1403 0030 0320     		movs	r0, #3
 1404 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1405              	.LVL92:
 873:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 1406              		.loc 1 873 0
 1407 0036 3348     		ldr	r0, .L97+12
 1408 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1409              	.LVL93:
 874:main.c        **** 
 1410              		.loc 1 874 0
 1411 003c 0320     		movs	r0, #3
 1412 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1413              	.LVL94:
 877:main.c        ****     
 1414              		.loc 1 877 0
 1415              		.syntax divided
 1416              	@ 877 "main.c" 1
 1417 0042 62B6     		CPSIE   i
 1418              	@ 0 "" 2
 906:main.c        ****     
 1419              		.loc 1 906 0
 1420              		.thumb
 1421              		.syntax unified
 1422 0044 FFF7FEFF 		bl	I2C_Start
 1423              	.LVL95:
 911:main.c        ****     SPI_1_Start();
 1424              		.loc 1 911 0
 1425 0048 6420     		movs	r0, #100
 1426 004a FFF7FEFF 		bl	CyDelay
 1427              	.LVL96:
 912:main.c        ****     
 1428              		.loc 1 912 0
 1429 004e FFF7FEFF 		bl	SPI_1_Start
 1430              	.LVL97:
 916:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1431              		.loc 1 916 0
 1432 0052 FFF7FEFF 		bl	PWM_1_Start
 1433              	.LVL98:
 917:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);   
 1434              		.loc 1 917 0
 1435 0056 C820     		movs	r0, #200
 1436 0058 C000     		lsls	r0, r0, #3
 1437 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1438              	.LVL99:
 918:main.c        ****     
 1439              		.loc 1 918 0
 1440 005e 0020     		movs	r0, #0
 1441 0060 FFF7FEFF 		bl	PWM_Set
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 51


 1442              	.LVL100:
 921:main.c        ****     
 1443              		.loc 1 921 0
 1444 0064 0024     		movs	r4, #0
 1445 0066 284B     		ldr	r3, .L97+16
 1446 0068 1C70     		strb	r4, [r3]
 924:main.c        ****    
 1447              		.loc 1 924 0
 1448 006a 284B     		ldr	r3, .L97+20
 1449 006c 1C70     		strb	r4, [r3]
 927:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1450              		.loc 1 927 0
 1451 006e FFF7FEFF 		bl	Counter_1_Start
 1452              	.LVL101:
 928:main.c        ****     LastPosition = ENCODER_MAX;
 1453              		.loc 1 928 0
 1454 0072 274D     		ldr	r5, .L97+24
 1455 0074 2800     		movs	r0, r5
 1456 0076 FFF7FEFF 		bl	Counter_1_WriteCounter
 1457              	.LVL102:
 929:main.c        ****     
 1458              		.loc 1 929 0
 1459 007a 264B     		ldr	r3, .L97+28
 1460 007c 1D60     		str	r5, [r3]
 932:main.c        ****     Index_Counter_1_WriteCounter(0);
 1461              		.loc 1 932 0
 1462 007e FFF7FEFF 		bl	Index_Counter_1_Start
 1463              	.LVL103:
 933:main.c        ****      
 1464              		.loc 1 933 0
 1465 0082 0020     		movs	r0, #0
 1466 0084 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1467              	.LVL104:
 936:main.c        ****     ConfigSequence = 0;
 1468              		.loc 1 936 0
 1469 0088 0122     		movs	r2, #1
 1470 008a 234B     		ldr	r3, .L97+32
 1471 008c 1A70     		strb	r2, [r3]
 937:main.c        ****     ChecksumErrors = 0;
 1472              		.loc 1 937 0
 1473 008e 234B     		ldr	r3, .L97+36
 1474 0090 1C70     		strb	r4, [r3]
 938:main.c        ****     
 1475              		.loc 1 938 0
 1476 0092 234B     		ldr	r3, .L97+40
 1477 0094 1C80     		strh	r4, [r3]
 942:main.c        ****     PID_SetMode(PID_MANUAL);
 1478              		.loc 1 942 0
 1479 0096 FFF7FEFF 		bl	PID_Initialize
 1480              	.LVL105:
 943:main.c        ****     
 1481              		.loc 1 943 0
 1482 009a 0020     		movs	r0, #0
 1483 009c FFF7FEFF 		bl	PID_SetMode
 1484              	.LVL106:
 946:main.c        ****     limitIterm = 800;
 1485              		.loc 1 946 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 52


 1486 00a0 C823     		movs	r3, #200
 1487 00a2 9B00     		lsls	r3, r3, #2
 1488 00a4 1F4A     		ldr	r2, .L97+44
 1489 00a6 1380     		strh	r3, [r2]
 947:main.c        ****     
 1490              		.loc 1 947 0
 1491 00a8 1F4A     		ldr	r2, .L97+48
 1492 00aa 1380     		strh	r3, [r2]
 950:main.c        ****     PID_EffectiveSetpoint = 0;
 1493              		.loc 1 950 0
 1494 00ac 1F4B     		ldr	r3, .L97+52
 1495 00ae 1C60     		str	r4, [r3]
 951:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1496              		.loc 1 951 0
 1497 00b0 1F4B     		ldr	r3, .L97+56
 1498 00b2 1C60     		str	r4, [r3]
 952:main.c        ****     PID_Was_Enabled       = false;
 1499              		.loc 1 952 0
 1500 00b4 FA22     		movs	r2, #250
 1501 00b6 1F4B     		ldr	r3, .L97+60
 1502 00b8 1A70     		strb	r2, [r3]
 953:main.c        ****     PID_Enabled           = false;
 1503              		.loc 1 953 0
 1504 00ba 1F4B     		ldr	r3, .L97+64
 1505 00bc 0022     		movs	r2, #0
 1506 00be 1A70     		strb	r2, [r3]
 954:main.c        ****     PWM_Set(PWM_SET_NEUTRAL);
 1507              		.loc 1 954 0
 1508 00c0 1E4B     		ldr	r3, .L97+68
 1509 00c2 1A70     		strb	r2, [r3]
 955:main.c        ****   
 1510              		.loc 1 955 0
 1511 00c4 0020     		movs	r0, #0
 1512 00c6 FFF7FEFF 		bl	PWM_Set
 1513              	.LVL107:
 959:main.c        ****     } else {
 1514              		.loc 1 959 0
 1515 00ca 0020     		movs	r0, #0
 1516 00cc FFF7FEFF 		bl	EncoderDirection_Write
 1517              	.LVL108:
 1518              	.L96:
 971:main.c        ****         
 1519              		.loc 1 971 0
 1520 00d0 FFF7FEFF 		bl	MotorCurrentRead
 1521              	.LVL109:
 974:main.c        ****             LED_Write(1);
 1522              		.loc 1 974 0
 1523 00d4 1A4B     		ldr	r3, .L97+72
 1524 00d6 1A68     		ldr	r2, [r3]
 1525 00d8 5B68     		ldr	r3, [r3, #4]
 1526 00da 0123     		movs	r3, #1
 1527 00dc 1342     		tst	r3, r2
 1528 00de 03D0     		beq	.L93
 975:main.c        ****         } else {
 1529              		.loc 1 975 0
 1530 00e0 0120     		movs	r0, #1
 1531 00e2 FFF7FEFF 		bl	LED_Write
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 53


 1532              	.LVL110:
 1533 00e6 02E0     		b	.L95
 1534              	.L93:
 977:main.c        ****         } 
 1535              		.loc 1 977 0
 1536 00e8 0020     		movs	r0, #0
 1537 00ea FFF7FEFF 		bl	LED_Write
 1538              	.LVL111:
 1539              	.L95:
 982:main.c        ****         
 1540              		.loc 1 982 0
 1541 00ee 0A20     		movs	r0, #10
 1542 00f0 FFF7FEFF 		bl	CyDelay
 1543              	.LVL112:
 995:main.c        ****       
 1544              		.loc 1 995 0
 1545 00f4 ECE7     		b	.L96
 1546              	.L98:
 1547 00f6 C046     		.align	2
 1548              	.L97:
 1549 00f8 00000000 		.word	BRMS_Interrupt
 1550 00fc 00000000 		.word	HomeIsrHandler
 1551 0100 00000000 		.word	RSTIsrHandler
 1552 0104 00000000 		.word	SPI_SS_IsrHandler
 1553 0108 00000000 		.word	Jog
 1554 010c 00000000 		.word	.LANCHOR0
 1555 0110 FFFFFF00 		.word	16777215
 1556 0114 00000000 		.word	LastPosition
 1557 0118 00000000 		.word	ConfigState
 1558 011c 00000000 		.word	ConfigSequence
 1559 0120 00000000 		.word	ChecksumErrors
 1560 0124 00000000 		.word	limitOutput
 1561 0128 00000000 		.word	limitIterm
 1562 012c 00000000 		.word	PID_Setpoint
 1563 0130 00000000 		.word	PID_EffectiveSetpoint
 1564 0134 00000000 		.word	PID_EffSetDelta
 1565 0138 00000000 		.word	PID_Was_Enabled
 1566 013c 00000000 		.word	PID_Enabled
 1567 0140 00000000 		.word	.LANCHOR1
 1568              		.cfi_endproc
 1569              	.LFE41:
 1570              		.size	main, .-main
 1571              		.comm	txMessageState,1,1
 1572              		.comm	txMessage,31,4
 1573              		.comm	rxMessage,31,4
 1574              		.comm	LastMessageTimeSeconds,4,4
 1575              		.comm	CurrentI2Cinbuf,20,4
 1576              		.comm	MotorCurrent,2,2
 1577              		.comm	ChecksumErrors,2,2
 1578              		.comm	ConfigSequence,1,1
 1579              		.comm	FaultState,1,1
 1580              		.comm	ConfigState,1,1
 1581              		.global	UptimeSeconds
 1582              		.global	UptimeMillisecondsAccumulator
 1583              		.global	UptimeMilliseconds
 1584              		.global	UptimeMicrosecondsAccumulator
 1585              		.global	UptimeMicroseconds
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 54


 1586              		.global	NewCommandedMove
 1587              		.global	LastMoveTimeUsec
 1588              		.global	LastMoveStableCount
 1589              		.global	LastMoveEndTimeUsec
 1590              		.global	LastMoveStartTimeUsec
 1591              		.global	homingDone
 1592              		.comm	limitIterm,2,2
 1593              		.comm	limitOutput,2,2
 1594              		.comm	Output,4,4
 1595              		.comm	LastPosition,4,4
 1596              		.comm	Position,4,4
 1597              		.comm	lastTime,4,4
 1598              		.comm	PID_EffSetDelta,1,1
 1599              		.comm	PID_EffectiveSetpoint,4,4
 1600              		.comm	PID_Setpoint,4,4
 1601              		.comm	PID_Was_Enabled,1,1
 1602              		.comm	PID_Enabled,1,1
 1603              		.comm	Jog,1,1
 1604              		.global	inAuto
 1605              		.data
 1606              		.set	.LANCHOR0,. + 0
 1607              		.type	homingDone, %object
 1608              		.size	homingDone, 1
 1609              	homingDone:
 1610 0000 01       		.byte	1
 1611              		.bss
 1612              		.align	3
 1613              		.set	.LANCHOR1,. + 0
 1614              		.type	UptimeSeconds, %object
 1615              		.size	UptimeSeconds, 8
 1616              	UptimeSeconds:
 1617 0000 00000000 		.space	8
 1617      00000000 
 1618              		.type	RawPosition.7291, %object
 1619              		.size	RawPosition.7291, 4
 1620              	RawPosition.7291:
 1621 0008 00000000 		.space	4
 1622              		.type	result.7292, %object
 1623              		.size	result.7292, 4
 1624              	result.7292:
 1625 000c 00000000 		.space	4
 1626              		.type	NewCommandedMove, %object
 1627              		.size	NewCommandedMove, 1
 1628              	NewCommandedMove:
 1629 0010 00       		.space	1
 1630 0011 00000000 		.space	7
 1630      000000
 1631              		.type	UptimeMicroseconds, %object
 1632              		.size	UptimeMicroseconds, 8
 1633              	UptimeMicroseconds:
 1634 0018 00000000 		.space	8
 1634      00000000 
 1635              		.type	LastMoveStartTimeUsec, %object
 1636              		.size	LastMoveStartTimeUsec, 4
 1637              	LastMoveStartTimeUsec:
 1638 0020 00000000 		.space	4
 1639              		.type	LastMoveTimeUsec, %object
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 55


 1640              		.size	LastMoveTimeUsec, 4
 1641              	LastMoveTimeUsec:
 1642 0024 00000000 		.space	4
 1643              		.type	inAuto, %object
 1644              		.size	inAuto, 1
 1645              	inAuto:
 1646 0028 00       		.space	1
 1647 0029 00       		.space	1
 1648              		.type	LastMoveStableCount, %object
 1649              		.size	LastMoveStableCount, 2
 1650              	LastMoveStableCount:
 1651 002a 0000     		.space	2
 1652              		.type	LastMoveEndTimeUsec, %object
 1653              		.size	LastMoveEndTimeUsec, 4
 1654              	LastMoveEndTimeUsec:
 1655 002c 00000000 		.space	4
 1656              		.type	UptimeMicrosecondsAccumulator, %object
 1657              		.size	UptimeMicrosecondsAccumulator, 8
 1658              	UptimeMicrosecondsAccumulator:
 1659 0030 00000000 		.space	8
 1659      00000000 
 1660              		.type	UptimeMilliseconds, %object
 1661              		.size	UptimeMilliseconds, 8
 1662              	UptimeMilliseconds:
 1663 0038 00000000 		.space	8
 1663      00000000 
 1664              		.type	UptimeMillisecondsAccumulator, %object
 1665              		.size	UptimeMillisecondsAccumulator, 8
 1666              	UptimeMillisecondsAccumulator:
 1667 0040 00000000 		.space	8
 1667      00000000 
 1668              		.type	brmsTask.7310, %object
 1669              		.size	brmsTask.7310, 4
 1670              	brmsTask.7310:
 1671 0048 00000000 		.space	4
 1672              		.text
 1673              	.Letext0:
 1674              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1675              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1676              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1677              		.file 5 "pid.h"
 1678              		.file 6 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1679              		.file 7 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1680              		.file 8 "Generated_Source\\PSoC4/Counter_1.h"
 1681              		.file 9 "Generated_Source\\PSoC4/Index_Counter_1.h"
 1682              		.file 10 "Generated_Source\\PSoC4/isr_home.h"
 1683              		.file 11 "Generated_Source\\PSoC4/HOME_IN.h"
 1684              		.file 12 "Generated_Source\\PSoC4/spi_ss.h"
 1685              		.file 13 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1686              		.file 14 "INA219.h"
 1687              		.file 15 "Generated_Source\\PSoC4/PWM_1.h"
 1688              		.file 16 "Generated_Source\\PSoC4/HOME_OUT.h"
 1689              		.file 17 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1690              		.file 18 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1691              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 1692              		.file 20 "Generated_Source\\PSoC4/isr_brms.h"
 1693              		.file 21 "Generated_Source\\PSoC4/isr_spi_ss.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 56


 1694              		.file 22 "Generated_Source\\PSoC4/I2C.h"
 1695              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1696              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1697              		.file 25 "Generated_Source\\PSoC4/EncoderDirection.h"
 1698              		.file 26 "Generated_Source\\PSoC4/LED.h"
 1699              		.section	.debug_info,"",%progbits
 1700              	.Ldebug_info0:
 1701 0000 E80F0000 		.4byte	0xfe8
 1702 0004 0400     		.2byte	0x4
 1703 0006 00000000 		.4byte	.Ldebug_abbrev0
 1704 000a 04       		.byte	0x4
 1705 000b 01       		.uleb128 0x1
 1706 000c 5A020000 		.4byte	.LASF181
 1707 0010 0C       		.byte	0xc
 1708 0011 12000000 		.4byte	.LASF182
 1709 0015 90050000 		.4byte	.LASF183
 1710 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1711 001d 00000000 		.4byte	0
 1712 0021 00000000 		.4byte	.Ldebug_line0
 1713 0025 02       		.uleb128 0x2
 1714 0026 04       		.byte	0x4
 1715 0027 04       		.byte	0x4
 1716 0028 A9010000 		.4byte	.LASF0
 1717 002c 02       		.uleb128 0x2
 1718 002d 02       		.byte	0x2
 1719 002e 05       		.byte	0x5
 1720 002f E8060000 		.4byte	.LASF1
 1721 0033 03       		.uleb128 0x3
 1722 0034 5D060000 		.4byte	.LASF3
 1723 0038 02       		.byte	0x2
 1724 0039 1B       		.byte	0x1b
 1725 003a 3E000000 		.4byte	0x3e
 1726 003e 02       		.uleb128 0x2
 1727 003f 01       		.byte	0x1
 1728 0040 06       		.byte	0x6
 1729 0041 91090000 		.4byte	.LASF2
 1730 0045 03       		.uleb128 0x3
 1731 0046 26080000 		.4byte	.LASF4
 1732 004a 02       		.byte	0x2
 1733 004b 1D       		.byte	0x1d
 1734 004c 50000000 		.4byte	0x50
 1735 0050 02       		.uleb128 0x2
 1736 0051 01       		.byte	0x1
 1737 0052 08       		.byte	0x8
 1738 0053 B7080000 		.4byte	.LASF5
 1739 0057 03       		.uleb128 0x3
 1740 0058 35050000 		.4byte	.LASF6
 1741 005c 02       		.byte	0x2
 1742 005d 29       		.byte	0x29
 1743 005e 2C000000 		.4byte	0x2c
 1744 0062 03       		.uleb128 0x3
 1745 0063 1E020000 		.4byte	.LASF7
 1746 0067 02       		.byte	0x2
 1747 0068 2B       		.byte	0x2b
 1748 0069 6D000000 		.4byte	0x6d
 1749 006d 02       		.uleb128 0x2
 1750 006e 02       		.byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 57


 1751 006f 07       		.byte	0x7
 1752 0070 9D090000 		.4byte	.LASF8
 1753 0074 03       		.uleb128 0x3
 1754 0075 CE000000 		.4byte	.LASF9
 1755 0079 02       		.byte	0x2
 1756 007a 3F       		.byte	0x3f
 1757 007b 7F000000 		.4byte	0x7f
 1758 007f 02       		.uleb128 0x2
 1759 0080 04       		.byte	0x4
 1760 0081 05       		.byte	0x5
 1761 0082 32070000 		.4byte	.LASF10
 1762 0086 03       		.uleb128 0x3
 1763 0087 C5080000 		.4byte	.LASF11
 1764 008b 02       		.byte	0x2
 1765 008c 41       		.byte	0x41
 1766 008d 91000000 		.4byte	0x91
 1767 0091 02       		.uleb128 0x2
 1768 0092 04       		.byte	0x4
 1769 0093 07       		.byte	0x7
 1770 0094 57080000 		.4byte	.LASF12
 1771 0098 02       		.uleb128 0x2
 1772 0099 08       		.byte	0x8
 1773 009a 05       		.byte	0x5
 1774 009b DB040000 		.4byte	.LASF13
 1775 009f 03       		.uleb128 0x3
 1776 00a0 3B030000 		.4byte	.LASF14
 1777 00a4 02       		.byte	0x2
 1778 00a5 5B       		.byte	0x5b
 1779 00a6 AA000000 		.4byte	0xaa
 1780 00aa 02       		.uleb128 0x2
 1781 00ab 08       		.byte	0x8
 1782 00ac 07       		.byte	0x7
 1783 00ad E1010000 		.4byte	.LASF15
 1784 00b1 04       		.uleb128 0x4
 1785 00b2 04       		.byte	0x4
 1786 00b3 05       		.byte	0x5
 1787 00b4 696E7400 		.ascii	"int\000"
 1788 00b8 02       		.uleb128 0x2
 1789 00b9 04       		.byte	0x4
 1790 00ba 07       		.byte	0x7
 1791 00bb 87000000 		.4byte	.LASF16
 1792 00bf 03       		.uleb128 0x3
 1793 00c0 6F010000 		.4byte	.LASF17
 1794 00c4 03       		.byte	0x3
 1795 00c5 14       		.byte	0x14
 1796 00c6 33000000 		.4byte	0x33
 1797 00ca 03       		.uleb128 0x3
 1798 00cb 48040000 		.4byte	.LASF18
 1799 00cf 03       		.byte	0x3
 1800 00d0 18       		.byte	0x18
 1801 00d1 45000000 		.4byte	0x45
 1802 00d5 03       		.uleb128 0x3
 1803 00d6 D2010000 		.4byte	.LASF19
 1804 00da 03       		.byte	0x3
 1805 00db 20       		.byte	0x20
 1806 00dc 57000000 		.4byte	0x57
 1807 00e0 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 58


 1808 00e1 A8060000 		.4byte	.LASF20
 1809 00e5 03       		.byte	0x3
 1810 00e6 24       		.byte	0x24
 1811 00e7 62000000 		.4byte	0x62
 1812 00eb 03       		.uleb128 0x3
 1813 00ec 69080000 		.4byte	.LASF21
 1814 00f0 03       		.byte	0x3
 1815 00f1 2C       		.byte	0x2c
 1816 00f2 74000000 		.4byte	0x74
 1817 00f6 03       		.uleb128 0x3
 1818 00f7 66010000 		.4byte	.LASF22
 1819 00fb 03       		.byte	0x3
 1820 00fc 30       		.byte	0x30
 1821 00fd 86000000 		.4byte	0x86
 1822 0101 03       		.uleb128 0x3
 1823 0102 C5070000 		.4byte	.LASF23
 1824 0106 03       		.byte	0x3
 1825 0107 3C       		.byte	0x3c
 1826 0108 9F000000 		.4byte	0x9f
 1827 010c 05       		.uleb128 0x5
 1828 010d D2050000 		.4byte	.LASF24
 1829 0111 04       		.byte	0x4
 1830 0112 FE01     		.2byte	0x1fe
 1831 0114 91000000 		.4byte	0x91
 1832 0118 02       		.uleb128 0x2
 1833 0119 08       		.byte	0x8
 1834 011a 04       		.byte	0x4
 1835 011b CA090000 		.4byte	.LASF25
 1836 011f 02       		.uleb128 0x2
 1837 0120 01       		.byte	0x1
 1838 0121 08       		.byte	0x8
 1839 0122 D3030000 		.4byte	.LASF26
 1840 0126 05       		.uleb128 0x5
 1841 0127 B1060000 		.4byte	.LASF27
 1842 012b 04       		.byte	0x4
 1843 012c A802     		.2byte	0x2a8
 1844 012e 32010000 		.4byte	0x132
 1845 0132 06       		.uleb128 0x6
 1846 0133 0C010000 		.4byte	0x10c
 1847 0137 02       		.uleb128 0x2
 1848 0138 08       		.byte	0x8
 1849 0139 04       		.byte	0x4
 1850 013a 9C060000 		.4byte	.LASF28
 1851 013e 02       		.uleb128 0x2
 1852 013f 04       		.byte	0x4
 1853 0140 07       		.byte	0x7
 1854 0141 4E080000 		.4byte	.LASF29
 1855 0145 06       		.uleb128 0x6
 1856 0146 F6000000 		.4byte	0xf6
 1857 014a 07       		.uleb128 0x7
 1858 014b 01       		.byte	0x1
 1859 014c 50000000 		.4byte	0x50
 1860 0150 01       		.byte	0x1
 1861 0151 9C       		.byte	0x9c
 1862 0152 6F010000 		.4byte	0x16f
 1863 0156 08       		.uleb128 0x8
 1864 0157 B7060000 		.4byte	.LASF30
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 59


 1865 015b 00       		.byte	0
 1866 015c 08       		.uleb128 0x8
 1867 015d 74000000 		.4byte	.LASF31
 1868 0161 01       		.byte	0x1
 1869 0162 08       		.uleb128 0x8
 1870 0163 43010000 		.4byte	.LASF32
 1871 0167 02       		.byte	0x2
 1872 0168 08       		.uleb128 0x8
 1873 0169 3B070000 		.4byte	.LASF33
 1874 016d 03       		.byte	0x3
 1875 016e 00       		.byte	0
 1876 016f 03       		.uleb128 0x3
 1877 0170 66060000 		.4byte	.LASF34
 1878 0174 01       		.byte	0x1
 1879 0175 A1       		.byte	0xa1
 1880 0176 4A010000 		.4byte	0x14a
 1881 017a 07       		.uleb128 0x7
 1882 017b 01       		.byte	0x1
 1883 017c 50000000 		.4byte	0x50
 1884 0180 01       		.byte	0x1
 1885 0181 A6       		.byte	0xa6
 1886 0182 BD010000 		.4byte	0x1bd
 1887 0186 08       		.uleb128 0x8
 1888 0187 8F040000 		.4byte	.LASF35
 1889 018b 00       		.byte	0
 1890 018c 08       		.uleb128 0x8
 1891 018d 25030000 		.4byte	.LASF36
 1892 0191 01       		.byte	0x1
 1893 0192 08       		.uleb128 0x8
 1894 0193 6A000000 		.4byte	.LASF37
 1895 0197 02       		.byte	0x2
 1896 0198 08       		.uleb128 0x8
 1897 0199 57040000 		.4byte	.LASF38
 1898 019d 04       		.byte	0x4
 1899 019e 08       		.uleb128 0x8
 1900 019f DA060000 		.4byte	.LASF39
 1901 01a3 08       		.byte	0x8
 1902 01a4 08       		.uleb128 0x8
 1903 01a5 03050000 		.4byte	.LASF40
 1904 01a9 10       		.byte	0x10
 1905 01aa 08       		.uleb128 0x8
 1906 01ab 07090000 		.4byte	.LASF41
 1907 01af 20       		.byte	0x20
 1908 01b0 08       		.uleb128 0x8
 1909 01b1 0C090000 		.4byte	.LASF42
 1910 01b5 40       		.byte	0x40
 1911 01b6 08       		.uleb128 0x8
 1912 01b7 11090000 		.4byte	.LASF43
 1913 01bb 80       		.byte	0x80
 1914 01bc 00       		.byte	0
 1915 01bd 03       		.uleb128 0x3
 1916 01be 590A0000 		.4byte	.LASF44
 1917 01c2 01       		.byte	0x1
 1918 01c3 B0       		.byte	0xb0
 1919 01c4 7A010000 		.4byte	0x17a
 1920 01c8 07       		.uleb128 0x7
 1921 01c9 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 60


 1922 01ca 50000000 		.4byte	0x50
 1923 01ce 01       		.byte	0x1
 1924 01cf CC       		.byte	0xcc
 1925 01d0 F3010000 		.4byte	0x1f3
 1926 01d4 08       		.uleb128 0x8
 1927 01d5 D0080000 		.4byte	.LASF45
 1928 01d9 00       		.byte	0
 1929 01da 08       		.uleb128 0x8
 1930 01db 050A0000 		.4byte	.LASF46
 1931 01df 01       		.byte	0x1
 1932 01e0 08       		.uleb128 0x8
 1933 01e1 30080000 		.4byte	.LASF47
 1934 01e5 02       		.byte	0x2
 1935 01e6 08       		.uleb128 0x8
 1936 01e7 DC080000 		.4byte	.LASF48
 1937 01eb 03       		.byte	0x3
 1938 01ec 08       		.uleb128 0x8
 1939 01ed 39080000 		.4byte	.LASF49
 1940 01f1 04       		.byte	0x4
 1941 01f2 00       		.byte	0
 1942 01f3 03       		.uleb128 0x3
 1943 01f4 76010000 		.4byte	.LASF50
 1944 01f8 01       		.byte	0x1
 1945 01f9 D2       		.byte	0xd2
 1946 01fa C8010000 		.4byte	0x1c8
 1947 01fe 09       		.uleb128 0x9
 1948 01ff 03       		.byte	0x3
 1949 0200 01       		.byte	0x1
 1950 0201 D7       		.byte	0xd7
 1951 0202 2B020000 		.4byte	0x22b
 1952 0206 0A       		.uleb128 0xa
 1953 0207 C2010000 		.4byte	.LASF51
 1954 020b 01       		.byte	0x1
 1955 020c D8       		.byte	0xd8
 1956 020d CA000000 		.4byte	0xca
 1957 0211 00       		.byte	0
 1958 0212 0A       		.uleb128 0xa
 1959 0213 8B050000 		.4byte	.LASF52
 1960 0217 01       		.byte	0x1
 1961 0218 D9       		.byte	0xd9
 1962 0219 CA000000 		.4byte	0xca
 1963 021d 01       		.byte	0x1
 1964 021e 0A       		.uleb128 0xa
 1965 021f 36040000 		.4byte	.LASF53
 1966 0223 01       		.byte	0x1
 1967 0224 DA       		.byte	0xda
 1968 0225 CA000000 		.4byte	0xca
 1969 0229 02       		.byte	0x2
 1970 022a 00       		.byte	0
 1971 022b 03       		.uleb128 0x3
 1972 022c B6030000 		.4byte	.LASF54
 1973 0230 01       		.byte	0x1
 1974 0231 DB       		.byte	0xdb
 1975 0232 FE010000 		.4byte	0x1fe
 1976 0236 09       		.uleb128 0x9
 1977 0237 16       		.byte	0x16
 1978 0238 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 61


 1979 0239 DE       		.byte	0xde
 1980 023a B7020000 		.4byte	0x2b7
 1981 023e 0A       		.uleb128 0xa
 1982 023f C2010000 		.4byte	.LASF51
 1983 0243 01       		.byte	0x1
 1984 0244 DF       		.byte	0xdf
 1985 0245 CA000000 		.4byte	0xca
 1986 0249 00       		.byte	0
 1987 024a 0A       		.uleb128 0xa
 1988 024b 8B050000 		.4byte	.LASF52
 1989 024f 01       		.byte	0x1
 1990 0250 E0       		.byte	0xe0
 1991 0251 CA000000 		.4byte	0xca
 1992 0255 01       		.byte	0x1
 1993 0256 0A       		.uleb128 0xa
 1994 0257 36040000 		.4byte	.LASF53
 1995 025b 01       		.byte	0x1
 1996 025c E1       		.byte	0xe1
 1997 025d CA000000 		.4byte	0xca
 1998 0261 02       		.byte	0x2
 1999 0262 0A       		.uleb128 0xa
 2000 0263 C3060000 		.4byte	.LASF55
 2001 0267 01       		.byte	0x1
 2002 0268 E2       		.byte	0xe2
 2003 0269 CA000000 		.4byte	0xca
 2004 026d 03       		.byte	0x3
 2005 026e 0A       		.uleb128 0xa
 2006 026f A0080000 		.4byte	.LASF56
 2007 0273 01       		.byte	0x1
 2008 0274 E4       		.byte	0xe4
 2009 0275 F6000000 		.4byte	0xf6
 2010 0279 04       		.byte	0x4
 2011 027a 0A       		.uleb128 0xa
 2012 027b 95080000 		.4byte	.LASF57
 2013 027f 01       		.byte	0x1
 2014 0280 E5       		.byte	0xe5
 2015 0281 F6000000 		.4byte	0xf6
 2016 0285 08       		.byte	0x8
 2017 0286 0A       		.uleb128 0xa
 2018 0287 84080000 		.4byte	.LASF58
 2019 028b 01       		.byte	0x1
 2020 028c E6       		.byte	0xe6
 2021 028d F6000000 		.4byte	0xf6
 2022 0291 0C       		.byte	0xc
 2023 0292 0A       		.uleb128 0xa
 2024 0293 4E020000 		.4byte	.LASF59
 2025 0297 01       		.byte	0x1
 2026 0298 E8       		.byte	0xe8
 2027 0299 E0000000 		.4byte	0xe0
 2028 029d 10       		.byte	0x10
 2029 029e 0A       		.uleb128 0xa
 2030 029f 3D040000 		.4byte	.LASF60
 2031 02a3 01       		.byte	0x1
 2032 02a4 E9       		.byte	0xe9
 2033 02a5 E0000000 		.4byte	0xe0
 2034 02a9 12       		.byte	0x12
 2035 02aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 62


 2036 02ab 5E000000 		.4byte	.LASF61
 2037 02af 01       		.byte	0x1
 2038 02b0 EA       		.byte	0xea
 2039 02b1 E0000000 		.4byte	0xe0
 2040 02b5 14       		.byte	0x14
 2041 02b6 00       		.byte	0
 2042 02b7 03       		.uleb128 0x3
 2043 02b8 F2060000 		.4byte	.LASF62
 2044 02bc 01       		.byte	0x1
 2045 02bd EB       		.byte	0xeb
 2046 02be 36020000 		.4byte	0x236
 2047 02c2 09       		.uleb128 0x9
 2048 02c3 0A       		.byte	0xa
 2049 02c4 01       		.byte	0x1
 2050 02c5 EE       		.byte	0xee
 2051 02c6 1F030000 		.4byte	0x31f
 2052 02ca 0A       		.uleb128 0xa
 2053 02cb C2010000 		.4byte	.LASF51
 2054 02cf 01       		.byte	0x1
 2055 02d0 EF       		.byte	0xef
 2056 02d1 CA000000 		.4byte	0xca
 2057 02d5 00       		.byte	0
 2058 02d6 0A       		.uleb128 0xa
 2059 02d7 8B050000 		.4byte	.LASF52
 2060 02db 01       		.byte	0x1
 2061 02dc F0       		.byte	0xf0
 2062 02dd CA000000 		.4byte	0xca
 2063 02e1 01       		.byte	0x1
 2064 02e2 0A       		.uleb128 0xa
 2065 02e3 36040000 		.4byte	.LASF53
 2066 02e7 01       		.byte	0x1
 2067 02e8 F1       		.byte	0xf1
 2068 02e9 CA000000 		.4byte	0xca
 2069 02ed 02       		.byte	0x2
 2070 02ee 0A       		.uleb128 0xa
 2071 02ef 29020000 		.4byte	.LASF63
 2072 02f3 01       		.byte	0x1
 2073 02f4 F2       		.byte	0xf2
 2074 02f5 CA000000 		.4byte	0xca
 2075 02f9 03       		.byte	0x3
 2076 02fa 0A       		.uleb128 0xa
 2077 02fb CE070000 		.4byte	.LASF64
 2078 02ff 01       		.byte	0x1
 2079 0300 F3       		.byte	0xf3
 2080 0301 EB000000 		.4byte	0xeb
 2081 0305 04       		.byte	0x4
 2082 0306 0B       		.uleb128 0xb
 2083 0307 6A6F6700 		.ascii	"jog\000"
 2084 030b 01       		.byte	0x1
 2085 030c F4       		.byte	0xf4
 2086 030d BF000000 		.4byte	0xbf
 2087 0311 08       		.byte	0x8
 2088 0312 0A       		.uleb128 0xa
 2089 0313 C2000000 		.4byte	.LASF65
 2090 0317 01       		.byte	0x1
 2091 0318 F5       		.byte	0xf5
 2092 0319 CA000000 		.4byte	0xca
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 63


 2093 031d 09       		.byte	0x9
 2094 031e 00       		.byte	0
 2095 031f 03       		.uleb128 0x3
 2096 0320 8A010000 		.4byte	.LASF66
 2097 0324 01       		.byte	0x1
 2098 0325 F6       		.byte	0xf6
 2099 0326 C2020000 		.4byte	0x2c2
 2100 032a 09       		.uleb128 0x9
 2101 032b 07       		.byte	0x7
 2102 032c 01       		.byte	0x1
 2103 032d F9       		.byte	0xf9
 2104 032e 63030000 		.4byte	0x363
 2105 0332 0A       		.uleb128 0xa
 2106 0333 C2010000 		.4byte	.LASF51
 2107 0337 01       		.byte	0x1
 2108 0338 FA       		.byte	0xfa
 2109 0339 CA000000 		.4byte	0xca
 2110 033d 00       		.byte	0
 2111 033e 0A       		.uleb128 0xa
 2112 033f 8B050000 		.4byte	.LASF52
 2113 0343 01       		.byte	0x1
 2114 0344 FB       		.byte	0xfb
 2115 0345 CA000000 		.4byte	0xca
 2116 0349 01       		.byte	0x1
 2117 034a 0A       		.uleb128 0xa
 2118 034b 36040000 		.4byte	.LASF53
 2119 034f 01       		.byte	0x1
 2120 0350 FC       		.byte	0xfc
 2121 0351 CA000000 		.4byte	0xca
 2122 0355 02       		.byte	0x2
 2123 0356 0A       		.uleb128 0xa
 2124 0357 CE070000 		.4byte	.LASF64
 2125 035b 01       		.byte	0x1
 2126 035c FD       		.byte	0xfd
 2127 035d EB000000 		.4byte	0xeb
 2128 0361 03       		.byte	0x3
 2129 0362 00       		.byte	0
 2130 0363 03       		.uleb128 0x3
 2131 0364 61090000 		.4byte	.LASF67
 2132 0368 01       		.byte	0x1
 2133 0369 FE       		.byte	0xfe
 2134 036a 2A030000 		.4byte	0x32a
 2135 036e 0C       		.uleb128 0xc
 2136 036f 1F       		.byte	0x1f
 2137 0370 01       		.byte	0x1
 2138 0371 0201     		.2byte	0x102
 2139 0373 B4030000 		.4byte	0x3b4
 2140 0377 0D       		.uleb128 0xd
 2141 0378 62756600 		.ascii	"buf\000"
 2142 037c 01       		.byte	0x1
 2143 037d 0301     		.2byte	0x103
 2144 037f B4030000 		.4byte	0x3b4
 2145 0383 0E       		.uleb128 0xe
 2146 0384 41070000 		.4byte	.LASF68
 2147 0388 01       		.byte	0x1
 2148 0389 0401     		.2byte	0x104
 2149 038b 2B020000 		.4byte	0x22b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 64


 2150 038f 0E       		.uleb128 0xe
 2151 0390 D3060000 		.4byte	.LASF69
 2152 0394 01       		.byte	0x1
 2153 0395 0501     		.2byte	0x105
 2154 0397 B7020000 		.4byte	0x2b7
 2155 039b 0E       		.uleb128 0xe
 2156 039c 50040000 		.4byte	.LASF70
 2157 03a0 01       		.byte	0x1
 2158 03a1 0601     		.2byte	0x106
 2159 03a3 1F030000 		.4byte	0x31f
 2160 03a7 0E       		.uleb128 0xe
 2161 03a8 CB010000 		.4byte	.LASF71
 2162 03ac 01       		.byte	0x1
 2163 03ad 0701     		.2byte	0x107
 2164 03af 63030000 		.4byte	0x363
 2165 03b3 00       		.byte	0
 2166 03b4 0F       		.uleb128 0xf
 2167 03b5 CA000000 		.4byte	0xca
 2168 03b9 C4030000 		.4byte	0x3c4
 2169 03bd 10       		.uleb128 0x10
 2170 03be 3E010000 		.4byte	0x13e
 2171 03c2 1E       		.byte	0x1e
 2172 03c3 00       		.byte	0
 2173 03c4 11       		.uleb128 0x11
 2174 03c5 1F       		.byte	0x1f
 2175 03c6 01       		.byte	0x1
 2176 03c7 0B01     		.2byte	0x10b
 2177 03c9 9E040000 		.4byte	0x49e
 2178 03cd 12       		.uleb128 0x12
 2179 03ce C2010000 		.4byte	.LASF51
 2180 03d2 01       		.byte	0x1
 2181 03d3 0C01     		.2byte	0x10c
 2182 03d5 CA000000 		.4byte	0xca
 2183 03d9 00       		.byte	0
 2184 03da 12       		.uleb128 0x12
 2185 03db 9B030000 		.4byte	.LASF72
 2186 03df 01       		.byte	0x1
 2187 03e0 0D01     		.2byte	0x10d
 2188 03e2 CA000000 		.4byte	0xca
 2189 03e6 01       		.byte	0x1
 2190 03e7 12       		.uleb128 0x12
 2191 03e8 A4030000 		.4byte	.LASF73
 2192 03ec 01       		.byte	0x1
 2193 03ed 0E01     		.2byte	0x10e
 2194 03ef CA000000 		.4byte	0xca
 2195 03f3 02       		.byte	0x2
 2196 03f4 12       		.uleb128 0x12
 2197 03f5 AD030000 		.4byte	.LASF74
 2198 03f9 01       		.byte	0x1
 2199 03fa 0F01     		.2byte	0x10f
 2200 03fc CA000000 		.4byte	0xca
 2201 0400 03       		.byte	0x3
 2202 0401 12       		.uleb128 0x12
 2203 0402 8B050000 		.4byte	.LASF52
 2204 0406 01       		.byte	0x1
 2205 0407 1001     		.2byte	0x110
 2206 0409 CA000000 		.4byte	0xca
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 65


 2207 040d 04       		.byte	0x4
 2208 040e 12       		.uleb128 0x12
 2209 040f 36040000 		.4byte	.LASF53
 2210 0413 01       		.byte	0x1
 2211 0414 1101     		.2byte	0x111
 2212 0416 CA000000 		.4byte	0xca
 2213 041a 05       		.byte	0x5
 2214 041b 12       		.uleb128 0x12
 2215 041c 8F080000 		.4byte	.LASF75
 2216 0420 01       		.byte	0x1
 2217 0421 1201     		.2byte	0x112
 2218 0423 CA000000 		.4byte	0xca
 2219 0427 06       		.byte	0x6
 2220 0428 12       		.uleb128 0x12
 2221 0429 3C0A0000 		.4byte	.LASF76
 2222 042d 01       		.byte	0x1
 2223 042e 1301     		.2byte	0x113
 2224 0430 CA000000 		.4byte	0xca
 2225 0434 07       		.byte	0x7
 2226 0435 12       		.uleb128 0x12
 2227 0436 C3060000 		.4byte	.LASF55
 2228 043a 01       		.byte	0x1
 2229 043b 1401     		.2byte	0x114
 2230 043d CA000000 		.4byte	0xca
 2231 0441 08       		.byte	0x8
 2232 0442 12       		.uleb128 0x12
 2233 0443 7B050000 		.4byte	.LASF77
 2234 0447 01       		.byte	0x1
 2235 0448 1501     		.2byte	0x115
 2236 044a E0000000 		.4byte	0xe0
 2237 044e 09       		.byte	0x9
 2238 044f 12       		.uleb128 0x12
 2239 0450 19000000 		.4byte	.LASF78
 2240 0454 01       		.byte	0x1
 2241 0455 1601     		.2byte	0x116
 2242 0457 D5000000 		.4byte	0xd5
 2243 045b 0B       		.byte	0xb
 2244 045c 12       		.uleb128 0x12
 2245 045d 500A0000 		.4byte	.LASF79
 2246 0461 01       		.byte	0x1
 2247 0462 1701     		.2byte	0x117
 2248 0464 EB000000 		.4byte	0xeb
 2249 0468 0D       		.byte	0xd
 2250 0469 13       		.uleb128 0x13
 2251 046a 70776D00 		.ascii	"pwm\000"
 2252 046e 01       		.byte	0x1
 2253 046f 1801     		.2byte	0x118
 2254 0471 D5000000 		.4byte	0xd5
 2255 0475 11       		.byte	0x11
 2256 0476 12       		.uleb128 0x12
 2257 0477 C4090000 		.4byte	.LASF80
 2258 047b 01       		.byte	0x1
 2259 047c 1901     		.2byte	0x119
 2260 047e EB000000 		.4byte	0xeb
 2261 0482 13       		.byte	0x13
 2262 0483 12       		.uleb128 0x12
 2263 0484 D8030000 		.4byte	.LASF81
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 66


 2264 0488 01       		.byte	0x1
 2265 0489 1A01     		.2byte	0x11a
 2266 048b F6000000 		.4byte	0xf6
 2267 048f 17       		.byte	0x17
 2268 0490 12       		.uleb128 0x12
 2269 0491 29050000 		.4byte	.LASF82
 2270 0495 01       		.byte	0x1
 2271 0496 1B01     		.2byte	0x11b
 2272 0498 EB000000 		.4byte	0xeb
 2273 049c 1B       		.byte	0x1b
 2274 049d 00       		.byte	0
 2275 049e 05       		.uleb128 0x5
 2276 049f B9070000 		.4byte	.LASF83
 2277 04a3 01       		.byte	0x1
 2278 04a4 1C01     		.2byte	0x11c
 2279 04a6 C4030000 		.4byte	0x3c4
 2280 04aa 0C       		.uleb128 0xc
 2281 04ab 1F       		.byte	0x1f
 2282 04ac 01       		.byte	0x1
 2283 04ad 1F01     		.2byte	0x11f
 2284 04af CC040000 		.4byte	0x4cc
 2285 04b3 0D       		.uleb128 0xd
 2286 04b4 62756600 		.ascii	"buf\000"
 2287 04b8 01       		.byte	0x1
 2288 04b9 2001     		.2byte	0x120
 2289 04bb B4030000 		.4byte	0x3b4
 2290 04bf 0D       		.uleb128 0xd
 2291 04c0 6D736700 		.ascii	"msg\000"
 2292 04c4 01       		.byte	0x1
 2293 04c5 2101     		.2byte	0x121
 2294 04c7 9E040000 		.4byte	0x49e
 2295 04cb 00       		.byte	0
 2296 04cc 14       		.uleb128 0x14
 2297 04cd 01       		.byte	0x1
 2298 04ce 50000000 		.4byte	0x50
 2299 04d2 01       		.byte	0x1
 2300 04d3 2501     		.2byte	0x125
 2301 04d5 E6040000 		.4byte	0x4e6
 2302 04d9 08       		.uleb128 0x8
 2303 04da 33000000 		.4byte	.LASF84
 2304 04de 00       		.byte	0
 2305 04df 08       		.uleb128 0x8
 2306 04e0 D9050000 		.4byte	.LASF85
 2307 04e4 01       		.byte	0x1
 2308 04e5 00       		.byte	0
 2309 04e6 05       		.uleb128 0x5
 2310 04e7 08010000 		.4byte	.LASF86
 2311 04eb 01       		.byte	0x1
 2312 04ec 2801     		.2byte	0x128
 2313 04ee CC040000 		.4byte	0x4cc
 2314 04f2 15       		.uleb128 0x15
 2315 04f3 420A0000 		.4byte	.LASF87
 2316 04f7 01       		.byte	0x1
 2317 04f8 5704     		.2byte	0x457
 2318 04fa 00000000 		.4byte	.LFB43
 2319 04fe 24000000 		.4byte	.LFE43-.LFB43
 2320 0502 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 67


 2321 0503 9C       		.byte	0x9c
 2322 0504 3D050000 		.4byte	0x53d
 2323 0508 16       		.uleb128 0x16
 2324 0509 06000000 		.4byte	.LVL0
 2325 050d 370E0000 		.4byte	0xe37
 2326 0511 16       		.uleb128 0x16
 2327 0512 0A000000 		.4byte	.LVL1
 2328 0516 420E0000 		.4byte	0xe42
 2329 051a 17       		.uleb128 0x17
 2330 051b 10000000 		.4byte	.LVL2
 2331 051f 4D0E0000 		.4byte	0xe4d
 2332 0523 2D050000 		.4byte	0x52d
 2333 0527 18       		.uleb128 0x18
 2334 0528 01       		.uleb128 0x1
 2335 0529 50       		.byte	0x50
 2336 052a 01       		.uleb128 0x1
 2337 052b 30       		.byte	0x30
 2338 052c 00       		.byte	0
 2339 052d 19       		.uleb128 0x19
 2340 052e 16000000 		.4byte	.LVL3
 2341 0532 580E0000 		.4byte	0xe58
 2342 0536 18       		.uleb128 0x18
 2343 0537 01       		.uleb128 0x1
 2344 0538 50       		.byte	0x50
 2345 0539 01       		.uleb128 0x1
 2346 053a 30       		.byte	0x30
 2347 053b 00       		.byte	0
 2348 053c 00       		.byte	0
 2349 053d 15       		.uleb128 0x15
 2350 053e F9000000 		.4byte	.LASF88
 2351 0542 01       		.byte	0x1
 2352 0543 7504     		.2byte	0x475
 2353 0545 00000000 		.4byte	.LFB44
 2354 0549 1C000000 		.4byte	.LFE44-.LFB44
 2355 054d 01       		.uleb128 0x1
 2356 054e 9C       		.byte	0x9c
 2357 054f 75050000 		.4byte	0x575
 2358 0553 16       		.uleb128 0x16
 2359 0554 06000000 		.4byte	.LVL4
 2360 0558 630E0000 		.4byte	0xe63
 2361 055c 16       		.uleb128 0x16
 2362 055d 0A000000 		.4byte	.LVL5
 2363 0561 6E0E0000 		.4byte	0xe6e
 2364 0565 19       		.uleb128 0x19
 2365 0566 10000000 		.4byte	.LVL6
 2366 056a 4D0E0000 		.4byte	0xe4d
 2367 056e 18       		.uleb128 0x18
 2368 056f 01       		.uleb128 0x1
 2369 0570 50       		.byte	0x50
 2370 0571 01       		.uleb128 0x1
 2371 0572 30       		.byte	0x30
 2372 0573 00       		.byte	0
 2373 0574 00       		.byte	0
 2374 0575 15       		.uleb128 0x15
 2375 0576 4B060000 		.4byte	.LASF89
 2376 057a 01       		.byte	0x1
 2377 057b 8F04     		.2byte	0x48f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 68


 2378 057d 00000000 		.4byte	.LFB45
 2379 0581 60000000 		.4byte	.LFE45-.LFB45
 2380 0585 01       		.uleb128 0x1
 2381 0586 9C       		.byte	0x9c
 2382 0587 E8050000 		.4byte	0x5e8
 2383 058b 1A       		.uleb128 0x1a
 2384 058c 6900     		.ascii	"i\000"
 2385 058e 01       		.byte	0x1
 2386 058f 9104     		.2byte	0x491
 2387 0591 F6000000 		.4byte	0xf6
 2388 0595 00000000 		.4byte	.LLST0
 2389 0599 16       		.uleb128 0x16
 2390 059a 06000000 		.4byte	.LVL7
 2391 059e 790E0000 		.4byte	0xe79
 2392 05a2 16       		.uleb128 0x16
 2393 05a3 0A000000 		.4byte	.LVL8
 2394 05a7 840E0000 		.4byte	0xe84
 2395 05ab 17       		.uleb128 0x17
 2396 05ac 2A000000 		.4byte	.LVL9
 2397 05b0 8F0E0000 		.4byte	0xe8f
 2398 05b4 CC050000 		.4byte	0x5cc
 2399 05b8 18       		.uleb128 0x18
 2400 05b9 01       		.uleb128 0x1
 2401 05ba 50       		.byte	0x50
 2402 05bb 05       		.uleb128 0x5
 2403 05bc 03       		.byte	0x3
 2404 05bd 00000000 		.4byte	txMessage
 2405 05c1 18       		.uleb128 0x18
 2406 05c2 01       		.uleb128 0x1
 2407 05c3 51       		.byte	0x51
 2408 05c4 01       		.uleb128 0x1
 2409 05c5 30       		.byte	0x30
 2410 05c6 18       		.uleb128 0x18
 2411 05c7 01       		.uleb128 0x1
 2412 05c8 52       		.byte	0x52
 2413 05c9 01       		.uleb128 0x1
 2414 05ca 4F       		.byte	0x4f
 2415 05cb 00       		.byte	0
 2416 05cc 16       		.uleb128 0x16
 2417 05cd 32000000 		.4byte	.LVL11
 2418 05d1 980E0000 		.4byte	0xe98
 2419 05d5 16       		.uleb128 0x16
 2420 05d6 40000000 		.4byte	.LVL13
 2421 05da A40E0000 		.4byte	0xea4
 2422 05de 16       		.uleb128 0x16
 2423 05df 44000000 		.4byte	.LVL14
 2424 05e3 B00E0000 		.4byte	0xeb0
 2425 05e7 00       		.byte	0
 2426 05e8 15       		.uleb128 0x15
 2427 05e9 9D010000 		.4byte	.LASF90
 2428 05ed 01       		.byte	0x1
 2429 05ee 4101     		.2byte	0x141
 2430 05f0 00000000 		.4byte	.LFB32
 2431 05f4 1C000000 		.4byte	.LFE32-.LFB32
 2432 05f8 01       		.uleb128 0x1
 2433 05f9 9C       		.byte	0x9c
 2434 05fa 0F060000 		.4byte	0x60f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 69


 2435 05fe 1B       		.uleb128 0x1b
 2436 05ff 3C0A0000 		.4byte	.LASF76
 2437 0603 01       		.byte	0x1
 2438 0604 4101     		.2byte	0x141
 2439 0606 BD010000 		.4byte	0x1bd
 2440 060a 1F000000 		.4byte	.LLST1
 2441 060e 00       		.byte	0
 2442 060f 15       		.uleb128 0x15
 2443 0610 1A010000 		.4byte	.LASF91
 2444 0614 01       		.byte	0x1
 2445 0615 5C01     		.2byte	0x15c
 2446 0617 00000000 		.4byte	.LFB33
 2447 061b 1C000000 		.4byte	.LFE33-.LFB33
 2448 061f 01       		.uleb128 0x1
 2449 0620 9C       		.byte	0x9c
 2450 0621 34060000 		.4byte	0x634
 2451 0625 1C       		.uleb128 0x1c
 2452 0626 3C0A0000 		.4byte	.LASF76
 2453 062a 01       		.byte	0x1
 2454 062b 5C01     		.2byte	0x15c
 2455 062d BD010000 		.4byte	0x1bd
 2456 0631 01       		.uleb128 0x1
 2457 0632 50       		.byte	0x50
 2458 0633 00       		.byte	0
 2459 0634 15       		.uleb128 0x15
 2460 0635 44000000 		.4byte	.LASF92
 2461 0639 01       		.byte	0x1
 2462 063a 7601     		.2byte	0x176
 2463 063c 00000000 		.4byte	.LFB34
 2464 0640 14000000 		.4byte	.LFE34-.LFB34
 2465 0644 01       		.uleb128 0x1
 2466 0645 9C       		.byte	0x9c
 2467 0646 6D060000 		.4byte	0x66d
 2468 064a 1D       		.uleb128 0x1d
 2469 064b 6300     		.ascii	"c\000"
 2470 064d 01       		.byte	0x1
 2471 064e 7901     		.2byte	0x179
 2472 0650 25000000 		.4byte	0x25
 2473 0654 07       		.uleb128 0x7
 2474 0655 70       		.byte	0x70
 2475 0656 00       		.sleb128 0
 2476 0657 F7       		.byte	0xf7
 2477 0658 2C       		.uleb128 0x2c
 2478 0659 F7       		.byte	0xf7
 2479 065a 25       		.uleb128 0x25
 2480 065b 9F       		.byte	0x9f
 2481 065c 19       		.uleb128 0x19
 2482 065d 08000000 		.4byte	.LVL19
 2483 0661 BC0E0000 		.4byte	0xebc
 2484 0665 18       		.uleb128 0x18
 2485 0666 01       		.uleb128 0x1
 2486 0667 50       		.byte	0x50
 2487 0668 02       		.uleb128 0x2
 2488 0669 08       		.byte	0x8
 2489 066a 40       		.byte	0x40
 2490 066b 00       		.byte	0
 2491 066c 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 70


 2492 066d 15       		.uleb128 0x15
 2493 066e 04040000 		.4byte	.LASF93
 2494 0672 01       		.byte	0x1
 2495 0673 5C02     		.2byte	0x25c
 2496 0675 00000000 		.4byte	.LFB36
 2497 0679 10000000 		.4byte	.LFE36-.LFB36
 2498 067d 01       		.uleb128 0x1
 2499 067e 9C       		.byte	0x9c
 2500 067f A8060000 		.4byte	0x6a8
 2501 0683 1B       		.uleb128 0x1b
 2502 0684 3D000000 		.4byte	.LASF94
 2503 0688 01       		.byte	0x1
 2504 0689 5C02     		.2byte	0x25c
 2505 068b EB000000 		.4byte	0xeb
 2506 068f 40000000 		.4byte	.LLST2
 2507 0693 19       		.uleb128 0x19
 2508 0694 0E000000 		.4byte	.LVL22
 2509 0698 C70E0000 		.4byte	0xec7
 2510 069c 18       		.uleb128 0x18
 2511 069d 01       		.uleb128 0x1
 2512 069e 50       		.byte	0x50
 2513 069f 06       		.uleb128 0x6
 2514 06a0 F3       		.byte	0xf3
 2515 06a1 01       		.uleb128 0x1
 2516 06a2 50       		.byte	0x50
 2517 06a3 23       		.byte	0x23
 2518 06a4 A006     		.uleb128 0x320
 2519 06a6 00       		.byte	0
 2520 06a7 00       		.byte	0
 2521 06a8 1E       		.uleb128 0x1e
 2522 06a9 E3070000 		.4byte	.LASF184
 2523 06ad 01       		.byte	0x1
 2524 06ae 6D02     		.2byte	0x26d
 2525 06b0 EB000000 		.4byte	0xeb
 2526 06b4 00000000 		.4byte	.LFB37
 2527 06b8 44000000 		.4byte	.LFE37-.LFB37
 2528 06bc 01       		.uleb128 0x1
 2529 06bd 9C       		.byte	0x9c
 2530 06be F0060000 		.4byte	0x6f0
 2531 06c2 1F       		.uleb128 0x1f
 2532 06c3 8A070000 		.4byte	.LASF95
 2533 06c7 01       		.byte	0x1
 2534 06c8 6F02     		.2byte	0x26f
 2535 06ca 45010000 		.4byte	0x145
 2536 06ce 05       		.uleb128 0x5
 2537 06cf 03       		.byte	0x3
 2538 06d0 08000000 		.4byte	RawPosition.7291
 2539 06d4 1F       		.uleb128 0x1f
 2540 06d5 DA010000 		.4byte	.LASF96
 2541 06d9 01       		.byte	0x1
 2542 06da 7002     		.2byte	0x270
 2543 06dc F0060000 		.4byte	0x6f0
 2544 06e0 05       		.uleb128 0x5
 2545 06e1 03       		.byte	0x3
 2546 06e2 0C000000 		.4byte	result.7292
 2547 06e6 16       		.uleb128 0x16
 2548 06e7 06000000 		.4byte	.LVL23
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 71


 2549 06eb D30E0000 		.4byte	0xed3
 2550 06ef 00       		.byte	0
 2551 06f0 06       		.uleb128 0x6
 2552 06f1 EB000000 		.4byte	0xeb
 2553 06f5 15       		.uleb128 0x15
 2554 06f6 75060000 		.4byte	.LASF97
 2555 06fa 01       		.byte	0x1
 2556 06fb 8C01     		.2byte	0x18c
 2557 06fd 00000000 		.4byte	.LFB35
 2558 0701 C4020000 		.4byte	.LFE35-.LFB35
 2559 0705 01       		.uleb128 0x1
 2560 0706 9C       		.byte	0x9c
 2561 0707 CF070000 		.4byte	0x7cf
 2562 070b 20       		.uleb128 0x20
 2563 070c 36040000 		.4byte	.LASF53
 2564 0710 01       		.byte	0x1
 2565 0711 8E01     		.2byte	0x18e
 2566 0713 F3010000 		.4byte	0x1f3
 2567 0717 6F000000 		.4byte	.LLST3
 2568 071b 20       		.uleb128 0x20
 2569 071c 8B050000 		.4byte	.LASF52
 2570 0720 01       		.byte	0x1
 2571 0721 8F01     		.2byte	0x18f
 2572 0723 CA000000 		.4byte	0xca
 2573 0727 99000000 		.4byte	.LLST4
 2574 072b 1A       		.uleb128 0x1a
 2575 072c 6900     		.ascii	"i\000"
 2576 072e 01       		.byte	0x1
 2577 072f 9001     		.2byte	0x190
 2578 0731 CA000000 		.4byte	0xca
 2579 0735 C2000000 		.4byte	.LLST5
 2580 0739 20       		.uleb128 0x20
 2581 073a C2010000 		.4byte	.LASF51
 2582 073e 01       		.byte	0x1
 2583 073f 9101     		.2byte	0x191
 2584 0741 CA000000 		.4byte	0xca
 2585 0745 19010000 		.4byte	.LLST6
 2586 0749 20       		.uleb128 0x20
 2587 074a 6B070000 		.4byte	.LASF98
 2588 074e 01       		.byte	0x1
 2589 074f 9201     		.2byte	0x192
 2590 0751 EB000000 		.4byte	0xeb
 2591 0755 86010000 		.4byte	.LLST7
 2592 0759 16       		.uleb128 0x16
 2593 075a 6C000000 		.4byte	.LVL36
 2594 075e A8060000 		.4byte	0x6a8
 2595 0762 17       		.uleb128 0x17
 2596 0763 B6000000 		.4byte	.LVL37
 2597 0767 0F060000 		.4byte	0x60f
 2598 076b 75070000 		.4byte	0x775
 2599 076f 18       		.uleb128 0x18
 2600 0770 01       		.uleb128 0x1
 2601 0771 50       		.byte	0x50
 2602 0772 01       		.uleb128 0x1
 2603 0773 30       		.byte	0x30
 2604 0774 00       		.byte	0
 2605 0775 16       		.uleb128 0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 72


 2606 0776 F2000000 		.4byte	.LVL41
 2607 077a A8060000 		.4byte	0x6a8
 2608 077e 17       		.uleb128 0x17
 2609 077f 1E010000 		.4byte	.LVL43
 2610 0783 580E0000 		.4byte	0xe58
 2611 0787 91070000 		.4byte	0x791
 2612 078b 18       		.uleb128 0x18
 2613 078c 01       		.uleb128 0x1
 2614 078d 50       		.byte	0x50
 2615 078e 01       		.uleb128 0x1
 2616 078f 30       		.byte	0x30
 2617 0790 00       		.byte	0
 2618 0791 16       		.uleb128 0x16
 2619 0792 7A010000 		.4byte	.LVL53
 2620 0796 4D0E0000 		.4byte	0xe4d
 2621 079a 16       		.uleb128 0x16
 2622 079b 98010000 		.4byte	.LVL54
 2623 079f A8060000 		.4byte	0x6a8
 2624 07a3 17       		.uleb128 0x17
 2625 07a4 56020000 		.4byte	.LVL62
 2626 07a8 DE0E0000 		.4byte	0xede
 2627 07ac BF070000 		.4byte	0x7bf
 2628 07b0 18       		.uleb128 0x18
 2629 07b1 01       		.uleb128 0x1
 2630 07b2 50       		.byte	0x50
 2631 07b3 05       		.uleb128 0x5
 2632 07b4 03       		.byte	0x3
 2633 07b5 00000000 		.4byte	txMessage
 2634 07b9 18       		.uleb128 0x18
 2635 07ba 01       		.uleb128 0x1
 2636 07bb 51       		.byte	0x51
 2637 07bc 01       		.uleb128 0x1
 2638 07bd 4F       		.byte	0x4f
 2639 07be 00       		.byte	0
 2640 07bf 19       		.uleb128 0x19
 2641 07c0 6A020000 		.4byte	.LVL63
 2642 07c4 0F060000 		.4byte	0x60f
 2643 07c8 18       		.uleb128 0x18
 2644 07c9 01       		.uleb128 0x1
 2645 07ca 50       		.byte	0x50
 2646 07cb 01       		.uleb128 0x1
 2647 07cc 30       		.byte	0x30
 2648 07cd 00       		.byte	0
 2649 07ce 00       		.byte	0
 2650 07cf 15       		.uleb128 0x15
 2651 07d0 B0090000 		.4byte	.LASF99
 2652 07d4 01       		.byte	0x1
 2653 07d5 9002     		.2byte	0x290
 2654 07d7 00000000 		.4byte	.LFB38
 2655 07db 30000000 		.4byte	.LFE38-.LFB38
 2656 07df 01       		.uleb128 0x1
 2657 07e0 9C       		.byte	0x9c
 2658 07e1 EF070000 		.4byte	0x7ef
 2659 07e5 16       		.uleb128 0x16
 2660 07e6 06000000 		.4byte	.LVL64
 2661 07ea A8060000 		.4byte	0x6a8
 2662 07ee 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 73


 2663 07ef 15       		.uleb128 0x15
 2664 07f0 F8030000 		.4byte	.LASF100
 2665 07f4 01       		.byte	0x1
 2666 07f5 A902     		.2byte	0x2a9
 2667 07f7 00000000 		.4byte	.LFB39
 2668 07fb 28000000 		.4byte	.LFE39-.LFB39
 2669 07ff 01       		.uleb128 0x1
 2670 0800 9C       		.byte	0x9c
 2671 0801 2F080000 		.4byte	0x82f
 2672 0805 1B       		.uleb128 0x1b
 2673 0806 21070000 		.4byte	.LASF101
 2674 080a 01       		.byte	0x1
 2675 080b A902     		.2byte	0x2a9
 2676 080d F6000000 		.4byte	0xf6
 2677 0811 A4010000 		.4byte	.LLST8
 2678 0815 20       		.uleb128 0x20
 2679 0816 7F000000 		.4byte	.LASF102
 2680 081a 01       		.byte	0x1
 2681 081b AB02     		.2byte	0x2ab
 2682 081d 2F080000 		.4byte	0x82f
 2683 0821 C5010000 		.4byte	.LLST9
 2684 0825 16       		.uleb128 0x16
 2685 0826 1C000000 		.4byte	.LVL67
 2686 082a CF070000 		.4byte	0x7cf
 2687 082e 00       		.byte	0
 2688 082f 02       		.uleb128 0x2
 2689 0830 01       		.byte	0x1
 2690 0831 02       		.byte	0x2
 2691 0832 1F030000 		.4byte	.LASF103
 2692 0836 15       		.uleb128 0x15
 2693 0837 B0000000 		.4byte	.LASF104
 2694 083b 01       		.byte	0x1
 2695 083c BF02     		.2byte	0x2bf
 2696 083e 00000000 		.4byte	.LFB40
 2697 0842 64010000 		.4byte	.LFE40-.LFB40
 2698 0846 01       		.uleb128 0x1
 2699 0847 9C       		.byte	0x9c
 2700 0848 E2080000 		.4byte	0x8e2
 2701 084c 17       		.uleb128 0x17
 2702 084d 22000000 		.4byte	.LVL69
 2703 0851 6D060000 		.4byte	0x66d
 2704 0855 60080000 		.4byte	0x860
 2705 0859 18       		.uleb128 0x18
 2706 085a 01       		.uleb128 0x1
 2707 085b 50       		.byte	0x50
 2708 085c 02       		.uleb128 0x2
 2709 085d 74       		.byte	0x74
 2710 085e 00       		.sleb128 0
 2711 085f 00       		.byte	0
 2712 0860 17       		.uleb128 0x17
 2713 0861 3C000000 		.4byte	.LVL70
 2714 0865 EA0E0000 		.4byte	0xeea
 2715 0869 73080000 		.4byte	0x873
 2716 086d 18       		.uleb128 0x18
 2717 086e 01       		.uleb128 0x1
 2718 086f 50       		.byte	0x50
 2719 0870 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 74


 2720 0871 36       		.byte	0x36
 2721 0872 00       		.byte	0
 2722 0873 17       		.uleb128 0x17
 2723 0874 42000000 		.4byte	.LVL71
 2724 0878 F50E0000 		.4byte	0xef5
 2725 087c 86080000 		.4byte	0x886
 2726 0880 18       		.uleb128 0x18
 2727 0881 01       		.uleb128 0x1
 2728 0882 50       		.byte	0x50
 2729 0883 01       		.uleb128 0x1
 2730 0884 36       		.byte	0x36
 2731 0885 00       		.byte	0
 2732 0886 17       		.uleb128 0x17
 2733 0887 58000000 		.4byte	.LVL72
 2734 088b EF070000 		.4byte	0x7ef
 2735 088f 99080000 		.4byte	0x899
 2736 0893 18       		.uleb128 0x18
 2737 0894 01       		.uleb128 0x1
 2738 0895 50       		.byte	0x50
 2739 0896 01       		.uleb128 0x1
 2740 0897 31       		.byte	0x31
 2741 0898 00       		.byte	0
 2742 0899 17       		.uleb128 0x17
 2743 089a 6C000000 		.4byte	.LVL73
 2744 089e EF070000 		.4byte	0x7ef
 2745 08a2 AD080000 		.4byte	0x8ad
 2746 08a6 18       		.uleb128 0x18
 2747 08a7 01       		.uleb128 0x1
 2748 08a8 50       		.byte	0x50
 2749 08a9 02       		.uleb128 0x2
 2750 08aa 74       		.byte	0x74
 2751 08ab 00       		.sleb128 0
 2752 08ac 00       		.byte	0
 2753 08ad 16       		.uleb128 0x16
 2754 08ae BC000000 		.4byte	.LVL74
 2755 08b2 A8060000 		.4byte	0x6a8
 2756 08b6 16       		.uleb128 0x16
 2757 08b7 CA000000 		.4byte	.LVL75
 2758 08bb 000F0000 		.4byte	0xf00
 2759 08bf 16       		.uleb128 0x16
 2760 08c0 D4000000 		.4byte	.LVL76
 2761 08c4 6D060000 		.4byte	0x66d
 2762 08c8 16       		.uleb128 0x16
 2763 08c9 2E010000 		.4byte	.LVL77
 2764 08cd 6D060000 		.4byte	0x66d
 2765 08d1 19       		.uleb128 0x19
 2766 08d2 36010000 		.4byte	.LVL78
 2767 08d6 6D060000 		.4byte	0x66d
 2768 08da 18       		.uleb128 0x18
 2769 08db 01       		.uleb128 0x1
 2770 08dc 50       		.byte	0x50
 2771 08dd 02       		.uleb128 0x2
 2772 08de 74       		.byte	0x74
 2773 08df 00       		.sleb128 0
 2774 08e0 00       		.byte	0
 2775 08e1 00       		.byte	0
 2776 08e2 15       		.uleb128 0x15
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 75


 2777 08e3 0C040000 		.4byte	.LASF105
 2778 08e7 01       		.byte	0x1
 2779 08e8 F603     		.2byte	0x3f6
 2780 08ea 00000000 		.4byte	.LFB42
 2781 08ee BC000000 		.4byte	.LFE42-.LFB42
 2782 08f2 01       		.uleb128 0x1
 2783 08f3 9C       		.byte	0x9c
 2784 08f4 93090000 		.4byte	0x993
 2785 08f8 1F       		.uleb128 0x1f
 2786 08f9 55000000 		.4byte	.LASF106
 2787 08fd 01       		.byte	0x1
 2788 08fe F803     		.2byte	0x3f8
 2789 0900 F6000000 		.4byte	0xf6
 2790 0904 05       		.uleb128 0x5
 2791 0905 03       		.byte	0x3
 2792 0906 48000000 		.4byte	brmsTask.7310
 2793 090a 21       		.uleb128 0x21
 2794 090b 94000000 		.4byte	.LASF107
 2795 090f 01       		.byte	0x1
 2796 0910 FA03     		.2byte	0x3fa
 2797 0912 93090000 		.4byte	0x993
 2798 0916 01       		.byte	0x1
 2799 0917 21       		.uleb128 0x21
 2800 0918 D7070000 		.4byte	.LASF108
 2801 091c 01       		.byte	0x1
 2802 091d FB03     		.2byte	0x3fb
 2803 091f 98090000 		.4byte	0x998
 2804 0923 02       		.byte	0x2
 2805 0924 21       		.uleb128 0x21
 2806 0925 AD070000 		.4byte	.LASF109
 2807 0929 01       		.byte	0x1
 2808 092a FC03     		.2byte	0x3fc
 2809 092c 9D090000 		.4byte	0x99d
 2810 0930 04       		.byte	0x4
 2811 0931 21       		.uleb128 0x21
 2812 0932 27000000 		.4byte	.LASF110
 2813 0936 01       		.byte	0x1
 2814 0937 FD03     		.2byte	0x3fd
 2815 0939 A2090000 		.4byte	0x9a2
 2816 093d 08       		.byte	0x8
 2817 093e 21       		.uleb128 0x21
 2818 093f 26070000 		.4byte	.LASF111
 2819 0943 01       		.byte	0x1
 2820 0944 FE03     		.2byte	0x3fe
 2821 0946 F6000000 		.4byte	0xf6
 2822 094a 10       		.byte	0x10
 2823 094b 17       		.uleb128 0x17
 2824 094c 08000000 		.4byte	.LVL79
 2825 0950 0B0F0000 		.4byte	0xf0b
 2826 0954 5E090000 		.4byte	0x95e
 2827 0958 18       		.uleb128 0x18
 2828 0959 01       		.uleb128 0x1
 2829 095a 50       		.byte	0x50
 2830 095b 01       		.uleb128 0x1
 2831 095c 32       		.byte	0x32
 2832 095d 00       		.byte	0
 2833 095e 17       		.uleb128 0x17
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 76


 2834 095f 0E000000 		.4byte	.LVL80
 2835 0963 170F0000 		.4byte	0xf17
 2836 0967 71090000 		.4byte	0x971
 2837 096b 18       		.uleb128 0x18
 2838 096c 01       		.uleb128 0x1
 2839 096d 50       		.byte	0x50
 2840 096e 01       		.uleb128 0x1
 2841 096f 31       		.byte	0x31
 2842 0970 00       		.byte	0
 2843 0971 16       		.uleb128 0x16
 2844 0972 A2000000 		.4byte	.LVL81
 2845 0976 36080000 		.4byte	0x836
 2846 097a 16       		.uleb128 0x16
 2847 097b B0000000 		.4byte	.LVL82
 2848 097f F5060000 		.4byte	0x6f5
 2849 0983 19       		.uleb128 0x19
 2850 0984 B6000000 		.4byte	.LVL83
 2851 0988 170F0000 		.4byte	0xf17
 2852 098c 18       		.uleb128 0x18
 2853 098d 01       		.uleb128 0x1
 2854 098e 50       		.byte	0x50
 2855 098f 01       		.uleb128 0x1
 2856 0990 30       		.byte	0x30
 2857 0991 00       		.byte	0
 2858 0992 00       		.byte	0
 2859 0993 22       		.uleb128 0x22
 2860 0994 F6000000 		.4byte	0xf6
 2861 0998 22       		.uleb128 0x22
 2862 0999 F6000000 		.4byte	0xf6
 2863 099d 22       		.uleb128 0x22
 2864 099e F6000000 		.4byte	0xf6
 2865 09a2 22       		.uleb128 0x22
 2866 09a3 F6000000 		.4byte	0xf6
 2867 09a7 23       		.uleb128 0x23
 2868 09a8 BF090000 		.4byte	.LASF185
 2869 09ac 01       		.byte	0x1
 2870 09ad 4B03     		.2byte	0x34b
 2871 09af B1000000 		.4byte	0xb1
 2872 09b3 00000000 		.4byte	.LFB41
 2873 09b7 44010000 		.4byte	.LFE41-.LFB41
 2874 09bb 01       		.uleb128 0x1
 2875 09bc 9C       		.byte	0x9c
 2876 09bd AE0B0000 		.4byte	0xbae
 2877 09c1 17       		.uleb128 0x17
 2878 09c2 08000000 		.4byte	.LVL84
 2879 09c6 EA0E0000 		.4byte	0xeea
 2880 09ca D4090000 		.4byte	0x9d4
 2881 09ce 18       		.uleb128 0x18
 2882 09cf 01       		.uleb128 0x1
 2883 09d0 50       		.byte	0x50
 2884 09d1 01       		.uleb128 0x1
 2885 09d2 31       		.byte	0x31
 2886 09d3 00       		.byte	0
 2887 09d4 17       		.uleb128 0x17
 2888 09d5 0E000000 		.4byte	.LVL85
 2889 09d9 F50E0000 		.4byte	0xef5
 2890 09dd E7090000 		.4byte	0x9e7
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 77


 2891 09e1 18       		.uleb128 0x18
 2892 09e2 01       		.uleb128 0x1
 2893 09e3 50       		.byte	0x50
 2894 09e4 01       		.uleb128 0x1
 2895 09e5 31       		.byte	0x31
 2896 09e6 00       		.byte	0
 2897 09e7 16       		.uleb128 0x16
 2898 09e8 12000000 		.4byte	.LVL86
 2899 09ec 220F0000 		.4byte	0xf22
 2900 09f0 17       		.uleb128 0x17
 2901 09f1 18000000 		.4byte	.LVL87
 2902 09f5 2E0F0000 		.4byte	0xf2e
 2903 09f9 070A0000 		.4byte	0xa07
 2904 09fd 18       		.uleb128 0x18
 2905 09fe 01       		.uleb128 0x1
 2906 09ff 50       		.byte	0x50
 2907 0a00 05       		.uleb128 0x5
 2908 0a01 03       		.byte	0x3
 2909 0a02 00000000 		.4byte	BRMS_Interrupt
 2910 0a06 00       		.byte	0
 2911 0a07 17       		.uleb128 0x17
 2912 0a08 1E000000 		.4byte	.LVL88
 2913 0a0c 390F0000 		.4byte	0xf39
 2914 0a10 1A0A0000 		.4byte	0xa1a
 2915 0a14 18       		.uleb128 0x18
 2916 0a15 01       		.uleb128 0x1
 2917 0a16 50       		.byte	0x50
 2918 0a17 01       		.uleb128 0x1
 2919 0a18 32       		.byte	0x32
 2920 0a19 00       		.byte	0
 2921 0a1a 17       		.uleb128 0x17
 2922 0a1b 24000000 		.4byte	.LVL89
 2923 0a1f 440F0000 		.4byte	0xf44
 2924 0a23 310A0000 		.4byte	0xa31
 2925 0a27 18       		.uleb128 0x18
 2926 0a28 01       		.uleb128 0x1
 2927 0a29 50       		.byte	0x50
 2928 0a2a 05       		.uleb128 0x5
 2929 0a2b 03       		.byte	0x3
 2930 0a2c 00000000 		.4byte	HomeIsrHandler
 2931 0a30 00       		.byte	0
 2932 0a31 17       		.uleb128 0x17
 2933 0a32 2A000000 		.4byte	.LVL90
 2934 0a36 4F0F0000 		.4byte	0xf4f
 2935 0a3a 440A0000 		.4byte	0xa44
 2936 0a3e 18       		.uleb128 0x18
 2937 0a3f 01       		.uleb128 0x1
 2938 0a40 50       		.byte	0x50
 2939 0a41 01       		.uleb128 0x1
 2940 0a42 33       		.byte	0x33
 2941 0a43 00       		.byte	0
 2942 0a44 17       		.uleb128 0x17
 2943 0a45 30000000 		.4byte	.LVL91
 2944 0a49 5A0F0000 		.4byte	0xf5a
 2945 0a4d 5B0A0000 		.4byte	0xa5b
 2946 0a51 18       		.uleb128 0x18
 2947 0a52 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 78


 2948 0a53 50       		.byte	0x50
 2949 0a54 05       		.uleb128 0x5
 2950 0a55 03       		.byte	0x3
 2951 0a56 00000000 		.4byte	RSTIsrHandler
 2952 0a5a 00       		.byte	0
 2953 0a5b 17       		.uleb128 0x17
 2954 0a5c 36000000 		.4byte	.LVL92
 2955 0a60 650F0000 		.4byte	0xf65
 2956 0a64 6E0A0000 		.4byte	0xa6e
 2957 0a68 18       		.uleb128 0x18
 2958 0a69 01       		.uleb128 0x1
 2959 0a6a 50       		.byte	0x50
 2960 0a6b 01       		.uleb128 0x1
 2961 0a6c 33       		.byte	0x33
 2962 0a6d 00       		.byte	0
 2963 0a6e 17       		.uleb128 0x17
 2964 0a6f 3C000000 		.4byte	.LVL93
 2965 0a73 700F0000 		.4byte	0xf70
 2966 0a77 850A0000 		.4byte	0xa85
 2967 0a7b 18       		.uleb128 0x18
 2968 0a7c 01       		.uleb128 0x1
 2969 0a7d 50       		.byte	0x50
 2970 0a7e 05       		.uleb128 0x5
 2971 0a7f 03       		.byte	0x3
 2972 0a80 00000000 		.4byte	SPI_SS_IsrHandler
 2973 0a84 00       		.byte	0
 2974 0a85 17       		.uleb128 0x17
 2975 0a86 42000000 		.4byte	.LVL94
 2976 0a8a 7B0F0000 		.4byte	0xf7b
 2977 0a8e 980A0000 		.4byte	0xa98
 2978 0a92 18       		.uleb128 0x18
 2979 0a93 01       		.uleb128 0x1
 2980 0a94 50       		.byte	0x50
 2981 0a95 01       		.uleb128 0x1
 2982 0a96 33       		.byte	0x33
 2983 0a97 00       		.byte	0
 2984 0a98 16       		.uleb128 0x16
 2985 0a99 48000000 		.4byte	.LVL95
 2986 0a9d 860F0000 		.4byte	0xf86
 2987 0aa1 17       		.uleb128 0x17
 2988 0aa2 4E000000 		.4byte	.LVL96
 2989 0aa6 910F0000 		.4byte	0xf91
 2990 0aaa B50A0000 		.4byte	0xab5
 2991 0aae 18       		.uleb128 0x18
 2992 0aaf 01       		.uleb128 0x1
 2993 0ab0 50       		.byte	0x50
 2994 0ab1 02       		.uleb128 0x2
 2995 0ab2 08       		.byte	0x8
 2996 0ab3 64       		.byte	0x64
 2997 0ab4 00       		.byte	0
 2998 0ab5 16       		.uleb128 0x16
 2999 0ab6 52000000 		.4byte	.LVL97
 3000 0aba 9C0F0000 		.4byte	0xf9c
 3001 0abe 16       		.uleb128 0x16
 3002 0abf 56000000 		.4byte	.LVL98
 3003 0ac3 A70F0000 		.4byte	0xfa7
 3004 0ac7 17       		.uleb128 0x17
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 79


 3005 0ac8 5E000000 		.4byte	.LVL99
 3006 0acc B30F0000 		.4byte	0xfb3
 3007 0ad0 DC0A0000 		.4byte	0xadc
 3008 0ad4 18       		.uleb128 0x18
 3009 0ad5 01       		.uleb128 0x1
 3010 0ad6 50       		.byte	0x50
 3011 0ad7 03       		.uleb128 0x3
 3012 0ad8 0A       		.byte	0xa
 3013 0ad9 4006     		.2byte	0x640
 3014 0adb 00       		.byte	0
 3015 0adc 17       		.uleb128 0x17
 3016 0add 64000000 		.4byte	.LVL100
 3017 0ae1 6D060000 		.4byte	0x66d
 3018 0ae5 EF0A0000 		.4byte	0xaef
 3019 0ae9 18       		.uleb128 0x18
 3020 0aea 01       		.uleb128 0x1
 3021 0aeb 50       		.byte	0x50
 3022 0aec 01       		.uleb128 0x1
 3023 0aed 30       		.byte	0x30
 3024 0aee 00       		.byte	0
 3025 0aef 16       		.uleb128 0x16
 3026 0af0 72000000 		.4byte	.LVL101
 3027 0af4 BF0F0000 		.4byte	0xfbf
 3028 0af8 17       		.uleb128 0x17
 3029 0af9 7A000000 		.4byte	.LVL102
 3030 0afd 4D0E0000 		.4byte	0xe4d
 3031 0b01 0C0B0000 		.4byte	0xb0c
 3032 0b05 18       		.uleb128 0x18
 3033 0b06 01       		.uleb128 0x1
 3034 0b07 50       		.byte	0x50
 3035 0b08 02       		.uleb128 0x2
 3036 0b09 75       		.byte	0x75
 3037 0b0a 00       		.sleb128 0
 3038 0b0b 00       		.byte	0
 3039 0b0c 16       		.uleb128 0x16
 3040 0b0d 82000000 		.4byte	.LVL103
 3041 0b11 CA0F0000 		.4byte	0xfca
 3042 0b15 17       		.uleb128 0x17
 3043 0b16 88000000 		.4byte	.LVL104
 3044 0b1a 580E0000 		.4byte	0xe58
 3045 0b1e 290B0000 		.4byte	0xb29
 3046 0b22 18       		.uleb128 0x18
 3047 0b23 01       		.uleb128 0x1
 3048 0b24 50       		.byte	0x50
 3049 0b25 02       		.uleb128 0x2
 3050 0b26 74       		.byte	0x74
 3051 0b27 00       		.sleb128 0
 3052 0b28 00       		.byte	0
 3053 0b29 16       		.uleb128 0x16
 3054 0b2a 9A000000 		.4byte	.LVL105
 3055 0b2e CF070000 		.4byte	0x7cf
 3056 0b32 17       		.uleb128 0x17
 3057 0b33 A0000000 		.4byte	.LVL106
 3058 0b37 EF070000 		.4byte	0x7ef
 3059 0b3b 460B0000 		.4byte	0xb46
 3060 0b3f 18       		.uleb128 0x18
 3061 0b40 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 80


 3062 0b41 50       		.byte	0x50
 3063 0b42 02       		.uleb128 0x2
 3064 0b43 74       		.byte	0x74
 3065 0b44 00       		.sleb128 0
 3066 0b45 00       		.byte	0
 3067 0b46 17       		.uleb128 0x17
 3068 0b47 CA000000 		.4byte	.LVL107
 3069 0b4b 6D060000 		.4byte	0x66d
 3070 0b4f 5A0B0000 		.4byte	0xb5a
 3071 0b53 18       		.uleb128 0x18
 3072 0b54 01       		.uleb128 0x1
 3073 0b55 50       		.byte	0x50
 3074 0b56 02       		.uleb128 0x2
 3075 0b57 74       		.byte	0x74
 3076 0b58 00       		.sleb128 0
 3077 0b59 00       		.byte	0
 3078 0b5a 17       		.uleb128 0x17
 3079 0b5b D0000000 		.4byte	.LVL108
 3080 0b5f D50F0000 		.4byte	0xfd5
 3081 0b63 6E0B0000 		.4byte	0xb6e
 3082 0b67 18       		.uleb128 0x18
 3083 0b68 01       		.uleb128 0x1
 3084 0b69 50       		.byte	0x50
 3085 0b6a 02       		.uleb128 0x2
 3086 0b6b 74       		.byte	0x74
 3087 0b6c 00       		.sleb128 0
 3088 0b6d 00       		.byte	0
 3089 0b6e 16       		.uleb128 0x16
 3090 0b6f D4000000 		.4byte	.LVL109
 3091 0b73 34060000 		.4byte	0x634
 3092 0b77 17       		.uleb128 0x17
 3093 0b78 E6000000 		.4byte	.LVL110
 3094 0b7c E00F0000 		.4byte	0xfe0
 3095 0b80 8A0B0000 		.4byte	0xb8a
 3096 0b84 18       		.uleb128 0x18
 3097 0b85 01       		.uleb128 0x1
 3098 0b86 50       		.byte	0x50
 3099 0b87 01       		.uleb128 0x1
 3100 0b88 31       		.byte	0x31
 3101 0b89 00       		.byte	0
 3102 0b8a 17       		.uleb128 0x17
 3103 0b8b EE000000 		.4byte	.LVL111
 3104 0b8f E00F0000 		.4byte	0xfe0
 3105 0b93 9E0B0000 		.4byte	0xb9e
 3106 0b97 18       		.uleb128 0x18
 3107 0b98 01       		.uleb128 0x1
 3108 0b99 50       		.byte	0x50
 3109 0b9a 02       		.uleb128 0x2
 3110 0b9b 74       		.byte	0x74
 3111 0b9c 00       		.sleb128 0
 3112 0b9d 00       		.byte	0
 3113 0b9e 19       		.uleb128 0x19
 3114 0b9f F4000000 		.4byte	.LVL112
 3115 0ba3 910F0000 		.4byte	0xf91
 3116 0ba7 18       		.uleb128 0x18
 3117 0ba8 01       		.uleb128 0x1
 3118 0ba9 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 81


 3119 0baa 01       		.uleb128 0x1
 3120 0bab 3A       		.byte	0x3a
 3121 0bac 00       		.byte	0
 3122 0bad 00       		.byte	0
 3123 0bae 24       		.uleb128 0x24
 3124 0baf C4090000 		.4byte	.LASF80
 3125 0bb3 05       		.byte	0x5
 3126 0bb4 0F       		.byte	0xf
 3127 0bb5 EB000000 		.4byte	0xeb
 3128 0bb9 24       		.uleb128 0x24
 3129 0bba 29050000 		.4byte	.LASF82
 3130 0bbe 05       		.byte	0x5
 3131 0bbf 10       		.byte	0x10
 3132 0bc0 EB000000 		.4byte	0xeb
 3133 0bc4 25       		.uleb128 0x25
 3134 0bc5 34030000 		.4byte	.LASF112
 3135 0bc9 01       		.byte	0x1
 3136 0bca 5B       		.byte	0x5b
 3137 0bcb 2F080000 		.4byte	0x82f
 3138 0bcf 05       		.uleb128 0x5
 3139 0bd0 03       		.byte	0x3
 3140 0bd1 00000000 		.4byte	inAuto
 3141 0bd5 26       		.uleb128 0x26
 3142 0bd6 4A6F6700 		.ascii	"Jog\000"
 3143 0bda 01       		.byte	0x1
 3144 0bdb 5D       		.byte	0x5d
 3145 0bdc E60B0000 		.4byte	0xbe6
 3146 0be0 05       		.uleb128 0x5
 3147 0be1 03       		.byte	0x3
 3148 0be2 00000000 		.4byte	Jog
 3149 0be6 06       		.uleb128 0x6
 3150 0be7 BF000000 		.4byte	0xbf
 3151 0beb 25       		.uleb128 0x25
 3152 0bec 15070000 		.4byte	.LASF113
 3153 0bf0 01       		.byte	0x1
 3154 0bf1 5E       		.byte	0x5e
 3155 0bf2 2F080000 		.4byte	0x82f
 3156 0bf6 05       		.uleb128 0x5
 3157 0bf7 03       		.byte	0x3
 3158 0bf8 00000000 		.4byte	PID_Enabled
 3159 0bfc 25       		.uleb128 0x25
 3160 0bfd 05070000 		.4byte	.LASF114
 3161 0c01 01       		.byte	0x1
 3162 0c02 5E       		.byte	0x5e
 3163 0c03 2F080000 		.4byte	0x82f
 3164 0c07 05       		.uleb128 0x5
 3165 0c08 03       		.byte	0x3
 3166 0c09 00000000 		.4byte	PID_Was_Enabled
 3167 0c0d 25       		.uleb128 0x25
 3168 0c0e 19080000 		.4byte	.LASF115
 3169 0c12 01       		.byte	0x1
 3170 0c13 5F       		.byte	0x5f
 3171 0c14 EB000000 		.4byte	0xeb
 3172 0c18 05       		.uleb128 0x5
 3173 0c19 03       		.byte	0x3
 3174 0c1a 00000000 		.4byte	PID_Setpoint
 3175 0c1e 25       		.uleb128 0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 82


 3176 0c1f 760A0000 		.4byte	.LASF116
 3177 0c23 01       		.byte	0x1
 3178 0c24 5F       		.byte	0x5f
 3179 0c25 EB000000 		.4byte	0xeb
 3180 0c29 05       		.uleb128 0x5
 3181 0c2a 03       		.byte	0x3
 3182 0c2b 00000000 		.4byte	PID_EffectiveSetpoint
 3183 0c2f 25       		.uleb128 0x25
 3184 0c30 F8010000 		.4byte	.LASF117
 3185 0c34 01       		.byte	0x1
 3186 0c35 60       		.byte	0x60
 3187 0c36 CA000000 		.4byte	0xca
 3188 0c3a 05       		.uleb128 0x5
 3189 0c3b 03       		.byte	0x3
 3190 0c3c 00000000 		.4byte	PID_EffSetDelta
 3191 0c40 25       		.uleb128 0x25
 3192 0c41 08020000 		.4byte	.LASF118
 3193 0c45 01       		.byte	0x1
 3194 0c46 61       		.byte	0x61
 3195 0c47 F6000000 		.4byte	0xf6
 3196 0c4b 05       		.uleb128 0x5
 3197 0c4c 03       		.byte	0x3
 3198 0c4d 00000000 		.4byte	lastTime
 3199 0c51 25       		.uleb128 0x25
 3200 0c52 CA030000 		.4byte	.LASF119
 3201 0c56 01       		.byte	0x1
 3202 0c57 63       		.byte	0x63
 3203 0c58 F0060000 		.4byte	0x6f0
 3204 0c5c 05       		.uleb128 0x5
 3205 0c5d 03       		.byte	0x3
 3206 0c5e 00000000 		.4byte	Position
 3207 0c62 25       		.uleb128 0x25
 3208 0c63 0C060000 		.4byte	.LASF120
 3209 0c67 01       		.byte	0x1
 3210 0c68 63       		.byte	0x63
 3211 0c69 F0060000 		.4byte	0x6f0
 3212 0c6d 05       		.uleb128 0x5
 3213 0c6e 03       		.byte	0x3
 3214 0c6f 00000000 		.4byte	LastPosition
 3215 0c73 25       		.uleb128 0x25
 3216 0c74 CC060000 		.4byte	.LASF121
 3217 0c78 01       		.byte	0x1
 3218 0c79 64       		.byte	0x64
 3219 0c7a F0060000 		.4byte	0x6f0
 3220 0c7e 05       		.uleb128 0x5
 3221 0c7f 03       		.byte	0x3
 3222 0c80 00000000 		.4byte	Output
 3223 0c84 25       		.uleb128 0x25
 3224 0c85 4E020000 		.4byte	.LASF59
 3225 0c89 01       		.byte	0x1
 3226 0c8a 65       		.byte	0x65
 3227 0c8b 950C0000 		.4byte	0xc95
 3228 0c8f 05       		.uleb128 0x5
 3229 0c90 03       		.byte	0x3
 3230 0c91 00000000 		.4byte	limitOutput
 3231 0c95 06       		.uleb128 0x6
 3232 0c96 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 83


 3233 0c9a 25       		.uleb128 0x25
 3234 0c9b 3D040000 		.4byte	.LASF60
 3235 0c9f 01       		.byte	0x1
 3236 0ca0 66       		.byte	0x66
 3237 0ca1 950C0000 		.4byte	0xc95
 3238 0ca5 05       		.uleb128 0x5
 3239 0ca6 03       		.byte	0x3
 3240 0ca7 00000000 		.4byte	limitIterm
 3241 0cab 25       		.uleb128 0x25
 3242 0cac 25090000 		.4byte	.LASF122
 3243 0cb0 01       		.byte	0x1
 3244 0cb1 68       		.byte	0x68
 3245 0cb2 2F080000 		.4byte	0x82f
 3246 0cb6 05       		.uleb128 0x5
 3247 0cb7 03       		.byte	0x3
 3248 0cb8 00000000 		.4byte	homingDone
 3249 0cbc 25       		.uleb128 0x25
 3250 0cbd 55070000 		.4byte	.LASF123
 3251 0cc1 01       		.byte	0x1
 3252 0cc2 73       		.byte	0x73
 3253 0cc3 F6000000 		.4byte	0xf6
 3254 0cc7 05       		.uleb128 0x5
 3255 0cc8 03       		.byte	0x3
 3256 0cc9 00000000 		.4byte	LastMoveStartTimeUsec
 3257 0ccd 25       		.uleb128 0x25
 3258 0cce 30090000 		.4byte	.LASF124
 3259 0cd2 01       		.byte	0x1
 3260 0cd3 74       		.byte	0x74
 3261 0cd4 F6000000 		.4byte	0xf6
 3262 0cd8 05       		.uleb128 0x5
 3263 0cd9 03       		.byte	0x3
 3264 0cda 00000000 		.4byte	LastMoveEndTimeUsec
 3265 0cde 25       		.uleb128 0x25
 3266 0cdf 2F010000 		.4byte	.LASF125
 3267 0ce3 01       		.byte	0x1
 3268 0ce4 77       		.byte	0x77
 3269 0ce5 E0000000 		.4byte	0xe0
 3270 0ce9 05       		.uleb128 0x5
 3271 0cea 03       		.byte	0x3
 3272 0ceb 00000000 		.4byte	LastMoveStableCount
 3273 0cef 25       		.uleb128 0x25
 3274 0cf0 CA040000 		.4byte	.LASF126
 3275 0cf4 01       		.byte	0x1
 3276 0cf5 7A       		.byte	0x7a
 3277 0cf6 F6000000 		.4byte	0xf6
 3278 0cfa 05       		.uleb128 0x5
 3279 0cfb 03       		.byte	0x3
 3280 0cfc 00000000 		.4byte	LastMoveTimeUsec
 3281 0d00 25       		.uleb128 0x25
 3282 0d01 3A060000 		.4byte	.LASF127
 3283 0d05 01       		.byte	0x1
 3284 0d06 7D       		.byte	0x7d
 3285 0d07 2F080000 		.4byte	0x82f
 3286 0d0b 05       		.uleb128 0x5
 3287 0d0c 03       		.byte	0x3
 3288 0d0d 00000000 		.4byte	NewCommandedMove
 3289 0d11 25       		.uleb128 0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 84


 3290 0d12 71080000 		.4byte	.LASF128
 3291 0d16 01       		.byte	0x1
 3292 0d17 82       		.byte	0x82
 3293 0d18 220D0000 		.4byte	0xd22
 3294 0d1c 05       		.uleb128 0x5
 3295 0d1d 03       		.byte	0x3
 3296 0d1e 00000000 		.4byte	UptimeMicroseconds
 3297 0d22 06       		.uleb128 0x6
 3298 0d23 01010000 		.4byte	0x101
 3299 0d27 25       		.uleb128 0x25
 3300 0d28 E7090000 		.4byte	.LASF129
 3301 0d2c 01       		.byte	0x1
 3302 0d2d 83       		.byte	0x83
 3303 0d2e 220D0000 		.4byte	0xd22
 3304 0d32 05       		.uleb128 0x5
 3305 0d33 03       		.byte	0x3
 3306 0d34 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3307 0d38 25       		.uleb128 0x25
 3308 0d39 72030000 		.4byte	.LASF130
 3309 0d3d 01       		.byte	0x1
 3310 0d3e 84       		.byte	0x84
 3311 0d3f 220D0000 		.4byte	0xd22
 3312 0d43 05       		.uleb128 0x5
 3313 0d44 03       		.byte	0x3
 3314 0d45 00000000 		.4byte	UptimeMilliseconds
 3315 0d49 25       		.uleb128 0x25
 3316 0d4a 5D050000 		.4byte	.LASF131
 3317 0d4e 01       		.byte	0x1
 3318 0d4f 85       		.byte	0x85
 3319 0d50 220D0000 		.4byte	0xd22
 3320 0d54 05       		.uleb128 0x5
 3321 0d55 03       		.byte	0x3
 3322 0d56 00000000 		.4byte	UptimeMillisecondsAccumulator
 3323 0d5a 25       		.uleb128 0x25
 3324 0d5b EF070000 		.4byte	.LASF132
 3325 0d5f 01       		.byte	0x1
 3326 0d60 86       		.byte	0x86
 3327 0d61 220D0000 		.4byte	0xd22
 3328 0d65 05       		.uleb128 0x5
 3329 0d66 03       		.byte	0x3
 3330 0d67 00000000 		.4byte	UptimeSeconds
 3331 0d6b 25       		.uleb128 0x25
 3332 0d6c 42020000 		.4byte	.LASF133
 3333 0d70 01       		.byte	0x1
 3334 0d71 B2       		.byte	0xb2
 3335 0d72 7C0D0000 		.4byte	0xd7c
 3336 0d76 05       		.uleb128 0x5
 3337 0d77 03       		.byte	0x3
 3338 0d78 00000000 		.4byte	ConfigState
 3339 0d7c 06       		.uleb128 0x6
 3340 0d7d 6F010000 		.4byte	0x16f
 3341 0d81 25       		.uleb128 0x25
 3342 0d82 E5080000 		.4byte	.LASF134
 3343 0d86 01       		.byte	0x1
 3344 0d87 B3       		.byte	0xb3
 3345 0d88 920D0000 		.4byte	0xd92
 3346 0d8c 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 85


 3347 0d8d 03       		.byte	0x3
 3348 0d8e 00000000 		.4byte	FaultState
 3349 0d92 06       		.uleb128 0x6
 3350 0d93 CA000000 		.4byte	0xca
 3351 0d97 25       		.uleb128 0x25
 3352 0d98 16090000 		.4byte	.LASF135
 3353 0d9c 01       		.byte	0x1
 3354 0d9d B4       		.byte	0xb4
 3355 0d9e 920D0000 		.4byte	0xd92
 3356 0da2 05       		.uleb128 0x5
 3357 0da3 03       		.byte	0x3
 3358 0da4 00000000 		.4byte	ConfigSequence
 3359 0da8 25       		.uleb128 0x25
 3360 0da9 3F080000 		.4byte	.LASF136
 3361 0dad 01       		.byte	0x1
 3362 0dae B5       		.byte	0xb5
 3363 0daf 950C0000 		.4byte	0xc95
 3364 0db3 05       		.uleb128 0x5
 3365 0db4 03       		.byte	0x3
 3366 0db5 00000000 		.4byte	ChecksumErrors
 3367 0db9 25       		.uleb128 0x25
 3368 0dba 11020000 		.4byte	.LASF137
 3369 0dbe 01       		.byte	0x1
 3370 0dbf B6       		.byte	0xb6
 3371 0dc0 CA0D0000 		.4byte	0xdca
 3372 0dc4 05       		.uleb128 0x5
 3373 0dc5 03       		.byte	0x3
 3374 0dc6 00000000 		.4byte	MotorCurrent
 3375 0dca 06       		.uleb128 0x6
 3376 0dcb D5000000 		.4byte	0xd5
 3377 0dcf 0F       		.uleb128 0xf
 3378 0dd0 CA000000 		.4byte	0xca
 3379 0dd4 DF0D0000 		.4byte	0xddf
 3380 0dd8 10       		.uleb128 0x10
 3381 0dd9 3E010000 		.4byte	0x13e
 3382 0ddd 13       		.byte	0x13
 3383 0dde 00       		.byte	0
 3384 0ddf 25       		.uleb128 0x25
 3385 0de0 E4050000 		.4byte	.LASF138
 3386 0de4 01       		.byte	0x1
 3387 0de5 B7       		.byte	0xb7
 3388 0de6 CF0D0000 		.4byte	0xdcf
 3389 0dea 05       		.uleb128 0x5
 3390 0deb 03       		.byte	0x3
 3391 0dec 00000000 		.4byte	CurrentI2Cinbuf
 3392 0df0 25       		.uleb128 0x25
 3393 0df1 96070000 		.4byte	.LASF139
 3394 0df5 01       		.byte	0x1
 3395 0df6 C9       		.byte	0xc9
 3396 0df7 F6000000 		.4byte	0xf6
 3397 0dfb 05       		.uleb128 0x5
 3398 0dfc 03       		.byte	0x3
 3399 0dfd 00000000 		.4byte	LastMessageTimeSeconds
 3400 0e01 27       		.uleb128 0x27
 3401 0e02 08000000 		.4byte	.LASF140
 3402 0e06 01       		.byte	0x1
 3403 0e07 0801     		.2byte	0x108
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 86


 3404 0e09 6E030000 		.4byte	0x36e
 3405 0e0d 05       		.uleb128 0x5
 3406 0e0e 03       		.byte	0x3
 3407 0e0f 00000000 		.4byte	rxMessage
 3408 0e13 27       		.uleb128 0x27
 3409 0e14 19060000 		.4byte	.LASF141
 3410 0e18 01       		.byte	0x1
 3411 0e19 2201     		.2byte	0x122
 3412 0e1b AA040000 		.4byte	0x4aa
 3413 0e1f 05       		.uleb128 0x5
 3414 0e20 03       		.byte	0x3
 3415 0e21 00000000 		.4byte	txMessage
 3416 0e25 27       		.uleb128 0x27
 3417 0e26 670A0000 		.4byte	.LASF142
 3418 0e2a 01       		.byte	0x1
 3419 0e2b 2A01     		.2byte	0x12a
 3420 0e2d E6040000 		.4byte	0x4e6
 3421 0e31 05       		.uleb128 0x5
 3422 0e32 03       		.byte	0x3
 3423 0e33 00000000 		.4byte	txMessageState
 3424 0e37 28       		.uleb128 0x28
 3425 0e38 96040000 		.4byte	.LASF143
 3426 0e3c 96040000 		.4byte	.LASF143
 3427 0e40 06       		.byte	0x6
 3428 0e41 28       		.byte	0x28
 3429 0e42 28       		.uleb128 0x28
 3430 0e43 44090000 		.4byte	.LASF144
 3431 0e47 44090000 		.4byte	.LASF144
 3432 0e4b 07       		.byte	0x7
 3433 0e4c 39       		.byte	0x39
 3434 0e4d 28       		.uleb128 0x28
 3435 0e4e 23060000 		.4byte	.LASF145
 3436 0e52 23060000 		.4byte	.LASF145
 3437 0e56 08       		.byte	0x8
 3438 0e57 5A       		.byte	0x5a
 3439 0e58 28       		.uleb128 0x28
 3440 0e59 5F040000 		.4byte	.LASF146
 3441 0e5d 5F040000 		.4byte	.LASF146
 3442 0e61 09       		.byte	0x9
 3443 0e62 5A       		.byte	0x5a
 3444 0e63 28       		.uleb128 0x28
 3445 0e64 260A0000 		.4byte	.LASF147
 3446 0e68 260A0000 		.4byte	.LASF147
 3447 0e6c 0A       		.byte	0xa
 3448 0e6d 28       		.byte	0x28
 3449 0e6e 28       		.uleb128 0x28
 3450 0e6f D8000000 		.4byte	.LASF148
 3451 0e73 D8000000 		.4byte	.LASF148
 3452 0e77 0B       		.byte	0xb
 3453 0e78 39       		.byte	0x39
 3454 0e79 28       		.uleb128 0x28
 3455 0e7a 5C030000 		.4byte	.LASF149
 3456 0e7e 5C030000 		.4byte	.LASF149
 3457 0e82 0C       		.byte	0xc
 3458 0e83 39       		.byte	0x39
 3459 0e84 28       		.uleb128 0x28
 3460 0e85 1D050000 		.4byte	.LASF150
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 87


 3461 0e89 1D050000 		.4byte	.LASF150
 3462 0e8d 0C       		.byte	0xc
 3463 0e8e 32       		.byte	0x32
 3464 0e8f 29       		.uleb128 0x29
 3465 0e90 56050000 		.4byte	.LASF186
 3466 0e94 56050000 		.4byte	.LASF186
 3467 0e98 2A       		.uleb128 0x2a
 3468 0e99 F4050000 		.4byte	.LASF151
 3469 0e9d F4050000 		.4byte	.LASF151
 3470 0ea1 0D       		.byte	0xd
 3471 0ea2 3D03     		.2byte	0x33d
 3472 0ea4 2A       		.uleb128 0x2a
 3473 0ea5 1B040000 		.4byte	.LASF152
 3474 0ea9 1B040000 		.4byte	.LASF152
 3475 0ead 0D       		.byte	0xd
 3476 0eae 3F03     		.2byte	0x33f
 3477 0eb0 2A       		.uleb128 0x2a
 3478 0eb1 4B010000 		.4byte	.LASF153
 3479 0eb5 4B010000 		.4byte	.LASF153
 3480 0eb9 0D       		.byte	0xd
 3481 0eba 4703     		.2byte	0x347
 3482 0ebc 28       		.uleb128 0x28
 3483 0ebd 0E050000 		.4byte	.LASF154
 3484 0ec1 0E050000 		.4byte	.LASF154
 3485 0ec5 0E       		.byte	0xe
 3486 0ec6 6F       		.byte	0x6f
 3487 0ec7 2A       		.uleb128 0x2a
 3488 0ec8 7C040000 		.4byte	.LASF155
 3489 0ecc 7C040000 		.4byte	.LASF155
 3490 0ed0 0F       		.byte	0xf
 3491 0ed1 5501     		.2byte	0x155
 3492 0ed3 28       		.uleb128 0x28
 3493 0ed4 85030000 		.4byte	.LASF156
 3494 0ed8 85030000 		.4byte	.LASF156
 3495 0edc 08       		.byte	0x8
 3496 0edd 5D       		.byte	0x5d
 3497 0ede 2A       		.uleb128 0x2a
 3498 0edf 46030000 		.4byte	.LASF157
 3499 0ee3 46030000 		.4byte	.LASF157
 3500 0ee7 0D       		.byte	0xd
 3501 0ee8 4503     		.2byte	0x345
 3502 0eea 28       		.uleb128 0x28
 3503 0eeb 74070000 		.4byte	.LASF158
 3504 0eef 74070000 		.4byte	.LASF158
 3505 0ef3 10       		.byte	0x10
 3506 0ef4 36       		.byte	0x36
 3507 0ef5 28       		.uleb128 0x28
 3508 0ef6 3F050000 		.4byte	.LASF159
 3509 0efa 3F050000 		.4byte	.LASF159
 3510 0efe 11       		.byte	0x11
 3511 0eff 36       		.byte	0x36
 3512 0f00 28       		.uleb128 0x28
 3513 0f01 E7030000 		.4byte	.LASF160
 3514 0f05 E7030000 		.4byte	.LASF160
 3515 0f09 05       		.byte	0x5
 3516 0f0a 11       		.byte	0x11
 3517 0f0b 2A       		.uleb128 0x2a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 88


 3518 0f0c E9040000 		.4byte	.LASF161
 3519 0f10 E9040000 		.4byte	.LASF161
 3520 0f14 12       		.byte	0x12
 3521 0f15 4701     		.2byte	0x147
 3522 0f17 28       		.uleb128 0x28
 3523 0f18 74090000 		.4byte	.LASF162
 3524 0f1c 74090000 		.4byte	.LASF162
 3525 0f20 13       		.byte	0x13
 3526 0f21 33       		.byte	0x33
 3527 0f22 2A       		.uleb128 0x2a
 3528 0f23 0E030000 		.4byte	.LASF163
 3529 0f27 0E030000 		.4byte	.LASF163
 3530 0f2b 12       		.byte	0x12
 3531 0f2c 3201     		.2byte	0x132
 3532 0f2e 28       		.uleb128 0x28
 3533 0f2f FD020000 		.4byte	.LASF164
 3534 0f33 FD020000 		.4byte	.LASF164
 3535 0f37 14       		.byte	0x14
 3536 0f38 18       		.byte	0x18
 3537 0f39 28       		.uleb128 0x28
 3538 0f3a 87060000 		.4byte	.LASF165
 3539 0f3e 87060000 		.4byte	.LASF165
 3540 0f42 14       		.byte	0x14
 3541 0f43 20       		.byte	0x20
 3542 0f44 28       		.uleb128 0x28
 3543 0f45 80090000 		.4byte	.LASF166
 3544 0f49 80090000 		.4byte	.LASF166
 3545 0f4d 0A       		.byte	0xa
 3546 0f4e 18       		.byte	0x18
 3547 0f4f 28       		.uleb128 0x28
 3548 0f50 E8020000 		.4byte	.LASF167
 3549 0f54 E8020000 		.4byte	.LASF167
 3550 0f58 0A       		.byte	0xa
 3551 0f59 20       		.byte	0x20
 3552 0f5a 28       		.uleb128 0x28
 3553 0f5b 0E0A0000 		.4byte	.LASF168
 3554 0f5f 0E0A0000 		.4byte	.LASF168
 3555 0f63 06       		.byte	0x6
 3556 0f64 18       		.byte	0x18
 3557 0f65 28       		.uleb128 0x28
 3558 0f66 FD070000 		.4byte	.LASF169
 3559 0f6a FD070000 		.4byte	.LASF169
 3560 0f6e 06       		.byte	0x6
 3561 0f6f 20       		.byte	0x20
 3562 0f70 28       		.uleb128 0x28
 3563 0f71 AF010000 		.4byte	.LASF170
 3564 0f75 AF010000 		.4byte	.LASF170
 3565 0f79 15       		.byte	0x15
 3566 0f7a 18       		.byte	0x18
 3567 0f7b 28       		.uleb128 0x28
 3568 0f7c B3040000 		.4byte	.LASF171
 3569 0f80 B3040000 		.4byte	.LASF171
 3570 0f84 15       		.byte	0x15
 3571 0f85 20       		.byte	0x20
 3572 0f86 28       		.uleb128 0x28
 3573 0f87 25010000 		.4byte	.LASF172
 3574 0f8b 25010000 		.4byte	.LASF172
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 89


 3575 0f8f 16       		.byte	0x16
 3576 0f90 72       		.byte	0x72
 3577 0f91 28       		.uleb128 0x28
 3578 0f92 00000000 		.4byte	.LASF173
 3579 0f96 00000000 		.4byte	.LASF173
 3580 0f9a 17       		.byte	0x17
 3581 0f9b EC       		.byte	0xec
 3582 0f9c 28       		.uleb128 0x28
 3583 0f9d AB080000 		.4byte	.LASF174
 3584 0fa1 AB080000 		.4byte	.LASF174
 3585 0fa5 18       		.byte	0x18
 3586 0fa6 72       		.byte	0x72
 3587 0fa7 2A       		.uleb128 0x2a
 3588 0fa8 49070000 		.4byte	.LASF175
 3589 0fac 49070000 		.4byte	.LASF175
 3590 0fb0 0F       		.byte	0xf
 3591 0fb1 3201     		.2byte	0x132
 3592 0fb3 2A       		.uleb128 0x2a
 3593 0fb4 30020000 		.4byte	.LASF176
 3594 0fb8 30020000 		.4byte	.LASF176
 3595 0fbc 0F       		.byte	0xf
 3596 0fbd 5001     		.2byte	0x150
 3597 0fbf 28       		.uleb128 0x28
 3598 0fc0 A0000000 		.4byte	.LASF177
 3599 0fc4 A0000000 		.4byte	.LASF177
 3600 0fc8 08       		.byte	0x8
 3601 0fc9 4F       		.byte	0x4f
 3602 0fca 28       		.uleb128 0x28
 3603 0fcb D1090000 		.4byte	.LASF178
 3604 0fcf D1090000 		.4byte	.LASF178
 3605 0fd3 09       		.byte	0x9
 3606 0fd4 4F       		.byte	0x4f
 3607 0fd5 28       		.uleb128 0x28
 3608 0fd6 F0080000 		.4byte	.LASF179
 3609 0fda F0080000 		.4byte	.LASF179
 3610 0fde 19       		.byte	0x19
 3611 0fdf 2F       		.byte	0x2f
 3612 0fe0 28       		.uleb128 0x28
 3613 0fe1 EF000000 		.4byte	.LASF180
 3614 0fe5 EF000000 		.4byte	.LASF180
 3615 0fe9 1A       		.byte	0x1a
 3616 0fea 33       		.byte	0x33
 3617 0feb 00       		.byte	0
 3618              		.section	.debug_abbrev,"",%progbits
 3619              	.Ldebug_abbrev0:
 3620 0000 01       		.uleb128 0x1
 3621 0001 11       		.uleb128 0x11
 3622 0002 01       		.byte	0x1
 3623 0003 25       		.uleb128 0x25
 3624 0004 0E       		.uleb128 0xe
 3625 0005 13       		.uleb128 0x13
 3626 0006 0B       		.uleb128 0xb
 3627 0007 03       		.uleb128 0x3
 3628 0008 0E       		.uleb128 0xe
 3629 0009 1B       		.uleb128 0x1b
 3630 000a 0E       		.uleb128 0xe
 3631 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 90


 3632 000c 17       		.uleb128 0x17
 3633 000d 11       		.uleb128 0x11
 3634 000e 01       		.uleb128 0x1
 3635 000f 10       		.uleb128 0x10
 3636 0010 17       		.uleb128 0x17
 3637 0011 00       		.byte	0
 3638 0012 00       		.byte	0
 3639 0013 02       		.uleb128 0x2
 3640 0014 24       		.uleb128 0x24
 3641 0015 00       		.byte	0
 3642 0016 0B       		.uleb128 0xb
 3643 0017 0B       		.uleb128 0xb
 3644 0018 3E       		.uleb128 0x3e
 3645 0019 0B       		.uleb128 0xb
 3646 001a 03       		.uleb128 0x3
 3647 001b 0E       		.uleb128 0xe
 3648 001c 00       		.byte	0
 3649 001d 00       		.byte	0
 3650 001e 03       		.uleb128 0x3
 3651 001f 16       		.uleb128 0x16
 3652 0020 00       		.byte	0
 3653 0021 03       		.uleb128 0x3
 3654 0022 0E       		.uleb128 0xe
 3655 0023 3A       		.uleb128 0x3a
 3656 0024 0B       		.uleb128 0xb
 3657 0025 3B       		.uleb128 0x3b
 3658 0026 0B       		.uleb128 0xb
 3659 0027 49       		.uleb128 0x49
 3660 0028 13       		.uleb128 0x13
 3661 0029 00       		.byte	0
 3662 002a 00       		.byte	0
 3663 002b 04       		.uleb128 0x4
 3664 002c 24       		.uleb128 0x24
 3665 002d 00       		.byte	0
 3666 002e 0B       		.uleb128 0xb
 3667 002f 0B       		.uleb128 0xb
 3668 0030 3E       		.uleb128 0x3e
 3669 0031 0B       		.uleb128 0xb
 3670 0032 03       		.uleb128 0x3
 3671 0033 08       		.uleb128 0x8
 3672 0034 00       		.byte	0
 3673 0035 00       		.byte	0
 3674 0036 05       		.uleb128 0x5
 3675 0037 16       		.uleb128 0x16
 3676 0038 00       		.byte	0
 3677 0039 03       		.uleb128 0x3
 3678 003a 0E       		.uleb128 0xe
 3679 003b 3A       		.uleb128 0x3a
 3680 003c 0B       		.uleb128 0xb
 3681 003d 3B       		.uleb128 0x3b
 3682 003e 05       		.uleb128 0x5
 3683 003f 49       		.uleb128 0x49
 3684 0040 13       		.uleb128 0x13
 3685 0041 00       		.byte	0
 3686 0042 00       		.byte	0
 3687 0043 06       		.uleb128 0x6
 3688 0044 35       		.uleb128 0x35
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 91


 3689 0045 00       		.byte	0
 3690 0046 49       		.uleb128 0x49
 3691 0047 13       		.uleb128 0x13
 3692 0048 00       		.byte	0
 3693 0049 00       		.byte	0
 3694 004a 07       		.uleb128 0x7
 3695 004b 04       		.uleb128 0x4
 3696 004c 01       		.byte	0x1
 3697 004d 0B       		.uleb128 0xb
 3698 004e 0B       		.uleb128 0xb
 3699 004f 49       		.uleb128 0x49
 3700 0050 13       		.uleb128 0x13
 3701 0051 3A       		.uleb128 0x3a
 3702 0052 0B       		.uleb128 0xb
 3703 0053 3B       		.uleb128 0x3b
 3704 0054 0B       		.uleb128 0xb
 3705 0055 01       		.uleb128 0x1
 3706 0056 13       		.uleb128 0x13
 3707 0057 00       		.byte	0
 3708 0058 00       		.byte	0
 3709 0059 08       		.uleb128 0x8
 3710 005a 28       		.uleb128 0x28
 3711 005b 00       		.byte	0
 3712 005c 03       		.uleb128 0x3
 3713 005d 0E       		.uleb128 0xe
 3714 005e 1C       		.uleb128 0x1c
 3715 005f 0B       		.uleb128 0xb
 3716 0060 00       		.byte	0
 3717 0061 00       		.byte	0
 3718 0062 09       		.uleb128 0x9
 3719 0063 13       		.uleb128 0x13
 3720 0064 01       		.byte	0x1
 3721 0065 0B       		.uleb128 0xb
 3722 0066 0B       		.uleb128 0xb
 3723 0067 3A       		.uleb128 0x3a
 3724 0068 0B       		.uleb128 0xb
 3725 0069 3B       		.uleb128 0x3b
 3726 006a 0B       		.uleb128 0xb
 3727 006b 01       		.uleb128 0x1
 3728 006c 13       		.uleb128 0x13
 3729 006d 00       		.byte	0
 3730 006e 00       		.byte	0
 3731 006f 0A       		.uleb128 0xa
 3732 0070 0D       		.uleb128 0xd
 3733 0071 00       		.byte	0
 3734 0072 03       		.uleb128 0x3
 3735 0073 0E       		.uleb128 0xe
 3736 0074 3A       		.uleb128 0x3a
 3737 0075 0B       		.uleb128 0xb
 3738 0076 3B       		.uleb128 0x3b
 3739 0077 0B       		.uleb128 0xb
 3740 0078 49       		.uleb128 0x49
 3741 0079 13       		.uleb128 0x13
 3742 007a 38       		.uleb128 0x38
 3743 007b 0B       		.uleb128 0xb
 3744 007c 00       		.byte	0
 3745 007d 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 92


 3746 007e 0B       		.uleb128 0xb
 3747 007f 0D       		.uleb128 0xd
 3748 0080 00       		.byte	0
 3749 0081 03       		.uleb128 0x3
 3750 0082 08       		.uleb128 0x8
 3751 0083 3A       		.uleb128 0x3a
 3752 0084 0B       		.uleb128 0xb
 3753 0085 3B       		.uleb128 0x3b
 3754 0086 0B       		.uleb128 0xb
 3755 0087 49       		.uleb128 0x49
 3756 0088 13       		.uleb128 0x13
 3757 0089 38       		.uleb128 0x38
 3758 008a 0B       		.uleb128 0xb
 3759 008b 00       		.byte	0
 3760 008c 00       		.byte	0
 3761 008d 0C       		.uleb128 0xc
 3762 008e 17       		.uleb128 0x17
 3763 008f 01       		.byte	0x1
 3764 0090 0B       		.uleb128 0xb
 3765 0091 0B       		.uleb128 0xb
 3766 0092 3A       		.uleb128 0x3a
 3767 0093 0B       		.uleb128 0xb
 3768 0094 3B       		.uleb128 0x3b
 3769 0095 05       		.uleb128 0x5
 3770 0096 01       		.uleb128 0x1
 3771 0097 13       		.uleb128 0x13
 3772 0098 00       		.byte	0
 3773 0099 00       		.byte	0
 3774 009a 0D       		.uleb128 0xd
 3775 009b 0D       		.uleb128 0xd
 3776 009c 00       		.byte	0
 3777 009d 03       		.uleb128 0x3
 3778 009e 08       		.uleb128 0x8
 3779 009f 3A       		.uleb128 0x3a
 3780 00a0 0B       		.uleb128 0xb
 3781 00a1 3B       		.uleb128 0x3b
 3782 00a2 05       		.uleb128 0x5
 3783 00a3 49       		.uleb128 0x49
 3784 00a4 13       		.uleb128 0x13
 3785 00a5 00       		.byte	0
 3786 00a6 00       		.byte	0
 3787 00a7 0E       		.uleb128 0xe
 3788 00a8 0D       		.uleb128 0xd
 3789 00a9 00       		.byte	0
 3790 00aa 03       		.uleb128 0x3
 3791 00ab 0E       		.uleb128 0xe
 3792 00ac 3A       		.uleb128 0x3a
 3793 00ad 0B       		.uleb128 0xb
 3794 00ae 3B       		.uleb128 0x3b
 3795 00af 05       		.uleb128 0x5
 3796 00b0 49       		.uleb128 0x49
 3797 00b1 13       		.uleb128 0x13
 3798 00b2 00       		.byte	0
 3799 00b3 00       		.byte	0
 3800 00b4 0F       		.uleb128 0xf
 3801 00b5 01       		.uleb128 0x1
 3802 00b6 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 93


 3803 00b7 49       		.uleb128 0x49
 3804 00b8 13       		.uleb128 0x13
 3805 00b9 01       		.uleb128 0x1
 3806 00ba 13       		.uleb128 0x13
 3807 00bb 00       		.byte	0
 3808 00bc 00       		.byte	0
 3809 00bd 10       		.uleb128 0x10
 3810 00be 21       		.uleb128 0x21
 3811 00bf 00       		.byte	0
 3812 00c0 49       		.uleb128 0x49
 3813 00c1 13       		.uleb128 0x13
 3814 00c2 2F       		.uleb128 0x2f
 3815 00c3 0B       		.uleb128 0xb
 3816 00c4 00       		.byte	0
 3817 00c5 00       		.byte	0
 3818 00c6 11       		.uleb128 0x11
 3819 00c7 13       		.uleb128 0x13
 3820 00c8 01       		.byte	0x1
 3821 00c9 0B       		.uleb128 0xb
 3822 00ca 0B       		.uleb128 0xb
 3823 00cb 3A       		.uleb128 0x3a
 3824 00cc 0B       		.uleb128 0xb
 3825 00cd 3B       		.uleb128 0x3b
 3826 00ce 05       		.uleb128 0x5
 3827 00cf 01       		.uleb128 0x1
 3828 00d0 13       		.uleb128 0x13
 3829 00d1 00       		.byte	0
 3830 00d2 00       		.byte	0
 3831 00d3 12       		.uleb128 0x12
 3832 00d4 0D       		.uleb128 0xd
 3833 00d5 00       		.byte	0
 3834 00d6 03       		.uleb128 0x3
 3835 00d7 0E       		.uleb128 0xe
 3836 00d8 3A       		.uleb128 0x3a
 3837 00d9 0B       		.uleb128 0xb
 3838 00da 3B       		.uleb128 0x3b
 3839 00db 05       		.uleb128 0x5
 3840 00dc 49       		.uleb128 0x49
 3841 00dd 13       		.uleb128 0x13
 3842 00de 38       		.uleb128 0x38
 3843 00df 0B       		.uleb128 0xb
 3844 00e0 00       		.byte	0
 3845 00e1 00       		.byte	0
 3846 00e2 13       		.uleb128 0x13
 3847 00e3 0D       		.uleb128 0xd
 3848 00e4 00       		.byte	0
 3849 00e5 03       		.uleb128 0x3
 3850 00e6 08       		.uleb128 0x8
 3851 00e7 3A       		.uleb128 0x3a
 3852 00e8 0B       		.uleb128 0xb
 3853 00e9 3B       		.uleb128 0x3b
 3854 00ea 05       		.uleb128 0x5
 3855 00eb 49       		.uleb128 0x49
 3856 00ec 13       		.uleb128 0x13
 3857 00ed 38       		.uleb128 0x38
 3858 00ee 0B       		.uleb128 0xb
 3859 00ef 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 94


 3860 00f0 00       		.byte	0
 3861 00f1 14       		.uleb128 0x14
 3862 00f2 04       		.uleb128 0x4
 3863 00f3 01       		.byte	0x1
 3864 00f4 0B       		.uleb128 0xb
 3865 00f5 0B       		.uleb128 0xb
 3866 00f6 49       		.uleb128 0x49
 3867 00f7 13       		.uleb128 0x13
 3868 00f8 3A       		.uleb128 0x3a
 3869 00f9 0B       		.uleb128 0xb
 3870 00fa 3B       		.uleb128 0x3b
 3871 00fb 05       		.uleb128 0x5
 3872 00fc 01       		.uleb128 0x1
 3873 00fd 13       		.uleb128 0x13
 3874 00fe 00       		.byte	0
 3875 00ff 00       		.byte	0
 3876 0100 15       		.uleb128 0x15
 3877 0101 2E       		.uleb128 0x2e
 3878 0102 01       		.byte	0x1
 3879 0103 3F       		.uleb128 0x3f
 3880 0104 19       		.uleb128 0x19
 3881 0105 03       		.uleb128 0x3
 3882 0106 0E       		.uleb128 0xe
 3883 0107 3A       		.uleb128 0x3a
 3884 0108 0B       		.uleb128 0xb
 3885 0109 3B       		.uleb128 0x3b
 3886 010a 05       		.uleb128 0x5
 3887 010b 27       		.uleb128 0x27
 3888 010c 19       		.uleb128 0x19
 3889 010d 11       		.uleb128 0x11
 3890 010e 01       		.uleb128 0x1
 3891 010f 12       		.uleb128 0x12
 3892 0110 06       		.uleb128 0x6
 3893 0111 40       		.uleb128 0x40
 3894 0112 18       		.uleb128 0x18
 3895 0113 9742     		.uleb128 0x2117
 3896 0115 19       		.uleb128 0x19
 3897 0116 01       		.uleb128 0x1
 3898 0117 13       		.uleb128 0x13
 3899 0118 00       		.byte	0
 3900 0119 00       		.byte	0
 3901 011a 16       		.uleb128 0x16
 3902 011b 898201   		.uleb128 0x4109
 3903 011e 00       		.byte	0
 3904 011f 11       		.uleb128 0x11
 3905 0120 01       		.uleb128 0x1
 3906 0121 31       		.uleb128 0x31
 3907 0122 13       		.uleb128 0x13
 3908 0123 00       		.byte	0
 3909 0124 00       		.byte	0
 3910 0125 17       		.uleb128 0x17
 3911 0126 898201   		.uleb128 0x4109
 3912 0129 01       		.byte	0x1
 3913 012a 11       		.uleb128 0x11
 3914 012b 01       		.uleb128 0x1
 3915 012c 31       		.uleb128 0x31
 3916 012d 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 95


 3917 012e 01       		.uleb128 0x1
 3918 012f 13       		.uleb128 0x13
 3919 0130 00       		.byte	0
 3920 0131 00       		.byte	0
 3921 0132 18       		.uleb128 0x18
 3922 0133 8A8201   		.uleb128 0x410a
 3923 0136 00       		.byte	0
 3924 0137 02       		.uleb128 0x2
 3925 0138 18       		.uleb128 0x18
 3926 0139 9142     		.uleb128 0x2111
 3927 013b 18       		.uleb128 0x18
 3928 013c 00       		.byte	0
 3929 013d 00       		.byte	0
 3930 013e 19       		.uleb128 0x19
 3931 013f 898201   		.uleb128 0x4109
 3932 0142 01       		.byte	0x1
 3933 0143 11       		.uleb128 0x11
 3934 0144 01       		.uleb128 0x1
 3935 0145 31       		.uleb128 0x31
 3936 0146 13       		.uleb128 0x13
 3937 0147 00       		.byte	0
 3938 0148 00       		.byte	0
 3939 0149 1A       		.uleb128 0x1a
 3940 014a 34       		.uleb128 0x34
 3941 014b 00       		.byte	0
 3942 014c 03       		.uleb128 0x3
 3943 014d 08       		.uleb128 0x8
 3944 014e 3A       		.uleb128 0x3a
 3945 014f 0B       		.uleb128 0xb
 3946 0150 3B       		.uleb128 0x3b
 3947 0151 05       		.uleb128 0x5
 3948 0152 49       		.uleb128 0x49
 3949 0153 13       		.uleb128 0x13
 3950 0154 02       		.uleb128 0x2
 3951 0155 17       		.uleb128 0x17
 3952 0156 00       		.byte	0
 3953 0157 00       		.byte	0
 3954 0158 1B       		.uleb128 0x1b
 3955 0159 05       		.uleb128 0x5
 3956 015a 00       		.byte	0
 3957 015b 03       		.uleb128 0x3
 3958 015c 0E       		.uleb128 0xe
 3959 015d 3A       		.uleb128 0x3a
 3960 015e 0B       		.uleb128 0xb
 3961 015f 3B       		.uleb128 0x3b
 3962 0160 05       		.uleb128 0x5
 3963 0161 49       		.uleb128 0x49
 3964 0162 13       		.uleb128 0x13
 3965 0163 02       		.uleb128 0x2
 3966 0164 17       		.uleb128 0x17
 3967 0165 00       		.byte	0
 3968 0166 00       		.byte	0
 3969 0167 1C       		.uleb128 0x1c
 3970 0168 05       		.uleb128 0x5
 3971 0169 00       		.byte	0
 3972 016a 03       		.uleb128 0x3
 3973 016b 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 96


 3974 016c 3A       		.uleb128 0x3a
 3975 016d 0B       		.uleb128 0xb
 3976 016e 3B       		.uleb128 0x3b
 3977 016f 05       		.uleb128 0x5
 3978 0170 49       		.uleb128 0x49
 3979 0171 13       		.uleb128 0x13
 3980 0172 02       		.uleb128 0x2
 3981 0173 18       		.uleb128 0x18
 3982 0174 00       		.byte	0
 3983 0175 00       		.byte	0
 3984 0176 1D       		.uleb128 0x1d
 3985 0177 34       		.uleb128 0x34
 3986 0178 00       		.byte	0
 3987 0179 03       		.uleb128 0x3
 3988 017a 08       		.uleb128 0x8
 3989 017b 3A       		.uleb128 0x3a
 3990 017c 0B       		.uleb128 0xb
 3991 017d 3B       		.uleb128 0x3b
 3992 017e 05       		.uleb128 0x5
 3993 017f 49       		.uleb128 0x49
 3994 0180 13       		.uleb128 0x13
 3995 0181 02       		.uleb128 0x2
 3996 0182 18       		.uleb128 0x18
 3997 0183 00       		.byte	0
 3998 0184 00       		.byte	0
 3999 0185 1E       		.uleb128 0x1e
 4000 0186 2E       		.uleb128 0x2e
 4001 0187 01       		.byte	0x1
 4002 0188 3F       		.uleb128 0x3f
 4003 0189 19       		.uleb128 0x19
 4004 018a 03       		.uleb128 0x3
 4005 018b 0E       		.uleb128 0xe
 4006 018c 3A       		.uleb128 0x3a
 4007 018d 0B       		.uleb128 0xb
 4008 018e 3B       		.uleb128 0x3b
 4009 018f 05       		.uleb128 0x5
 4010 0190 27       		.uleb128 0x27
 4011 0191 19       		.uleb128 0x19
 4012 0192 49       		.uleb128 0x49
 4013 0193 13       		.uleb128 0x13
 4014 0194 11       		.uleb128 0x11
 4015 0195 01       		.uleb128 0x1
 4016 0196 12       		.uleb128 0x12
 4017 0197 06       		.uleb128 0x6
 4018 0198 40       		.uleb128 0x40
 4019 0199 18       		.uleb128 0x18
 4020 019a 9742     		.uleb128 0x2117
 4021 019c 19       		.uleb128 0x19
 4022 019d 01       		.uleb128 0x1
 4023 019e 13       		.uleb128 0x13
 4024 019f 00       		.byte	0
 4025 01a0 00       		.byte	0
 4026 01a1 1F       		.uleb128 0x1f
 4027 01a2 34       		.uleb128 0x34
 4028 01a3 00       		.byte	0
 4029 01a4 03       		.uleb128 0x3
 4030 01a5 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 97


 4031 01a6 3A       		.uleb128 0x3a
 4032 01a7 0B       		.uleb128 0xb
 4033 01a8 3B       		.uleb128 0x3b
 4034 01a9 05       		.uleb128 0x5
 4035 01aa 49       		.uleb128 0x49
 4036 01ab 13       		.uleb128 0x13
 4037 01ac 02       		.uleb128 0x2
 4038 01ad 18       		.uleb128 0x18
 4039 01ae 00       		.byte	0
 4040 01af 00       		.byte	0
 4041 01b0 20       		.uleb128 0x20
 4042 01b1 34       		.uleb128 0x34
 4043 01b2 00       		.byte	0
 4044 01b3 03       		.uleb128 0x3
 4045 01b4 0E       		.uleb128 0xe
 4046 01b5 3A       		.uleb128 0x3a
 4047 01b6 0B       		.uleb128 0xb
 4048 01b7 3B       		.uleb128 0x3b
 4049 01b8 05       		.uleb128 0x5
 4050 01b9 49       		.uleb128 0x49
 4051 01ba 13       		.uleb128 0x13
 4052 01bb 02       		.uleb128 0x2
 4053 01bc 17       		.uleb128 0x17
 4054 01bd 00       		.byte	0
 4055 01be 00       		.byte	0
 4056 01bf 21       		.uleb128 0x21
 4057 01c0 34       		.uleb128 0x34
 4058 01c1 00       		.byte	0
 4059 01c2 03       		.uleb128 0x3
 4060 01c3 0E       		.uleb128 0xe
 4061 01c4 3A       		.uleb128 0x3a
 4062 01c5 0B       		.uleb128 0xb
 4063 01c6 3B       		.uleb128 0x3b
 4064 01c7 05       		.uleb128 0x5
 4065 01c8 49       		.uleb128 0x49
 4066 01c9 13       		.uleb128 0x13
 4067 01ca 1C       		.uleb128 0x1c
 4068 01cb 0B       		.uleb128 0xb
 4069 01cc 00       		.byte	0
 4070 01cd 00       		.byte	0
 4071 01ce 22       		.uleb128 0x22
 4072 01cf 26       		.uleb128 0x26
 4073 01d0 00       		.byte	0
 4074 01d1 49       		.uleb128 0x49
 4075 01d2 13       		.uleb128 0x13
 4076 01d3 00       		.byte	0
 4077 01d4 00       		.byte	0
 4078 01d5 23       		.uleb128 0x23
 4079 01d6 2E       		.uleb128 0x2e
 4080 01d7 01       		.byte	0x1
 4081 01d8 3F       		.uleb128 0x3f
 4082 01d9 19       		.uleb128 0x19
 4083 01da 03       		.uleb128 0x3
 4084 01db 0E       		.uleb128 0xe
 4085 01dc 3A       		.uleb128 0x3a
 4086 01dd 0B       		.uleb128 0xb
 4087 01de 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 98


 4088 01df 05       		.uleb128 0x5
 4089 01e0 27       		.uleb128 0x27
 4090 01e1 19       		.uleb128 0x19
 4091 01e2 49       		.uleb128 0x49
 4092 01e3 13       		.uleb128 0x13
 4093 01e4 8701     		.uleb128 0x87
 4094 01e6 19       		.uleb128 0x19
 4095 01e7 11       		.uleb128 0x11
 4096 01e8 01       		.uleb128 0x1
 4097 01e9 12       		.uleb128 0x12
 4098 01ea 06       		.uleb128 0x6
 4099 01eb 40       		.uleb128 0x40
 4100 01ec 18       		.uleb128 0x18
 4101 01ed 9742     		.uleb128 0x2117
 4102 01ef 19       		.uleb128 0x19
 4103 01f0 01       		.uleb128 0x1
 4104 01f1 13       		.uleb128 0x13
 4105 01f2 00       		.byte	0
 4106 01f3 00       		.byte	0
 4107 01f4 24       		.uleb128 0x24
 4108 01f5 34       		.uleb128 0x34
 4109 01f6 00       		.byte	0
 4110 01f7 03       		.uleb128 0x3
 4111 01f8 0E       		.uleb128 0xe
 4112 01f9 3A       		.uleb128 0x3a
 4113 01fa 0B       		.uleb128 0xb
 4114 01fb 3B       		.uleb128 0x3b
 4115 01fc 0B       		.uleb128 0xb
 4116 01fd 49       		.uleb128 0x49
 4117 01fe 13       		.uleb128 0x13
 4118 01ff 3F       		.uleb128 0x3f
 4119 0200 19       		.uleb128 0x19
 4120 0201 3C       		.uleb128 0x3c
 4121 0202 19       		.uleb128 0x19
 4122 0203 00       		.byte	0
 4123 0204 00       		.byte	0
 4124 0205 25       		.uleb128 0x25
 4125 0206 34       		.uleb128 0x34
 4126 0207 00       		.byte	0
 4127 0208 03       		.uleb128 0x3
 4128 0209 0E       		.uleb128 0xe
 4129 020a 3A       		.uleb128 0x3a
 4130 020b 0B       		.uleb128 0xb
 4131 020c 3B       		.uleb128 0x3b
 4132 020d 0B       		.uleb128 0xb
 4133 020e 49       		.uleb128 0x49
 4134 020f 13       		.uleb128 0x13
 4135 0210 3F       		.uleb128 0x3f
 4136 0211 19       		.uleb128 0x19
 4137 0212 02       		.uleb128 0x2
 4138 0213 18       		.uleb128 0x18
 4139 0214 00       		.byte	0
 4140 0215 00       		.byte	0
 4141 0216 26       		.uleb128 0x26
 4142 0217 34       		.uleb128 0x34
 4143 0218 00       		.byte	0
 4144 0219 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 99


 4145 021a 08       		.uleb128 0x8
 4146 021b 3A       		.uleb128 0x3a
 4147 021c 0B       		.uleb128 0xb
 4148 021d 3B       		.uleb128 0x3b
 4149 021e 0B       		.uleb128 0xb
 4150 021f 49       		.uleb128 0x49
 4151 0220 13       		.uleb128 0x13
 4152 0221 3F       		.uleb128 0x3f
 4153 0222 19       		.uleb128 0x19
 4154 0223 02       		.uleb128 0x2
 4155 0224 18       		.uleb128 0x18
 4156 0225 00       		.byte	0
 4157 0226 00       		.byte	0
 4158 0227 27       		.uleb128 0x27
 4159 0228 34       		.uleb128 0x34
 4160 0229 00       		.byte	0
 4161 022a 03       		.uleb128 0x3
 4162 022b 0E       		.uleb128 0xe
 4163 022c 3A       		.uleb128 0x3a
 4164 022d 0B       		.uleb128 0xb
 4165 022e 3B       		.uleb128 0x3b
 4166 022f 05       		.uleb128 0x5
 4167 0230 49       		.uleb128 0x49
 4168 0231 13       		.uleb128 0x13
 4169 0232 3F       		.uleb128 0x3f
 4170 0233 19       		.uleb128 0x19
 4171 0234 02       		.uleb128 0x2
 4172 0235 18       		.uleb128 0x18
 4173 0236 00       		.byte	0
 4174 0237 00       		.byte	0
 4175 0238 28       		.uleb128 0x28
 4176 0239 2E       		.uleb128 0x2e
 4177 023a 00       		.byte	0
 4178 023b 3F       		.uleb128 0x3f
 4179 023c 19       		.uleb128 0x19
 4180 023d 3C       		.uleb128 0x3c
 4181 023e 19       		.uleb128 0x19
 4182 023f 6E       		.uleb128 0x6e
 4183 0240 0E       		.uleb128 0xe
 4184 0241 03       		.uleb128 0x3
 4185 0242 0E       		.uleb128 0xe
 4186 0243 3A       		.uleb128 0x3a
 4187 0244 0B       		.uleb128 0xb
 4188 0245 3B       		.uleb128 0x3b
 4189 0246 0B       		.uleb128 0xb
 4190 0247 00       		.byte	0
 4191 0248 00       		.byte	0
 4192 0249 29       		.uleb128 0x29
 4193 024a 2E       		.uleb128 0x2e
 4194 024b 00       		.byte	0
 4195 024c 3F       		.uleb128 0x3f
 4196 024d 19       		.uleb128 0x19
 4197 024e 3C       		.uleb128 0x3c
 4198 024f 19       		.uleb128 0x19
 4199 0250 6E       		.uleb128 0x6e
 4200 0251 0E       		.uleb128 0xe
 4201 0252 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 100


 4202 0253 0E       		.uleb128 0xe
 4203 0254 00       		.byte	0
 4204 0255 00       		.byte	0
 4205 0256 2A       		.uleb128 0x2a
 4206 0257 2E       		.uleb128 0x2e
 4207 0258 00       		.byte	0
 4208 0259 3F       		.uleb128 0x3f
 4209 025a 19       		.uleb128 0x19
 4210 025b 3C       		.uleb128 0x3c
 4211 025c 19       		.uleb128 0x19
 4212 025d 6E       		.uleb128 0x6e
 4213 025e 0E       		.uleb128 0xe
 4214 025f 03       		.uleb128 0x3
 4215 0260 0E       		.uleb128 0xe
 4216 0261 3A       		.uleb128 0x3a
 4217 0262 0B       		.uleb128 0xb
 4218 0263 3B       		.uleb128 0x3b
 4219 0264 05       		.uleb128 0x5
 4220 0265 00       		.byte	0
 4221 0266 00       		.byte	0
 4222 0267 00       		.byte	0
 4223              		.section	.debug_loc,"",%progbits
 4224              	.Ldebug_loc0:
 4225              	.LLST0:
 4226 0000 2A000000 		.4byte	.LVL9
 4227 0004 2E000000 		.4byte	.LVL10
 4228 0008 0200     		.2byte	0x2
 4229 000a 30       		.byte	0x30
 4230 000b 9F       		.byte	0x9f
 4231 000c 2E000000 		.4byte	.LVL10
 4232 0010 4A000000 		.4byte	.LVL15
 4233 0014 0100     		.2byte	0x1
 4234 0016 54       		.byte	0x54
 4235 0017 00000000 		.4byte	0
 4236 001b 00000000 		.4byte	0
 4237              	.LLST1:
 4238 001f 00000000 		.4byte	.LVL16
 4239 0023 12000000 		.4byte	.LVL17
 4240 0027 0100     		.2byte	0x1
 4241 0029 50       		.byte	0x50
 4242 002a 12000000 		.4byte	.LVL17
 4243 002e 1C000000 		.4byte	.LFE32
 4244 0032 0400     		.2byte	0x4
 4245 0034 F3       		.byte	0xf3
 4246 0035 01       		.uleb128 0x1
 4247 0036 50       		.byte	0x50
 4248 0037 9F       		.byte	0x9f
 4249 0038 00000000 		.4byte	0
 4250 003c 00000000 		.4byte	0
 4251              	.LLST2:
 4252 0040 00000000 		.4byte	.LVL20
 4253 0044 0A000000 		.4byte	.LVL21
 4254 0048 0100     		.2byte	0x1
 4255 004a 50       		.byte	0x50
 4256 004b 0A000000 		.4byte	.LVL21
 4257 004f 0D000000 		.4byte	.LVL22-1
 4258 0053 0400     		.2byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 101


 4259 0055 70       		.byte	0x70
 4260 0056 E079     		.sleb128 -800
 4261 0058 9F       		.byte	0x9f
 4262 0059 0D000000 		.4byte	.LVL22-1
 4263 005d 10000000 		.4byte	.LFE36
 4264 0061 0400     		.2byte	0x4
 4265 0063 F3       		.byte	0xf3
 4266 0064 01       		.uleb128 0x1
 4267 0065 50       		.byte	0x50
 4268 0066 9F       		.byte	0x9f
 4269 0067 00000000 		.4byte	0
 4270 006b 00000000 		.4byte	0
 4271              	.LLST3:
 4272 006f 1C000000 		.4byte	.LVL25
 4273 0073 F4000000 		.4byte	.LVL42
 4274 0077 0100     		.2byte	0x1
 4275 0079 54       		.byte	0x54
 4276 007a 5C010000 		.4byte	.LVL49
 4277 007e 5E010000 		.4byte	.LVL50
 4278 0082 0100     		.2byte	0x1
 4279 0084 54       		.byte	0x54
 4280 0085 5E010000 		.4byte	.LVL50
 4281 0089 79010000 		.4byte	.LVL53-1
 4282 008d 0200     		.2byte	0x2
 4283 008f 74       		.byte	0x74
 4284 0090 02       		.sleb128 2
 4285 0091 00000000 		.4byte	0
 4286 0095 00000000 		.4byte	0
 4287              	.LLST4:
 4288 0099 1A000000 		.4byte	.LVL24
 4289 009d 6B000000 		.4byte	.LVL36-1
 4290 00a1 0100     		.2byte	0x1
 4291 00a3 50       		.byte	0x50
 4292 00a4 B8000000 		.4byte	.LVL38
 4293 00a8 BA000000 		.4byte	.LVL39
 4294 00ac 0100     		.2byte	0x1
 4295 00ae 50       		.byte	0x50
 4296 00af 5C010000 		.4byte	.LVL49
 4297 00b3 6A010000 		.4byte	.LVL52
 4298 00b7 0100     		.2byte	0x1
 4299 00b9 50       		.byte	0x50
 4300 00ba 00000000 		.4byte	0
 4301 00be 00000000 		.4byte	0
 4302              	.LLST5:
 4303 00c2 22000000 		.4byte	.LVL26
 4304 00c6 28000000 		.4byte	.LVL27
 4305 00ca 0200     		.2byte	0x2
 4306 00cc 30       		.byte	0x30
 4307 00cd 9F       		.byte	0x9f
 4308 00ce 28000000 		.4byte	.LVL27
 4309 00d2 32000000 		.4byte	.LVL30
 4310 00d6 0100     		.2byte	0x1
 4311 00d8 53       		.byte	0x53
 4312 00d9 34000000 		.4byte	.LVL31
 4313 00dd 3E000000 		.4byte	.LVL32
 4314 00e1 0100     		.2byte	0x1
 4315 00e3 53       		.byte	0x53
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 102


 4316 00e4 50000000 		.4byte	.LVL34
 4317 00e8 52000000 		.4byte	.LVL35
 4318 00ec 0100     		.2byte	0x1
 4319 00ee 53       		.byte	0x53
 4320 00ef 34020000 		.4byte	.LVL55
 4321 00f3 3A020000 		.4byte	.LVL56
 4322 00f7 0200     		.2byte	0x2
 4323 00f9 30       		.byte	0x30
 4324 00fa 9F       		.byte	0x9f
 4325 00fb 3A020000 		.4byte	.LVL56
 4326 00ff 44020000 		.4byte	.LVL59
 4327 0103 0100     		.2byte	0x1
 4328 0105 53       		.byte	0x53
 4329 0106 46020000 		.4byte	.LVL60
 4330 010a 55020000 		.4byte	.LVL62-1
 4331 010e 0100     		.2byte	0x1
 4332 0110 53       		.byte	0x53
 4333 0111 00000000 		.4byte	0
 4334 0115 00000000 		.4byte	0
 4335              	.LLST6:
 4336 0119 22000000 		.4byte	.LVL26
 4337 011d 28000000 		.4byte	.LVL27
 4338 0121 0200     		.2byte	0x2
 4339 0123 30       		.byte	0x30
 4340 0124 9F       		.byte	0x9f
 4341 0125 28000000 		.4byte	.LVL27
 4342 0129 2E000000 		.4byte	.LVL28
 4343 012d 0100     		.2byte	0x1
 4344 012f 52       		.byte	0x52
 4345 0130 30000000 		.4byte	.LVL29
 4346 0134 42000000 		.4byte	.LVL33
 4347 0138 0100     		.2byte	0x1
 4348 013a 52       		.byte	0x52
 4349 013b 50000000 		.4byte	.LVL34
 4350 013f 6B000000 		.4byte	.LVL36-1
 4351 0143 0100     		.2byte	0x1
 4352 0145 52       		.byte	0x52
 4353 0146 B8000000 		.4byte	.LVL38
 4354 014a C0000000 		.4byte	.LVL40
 4355 014e 0100     		.2byte	0x1
 4356 0150 52       		.byte	0x52
 4357 0151 5C010000 		.4byte	.LVL49
 4358 0155 68010000 		.4byte	.LVL51
 4359 0159 0100     		.2byte	0x1
 4360 015b 52       		.byte	0x52
 4361 015c 34020000 		.4byte	.LVL55
 4362 0160 3A020000 		.4byte	.LVL56
 4363 0164 0200     		.2byte	0x2
 4364 0166 30       		.byte	0x30
 4365 0167 9F       		.byte	0x9f
 4366 0168 3A020000 		.4byte	.LVL56
 4367 016c 40020000 		.4byte	.LVL57
 4368 0170 0100     		.2byte	0x1
 4369 0172 52       		.byte	0x52
 4370 0173 42020000 		.4byte	.LVL58
 4371 0177 4E020000 		.4byte	.LVL61
 4372 017b 0100     		.2byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 103


 4373 017d 52       		.byte	0x52
 4374 017e 00000000 		.4byte	0
 4375 0182 00000000 		.4byte	0
 4376              	.LLST7:
 4377 0186 24010000 		.4byte	.LVL44
 4378 018a 34010000 		.4byte	.LVL46
 4379 018e 0100     		.2byte	0x1
 4380 0190 53       		.byte	0x53
 4381 0191 44010000 		.4byte	.LVL47
 4382 0195 48010000 		.4byte	.LVL48
 4383 0199 0100     		.2byte	0x1
 4384 019b 53       		.byte	0x53
 4385 019c 00000000 		.4byte	0
 4386 01a0 00000000 		.4byte	0
 4387              	.LLST8:
 4388 01a4 00000000 		.4byte	.LVL65
 4389 01a8 1B000000 		.4byte	.LVL67-1
 4390 01ac 0100     		.2byte	0x1
 4391 01ae 50       		.byte	0x50
 4392 01af 1B000000 		.4byte	.LVL67-1
 4393 01b3 28000000 		.4byte	.LFE39
 4394 01b7 0400     		.2byte	0x4
 4395 01b9 F3       		.byte	0xf3
 4396 01ba 01       		.uleb128 0x1
 4397 01bb 50       		.byte	0x50
 4398 01bc 9F       		.byte	0x9f
 4399 01bd 00000000 		.4byte	0
 4400 01c1 00000000 		.4byte	0
 4401              	.LLST9:
 4402 01c5 0A000000 		.4byte	.LVL66
 4403 01c9 22000000 		.4byte	.LVL68
 4404 01cd 0100     		.2byte	0x1
 4405 01cf 54       		.byte	0x54
 4406 01d0 22000000 		.4byte	.LVL68
 4407 01d4 28000000 		.4byte	.LFE39
 4408 01d8 0500     		.2byte	0x5
 4409 01da 03       		.byte	0x3
 4410 01db 00000000 		.4byte	inAuto
 4411 01df 00000000 		.4byte	0
 4412 01e3 00000000 		.4byte	0
 4413              		.section	.debug_aranges,"",%progbits
 4414 0000 84000000 		.4byte	0x84
 4415 0004 0200     		.2byte	0x2
 4416 0006 00000000 		.4byte	.Ldebug_info0
 4417 000a 04       		.byte	0x4
 4418 000b 00       		.byte	0
 4419 000c 0000     		.2byte	0
 4420 000e 0000     		.2byte	0
 4421 0010 00000000 		.4byte	.LFB43
 4422 0014 24000000 		.4byte	.LFE43-.LFB43
 4423 0018 00000000 		.4byte	.LFB44
 4424 001c 1C000000 		.4byte	.LFE44-.LFB44
 4425 0020 00000000 		.4byte	.LFB45
 4426 0024 60000000 		.4byte	.LFE45-.LFB45
 4427 0028 00000000 		.4byte	.LFB32
 4428 002c 1C000000 		.4byte	.LFE32-.LFB32
 4429 0030 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 104


 4430 0034 1C000000 		.4byte	.LFE33-.LFB33
 4431 0038 00000000 		.4byte	.LFB34
 4432 003c 14000000 		.4byte	.LFE34-.LFB34
 4433 0040 00000000 		.4byte	.LFB36
 4434 0044 10000000 		.4byte	.LFE36-.LFB36
 4435 0048 00000000 		.4byte	.LFB37
 4436 004c 44000000 		.4byte	.LFE37-.LFB37
 4437 0050 00000000 		.4byte	.LFB35
 4438 0054 C4020000 		.4byte	.LFE35-.LFB35
 4439 0058 00000000 		.4byte	.LFB38
 4440 005c 30000000 		.4byte	.LFE38-.LFB38
 4441 0060 00000000 		.4byte	.LFB39
 4442 0064 28000000 		.4byte	.LFE39-.LFB39
 4443 0068 00000000 		.4byte	.LFB40
 4444 006c 64010000 		.4byte	.LFE40-.LFB40
 4445 0070 00000000 		.4byte	.LFB42
 4446 0074 BC000000 		.4byte	.LFE42-.LFB42
 4447 0078 00000000 		.4byte	.LFB41
 4448 007c 44010000 		.4byte	.LFE41-.LFB41
 4449 0080 00000000 		.4byte	0
 4450 0084 00000000 		.4byte	0
 4451              		.section	.debug_ranges,"",%progbits
 4452              	.Ldebug_ranges0:
 4453 0000 00000000 		.4byte	.LFB43
 4454 0004 24000000 		.4byte	.LFE43
 4455 0008 00000000 		.4byte	.LFB44
 4456 000c 1C000000 		.4byte	.LFE44
 4457 0010 00000000 		.4byte	.LFB45
 4458 0014 60000000 		.4byte	.LFE45
 4459 0018 00000000 		.4byte	.LFB32
 4460 001c 1C000000 		.4byte	.LFE32
 4461 0020 00000000 		.4byte	.LFB33
 4462 0024 1C000000 		.4byte	.LFE33
 4463 0028 00000000 		.4byte	.LFB34
 4464 002c 14000000 		.4byte	.LFE34
 4465 0030 00000000 		.4byte	.LFB36
 4466 0034 10000000 		.4byte	.LFE36
 4467 0038 00000000 		.4byte	.LFB37
 4468 003c 44000000 		.4byte	.LFE37
 4469 0040 00000000 		.4byte	.LFB35
 4470 0044 C4020000 		.4byte	.LFE35
 4471 0048 00000000 		.4byte	.LFB38
 4472 004c 30000000 		.4byte	.LFE38
 4473 0050 00000000 		.4byte	.LFB39
 4474 0054 28000000 		.4byte	.LFE39
 4475 0058 00000000 		.4byte	.LFB40
 4476 005c 64010000 		.4byte	.LFE40
 4477 0060 00000000 		.4byte	.LFB42
 4478 0064 BC000000 		.4byte	.LFE42
 4479 0068 00000000 		.4byte	.LFB41
 4480 006c 44010000 		.4byte	.LFE41
 4481 0070 00000000 		.4byte	0
 4482 0074 00000000 		.4byte	0
 4483              		.section	.debug_line,"",%progbits
 4484              	.Ldebug_line0:
 4485 0000 A0040000 		.section	.debug_str,"MS",%progbits,1
 4485      02007902 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 105


 4485      00000201 
 4485      FB0E0D00 
 4485      01010101 
 4486              	.LASF173:
 4487 0000 43794465 		.ascii	"CyDelay\000"
 4487      6C617900 
 4488              	.LASF140:
 4489 0008 72784D65 		.ascii	"rxMessage\000"
 4489      73736167 
 4489      6500
 4490              	.LASF182:
 4491 0012 6D61696E 		.ascii	"main.c\000"
 4491      2E6300
 4492              	.LASF78:
 4493 0019 6D6F746F 		.ascii	"motor_current\000"
 4493      725F6375 
 4493      7272656E 
 4493      7400
 4494              	.LASF110:
 4495 0027 62726D73 		.ascii	"brmsRG4Mask\000"
 4495      5247344D 
 4495      61736B00 
 4496              	.LASF84:
 4497 0033 74786D73 		.ascii	"txmsClear\000"
 4497      436C6561 
 4497      7200
 4498              	.LASF94:
 4499 003d 6F757470 		.ascii	"output\000"
 4499      757400
 4500              	.LASF92:
 4501 0044 4D6F746F 		.ascii	"MotorCurrentRead\000"
 4501      72437572 
 4501      72656E74 
 4501      52656164 
 4501      00
 4502              	.LASF106:
 4503 0055 62726D73 		.ascii	"brmsTask\000"
 4503      5461736B 
 4503      00
 4504              	.LASF61:
 4505 005e 65666673 		.ascii	"effsetdelta\000"
 4505      65746465 
 4505      6C746100 
 4506              	.LASF37:
 4507 006a 6673456E 		.ascii	"fsEncoder\000"
 4507      636F6465 
 4507      7200
 4508              	.LASF31:
 4509 0074 6373556E 		.ascii	"csUnconfig\000"
 4509      636F6E66 
 4509      696700
 4510              	.LASF102:
 4511 007f 6E657741 		.ascii	"newAuto\000"
 4511      75746F00 
 4512              	.LASF16:
 4513 0087 756E7369 		.ascii	"unsigned int\000"
 4513      676E6564 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 106


 4513      20696E74 
 4513      00
 4514              	.LASF107:
 4515 0094 62726D73 		.ascii	"brmsRG1Mask\000"
 4515      5247314D 
 4515      61736B00 
 4516              	.LASF177:
 4517 00a0 436F756E 		.ascii	"Counter_1_Start\000"
 4517      7465725F 
 4517      315F5374 
 4517      61727400 
 4518              	.LASF104:
 4519 00b0 72756E52 		.ascii	"runRateGroup1_PID\000"
 4519      61746547 
 4519      726F7570 
 4519      315F5049 
 4519      4400
 4520              	.LASF65:
 4521 00c2 636C6561 		.ascii	"clearfaults\000"
 4521      72666175 
 4521      6C747300 
 4522              	.LASF9:
 4523 00ce 5F5F696E 		.ascii	"__int32_t\000"
 4523      7433325F 
 4523      7400
 4524              	.LASF148:
 4525 00d8 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4525      5F494E5F 
 4525      436C6561 
 4525      72496E74 
 4525      65727275 
 4526              	.LASF180:
 4527 00ef 4C45445F 		.ascii	"LED_Write\000"
 4527      57726974 
 4527      6500
 4528              	.LASF88:
 4529 00f9 486F6D65 		.ascii	"HomeIsrHandler\000"
 4529      49737248 
 4529      616E646C 
 4529      657200
 4530              	.LASF86:
 4531 0108 74784D65 		.ascii	"txMessageStates_t\000"
 4531      73736167 
 4531      65537461 
 4531      7465735F 
 4531      7400
 4532              	.LASF91:
 4533 011a 436C6561 		.ascii	"ClearFault\000"
 4533      72466175 
 4533      6C7400
 4534              	.LASF172:
 4535 0125 4932435F 		.ascii	"I2C_Start\000"
 4535      53746172 
 4535      7400
 4536              	.LASF125:
 4537 012f 4C617374 		.ascii	"LastMoveStableCount\000"
 4537      4D6F7665 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 107


 4537      53746162 
 4537      6C65436F 
 4537      756E7400 
 4538              	.LASF32:
 4539 0143 63735265 		.ascii	"csReady\000"
 4539      61647900 
 4540              	.LASF153:
 4541 014b 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4541      315F5370 
 4541      69556172 
 4541      74436C65 
 4541      61725478 
 4542              	.LASF22:
 4543 0166 75696E74 		.ascii	"uint32_t\000"
 4543      33325F74 
 4543      00
 4544              	.LASF17:
 4545 016f 696E7438 		.ascii	"int8_t\000"
 4545      5F7400
 4546              	.LASF50:
 4547 0176 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4547      73736167 
 4547      655F6F70 
 4547      636F6465 
 4547      735F7400 
 4548              	.LASF66:
 4549 018a 72784D65 		.ascii	"rxMessage_status_t\000"
 4549      73736167 
 4549      655F7374 
 4549      61747573 
 4549      5F7400
 4550              	.LASF90:
 4551 019d 41737365 		.ascii	"AssertFault\000"
 4551      72744661 
 4551      756C7400 
 4552              	.LASF0:
 4553 01a9 666C6F61 		.ascii	"float\000"
 4553      7400
 4554              	.LASF170:
 4555 01af 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4555      7370695F 
 4555      73735F53 
 4555      74617274 
 4555      457800
 4556              	.LASF51:
 4557 01c2 63686563 		.ascii	"checksum\000"
 4557      6B73756D 
 4557      00
 4558              	.LASF71:
 4559 01cb 73657465 		.ascii	"setenc\000"
 4559      6E6300
 4560              	.LASF19:
 4561 01d2 696E7431 		.ascii	"int16_t\000"
 4561      365F7400 
 4562              	.LASF96:
 4563 01da 72657375 		.ascii	"result\000"
 4563      6C7400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 108


 4564              	.LASF15:
 4565 01e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 4565      206C6F6E 
 4565      6720756E 
 4565      7369676E 
 4565      65642069 
 4566              	.LASF117:
 4567 01f8 5049445F 		.ascii	"PID_EffSetDelta\000"
 4567      45666653 
 4567      65744465 
 4567      6C746100 
 4568              	.LASF118:
 4569 0208 6C617374 		.ascii	"lastTime\000"
 4569      54696D65 
 4569      00
 4570              	.LASF137:
 4571 0211 4D6F746F 		.ascii	"MotorCurrent\000"
 4571      72437572 
 4571      72656E74 
 4571      00
 4572              	.LASF7:
 4573 021e 5F5F7569 		.ascii	"__uint16_t\000"
 4573      6E743136 
 4573      5F7400
 4574              	.LASF63:
 4575 0229 656E6162 		.ascii	"enable\000"
 4575      6C6500
 4576              	.LASF176:
 4577 0230 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4577      315F5772 
 4577      69746550 
 4577      6572696F 
 4577      6400
 4578              	.LASF133:
 4579 0242 436F6E66 		.ascii	"ConfigState\000"
 4579      69675374 
 4579      61746500 
 4580              	.LASF59:
 4581 024e 6C696D69 		.ascii	"limitOutput\000"
 4581      744F7574 
 4581      70757400 
 4582              	.LASF181:
 4583 025a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4583      43313120 
 4583      352E342E 
 4583      31203230 
 4583      31363036 
 4584 028d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4584      20726576 
 4584      6973696F 
 4584      6E203233 
 4584      37373135 
 4585 02c0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4585      66756E63 
 4585      74696F6E 
 4585      2D736563 
 4585      74696F6E 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 109


 4586              	.LASF167:
 4587 02e8 6973725F 		.ascii	"isr_home_SetPriority\000"
 4587      686F6D65 
 4587      5F536574 
 4587      5072696F 
 4587      72697479 
 4588              	.LASF164:
 4589 02fd 6973725F 		.ascii	"isr_brms_StartEx\000"
 4589      62726D73 
 4589      5F537461 
 4589      72744578 
 4589      00
 4590              	.LASF163:
 4591 030e 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4591      725F4252 
 4591      4D535F53 
 4591      74617274 
 4591      00
 4592              	.LASF103:
 4593 031f 5F426F6F 		.ascii	"_Bool\000"
 4593      6C00
 4594              	.LASF36:
 4595 0325 6673556E 		.ascii	"fsUnconfigured\000"
 4595      636F6E66 
 4595      69677572 
 4595      656400
 4596              	.LASF112:
 4597 0334 696E4175 		.ascii	"inAuto\000"
 4597      746F00
 4598              	.LASF14:
 4599 033b 5F5F7569 		.ascii	"__uint64_t\000"
 4599      6E743634 
 4599      5F7400
 4600              	.LASF157:
 4601 0346 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4601      315F5370 
 4601      69556172 
 4601      74507574 
 4601      41727261 
 4602              	.LASF149:
 4603 035c 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4603      73735F43 
 4603      6C656172 
 4603      496E7465 
 4603      72727570 
 4604              	.LASF130:
 4605 0372 55707469 		.ascii	"UptimeMilliseconds\000"
 4605      6D654D69 
 4605      6C6C6973 
 4605      65636F6E 
 4605      647300
 4606              	.LASF156:
 4607 0385 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4607      7465725F 
 4607      315F5265 
 4607      6164436F 
 4607      756E7465 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 110


 4608              	.LASF72:
 4609 039b 76657273 		.ascii	"version0\000"
 4609      696F6E30 
 4609      00
 4610              	.LASF73:
 4611 03a4 76657273 		.ascii	"version1\000"
 4611      696F6E31 
 4611      00
 4612              	.LASF74:
 4613 03ad 76657273 		.ascii	"version2\000"
 4613      696F6E32 
 4613      00
 4614              	.LASF54:
 4615 03b6 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4615      73736167 
 4615      655F6F76 
 4615      65726C61 
 4615      795F7400 
 4616              	.LASF119:
 4617 03ca 506F7369 		.ascii	"Position\000"
 4617      74696F6E 
 4617      00
 4618              	.LASF26:
 4619 03d3 63686172 		.ascii	"char\000"
 4619      00
 4620              	.LASF81:
 4621 03d8 6C617374 		.ascii	"last_move_time\000"
 4621      5F6D6F76 
 4621      655F7469 
 4621      6D6500
 4622              	.LASF160:
 4623 03e7 5049445F 		.ascii	"PID_UpdateValues\000"
 4623      55706461 
 4623      74655661 
 4623      6C756573 
 4623      00
 4624              	.LASF100:
 4625 03f8 5049445F 		.ascii	"PID_SetMode\000"
 4625      5365744D 
 4625      6F646500 
 4626              	.LASF93:
 4627 0404 50574D5F 		.ascii	"PWM_Set\000"
 4627      53657400 
 4628              	.LASF105:
 4629 040c 42524D53 		.ascii	"BRMS_Interrupt\000"
 4629      5F496E74 
 4629      65727275 
 4629      707400
 4630              	.LASF152:
 4631 041b 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4631      315F5370 
 4631      69556172 
 4631      74436C65 
 4631      61725278 
 4632              	.LASF53:
 4633 0436 6F70636F 		.ascii	"opcode\000"
 4633      646500
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 111


 4634              	.LASF60:
 4635 043d 6C696D69 		.ascii	"limitIterm\000"
 4635      74497465 
 4635      726D00
 4636              	.LASF18:
 4637 0448 75696E74 		.ascii	"uint8_t\000"
 4637      385F7400 
 4638              	.LASF70:
 4639 0450 73746174 		.ascii	"status\000"
 4639      757300
 4640              	.LASF38:
 4641 0457 6673496E 		.ascii	"fsIndex\000"
 4641      64657800 
 4642              	.LASF146:
 4643 045f 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4643      785F436F 
 4643      756E7465 
 4643      725F315F 
 4643      57726974 
 4644              	.LASF155:
 4645 047c 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4645      315F5772 
 4645      69746543 
 4645      6F6D7061 
 4645      726500
 4646              	.LASF35:
 4647 048f 66734E4F 		.ascii	"fsNONE\000"
 4647      4E4500
 4648              	.LASF143:
 4649 0496 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4649      7273745F 
 4649      656E636F 
 4649      6465725F 
 4649      436C6561 
 4650              	.LASF171:
 4651 04b3 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4651      7370695F 
 4651      73735F53 
 4651      65745072 
 4651      696F7269 
 4652              	.LASF126:
 4653 04ca 4C617374 		.ascii	"LastMoveTimeUsec\000"
 4653      4D6F7665 
 4653      54696D65 
 4653      55736563 
 4653      00
 4654              	.LASF13:
 4655 04db 6C6F6E67 		.ascii	"long long int\000"
 4655      206C6F6E 
 4655      6720696E 
 4655      7400
 4656              	.LASF161:
 4657 04e9 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4657      725F4252 
 4657      4D535F43 
 4657      6C656172 
 4657      496E7465 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 112


 4658              	.LASF40:
 4659 0503 66734368 		.ascii	"fsChecksum\000"
 4659      65636B73 
 4659      756D00
 4660              	.LASF154:
 4661 050e 67657443 		.ascii	"getCurrent_raw\000"
 4661      75727265 
 4661      6E745F72 
 4661      617700
 4662              	.LASF150:
 4663 051d 7370695F 		.ascii	"spi_ss_Read\000"
 4663      73735F52 
 4663      65616400 
 4664              	.LASF82:
 4665 0529 69746572 		.ascii	"iterm_delay\000"
 4665      6D5F6465 
 4665      6C617900 
 4666              	.LASF6:
 4667 0535 5F5F696E 		.ascii	"__int16_t\000"
 4667      7431365F 
 4667      7400
 4668              	.LASF159:
 4669 053f 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4669      585F4F55 
 4669      545F5365 
 4669      74447269 
 4669      76654D6F 
 4670              	.LASF186:
 4671 0556 6D656D73 		.ascii	"memset\000"
 4671      657400
 4672              	.LASF131:
 4673 055d 55707469 		.ascii	"UptimeMillisecondsAccumulator\000"
 4673      6D654D69 
 4673      6C6C6973 
 4673      65636F6E 
 4673      64734163 
 4674              	.LASF77:
 4675 057b 63686563 		.ascii	"checksum_errors\000"
 4675      6B73756D 
 4675      5F657272 
 4675      6F727300 
 4676              	.LASF52:
 4677 058b 73697A65 		.ascii	"size\000"
 4677      00
 4678              	.LASF183:
 4679 0590 433A5C55 		.ascii	"C:\\Users\\prichards\\proj\\acsnb-motor-cypress\\Qu"
 4679      73657273 
 4679      5C707269 
 4679      63686172 
 4679      64735C70 
 4680 05be 6164456E 		.ascii	"adEncoderRTOS.cydsn\000"
 4680      636F6465 
 4680      7252544F 
 4680      532E6379 
 4680      64736E00 
 4681              	.LASF24:
 4682 05d2 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 113


 4682      333200
 4683              	.LASF85:
 4684 05d9 74786D73 		.ascii	"txmsLoaded\000"
 4684      4C6F6164 
 4684      656400
 4685              	.LASF138:
 4686 05e4 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4686      656E7449 
 4686      3243696E 
 4686      62756600 
 4687              	.LASF151:
 4688 05f4 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 4688      315F5370 
 4688      69556172 
 4688      74526561 
 4688      64527844 
 4689              	.LASF120:
 4690 060c 4C617374 		.ascii	"LastPosition\000"
 4690      506F7369 
 4690      74696F6E 
 4690      00
 4691              	.LASF141:
 4692 0619 74784D65 		.ascii	"txMessage\000"
 4692      73736167 
 4692      6500
 4693              	.LASF145:
 4694 0623 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4694      7465725F 
 4694      315F5772 
 4694      69746543 
 4694      6F756E74 
 4695              	.LASF127:
 4696 063a 4E657743 		.ascii	"NewCommandedMove\000"
 4696      6F6D6D61 
 4696      6E646564 
 4696      4D6F7665 
 4696      00
 4697              	.LASF89:
 4698 064b 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4698      53535F49 
 4698      73724861 
 4698      6E646C65 
 4698      7200
 4699              	.LASF3:
 4700 065d 5F5F696E 		.ascii	"__int8_t\000"
 4700      74385F74 
 4700      00
 4701              	.LASF34:
 4702 0666 436F6E66 		.ascii	"ConfigStates_t\000"
 4702      69675374 
 4702      61746573 
 4702      5F7400
 4703              	.LASF97:
 4704 0675 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4704      61746547 
 4704      726F7570 
 4704      335F5350 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 114


 4704      4900
 4705              	.LASF165:
 4706 0687 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4706      62726D73 
 4706      5F536574 
 4706      5072696F 
 4706      72697479 
 4707              	.LASF28:
 4708 069c 6C6F6E67 		.ascii	"long double\000"
 4708      20646F75 
 4708      626C6500 
 4709              	.LASF20:
 4710 06a8 75696E74 		.ascii	"uint16_t\000"
 4710      31365F74 
 4710      00
 4711              	.LASF27:
 4712 06b1 72656733 		.ascii	"reg32\000"
 4712      3200
 4713              	.LASF30:
 4714 06b7 6373554E 		.ascii	"csUNDEFINED\000"
 4714      44454649 
 4714      4E454400 
 4715              	.LASF55:
 4716 06c3 73657175 		.ascii	"sequence\000"
 4716      656E6365 
 4716      00
 4717              	.LASF121:
 4718 06cc 4F757470 		.ascii	"Output\000"
 4718      757400
 4719              	.LASF69:
 4720 06d3 636F6E66 		.ascii	"config\000"
 4720      696700
 4721              	.LASF39:
 4722 06da 66734375 		.ascii	"fsCurrentRead\000"
 4722      7272656E 
 4722      74526561 
 4722      6400
 4723              	.LASF1:
 4724 06e8 73686F72 		.ascii	"short int\000"
 4724      7420696E 
 4724      7400
 4725              	.LASF62:
 4726 06f2 72784D65 		.ascii	"rxMessage_config_t\000"
 4726      73736167 
 4726      655F636F 
 4726      6E666967 
 4726      5F7400
 4727              	.LASF114:
 4728 0705 5049445F 		.ascii	"PID_Was_Enabled\000"
 4728      5761735F 
 4728      456E6162 
 4728      6C656400 
 4729              	.LASF113:
 4730 0715 5049445F 		.ascii	"PID_Enabled\000"
 4730      456E6162 
 4730      6C656400 
 4731              	.LASF101:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 115


 4732 0721 4D6F6465 		.ascii	"Mode\000"
 4732      00
 4733              	.LASF111:
 4734 0726 62726D73 		.ascii	"brmsRG5Mask\000"
 4734      5247354D 
 4734      61736B00 
 4735              	.LASF10:
 4736 0732 6C6F6E67 		.ascii	"long int\000"
 4736      20696E74 
 4736      00
 4737              	.LASF33:
 4738 073b 63734D41 		.ascii	"csMAX\000"
 4738      5800
 4739              	.LASF68:
 4740 0741 6F766572 		.ascii	"overlay\000"
 4740      6C617900 
 4741              	.LASF175:
 4742 0749 50574D5F 		.ascii	"PWM_1_Start\000"
 4742      315F5374 
 4742      61727400 
 4743              	.LASF123:
 4744 0755 4C617374 		.ascii	"LastMoveStartTimeUsec\000"
 4744      4D6F7665 
 4744      53746172 
 4744      7454696D 
 4744      65557365 
 4745              	.LASF98:
 4746 076b 64697374 		.ascii	"distance\000"
 4746      616E6365 
 4746      00
 4747              	.LASF158:
 4748 0774 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4748      5F4F5554 
 4748      5F536574 
 4748      44726976 
 4748      654D6F64 
 4749              	.LASF95:
 4750 078a 52617750 		.ascii	"RawPosition\000"
 4750      6F736974 
 4750      696F6E00 
 4751              	.LASF139:
 4752 0796 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4752      4D657373 
 4752      61676554 
 4752      696D6553 
 4752      65636F6E 
 4753              	.LASF109:
 4754 07ad 62726D73 		.ascii	"brmsRG3Mask\000"
 4754      5247334D 
 4754      61736B00 
 4755              	.LASF83:
 4756 07b9 74784D65 		.ascii	"txMessage_t\000"
 4756      73736167 
 4756      655F7400 
 4757              	.LASF23:
 4758 07c5 75696E74 		.ascii	"uint64_t\000"
 4758      36345F74 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 116


 4758      00
 4759              	.LASF64:
 4760 07ce 73657470 		.ascii	"setpoint\000"
 4760      6F696E74 
 4760      00
 4761              	.LASF108:
 4762 07d7 62726D73 		.ascii	"brmsRG2Mask\000"
 4762      5247324D 
 4762      61736B00 
 4763              	.LASF184:
 4764 07e3 47657450 		.ascii	"GetPosition\000"
 4764      6F736974 
 4764      696F6E00 
 4765              	.LASF132:
 4766 07ef 55707469 		.ascii	"UptimeSeconds\000"
 4766      6D655365 
 4766      636F6E64 
 4766      7300
 4767              	.LASF169:
 4768 07fd 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4768      7273745F 
 4768      656E636F 
 4768      6465725F 
 4768      53657450 
 4769              	.LASF115:
 4770 0819 5049445F 		.ascii	"PID_Setpoint\000"
 4770      53657470 
 4770      6F696E74 
 4770      00
 4771              	.LASF4:
 4772 0826 5F5F7569 		.ascii	"__uint8_t\000"
 4772      6E74385F 
 4772      7400
 4773              	.LASF47:
 4774 0830 6F705374 		.ascii	"opStatus\000"
 4774      61747573 
 4774      00
 4775              	.LASF49:
 4776 0839 6F704D41 		.ascii	"opMAX\000"
 4776      5800
 4777              	.LASF136:
 4778 083f 43686563 		.ascii	"ChecksumErrors\000"
 4778      6B73756D 
 4778      4572726F 
 4778      727300
 4779              	.LASF29:
 4780 084e 73697A65 		.ascii	"sizetype\000"
 4780      74797065 
 4780      00
 4781              	.LASF12:
 4782 0857 6C6F6E67 		.ascii	"long unsigned int\000"
 4782      20756E73 
 4782      69676E65 
 4782      6420696E 
 4782      7400
 4783              	.LASF21:
 4784 0869 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 117


 4784      325F7400 
 4785              	.LASF128:
 4786 0871 55707469 		.ascii	"UptimeMicroseconds\000"
 4786      6D654D69 
 4786      63726F73 
 4786      65636F6E 
 4786      647300
 4787              	.LASF58:
 4788 0884 6F766572 		.ascii	"overrideKd\000"
 4788      72696465 
 4788      4B6400
 4789              	.LASF75:
 4790 088f 73746174 		.ascii	"state\000"
 4790      6500
 4791              	.LASF57:
 4792 0895 6F766572 		.ascii	"overrideKi\000"
 4792      72696465 
 4792      4B6900
 4793              	.LASF56:
 4794 08a0 6F766572 		.ascii	"overrideKp\000"
 4794      72696465 
 4794      4B7000
 4795              	.LASF174:
 4796 08ab 5350495F 		.ascii	"SPI_1_Start\000"
 4796      315F5374 
 4796      61727400 
 4797              	.LASF5:
 4798 08b7 756E7369 		.ascii	"unsigned char\000"
 4798      676E6564 
 4798      20636861 
 4798      7200
 4799              	.LASF11:
 4800 08c5 5F5F7569 		.ascii	"__uint32_t\000"
 4800      6E743332 
 4800      5F7400
 4801              	.LASF45:
 4802 08d0 6F70554E 		.ascii	"opUNDEFINED\000"
 4802      44454649 
 4802      4E454400 
 4803              	.LASF48:
 4804 08dc 6F705365 		.ascii	"opSetEnc\000"
 4804      74456E63 
 4804      00
 4805              	.LASF134:
 4806 08e5 4661756C 		.ascii	"FaultState\000"
 4806      74537461 
 4806      746500
 4807              	.LASF179:
 4808 08f0 456E636F 		.ascii	"EncoderDirection_Write\000"
 4808      64657244 
 4808      69726563 
 4808      74696F6E 
 4808      5F577269 
 4809              	.LASF41:
 4810 0907 66735832 		.ascii	"fsX2\000"
 4810      00
 4811              	.LASF42:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 118


 4812 090c 66735833 		.ascii	"fsX3\000"
 4812      00
 4813              	.LASF43:
 4814 0911 66735834 		.ascii	"fsX4\000"
 4814      00
 4815              	.LASF135:
 4816 0916 436F6E66 		.ascii	"ConfigSequence\000"
 4816      69675365 
 4816      7175656E 
 4816      636500
 4817              	.LASF122:
 4818 0925 686F6D69 		.ascii	"homingDone\000"
 4818      6E67446F 
 4818      6E6500
 4819              	.LASF124:
 4820 0930 4C617374 		.ascii	"LastMoveEndTimeUsec\000"
 4820      4D6F7665 
 4820      456E6454 
 4820      696D6555 
 4820      73656300 
 4821              	.LASF144:
 4822 0944 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 4822      745F456E 
 4822      636F6465 
 4822      725F436C 
 4822      65617249 
 4823              	.LASF67:
 4824 0961 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4824      73736167 
 4824      655F7365 
 4824      74656E63 
 4824      5F7400
 4825              	.LASF162:
 4826 0974 50524F42 		.ascii	"PROBE_Write\000"
 4826      455F5772 
 4826      69746500 
 4827              	.LASF166:
 4828 0980 6973725F 		.ascii	"isr_home_StartEx\000"
 4828      686F6D65 
 4828      5F537461 
 4828      72744578 
 4828      00
 4829              	.LASF2:
 4830 0991 7369676E 		.ascii	"signed char\000"
 4830      65642063 
 4830      68617200 
 4831              	.LASF8:
 4832 099d 73686F72 		.ascii	"short unsigned int\000"
 4832      7420756E 
 4832      7369676E 
 4832      65642069 
 4832      6E7400
 4833              	.LASF99:
 4834 09b0 5049445F 		.ascii	"PID_Initialize\000"
 4834      496E6974 
 4834      69616C69 
 4834      7A6500
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 119


 4835              	.LASF185:
 4836 09bf 6D61696E 		.ascii	"main\000"
 4836      00
 4837              	.LASF80:
 4838 09c4 69746572 		.ascii	"iterm\000"
 4838      6D00
 4839              	.LASF25:
 4840 09ca 646F7562 		.ascii	"double\000"
 4840      6C6500
 4841              	.LASF178:
 4842 09d1 496E6465 		.ascii	"Index_Counter_1_Start\000"
 4842      785F436F 
 4842      756E7465 
 4842      725F315F 
 4842      53746172 
 4843              	.LASF129:
 4844 09e7 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 4844      6D654D69 
 4844      63726F73 
 4844      65636F6E 
 4844      64734163 
 4845              	.LASF46:
 4846 0a05 6F70436F 		.ascii	"opConfig\000"
 4846      6E666967 
 4846      00
 4847              	.LASF168:
 4848 0a0e 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 4848      7273745F 
 4848      656E636F 
 4848      6465725F 
 4848      53746172 
 4849              	.LASF147:
 4850 0a26 6973725F 		.ascii	"isr_home_ClearPending\000"
 4850      686F6D65 
 4850      5F436C65 
 4850      61725065 
 4850      6E64696E 
 4851              	.LASF76:
 4852 0a3c 6661756C 		.ascii	"fault\000"
 4852      7400
 4853              	.LASF87:
 4854 0a42 52535449 		.ascii	"RSTIsrHandler\000"
 4854      73724861 
 4854      6E646C65 
 4854      7200
 4855              	.LASF79:
 4856 0a50 706F7369 		.ascii	"position\000"
 4856      74696F6E 
 4856      00
 4857              	.LASF44:
 4858 0a59 4661756C 		.ascii	"FaultStates_t\000"
 4858      74537461 
 4858      7465735F 
 4858      7400
 4859              	.LASF142:
 4860 0a67 74784D65 		.ascii	"txMessageState\000"
 4860      73736167 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc5i09TY.s 			page 120


 4860      65537461 
 4860      746500
 4861              	.LASF116:
 4862 0a76 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 4862      45666665 
 4862      63746976 
 4862      65536574 
 4862      706F696E 
 4863              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
