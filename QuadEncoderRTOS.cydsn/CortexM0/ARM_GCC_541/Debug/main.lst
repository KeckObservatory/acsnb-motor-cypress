ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB46:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original non-RTOS version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  12:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  13:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  14:main.c        **** *******************************************************************************/
  15:main.c        **** #include <FreeRTOS.h>
  16:main.c        **** #include <semphr.h>
  17:main.c        **** #include <task.h>
  18:main.c        **** #include <I2C_I2C.h>
  19:main.c        **** #include <stdbool.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include "INA219.h"
  23:main.c        **** 
  24:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  25:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  26:main.c        **** 
  27:main.c        **** /* --------------------------------------------------------------------- 
  28:main.c        ****  * CONSTANTS
  29:main.c        ****  * --------------------------------------------------------------------- */
  30:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 2


  31:main.c        **** /* Interrupt priorities (not to be confused with RTOS task priorities) */
  32:main.c        **** #define NESTED_ISR                             (1u)
  33:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  34:main.c        **** #define HIGHER_PRIORITY                        (2u)
  35:main.c        **** 
  36:main.c        **** /* Interrupt prototypes */
  37:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  38:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  39:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  40:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  41:main.c        **** 
  42:main.c        **** /* --------------------------------------------------------------------- 
  43:main.c        ****  * WDT Defines
  44:main.c        ****  *
  45:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  46:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  47:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  48:main.c        ****  * --------------------------------------------------------------------- */
  49:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  50:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  51:main.c        **** 
  52:main.c        **** /* --------------------------------------------------------------------- 
  53:main.c        ****  * PWM Defines
  54:main.c        ****  * --------------------------------------------------------------------- */
  55:main.c        **** #define PWM_15KHZ_PERIOD 1600
  56:main.c        **** #define PWM_PCT_TO_COMPARE(x) trunc((float) x * (PWM_15KHZ_PERIOD/100))
  57:main.c        **** #define PWM_IDLE 50.0
  58:main.c        **** 
  59:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  60:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  61:main.c        **** #define INA219_CAL_VALUE                       (8192)
  62:main.c        **** 
  63:main.c        **** volatile int8 Jog, Last_Jog;
  64:main.c        **** int8 PWM_Max_Fwd, PWM_Max_Rev;
  65:main.c        **** 
  66:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  67:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  68:main.c        **** 
  69:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  70:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  71:main.c        **** 
  72:main.c        **** /* --------------------------------------------------------------------- 
  73:main.c        ****  * PID Defines
  74:main.c        ****  * --------------------------------------------------------------------- */
  75:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  76:main.c        **** uint32 PID_Setpoint;
  77:main.c        **** 
  78:main.c        **** uint32 lastTime;
  79:main.c        **** float Output;
  80:main.c        **** float ITerm, lastPosition;
  81:main.c        **** float refKp, refKi, refKd;
  82:main.c        **** float kp, ki, kd;
  83:main.c        **** uint32 refSampleTime = 5; // Default to 5ms
  84:main.c        **** float outMin, outMax;
  85:main.c        **** bool inAuto = false;
  86:main.c        ****  
  87:main.c        **** #define PID_MANUAL 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 3


  88:main.c        **** #define PID_AUTOMATIC 1
  89:main.c        **** 
  90:main.c        **** /* --------------------------------------------------------------------- 
  91:main.c        ****  * ENCODER PROPERTIES
  92:main.c        ****  * --------------------------------------------------------------------- */
  93:main.c        **** #define ENCODER_MAX                            (0x00800000)
  94:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
  95:main.c        **** 
  96:main.c        **** /* --------------------------------------------------------------------- 
  97:main.c        ****  * INA219 REGISTERS
  98:main.c        ****  * --------------------------------------------------------------------- */
  99:main.c        **** #define INA219_REG_CONFIG                      (0x00)
 100:main.c        **** #define INA219_REG_SHUNTVOLTAGE                (0x01)
 101:main.c        **** #define INA219_REG_BUSVOLTAGE                  (0x02)
 102:main.c        **** #define INA219_REG_POWER                       (0x03)
 103:main.c        **** #define INA219_REG_CURRENT                     (0x04)
 104:main.c        **** #define INA219_REG_CALIBRATION                 (0x05)
 105:main.c        **** 
 106:main.c        **** /* ****************************
 107:main.c        ****  * INA219 CONFIG REGISTER (R/W)
 108:main.c        ****  * **************************** */
 109:main.c        **** #define INA219_CONFIG_RESET                    (0x8000)  // Reset Bit
 110:main.c        **** 
 111:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_MASK       (0x2000)  // Bus Voltage Range Mask
 112:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_16V        (0x0000)  // 0-16V Range
 113:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_32V        (0x2000)  // 0-32V Range
 114:main.c        **** 
 115:main.c        **** #define INA219_CONFIG_GAIN_MASK                (0x1800)  // Gain Mask
 116:main.c        **** #define INA219_CONFIG_GAIN_1_40MV              (0x0000)  // Gain 1, 40mV Range
 117:main.c        **** #define INA219_CONFIG_GAIN_2_80MV              (0x0800)  // Gain 2, 80mV Range
 118:main.c        **** #define INA219_CONFIG_GAIN_4_160MV             (0x1000)  // Gain 4, 160mV Range
 119:main.c        **** #define INA219_CONFIG_GAIN_8_320MV             (0x1800)  // Gain 8, 320mV Range
 120:main.c        **** 
 121:main.c        **** #define INA219_CONFIG_BADCRES_MASK             (0x0780)  // Bus ADC Resolution Mask
 122:main.c        **** #define INA219_CONFIG_BADCRES_9BIT             (0x0080)  // 9-bit bus res = 0..511
 123:main.c        **** #define INA219_CONFIG_BADCRES_10BIT            (0x0100)  // 10-bit bus res = 0..1023
 124:main.c        **** #define INA219_CONFIG_BADCRES_11BIT            (0x0200)  // 11-bit bus res = 0..2047
 125:main.c        **** #define INA219_CONFIG_BADCRES_12BIT            (0x0400)  // 12-bit bus res = 0..4097
 126:main.c        **** 
 127:main.c        **** #define INA219_CONFIG_SADCRES_MASK             (0x0078)  // Shunt ADC Resolution and Averaging Mask
 128:main.c        **** #define INA219_CONFIG_SADCRES_9BIT_1S_84US     (0x0000)  // 1 x 9-bit shunt sample
 129:main.c        **** #define INA219_CONFIG_SADCRES_10BIT_1S_148US   (0x0008)  // 1 x 10-bit shunt sample
 130:main.c        **** #define INA219_CONFIG_SADCRES_11BIT_1S_276US   (0x0010)  // 1 x 11-bit shunt sample
 131:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_1S_532US   (0x0018)  // 1 x 12-bit shunt sample
 132:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_2S_1060US  (0x0048)	 // 2 x 12-bit shunt samples averaged toget
 133:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_4S_2130US  (0x0050)  // 4 x 12-bit shunt samples averaged toget
 134:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_8S_4260US  (0x0058)  // 8 x 12-bit shunt samples averaged toget
 135:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_16S_8510US (0x0060)  // 16 x 12-bit shunt samples averaged toge
 136:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_32S_17MS   (0x0068)  // 32 x 12-bit shunt samples averaged toge
 137:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_64S_34MS   (0x0070)  // 64 x 12-bit shunt samples averaged toge
 138:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_128S_69MS  (0x0078)  // 128 x 12-bit shunt samples averaged tog
 139:main.c        **** 
 140:main.c        **** #define INA219_CONFIG_MODE_MASK                (0x0007)  // Operating Mode Mask
 141:main.c        **** #define INA219_CONFIG_MODE_POWERDOWN           (0x0000)
 142:main.c        **** #define INA219_CONFIG_MODE_SVOLT_TRIGGERED     (0x0001)
 143:main.c        **** #define INA219_CONFIG_MODE_BVOLT_TRIGGERED     (0x0002)
 144:main.c        **** #define INA219_CONFIG_MODE_SANDBVOLT_TRIGGERED (0x0003)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 4


 145:main.c        **** #define INA219_CONFIG_MODE_ADCOFF              (0x0004)
 146:main.c        **** #define INA219_CONFIG_MODE_SVOLT_CONTINUOUS    (0x0005)
 147:main.c        **** #define INA219_CONFIG_MODE_BVOLT_CONTINUOUS    (0x0006)
 148:main.c        **** #define INA219_CONFIG_MODE_SANDBVOLT_CONTINUOUS (0x0007)	
 149:main.c        **** 
 150:main.c        **** 
 151:main.c        **** /* --------------------------------------------------------------------- 
 152:main.c        ****  * RTOS INTERFACES
 153:main.c        ****  * --------------------------------------------------------------------- */
 154:main.c        **** /* Define macros for delaying a task by an amount, returning control back to the OS.
 155:main.c        ****    We have to sleep in OS ticks, so compute how many that is and sleep that long.
 156:main.c        ****    Minimum sleep time is 1ms. */
 157:main.c        **** #define Sleep(MSToSleep)    vTaskDelay( ( MSToSleep * 1000 ) / configTICK_RATE_HZ )
 158:main.c        **** 
 159:main.c        **** 
 160:main.c        **** /* --------------------------------------------------------------------- 
 161:main.c        ****  * GLOBALS
 162:main.c        ****  * --------------------------------------------------------------------- */
 163:main.c        **** /* Coarse reporting of state back to the node box software */
 164:main.c        **** typedef enum {    
 165:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 166:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 167:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 168:main.c        ****     csMAX    
 169:main.c        **** } ConfigStates_t;
 170:main.c        **** 
 171:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 172:main.c        **** 
 173:main.c        **** /* Fault codes, these are bit encoded into a uint8 */
 174:main.c        **** typedef enum {
 175:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 176:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 177:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 178:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 179:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 180:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 181:main.c        ****     fsX2           = 0b00100000,    /* */
 182:main.c        ****     fsX3           = 0b01000000,    /* */
 183:main.c        ****     fsX4           = 0b10000000     /* */
 184:main.c        **** } FaultStates_t;
 185:main.c        **** 
 186:main.c        **** volatile ConfigStates_t ConfigState;
 187:main.c        **** volatile uint8 FaultState;
 188:main.c        **** volatile uint8 ConfigSequence;
 189:main.c        **** volatile uint16 ChecksumErrors;
 190:main.c        **** volatile uint16 Current;
 191:main.c        **** volatile float PWM;
 192:main.c        **** volatile uint32 PID_Last_Position;
 193:main.c        **** uint8 CurrentI2Cinbuf[20];
 194:main.c        **** 
 195:main.c        **** /* Task stack information */
 196:main.c        **** volatile UBaseType_t uxHighWaterMark_PID;
 197:main.c        **** volatile UBaseType_t uxHighWaterMark_Current;
 198:main.c        **** volatile UBaseType_t uxHighWaterMark_Comm;
 199:main.c        **** 
 200:main.c        **** /* Message buffer lock */
 201:main.c        **** SemaphoreHandle_t Lock;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 5


 202:main.c        **** 
 203:main.c        **** /* --------------------------------------------------------------------- 
 204:main.c        ****  * SPI MESSAGING
 205:main.c        ****  * --------------------------------------------------------------------- */
 206:main.c        **** /* V2 protocol 
 207:main.c        **** 
 208:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 209:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 210:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 211:main.c        **** 
 212:main.c        **** */
 213:main.c        ****     
 214:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 215:main.c        **** #define MAX_MESSAGE_SIZE 30
 216:main.c        ****     
 217:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 218:main.c        ****    talking.  5000 ticks is 1 second of not talking. */
 219:main.c        **** #define MAX_LAST_MESSAGE_TIME_TICKS 1000
 220:main.c        **** uint32 LastMessageTimeTick;
 221:main.c        **** 
 222:main.c        **** /* Opcodes that can come from the node box software */
 223:main.c        **** typedef enum {
 224:main.c        ****     opUNDEFINED = 0,
 225:main.c        ****     opConfig    = 1,
 226:main.c        ****     opStatus    = 2,
 227:main.c        ****     opError     = 3,
 228:main.c        ****     opMAX       
 229:main.c        **** } rxMessage_opcodes_t;    
 230:main.c        **** 
 231:main.c        **** /* Sanity check for opcodes */
 232:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 233:main.c        **** 
 234:main.c        **** typedef struct { 
 235:main.c        ****     uint8 checksum;        
 236:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 237:main.c        ****     uint8 opcode;     /* Operation (generic overlay for previewing opcode value) */
 238:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 239:main.c        **** 
 240:main.c        **** /* Configuration message, 17 bytes */
 241:main.c        **** typedef struct {
 242:main.c        ****     uint8 checksum;        
 243:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 244:main.c        ****     uint8 opcode;     /* Operation: 01 == config */        
 245:main.c        ****     uint8 sequence;   /* Configuration message sequence number */
 246:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 247:main.c        ****     float Ki;
 248:main.c        ****     float Kd;
 249:main.c        ****     uint8 limit;      /* PWM duty cycle (speed) limit, +/- percent */
 250:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 251:main.c        **** 
 252:main.c        **** /* Status message, contains desired position and such values, 12 bytes */
 253:main.c        **** typedef struct {
 254:main.c        ****     uint8  checksum;        
 255:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 256:main.c        ****     uint8  opcode;     /* Operation: 02 == status */
 257:main.c        ****     uint8  enable;     /* Enable/disable PID algorithm */
 258:main.c        ****     uint32 setpoint;   /* Setpoint (desired actuator position) */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 6


 259:main.c        ****     int8   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 260:main.c        ****     uint8  clearfaults;/* Set to nonzero to clear all the current faults */
 261:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 262:main.c        ****    
 263:main.c        **** 
 264:main.c        **** 
 265:main.c        **** /* Wrap the message with an array of bytes */
 266:main.c        **** union {
 267:main.c        ****     uint8               buf[MAX_MESSAGE_SIZE];
 268:main.c        ****     rxMessage_overlay_t overlay;
 269:main.c        ****     rxMessage_config_t  config;
 270:main.c        ****     rxMessage_status_t  status;  
 271:main.c        **** } rxMessage;
 272:main.c        **** 
 273:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 18 byt
 274:main.c        **** typedef struct  {  
 275:main.c        ****     uint8  checksum;   /* Message checksum */    
 276:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 277:main.c        ****     uint8  opcode;     /* Echo back of the opcode this response is for, operation: 03 == status */
 278:main.c        ****     uint8  state;      /* Enum value for current device configuration state */ 
 279:main.c        ****     uint8  fault;      /* Bit encoded fields for current fault status */
 280:main.c        ****     uint8  sequence;   /* Echo back the config sequence number currently set */
 281:main.c        ****     uint16 checksum_errors; /* Count of checksum errors */
 282:main.c        ****     uint16 current;    /* Motor current consumption (mA) */
 283:main.c        ****     uint32 position;   /* Actual actuator position */ 
 284:main.c        ****     float pwm;         /* PWM value the motor is moving at */     
 285:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 286:main.c        **** 
 287:main.c        **** /* Wrap the message with an array of bytes */
 288:main.c        **** union {    
 289:main.c        ****     uint8       buf[MAX_MESSAGE_SIZE];
 290:main.c        ****     txMessage_t msg;
 291:main.c        **** } txMessage;
 292:main.c        **** 
 293:main.c        **** /* State machine definition for transmit side of messaging */
 294:main.c        **** typedef enum {
 295:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 296:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 297:main.c        **** } txMessageStates_t;
 298:main.c        **** 
 299:main.c        **** txMessageStates_t txMessageState;
 300:main.c        **** 
 301:main.c        ****     
 302:main.c        **** 
 303:main.c        **** /*******************************************************************************
 304:main.c        **** * Function Name: setupFreeRTOS
 305:main.c        **** ********************************************************************************
 306:main.c        **** * Summary:
 307:main.c        **** *  Hooks the tick and service handlers for the RTOS at runtime.
 308:main.c        **** *
 309:main.c        **** * Parameters: None
 310:main.c        **** * Return: None
 311:main.c        **** *******************************************************************************/
 312:main.c        **** 
 313:main.c        **** extern void xPortPendSVHandler(void);
 314:main.c        **** extern void xPortSysTickHandler(void);
 315:main.c        **** extern void vPortSVCHandler(void);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 7


 316:main.c        **** 
 317:main.c        **** void setupFreeRTOS(void) {
 318:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 319:main.c        ****     
 320:main.c        ****     /* Handler for Cortex Supervisor Call (SVC, formerly SWI) - address 11 */
 321:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SVCall_IRQn, (cyisraddress)vPortSVCHandler );
 322:main.c        ****     
 323:main.c        ****     /* Handler for Cortex PendSV Call - address 14 */
 324:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + PendSV_IRQn, (cyisraddress)xPortPendSVHandler );    
 325:main.c        ****     
 326:main.c        ****     /* Handler for Cortex SYSTICK - address 15 */
 327:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SysTick_IRQn, (cyisraddress)xPortSysTickHandler );
 328:main.c        **** }
 329:main.c        **** 
 330:main.c        **** 
 331:main.c        **** /*******************************************************************************
 332:main.c        **** * Function Name: AssertFault
 333:main.c        **** ********************************************************************************
 334:main.c        **** * Summary:
 335:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 336:main.c        **** *  all faults.
 337:main.c        **** *
 338:main.c        **** * Parameters: FaultStates_t of the fault detected.
 339:main.c        **** * Return: None
 340:main.c        **** *******************************************************************************/
 341:main.c        **** void AssertFault(FaultStates_t fault) {
 342:main.c        ****  
 343:main.c        ****     switch (fault) {
 344:main.c        ****      
 345:main.c        ****         /* Clears all asserted faults */
 346:main.c        ****         case fsNONE:
 347:main.c        ****             FaultState = fsNONE;
 348:main.c        ****             break;        
 349:main.c        ****         
 350:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 351:main.c        ****         default:
 352:main.c        ****             FaultState |= fault;
 353:main.c        ****             break;        
 354:main.c        ****     }    
 355:main.c        **** }
 356:main.c        **** 
 357:main.c        **** 
 358:main.c        **** /*******************************************************************************
 359:main.c        **** * Function Name: ClearFault
 360:main.c        **** ********************************************************************************
 361:main.c        **** * Summary:
 362:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 363:main.c        **** *  all faults.
 364:main.c        **** *
 365:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 366:main.c        **** * Return: None
 367:main.c        **** *******************************************************************************/
 368:main.c        **** void ClearFault(FaultStates_t fault) {
 369:main.c        ****  
 370:main.c        ****     switch (fault) {
 371:main.c        ****      
 372:main.c        ****         /* Clears all asserted faults */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 8


 373:main.c        ****         case fsNONE:
 374:main.c        ****             FaultState = fsNONE;
 375:main.c        ****             break;        
 376:main.c        ****         
 377:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 378:main.c        ****         default:
 379:main.c        ****             FaultState &= ~fault;
 380:main.c        ****             break;        
 381:main.c        ****     }    
 382:main.c        **** }
 383:main.c        **** 
 384:main.c        **** 
 385:main.c        **** /*******************************************************************************
 386:main.c        **** * Function Name: Current_Read_Task
 387:main.c        **** ********************************************************************************
 388:main.c        **** * Summary:
 389:main.c        **** *  RTOS task to read the motor current consumption.
 390:main.c        **** *
 391:main.c        **** * Parameters: None
 392:main.c        **** * Return: None
 393:main.c        **** *******************************************************************************/
 394:main.c        **** void Current_Read_Task(void *arg) {
 395:main.c        ****     
 396:main.c        **** //#ifdef zero
 397:main.c        ****     volatile uint32 err;
 398:main.c        ****     uint8 byteMSB;
 399:main.c        ****     uint8 byteLSB;
 400:main.c        **** //#endif
 401:main.c        **** 
 402:main.c        ****     volatile uint16 CurrentTemp;
 403:main.c        ****     uint8 foo = 0;
 404:main.c        ****     
 405:main.c        ****     /* Initial high water mark reading */
 406:main.c        ****     uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
 407:main.c        ****     
 408:main.c        ****     //TODO Init_INA(INA219_I2C_ADDR);
 409:main.c        ****     
 410:main.c        ****     while (1) {
 411:main.c        ****         LED_Write(foo);
 412:main.c        ****         PROBE_Write(foo);
 413:main.c        **** 
 414:main.c        ****         if (foo) { foo = 0; } else { foo = 1; }
 415:main.c        ****         
 416:main.c        ****         //TODO CurrentTemp = getCurrent_raw(INA219_I2C_ADDR);
 417:main.c        ****         
 418:main.c        ****         
 419:main.c        **** //#ifdef zero        
 420:main.c        ****         err = I2C_I2CMasterSendStart(INA219_I2C_ADDR, 0x00, 10); // send start condition for the IN
 421:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 422:main.c        ****             
 423:main.c        ****             I2C_I2CMasterWriteByte(INA219_REG_CALIBRATION, 10);
 424:main.c        ****             
 425:main.c        ****             byteMSB = (uint8)((INA219_CAL_VALUE & 0xFF00) >> 8);
 426:main.c        ****             I2C_I2CMasterWriteByte(byteMSB, 10);
 427:main.c        ****             
 428:main.c        ****             byteLSB = (uint8)(INA219_CAL_VALUE & 0x00FF);
 429:main.c        ****             I2C_I2CMasterWriteByte(byteLSB, 10);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 9


 430:main.c        ****             I2C_I2CMasterSendStop(10);
 431:main.c        ****         } else {
 432:main.c        ****             Current = 0;
 433:main.c        ****             AssertFault(fsCurrentRead);
 434:main.c        ****         }
 435:main.c        ****         
 436:main.c        ****         err = I2C_I2CMasterSendStart(INA219_I2C_ADDR, 0x00, 10); // send start condition for the IN
 437:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 438:main.c        ****             
 439:main.c        ****             I2C_I2CMasterWriteByte(INA219_REG_CURRENT, 10);
 440:main.c        ****             I2C_I2CMasterSendStop(10);
 441:main.c        ****             
 442:main.c        ****             /* Read back the value for the current usage */
 443:main.c        ****             err = I2C_I2CMasterReadBuf(INA219_I2C_ADDR, CurrentI2Cinbuf, 5, 1);
 444:main.c        ****             
 445:main.c        ****             /* Reassemble the current value into a 16 bit value */
 446:main.c        ****             if (err == I2C_I2C_MSTR_NO_ERROR) {
 447:main.c        ****                 CurrentTemp = (uint16)(CurrentI2Cinbuf[0] << 8) + CurrentI2Cinbuf[1];
 448:main.c        ****             } else {
 449:main.c        ****                 CurrentTemp = 0;   
 450:main.c        ****                 AssertFault(fsCurrentRead);
 451:main.c        ****             }
 452:main.c        ****         } else {
 453:main.c        ****             CurrentTemp = 0; 
 454:main.c        ****             AssertFault(fsCurrentRead);
 455:main.c        ****         }
 456:main.c        **** //#endif
 457:main.c        **** 
 458:main.c        **** 
 459:main.c        ****         /* Perform the assignment as one operation, to make it as atomic as possible (may need more
 460:main.c        ****         Current = CurrentTemp;
 461:main.c        **** 
 462:main.c        ****         /* Read the current at 2Hz */        
 463:main.c        ****         Sleep(500);
 464:main.c        ****         
 465:main.c        ****         /* Get our task stack usage high water mark */    
 466:main.c        ****         uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
 467:main.c        ****     }
 468:main.c        ****    
 469:main.c        **** }
 470:main.c        **** 
 471:main.c        **** /*******************************************************************************
 472:main.c        **** * Function Name: Comm_Task
 473:main.c        **** ********************************************************************************
 474:main.c        **** * Summary:
 475:main.c        **** *  RTOS task to perform the SPI communications.
 476:main.c        **** *
 477:main.c        **** * Parameters: None
 478:main.c        **** * Return: None
 479:main.c        **** *******************************************************************************/
 480:main.c        **** void Comm_Task(void *arg) {
 481:main.c        ****  
 482:main.c        ****     rxMessage_opcodes_t opcode;
 483:main.c        ****     uint8 size;
 484:main.c        ****     uint8 i;
 485:main.c        ****     uint8 checksum;
 486:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 10


 487:main.c        ****     /* Initial high water mark reading */
 488:main.c        ****     uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );  
 489:main.c        ****     
 490:main.c        ****     while (1) {
 491:main.c        ****         
 492:main.c        ****         /* If the SPI is moving data out right now, skip any touching of the message buffer */
 493:main.c        ****         if (!SPI_1_SpiIsBusBusy()) {
 494:main.c        ****         
 495:main.c        ****             /* In certain states, this thread is responsible for loading the outbound messaging */
 496:main.c        ****             switch (txMessageState) {
 497:main.c        ****              
 498:main.c        ****                 /* Output buffer is clear and ready for loading, rxMessage is (probably) good and n
 499:main.c        ****                 case txmsClear:
 500:main.c        **** 
 501:main.c        ****                     /* Take the lock, set the fields, and release the lock.  If we can't get the lo
 502:main.c        ****                        we have missed this messaging cycle have to skip it.
 503:main.c        ****                        2018-12-18 PMR: At the moment, this is the only task taking the lock so it w
 504:main.c        ****                                        Sometime in the future we might need the lock so I am leavin
 505:main.c        ****                     */
 506:main.c        ****                     if( xSemaphoreTake( Lock, ( TickType_t ) 4 ) == pdTRUE ) {
 507:main.c        ****                         
 508:main.c        ****                         /* Get a few items out of the message before checking the sum */
 509:main.c        ****                         size     = rxMessage.overlay.size;
 510:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 511:main.c        ****                         
 512:main.c        ****                         /* Make sure the size makes sense.  If we have to reset the size it's proba
 513:main.c        ****                         if (size > sizeof(txMessage.buf))
 514:main.c        ****                             size = sizeof(txMessage.buf);                            
 515:main.c        ****                     
 516:main.c        ****                         /* Calculate the checksum by summing the bytes of the entire message, it sh
 517:main.c        ****                         for (i = 0, checksum = 0; i < size; i++)
 518:main.c        ****                             checksum += rxMessage.buf[i]; 
 519:main.c        **** 
 520:main.c        ****                         /* Checksum fault, don't try to process the messgage */
 521:main.c        ****                         if ((checksum & 0xFF) != 0) {
 522:main.c        ****                             
 523:main.c        ****                             txMessage.msg.opcode = opcode;
 524:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 525:main.c        ****                             ChecksumErrors++;
 526:main.c        ****                             
 527:main.c        ****                         /* Message looks fine, process it */
 528:main.c        ****                         } else {
 529:main.c        **** 
 530:main.c        ****                             /* Message opcode must be valid before trying to process the message co
 531:main.c        ****                             if ( rxMessageOpcodeValid(opcode) ) {                            
 532:main.c        ****                             
 533:main.c        ****                                 switch (opcode) {
 534:main.c        ****                                 
 535:main.c        ****                                     case opConfig:
 536:main.c        ****                                         /* Special message to establish settings on the device such
 537:main.c        ****                                     
 538:main.c        ****                                         /* Update the 'reference' values passed down from the serve
 539:main.c        ****                                            values are time interval adjusted */
 540:main.c        ****                                         refKp = rxMessage.config.Kp;
 541:main.c        ****                                         refKi = rxMessage.config.Ki;
 542:main.c        ****                                         refKd = rxMessage.config.Kd;                               
 543:main.c        ****                                            
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 11


 544:main.c        ****                                         /* Setup the PWM limits and stop a jog if one was in progre
 545:main.c        ****                                         Jog = 0;
 546:main.c        ****                                         PWM_Max_Fwd = PWM_JOG_NEUTRAL + rxMessage.config.limit;
 547:main.c        ****                                         PWM_Max_Rev = PWM_JOG_NEUTRAL - rxMessage.config.limit;    
 548:main.c        ****                                     
 549:main.c        ****                                         /* We have received a config message, so signal to the PID 
 550:main.c        ****                                         ConfigState = csReady;  
 551:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 552:main.c        ****                                     
 553:main.c        ****                                         /* Clear all the faults when reconfigured */
 554:main.c        ****                                         ClearFault(fsNONE);
 555:main.c        ****                                         break;
 556:main.c        **** 
 557:main.c        ****                                     case opStatus:
 558:main.c        ****                                         /* The normal message telling us where to go, how much to j
 559:main.c        ****                                         PID_Enabled = (bool) rxMessage.status.enable;
 560:main.c        ****                                         
 561:main.c        ****                                         /* If we are commanded to move somewhere else, remember whe
 562:main.c        ****                                         if (PID_Setpoint != rxMessage.status.setpoint) {
 563:main.c        ****                                             
 564:main.c        ****                                             /* Remember where we started */
 565:main.c        ****                                             PID_Last_Position = Counter_1_ReadCounter();      
 566:main.c        ****                                             
 567:main.c        ****                                             /* Update destination */
 568:main.c        ****                                             PID_Setpoint = rxMessage.status.setpoint;
 569:main.c        ****                                             
 570:main.c        ****                                             /* Reset counting of index marks */
 571:main.c        ****                                             Index_Counter_1_WriteCounter(0);
 572:main.c        ****                                         }                                        
 573:main.c        ****                                     
 574:main.c        ****                                         /* PWM jog value ranges from -50 to 50, where -50 is max-re
 575:main.c        ****                                         Jog = rxMessage.status.jog;                                
 576:main.c        ****                                         break;
 577:main.c        ****                                     
 578:main.c        ****                                     /* No other opcodes are valid */
 579:main.c        ****                                     default:
 580:main.c        ****                                         break;
 581:main.c        ****                                 }                           
 582:main.c        ****                             }                            
 583:main.c        ****                         }
 584:main.c        ****                         
 585:main.c        ****                         /* Fill out the common reponse the same way every time, as a status respons
 586:main.c        ****                         txMessage.msg.checksum = 0;                            
 587:main.c        ****                         txMessage.msg.opcode   = opStatus;
 588:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 589:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 590:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 591:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 592:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 593:main.c        ****                         txMessage.msg.position = Counter_1_ReadCounter();
 594:main.c        ****                         txMessage.msg.pwm      = PWM;
 595:main.c        ****                         txMessage.msg.current  = Current;                            
 596:main.c        ****                         
 597:main.c        ****                         /* Set the checksum in the response */
 598:main.c        ****                         for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 599:main.c        ****                             checksum += txMessage.buf[i]; 
 600:main.c        ****                             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 12


 601:main.c        ****                         /* Take the 2's complement of the sum and put it back in the message */
 602:main.c        ****                         txMessage.msg.checksum = ~checksum + 1;
 603:main.c        ****                             
 604:main.c        ****                         /* Copy the readied buffer out to the FIFO */
 605:main.c        ****                         //TODO: should we clear this here, or at the end of the transmit complete i
 606:main.c        ****                         SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 607:main.c        **** 
 608:main.c        ****                         /* Indicate it's loaded for use */
 609:main.c        ****                         txMessageState = txmsLoaded;
 610:main.c        ****                         
 611:main.c        ****                         /* Clear all the faults if told to */
 612:main.c        ****                         if ((bool) rxMessage.status.clearfaults)
 613:main.c        ****                             ClearFault(fsNONE);
 614:main.c        ****                     
 615:main.c        ****                         /* Release the lock */
 616:main.c        ****                         xSemaphoreGive( Lock );
 617:main.c        ****                     }            
 618:main.c        ****                 
 619:main.c        ****                     break;
 620:main.c        ****             
 621:main.c        ****                 /* A message was already readied for transmission, nothing to do here */
 622:main.c        ****                 case txmsLoaded:
 623:main.c        ****                     
 624:main.c        ****                     break;
 625:main.c        ****             }
 626:main.c        ****             
 627:main.c        ****         }
 628:main.c        ****         
 629:main.c        ****         /* Quick sleep, a whole messaging sequence will take maybe 1.5ms */
 630:main.c        ****         Sleep(1);
 631:main.c        ****         
 632:main.c        ****         /* Get our task stack usage high water mark */    
 633:main.c        ****         uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );
 634:main.c        ****     }
 635:main.c        **** }
 636:main.c        ****     
 637:main.c        **** 
 638:main.c        **** 
 639:main.c        **** 
 640:main.c        **** /*******************************************************************************
 641:main.c        **** * Function Name: PWM_Set
 642:main.c        **** ********************************************************************************
 643:main.c        **** * Summary:
 644:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 645:main.c        **** *
 646:main.c        **** * Parameters: Duty cycle, in percent.
 647:main.c        **** * Return: None
 648:main.c        **** *******************************************************************************/
 649:main.c        **** void PWM_Set(float dutycycle) {
 650:main.c        ****     
 651:main.c        ****     float drive = dutycycle;
 652:main.c        **** 
 653:main.c        ****     /* Clip to the configured mix/max */
 654:main.c        ****     if (drive > PWM_Max_Fwd) {
 655:main.c        ****         drive = PWM_Max_Fwd;
 656:main.c        ****     } else if (drive < PWM_Max_Rev) {
 657:main.c        ****         drive = PWM_Max_Rev;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 13


 658:main.c        ****     }
 659:main.c        ****     
 660:main.c        ****     /* If somehow misconfigured to go even higher, clip to the max/min of the drive */
 661:main.c        ****     if (drive > 100) {
 662:main.c        ****         drive = 100;
 663:main.c        ****     } else if (drive < 0) {
 664:main.c        ****         drive = 0;
 665:main.c        ****     }
 666:main.c        ****     
 667:main.c        ****     PWM_1_WriteCompare(PWM_PCT_TO_COMPARE(drive));    
 668:main.c        **** }
 669:main.c        **** 
 670:main.c        **** 
 671:main.c        **** /*******************************************************************************
 672:main.c        **** * Function Name: PID_Initialize
 673:main.c        **** ********************************************************************************
 674:main.c        **** * Summary:
 675:main.c        **** *  Setup and reset the PID terms.
 676:main.c        **** *
 677:main.c        **** * Parameters: None
 678:main.c        **** * Return: None
 679:main.c        **** *******************************************************************************/
 680:main.c        **** void PID_Initialize(void) {
 681:main.c        ****     
 682:main.c        ****     uint32 position;
 683:main.c        ****     
 684:main.c        ****     /* Get up-to-date current position */
 685:main.c        ****     position = Counter_1_ReadCounter();     
 686:main.c        **** 
 687:main.c        ****     lastPosition = position;
 688:main.c        ****     ITerm = Output;
 689:main.c        ****     
 690:main.c        ****     if (ITerm > outMax) {
 691:main.c        ****         ITerm = outMax;
 692:main.c        ****     } else if (ITerm < outMin) {
 693:main.c        ****         ITerm = outMin;
 694:main.c        ****     }
 695:main.c        **** }    
 696:main.c        **** 
 697:main.c        **** 
 698:main.c        **** /*******************************************************************************
 699:main.c        **** * Function Name: PID_SetTunings
 700:main.c        **** ********************************************************************************
 701:main.c        **** * Summary:
 702:main.c        **** *  Setup the p, i, and d gain values and scale to the sample time.
 703:main.c        **** *
 704:main.c        **** * Parameters: Sample time in ms, and Kp, Ki, Kd gains.
 705:main.c        **** * Return: None
 706:main.c        **** *******************************************************************************/
 707:main.c        **** void PID_SetTunings(uint32 newSampleTime, float newKp, float newKi, float newKd) {
 708:main.c        ****     
 709:main.c        ****     if (newSampleTime > 0) {
 710:main.c        ****     
 711:main.c        ****         float sampleTimeInSec = ((float) newSampleTime) / 1000;
 712:main.c        ****     
 713:main.c        ****         kp = newKp;
 714:main.c        ****         ki = newKi * sampleTimeInSec;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 14


 715:main.c        ****         kd = newKd / sampleTimeInSec;        
 716:main.c        ****     }
 717:main.c        **** }
 718:main.c        **** 
 719:main.c        **** 
 720:main.c        **** /*******************************************************************************
 721:main.c        **** * Function Name: PID_Compute
 722:main.c        **** ********************************************************************************
 723:main.c        **** * Summary:
 724:main.c        **** *  Execute a pass through the PID process to create a duty cycle output.
 725:main.c        **** *
 726:main.c        **** * Parameters: Current time and current destination.
 727:main.c        **** * Return: PWM output, in percentage.
 728:main.c        **** *******************************************************************************/
 729:main.c        **** float PID_Compute(uint32 now, uint32 setpoint) {
 730:main.c        ****     
 731:main.c        ****     int32 error, dPosition;
 732:main.c        ****     uint32 timeChange;
 733:main.c        ****     uint32 position;
 734:main.c        ****         
 735:main.c        ****     if(!inAuto) 
 736:main.c        ****         return 0;
 737:main.c        ****     
 738:main.c        ****     /* Get most up-to-date current position */
 739:main.c        ****     position = Counter_1_ReadCounter();     
 740:main.c        **** 
 741:main.c        ****     /* How much time has elapsed since the last pass? */
 742:main.c        ****     timeChange = (now - lastTime);
 743:main.c        ****     
 744:main.c        ****     /* Only do the PID calc if at LEAST 5ms has elapsed */
 745:main.c        ****     if (timeChange >= refSampleTime) {
 746:main.c        **** 
 747:main.c        ****         /* Adjust the gains to the most recent sampling time.  Do it continuously to make sure the 
 748:main.c        ****            in case the cycle runs longer than the normal 5ms. */
 749:main.c        ****         PID_SetTunings(timeChange, refKp, refKi, refKd);
 750:main.c        ****         
 751:main.c        ****         /* Compute all the working error variables */
 752:main.c        ****         error = setpoint - position;
 753:main.c        ****         ITerm += (ki * error);
 754:main.c        ****         
 755:main.c        ****         /* Clip the I term at the output max (windup guard) */
 756:main.c        ****         if (ITerm > outMax) {
 757:main.c        ****             ITerm = outMax;
 758:main.c        ****         } else if (ITerm < outMin) {
 759:main.c        ****             ITerm = outMin;
 760:main.c        ****         }
 761:main.c        ****         
 762:main.c        ****         /* Calculate the error term */
 763:main.c        ****         dPosition = (position - lastPosition);
 764:main.c        **** 
 765:main.c        ****         /* Compute PID Output */
 766:main.c        ****         Output = (kp * error) + ITerm - (kd * dPosition);
 767:main.c        ****         
 768:main.c        ****         /* Clip the output */
 769:main.c        ****         if (Output> outMax) {
 770:main.c        ****             Output = outMax;
 771:main.c        ****         } else if (Output < outMin) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 15


 772:main.c        ****             Output = outMin;
 773:main.c        ****         }
 774:main.c        **** 
 775:main.c        ****         /* Remember some variables for next time */
 776:main.c        ****         lastPosition = position;
 777:main.c        ****         lastTime = now;        
 778:main.c        ****     }
 779:main.c        ****     
 780:main.c        ****     return Output;    
 781:main.c        **** }
 782:main.c        ****  
 783:main.c        **** 
 784:main.c        **** 
 785:main.c        ****  
 786:main.c        **** /*******************************************************************************
 787:main.c        **** * Function Name: PID_SetOutputLimits
 788:main.c        **** ********************************************************************************
 789:main.c        **** * Summary:
 790:main.c        **** *  Define the output limits of the PID process.
 791:main.c        **** *
 792:main.c        **** * Parameters: Min and Max output values.
 793:main.c        **** * Return: None
 794:main.c        **** *******************************************************************************/
 795:main.c        **** void PID_SetOutputLimits(float Min, float Max) {
 796:main.c        ****     
 797:main.c        ****     if(Min > Max) 
 798:main.c        ****         return;
 799:main.c        **** 
 800:main.c        ****     /* Update the global min/max */
 801:main.c        ****     outMin = Min;
 802:main.c        ****     outMax = Max;
 803:main.c        **** 
 804:main.c        ****     /* Clip the output to the new max */
 805:main.c        ****     if(Output > outMax) {
 806:main.c        ****         Output = outMax;
 807:main.c        ****     } else if (Output < outMin) {
 808:main.c        ****         Output = outMin;
 809:main.c        ****     }
 810:main.c        **** 
 811:main.c        ****     /* Clip the I term to the new max */
 812:main.c        ****     if (ITerm > outMax) {
 813:main.c        ****         ITerm = outMax;
 814:main.c        ****     } else if (ITerm < outMin) {
 815:main.c        ****         ITerm = outMin;
 816:main.c        ****     }
 817:main.c        **** }
 818:main.c        ****  
 819:main.c        **** /*******************************************************************************
 820:main.c        **** * Function Name: PID_SetMode
 821:main.c        **** ********************************************************************************
 822:main.c        **** * Summary:
 823:main.c        **** *  Sets the PID into automatic or manual mode.
 824:main.c        **** *
 825:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 826:main.c        **** * Return: None
 827:main.c        **** *******************************************************************************/
 828:main.c        **** void PID_SetMode(uint32 Mode) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 16


 829:main.c        ****     
 830:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 831:main.c        ****     
 832:main.c        ****     if (newAuto && !inAuto) {  
 833:main.c        ****         /*we just went from manual to auto*/
 834:main.c        ****         PID_Initialize();
 835:main.c        ****     }
 836:main.c        ****     
 837:main.c        ****     inAuto = newAuto;
 838:main.c        **** } 
 839:main.c        ****     
 840:main.c        **** /*******************************************************************************
 841:main.c        **** * Function Name: PID_SetDrive
 842:main.c        **** ********************************************************************************
 843:main.c        **** * Summary:
 844:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 845:main.c        **** *
 846:main.c        **** * Parameters: Percentage output to drive the PWM.
 847:main.c        **** * Return: None
 848:main.c        **** *******************************************************************************/
 849:main.c        **** void PID_SetDrive(float percent) {
 850:main.c        ****     
 851:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 852:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 853:main.c        ****     float dutycycle = (percent + 100) / 2;    
 854:main.c        ****     
 855:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 856:main.c        ****     PWM_Set(dutycycle);  
 857:main.c        **** }
 858:main.c        **** 
 859:main.c        **** 
 860:main.c        **** 
 861:main.c        **** 
 862:main.c        **** /*******************************************************************************
 863:main.c        **** * Function Name: PID_Task
 864:main.c        **** ********************************************************************************
 865:main.c        **** * Summary:
 866:main.c        **** *  RTOS task to perform the PID calculations.
 867:main.c        **** *
 868:main.c        **** * Parameters: None
 869:main.c        **** * Return: None
 870:main.c        **** *******************************************************************************/
 871:main.c        **** void PID_Task(void *arg) {
 872:main.c        ****     
 873:main.c        ****     /* Sleep this thread 5ms at a time */
 874:main.c        ****     uint32 sleeptime = 5;    
 875:main.c        ****     uint32 now;
 876:main.c        ****     float percent; 
 877:main.c        ****     int32 CurrentPosition, DeltaPosition;
 878:main.c        ****     uint32 CurrentIndexCount;
 879:main.c        ****     
 880:main.c        ****     /* Initial high water mark reading */
 881:main.c        ****     uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );
 882:main.c        ****     
 883:main.c        ****     /* Initial values */
 884:main.c        **** 
 885:main.c        ****     /* These are the 'reference' values passed down from the server, not to be used in-the-raw beca
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 17


 886:main.c        ****        values are time interval adjusted */
 887:main.c        ****     refKp = 0;
 888:main.c        ****     refKi = 0;
 889:main.c        ****     refKd = 0;
 890:main.c        ****     
 891:main.c        ****     /* Setup the PID subsystem */
 892:main.c        ****     PID_Initialize();
 893:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);
 894:main.c        ****     PID_SetOutputLimits(-100.0, 100.0);
 895:main.c        ****     PID_SetMode(PID_MANUAL);
 896:main.c        **** 
 897:main.c        ****     now = 0;
 898:main.c        ****     
 899:main.c        ****     /* Start off disabled */
 900:main.c        ****     PID_Setpoint = 0;  
 901:main.c        ****     PID_Was_Enabled = false;
 902:main.c        ****     PID_Enabled = false;
 903:main.c        ****     
 904:main.c        ****     while (1) {
 905:main.c        ****               
 906:main.c        ****         /* ------------------------------------------------------------------------------------ */
 907:main.c        ****         /* At the top of the PID loop, refresh the counter of the watchdog to indicate the RTOS 
 908:main.c        ****            thread is still alive.  Were the RTOS to crash or the motion thread to die, the CPU 
 909:main.c        ****            will be reset after 2 seconds. */
 910:main.c        ****         WDT_COUNT1_REFRESH();        
 911:main.c        ****         /* ------------------------------------------------------------------------------------ */
 912:main.c        **** 
 913:main.c        ****         
 914:main.c        ****         /* If the server hasn't talked to us in a while (no messages on the SPI), 
 915:main.c        ****            take preventative action and abandon any moves in progress.  When the uint32
 916:main.c        ****            overflows, "now" will be (temporarily) less than the last timestamped message,
 917:main.c        ****            so handle that too */
 918:main.c        ****         now = xTaskGetTickCount();
 919:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 920:main.c        ****              (now < LastMessageTimeTick) ) {
 921:main.c        ****             
 922:main.c        ****             /* Stop all motion */
 923:main.c        ****             PWM_Set(PWM_JOG_NEUTRAL);
 924:main.c        ****             PID_Enabled = false;
 925:main.c        ****             
 926:main.c        ****             /* Clear the values that would drive motion on the next message arrival.  Assume the ne
 927:main.c        ****                in which case we want to be neutral. */
 928:main.c        ****             Jog = 0;
 929:main.c        **** 
 930:main.c        ****         /* Only run the PID algorithm if we have been configured by the nodebox software */
 931:main.c        ****         } else if (ConfigState == csReady) {
 932:main.c        ****             
 933:main.c        ****             /* Enable the drive outputs for the home and index once configured, otherwise they
 934:main.c        ****                can screw up the boot pins on the BeagleBoneBlack */
 935:main.c        ****             HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 936:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 937:main.c        ****         
 938:main.c        ****             /* If the server is asking us to jog, do that instead of PID */
 939:main.c        ****             if (!PID_Enabled) {                   
 940:main.c        ****                 
 941:main.c        ****                 /* When we start homing, it looks like a big negative jog.  Setup to watch the inde
 942:main.c        ****                    so we can assert faults if they aren't changing. */                
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 18


 943:main.c        ****                 if ((Jog != Last_Jog) && (Jog != 0)) {
 944:main.c        ****                     
 945:main.c        ****                     /* Update the 'last' jog value, so we don't fall into this reset code over and 
 946:main.c        ****                     Last_Jog = Jog;
 947:main.c        ****                     
 948:main.c        ****                     /* Remember where we started */
 949:main.c        ****                     PID_Last_Position = Counter_1_ReadCounter();      
 950:main.c        ****                     
 951:main.c        ****                     /* Reset counting of index marks */
 952:main.c        ****                     Index_Counter_1_WriteCounter(0);
 953:main.c        ****                 }                
 954:main.c        ****                 
 955:main.c        ****                 /* Drive in the direction and speed the server told us */
 956:main.c        ****                 PWM_Set(PWM_JOG_NEUTRAL + Jog);
 957:main.c        **** 
 958:main.c        ****                 /* Watch for stuck signals while we are moving */
 959:main.c        ****                 if ( Jog != 0 ) {
 960:main.c        ****                 
 961:main.c        ****                     /* If we have moved a good distance away from the origin point, compare index c
 962:main.c        ****                        looking for discrepancy. */
 963:main.c        ****                     CurrentPosition = Counter_1_ReadCounter();
 964:main.c        ****                     DeltaPosition = labs( ((int32) CurrentPosition) - ((int32) PID_Last_Position) )
 965:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 966:main.c        ****                     
 967:main.c        ****                     /* Look for index failure: the index counter should have incremented by at leas
 968:main.c        ****                     if (CurrentIndexCount == 0)
 969:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 970:main.c        ****                             AssertFault(fsIndex);        
 971:main.c        ****                     
 972:main.c        ****                     /* Look for encoder failure: the encoders should register some amount of moveme
 973:main.c        ****                     if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 974:main.c        ****                         AssertFault(fsEncoder);
 975:main.c        ****                 }
 976:main.c        ****                 
 977:main.c        ****             }
 978:main.c        ****             
 979:main.c        ****             /* Handle mode switching */
 980:main.c        ****             if (!PID_Was_Enabled && PID_Enabled) {
 981:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 982:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 983:main.c        ****                 PID_SetMode(PID_MANUAL);                
 984:main.c        ****             } else {
 985:main.c        ****                 // No mode change happened   
 986:main.c        ****             }
 987:main.c        ****             
 988:main.c        ****             /* Save value for next cycle */
 989:main.c        ****             PID_Was_Enabled = PID_Enabled;
 990:main.c        ****             
 991:main.c        ****                 
 992:main.c        ****             /* Run the PID algorithm */
 993:main.c        ****             percent = PID_Compute(now, PID_Setpoint);
 994:main.c        ****             
 995:main.c        ****             /* Send the pwm back up to the BBB */
 996:main.c        ****             if (PID_Enabled) {
 997:main.c        ****                 
 998:main.c        ****                 /* Use the global PWM value to communicate back the percentage of drive to the serv
 999:main.c        ****                 PWM = percent;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 19


1000:main.c        ****                 
1001:main.c        ****                 /* Put the PID drive percentage out on the wire */
1002:main.c        ****                 PID_SetDrive(percent);
1003:main.c        ****                 
1004:main.c        ****             } else {
1005:main.c        ****                 /* If disabled, just return 0 */
1006:main.c        ****                 PWM = 0;
1007:main.c        ****             }
1008:main.c        ****             
1009:main.c        ****         }
1010:main.c        ****         
1011:main.c        ****         /* Run the loop every 5ms, which is 200Hz update rate */
1012:main.c        ****         Sleep(sleeptime);
1013:main.c        **** 
1014:main.c        ****         /* Get our task stack usage high water mark */    
1015:main.c        ****         uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );        
1016:main.c        ****     }
1017:main.c        ****    
1018:main.c        **** }
1019:main.c        **** 
1020:main.c        **** 
1021:main.c        **** 
1022:main.c        **** /*******************************************************************************
1023:main.c        **** * Function Name: main
1024:main.c        **** ********************************************************************************
1025:main.c        **** * Summary:
1026:main.c        **** *  Setup tasks, interrupts, and get the RTOS running.
1027:main.c        **** *
1028:main.c        **** * Parameters: None
1029:main.c        **** * Return: NEVER!
1030:main.c        **** *******************************************************************************/
1031:main.c        **** int main(void) {
1032:main.c        ****     
1033:main.c        ****     uint8 s;
1034:main.c        ****     setupFreeRTOS();
1035:main.c        ****     
1036:main.c        ****     //HOME_OUT_Write(0);
1037:main.c        ****     //INDEX_OUT_Write(0);
1038:main.c        ****     
1039:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
1040:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
1041:main.c        ****         
1042:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
1043:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
1044:main.c        **** 
1045:main.c        ****     /* Create LED task, which will control the intensity of the LEDs */
1046:main.c        ****     xTaskCreate(
1047:main.c        ****         PID_Task,       /* Task function */
1048:main.c        ****         "PID",          /* Task name (string) */
1049:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 24 bytes) */
1050:main.c        ****         0,              /* No param passed to task function */
1051:main.c        ****         2,              /* Medium priority */
1052:main.c        ****         0 );            /* Not using the task handle */    
1053:main.c        ****     
1054:main.c        ****     xTaskCreate(
1055:main.c        ****         Comm_Task,       /* Task function */
1056:main.c        ****         "Communications", /* Task name (string) */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 20


1057:main.c        ****         100,            /* Task stack, allocated from heap (measured 12/27 to be 78 bytes)  */
1058:main.c        ****         0,              /* No param passed to task function */
1059:main.c        ****         3,              /* High priority */
1060:main.c        ****         0 );            /* Not using the task handle */    
1061:main.c        **** 
1062:main.c        ****     xTaskCreate(
1063:main.c        ****         Current_Read_Task, /* Task function */
1064:main.c        ****         "Read Current", /* Task name (string) */
1065:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 40 bytes) */
1066:main.c        ****         0,              /* No param passed to task function */
1067:main.c        ****         1,              /* Low priority */
1068:main.c        ****         0 );            /* Not using the task handle */    
1069:main.c        ****     
1070:main.c        ****     /********************************************************************** 
1071:main.c        ****     * Message buffer mutex
1072:main.c        ****     **********************************************************************/
1073:main.c        ****     Lock = xSemaphoreCreateMutex();
1074:main.c        **** 
1075:main.c        ****     /* If we can't create the lock, flash the light and hold here */
1076:main.c        ****     if( Lock == NULL ) {
1077:main.c        ****         s = 1;
1078:main.c        ****         
1079:main.c        ****         while(1) {
1080:main.c        ****             s = !s;
1081:main.c        ****             LED_Write(s); 
1082:main.c        ****             CyDelay(1000u);                    
1083:main.c        ****         }
1084:main.c        ****     }
1085:main.c        ****     
1086:main.c        ****     
1087:main.c        ****     /********************************************************************** 
1088:main.c        ****     * Interrupts
1089:main.c        ****     **********************************************************************/
1090:main.c        ****     
1091:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
1092:main.c        ****     isr_home_StartEx(HomeIsrHandler);
1093:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
1094:main.c        ****     
1095:main.c        ****     /* Setup the SPI slave select interrupt ISR */
1096:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
1097:main.c        ****     
1098:main.c        ****     /* Changes initial priority for the interrupts */
1099:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
1100:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
1101:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
1102:main.c        **** 
1103:main.c        ****     /* Enable the global interrupt */
1104:main.c        ****     CyGlobalIntEnable;
1105:main.c        ****     
1106:main.c        ****     
1107:main.c        ****     
1108:main.c        ****     /********************************************************************** 
1109:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
1110:main.c        ****     **********************************************************************/
1111:main.c        **** 
1112:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
1113:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 21


1114:main.c        ****        when you hit a breakpoint. */
1115:main.c        **** 
1116:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
1117:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
1118:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
1119:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
1120:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
1121:main.c        **** 	
1122:main.c        **** 	/* Enable WDT counter 1 */
1123:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
1124:main.c        **** 	
1125:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
1126:main.c        **** 	CySysWdtLock();
1127:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
1128:main.c        **** 	CySysWdtUnlock();        
1129:main.c        **** #endif    
1130:main.c        **** 
1131:main.c        ****     
1132:main.c        ****     /*********************************************************************** 
1133:main.c        ****     * Start the various subsystems.
1134:main.c        ****     ***********************************************************************/
1135:main.c        ****     I2C_Start();
1136:main.c        ****     CyDelay(100u);
1137:main.c        ****     SPI_1_Start();
1138:main.c        ****     
1139:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
1140:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
1141:main.c        ****     PWM_1_Start();
1142:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
1143:main.c        ****     PWM_Set(PWM_IDLE);   
1144:main.c        ****     
1145:main.c        ****     /* Default the jog value to neutral (no movement) */
1146:main.c        ****     Jog = 0;
1147:main.c        ****     PWM_Max_Fwd = PWM_JOG_NEUTRAL + PWM_MAX_MAGNITUDE;
1148:main.c        ****     PWM_Max_Rev = PWM_JOG_NEUTRAL - PWM_MAX_MAGNITUDE;
1149:main.c        ****    
1150:main.c        ****     /* Start counting the quadrature encoding */
1151:main.c        ****     Counter_1_Start();    
1152:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
1153:main.c        ****     PID_Last_Position = ENCODER_MAX;
1154:main.c        ****     
1155:main.c        ****     /* Clear and start the index mark counter */
1156:main.c        ****     Index_Counter_1_Start();
1157:main.c        ****     Index_Counter_1_WriteCounter(0);
1158:main.c        ****      
1159:main.c        ****     /* Set some initial values */
1160:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
1161:main.c        ****     
1162:main.c        ****     /* Start off unconfigured */
1163:main.c        ****     ConfigState = csUnconfig;  
1164:main.c        ****     ConfigSequence = 0;
1165:main.c        ****     ChecksumErrors = 0;
1166:main.c        ****    
1167:main.c        ****     /***********************************************************************
1168:main.c        ****     * Start the RTOS task scheduler
1169:main.c        ****     ***********************************************************************/
1170:main.c        ****     vTaskStartScheduler();
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 22


1171:main.c        ****    
1172:main.c        ****     /***********************************************************************
1173:main.c        ****     *  We should never reach this
1174:main.c        ****     ***********************************************************************/
1175:main.c        ****     return 1;       
1176:main.c        **** }
1177:main.c        **** 
1178:main.c        **** /*******************************************************************************
1179:main.c        **** * Function Name: RSTIsrHandler
1180:main.c        **** ********************************************************************************
1181:main.c        **** * Summary:
1182:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1183:main.c        **** *  Clears a pending Interrupt.
1184:main.c        **** *  Clears a pin Interrupt.
1185:main.c        **** *
1186:main.c        **** * Parameters: None
1187:main.c        **** * Return: None
1188:main.c        **** *******************************************************************************/
1189:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1189 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1190:main.c        ****     
1191:main.c        ****     /* Clear pending Interrupt */
1192:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1192 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1193:main.c        ****     
1194:main.c        ****     /* Clear pin Interrupt */
1195:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1195 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1196:main.c        ****     
1197:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1198:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1198 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1199:main.c        ****     
1200:main.c        ****     /* Clear the index counter */
1201:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1201 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1202:main.c        **** }
  50              		.loc 1 1202 0
  51              		@ sp needed
  52 0016 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 23


  53              		.cfi_endproc
  54              	.LFE46:
  55              		.size	RSTIsrHandler, .-RSTIsrHandler
  56              		.section	.text.HomeIsrHandler,"ax",%progbits
  57              		.align	2
  58              		.global	HomeIsrHandler
  59              		.code	16
  60              		.thumb_func
  61              		.type	HomeIsrHandler, %function
  62              	HomeIsrHandler:
  63              	.LFB47:
1203:main.c        **** 
1204:main.c        **** /*******************************************************************************
1205:main.c        **** * Function Name: HomeIsrHandler
1206:main.c        **** ********************************************************************************
1207:main.c        **** * Summary:
1208:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1209:main.c        **** *  Clears a pending Interrupt.
1210:main.c        **** *  Clears a pin Interrupt.
1211:main.c        **** *
1212:main.c        **** * Parameters: None
1213:main.c        **** * Return: None
1214:main.c        **** *******************************************************************************/
1215:main.c        **** CY_ISR(HomeIsrHandler) {
  64              		.loc 1 1215 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
1216:main.c        ****     
1217:main.c        ****     /* Clear pending Interrupt */
1218:main.c        ****     isr_home_ClearPending(); 
  72              		.loc 1 1218 0
  73 0002 FFF7FEFF 		bl	isr_home_ClearPending
  74              	.LVL4:
1219:main.c        ****     
1220:main.c        ****     /* Clear pin Interrupt */
1221:main.c        ****     HOME_IN_ClearInterrupt();
  75              		.loc 1 1221 0
  76 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  77              	.LVL5:
1222:main.c        **** 
1223:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1224:main.c        ****     Counter_1_WriteCounter(0);
  78              		.loc 1 1224 0
  79 000a 0020     		movs	r0, #0
  80 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  81              	.LVL6:
1225:main.c        **** }
  82              		.loc 1 1225 0
  83              		@ sp needed
  84 0010 10BD     		pop	{r4, pc}
  85              		.cfi_endproc
  86              	.LFE47:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 24


  87              		.size	HomeIsrHandler, .-HomeIsrHandler
  88 0012 C046     		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
  89              		.align	2
  90              		.global	SPI_SS_IsrHandler
  91              		.code	16
  92              		.thumb_func
  93              		.type	SPI_SS_IsrHandler, %function
  94              	SPI_SS_IsrHandler:
  95              	.LFB48:
1226:main.c        **** 
1227:main.c        **** 
1228:main.c        **** /*******************************************************************************
1229:main.c        **** * Function Name: SPI_SS_IsrHandler
1230:main.c        **** ********************************************************************************
1231:main.c        **** * Summary:
1232:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1233:main.c        **** *  Clears a pin Interrupt.
1234:main.c        **** *
1235:main.c        **** * Parameters: None
1236:main.c        **** * Return: None
1237:main.c        **** *******************************************************************************/
1238:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
  96              		.loc 1 1238 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 10B5     		push	{r4, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
1239:main.c        ****     
1240:main.c        ****     uint32 i;
1241:main.c        ****     
1242:main.c        ****     /* Clear SPI slave select pin Interrupt */
1243:main.c        ****     spi_ss_ClearInterrupt();
 104              		.loc 1 1243 0
 105 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 106              	.LVL7:
1244:main.c        ****     
1245:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1246:main.c        ****     if (!spi_ss_Read()) 
 107              		.loc 1 1246 0
 108 0006 FFF7FEFF 		bl	spi_ss_Read
 109              	.LVL8:
 110 000a 0028     		cmp	r0, #0
 111 000c 1CD0     		beq	.L3
1247:main.c        ****         return;
1248:main.c        ****    
1249:main.c        ****     /* Update the last message tick timer */
1250:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
 112              		.loc 1 1250 0
 113 000e FFF7FEFF 		bl	xTaskGetTickCount
 114              	.LVL9:
 115 0012 0E4B     		ldr	r3, .L8
 116 0014 1860     		str	r0, [r3]
1251:main.c        **** 
1252:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 25


1253:main.c        ****        check the messaging state before resetting the buffers */
1254:main.c        ****     switch (txMessageState) {
 117              		.loc 1 1254 0
 118 0016 0E4B     		ldr	r3, .L8+4
 119 0018 1B78     		ldrb	r3, [r3]
 120 001a 012B     		cmp	r3, #1
 121 001c 14D1     		bne	.L3
1255:main.c        ****      
1256:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1257:main.c        ****         case txmsClear:
1258:main.c        ****             break;
1259:main.c        ****      
1260:main.c        ****         /* A message was readied for transmission */
1261:main.c        ****         case txmsLoaded:
1262:main.c        ****          
1263:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1264:main.c        ****             
1265:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1266:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 122              		.loc 1 1266 0
 123 001e 1E22     		movs	r2, #30
 124 0020 0021     		movs	r1, #0
 125 0022 0C48     		ldr	r0, .L8+8
 126 0024 FFF7FEFF 		bl	memset
 127              	.LVL10:
1267:main.c        **** 
1268:main.c        ****             /* Message from the master is completely clocked in by now */     
1269:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 128              		.loc 1 1269 0
 129 0028 0024     		movs	r4, #0
 130 002a 04E0     		b	.L6
 131              	.LVL11:
 132              	.L7:
1270:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 133              		.loc 1 1270 0 discriminator 3
 134 002c FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 135              	.LVL12:
 136 0030 094B     		ldr	r3, .L8+12
 137 0032 1855     		strb	r0, [r3, r4]
1269:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 138              		.loc 1 1269 0 discriminator 3
 139 0034 0134     		adds	r4, r4, #1
 140              	.LVL13:
 141              	.L6:
1269:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 142              		.loc 1 1269 0 is_stmt 0 discriminator 1
 143 0036 1D2C     		cmp	r4, #29
 144 0038 F8D9     		bls	.L7
1271:main.c        ****             }
1272:main.c        ****             
1273:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1274:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 145              		.loc 1 1274 0 is_stmt 1
 146 003a FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 147              	.LVL14:
1275:main.c        ****             
1276:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 26


1277:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 148              		.loc 1 1277 0
 149 003e FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 150              	.LVL15:
1278:main.c        ****             
1279:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1280:main.c        ****             txMessageState = txmsClear;        
 151              		.loc 1 1280 0
 152 0042 0022     		movs	r2, #0
 153 0044 024B     		ldr	r3, .L8+4
 154 0046 1A70     		strb	r2, [r3]
 155              	.LVL16:
 156              	.L3:
1281:main.c        ****             break;
1282:main.c        ****             
1283:main.c        ****     } 
1284:main.c        **** }
 157              		.loc 1 1284 0
 158              		@ sp needed
 159 0048 10BD     		pop	{r4, pc}
 160              	.L9:
 161 004a C046     		.align	2
 162              	.L8:
 163 004c 00000000 		.word	LastMessageTimeTick
 164 0050 00000000 		.word	txMessageState
 165 0054 00000000 		.word	txMessage
 166 0058 00000000 		.word	rxMessage
 167              		.cfi_endproc
 168              	.LFE48:
 169              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 170              		.section	.text.setupFreeRTOS,"ax",%progbits
 171              		.align	2
 172              		.global	setupFreeRTOS
 173              		.code	16
 174              		.thumb_func
 175              		.type	setupFreeRTOS, %function
 176              	setupFreeRTOS:
 177              	.LFB32:
 317:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 178              		.loc 1 317 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 321:main.c        ****     
 186              		.loc 1 321 0
 187 0002 0649     		ldr	r1, .L11
 188 0004 0B20     		movs	r0, #11
 189 0006 FFF7FEFF 		bl	CyIntSetSysVector
 190              	.LVL17:
 324:main.c        ****     
 191              		.loc 1 324 0
 192 000a 0549     		ldr	r1, .L11+4
 193 000c 0E20     		movs	r0, #14
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 27


 194 000e FFF7FEFF 		bl	CyIntSetSysVector
 195              	.LVL18:
 327:main.c        **** }
 196              		.loc 1 327 0
 197 0012 0449     		ldr	r1, .L11+8
 198 0014 0F20     		movs	r0, #15
 199 0016 FFF7FEFF 		bl	CyIntSetSysVector
 200              	.LVL19:
 328:main.c        **** 
 201              		.loc 1 328 0
 202              		@ sp needed
 203 001a 10BD     		pop	{r4, pc}
 204              	.L12:
 205              		.align	2
 206              	.L11:
 207 001c 00000000 		.word	vPortSVCHandler
 208 0020 00000000 		.word	xPortPendSVHandler
 209 0024 00000000 		.word	xPortSysTickHandler
 210              		.cfi_endproc
 211              	.LFE32:
 212              		.size	setupFreeRTOS, .-setupFreeRTOS
 213              		.section	.text.AssertFault,"ax",%progbits
 214              		.align	2
 215              		.global	AssertFault
 216              		.code	16
 217              		.thumb_func
 218              		.type	AssertFault, %function
 219              	AssertFault:
 220              	.LFB33:
 341:main.c        ****  
 221              		.loc 1 341 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL20:
 343:main.c        ****      
 227              		.loc 1 343 0
 228 0000 0028     		cmp	r0, #0
 229 0002 03D1     		bne	.L17
 347:main.c        ****             break;        
 230              		.loc 1 347 0
 231 0004 0022     		movs	r2, #0
 232 0006 044B     		ldr	r3, .L18
 233 0008 1A70     		strb	r2, [r3]
 348:main.c        ****         
 234              		.loc 1 348 0
 235 000a 03E0     		b	.L13
 236              	.L17:
 352:main.c        ****             break;        
 237              		.loc 1 352 0
 238 000c 024B     		ldr	r3, .L18
 239 000e 1A78     		ldrb	r2, [r3]
 240 0010 1043     		orrs	r0, r2
 241              	.LVL21:
 242 0012 1870     		strb	r0, [r3]
 243              	.L13:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 28


 355:main.c        **** 
 244              		.loc 1 355 0
 245              		@ sp needed
 246 0014 7047     		bx	lr
 247              	.L19:
 248 0016 C046     		.align	2
 249              	.L18:
 250 0018 00000000 		.word	FaultState
 251              		.cfi_endproc
 252              	.LFE33:
 253              		.size	AssertFault, .-AssertFault
 254              		.section	.text.Current_Read_Task,"ax",%progbits
 255              		.align	2
 256              		.global	Current_Read_Task
 257              		.code	16
 258              		.thumb_func
 259              		.type	Current_Read_Task, %function
 260              	Current_Read_Task:
 261              	.LFB35:
 394:main.c        ****     
 262              		.loc 1 394 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL22:
 267 0000 10B5     		push	{r4, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              		.cfi_def_cfa_offset 16
 273              	.LVL23:
 406:main.c        ****     
 274              		.loc 1 406 0
 275 0004 0020     		movs	r0, #0
 276              	.LVL24:
 277 0006 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 278              	.LVL25:
 279 000a 364B     		ldr	r3, .L29
 280 000c 1860     		str	r0, [r3]
 403:main.c        ****     
 281              		.loc 1 403 0
 282 000e 0024     		movs	r4, #0
 283              	.LVL26:
 284              	.L27:
 411:main.c        ****         PROBE_Write(foo);
 285              		.loc 1 411 0
 286 0010 2000     		movs	r0, r4
 287 0012 FFF7FEFF 		bl	LED_Write
 288              	.LVL27:
 412:main.c        **** 
 289              		.loc 1 412 0
 290 0016 2000     		movs	r0, r4
 291 0018 FFF7FEFF 		bl	PROBE_Write
 292              	.LVL28:
 414:main.c        ****         
 293              		.loc 1 414 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 29


 294 001c 002C     		cmp	r4, #0
 295 001e 01D0     		beq	.L28
 296 0020 0024     		movs	r4, #0
 297              	.LVL29:
 298 0022 00E0     		b	.L21
 299              	.LVL30:
 300              	.L28:
 301 0024 0124     		movs	r4, #1
 302              	.LVL31:
 303              	.L21:
 420:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 304              		.loc 1 420 0
 305 0026 0A22     		movs	r2, #10
 306 0028 0021     		movs	r1, #0
 307 002a 4020     		movs	r0, #64
 308 002c FFF7FEFF 		bl	I2C_I2CMasterSendStart
 309              	.LVL32:
 310 0030 0190     		str	r0, [sp, #4]
 421:main.c        ****             
 311              		.loc 1 421 0
 312 0032 019B     		ldr	r3, [sp, #4]
 313 0034 002B     		cmp	r3, #0
 314 0036 0FD1     		bne	.L22
 423:main.c        ****             
 315              		.loc 1 423 0
 316 0038 0A21     		movs	r1, #10
 317 003a 0520     		movs	r0, #5
 318 003c FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 319              	.LVL33:
 426:main.c        ****             
 320              		.loc 1 426 0
 321 0040 0A21     		movs	r1, #10
 322 0042 2020     		movs	r0, #32
 323 0044 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 324              	.LVL34:
 429:main.c        ****             I2C_I2CMasterSendStop(10);
 325              		.loc 1 429 0
 326 0048 0A21     		movs	r1, #10
 327 004a 0020     		movs	r0, #0
 328 004c FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 329              	.LVL35:
 430:main.c        ****         } else {
 330              		.loc 1 430 0
 331 0050 0A20     		movs	r0, #10
 332 0052 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 333              	.LVL36:
 334 0056 05E0     		b	.L23
 335              	.LVL37:
 336              	.L22:
 432:main.c        ****             AssertFault(fsCurrentRead);
 337              		.loc 1 432 0
 338 0058 0022     		movs	r2, #0
 339 005a 234B     		ldr	r3, .L29+4
 340 005c 1A80     		strh	r2, [r3]
 433:main.c        ****         }
 341              		.loc 1 433 0
 342 005e 0820     		movs	r0, #8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 30


 343 0060 FFF7FEFF 		bl	AssertFault
 344              	.LVL38:
 345              	.L23:
 436:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 346              		.loc 1 436 0
 347 0064 0A22     		movs	r2, #10
 348 0066 0021     		movs	r1, #0
 349 0068 4020     		movs	r0, #64
 350 006a FFF7FEFF 		bl	I2C_I2CMasterSendStart
 351              	.LVL39:
 352 006e 0190     		str	r0, [sp, #4]
 437:main.c        ****             
 353              		.loc 1 437 0
 354 0070 019B     		ldr	r3, [sp, #4]
 355 0072 002B     		cmp	r3, #0
 356 0074 20D1     		bne	.L24
 439:main.c        ****             I2C_I2CMasterSendStop(10);
 357              		.loc 1 439 0
 358 0076 0A21     		movs	r1, #10
 359 0078 0420     		movs	r0, #4
 360 007a FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 361              	.LVL40:
 440:main.c        ****             
 362              		.loc 1 440 0
 363 007e 0A20     		movs	r0, #10
 364 0080 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 365              	.LVL41:
 443:main.c        ****             
 366              		.loc 1 443 0
 367 0084 0123     		movs	r3, #1
 368 0086 0522     		movs	r2, #5
 369 0088 1849     		ldr	r1, .L29+8
 370 008a 4020     		movs	r0, #64
 371 008c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 372              	.LVL42:
 373 0090 0190     		str	r0, [sp, #4]
 446:main.c        ****                 CurrentTemp = (uint16)(CurrentI2Cinbuf[0] << 8) + CurrentI2Cinbuf[1];
 374              		.loc 1 446 0
 375 0092 019B     		ldr	r3, [sp, #4]
 376 0094 002B     		cmp	r3, #0
 377 0096 08D1     		bne	.L25
 447:main.c        ****             } else {
 378              		.loc 1 447 0
 379 0098 144A     		ldr	r2, .L29+8
 380 009a 1378     		ldrb	r3, [r2]
 381 009c 1B02     		lsls	r3, r3, #8
 382 009e 5278     		ldrb	r2, [r2, #1]
 383 00a0 9B18     		adds	r3, r3, r2
 384 00a2 9BB2     		uxth	r3, r3
 385 00a4 6A46     		mov	r2, sp
 386 00a6 5380     		strh	r3, [r2, #2]
 387 00a8 0CE0     		b	.L26
 388              	.L25:
 449:main.c        ****                 AssertFault(fsCurrentRead);
 389              		.loc 1 449 0
 390 00aa 0022     		movs	r2, #0
 391 00ac 6B46     		mov	r3, sp
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 31


 392 00ae 5A80     		strh	r2, [r3, #2]
 450:main.c        ****             }
 393              		.loc 1 450 0
 394 00b0 0820     		movs	r0, #8
 395 00b2 FFF7FEFF 		bl	AssertFault
 396              	.LVL43:
 397 00b6 05E0     		b	.L26
 398              	.L24:
 453:main.c        ****             AssertFault(fsCurrentRead);
 399              		.loc 1 453 0
 400 00b8 0022     		movs	r2, #0
 401 00ba 6B46     		mov	r3, sp
 402 00bc 5A80     		strh	r2, [r3, #2]
 454:main.c        ****         }
 403              		.loc 1 454 0
 404 00be 0820     		movs	r0, #8
 405 00c0 FFF7FEFF 		bl	AssertFault
 406              	.LVL44:
 407              	.L26:
 460:main.c        **** 
 408              		.loc 1 460 0
 409 00c4 6B46     		mov	r3, sp
 410 00c6 0233     		adds	r3, r3, #2
 411 00c8 1B88     		ldrh	r3, [r3]
 412 00ca 9BB2     		uxth	r3, r3
 413 00cc 064A     		ldr	r2, .L29+4
 414 00ce 1380     		strh	r3, [r2]
 463:main.c        ****         
 415              		.loc 1 463 0
 416 00d0 FA20     		movs	r0, #250
 417 00d2 4000     		lsls	r0, r0, #1
 418 00d4 FFF7FEFF 		bl	vTaskDelay
 419              	.LVL45:
 466:main.c        ****     }
 420              		.loc 1 466 0
 421 00d8 0020     		movs	r0, #0
 422 00da FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 423              	.LVL46:
 424 00de 014B     		ldr	r3, .L29
 425 00e0 1860     		str	r0, [r3]
 467:main.c        ****    
 426              		.loc 1 467 0
 427 00e2 95E7     		b	.L27
 428              	.L30:
 429              		.align	2
 430              	.L29:
 431 00e4 00000000 		.word	uxHighWaterMark_Current
 432 00e8 00000000 		.word	Current
 433 00ec 00000000 		.word	CurrentI2Cinbuf
 434              		.cfi_endproc
 435              	.LFE35:
 436              		.size	Current_Read_Task, .-Current_Read_Task
 437              		.section	.text.ClearFault,"ax",%progbits
 438              		.align	2
 439              		.global	ClearFault
 440              		.code	16
 441              		.thumb_func
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 32


 442              		.type	ClearFault, %function
 443              	ClearFault:
 444              	.LFB34:
 368:main.c        ****  
 445              		.loc 1 368 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL47:
 370:main.c        ****      
 451              		.loc 1 370 0
 452 0000 0028     		cmp	r0, #0
 453 0002 03D1     		bne	.L35
 374:main.c        ****             break;        
 454              		.loc 1 374 0
 455 0004 0022     		movs	r2, #0
 456 0006 044B     		ldr	r3, .L36
 457 0008 1A70     		strb	r2, [r3]
 375:main.c        ****         
 458              		.loc 1 375 0
 459 000a 03E0     		b	.L31
 460              	.L35:
 379:main.c        ****             break;        
 461              		.loc 1 379 0
 462 000c 024A     		ldr	r2, .L36
 463 000e 1378     		ldrb	r3, [r2]
 464 0010 8343     		bics	r3, r0
 465 0012 1370     		strb	r3, [r2]
 466              	.L31:
 382:main.c        **** 
 467              		.loc 1 382 0
 468              		@ sp needed
 469 0014 7047     		bx	lr
 470              	.L37:
 471 0016 C046     		.align	2
 472              	.L36:
 473 0018 00000000 		.word	FaultState
 474              		.cfi_endproc
 475              	.LFE34:
 476              		.size	ClearFault, .-ClearFault
 477              		.section	.text.Comm_Task,"ax",%progbits
 478              		.align	2
 479              		.global	Comm_Task
 480              		.code	16
 481              		.thumb_func
 482              		.type	Comm_Task, %function
 483              	Comm_Task:
 484              	.LFB36:
 480:main.c        ****  
 485              		.loc 1 480 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              	.LVL48:
 490 0000 10B5     		push	{r4, lr}
 491              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 33


 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 488:main.c        ****     
 494              		.loc 1 488 0
 495 0002 0020     		movs	r0, #0
 496              	.LVL49:
 497 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 498              	.LVL50:
 499 0008 7F4B     		ldr	r3, .L54
 500 000a 1860     		str	r0, [r3]
 501              	.L52:
 493:main.c        ****         
 502              		.loc 1 493 0
 503 000c 7F4B     		ldr	r3, .L54+4
 504 000e 1B68     		ldr	r3, [r3]
 505 0010 DB07     		lsls	r3, r3, #31
 506 0012 00D5     		bpl	.LCB408
 507 0014 EFE0     		b	.L39	@long jump
 508              	.LCB408:
 496:main.c        ****              
 509              		.loc 1 496 0
 510 0016 7E4B     		ldr	r3, .L54+8
 511 0018 1B78     		ldrb	r3, [r3]
 512 001a 002B     		cmp	r3, #0
 513 001c 00D0     		beq	.LCB413
 514 001e EAE0     		b	.L39	@long jump
 515              	.LCB413:
 506:main.c        ****                         
 516              		.loc 1 506 0
 517 0020 7C4B     		ldr	r3, .L54+12
 518 0022 1868     		ldr	r0, [r3]
 519 0024 0421     		movs	r1, #4
 520 0026 FFF7FEFF 		bl	xQueueSemaphoreTake
 521              	.LVL51:
 522 002a 0128     		cmp	r0, #1
 523 002c 00D0     		beq	.LCB420
 524 002e E2E0     		b	.L39	@long jump
 525              	.LCB420:
 509:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 526              		.loc 1 509 0
 527 0030 794B     		ldr	r3, .L54+16
 528 0032 5878     		ldrb	r0, [r3, #1]
 529              	.LVL52:
 510:main.c        ****                         
 530              		.loc 1 510 0
 531 0034 9C78     		ldrb	r4, [r3, #2]
 532              	.LVL53:
 513:main.c        ****                             size = sizeof(txMessage.buf);                            
 533              		.loc 1 513 0
 534 0036 1E28     		cmp	r0, #30
 535 0038 00D9     		bls	.L41
 514:main.c        ****                     
 536              		.loc 1 514 0
 537 003a 1E20     		movs	r0, #30
 538              	.LVL54:
 539              	.L41:
 517:main.c        ****                             checksum += rxMessage.buf[i]; 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 34


 540              		.loc 1 517 0
 541 003c 0022     		movs	r2, #0
 542 003e 0023     		movs	r3, #0
 543 0040 05E0     		b	.L42
 544              	.LVL55:
 545              	.L43:
 518:main.c        **** 
 546              		.loc 1 518 0 discriminator 3
 547 0042 7549     		ldr	r1, .L54+16
 548 0044 C95C     		ldrb	r1, [r1, r3]
 549 0046 5218     		adds	r2, r2, r1
 550              	.LVL56:
 551 0048 D2B2     		uxtb	r2, r2
 552              	.LVL57:
 517:main.c        ****                             checksum += rxMessage.buf[i]; 
 553              		.loc 1 517 0 discriminator 3
 554 004a 0133     		adds	r3, r3, #1
 555              	.LVL58:
 556 004c DBB2     		uxtb	r3, r3
 557              	.LVL59:
 558              	.L42:
 517:main.c        ****                             checksum += rxMessage.buf[i]; 
 559              		.loc 1 517 0 is_stmt 0 discriminator 1
 560 004e 9842     		cmp	r0, r3
 561 0050 F7D8     		bhi	.L43
 521:main.c        ****                             
 562              		.loc 1 521 0 is_stmt 1
 563 0052 002A     		cmp	r2, #0
 564 0054 09D0     		beq	.L44
 523:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 565              		.loc 1 523 0
 566 0056 714B     		ldr	r3, .L54+20
 567              	.LVL60:
 568 0058 9C70     		strb	r4, [r3, #2]
 524:main.c        ****                             ChecksumErrors++;
 569              		.loc 1 524 0
 570 005a 1222     		movs	r2, #18
 571              	.LVL61:
 572 005c 5A70     		strb	r2, [r3, #1]
 525:main.c        ****                             
 573              		.loc 1 525 0
 574 005e 704A     		ldr	r2, .L54+24
 575 0060 1388     		ldrh	r3, [r2]
 576 0062 0133     		adds	r3, r3, #1
 577 0064 9BB2     		uxth	r3, r3
 578 0066 1380     		strh	r3, [r2]
 579 0068 75E0     		b	.L45
 580              	.LVL62:
 581              	.L44:
 531:main.c        ****                             
 582              		.loc 1 531 0
 583 006a 631E     		subs	r3, r4, #1
 584              	.LVL63:
 585 006c DBB2     		uxtb	r3, r3
 586 006e 022B     		cmp	r3, #2
 587 0070 71D8     		bhi	.L45
 533:main.c        ****                                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 35


 588              		.loc 1 533 0
 589 0072 012C     		cmp	r4, #1
 590 0074 02D0     		beq	.L46
 591 0076 022C     		cmp	r4, #2
 592 0078 3ED0     		beq	.L47
 593 007a 6CE0     		b	.L45
 594              	.L46:
 540:main.c        ****                                         refKi = rxMessage.config.Ki;
 595              		.loc 1 540 0
 596 007c 664B     		ldr	r3, .L54+16
 597 007e 1A79     		ldrb	r2, [r3, #4]
 598              	.LVL64:
 599 0080 5979     		ldrb	r1, [r3, #5]
 600 0082 0902     		lsls	r1, r1, #8
 601 0084 1143     		orrs	r1, r2
 602 0086 9A79     		ldrb	r2, [r3, #6]
 603 0088 1204     		lsls	r2, r2, #16
 604 008a 0A43     		orrs	r2, r1
 605 008c 1100     		movs	r1, r2
 606 008e DA79     		ldrb	r2, [r3, #7]
 607 0090 1206     		lsls	r2, r2, #24
 608 0092 0A43     		orrs	r2, r1
 609 0094 6349     		ldr	r1, .L54+28
 610 0096 0A60     		str	r2, [r1]
 541:main.c        ****                                         refKd = rxMessage.config.Kd;                               
 611              		.loc 1 541 0
 612 0098 1A7A     		ldrb	r2, [r3, #8]
 613 009a 597A     		ldrb	r1, [r3, #9]
 614 009c 0902     		lsls	r1, r1, #8
 615 009e 1143     		orrs	r1, r2
 616 00a0 9A7A     		ldrb	r2, [r3, #10]
 617 00a2 1204     		lsls	r2, r2, #16
 618 00a4 0A43     		orrs	r2, r1
 619 00a6 1100     		movs	r1, r2
 620 00a8 DA7A     		ldrb	r2, [r3, #11]
 621 00aa 1206     		lsls	r2, r2, #24
 622 00ac 0A43     		orrs	r2, r1
 623 00ae 5E49     		ldr	r1, .L54+32
 624 00b0 0A60     		str	r2, [r1]
 542:main.c        ****                                            
 625              		.loc 1 542 0
 626 00b2 1A7B     		ldrb	r2, [r3, #12]
 627 00b4 597B     		ldrb	r1, [r3, #13]
 628 00b6 0902     		lsls	r1, r1, #8
 629 00b8 1143     		orrs	r1, r2
 630 00ba 9A7B     		ldrb	r2, [r3, #14]
 631 00bc 1204     		lsls	r2, r2, #16
 632 00be 0A43     		orrs	r2, r1
 633 00c0 1100     		movs	r1, r2
 634 00c2 DA7B     		ldrb	r2, [r3, #15]
 635 00c4 1206     		lsls	r2, r2, #24
 636 00c6 0A43     		orrs	r2, r1
 637 00c8 5849     		ldr	r1, .L54+36
 638 00ca 0A60     		str	r2, [r1]
 545:main.c        ****                                         PWM_Max_Fwd = PWM_JOG_NEUTRAL + rxMessage.config.limit;
 639              		.loc 1 545 0
 640 00cc 0021     		movs	r1, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 36


 641 00ce 584A     		ldr	r2, .L54+40
 642 00d0 1170     		strb	r1, [r2]
 546:main.c        ****                                         PWM_Max_Rev = PWM_JOG_NEUTRAL - rxMessage.config.limit;    
 643              		.loc 1 546 0
 644 00d2 197C     		ldrb	r1, [r3, #16]
 645 00d4 0800     		movs	r0, r1
 646              	.LVL65:
 647 00d6 3230     		adds	r0, r0, #50
 648 00d8 564A     		ldr	r2, .L54+44
 649 00da 1070     		strb	r0, [r2]
 547:main.c        ****                                     
 650              		.loc 1 547 0
 651 00dc 3222     		movs	r2, #50
 652 00de 521A     		subs	r2, r2, r1
 653 00e0 5549     		ldr	r1, .L54+48
 654 00e2 0A70     		strb	r2, [r1]
 550:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 655              		.loc 1 550 0
 656 00e4 0221     		movs	r1, #2
 657 00e6 554A     		ldr	r2, .L54+52
 658 00e8 1170     		strb	r1, [r2]
 551:main.c        ****                                     
 659              		.loc 1 551 0
 660 00ea DA78     		ldrb	r2, [r3, #3]
 661 00ec 544B     		ldr	r3, .L54+56
 662 00ee 1A70     		strb	r2, [r3]
 554:main.c        ****                                         break;
 663              		.loc 1 554 0
 664 00f0 0020     		movs	r0, #0
 665 00f2 FFF7FEFF 		bl	ClearFault
 666              	.LVL66:
 555:main.c        **** 
 667              		.loc 1 555 0
 668 00f6 2EE0     		b	.L45
 669              	.LVL67:
 670              	.L47:
 559:main.c        ****                                         
 671              		.loc 1 559 0
 672 00f8 4748     		ldr	r0, .L54+16
 673              	.LVL68:
 674 00fa C378     		ldrb	r3, [r0, #3]
 675 00fc 5A1E     		subs	r2, r3, #1
 676 00fe 9341     		sbcs	r3, r3, r2
 677              	.LVL69:
 678 0100 504A     		ldr	r2, .L54+60
 679 0102 1370     		strb	r3, [r2]
 562:main.c        ****                                             
 680              		.loc 1 562 0
 681 0104 0379     		ldrb	r3, [r0, #4]
 682 0106 4279     		ldrb	r2, [r0, #5]
 683 0108 1202     		lsls	r2, r2, #8
 684 010a 1A43     		orrs	r2, r3
 685 010c 8379     		ldrb	r3, [r0, #6]
 686 010e 1B04     		lsls	r3, r3, #16
 687 0110 1343     		orrs	r3, r2
 688 0112 1A00     		movs	r2, r3
 689 0114 C379     		ldrb	r3, [r0, #7]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 37


 690 0116 1B06     		lsls	r3, r3, #24
 691 0118 1343     		orrs	r3, r2
 692 011a 4B4A     		ldr	r2, .L54+64
 693 011c 1268     		ldr	r2, [r2]
 694 011e 9342     		cmp	r3, r2
 695 0120 14D0     		beq	.L48
 565:main.c        ****                                             
 696              		.loc 1 565 0
 697 0122 FFF7FEFF 		bl	Counter_1_ReadCounter
 698              	.LVL70:
 699 0126 494B     		ldr	r3, .L54+68
 700 0128 1860     		str	r0, [r3]
 568:main.c        ****                                             
 701              		.loc 1 568 0
 702 012a 3B48     		ldr	r0, .L54+16
 703 012c 0379     		ldrb	r3, [r0, #4]
 704 012e 4279     		ldrb	r2, [r0, #5]
 705 0130 1202     		lsls	r2, r2, #8
 706 0132 1A43     		orrs	r2, r3
 707 0134 8379     		ldrb	r3, [r0, #6]
 708 0136 1B04     		lsls	r3, r3, #16
 709 0138 1343     		orrs	r3, r2
 710 013a 1A00     		movs	r2, r3
 711 013c C379     		ldrb	r3, [r0, #7]
 712 013e 1B06     		lsls	r3, r3, #24
 713 0140 1343     		orrs	r3, r2
 714 0142 414A     		ldr	r2, .L54+64
 715 0144 1360     		str	r3, [r2]
 571:main.c        ****                                         }                                        
 716              		.loc 1 571 0
 717 0146 0020     		movs	r0, #0
 718 0148 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 719              	.LVL71:
 720              	.L48:
 575:main.c        ****                                         break;
 721              		.loc 1 575 0
 722 014c 324B     		ldr	r3, .L54+16
 723 014e 0822     		movs	r2, #8
 724 0150 9A56     		ldrsb	r2, [r3, r2]
 725 0152 374B     		ldr	r3, .L54+40
 726 0154 1A70     		strb	r2, [r3]
 727              	.L45:
 586:main.c        ****                         txMessage.msg.opcode   = opStatus;
 728              		.loc 1 586 0
 729 0156 314C     		ldr	r4, .L54+20
 730              	.LVL72:
 731 0158 0023     		movs	r3, #0
 732 015a 2370     		strb	r3, [r4]
 587:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 733              		.loc 1 587 0
 734 015c 0233     		adds	r3, r3, #2
 735 015e A370     		strb	r3, [r4, #2]
 588:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 736              		.loc 1 588 0
 737 0160 1033     		adds	r3, r3, #16
 738 0162 6370     		strb	r3, [r4, #1]
 589:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 38


 739              		.loc 1 589 0
 740 0164 354B     		ldr	r3, .L54+52
 741 0166 1B78     		ldrb	r3, [r3]
 742 0168 E370     		strb	r3, [r4, #3]
 590:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 743              		.loc 1 590 0
 744 016a 394B     		ldr	r3, .L54+72
 745 016c 1B78     		ldrb	r3, [r3]
 746 016e 2371     		strb	r3, [r4, #4]
 591:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 747              		.loc 1 591 0
 748 0170 2B4B     		ldr	r3, .L54+24
 749 0172 1B88     		ldrh	r3, [r3]
 750 0174 9BB2     		uxth	r3, r3
 751 0176 A371     		strb	r3, [r4, #6]
 752 0178 1B0A     		lsrs	r3, r3, #8
 753 017a E371     		strb	r3, [r4, #7]
 592:main.c        ****                         txMessage.msg.position = Counter_1_ReadCounter();
 754              		.loc 1 592 0
 755 017c 304B     		ldr	r3, .L54+56
 756 017e 1B78     		ldrb	r3, [r3]
 757 0180 6371     		strb	r3, [r4, #5]
 593:main.c        ****                         txMessage.msg.pwm      = PWM;
 758              		.loc 1 593 0
 759 0182 FFF7FEFF 		bl	Counter_1_ReadCounter
 760              	.LVL73:
 761 0186 A072     		strb	r0, [r4, #10]
 762 0188 020A     		lsrs	r2, r0, #8
 763 018a E272     		strb	r2, [r4, #11]
 764 018c 020C     		lsrs	r2, r0, #16
 765 018e 2273     		strb	r2, [r4, #12]
 766 0190 000E     		lsrs	r0, r0, #24
 767 0192 6073     		strb	r0, [r4, #13]
 594:main.c        ****                         txMessage.msg.current  = Current;                            
 768              		.loc 1 594 0
 769 0194 2F4B     		ldr	r3, .L54+76
 770 0196 1B68     		ldr	r3, [r3]
 771 0198 A373     		strb	r3, [r4, #14]
 772 019a 190A     		lsrs	r1, r3, #8
 773 019c E173     		strb	r1, [r4, #15]
 774 019e 190C     		lsrs	r1, r3, #16
 775 01a0 2174     		strb	r1, [r4, #16]
 776 01a2 1B0E     		lsrs	r3, r3, #24
 777 01a4 6374     		strb	r3, [r4, #17]
 595:main.c        ****                         
 778              		.loc 1 595 0
 779 01a6 2C4B     		ldr	r3, .L54+80
 780 01a8 1B88     		ldrh	r3, [r3]
 781 01aa 9BB2     		uxth	r3, r3
 782 01ac 2372     		strb	r3, [r4, #8]
 783 01ae 1B0A     		lsrs	r3, r3, #8
 784 01b0 6372     		strb	r3, [r4, #9]
 785              	.LVL74:
 598:main.c        ****                             checksum += txMessage.buf[i]; 
 786              		.loc 1 598 0
 787 01b2 0022     		movs	r2, #0
 788 01b4 0023     		movs	r3, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 39


 789 01b6 05E0     		b	.L49
 790              	.LVL75:
 791              	.L50:
 599:main.c        ****                             
 792              		.loc 1 599 0 discriminator 3
 793 01b8 1849     		ldr	r1, .L54+20
 794 01ba C95C     		ldrb	r1, [r1, r3]
 795 01bc 5218     		adds	r2, r2, r1
 796              	.LVL76:
 797 01be D2B2     		uxtb	r2, r2
 798              	.LVL77:
 598:main.c        ****                             checksum += txMessage.buf[i]; 
 799              		.loc 1 598 0 discriminator 3
 800 01c0 0133     		adds	r3, r3, #1
 801              	.LVL78:
 802 01c2 DBB2     		uxtb	r3, r3
 803              	.LVL79:
 804              	.L49:
 598:main.c        ****                             checksum += txMessage.buf[i]; 
 805              		.loc 1 598 0 is_stmt 0 discriminator 1
 806 01c4 112B     		cmp	r3, #17
 807 01c6 F7D9     		bls	.L50
 602:main.c        ****                             
 808              		.loc 1 602 0 is_stmt 1
 809 01c8 1448     		ldr	r0, .L54+20
 810 01ca 5242     		rsbs	r2, r2, #0
 811              	.LVL80:
 812 01cc 0270     		strb	r2, [r0]
 606:main.c        **** 
 813              		.loc 1 606 0
 814 01ce 1E21     		movs	r1, #30
 815 01d0 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 816              	.LVL81:
 609:main.c        ****                         
 817              		.loc 1 609 0
 818 01d4 0122     		movs	r2, #1
 819 01d6 0E4B     		ldr	r3, .L54+8
 820 01d8 1A70     		strb	r2, [r3]
 612:main.c        ****                             ClearFault(fsNONE);
 821              		.loc 1 612 0
 822 01da 0F4B     		ldr	r3, .L54+16
 823 01dc 5B7A     		ldrb	r3, [r3, #9]
 824 01de 002B     		cmp	r3, #0
 825 01e0 02D0     		beq	.L51
 613:main.c        ****                     
 826              		.loc 1 613 0
 827 01e2 0020     		movs	r0, #0
 828 01e4 FFF7FEFF 		bl	ClearFault
 829              	.LVL82:
 830              	.L51:
 616:main.c        ****                     }            
 831              		.loc 1 616 0
 832 01e8 0A4B     		ldr	r3, .L54+12
 833 01ea 1868     		ldr	r0, [r3]
 834 01ec 0023     		movs	r3, #0
 835 01ee 0022     		movs	r2, #0
 836 01f0 0021     		movs	r1, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 40


 837 01f2 FFF7FEFF 		bl	xQueueGenericSend
 838              	.LVL83:
 839              	.L39:
 630:main.c        ****         
 840              		.loc 1 630 0
 841 01f6 0120     		movs	r0, #1
 842 01f8 FFF7FEFF 		bl	vTaskDelay
 843              	.LVL84:
 633:main.c        ****     }
 844              		.loc 1 633 0
 845 01fc 0020     		movs	r0, #0
 846 01fe FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 847              	.LVL85:
 848 0202 014B     		ldr	r3, .L54
 849 0204 1860     		str	r0, [r3]
 634:main.c        **** }
 850              		.loc 1 634 0
 851 0206 01E7     		b	.L52
 852              	.L55:
 853              		.align	2
 854              	.L54:
 855 0208 00000000 		.word	uxHighWaterMark_Comm
 856 020c 24000740 		.word	1074200612
 857 0210 00000000 		.word	txMessageState
 858 0214 00000000 		.word	Lock
 859 0218 00000000 		.word	rxMessage
 860 021c 00000000 		.word	txMessage
 861 0220 00000000 		.word	ChecksumErrors
 862 0224 00000000 		.word	refKp
 863 0228 00000000 		.word	refKi
 864 022c 00000000 		.word	refKd
 865 0230 00000000 		.word	Jog
 866 0234 00000000 		.word	PWM_Max_Fwd
 867 0238 00000000 		.word	PWM_Max_Rev
 868 023c 00000000 		.word	ConfigState
 869 0240 00000000 		.word	ConfigSequence
 870 0244 00000000 		.word	PID_Enabled
 871 0248 00000000 		.word	PID_Setpoint
 872 024c 00000000 		.word	PID_Last_Position
 873 0250 00000000 		.word	FaultState
 874 0254 00000000 		.word	PWM
 875 0258 00000000 		.word	Current
 876              		.cfi_endproc
 877              	.LFE36:
 878              		.size	Comm_Task, .-Comm_Task
 879              		.global	__aeabi_i2f
 880              		.global	__aeabi_fcmpgt
 881              		.global	__aeabi_fcmplt
 882              		.global	__aeabi_fmul
 883              		.global	__aeabi_f2uiz
 884              		.section	.text.PWM_Set,"ax",%progbits
 885              		.align	2
 886              		.global	PWM_Set
 887              		.code	16
 888              		.thumb_func
 889              		.type	PWM_Set, %function
 890              	PWM_Set:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 41


 891              	.LFB37:
 649:main.c        ****     
 892              		.loc 1 649 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL86:
 897 0000 70B5     		push	{r4, r5, r6, lr}
 898              		.cfi_def_cfa_offset 16
 899              		.cfi_offset 4, -16
 900              		.cfi_offset 5, -12
 901              		.cfi_offset 6, -8
 902              		.cfi_offset 14, -4
 903 0002 051C     		adds	r5, r0, #0
 904              	.LVL87:
 654:main.c        ****         drive = PWM_Max_Fwd;
 905              		.loc 1 654 0
 906 0004 194B     		ldr	r3, .L61
 907 0006 0020     		movs	r0, #0
 908              	.LVL88:
 909 0008 1856     		ldrsb	r0, [r3, r0]
 910 000a FFF7FEFF 		bl	__aeabi_i2f
 911              	.LVL89:
 912 000e 041C     		adds	r4, r0, #0
 913 0010 011C     		adds	r1, r0, #0
 914 0012 281C     		adds	r0, r5, #0
 915 0014 FFF7FEFF 		bl	__aeabi_fcmpgt
 916              	.LVL90:
 917 0018 0028     		cmp	r0, #0
 918 001a 0CD1     		bne	.L57
 656:main.c        ****         drive = PWM_Max_Rev;
 919              		.loc 1 656 0
 920 001c 144B     		ldr	r3, .L61+4
 921 001e 0020     		movs	r0, #0
 922 0020 1856     		ldrsb	r0, [r3, r0]
 923 0022 FFF7FEFF 		bl	__aeabi_i2f
 924              	.LVL91:
 925 0026 041C     		adds	r4, r0, #0
 926 0028 011C     		adds	r1, r0, #0
 927 002a 281C     		adds	r0, r5, #0
 928 002c FFF7FEFF 		bl	__aeabi_fcmplt
 929              	.LVL92:
 930 0030 0028     		cmp	r0, #0
 931 0032 00D1     		bne	.L57
 651:main.c        **** 
 932              		.loc 1 651 0
 933 0034 2C1C     		adds	r4, r5, #0
 934              	.L57:
 935              	.LVL93:
 661:main.c        ****         drive = 100;
 936              		.loc 1 661 0
 937 0036 0F49     		ldr	r1, .L61+8
 938 0038 201C     		adds	r0, r4, #0
 939 003a FFF7FEFF 		bl	__aeabi_fcmpgt
 940              	.LVL94:
 941 003e 0028     		cmp	r0, #0
 942 0040 06D1     		bne	.L59
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 42


 663:main.c        ****         drive = 0;
 943              		.loc 1 663 0
 944 0042 0021     		movs	r1, #0
 945 0044 201C     		adds	r0, r4, #0
 946 0046 FFF7FEFF 		bl	__aeabi_fcmplt
 947              	.LVL95:
 948 004a 0028     		cmp	r0, #0
 949 004c 03D0     		beq	.L58
 950 004e 01E0     		b	.L60
 951              	.L59:
 662:main.c        ****     } else if (drive < 0) {
 952              		.loc 1 662 0
 953 0050 084C     		ldr	r4, .L61+8
 954              	.LVL96:
 955 0052 00E0     		b	.L58
 956              	.LVL97:
 957              	.L60:
 664:main.c        ****     }
 958              		.loc 1 664 0
 959 0054 0024     		movs	r4, #0
 960              	.LVL98:
 961              	.L58:
 667:main.c        **** }
 962              		.loc 1 667 0
 963 0056 8321     		movs	r1, #131
 964 0058 C905     		lsls	r1, r1, #23
 965 005a 201C     		adds	r0, r4, #0
 966 005c FFF7FEFF 		bl	__aeabi_fmul
 967              	.LVL99:
 968 0060 FFF7FEFF 		bl	__aeabi_f2uiz
 969              	.LVL100:
 970 0064 FFF7FEFF 		bl	PWM_1_WriteCompare
 971              	.LVL101:
 668:main.c        **** 
 972              		.loc 1 668 0
 973              		@ sp needed
 974              	.LVL102:
 975              	.LVL103:
 976 0068 70BD     		pop	{r4, r5, r6, pc}
 977              	.L62:
 978 006a C046     		.align	2
 979              	.L61:
 980 006c 00000000 		.word	PWM_Max_Fwd
 981 0070 00000000 		.word	PWM_Max_Rev
 982 0074 0000C842 		.word	1120403456
 983              		.cfi_endproc
 984              	.LFE37:
 985              		.size	PWM_Set, .-PWM_Set
 986              		.global	__aeabi_ui2f
 987              		.section	.text.PID_Initialize,"ax",%progbits
 988              		.align	2
 989              		.global	PID_Initialize
 990              		.code	16
 991              		.thumb_func
 992              		.type	PID_Initialize, %function
 993              	PID_Initialize:
 994              	.LFB38:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 43


 680:main.c        ****     
 995              		.loc 1 680 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999 0000 70B5     		push	{r4, r5, r6, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 4, -16
 1002              		.cfi_offset 5, -12
 1003              		.cfi_offset 6, -8
 1004              		.cfi_offset 14, -4
 685:main.c        **** 
 1005              		.loc 1 685 0
 1006 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 1007              	.LVL104:
 687:main.c        ****     ITerm = Output;
 1008              		.loc 1 687 0
 1009 0006 FFF7FEFF 		bl	__aeabi_ui2f
 1010              	.LVL105:
 1011 000a 0E4B     		ldr	r3, .L71
 1012 000c 1860     		str	r0, [r3]
 688:main.c        ****     
 1013              		.loc 1 688 0
 1014 000e 0E4B     		ldr	r3, .L71+4
 1015 0010 1C68     		ldr	r4, [r3]
 1016 0012 0E4B     		ldr	r3, .L71+8
 1017 0014 1C60     		str	r4, [r3]
 690:main.c        ****         ITerm = outMax;
 1018              		.loc 1 690 0
 1019 0016 0E4B     		ldr	r3, .L71+12
 1020 0018 1D68     		ldr	r5, [r3]
 1021 001a 291C     		adds	r1, r5, #0
 1022 001c 201C     		adds	r0, r4, #0
 1023 001e FFF7FEFF 		bl	__aeabi_fcmpgt
 1024              	.LVL106:
 1025 0022 0028     		cmp	r0, #0
 1026 0024 02D0     		beq	.L70
 691:main.c        ****     } else if (ITerm < outMin) {
 1027              		.loc 1 691 0
 1028 0026 094B     		ldr	r3, .L71+8
 1029 0028 1D60     		str	r5, [r3]
 1030 002a 09E0     		b	.L63
 1031              	.L70:
 692:main.c        ****         ITerm = outMin;
 1032              		.loc 1 692 0
 1033 002c 094B     		ldr	r3, .L71+16
 1034 002e 1D68     		ldr	r5, [r3]
 1035 0030 291C     		adds	r1, r5, #0
 1036 0032 201C     		adds	r0, r4, #0
 1037 0034 FFF7FEFF 		bl	__aeabi_fcmplt
 1038              	.LVL107:
 1039 0038 0028     		cmp	r0, #0
 1040 003a 01D0     		beq	.L63
 693:main.c        ****     }
 1041              		.loc 1 693 0
 1042 003c 034B     		ldr	r3, .L71+8
 1043 003e 1D60     		str	r5, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 44


 1044              	.L63:
 695:main.c        **** 
 1045              		.loc 1 695 0
 1046              		@ sp needed
 1047 0040 70BD     		pop	{r4, r5, r6, pc}
 1048              	.L72:
 1049 0042 C046     		.align	2
 1050              	.L71:
 1051 0044 00000000 		.word	lastPosition
 1052 0048 00000000 		.word	Output
 1053 004c 00000000 		.word	ITerm
 1054 0050 00000000 		.word	outMax
 1055 0054 00000000 		.word	outMin
 1056              		.cfi_endproc
 1057              	.LFE38:
 1058              		.size	PID_Initialize, .-PID_Initialize
 1059              		.global	__aeabi_fdiv
 1060              		.section	.text.PID_SetTunings,"ax",%progbits
 1061              		.align	2
 1062              		.global	PID_SetTunings
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	PID_SetTunings, %function
 1066              	PID_SetTunings:
 1067              	.LFB39:
 707:main.c        ****     
 1068              		.loc 1 707 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              	.LVL108:
 1073 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1074              		.cfi_def_cfa_offset 24
 1075              		.cfi_offset 3, -24
 1076              		.cfi_offset 4, -20
 1077              		.cfi_offset 5, -16
 1078              		.cfi_offset 6, -12
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 0E1C     		adds	r6, r1, #0
 1082 0004 151C     		adds	r5, r2, #0
 1083 0006 1C1C     		adds	r4, r3, #0
 709:main.c        ****     
 1084              		.loc 1 709 0
 1085 0008 0028     		cmp	r0, #0
 1086 000a 12D0     		beq	.L73
 1087              	.LBB2:
 711:main.c        ****     
 1088              		.loc 1 711 0
 1089 000c FFF7FEFF 		bl	__aeabi_ui2f
 1090              	.LVL109:
 1091 0010 0849     		ldr	r1, .L75
 1092 0012 FFF7FEFF 		bl	__aeabi_fdiv
 1093              	.LVL110:
 1094 0016 071C     		adds	r7, r0, #0
 1095              	.LVL111:
 713:main.c        ****         ki = newKi * sampleTimeInSec;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 45


 1096              		.loc 1 713 0
 1097 0018 074B     		ldr	r3, .L75+4
 1098 001a 1E60     		str	r6, [r3]
 714:main.c        ****         kd = newKd / sampleTimeInSec;        
 1099              		.loc 1 714 0
 1100 001c 291C     		adds	r1, r5, #0
 1101 001e FFF7FEFF 		bl	__aeabi_fmul
 1102              	.LVL112:
 1103 0022 064B     		ldr	r3, .L75+8
 1104 0024 1860     		str	r0, [r3]
 715:main.c        ****     }
 1105              		.loc 1 715 0
 1106 0026 391C     		adds	r1, r7, #0
 1107 0028 201C     		adds	r0, r4, #0
 1108 002a FFF7FEFF 		bl	__aeabi_fdiv
 1109              	.LVL113:
 1110 002e 044B     		ldr	r3, .L75+12
 1111 0030 1860     		str	r0, [r3]
 1112              	.LVL114:
 1113              	.L73:
 1114              	.LBE2:
 717:main.c        **** 
 1115              		.loc 1 717 0
 1116              		@ sp needed
 1117              	.LVL115:
 1118              	.LVL116:
 1119              	.LVL117:
 1120 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1121              	.L76:
 1122              		.align	2
 1123              	.L75:
 1124 0034 00007A44 		.word	1148846080
 1125 0038 00000000 		.word	kp
 1126 003c 00000000 		.word	ki
 1127 0040 00000000 		.word	kd
 1128              		.cfi_endproc
 1129              	.LFE39:
 1130              		.size	PID_SetTunings, .-PID_SetTunings
 1131              		.global	__aeabi_fadd
 1132              		.global	__aeabi_fsub
 1133              		.global	__aeabi_f2iz
 1134              		.section	.text.PID_Compute,"ax",%progbits
 1135              		.align	2
 1136              		.global	PID_Compute
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	PID_Compute, %function
 1140              	PID_Compute:
 1141              	.LFB40:
 729:main.c        ****     
 1142              		.loc 1 729 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 8
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              	.LVL118:
 1147 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1148              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 46


 1149              		.cfi_offset 4, -20
 1150              		.cfi_offset 5, -16
 1151              		.cfi_offset 6, -12
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154 0002 4F46     		mov	r7, r9
 1155 0004 80B4     		push	{r7}
 1156              		.cfi_def_cfa_offset 24
 1157              		.cfi_offset 9, -24
 1158 0006 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 32
 1160 0008 0400     		movs	r4, r0
 1161 000a 0D00     		movs	r5, r1
 735:main.c        ****         return 0;
 1162              		.loc 1 735 0
 1163 000c 3D4B     		ldr	r3, .L95
 1164 000e 1B78     		ldrb	r3, [r3]
 1165 0010 002B     		cmp	r3, #0
 1166 0012 72D0     		beq	.L88
 739:main.c        **** 
 1167              		.loc 1 739 0
 1168 0014 FFF7FEFF 		bl	Counter_1_ReadCounter
 1169              	.LVL119:
 1170 0018 0600     		movs	r6, r0
 1171              	.LVL120:
 742:main.c        ****     
 1172              		.loc 1 742 0
 1173 001a 3B4B     		ldr	r3, .L95+4
 1174 001c 1868     		ldr	r0, [r3]
 1175              	.LVL121:
 1176 001e 201A     		subs	r0, r4, r0
 1177              	.LVL122:
 745:main.c        **** 
 1178              		.loc 1 745 0
 1179 0020 3A4B     		ldr	r3, .L95+8
 1180 0022 1B68     		ldr	r3, [r3]
 1181 0024 9842     		cmp	r0, r3
 1182 0026 65D3     		bcc	.L79
 749:main.c        ****         
 1183              		.loc 1 749 0
 1184 0028 394B     		ldr	r3, .L95+12
 1185 002a 1B68     		ldr	r3, [r3]
 1186 002c 394A     		ldr	r2, .L95+16
 1187 002e 1268     		ldr	r2, [r2]
 1188 0030 3949     		ldr	r1, .L95+20
 1189 0032 0968     		ldr	r1, [r1]
 1190 0034 FFF7FEFF 		bl	PID_SetTunings
 1191              	.LVL123:
 752:main.c        ****         ITerm += (ki * error);
 1192              		.loc 1 752 0
 1193 0038 A81B     		subs	r0, r5, r6
 1194              	.LVL124:
 753:main.c        ****         
 1195              		.loc 1 753 0
 1196 003a FFF7FEFF 		bl	__aeabi_i2f
 1197              	.LVL125:
 1198 003e 0190     		str	r0, [sp, #4]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 47


 1199 0040 364B     		ldr	r3, .L95+24
 1200 0042 1968     		ldr	r1, [r3]
 1201 0044 FFF7FEFF 		bl	__aeabi_fmul
 1202              	.LVL126:
 1203 0048 354F     		ldr	r7, .L95+28
 1204 004a 3968     		ldr	r1, [r7]
 1205 004c FFF7FEFF 		bl	__aeabi_fadd
 1206              	.LVL127:
 1207 0050 051C     		adds	r5, r0, #0
 1208              	.LVL128:
 1209 0052 3860     		str	r0, [r7]
 756:main.c        ****             ITerm = outMax;
 1210              		.loc 1 756 0
 1211 0054 334B     		ldr	r3, .L95+32
 1212 0056 1F68     		ldr	r7, [r3]
 1213 0058 391C     		adds	r1, r7, #0
 1214 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 1215              	.LVL129:
 1216 005e 0028     		cmp	r0, #0
 1217 0060 02D0     		beq	.L93
 757:main.c        ****         } else if (ITerm < outMin) {
 1218              		.loc 1 757 0
 1219 0062 2F4B     		ldr	r3, .L95+28
 1220 0064 1F60     		str	r7, [r3]
 1221 0066 0BE0     		b	.L82
 1222              	.L93:
 758:main.c        ****             ITerm = outMin;
 1223              		.loc 1 758 0
 1224 0068 2F4B     		ldr	r3, .L95+36
 1225 006a 1B68     		ldr	r3, [r3]
 1226 006c 9946     		mov	r9, r3
 1227 006e 191C     		adds	r1, r3, #0
 1228 0070 281C     		adds	r0, r5, #0
 1229 0072 FFF7FEFF 		bl	__aeabi_fcmplt
 1230              	.LVL130:
 1231 0076 0028     		cmp	r0, #0
 1232 0078 02D0     		beq	.L82
 759:main.c        ****         }
 1233              		.loc 1 759 0
 1234 007a 294B     		ldr	r3, .L95+28
 1235 007c 4A46     		mov	r2, r9
 1236 007e 1A60     		str	r2, [r3]
 1237              	.L82:
 763:main.c        **** 
 1238              		.loc 1 763 0
 1239 0080 3000     		movs	r0, r6
 1240 0082 FFF7FEFF 		bl	__aeabi_ui2f
 1241              	.LVL131:
 1242 0086 051C     		adds	r5, r0, #0
 1243 0088 284B     		ldr	r3, .L95+40
 1244 008a 1968     		ldr	r1, [r3]
 1245 008c FFF7FEFF 		bl	__aeabi_fsub
 1246              	.LVL132:
 1247 0090 FFF7FEFF 		bl	__aeabi_f2iz
 1248              	.LVL133:
 1249 0094 0600     		movs	r6, r0
 1250              	.LVL134:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 48


 766:main.c        ****         
 1251              		.loc 1 766 0
 1252 0096 264B     		ldr	r3, .L95+44
 1253 0098 1968     		ldr	r1, [r3]
 1254 009a 0198     		ldr	r0, [sp, #4]
 1255              	.LVL135:
 1256 009c FFF7FEFF 		bl	__aeabi_fmul
 1257              	.LVL136:
 1258 00a0 1F4B     		ldr	r3, .L95+28
 1259 00a2 1968     		ldr	r1, [r3]
 1260 00a4 FFF7FEFF 		bl	__aeabi_fadd
 1261              	.LVL137:
 1262 00a8 0190     		str	r0, [sp, #4]
 1263 00aa 3000     		movs	r0, r6
 1264 00ac FFF7FEFF 		bl	__aeabi_i2f
 1265              	.LVL138:
 1266 00b0 204B     		ldr	r3, .L95+48
 1267 00b2 1968     		ldr	r1, [r3]
 1268 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1269              	.LVL139:
 1270 00b8 011C     		adds	r1, r0, #0
 1271 00ba 0198     		ldr	r0, [sp, #4]
 1272 00bc FFF7FEFF 		bl	__aeabi_fsub
 1273              	.LVL140:
 1274 00c0 061C     		adds	r6, r0, #0
 1275              	.LVL141:
 1276 00c2 1D4B     		ldr	r3, .L95+52
 1277 00c4 1860     		str	r0, [r3]
 769:main.c        ****             Output = outMax;
 1278              		.loc 1 769 0
 1279 00c6 011C     		adds	r1, r0, #0
 1280 00c8 381C     		adds	r0, r7, #0
 1281 00ca FFF7FEFF 		bl	__aeabi_fcmplt
 1282              	.LVL142:
 1283 00ce 0028     		cmp	r0, #0
 1284 00d0 02D0     		beq	.L94
 770:main.c        ****         } else if (Output < outMin) {
 1285              		.loc 1 770 0
 1286 00d2 194B     		ldr	r3, .L95+52
 1287 00d4 1F60     		str	r7, [r3]
 1288 00d6 09E0     		b	.L86
 1289              	.L94:
 771:main.c        ****             Output = outMin;
 1290              		.loc 1 771 0
 1291 00d8 134B     		ldr	r3, .L95+36
 1292 00da 1F68     		ldr	r7, [r3]
 1293 00dc 391C     		adds	r1, r7, #0
 1294 00de 301C     		adds	r0, r6, #0
 1295 00e0 FFF7FEFF 		bl	__aeabi_fcmplt
 1296              	.LVL143:
 1297 00e4 0028     		cmp	r0, #0
 1298 00e6 01D0     		beq	.L86
 772:main.c        ****         }
 1299              		.loc 1 772 0
 1300 00e8 134B     		ldr	r3, .L95+52
 1301 00ea 1F60     		str	r7, [r3]
 1302              	.L86:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 49


 776:main.c        ****         lastTime = now;        
 1303              		.loc 1 776 0
 1304 00ec 0F4B     		ldr	r3, .L95+40
 1305 00ee 1D60     		str	r5, [r3]
 777:main.c        ****     }
 1306              		.loc 1 777 0
 1307 00f0 054B     		ldr	r3, .L95+4
 1308 00f2 1C60     		str	r4, [r3]
 1309              	.L79:
 780:main.c        **** }
 1310              		.loc 1 780 0
 1311 00f4 104B     		ldr	r3, .L95+52
 1312 00f6 1868     		ldr	r0, [r3]
 1313 00f8 00E0     		b	.L78
 1314              	.LVL144:
 1315              	.L88:
 736:main.c        ****     
 1316              		.loc 1 736 0
 1317 00fa 0020     		movs	r0, #0
 1318              	.LVL145:
 1319              	.L78:
 781:main.c        ****  
 1320              		.loc 1 781 0
 1321 00fc 02B0     		add	sp, sp, #8
 1322              		@ sp needed
 1323              	.LVL146:
 1324 00fe 04BC     		pop	{r2}
 1325 0100 9146     		mov	r9, r2
 1326 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 1327              	.L96:
 1328              		.align	2
 1329              	.L95:
 1330 0104 00000000 		.word	.LANCHOR0
 1331 0108 00000000 		.word	lastTime
 1332 010c 00000000 		.word	.LANCHOR1
 1333 0110 00000000 		.word	refKd
 1334 0114 00000000 		.word	refKi
 1335 0118 00000000 		.word	refKp
 1336 011c 00000000 		.word	ki
 1337 0120 00000000 		.word	ITerm
 1338 0124 00000000 		.word	outMax
 1339 0128 00000000 		.word	outMin
 1340 012c 00000000 		.word	lastPosition
 1341 0130 00000000 		.word	kp
 1342 0134 00000000 		.word	kd
 1343 0138 00000000 		.word	Output
 1344              		.cfi_endproc
 1345              	.LFE40:
 1346              		.size	PID_Compute, .-PID_Compute
 1347              		.section	.text.PID_SetOutputLimits,"ax",%progbits
 1348              		.align	2
 1349              		.global	PID_SetOutputLimits
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	PID_SetOutputLimits, %function
 1353              	PID_SetOutputLimits:
 1354              	.LFB41:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 50


 795:main.c        ****     
 1355              		.loc 1 795 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              	.LVL147:
 1360 0000 70B5     		push	{r4, r5, r6, lr}
 1361              		.cfi_def_cfa_offset 16
 1362              		.cfi_offset 4, -16
 1363              		.cfi_offset 5, -12
 1364              		.cfi_offset 6, -8
 1365              		.cfi_offset 14, -4
 1366 0002 051C     		adds	r5, r0, #0
 1367 0004 0C1C     		adds	r4, r1, #0
 797:main.c        ****         return;
 1368              		.loc 1 797 0
 1369 0006 FFF7FEFF 		bl	__aeabi_fcmpgt
 1370              	.LVL148:
 1371 000a 0028     		cmp	r0, #0
 1372 000c 29D1     		bne	.L97
 801:main.c        ****     outMax = Max;
 1373              		.loc 1 801 0
 1374 000e 154B     		ldr	r3, .L112
 1375 0010 1D60     		str	r5, [r3]
 802:main.c        **** 
 1376              		.loc 1 802 0
 1377 0012 154B     		ldr	r3, .L112+4
 1378 0014 1C60     		str	r4, [r3]
 805:main.c        ****         Output = outMax;
 1379              		.loc 1 805 0
 1380 0016 154B     		ldr	r3, .L112+8
 1381 0018 1E68     		ldr	r6, [r3]
 1382 001a 311C     		adds	r1, r6, #0
 1383 001c 201C     		adds	r0, r4, #0
 1384 001e FFF7FEFF 		bl	__aeabi_fcmplt
 1385              	.LVL149:
 1386 0022 0028     		cmp	r0, #0
 1387 0024 02D0     		beq	.L110
 806:main.c        ****     } else if (Output < outMin) {
 1388              		.loc 1 806 0
 1389 0026 114B     		ldr	r3, .L112+8
 1390 0028 1C60     		str	r4, [r3]
 1391 002a 07E0     		b	.L101
 1392              	.L110:
 807:main.c        ****         Output = outMin;
 1393              		.loc 1 807 0
 1394 002c 311C     		adds	r1, r6, #0
 1395 002e 281C     		adds	r0, r5, #0
 1396 0030 FFF7FEFF 		bl	__aeabi_fcmpgt
 1397              	.LVL150:
 1398 0034 0028     		cmp	r0, #0
 1399 0036 01D0     		beq	.L101
 808:main.c        ****     }
 1400              		.loc 1 808 0
 1401 0038 0C4B     		ldr	r3, .L112+8
 1402 003a 1D60     		str	r5, [r3]
 1403              	.L101:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 51


 812:main.c        ****         ITerm = outMax;
 1404              		.loc 1 812 0
 1405 003c 0C4B     		ldr	r3, .L112+12
 1406 003e 1E68     		ldr	r6, [r3]
 1407 0040 311C     		adds	r1, r6, #0
 1408 0042 201C     		adds	r0, r4, #0
 1409 0044 FFF7FEFF 		bl	__aeabi_fcmplt
 1410              	.LVL151:
 1411 0048 0028     		cmp	r0, #0
 1412 004a 02D0     		beq	.L111
 813:main.c        ****     } else if (ITerm < outMin) {
 1413              		.loc 1 813 0
 1414 004c 084B     		ldr	r3, .L112+12
 1415 004e 1C60     		str	r4, [r3]
 1416 0050 07E0     		b	.L97
 1417              	.L111:
 814:main.c        ****         ITerm = outMin;
 1418              		.loc 1 814 0
 1419 0052 311C     		adds	r1, r6, #0
 1420 0054 281C     		adds	r0, r5, #0
 1421 0056 FFF7FEFF 		bl	__aeabi_fcmpgt
 1422              	.LVL152:
 1423 005a 0028     		cmp	r0, #0
 1424 005c 01D0     		beq	.L97
 815:main.c        ****     }
 1425              		.loc 1 815 0
 1426 005e 044B     		ldr	r3, .L112+12
 1427 0060 1D60     		str	r5, [r3]
 1428              	.L97:
 817:main.c        ****  
 1429              		.loc 1 817 0
 1430              		@ sp needed
 1431              	.LVL153:
 1432              	.LVL154:
 1433 0062 70BD     		pop	{r4, r5, r6, pc}
 1434              	.L113:
 1435              		.align	2
 1436              	.L112:
 1437 0064 00000000 		.word	outMin
 1438 0068 00000000 		.word	outMax
 1439 006c 00000000 		.word	Output
 1440 0070 00000000 		.word	ITerm
 1441              		.cfi_endproc
 1442              	.LFE41:
 1443              		.size	PID_SetOutputLimits, .-PID_SetOutputLimits
 1444              		.section	.text.PID_SetMode,"ax",%progbits
 1445              		.align	2
 1446              		.global	PID_SetMode
 1447              		.code	16
 1448              		.thumb_func
 1449              		.type	PID_SetMode, %function
 1450              	PID_SetMode:
 1451              	.LFB42:
 828:main.c        ****     
 1452              		.loc 1 828 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 52


 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL155:
 1457 0000 10B5     		push	{r4, lr}
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 4, -8
 1460              		.cfi_offset 14, -4
 830:main.c        ****     
 1461              		.loc 1 830 0
 1462 0002 441E     		subs	r4, r0, #1
 1463 0004 6342     		rsbs	r3, r4, #0
 1464 0006 5C41     		adcs	r4, r4, r3
 1465 0008 E4B2     		uxtb	r4, r4
 1466              	.LVL156:
 832:main.c        ****         /*we just went from manual to auto*/
 1467              		.loc 1 832 0
 1468 000a 0128     		cmp	r0, #1
 1469 000c 05D1     		bne	.L115
 832:main.c        ****         /*we just went from manual to auto*/
 1470              		.loc 1 832 0 is_stmt 0 discriminator 1
 1471 000e 044B     		ldr	r3, .L116
 1472 0010 1B78     		ldrb	r3, [r3]
 1473 0012 002B     		cmp	r3, #0
 1474 0014 01D1     		bne	.L115
 834:main.c        ****     }
 1475              		.loc 1 834 0 is_stmt 1
 1476 0016 FFF7FEFF 		bl	PID_Initialize
 1477              	.LVL157:
 1478              	.L115:
 837:main.c        **** } 
 1479              		.loc 1 837 0
 1480 001a 014B     		ldr	r3, .L116
 1481 001c 1C70     		strb	r4, [r3]
 838:main.c        ****     
 1482              		.loc 1 838 0
 1483              		@ sp needed
 1484              	.LVL158:
 1485 001e 10BD     		pop	{r4, pc}
 1486              	.L117:
 1487              		.align	2
 1488              	.L116:
 1489 0020 00000000 		.word	.LANCHOR0
 1490              		.cfi_endproc
 1491              	.LFE42:
 1492              		.size	PID_SetMode, .-PID_SetMode
 1493              		.section	.text.PID_SetDrive,"ax",%progbits
 1494              		.align	2
 1495              		.global	PID_SetDrive
 1496              		.code	16
 1497              		.thumb_func
 1498              		.type	PID_SetDrive, %function
 1499              	PID_SetDrive:
 1500              	.LFB43:
 849:main.c        ****     
 1501              		.loc 1 849 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 53


 1505              	.LVL159:
 1506 0000 10B5     		push	{r4, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
 853:main.c        ****     
 1510              		.loc 1 853 0
 1511 0002 0549     		ldr	r1, .L119
 1512 0004 FFF7FEFF 		bl	__aeabi_fadd
 1513              	.LVL160:
 1514 0008 FC21     		movs	r1, #252
 1515 000a 8905     		lsls	r1, r1, #22
 1516 000c FFF7FEFF 		bl	__aeabi_fmul
 1517              	.LVL161:
 856:main.c        **** }
 1518              		.loc 1 856 0
 1519 0010 FFF7FEFF 		bl	PWM_Set
 1520              	.LVL162:
 857:main.c        **** 
 1521              		.loc 1 857 0
 1522              		@ sp needed
 1523 0014 10BD     		pop	{r4, pc}
 1524              	.L120:
 1525 0016 C046     		.align	2
 1526              	.L119:
 1527 0018 0000C842 		.word	1120403456
 1528              		.cfi_endproc
 1529              	.LFE43:
 1530              		.size	PID_SetDrive, .-PID_SetDrive
 1531              		.section	.text.PID_Task,"ax",%progbits
 1532              		.align	2
 1533              		.global	PID_Task
 1534              		.code	16
 1535              		.thumb_func
 1536              		.type	PID_Task, %function
 1537              	PID_Task:
 1538              	.LFB44:
 871:main.c        ****     
 1539              		.loc 1 871 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              	.LVL163:
 1544 0000 70B5     		push	{r4, r5, r6, lr}
 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 4, -16
 1547              		.cfi_offset 5, -12
 1548              		.cfi_offset 6, -8
 1549              		.cfi_offset 14, -4
 1550              	.LVL164:
 881:main.c        ****     
 1551              		.loc 1 881 0
 1552 0002 0020     		movs	r0, #0
 1553              	.LVL165:
 1554 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1555              	.LVL166:
 1556 0008 594B     		ldr	r3, .L132
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 54


 1557 000a 1860     		str	r0, [r3]
 887:main.c        ****     refKi = 0;
 1558              		.loc 1 887 0
 1559 000c 594C     		ldr	r4, .L132+4
 1560 000e 0023     		movs	r3, #0
 1561 0010 2360     		str	r3, [r4]
 888:main.c        ****     refKd = 0;
 1562              		.loc 1 888 0
 1563 0012 594D     		ldr	r5, .L132+8
 1564 0014 2B60     		str	r3, [r5]
 889:main.c        ****     
 1565              		.loc 1 889 0
 1566 0016 594E     		ldr	r6, .L132+12
 1567 0018 3360     		str	r3, [r6]
 892:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);
 1568              		.loc 1 892 0
 1569 001a FFF7FEFF 		bl	PID_Initialize
 1570              	.LVL167:
 893:main.c        ****     PID_SetOutputLimits(-100.0, 100.0);
 1571              		.loc 1 893 0
 1572 001e 3368     		ldr	r3, [r6]
 1573 0020 2A68     		ldr	r2, [r5]
 1574 0022 2168     		ldr	r1, [r4]
 1575 0024 0520     		movs	r0, #5
 1576 0026 FFF7FEFF 		bl	PID_SetTunings
 1577              	.LVL168:
 894:main.c        ****     PID_SetMode(PID_MANUAL);
 1578              		.loc 1 894 0
 1579 002a 5549     		ldr	r1, .L132+16
 1580 002c 5548     		ldr	r0, .L132+20
 1581 002e FFF7FEFF 		bl	PID_SetOutputLimits
 1582              	.LVL169:
 895:main.c        **** 
 1583              		.loc 1 895 0
 1584 0032 0020     		movs	r0, #0
 1585 0034 FFF7FEFF 		bl	PID_SetMode
 1586              	.LVL170:
 900:main.c        ****     PID_Was_Enabled = false;
 1587              		.loc 1 900 0
 1588 0038 0023     		movs	r3, #0
 1589 003a 534A     		ldr	r2, .L132+24
 1590 003c 1360     		str	r3, [r2]
 901:main.c        ****     PID_Enabled = false;
 1591              		.loc 1 901 0
 1592 003e 534A     		ldr	r2, .L132+28
 1593 0040 1370     		strb	r3, [r2]
 902:main.c        ****     
 1594              		.loc 1 902 0
 1595 0042 534A     		ldr	r2, .L132+32
 1596 0044 1370     		strb	r3, [r2]
 1597              	.LVL171:
 1598              	.L131:
 910:main.c        ****         /* ------------------------------------------------------------------------------------ */
 1599              		.loc 1 910 0
 1600 0046 8020     		movs	r0, #128
 1601 0048 0001     		lsls	r0, r0, #4
 1602 004a FFF7FEFF 		bl	CySysWdtResetCounters
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 55


 1603              	.LVL172:
 918:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 1604              		.loc 1 918 0
 1605 004e FFF7FEFF 		bl	xTaskGetTickCount
 1606              	.LVL173:
 1607 0052 0400     		movs	r4, r0
 1608              	.LVL174:
 919:main.c        ****              (now < LastMessageTimeTick) ) {
 1609              		.loc 1 919 0
 1610 0054 4F4B     		ldr	r3, .L132+36
 1611 0056 1B68     		ldr	r3, [r3]
 1612 0058 FA22     		movs	r2, #250
 1613 005a 9200     		lsls	r2, r2, #2
 1614 005c 9A18     		adds	r2, r3, r2
 1615 005e 9042     		cmp	r0, r2
 1616 0060 01D8     		bhi	.L122
 919:main.c        ****              (now < LastMessageTimeTick) ) {
 1617              		.loc 1 919 0 is_stmt 0 discriminator 1
 1618 0062 9842     		cmp	r0, r3
 1619 0064 08D2     		bcs	.L123
 1620              	.L122:
 923:main.c        ****             PID_Enabled = false;
 1621              		.loc 1 923 0 is_stmt 1
 1622 0066 4C48     		ldr	r0, .L132+40
 1623              	.LVL175:
 1624 0068 FFF7FEFF 		bl	PWM_Set
 1625              	.LVL176:
 924:main.c        ****             
 1626              		.loc 1 924 0
 1627 006c 0023     		movs	r3, #0
 1628 006e 484A     		ldr	r2, .L132+32
 1629 0070 1370     		strb	r3, [r2]
 928:main.c        **** 
 1630              		.loc 1 928 0
 1631 0072 4A4A     		ldr	r2, .L132+44
 1632 0074 1370     		strb	r3, [r2]
 1633 0076 72E0     		b	.L124
 1634              	.LVL177:
 1635              	.L123:
 931:main.c        ****             
 1636              		.loc 1 931 0
 1637 0078 494B     		ldr	r3, .L132+48
 1638 007a 1B78     		ldrb	r3, [r3]
 1639 007c 022B     		cmp	r3, #2
 1640 007e 6ED1     		bne	.L124
 935:main.c        ****             INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1641              		.loc 1 935 0
 1642 0080 0620     		movs	r0, #6
 1643              	.LVL178:
 1644 0082 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1645              	.LVL179:
 936:main.c        ****         
 1646              		.loc 1 936 0
 1647 0086 0620     		movs	r0, #6
 1648 0088 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1649              	.LVL180:
 939:main.c        ****                 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 56


 1650              		.loc 1 939 0
 1651 008c 404B     		ldr	r3, .L132+32
 1652 008e 1B78     		ldrb	r3, [r3]
 1653 0090 002B     		cmp	r3, #0
 1654 0092 3BD1     		bne	.L125
 943:main.c        ****                     
 1655              		.loc 1 943 0
 1656 0094 414B     		ldr	r3, .L132+44
 1657 0096 1A78     		ldrb	r2, [r3]
 1658 0098 52B2     		sxtb	r2, r2
 1659 009a 424B     		ldr	r3, .L132+52
 1660 009c 1B78     		ldrb	r3, [r3]
 1661 009e 5BB2     		sxtb	r3, r3
 1662 00a0 9A42     		cmp	r2, r3
 1663 00a2 0FD0     		beq	.L126
 943:main.c        ****                     
 1664              		.loc 1 943 0 is_stmt 0 discriminator 1
 1665 00a4 3D4B     		ldr	r3, .L132+44
 1666 00a6 1B78     		ldrb	r3, [r3]
 1667 00a8 002B     		cmp	r3, #0
 1668 00aa 0BD0     		beq	.L126
 946:main.c        ****                     
 1669              		.loc 1 946 0 is_stmt 1
 1670 00ac 3B4B     		ldr	r3, .L132+44
 1671 00ae 1B78     		ldrb	r3, [r3]
 1672 00b0 5BB2     		sxtb	r3, r3
 1673 00b2 3C4A     		ldr	r2, .L132+52
 1674 00b4 1370     		strb	r3, [r2]
 949:main.c        ****                     
 1675              		.loc 1 949 0
 1676 00b6 FFF7FEFF 		bl	Counter_1_ReadCounter
 1677              	.LVL181:
 1678 00ba 3B4B     		ldr	r3, .L132+56
 1679 00bc 1860     		str	r0, [r3]
 952:main.c        ****                 }                
 1680              		.loc 1 952 0
 1681 00be 0020     		movs	r0, #0
 1682 00c0 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1683              	.LVL182:
 1684              	.L126:
 956:main.c        **** 
 1685              		.loc 1 956 0
 1686 00c4 354D     		ldr	r5, .L132+44
 1687 00c6 2878     		ldrb	r0, [r5]
 1688 00c8 40B2     		sxtb	r0, r0
 1689 00ca 3230     		adds	r0, r0, #50
 1690 00cc FFF7FEFF 		bl	__aeabi_i2f
 1691              	.LVL183:
 1692 00d0 FFF7FEFF 		bl	PWM_Set
 1693              	.LVL184:
 959:main.c        ****                 
 1694              		.loc 1 959 0
 1695 00d4 2B78     		ldrb	r3, [r5]
 1696 00d6 002B     		cmp	r3, #0
 1697 00d8 18D0     		beq	.L125
 963:main.c        ****                     DeltaPosition = labs( ((int32) CurrentPosition) - ((int32) PID_Last_Position) )
 1698              		.loc 1 963 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 57


 1699 00da FFF7FEFF 		bl	Counter_1_ReadCounter
 1700              	.LVL185:
 964:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 1701              		.loc 1 964 0
 1702 00de 324B     		ldr	r3, .L132+56
 1703 00e0 1B68     		ldr	r3, [r3]
 1704 00e2 C01A     		subs	r0, r0, r3
 1705              	.LVL186:
 1706 00e4 C317     		asrs	r3, r0, #31
 1707 00e6 C518     		adds	r5, r0, r3
 1708 00e8 5D40     		eors	r5, r3
 1709              	.LVL187:
 965:main.c        ****                     
 1710              		.loc 1 965 0
 1711 00ea FFF7FEFF 		bl	Index_Counter_1_ReadCounter
 1712              	.LVL188:
 1713 00ee 061E     		subs	r6, r0, #0
 1714              	.LVL189:
 968:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 1715              		.loc 1 968 0
 1716 00f0 05D1     		bne	.L127
 969:main.c        ****                             AssertFault(fsIndex);        
 1717              		.loc 1 969 0
 1718 00f2 2E4B     		ldr	r3, .L132+60
 1719 00f4 9D42     		cmp	r5, r3
 1720 00f6 02DD     		ble	.L127
 970:main.c        ****                     
 1721              		.loc 1 970 0
 1722 00f8 0420     		movs	r0, #4
 1723              	.LVL190:
 1724 00fa FFF7FEFF 		bl	AssertFault
 1725              	.LVL191:
 1726              	.L127:
 973:main.c        ****                         AssertFault(fsEncoder);
 1727              		.loc 1 973 0
 1728 00fe 002E     		cmp	r6, #0
 1729 0100 04D0     		beq	.L125
 973:main.c        ****                         AssertFault(fsEncoder);
 1730              		.loc 1 973 0 is_stmt 0 discriminator 1
 1731 0102 012D     		cmp	r5, #1
 1732 0104 02DC     		bgt	.L125
 974:main.c        ****                 }
 1733              		.loc 1 974 0 is_stmt 1
 1734 0106 0220     		movs	r0, #2
 1735 0108 FFF7FEFF 		bl	AssertFault
 1736              	.LVL192:
 1737              	.L125:
 980:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1738              		.loc 1 980 0
 1739 010c 1F4B     		ldr	r3, .L132+28
 1740 010e 1B78     		ldrb	r3, [r3]
 1741 0110 002B     		cmp	r3, #0
 1742 0112 07D1     		bne	.L128
 980:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1743              		.loc 1 980 0 is_stmt 0 discriminator 1
 1744 0114 1E4A     		ldr	r2, .L132+32
 1745 0116 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 58


 1746 0118 002A     		cmp	r2, #0
 1747 011a 03D0     		beq	.L128
 981:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 1748              		.loc 1 981 0 is_stmt 1
 1749 011c 0120     		movs	r0, #1
 1750 011e FFF7FEFF 		bl	PID_SetMode
 1751              	.LVL193:
 1752 0122 08E0     		b	.L129
 1753              	.L128:
 982:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1754              		.loc 1 982 0
 1755 0124 1A4A     		ldr	r2, .L132+32
 1756 0126 1278     		ldrb	r2, [r2]
 1757 0128 002A     		cmp	r2, #0
 1758 012a 04D1     		bne	.L129
 982:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1759              		.loc 1 982 0 is_stmt 0 discriminator 1
 1760 012c 002B     		cmp	r3, #0
 1761 012e 02D0     		beq	.L129
 983:main.c        ****             } else {
 1762              		.loc 1 983 0 is_stmt 1
 1763 0130 0020     		movs	r0, #0
 1764 0132 FFF7FEFF 		bl	PID_SetMode
 1765              	.LVL194:
 1766              	.L129:
 989:main.c        ****             
 1767              		.loc 1 989 0
 1768 0136 164D     		ldr	r5, .L132+32
 1769 0138 2A78     		ldrb	r2, [r5]
 1770 013a 144B     		ldr	r3, .L132+28
 1771 013c 1A70     		strb	r2, [r3]
 993:main.c        ****             
 1772              		.loc 1 993 0
 1773 013e 124B     		ldr	r3, .L132+24
 1774 0140 1968     		ldr	r1, [r3]
 1775 0142 2000     		movs	r0, r4
 1776 0144 FFF7FEFF 		bl	PID_Compute
 1777              	.LVL195:
 996:main.c        ****                 
 1778              		.loc 1 996 0
 1779 0148 2B78     		ldrb	r3, [r5]
 1780 014a 002B     		cmp	r3, #0
 1781 014c 04D0     		beq	.L130
 999:main.c        ****                 
 1782              		.loc 1 999 0
 1783 014e 184B     		ldr	r3, .L132+64
 1784 0150 1860     		str	r0, [r3]
1002:main.c        ****                 
 1785              		.loc 1 1002 0
 1786 0152 FFF7FEFF 		bl	PID_SetDrive
 1787              	.LVL196:
 1788 0156 02E0     		b	.L124
 1789              	.LVL197:
 1790              	.L130:
1006:main.c        ****             }
 1791              		.loc 1 1006 0
 1792 0158 0022     		movs	r2, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 59


 1793 015a 154B     		ldr	r3, .L132+64
 1794 015c 1A60     		str	r2, [r3]
 1795              	.LVL198:
 1796              	.L124:
1012:main.c        **** 
 1797              		.loc 1 1012 0
 1798 015e 0520     		movs	r0, #5
 1799 0160 FFF7FEFF 		bl	vTaskDelay
 1800              	.LVL199:
1015:main.c        ****     }
 1801              		.loc 1 1015 0
 1802 0164 0020     		movs	r0, #0
 1803 0166 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1804              	.LVL200:
 1805 016a 014B     		ldr	r3, .L132
 1806 016c 1860     		str	r0, [r3]
1016:main.c        ****    
 1807              		.loc 1 1016 0
 1808 016e 6AE7     		b	.L131
 1809              	.L133:
 1810              		.align	2
 1811              	.L132:
 1812 0170 00000000 		.word	uxHighWaterMark_PID
 1813 0174 00000000 		.word	refKp
 1814 0178 00000000 		.word	refKi
 1815 017c 00000000 		.word	refKd
 1816 0180 0000C842 		.word	1120403456
 1817 0184 0000C8C2 		.word	-1027080192
 1818 0188 00000000 		.word	PID_Setpoint
 1819 018c 00000000 		.word	PID_Was_Enabled
 1820 0190 00000000 		.word	PID_Enabled
 1821 0194 00000000 		.word	LastMessageTimeTick
 1822 0198 00004842 		.word	1112014848
 1823 019c 00000000 		.word	Jog
 1824 01a0 00000000 		.word	ConfigState
 1825 01a4 00000000 		.word	Last_Jog
 1826 01a8 00000000 		.word	PID_Last_Position
 1827 01ac 204E0000 		.word	20000
 1828 01b0 00000000 		.word	PWM
 1829              		.cfi_endproc
 1830              	.LFE44:
 1831              		.size	PID_Task, .-PID_Task
 1832              		.section	.text.main,"ax",%progbits
 1833              		.align	2
 1834              		.global	main
 1835              		.code	16
 1836              		.thumb_func
 1837              		.type	main, %function
 1838              	main:
 1839              	.LFB45:
1031:main.c        ****     
 1840              		.loc 1 1031 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844 0000 30B5     		push	{r4, r5, lr}
 1845              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 60


 1846              		.cfi_offset 4, -12
 1847              		.cfi_offset 5, -8
 1848              		.cfi_offset 14, -4
 1849 0002 83B0     		sub	sp, sp, #12
 1850              		.cfi_def_cfa_offset 24
1034:main.c        ****     
 1851              		.loc 1 1034 0
 1852 0004 FFF7FEFF 		bl	setupFreeRTOS
 1853              	.LVL201:
1039:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1854              		.loc 1 1039 0
 1855 0008 0620     		movs	r0, #6
 1856 000a FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1857              	.LVL202:
1040:main.c        ****         
 1858              		.loc 1 1040 0
 1859 000e 0620     		movs	r0, #6
 1860 0010 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1861              	.LVL203:
1042:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1862              		.loc 1 1042 0
 1863 0014 0120     		movs	r0, #1
 1864 0016 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1865              	.LVL204:
1043:main.c        **** 
 1866              		.loc 1 1043 0
 1867 001a 0120     		movs	r0, #1
 1868 001c FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1869              	.LVL205:
1046:main.c        ****         PID_Task,       /* Task function */
 1870              		.loc 1 1046 0
 1871 0020 0024     		movs	r4, #0
 1872 0022 0194     		str	r4, [sp, #4]
 1873 0024 0223     		movs	r3, #2
 1874 0026 0093     		str	r3, [sp]
 1875 0028 0023     		movs	r3, #0
 1876 002a 4022     		movs	r2, #64
 1877 002c 3849     		ldr	r1, .L137
 1878 002e 3948     		ldr	r0, .L137+4
 1879 0030 FFF7FEFF 		bl	xTaskCreate
 1880              	.LVL206:
1054:main.c        ****         Comm_Task,       /* Task function */
 1881              		.loc 1 1054 0
 1882 0034 0194     		str	r4, [sp, #4]
 1883 0036 0323     		movs	r3, #3
 1884 0038 0093     		str	r3, [sp]
 1885 003a 0023     		movs	r3, #0
 1886 003c 6422     		movs	r2, #100
 1887 003e 3649     		ldr	r1, .L137+8
 1888 0040 3648     		ldr	r0, .L137+12
 1889 0042 FFF7FEFF 		bl	xTaskCreate
 1890              	.LVL207:
1062:main.c        ****         Current_Read_Task, /* Task function */
 1891              		.loc 1 1062 0
 1892 0046 0194     		str	r4, [sp, #4]
 1893 0048 0123     		movs	r3, #1
 1894 004a 0093     		str	r3, [sp]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 61


 1895 004c 0023     		movs	r3, #0
 1896 004e 4022     		movs	r2, #64
 1897 0050 3349     		ldr	r1, .L137+16
 1898 0052 3448     		ldr	r0, .L137+20
 1899 0054 FFF7FEFF 		bl	xTaskCreate
 1900              	.LVL208:
1073:main.c        **** 
 1901              		.loc 1 1073 0
 1902 0058 0120     		movs	r0, #1
 1903 005a FFF7FEFF 		bl	xQueueCreateMutex
 1904              	.LVL209:
 1905 005e 324B     		ldr	r3, .L137+24
 1906 0060 1860     		str	r0, [r3]
1076:main.c        ****         s = 1;
 1907              		.loc 1 1076 0
 1908 0062 0028     		cmp	r0, #0
 1909 0064 0BD1     		bne	.L135
 1910 0066 0134     		adds	r4, r4, #1
 1911              	.L136:
 1912              	.LVL210:
1080:main.c        ****             LED_Write(s); 
 1913              		.loc 1 1080 0 discriminator 1
 1914 0068 6342     		rsbs	r3, r4, #0
 1915 006a 5C41     		adcs	r4, r4, r3
 1916              	.LVL211:
 1917 006c E4B2     		uxtb	r4, r4
 1918              	.LVL212:
1081:main.c        ****             CyDelay(1000u);                    
 1919              		.loc 1 1081 0 discriminator 1
 1920 006e 2000     		movs	r0, r4
 1921 0070 FFF7FEFF 		bl	LED_Write
 1922              	.LVL213:
1082:main.c        ****         }
 1923              		.loc 1 1082 0 discriminator 1
 1924 0074 FA20     		movs	r0, #250
 1925 0076 8000     		lsls	r0, r0, #2
 1926 0078 FFF7FEFF 		bl	CyDelay
 1927              	.LVL214:
 1928 007c F4E7     		b	.L136
 1929              	.LVL215:
 1930              	.L135:
1092:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 1931              		.loc 1 1092 0
 1932 007e 2B48     		ldr	r0, .L137+28
 1933 0080 FFF7FEFF 		bl	isr_home_StartEx
 1934              	.LVL216:
1093:main.c        ****     
 1935              		.loc 1 1093 0
 1936 0084 2A48     		ldr	r0, .L137+32
 1937 0086 FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1938              	.LVL217:
1096:main.c        ****     
 1939              		.loc 1 1096 0
 1940 008a 2A48     		ldr	r0, .L137+36
 1941 008c FFF7FEFF 		bl	isr_spi_ss_StartEx
 1942              	.LVL218:
1099:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 62


 1943              		.loc 1 1099 0
 1944 0090 0320     		movs	r0, #3
 1945 0092 FFF7FEFF 		bl	isr_home_SetPriority
 1946              	.LVL219:
1100:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
 1947              		.loc 1 1100 0
 1948 0096 0220     		movs	r0, #2
 1949 0098 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1950              	.LVL220:
1101:main.c        **** 
 1951              		.loc 1 1101 0
 1952 009c 0320     		movs	r0, #3
 1953 009e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1954              	.LVL221:
1104:main.c        ****     
 1955              		.loc 1 1104 0
 1956              		.syntax divided
 1957              	@ 1104 "main.c" 1
 1958 00a2 62B6     		CPSIE   i
 1959              	@ 0 "" 2
1135:main.c        ****     CyDelay(100u);
 1960              		.loc 1 1135 0
 1961              		.thumb
 1962              		.syntax unified
 1963 00a4 FFF7FEFF 		bl	I2C_Start
 1964              	.LVL222:
1136:main.c        ****     SPI_1_Start();
 1965              		.loc 1 1136 0
 1966 00a8 6420     		movs	r0, #100
 1967 00aa FFF7FEFF 		bl	CyDelay
 1968              	.LVL223:
1137:main.c        ****     
 1969              		.loc 1 1137 0
 1970 00ae FFF7FEFF 		bl	SPI_1_Start
 1971              	.LVL224:
1141:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1972              		.loc 1 1141 0
 1973 00b2 FFF7FEFF 		bl	PWM_1_Start
 1974              	.LVL225:
1142:main.c        ****     PWM_Set(PWM_IDLE);   
 1975              		.loc 1 1142 0
 1976 00b6 C820     		movs	r0, #200
 1977 00b8 C000     		lsls	r0, r0, #3
 1978 00ba FFF7FEFF 		bl	PWM_1_WritePeriod
 1979              	.LVL226:
1143:main.c        ****     
 1980              		.loc 1 1143 0
 1981 00be 1E48     		ldr	r0, .L137+40
 1982 00c0 FFF7FEFF 		bl	PWM_Set
 1983              	.LVL227:
1146:main.c        ****     PWM_Max_Fwd = PWM_JOG_NEUTRAL + PWM_MAX_MAGNITUDE;
 1984              		.loc 1 1146 0
 1985 00c4 0024     		movs	r4, #0
 1986 00c6 1D4B     		ldr	r3, .L137+44
 1987 00c8 1C70     		strb	r4, [r3]
1147:main.c        ****     PWM_Max_Rev = PWM_JOG_NEUTRAL - PWM_MAX_MAGNITUDE;
 1988              		.loc 1 1147 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 63


 1989 00ca 6422     		movs	r2, #100
 1990 00cc 1C4B     		ldr	r3, .L137+48
 1991 00ce 1A70     		strb	r2, [r3]
1148:main.c        ****    
 1992              		.loc 1 1148 0
 1993 00d0 1C4B     		ldr	r3, .L137+52
 1994 00d2 1C70     		strb	r4, [r3]
1151:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1995              		.loc 1 1151 0
 1996 00d4 FFF7FEFF 		bl	Counter_1_Start
 1997              	.LVL228:
1152:main.c        ****     PID_Last_Position = ENCODER_MAX;
 1998              		.loc 1 1152 0
 1999 00d8 8025     		movs	r5, #128
 2000 00da 2D04     		lsls	r5, r5, #16
 2001 00dc 2800     		movs	r0, r5
 2002 00de FFF7FEFF 		bl	Counter_1_WriteCounter
 2003              	.LVL229:
1153:main.c        ****     
 2004              		.loc 1 1153 0
 2005 00e2 194B     		ldr	r3, .L137+56
 2006 00e4 1D60     		str	r5, [r3]
1156:main.c        ****     Index_Counter_1_WriteCounter(0);
 2007              		.loc 1 1156 0
 2008 00e6 FFF7FEFF 		bl	Index_Counter_1_Start
 2009              	.LVL230:
1157:main.c        ****      
 2010              		.loc 1 1157 0
 2011 00ea 0020     		movs	r0, #0
 2012 00ec FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 2013              	.LVL231:
1160:main.c        ****     
 2014              		.loc 1 1160 0
 2015 00f0 FFF7FEFF 		bl	xTaskGetTickCount
 2016              	.LVL232:
 2017 00f4 154B     		ldr	r3, .L137+60
 2018 00f6 1860     		str	r0, [r3]
1163:main.c        ****     ConfigSequence = 0;
 2019              		.loc 1 1163 0
 2020 00f8 0122     		movs	r2, #1
 2021 00fa 154B     		ldr	r3, .L137+64
 2022 00fc 1A70     		strb	r2, [r3]
1164:main.c        ****     ChecksumErrors = 0;
 2023              		.loc 1 1164 0
 2024 00fe 154B     		ldr	r3, .L137+68
 2025 0100 1C70     		strb	r4, [r3]
1165:main.c        ****    
 2026              		.loc 1 1165 0
 2027 0102 154B     		ldr	r3, .L137+72
 2028 0104 1C80     		strh	r4, [r3]
1170:main.c        ****    
 2029              		.loc 1 1170 0
 2030 0106 FFF7FEFF 		bl	vTaskStartScheduler
 2031              	.LVL233:
1176:main.c        **** 
 2032              		.loc 1 1176 0
 2033 010a 0120     		movs	r0, #1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 64


 2034 010c 03B0     		add	sp, sp, #12
 2035              		@ sp needed
 2036 010e 30BD     		pop	{r4, r5, pc}
 2037              	.L138:
 2038              		.align	2
 2039              	.L137:
 2040 0110 00000000 		.word	.LC76
 2041 0114 00000000 		.word	PID_Task
 2042 0118 04000000 		.word	.LC79
 2043 011c 00000000 		.word	Comm_Task
 2044 0120 14000000 		.word	.LC82
 2045 0124 00000000 		.word	Current_Read_Task
 2046 0128 00000000 		.word	Lock
 2047 012c 00000000 		.word	HomeIsrHandler
 2048 0130 00000000 		.word	RSTIsrHandler
 2049 0134 00000000 		.word	SPI_SS_IsrHandler
 2050 0138 00004842 		.word	1112014848
 2051 013c 00000000 		.word	Jog
 2052 0140 00000000 		.word	PWM_Max_Fwd
 2053 0144 00000000 		.word	PWM_Max_Rev
 2054 0148 00000000 		.word	PID_Last_Position
 2055 014c 00000000 		.word	LastMessageTimeTick
 2056 0150 00000000 		.word	ConfigState
 2057 0154 00000000 		.word	ConfigSequence
 2058 0158 00000000 		.word	ChecksumErrors
 2059              		.cfi_endproc
 2060              	.LFE45:
 2061              		.size	main, .-main
 2062              		.comm	txMessageState,1,1
 2063              		.comm	txMessage,30,4
 2064              		.comm	rxMessage,30,4
 2065              		.comm	LastMessageTimeTick,4,4
 2066              		.comm	Lock,4,4
 2067              		.comm	uxHighWaterMark_Comm,4,4
 2068              		.comm	uxHighWaterMark_Current,4,4
 2069              		.comm	uxHighWaterMark_PID,4,4
 2070              		.comm	CurrentI2Cinbuf,20,4
 2071              		.comm	PID_Last_Position,4,4
 2072              		.comm	PWM,4,4
 2073              		.comm	Current,2,2
 2074              		.comm	ChecksumErrors,2,2
 2075              		.comm	ConfigSequence,1,1
 2076              		.comm	FaultState,1,1
 2077              		.comm	ConfigState,1,1
 2078              		.global	inAuto
 2079              		.comm	outMax,4,4
 2080              		.comm	outMin,4,4
 2081              		.global	refSampleTime
 2082              		.comm	kd,4,4
 2083              		.comm	ki,4,4
 2084              		.comm	kp,4,4
 2085              		.comm	refKd,4,4
 2086              		.comm	refKi,4,4
 2087              		.comm	refKp,4,4
 2088              		.comm	lastPosition,4,4
 2089              		.comm	ITerm,4,4
 2090              		.comm	Output,4,4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 65


 2091              		.comm	lastTime,4,4
 2092              		.comm	PID_Setpoint,4,4
 2093              		.comm	PID_Was_Enabled,1,1
 2094              		.comm	PID_Enabled,1,1
 2095              		.comm	PWM_Max_Rev,1,1
 2096              		.comm	PWM_Max_Fwd,1,1
 2097              		.comm	Last_Jog,1,1
 2098              		.comm	Jog,1,1
 2099              		.data
 2100              		.align	2
 2101              		.set	.LANCHOR1,. + 0
 2102              		.type	refSampleTime, %object
 2103              		.size	refSampleTime, 4
 2104              	refSampleTime:
 2105 0000 05000000 		.word	5
 2106              		.section	.rodata.str1.4,"aMS",%progbits,1
 2107              		.align	2
 2108              	.LC76:
 2109 0000 50494400 		.ascii	"PID\000"
 2110              	.LC79:
 2111 0004 436F6D6D 		.ascii	"Communications\000"
 2111      756E6963 
 2111      6174696F 
 2111      6E7300
 2112 0013 00       		.space	1
 2113              	.LC82:
 2114 0014 52656164 		.ascii	"Read Current\000"
 2114      20437572 
 2114      72656E74 
 2114      00
 2115              		.bss
 2116              		.set	.LANCHOR0,. + 0
 2117              		.type	inAuto, %object
 2118              		.size	inAuto, 1
 2119              	inAuto:
 2120 0000 00       		.space	1
 2121              		.text
 2122              	.Letext0:
 2123              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2124              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2125              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2126              		.file 5 ".\\FreeRTOS/portmacro.h"
 2127              		.file 6 ".\\FreeRTOS/queue.h"
 2128              		.file 7 ".\\FreeRTOS/semphr.h"
 2129              		.file 8 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 2130              		.file 9 "Generated_Source\\PSoC4/Reset_Encoder.h"
 2131              		.file 10 "Generated_Source\\PSoC4/Counter_1.h"
 2132              		.file 11 "Generated_Source\\PSoC4/Index_Counter_1.h"
 2133              		.file 12 "Generated_Source\\PSoC4/isr_home.h"
 2134              		.file 13 "Generated_Source\\PSoC4/HOME_IN.h"
 2135              		.file 14 "Generated_Source\\PSoC4/spi_ss.h"
 2136              		.file 15 ".\\FreeRTOS/task.h"
 2137              		.file 16 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 2138              		.file 17 "Generated_Source\\PSoC4/CyLib.h"
 2139              		.file 18 "Generated_Source\\PSoC4/LED.h"
 2140              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 2141              		.file 20 "Generated_Source\\PSoC4/I2C_I2C.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 66


 2142              		.file 21 "Generated_Source\\PSoC4/PWM_1.h"
 2143              		.file 22 "Generated_Source\\PSoC4/CyLFClk.h"
 2144              		.file 23 "Generated_Source\\PSoC4/HOME_OUT.h"
 2145              		.file 24 "Generated_Source\\PSoC4/INDEX_OUT.h"
 2146              		.file 25 "Generated_Source\\PSoC4/isr_spi_ss.h"
 2147              		.file 26 "Generated_Source\\PSoC4/I2C.h"
 2148              		.file 27 "Generated_Source\\PSoC4/SPI_1.h"
 2149              		.file 28 "Generated_Source\\PSoC4/core_cm0_psoc4.h"
 2150              		.section	.debug_info,"",%progbits
 2151              	.Ldebug_info0:
 2152 0000 6F140000 		.4byte	0x146f
 2153 0004 0400     		.2byte	0x4
 2154 0006 00000000 		.4byte	.Ldebug_abbrev0
 2155 000a 04       		.byte	0x4
 2156 000b 01       		.uleb128 0x1
 2157 000c 86020000 		.4byte	.LASF195
 2158 0010 0C       		.byte	0xc
 2159 0011 2C000000 		.4byte	.LASF196
 2160 0015 AA0A0000 		.4byte	.LASF197
 2161 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2162 001d 00000000 		.4byte	0
 2163 0021 00000000 		.4byte	.Ldebug_line0
 2164 0025 02       		.uleb128 0x2
 2165 0026 04       		.byte	0x4
 2166 0027 04       		.byte	0x4
 2167 0028 A1010000 		.4byte	.LASF0
 2168 002c 03       		.uleb128 0x3
 2169 002d 04       		.byte	0x4
 2170 002e 05       		.byte	0x5
 2171 002f 696E7400 		.ascii	"int\000"
 2172 0033 02       		.uleb128 0x2
 2173 0034 04       		.byte	0x4
 2174 0035 07       		.byte	0x7
 2175 0036 76000000 		.4byte	.LASF1
 2176 003a 02       		.uleb128 0x2
 2177 003b 08       		.byte	0x8
 2178 003c 05       		.byte	0x5
 2179 003d 42050000 		.4byte	.LASF2
 2180 0041 02       		.uleb128 0x2
 2181 0042 08       		.byte	0x8
 2182 0043 04       		.byte	0x4
 2183 0044 7B060000 		.4byte	.LASF3
 2184 0048 02       		.uleb128 0x2
 2185 0049 01       		.byte	0x1
 2186 004a 06       		.byte	0x6
 2187 004b C6090000 		.4byte	.LASF4
 2188 004f 04       		.uleb128 0x4
 2189 0050 E4070000 		.4byte	.LASF9
 2190 0054 02       		.byte	0x2
 2191 0055 1D       		.byte	0x1d
 2192 0056 5A000000 		.4byte	0x5a
 2193 005a 02       		.uleb128 0x2
 2194 005b 01       		.byte	0x1
 2195 005c 08       		.byte	0x8
 2196 005d E5080000 		.4byte	.LASF5
 2197 0061 02       		.uleb128 0x2
 2198 0062 02       		.byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 67


 2199 0063 05       		.byte	0x5
 2200 0064 DD060000 		.4byte	.LASF6
 2201 0068 02       		.uleb128 0x2
 2202 0069 02       		.byte	0x2
 2203 006a 07       		.byte	0x7
 2204 006b D2090000 		.4byte	.LASF7
 2205 006f 02       		.uleb128 0x2
 2206 0070 04       		.byte	0x4
 2207 0071 05       		.byte	0x5
 2208 0072 25070000 		.4byte	.LASF8
 2209 0076 04       		.uleb128 0x4
 2210 0077 03090000 		.4byte	.LASF10
 2211 007b 02       		.byte	0x2
 2212 007c 41       		.byte	0x41
 2213 007d 81000000 		.4byte	0x81
 2214 0081 02       		.uleb128 0x2
 2215 0082 04       		.byte	0x4
 2216 0083 07       		.byte	0x7
 2217 0084 68080000 		.4byte	.LASF11
 2218 0088 02       		.uleb128 0x2
 2219 0089 08       		.byte	0x8
 2220 008a 07       		.byte	0x7
 2221 008b EC010000 		.4byte	.LASF12
 2222 008f 04       		.uleb128 0x4
 2223 0090 98040000 		.4byte	.LASF13
 2224 0094 03       		.byte	0x3
 2225 0095 18       		.byte	0x18
 2226 0096 4F000000 		.4byte	0x4f
 2227 009a 04       		.uleb128 0x4
 2228 009b 65010000 		.4byte	.LASF14
 2229 009f 03       		.byte	0x3
 2230 00a0 30       		.byte	0x30
 2231 00a1 76000000 		.4byte	0x76
 2232 00a5 05       		.uleb128 0x5
 2233 00a6 100A0000 		.4byte	.LASF15
 2234 00aa 04       		.byte	0x4
 2235 00ab E401     		.2byte	0x1e4
 2236 00ad 5A000000 		.4byte	0x5a
 2237 00b1 05       		.uleb128 0x5
 2238 00b2 6B040000 		.4byte	.LASF16
 2239 00b6 04       		.byte	0x4
 2240 00b7 E501     		.2byte	0x1e5
 2241 00b9 68000000 		.4byte	0x68
 2242 00bd 05       		.uleb128 0x5
 2243 00be C3050000 		.4byte	.LASF17
 2244 00c2 04       		.byte	0x4
 2245 00c3 E601     		.2byte	0x1e6
 2246 00c5 81000000 		.4byte	0x81
 2247 00c9 05       		.uleb128 0x5
 2248 00ca 72040000 		.4byte	.LASF18
 2249 00ce 04       		.byte	0x4
 2250 00cf E701     		.2byte	0x1e7
 2251 00d1 48000000 		.4byte	0x48
 2252 00d5 05       		.uleb128 0x5
 2253 00d6 C3010000 		.4byte	.LASF19
 2254 00da 04       		.byte	0x4
 2255 00db E901     		.2byte	0x1e9
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 68


 2256 00dd 6F000000 		.4byte	0x6f
 2257 00e1 02       		.uleb128 0x2
 2258 00e2 08       		.byte	0x8
 2259 00e3 04       		.byte	0x4
 2260 00e4 160A0000 		.4byte	.LASF20
 2261 00e8 02       		.uleb128 0x2
 2262 00e9 01       		.byte	0x1
 2263 00ea 08       		.byte	0x8
 2264 00eb 15040000 		.4byte	.LASF21
 2265 00ef 06       		.uleb128 0x6
 2266 00f0 A5000000 		.4byte	0xa5
 2267 00f4 06       		.uleb128 0x6
 2268 00f5 B1000000 		.4byte	0xb1
 2269 00f9 05       		.uleb128 0x5
 2270 00fa 8C060000 		.4byte	.LASF22
 2271 00fe 04       		.byte	0x4
 2272 00ff 9002     		.2byte	0x290
 2273 0101 05010000 		.4byte	0x105
 2274 0105 06       		.uleb128 0x6
 2275 0106 BD000000 		.4byte	0xbd
 2276 010a 05       		.uleb128 0x5
 2277 010b A1050000 		.4byte	.LASF23
 2278 010f 04       		.byte	0x4
 2279 0110 A002     		.2byte	0x2a0
 2280 0112 16010000 		.4byte	0x116
 2281 0116 07       		.uleb128 0x7
 2282 0117 04       		.byte	0x4
 2283 0118 1C010000 		.4byte	0x11c
 2284 011c 08       		.uleb128 0x8
 2285 011d 02       		.uleb128 0x2
 2286 011e 04       		.byte	0x4
 2287 011f 07       		.byte	0x7
 2288 0120 5F080000 		.4byte	.LASF24
 2289 0124 09       		.uleb128 0x9
 2290 0125 04       		.byte	0x4
 2291 0126 0A       		.uleb128 0xa
 2292 0127 87060000 		.4byte	.LASF198
 2293 012b 01       		.byte	0x1
 2294 012c 48000000 		.4byte	0x48
 2295 0130 1C       		.byte	0x1c
 2296 0131 17       		.byte	0x17
 2297 0132 55010000 		.4byte	0x155
 2298 0136 0B       		.uleb128 0xb
 2299 0137 56070000 		.4byte	.LASF25
 2300 013b 72       		.sleb128 -14
 2301 013c 0B       		.uleb128 0xb
 2302 013d F9090000 		.4byte	.LASF26
 2303 0141 73       		.sleb128 -13
 2304 0142 0B       		.uleb128 0xb
 2305 0143 2C090000 		.4byte	.LASF27
 2306 0147 7B       		.sleb128 -5
 2307 0148 0B       		.uleb128 0xb
 2308 0149 2C010000 		.4byte	.LASF28
 2309 014d 7E       		.sleb128 -2
 2310 014e 0B       		.uleb128 0xb
 2311 014f 43080000 		.4byte	.LASF29
 2312 0153 7F       		.sleb128 -1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 69


 2313 0154 00       		.byte	0
 2314 0155 04       		.uleb128 0x4
 2315 0156 5B050000 		.4byte	.LASF30
 2316 015a 05       		.byte	0x5
 2317 015b 38       		.byte	0x38
 2318 015c 6F000000 		.4byte	0x6f
 2319 0160 04       		.uleb128 0x4
 2320 0161 20040000 		.4byte	.LASF31
 2321 0165 05       		.byte	0x5
 2322 0166 39       		.byte	0x39
 2323 0167 81000000 		.4byte	0x81
 2324 016b 04       		.uleb128 0x4
 2325 016c 52060000 		.4byte	.LASF32
 2326 0170 05       		.byte	0x5
 2327 0171 3F       		.byte	0x3f
 2328 0172 9A000000 		.4byte	0x9a
 2329 0176 04       		.uleb128 0x4
 2330 0177 7E040000 		.4byte	.LASF33
 2331 017b 06       		.byte	0x6
 2332 017c 2E       		.byte	0x2e
 2333 017d 24010000 		.4byte	0x124
 2334 0181 04       		.uleb128 0x4
 2335 0182 6A070000 		.4byte	.LASF34
 2336 0186 07       		.byte	0x7
 2337 0187 25       		.byte	0x25
 2338 0188 76010000 		.4byte	0x176
 2339 018c 06       		.uleb128 0x6
 2340 018d 60010000 		.4byte	0x160
 2341 0191 0C       		.uleb128 0xc
 2342 0192 01       		.byte	0x1
 2343 0193 5A000000 		.4byte	0x5a
 2344 0197 01       		.byte	0x1
 2345 0198 A4       		.byte	0xa4
 2346 0199 B6010000 		.4byte	0x1b6
 2347 019d 0D       		.uleb128 0xd
 2348 019e 92060000 		.4byte	.LASF35
 2349 01a2 00       		.byte	0
 2350 01a3 0D       		.uleb128 0xd
 2351 01a4 4C000000 		.4byte	.LASF36
 2352 01a8 01       		.byte	0x1
 2353 01a9 0D       		.uleb128 0xd
 2354 01aa 42010000 		.4byte	.LASF37
 2355 01ae 02       		.byte	0x2
 2356 01af 0D       		.uleb128 0xd
 2357 01b0 2E070000 		.4byte	.LASF38
 2358 01b4 03       		.byte	0x3
 2359 01b5 00       		.byte	0
 2360 01b6 04       		.uleb128 0x4
 2361 01b7 5D060000 		.4byte	.LASF39
 2362 01bb 01       		.byte	0x1
 2363 01bc A9       		.byte	0xa9
 2364 01bd 91010000 		.4byte	0x191
 2365 01c1 0C       		.uleb128 0xc
 2366 01c2 01       		.byte	0x1
 2367 01c3 5A000000 		.4byte	0x5a
 2368 01c7 01       		.byte	0x1
 2369 01c8 AE       		.byte	0xae
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 70


 2370 01c9 04020000 		.4byte	0x204
 2371 01cd 0D       		.uleb128 0xd
 2372 01ce C2040000 		.4byte	.LASF40
 2373 01d2 00       		.byte	0
 2374 01d3 0D       		.uleb128 0xd
 2375 01d4 3C030000 		.4byte	.LASF41
 2376 01d8 01       		.byte	0x1
 2377 01d9 0D       		.uleb128 0xd
 2378 01da 42000000 		.4byte	.LASF42
 2379 01de 02       		.byte	0x2
 2380 01df 0D       		.uleb128 0xd
 2381 01e0 A7040000 		.4byte	.LASF43
 2382 01e4 04       		.byte	0x4
 2383 01e5 0D       		.uleb128 0xd
 2384 01e6 CF060000 		.4byte	.LASF44
 2385 01ea 08       		.byte	0x8
 2386 01eb 0D       		.uleb128 0xd
 2387 01ec 50050000 		.4byte	.LASF45
 2388 01f0 10       		.byte	0x10
 2389 01f1 0D       		.uleb128 0xd
 2390 01f2 38090000 		.4byte	.LASF46
 2391 01f6 20       		.byte	0x20
 2392 01f7 0D       		.uleb128 0xd
 2393 01f8 3D090000 		.4byte	.LASF47
 2394 01fc 40       		.byte	0x40
 2395 01fd 0D       		.uleb128 0xd
 2396 01fe 42090000 		.4byte	.LASF48
 2397 0202 80       		.byte	0x80
 2398 0203 00       		.byte	0
 2399 0204 04       		.uleb128 0x4
 2400 0205 9C0A0000 		.4byte	.LASF49
 2401 0209 01       		.byte	0x1
 2402 020a B8       		.byte	0xb8
 2403 020b C1010000 		.4byte	0x1c1
 2404 020f 0C       		.uleb128 0xc
 2405 0210 01       		.byte	0x1
 2406 0211 5A000000 		.4byte	0x5a
 2407 0215 01       		.byte	0x1
 2408 0216 DF       		.byte	0xdf
 2409 0217 3A020000 		.4byte	0x23a
 2410 021b 0D       		.uleb128 0xd
 2411 021c 0E090000 		.4byte	.LASF50
 2412 0220 00       		.byte	0
 2413 0221 0D       		.uleb128 0xd
 2414 0222 480A0000 		.4byte	.LASF51
 2415 0226 01       		.byte	0x1
 2416 0227 0D       		.uleb128 0xd
 2417 0228 FB070000 		.4byte	.LASF52
 2418 022c 02       		.byte	0x2
 2419 022d 0D       		.uleb128 0xd
 2420 022e 66050000 		.4byte	.LASF53
 2421 0232 03       		.byte	0x3
 2422 0233 0D       		.uleb128 0xd
 2423 0234 33080000 		.4byte	.LASF54
 2424 0238 04       		.byte	0x4
 2425 0239 00       		.byte	0
 2426 023a 04       		.uleb128 0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 71


 2427 023b 6E010000 		.4byte	.LASF55
 2428 023f 01       		.byte	0x1
 2429 0240 E5       		.byte	0xe5
 2430 0241 0F020000 		.4byte	0x20f
 2431 0245 0E       		.uleb128 0xe
 2432 0246 03       		.byte	0x3
 2433 0247 01       		.byte	0x1
 2434 0248 EA       		.byte	0xea
 2435 0249 72020000 		.4byte	0x272
 2436 024d 0F       		.uleb128 0xf
 2437 024e BA010000 		.4byte	.LASF56
 2438 0252 01       		.byte	0x1
 2439 0253 EB       		.byte	0xeb
 2440 0254 A5000000 		.4byte	0xa5
 2441 0258 00       		.byte	0
 2442 0259 0F       		.uleb128 0xf
 2443 025a BE050000 		.4byte	.LASF57
 2444 025e 01       		.byte	0x1
 2445 025f EC       		.byte	0xec
 2446 0260 A5000000 		.4byte	0xa5
 2447 0264 01       		.byte	0x1
 2448 0265 0F       		.uleb128 0xf
 2449 0266 77040000 		.4byte	.LASF58
 2450 026a 01       		.byte	0x1
 2451 026b ED       		.byte	0xed
 2452 026c A5000000 		.4byte	0xa5
 2453 0270 02       		.byte	0x2
 2454 0271 00       		.byte	0
 2455 0272 04       		.uleb128 0x4
 2456 0273 DE030000 		.4byte	.LASF59
 2457 0277 01       		.byte	0x1
 2458 0278 EE       		.byte	0xee
 2459 0279 45020000 		.4byte	0x245
 2460 027d 0E       		.uleb128 0xe
 2461 027e 11       		.byte	0x11
 2462 027f 01       		.byte	0x1
 2463 0280 F1       		.byte	0xf1
 2464 0281 E3020000 		.4byte	0x2e3
 2465 0285 0F       		.uleb128 0xf
 2466 0286 BA010000 		.4byte	.LASF56
 2467 028a 01       		.byte	0x1
 2468 028b F2       		.byte	0xf2
 2469 028c A5000000 		.4byte	0xa5
 2470 0290 00       		.byte	0
 2471 0291 0F       		.uleb128 0xf
 2472 0292 BE050000 		.4byte	.LASF57
 2473 0296 01       		.byte	0x1
 2474 0297 F3       		.byte	0xf3
 2475 0298 A5000000 		.4byte	0xa5
 2476 029c 01       		.byte	0x1
 2477 029d 0F       		.uleb128 0xf
 2478 029e 77040000 		.4byte	.LASF58
 2479 02a2 01       		.byte	0x1
 2480 02a3 F4       		.byte	0xf4
 2481 02a4 A5000000 		.4byte	0xa5
 2482 02a8 02       		.byte	0x2
 2483 02a9 0F       		.uleb128 0xf
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 72


 2484 02aa B8060000 		.4byte	.LASF60
 2485 02ae 01       		.byte	0x1
 2486 02af F5       		.byte	0xf5
 2487 02b0 A5000000 		.4byte	0xa5
 2488 02b4 03       		.byte	0x3
 2489 02b5 10       		.uleb128 0x10
 2490 02b6 4B7000   		.ascii	"Kp\000"
 2491 02b9 01       		.byte	0x1
 2492 02ba F6       		.byte	0xf6
 2493 02bb 25000000 		.4byte	0x25
 2494 02bf 04       		.byte	0x4
 2495 02c0 10       		.uleb128 0x10
 2496 02c1 4B6900   		.ascii	"Ki\000"
 2497 02c4 01       		.byte	0x1
 2498 02c5 F7       		.byte	0xf7
 2499 02c6 25000000 		.4byte	0x25
 2500 02ca 08       		.byte	0x8
 2501 02cb 10       		.uleb128 0x10
 2502 02cc 4B6400   		.ascii	"Kd\000"
 2503 02cf 01       		.byte	0x1
 2504 02d0 F8       		.byte	0xf8
 2505 02d1 25000000 		.4byte	0x25
 2506 02d5 0C       		.byte	0xc
 2507 02d6 0F       		.uleb128 0xf
 2508 02d7 DE000000 		.4byte	.LASF61
 2509 02db 01       		.byte	0x1
 2510 02dc F9       		.byte	0xf9
 2511 02dd A5000000 		.4byte	0xa5
 2512 02e1 10       		.byte	0x10
 2513 02e2 00       		.byte	0
 2514 02e3 04       		.uleb128 0x4
 2515 02e4 F1060000 		.4byte	.LASF62
 2516 02e8 01       		.byte	0x1
 2517 02e9 FA       		.byte	0xfa
 2518 02ea 7D020000 		.4byte	0x27d
 2519 02ee 0E       		.uleb128 0xe
 2520 02ef 0A       		.byte	0xa
 2521 02f0 01       		.byte	0x1
 2522 02f1 FD       		.byte	0xfd
 2523 02f2 50030000 		.4byte	0x350
 2524 02f6 0F       		.uleb128 0xf
 2525 02f7 BA010000 		.4byte	.LASF56
 2526 02fb 01       		.byte	0x1
 2527 02fc FE       		.byte	0xfe
 2528 02fd A5000000 		.4byte	0xa5
 2529 0301 00       		.byte	0
 2530 0302 0F       		.uleb128 0xf
 2531 0303 BE050000 		.4byte	.LASF57
 2532 0307 01       		.byte	0x1
 2533 0308 FF       		.byte	0xff
 2534 0309 A5000000 		.4byte	0xa5
 2535 030d 01       		.byte	0x1
 2536 030e 11       		.uleb128 0x11
 2537 030f 77040000 		.4byte	.LASF58
 2538 0313 01       		.byte	0x1
 2539 0314 0001     		.2byte	0x100
 2540 0316 A5000000 		.4byte	0xa5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 73


 2541 031a 02       		.byte	0x2
 2542 031b 11       		.uleb128 0x11
 2543 031c 45020000 		.4byte	.LASF63
 2544 0320 01       		.byte	0x1
 2545 0321 0101     		.2byte	0x101
 2546 0323 A5000000 		.4byte	0xa5
 2547 0327 03       		.byte	0x3
 2548 0328 11       		.uleb128 0x11
 2549 0329 9E070000 		.4byte	.LASF64
 2550 032d 01       		.byte	0x1
 2551 032e 0201     		.2byte	0x102
 2552 0330 BD000000 		.4byte	0xbd
 2553 0334 04       		.byte	0x4
 2554 0335 12       		.uleb128 0x12
 2555 0336 6A6F6700 		.ascii	"jog\000"
 2556 033a 01       		.byte	0x1
 2557 033b 0301     		.2byte	0x103
 2558 033d C9000000 		.4byte	0xc9
 2559 0341 08       		.byte	0x8
 2560 0342 11       		.uleb128 0x11
 2561 0343 97000000 		.4byte	.LASF65
 2562 0347 01       		.byte	0x1
 2563 0348 0401     		.2byte	0x104
 2564 034a A5000000 		.4byte	0xa5
 2565 034e 09       		.byte	0x9
 2566 034f 00       		.byte	0
 2567 0350 05       		.uleb128 0x5
 2568 0351 82010000 		.4byte	.LASF66
 2569 0355 01       		.byte	0x1
 2570 0356 0501     		.2byte	0x105
 2571 0358 EE020000 		.4byte	0x2ee
 2572 035c 13       		.uleb128 0x13
 2573 035d 1E       		.byte	0x1e
 2574 035e 01       		.byte	0x1
 2575 035f 0A01     		.2byte	0x10a
 2576 0361 96030000 		.4byte	0x396
 2577 0365 14       		.uleb128 0x14
 2578 0366 62756600 		.ascii	"buf\000"
 2579 036a 01       		.byte	0x1
 2580 036b 0B01     		.2byte	0x10b
 2581 036d 96030000 		.4byte	0x396
 2582 0371 15       		.uleb128 0x15
 2583 0372 2C040000 		.4byte	.LASF67
 2584 0376 01       		.byte	0x1
 2585 0377 0C01     		.2byte	0x10c
 2586 0379 72020000 		.4byte	0x272
 2587 037d 15       		.uleb128 0x15
 2588 037e C8060000 		.4byte	.LASF68
 2589 0382 01       		.byte	0x1
 2590 0383 0D01     		.2byte	0x10d
 2591 0385 E3020000 		.4byte	0x2e3
 2592 0389 15       		.uleb128 0x15
 2593 038a A0040000 		.4byte	.LASF69
 2594 038e 01       		.byte	0x1
 2595 038f 0E01     		.2byte	0x10e
 2596 0391 50030000 		.4byte	0x350
 2597 0395 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 74


 2598 0396 16       		.uleb128 0x16
 2599 0397 A5000000 		.4byte	0xa5
 2600 039b A6030000 		.4byte	0x3a6
 2601 039f 17       		.uleb128 0x17
 2602 03a0 1D010000 		.4byte	0x11d
 2603 03a4 1D       		.byte	0x1d
 2604 03a5 00       		.byte	0
 2605 03a6 18       		.uleb128 0x18
 2606 03a7 12       		.byte	0x12
 2607 03a8 01       		.byte	0x1
 2608 03a9 1201     		.2byte	0x112
 2609 03ab 32040000 		.4byte	0x432
 2610 03af 11       		.uleb128 0x11
 2611 03b0 BA010000 		.4byte	.LASF56
 2612 03b4 01       		.byte	0x1
 2613 03b5 1301     		.2byte	0x113
 2614 03b7 A5000000 		.4byte	0xa5
 2615 03bb 00       		.byte	0
 2616 03bc 11       		.uleb128 0x11
 2617 03bd BE050000 		.4byte	.LASF57
 2618 03c1 01       		.byte	0x1
 2619 03c2 1401     		.2byte	0x114
 2620 03c4 A5000000 		.4byte	0xa5
 2621 03c8 01       		.byte	0x1
 2622 03c9 11       		.uleb128 0x11
 2623 03ca 77040000 		.4byte	.LASF58
 2624 03ce 01       		.byte	0x1
 2625 03cf 1501     		.2byte	0x115
 2626 03d1 A5000000 		.4byte	0xa5
 2627 03d5 02       		.byte	0x2
 2628 03d6 11       		.uleb128 0x11
 2629 03d7 9B090000 		.4byte	.LASF70
 2630 03db 01       		.byte	0x1
 2631 03dc 1601     		.2byte	0x116
 2632 03de A5000000 		.4byte	0xa5
 2633 03e2 03       		.byte	0x3
 2634 03e3 11       		.uleb128 0x11
 2635 03e4 7F0A0000 		.4byte	.LASF71
 2636 03e8 01       		.byte	0x1
 2637 03e9 1701     		.2byte	0x117
 2638 03eb A5000000 		.4byte	0xa5
 2639 03ef 04       		.byte	0x4
 2640 03f0 11       		.uleb128 0x11
 2641 03f1 B8060000 		.4byte	.LASF60
 2642 03f5 01       		.byte	0x1
 2643 03f6 1801     		.2byte	0x118
 2644 03f8 A5000000 		.4byte	0xa5
 2645 03fc 05       		.byte	0x5
 2646 03fd 11       		.uleb128 0x11
 2647 03fe AE050000 		.4byte	.LASF72
 2648 0402 01       		.byte	0x1
 2649 0403 1901     		.2byte	0x119
 2650 0405 B1000000 		.4byte	0xb1
 2651 0409 06       		.byte	0x6
 2652 040a 11       		.uleb128 0x11
 2653 040b 080A0000 		.4byte	.LASF73
 2654 040f 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 75


 2655 0410 1A01     		.2byte	0x11a
 2656 0412 B1000000 		.4byte	0xb1
 2657 0416 08       		.byte	0x8
 2658 0417 11       		.uleb128 0x11
 2659 0418 930A0000 		.4byte	.LASF74
 2660 041c 01       		.byte	0x1
 2661 041d 1B01     		.2byte	0x11b
 2662 041f BD000000 		.4byte	0xbd
 2663 0423 0A       		.byte	0xa
 2664 0424 12       		.uleb128 0x12
 2665 0425 70776D00 		.ascii	"pwm\000"
 2666 0429 01       		.byte	0x1
 2667 042a 1C01     		.2byte	0x11c
 2668 042c 25000000 		.4byte	0x25
 2669 0430 0E       		.byte	0xe
 2670 0431 00       		.byte	0
 2671 0432 05       		.uleb128 0x5
 2672 0433 92070000 		.4byte	.LASF75
 2673 0437 01       		.byte	0x1
 2674 0438 1D01     		.2byte	0x11d
 2675 043a A6030000 		.4byte	0x3a6
 2676 043e 13       		.uleb128 0x13
 2677 043f 1E       		.byte	0x1e
 2678 0440 01       		.byte	0x1
 2679 0441 2001     		.2byte	0x120
 2680 0443 60040000 		.4byte	0x460
 2681 0447 14       		.uleb128 0x14
 2682 0448 62756600 		.ascii	"buf\000"
 2683 044c 01       		.byte	0x1
 2684 044d 2101     		.2byte	0x121
 2685 044f 96030000 		.4byte	0x396
 2686 0453 14       		.uleb128 0x14
 2687 0454 6D736700 		.ascii	"msg\000"
 2688 0458 01       		.byte	0x1
 2689 0459 2201     		.2byte	0x122
 2690 045b 32040000 		.4byte	0x432
 2691 045f 00       		.byte	0
 2692 0460 19       		.uleb128 0x19
 2693 0461 01       		.byte	0x1
 2694 0462 5A000000 		.4byte	0x5a
 2695 0466 01       		.byte	0x1
 2696 0467 2601     		.2byte	0x126
 2697 0469 7A040000 		.4byte	0x47a
 2698 046d 0D       		.uleb128 0xd
 2699 046e 33000000 		.4byte	.LASF76
 2700 0472 00       		.byte	0
 2701 0473 0D       		.uleb128 0xd
 2702 0474 CA050000 		.4byte	.LASF77
 2703 0478 01       		.byte	0x1
 2704 0479 00       		.byte	0
 2705 047a 05       		.uleb128 0x5
 2706 047b FD000000 		.4byte	.LASF78
 2707 047f 01       		.byte	0x1
 2708 0480 2901     		.2byte	0x129
 2709 0482 60040000 		.4byte	0x460
 2710 0486 1A       		.uleb128 0x1a
 2711 0487 850A0000 		.4byte	.LASF79
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 76


 2712 048b 01       		.byte	0x1
 2713 048c A504     		.2byte	0x4a5
 2714 048e 00000000 		.4byte	.LFB46
 2715 0492 18000000 		.4byte	.LFE46-.LFB46
 2716 0496 01       		.uleb128 0x1
 2717 0497 9C       		.byte	0x9c
 2718 0498 D1040000 		.4byte	0x4d1
 2719 049c 1B       		.uleb128 0x1b
 2720 049d 06000000 		.4byte	.LVL0
 2721 04a1 5C120000 		.4byte	0x125c
 2722 04a5 1B       		.uleb128 0x1b
 2723 04a6 0A000000 		.4byte	.LVL1
 2724 04aa 67120000 		.4byte	0x1267
 2725 04ae 1C       		.uleb128 0x1c
 2726 04af 10000000 		.4byte	.LVL2
 2727 04b3 72120000 		.4byte	0x1272
 2728 04b7 C1040000 		.4byte	0x4c1
 2729 04bb 1D       		.uleb128 0x1d
 2730 04bc 01       		.uleb128 0x1
 2731 04bd 50       		.byte	0x50
 2732 04be 01       		.uleb128 0x1
 2733 04bf 30       		.byte	0x30
 2734 04c0 00       		.byte	0
 2735 04c1 1E       		.uleb128 0x1e
 2736 04c2 16000000 		.4byte	.LVL3
 2737 04c6 7D120000 		.4byte	0x127d
 2738 04ca 1D       		.uleb128 0x1d
 2739 04cb 01       		.uleb128 0x1
 2740 04cc 50       		.byte	0x50
 2741 04cd 01       		.uleb128 0x1
 2742 04ce 30       		.byte	0x30
 2743 04cf 00       		.byte	0
 2744 04d0 00       		.byte	0
 2745 04d1 1A       		.uleb128 0x1a
 2746 04d2 EE000000 		.4byte	.LASF80
 2747 04d6 01       		.byte	0x1
 2748 04d7 BF04     		.2byte	0x4bf
 2749 04d9 00000000 		.4byte	.LFB47
 2750 04dd 12000000 		.4byte	.LFE47-.LFB47
 2751 04e1 01       		.uleb128 0x1
 2752 04e2 9C       		.byte	0x9c
 2753 04e3 09050000 		.4byte	0x509
 2754 04e7 1B       		.uleb128 0x1b
 2755 04e8 06000000 		.4byte	.LVL4
 2756 04ec 88120000 		.4byte	0x1288
 2757 04f0 1B       		.uleb128 0x1b
 2758 04f1 0A000000 		.4byte	.LVL5
 2759 04f5 93120000 		.4byte	0x1293
 2760 04f9 1E       		.uleb128 0x1e
 2761 04fa 10000000 		.4byte	.LVL6
 2762 04fe 72120000 		.4byte	0x1272
 2763 0502 1D       		.uleb128 0x1d
 2764 0503 01       		.uleb128 0x1
 2765 0504 50       		.byte	0x50
 2766 0505 01       		.uleb128 0x1
 2767 0506 30       		.byte	0x30
 2768 0507 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 77


 2769 0508 00       		.byte	0
 2770 0509 1A       		.uleb128 0x1a
 2771 050a 28060000 		.4byte	.LASF81
 2772 050e 01       		.byte	0x1
 2773 050f D604     		.2byte	0x4d6
 2774 0511 00000000 		.4byte	.LFB48
 2775 0515 5C000000 		.4byte	.LFE48-.LFB48
 2776 0519 01       		.uleb128 0x1
 2777 051a 9C       		.byte	0x9c
 2778 051b 85050000 		.4byte	0x585
 2779 051f 1F       		.uleb128 0x1f
 2780 0520 6900     		.ascii	"i\000"
 2781 0522 01       		.byte	0x1
 2782 0523 D804     		.2byte	0x4d8
 2783 0525 BD000000 		.4byte	0xbd
 2784 0529 00000000 		.4byte	.LLST0
 2785 052d 1B       		.uleb128 0x1b
 2786 052e 06000000 		.4byte	.LVL7
 2787 0532 9E120000 		.4byte	0x129e
 2788 0536 1B       		.uleb128 0x1b
 2789 0537 0A000000 		.4byte	.LVL8
 2790 053b A9120000 		.4byte	0x12a9
 2791 053f 1B       		.uleb128 0x1b
 2792 0540 12000000 		.4byte	.LVL9
 2793 0544 B4120000 		.4byte	0x12b4
 2794 0548 1C       		.uleb128 0x1c
 2795 0549 28000000 		.4byte	.LVL10
 2796 054d C0120000 		.4byte	0x12c0
 2797 0551 69050000 		.4byte	0x569
 2798 0555 1D       		.uleb128 0x1d
 2799 0556 01       		.uleb128 0x1
 2800 0557 50       		.byte	0x50
 2801 0558 05       		.uleb128 0x5
 2802 0559 03       		.byte	0x3
 2803 055a 00000000 		.4byte	txMessage
 2804 055e 1D       		.uleb128 0x1d
 2805 055f 01       		.uleb128 0x1
 2806 0560 51       		.byte	0x51
 2807 0561 01       		.uleb128 0x1
 2808 0562 30       		.byte	0x30
 2809 0563 1D       		.uleb128 0x1d
 2810 0564 01       		.uleb128 0x1
 2811 0565 52       		.byte	0x52
 2812 0566 01       		.uleb128 0x1
 2813 0567 4E       		.byte	0x4e
 2814 0568 00       		.byte	0
 2815 0569 1B       		.uleb128 0x1b
 2816 056a 30000000 		.4byte	.LVL12
 2817 056e C9120000 		.4byte	0x12c9
 2818 0572 1B       		.uleb128 0x1b
 2819 0573 3E000000 		.4byte	.LVL14
 2820 0577 D5120000 		.4byte	0x12d5
 2821 057b 1B       		.uleb128 0x1b
 2822 057c 42000000 		.4byte	.LVL15
 2823 0580 E1120000 		.4byte	0x12e1
 2824 0584 00       		.byte	0
 2825 0585 1A       		.uleb128 0x1a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 78


 2826 0586 03020000 		.4byte	.LASF82
 2827 058a 01       		.byte	0x1
 2828 058b 3D01     		.2byte	0x13d
 2829 058d 00000000 		.4byte	.LFB32
 2830 0591 28000000 		.4byte	.LFE32-.LFB32
 2831 0595 01       		.uleb128 0x1
 2832 0596 9C       		.byte	0x9c
 2833 0597 D1050000 		.4byte	0x5d1
 2834 059b 1C       		.uleb128 0x1c
 2835 059c 0A000000 		.4byte	.LVL17
 2836 05a0 ED120000 		.4byte	0x12ed
 2837 05a4 AE050000 		.4byte	0x5ae
 2838 05a8 1D       		.uleb128 0x1d
 2839 05a9 01       		.uleb128 0x1
 2840 05aa 50       		.byte	0x50
 2841 05ab 01       		.uleb128 0x1
 2842 05ac 3B       		.byte	0x3b
 2843 05ad 00       		.byte	0
 2844 05ae 1C       		.uleb128 0x1c
 2845 05af 12000000 		.4byte	.LVL18
 2846 05b3 ED120000 		.4byte	0x12ed
 2847 05b7 C1050000 		.4byte	0x5c1
 2848 05bb 1D       		.uleb128 0x1d
 2849 05bc 01       		.uleb128 0x1
 2850 05bd 50       		.byte	0x50
 2851 05be 01       		.uleb128 0x1
 2852 05bf 3E       		.byte	0x3e
 2853 05c0 00       		.byte	0
 2854 05c1 1E       		.uleb128 0x1e
 2855 05c2 1A000000 		.4byte	.LVL19
 2856 05c6 ED120000 		.4byte	0x12ed
 2857 05ca 1D       		.uleb128 0x1d
 2858 05cb 01       		.uleb128 0x1
 2859 05cc 50       		.byte	0x50
 2860 05cd 01       		.uleb128 0x1
 2861 05ce 3F       		.byte	0x3f
 2862 05cf 00       		.byte	0
 2863 05d0 00       		.byte	0
 2864 05d1 1A       		.uleb128 0x1a
 2865 05d2 95010000 		.4byte	.LASF83
 2866 05d6 01       		.byte	0x1
 2867 05d7 5501     		.2byte	0x155
 2868 05d9 00000000 		.4byte	.LFB33
 2869 05dd 1C000000 		.4byte	.LFE33-.LFB33
 2870 05e1 01       		.uleb128 0x1
 2871 05e2 9C       		.byte	0x9c
 2872 05e3 F8050000 		.4byte	0x5f8
 2873 05e7 20       		.uleb128 0x20
 2874 05e8 7F0A0000 		.4byte	.LASF71
 2875 05ec 01       		.byte	0x1
 2876 05ed 5501     		.2byte	0x155
 2877 05ef 04020000 		.4byte	0x204
 2878 05f3 1F000000 		.4byte	.LLST1
 2879 05f7 00       		.byte	0
 2880 05f8 21       		.uleb128 0x21
 2881 05f9 00000000 		.4byte	.LASF88
 2882 05fd 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 79


 2883 05fe 8A01     		.2byte	0x18a
 2884 0600 00000000 		.4byte	.LFB35
 2885 0604 F0000000 		.4byte	.LFE35-.LFB35
 2886 0608 01       		.uleb128 0x1
 2887 0609 9C       		.byte	0x9c
 2888 060a EF070000 		.4byte	0x7ef
 2889 060e 22       		.uleb128 0x22
 2890 060f 61726700 		.ascii	"arg\000"
 2891 0613 01       		.byte	0x1
 2892 0614 8A01     		.2byte	0x18a
 2893 0616 24010000 		.4byte	0x124
 2894 061a 40000000 		.4byte	.LLST2
 2895 061e 23       		.uleb128 0x23
 2896 061f 65727200 		.ascii	"err\000"
 2897 0623 01       		.byte	0x1
 2898 0624 8D01     		.2byte	0x18d
 2899 0626 05010000 		.4byte	0x105
 2900 062a 02       		.uleb128 0x2
 2901 062b 91       		.byte	0x91
 2902 062c 74       		.sleb128 -12
 2903 062d 24       		.uleb128 0x24
 2904 062e 3D020000 		.4byte	.LASF84
 2905 0632 01       		.byte	0x1
 2906 0633 8E01     		.2byte	0x18e
 2907 0635 A5000000 		.4byte	0xa5
 2908 0639 61000000 		.4byte	.LLST3
 2909 063d 24       		.uleb128 0x24
 2910 063e A1090000 		.4byte	.LASF85
 2911 0642 01       		.byte	0x1
 2912 0643 8F01     		.2byte	0x18f
 2913 0645 A5000000 		.4byte	0xa5
 2914 0649 76000000 		.4byte	.LLST4
 2915 064d 25       		.uleb128 0x25
 2916 064e 9F030000 		.4byte	.LASF86
 2917 0652 01       		.byte	0x1
 2918 0653 9201     		.2byte	0x192
 2919 0655 F4000000 		.4byte	0xf4
 2920 0659 02       		.uleb128 0x2
 2921 065a 91       		.byte	0x91
 2922 065b 72       		.sleb128 -14
 2923 065c 1F       		.uleb128 0x1f
 2924 065d 666F6F00 		.ascii	"foo\000"
 2925 0661 01       		.byte	0x1
 2926 0662 9301     		.2byte	0x193
 2927 0664 A5000000 		.4byte	0xa5
 2928 0668 8A000000 		.4byte	.LLST5
 2929 066c 1C       		.uleb128 0x1c
 2930 066d 0A000000 		.4byte	.LVL25
 2931 0671 F8120000 		.4byte	0x12f8
 2932 0675 7F060000 		.4byte	0x67f
 2933 0679 1D       		.uleb128 0x1d
 2934 067a 01       		.uleb128 0x1
 2935 067b 50       		.byte	0x50
 2936 067c 01       		.uleb128 0x1
 2937 067d 30       		.byte	0x30
 2938 067e 00       		.byte	0
 2939 067f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 80


 2940 0680 16000000 		.4byte	.LVL27
 2941 0684 04130000 		.4byte	0x1304
 2942 0688 93060000 		.4byte	0x693
 2943 068c 1D       		.uleb128 0x1d
 2944 068d 01       		.uleb128 0x1
 2945 068e 50       		.byte	0x50
 2946 068f 02       		.uleb128 0x2
 2947 0690 74       		.byte	0x74
 2948 0691 00       		.sleb128 0
 2949 0692 00       		.byte	0
 2950 0693 1C       		.uleb128 0x1c
 2951 0694 1C000000 		.4byte	.LVL28
 2952 0698 0F130000 		.4byte	0x130f
 2953 069c A7060000 		.4byte	0x6a7
 2954 06a0 1D       		.uleb128 0x1d
 2955 06a1 01       		.uleb128 0x1
 2956 06a2 50       		.byte	0x50
 2957 06a3 02       		.uleb128 0x2
 2958 06a4 74       		.byte	0x74
 2959 06a5 00       		.sleb128 0
 2960 06a6 00       		.byte	0
 2961 06a7 1C       		.uleb128 0x1c
 2962 06a8 30000000 		.4byte	.LVL32
 2963 06ac 1A130000 		.4byte	0x131a
 2964 06b0 C5060000 		.4byte	0x6c5
 2965 06b4 1D       		.uleb128 0x1d
 2966 06b5 01       		.uleb128 0x1
 2967 06b6 50       		.byte	0x50
 2968 06b7 02       		.uleb128 0x2
 2969 06b8 08       		.byte	0x8
 2970 06b9 40       		.byte	0x40
 2971 06ba 1D       		.uleb128 0x1d
 2972 06bb 01       		.uleb128 0x1
 2973 06bc 51       		.byte	0x51
 2974 06bd 01       		.uleb128 0x1
 2975 06be 30       		.byte	0x30
 2976 06bf 1D       		.uleb128 0x1d
 2977 06c0 01       		.uleb128 0x1
 2978 06c1 52       		.byte	0x52
 2979 06c2 01       		.uleb128 0x1
 2980 06c3 3A       		.byte	0x3a
 2981 06c4 00       		.byte	0
 2982 06c5 1C       		.uleb128 0x1c
 2983 06c6 40000000 		.4byte	.LVL33
 2984 06ca 26130000 		.4byte	0x1326
 2985 06ce DD060000 		.4byte	0x6dd
 2986 06d2 1D       		.uleb128 0x1d
 2987 06d3 01       		.uleb128 0x1
 2988 06d4 50       		.byte	0x50
 2989 06d5 01       		.uleb128 0x1
 2990 06d6 35       		.byte	0x35
 2991 06d7 1D       		.uleb128 0x1d
 2992 06d8 01       		.uleb128 0x1
 2993 06d9 51       		.byte	0x51
 2994 06da 01       		.uleb128 0x1
 2995 06db 3A       		.byte	0x3a
 2996 06dc 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 81


 2997 06dd 1C       		.uleb128 0x1c
 2998 06de 48000000 		.4byte	.LVL34
 2999 06e2 26130000 		.4byte	0x1326
 3000 06e6 F6060000 		.4byte	0x6f6
 3001 06ea 1D       		.uleb128 0x1d
 3002 06eb 01       		.uleb128 0x1
 3003 06ec 50       		.byte	0x50
 3004 06ed 02       		.uleb128 0x2
 3005 06ee 08       		.byte	0x8
 3006 06ef 20       		.byte	0x20
 3007 06f0 1D       		.uleb128 0x1d
 3008 06f1 01       		.uleb128 0x1
 3009 06f2 51       		.byte	0x51
 3010 06f3 01       		.uleb128 0x1
 3011 06f4 3A       		.byte	0x3a
 3012 06f5 00       		.byte	0
 3013 06f6 1C       		.uleb128 0x1c
 3014 06f7 50000000 		.4byte	.LVL35
 3015 06fb 26130000 		.4byte	0x1326
 3016 06ff 0E070000 		.4byte	0x70e
 3017 0703 1D       		.uleb128 0x1d
 3018 0704 01       		.uleb128 0x1
 3019 0705 50       		.byte	0x50
 3020 0706 01       		.uleb128 0x1
 3021 0707 30       		.byte	0x30
 3022 0708 1D       		.uleb128 0x1d
 3023 0709 01       		.uleb128 0x1
 3024 070a 51       		.byte	0x51
 3025 070b 01       		.uleb128 0x1
 3026 070c 3A       		.byte	0x3a
 3027 070d 00       		.byte	0
 3028 070e 1C       		.uleb128 0x1c
 3029 070f 56000000 		.4byte	.LVL36
 3030 0713 32130000 		.4byte	0x1332
 3031 0717 21070000 		.4byte	0x721
 3032 071b 1D       		.uleb128 0x1d
 3033 071c 01       		.uleb128 0x1
 3034 071d 50       		.byte	0x50
 3035 071e 01       		.uleb128 0x1
 3036 071f 3A       		.byte	0x3a
 3037 0720 00       		.byte	0
 3038 0721 1C       		.uleb128 0x1c
 3039 0722 64000000 		.4byte	.LVL38
 3040 0726 D1050000 		.4byte	0x5d1
 3041 072a 34070000 		.4byte	0x734
 3042 072e 1D       		.uleb128 0x1d
 3043 072f 01       		.uleb128 0x1
 3044 0730 50       		.byte	0x50
 3045 0731 01       		.uleb128 0x1
 3046 0732 38       		.byte	0x38
 3047 0733 00       		.byte	0
 3048 0734 1C       		.uleb128 0x1c
 3049 0735 6E000000 		.4byte	.LVL39
 3050 0739 1A130000 		.4byte	0x131a
 3051 073d 52070000 		.4byte	0x752
 3052 0741 1D       		.uleb128 0x1d
 3053 0742 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 82


 3054 0743 50       		.byte	0x50
 3055 0744 02       		.uleb128 0x2
 3056 0745 08       		.byte	0x8
 3057 0746 40       		.byte	0x40
 3058 0747 1D       		.uleb128 0x1d
 3059 0748 01       		.uleb128 0x1
 3060 0749 51       		.byte	0x51
 3061 074a 01       		.uleb128 0x1
 3062 074b 30       		.byte	0x30
 3063 074c 1D       		.uleb128 0x1d
 3064 074d 01       		.uleb128 0x1
 3065 074e 52       		.byte	0x52
 3066 074f 01       		.uleb128 0x1
 3067 0750 3A       		.byte	0x3a
 3068 0751 00       		.byte	0
 3069 0752 1C       		.uleb128 0x1c
 3070 0753 7E000000 		.4byte	.LVL40
 3071 0757 26130000 		.4byte	0x1326
 3072 075b 6A070000 		.4byte	0x76a
 3073 075f 1D       		.uleb128 0x1d
 3074 0760 01       		.uleb128 0x1
 3075 0761 50       		.byte	0x50
 3076 0762 01       		.uleb128 0x1
 3077 0763 34       		.byte	0x34
 3078 0764 1D       		.uleb128 0x1d
 3079 0765 01       		.uleb128 0x1
 3080 0766 51       		.byte	0x51
 3081 0767 01       		.uleb128 0x1
 3082 0768 3A       		.byte	0x3a
 3083 0769 00       		.byte	0
 3084 076a 1C       		.uleb128 0x1c
 3085 076b 84000000 		.4byte	.LVL41
 3086 076f 32130000 		.4byte	0x1332
 3087 0773 7D070000 		.4byte	0x77d
 3088 0777 1D       		.uleb128 0x1d
 3089 0778 01       		.uleb128 0x1
 3090 0779 50       		.byte	0x50
 3091 077a 01       		.uleb128 0x1
 3092 077b 3A       		.byte	0x3a
 3093 077c 00       		.byte	0
 3094 077d 1C       		.uleb128 0x1c
 3095 077e 90000000 		.4byte	.LVL42
 3096 0782 3E130000 		.4byte	0x133e
 3097 0786 A4070000 		.4byte	0x7a4
 3098 078a 1D       		.uleb128 0x1d
 3099 078b 01       		.uleb128 0x1
 3100 078c 50       		.byte	0x50
 3101 078d 02       		.uleb128 0x2
 3102 078e 08       		.byte	0x8
 3103 078f 40       		.byte	0x40
 3104 0790 1D       		.uleb128 0x1d
 3105 0791 01       		.uleb128 0x1
 3106 0792 51       		.byte	0x51
 3107 0793 05       		.uleb128 0x5
 3108 0794 03       		.byte	0x3
 3109 0795 00000000 		.4byte	CurrentI2Cinbuf
 3110 0799 1D       		.uleb128 0x1d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 83


 3111 079a 01       		.uleb128 0x1
 3112 079b 52       		.byte	0x52
 3113 079c 01       		.uleb128 0x1
 3114 079d 35       		.byte	0x35
 3115 079e 1D       		.uleb128 0x1d
 3116 079f 01       		.uleb128 0x1
 3117 07a0 53       		.byte	0x53
 3118 07a1 01       		.uleb128 0x1
 3119 07a2 31       		.byte	0x31
 3120 07a3 00       		.byte	0
 3121 07a4 1C       		.uleb128 0x1c
 3122 07a5 B6000000 		.4byte	.LVL43
 3123 07a9 D1050000 		.4byte	0x5d1
 3124 07ad B7070000 		.4byte	0x7b7
 3125 07b1 1D       		.uleb128 0x1d
 3126 07b2 01       		.uleb128 0x1
 3127 07b3 50       		.byte	0x50
 3128 07b4 01       		.uleb128 0x1
 3129 07b5 38       		.byte	0x38
 3130 07b6 00       		.byte	0
 3131 07b7 1C       		.uleb128 0x1c
 3132 07b8 C4000000 		.4byte	.LVL44
 3133 07bc D1050000 		.4byte	0x5d1
 3134 07c0 CA070000 		.4byte	0x7ca
 3135 07c4 1D       		.uleb128 0x1d
 3136 07c5 01       		.uleb128 0x1
 3137 07c6 50       		.byte	0x50
 3138 07c7 01       		.uleb128 0x1
 3139 07c8 38       		.byte	0x38
 3140 07c9 00       		.byte	0
 3141 07ca 1C       		.uleb128 0x1c
 3142 07cb D8000000 		.4byte	.LVL45
 3143 07cf 4A130000 		.4byte	0x134a
 3144 07d3 DF070000 		.4byte	0x7df
 3145 07d7 1D       		.uleb128 0x1d
 3146 07d8 01       		.uleb128 0x1
 3147 07d9 50       		.byte	0x50
 3148 07da 03       		.uleb128 0x3
 3149 07db 0A       		.byte	0xa
 3150 07dc F401     		.2byte	0x1f4
 3151 07de 00       		.byte	0
 3152 07df 1E       		.uleb128 0x1e
 3153 07e0 DE000000 		.4byte	.LVL46
 3154 07e4 F8120000 		.4byte	0x12f8
 3155 07e8 1D       		.uleb128 0x1d
 3156 07e9 01       		.uleb128 0x1
 3157 07ea 50       		.byte	0x50
 3158 07eb 01       		.uleb128 0x1
 3159 07ec 30       		.byte	0x30
 3160 07ed 00       		.byte	0
 3161 07ee 00       		.byte	0
 3162 07ef 1A       		.uleb128 0x1a
 3163 07f0 21010000 		.4byte	.LASF87
 3164 07f4 01       		.byte	0x1
 3165 07f5 7001     		.2byte	0x170
 3166 07f7 00000000 		.4byte	.LFB34
 3167 07fb 1C000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 84


 3168 07ff 01       		.uleb128 0x1
 3169 0800 9C       		.byte	0x9c
 3170 0801 14080000 		.4byte	0x814
 3171 0805 26       		.uleb128 0x26
 3172 0806 7F0A0000 		.4byte	.LASF71
 3173 080a 01       		.byte	0x1
 3174 080b 7001     		.2byte	0x170
 3175 080d 04020000 		.4byte	0x204
 3176 0811 01       		.uleb128 0x1
 3177 0812 50       		.byte	0x50
 3178 0813 00       		.byte	0
 3179 0814 21       		.uleb128 0x21
 3180 0815 39080000 		.4byte	.LASF89
 3181 0819 01       		.byte	0x1
 3182 081a E001     		.2byte	0x1e0
 3183 081c 00000000 		.4byte	.LFB36
 3184 0820 5C020000 		.4byte	.LFE36-.LFB36
 3185 0824 01       		.uleb128 0x1
 3186 0825 9C       		.byte	0x9c
 3187 0826 42090000 		.4byte	0x942
 3188 082a 22       		.uleb128 0x22
 3189 082b 61726700 		.ascii	"arg\000"
 3190 082f 01       		.byte	0x1
 3191 0830 E001     		.2byte	0x1e0
 3192 0832 24010000 		.4byte	0x124
 3193 0836 B4000000 		.4byte	.LLST6
 3194 083a 24       		.uleb128 0x24
 3195 083b 77040000 		.4byte	.LASF58
 3196 083f 01       		.byte	0x1
 3197 0840 E201     		.2byte	0x1e2
 3198 0842 3A020000 		.4byte	0x23a
 3199 0846 D5000000 		.4byte	.LLST7
 3200 084a 24       		.uleb128 0x24
 3201 084b BE050000 		.4byte	.LASF57
 3202 084f 01       		.byte	0x1
 3203 0850 E301     		.2byte	0x1e3
 3204 0852 A5000000 		.4byte	0xa5
 3205 0856 E8000000 		.4byte	.LLST8
 3206 085a 1F       		.uleb128 0x1f
 3207 085b 6900     		.ascii	"i\000"
 3208 085d 01       		.byte	0x1
 3209 085e E401     		.2byte	0x1e4
 3210 0860 A5000000 		.4byte	0xa5
 3211 0864 06010000 		.4byte	.LLST9
 3212 0868 24       		.uleb128 0x24
 3213 0869 BA010000 		.4byte	.LASF56
 3214 086d 01       		.byte	0x1
 3215 086e E501     		.2byte	0x1e5
 3216 0870 A5000000 		.4byte	0xa5
 3217 0874 5D010000 		.4byte	.LLST10
 3218 0878 1C       		.uleb128 0x1c
 3219 0879 08000000 		.4byte	.LVL50
 3220 087d F8120000 		.4byte	0x12f8
 3221 0881 8B080000 		.4byte	0x88b
 3222 0885 1D       		.uleb128 0x1d
 3223 0886 01       		.uleb128 0x1
 3224 0887 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 85


 3225 0888 01       		.uleb128 0x1
 3226 0889 30       		.byte	0x30
 3227 088a 00       		.byte	0
 3228 088b 1C       		.uleb128 0x1c
 3229 088c 2A000000 		.4byte	.LVL51
 3230 0890 56130000 		.4byte	0x1356
 3231 0894 9E080000 		.4byte	0x89e
 3232 0898 1D       		.uleb128 0x1d
 3233 0899 01       		.uleb128 0x1
 3234 089a 51       		.byte	0x51
 3235 089b 01       		.uleb128 0x1
 3236 089c 34       		.byte	0x34
 3237 089d 00       		.byte	0
 3238 089e 1C       		.uleb128 0x1c
 3239 089f F6000000 		.4byte	.LVL66
 3240 08a3 EF070000 		.4byte	0x7ef
 3241 08a7 B1080000 		.4byte	0x8b1
 3242 08ab 1D       		.uleb128 0x1d
 3243 08ac 01       		.uleb128 0x1
 3244 08ad 50       		.byte	0x50
 3245 08ae 01       		.uleb128 0x1
 3246 08af 30       		.byte	0x30
 3247 08b0 00       		.byte	0
 3248 08b1 1B       		.uleb128 0x1b
 3249 08b2 26010000 		.4byte	.LVL70
 3250 08b6 62130000 		.4byte	0x1362
 3251 08ba 1C       		.uleb128 0x1c
 3252 08bb 4C010000 		.4byte	.LVL71
 3253 08bf 7D120000 		.4byte	0x127d
 3254 08c3 CD080000 		.4byte	0x8cd
 3255 08c7 1D       		.uleb128 0x1d
 3256 08c8 01       		.uleb128 0x1
 3257 08c9 50       		.byte	0x50
 3258 08ca 01       		.uleb128 0x1
 3259 08cb 30       		.byte	0x30
 3260 08cc 00       		.byte	0
 3261 08cd 1B       		.uleb128 0x1b
 3262 08ce 86010000 		.4byte	.LVL73
 3263 08d2 62130000 		.4byte	0x1362
 3264 08d6 1C       		.uleb128 0x1c
 3265 08d7 D4010000 		.4byte	.LVL81
 3266 08db 6D130000 		.4byte	0x136d
 3267 08df EF080000 		.4byte	0x8ef
 3268 08e3 1D       		.uleb128 0x1d
 3269 08e4 01       		.uleb128 0x1
 3270 08e5 50       		.byte	0x50
 3271 08e6 02       		.uleb128 0x2
 3272 08e7 74       		.byte	0x74
 3273 08e8 00       		.sleb128 0
 3274 08e9 1D       		.uleb128 0x1d
 3275 08ea 01       		.uleb128 0x1
 3276 08eb 51       		.byte	0x51
 3277 08ec 01       		.uleb128 0x1
 3278 08ed 4E       		.byte	0x4e
 3279 08ee 00       		.byte	0
 3280 08ef 1C       		.uleb128 0x1c
 3281 08f0 E8010000 		.4byte	.LVL82
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 86


 3282 08f4 EF070000 		.4byte	0x7ef
 3283 08f8 02090000 		.4byte	0x902
 3284 08fc 1D       		.uleb128 0x1d
 3285 08fd 01       		.uleb128 0x1
 3286 08fe 50       		.byte	0x50
 3287 08ff 01       		.uleb128 0x1
 3288 0900 30       		.byte	0x30
 3289 0901 00       		.byte	0
 3290 0902 1C       		.uleb128 0x1c
 3291 0903 F6010000 		.4byte	.LVL83
 3292 0907 79130000 		.4byte	0x1379
 3293 090b 1F090000 		.4byte	0x91f
 3294 090f 1D       		.uleb128 0x1d
 3295 0910 01       		.uleb128 0x1
 3296 0911 51       		.byte	0x51
 3297 0912 01       		.uleb128 0x1
 3298 0913 30       		.byte	0x30
 3299 0914 1D       		.uleb128 0x1d
 3300 0915 01       		.uleb128 0x1
 3301 0916 52       		.byte	0x52
 3302 0917 01       		.uleb128 0x1
 3303 0918 30       		.byte	0x30
 3304 0919 1D       		.uleb128 0x1d
 3305 091a 01       		.uleb128 0x1
 3306 091b 53       		.byte	0x53
 3307 091c 01       		.uleb128 0x1
 3308 091d 30       		.byte	0x30
 3309 091e 00       		.byte	0
 3310 091f 1C       		.uleb128 0x1c
 3311 0920 FC010000 		.4byte	.LVL84
 3312 0924 4A130000 		.4byte	0x134a
 3313 0928 32090000 		.4byte	0x932
 3314 092c 1D       		.uleb128 0x1d
 3315 092d 01       		.uleb128 0x1
 3316 092e 50       		.byte	0x50
 3317 092f 01       		.uleb128 0x1
 3318 0930 31       		.byte	0x31
 3319 0931 00       		.byte	0
 3320 0932 1E       		.uleb128 0x1e
 3321 0933 02020000 		.4byte	.LVL85
 3322 0937 F8120000 		.4byte	0x12f8
 3323 093b 1D       		.uleb128 0x1d
 3324 093c 01       		.uleb128 0x1
 3325 093d 50       		.byte	0x50
 3326 093e 01       		.uleb128 0x1
 3327 093f 30       		.byte	0x30
 3328 0940 00       		.byte	0
 3329 0941 00       		.byte	0
 3330 0942 27       		.uleb128 0x27
 3331 0943 40040000 		.4byte	.LASF90
 3332 0947 01       		.byte	0x1
 3333 0948 8902     		.2byte	0x289
 3334 094a 00000000 		.4byte	.LFB37
 3335 094e 78000000 		.4byte	.LFE37-.LFB37
 3336 0952 01       		.uleb128 0x1
 3337 0953 9C       		.byte	0x9c
 3338 0954 82090000 		.4byte	0x982
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 87


 3339 0958 20       		.uleb128 0x20
 3340 0959 56090000 		.4byte	.LASF91
 3341 095d 01       		.byte	0x1
 3342 095e 8902     		.2byte	0x289
 3343 0960 25000000 		.4byte	0x25
 3344 0964 BF010000 		.4byte	.LLST11
 3345 0968 24       		.uleb128 0x24
 3346 0969 59030000 		.4byte	.LASF92
 3347 096d 01       		.byte	0x1
 3348 096e 8B02     		.2byte	0x28b
 3349 0970 25000000 		.4byte	0x25
 3350 0974 ED010000 		.4byte	.LLST12
 3351 0978 1B       		.uleb128 0x1b
 3352 0979 68000000 		.4byte	.LVL101
 3353 097d 85130000 		.4byte	0x1385
 3354 0981 00       		.byte	0
 3355 0982 27       		.uleb128 0x27
 3356 0983 E5090000 		.4byte	.LASF93
 3357 0987 01       		.byte	0x1
 3358 0988 A802     		.2byte	0x2a8
 3359 098a 00000000 		.4byte	.LFB38
 3360 098e 58000000 		.4byte	.LFE38-.LFB38
 3361 0992 01       		.uleb128 0x1
 3362 0993 9C       		.byte	0x9c
 3363 0994 B2090000 		.4byte	0x9b2
 3364 0998 24       		.uleb128 0x24
 3365 0999 930A0000 		.4byte	.LASF74
 3366 099d 01       		.byte	0x1
 3367 099e AA02     		.2byte	0x2aa
 3368 09a0 BD000000 		.4byte	0xbd
 3369 09a4 21020000 		.4byte	.LLST13
 3370 09a8 1B       		.uleb128 0x1b
 3371 09a9 06000000 		.4byte	.LVL104
 3372 09ad 62130000 		.4byte	0x1362
 3373 09b1 00       		.byte	0
 3374 09b2 27       		.uleb128 0x27
 3375 09b3 6C060000 		.4byte	.LASF94
 3376 09b7 01       		.byte	0x1
 3377 09b8 C302     		.2byte	0x2c3
 3378 09ba 00000000 		.4byte	.LFB39
 3379 09be 44000000 		.4byte	.LFE39-.LFB39
 3380 09c2 01       		.uleb128 0x1
 3381 09c3 9C       		.byte	0x9c
 3382 09c4 230A0000 		.4byte	0xa23
 3383 09c8 20       		.uleb128 0x20
 3384 09c9 AA060000 		.4byte	.LASF95
 3385 09cd 01       		.byte	0x1
 3386 09ce C302     		.2byte	0x2c3
 3387 09d0 BD000000 		.4byte	0xbd
 3388 09d4 34020000 		.4byte	.LLST14
 3389 09d8 20       		.uleb128 0x20
 3390 09d9 AF000000 		.4byte	.LASF96
 3391 09dd 01       		.byte	0x1
 3392 09de C302     		.2byte	0x2c3
 3393 09e0 25000000 		.4byte	0x25
 3394 09e4 55020000 		.4byte	.LLST15
 3395 09e8 20       		.uleb128 0x20
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 88


 3396 09e9 A9000000 		.4byte	.LASF97
 3397 09ed 01       		.byte	0x1
 3398 09ee C302     		.2byte	0x2c3
 3399 09f0 25000000 		.4byte	0x25
 3400 09f4 83020000 		.4byte	.LLST16
 3401 09f8 20       		.uleb128 0x20
 3402 09f9 A3000000 		.4byte	.LASF98
 3403 09fd 01       		.byte	0x1
 3404 09fe C302     		.2byte	0x2c3
 3405 0a00 25000000 		.4byte	0x25
 3406 0a04 B1020000 		.4byte	.LLST17
 3407 0a08 28       		.uleb128 0x28
 3408 0a09 0C000000 		.4byte	.LBB2
 3409 0a0d 26000000 		.4byte	.LBE2-.LBB2
 3410 0a11 24       		.uleb128 0x24
 3411 0a12 34070000 		.4byte	.LASF99
 3412 0a16 01       		.byte	0x1
 3413 0a17 C702     		.2byte	0x2c7
 3414 0a19 25000000 		.4byte	0x25
 3415 0a1d DF020000 		.4byte	.LLST18
 3416 0a21 00       		.byte	0
 3417 0a22 00       		.byte	0
 3418 0a23 29       		.uleb128 0x29
 3419 0a24 9E060000 		.4byte	.LASF100
 3420 0a28 01       		.byte	0x1
 3421 0a29 D902     		.2byte	0x2d9
 3422 0a2b 25000000 		.4byte	0x25
 3423 0a2f 00000000 		.4byte	.LFB40
 3424 0a33 3C010000 		.4byte	.LFE40-.LFB40
 3425 0a37 01       		.uleb128 0x1
 3426 0a38 9C       		.byte	0x9c
 3427 0a39 B00A0000 		.4byte	0xab0
 3428 0a3d 22       		.uleb128 0x22
 3429 0a3e 6E6F7700 		.ascii	"now\000"
 3430 0a42 01       		.byte	0x1
 3431 0a43 D902     		.2byte	0x2d9
 3432 0a45 BD000000 		.4byte	0xbd
 3433 0a49 FD020000 		.4byte	.LLST19
 3434 0a4d 20       		.uleb128 0x20
 3435 0a4e 9E070000 		.4byte	.LASF64
 3436 0a52 01       		.byte	0x1
 3437 0a53 D902     		.2byte	0x2d9
 3438 0a55 BD000000 		.4byte	0xbd
 3439 0a59 3F030000 		.4byte	.LLST20
 3440 0a5d 24       		.uleb128 0x24
 3441 0a5e 0F010000 		.4byte	.LASF101
 3442 0a62 01       		.byte	0x1
 3443 0a63 DB02     		.2byte	0x2db
 3444 0a65 D5000000 		.4byte	0xd5
 3445 0a69 84030000 		.4byte	.LLST21
 3446 0a6d 24       		.uleb128 0x24
 3447 0a6e E7060000 		.4byte	.LASF102
 3448 0a72 01       		.byte	0x1
 3449 0a73 DB02     		.2byte	0x2db
 3450 0a75 D5000000 		.4byte	0xd5
 3451 0a79 B8030000 		.4byte	.LLST22
 3452 0a7d 24       		.uleb128 0x24
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 89


 3453 0a7e 37050000 		.4byte	.LASF103
 3454 0a82 01       		.byte	0x1
 3455 0a83 DC02     		.2byte	0x2dc
 3456 0a85 BD000000 		.4byte	0xbd
 3457 0a89 D6030000 		.4byte	.LLST23
 3458 0a8d 24       		.uleb128 0x24
 3459 0a8e 930A0000 		.4byte	.LASF74
 3460 0a92 01       		.byte	0x1
 3461 0a93 DD02     		.2byte	0x2dd
 3462 0a95 BD000000 		.4byte	0xbd
 3463 0a99 E9030000 		.4byte	.LLST24
 3464 0a9d 1B       		.uleb128 0x1b
 3465 0a9e 18000000 		.4byte	.LVL119
 3466 0aa2 62130000 		.4byte	0x1362
 3467 0aa6 1B       		.uleb128 0x1b
 3468 0aa7 38000000 		.4byte	.LVL123
 3469 0aab B2090000 		.4byte	0x9b2
 3470 0aaf 00       		.byte	0
 3471 0ab0 27       		.uleb128 0x27
 3472 0ab1 F2030000 		.4byte	.LASF104
 3473 0ab5 01       		.byte	0x1
 3474 0ab6 1B03     		.2byte	0x31b
 3475 0ab8 00000000 		.4byte	.LFB41
 3476 0abc 74000000 		.4byte	.LFE41-.LFB41
 3477 0ac0 01       		.uleb128 0x1
 3478 0ac1 9C       		.byte	0x9c
 3479 0ac2 E70A0000 		.4byte	0xae7
 3480 0ac6 22       		.uleb128 0x22
 3481 0ac7 4D696E00 		.ascii	"Min\000"
 3482 0acb 01       		.byte	0x1
 3483 0acc 1B03     		.2byte	0x31b
 3484 0ace 25000000 		.4byte	0x25
 3485 0ad2 07040000 		.4byte	.LLST25
 3486 0ad6 22       		.uleb128 0x22
 3487 0ad7 4D617800 		.ascii	"Max\000"
 3488 0adb 01       		.byte	0x1
 3489 0adc 1B03     		.2byte	0x31b
 3490 0ade 25000000 		.4byte	0x25
 3491 0ae2 35040000 		.4byte	.LLST26
 3492 0ae6 00       		.byte	0
 3493 0ae7 1A       		.uleb128 0x1a
 3494 0ae8 34040000 		.4byte	.LASF105
 3495 0aec 01       		.byte	0x1
 3496 0aed 3C03     		.2byte	0x33c
 3497 0aef 00000000 		.4byte	.LFB42
 3498 0af3 24000000 		.4byte	.LFE42-.LFB42
 3499 0af7 01       		.uleb128 0x1
 3500 0af8 9C       		.byte	0x9c
 3501 0af9 270B0000 		.4byte	0xb27
 3502 0afd 20       		.uleb128 0x20
 3503 0afe 20070000 		.4byte	.LASF106
 3504 0b02 01       		.byte	0x1
 3505 0b03 3C03     		.2byte	0x33c
 3506 0b05 BD000000 		.4byte	0xbd
 3507 0b09 63040000 		.4byte	.LLST27
 3508 0b0d 24       		.uleb128 0x24
 3509 0b0e 57000000 		.4byte	.LASF107
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 90


 3510 0b12 01       		.byte	0x1
 3511 0b13 3E03     		.2byte	0x33e
 3512 0b15 270B0000 		.4byte	0xb27
 3513 0b19 84040000 		.4byte	.LLST28
 3514 0b1d 1B       		.uleb128 0x1b
 3515 0b1e 1A000000 		.4byte	.LVL157
 3516 0b22 82090000 		.4byte	0x982
 3517 0b26 00       		.byte	0
 3518 0b27 02       		.uleb128 0x2
 3519 0b28 01       		.byte	0x1
 3520 0b29 02       		.byte	0x2
 3521 0b2a 36030000 		.4byte	.LASF108
 3522 0b2e 27       		.uleb128 0x27
 3523 0b2f 29030000 		.4byte	.LASF109
 3524 0b33 01       		.byte	0x1
 3525 0b34 5103     		.2byte	0x351
 3526 0b36 00000000 		.4byte	.LFB43
 3527 0b3a 1C000000 		.4byte	.LFE43-.LFB43
 3528 0b3e 01       		.uleb128 0x1
 3529 0b3f 9C       		.byte	0x9c
 3530 0b40 6E0B0000 		.4byte	0xb6e
 3531 0b44 20       		.uleb128 0x20
 3532 0b45 BC080000 		.4byte	.LASF110
 3533 0b49 01       		.byte	0x1
 3534 0b4a 5103     		.2byte	0x351
 3535 0b4c 25000000 		.4byte	0x25
 3536 0b50 A6040000 		.4byte	.LLST29
 3537 0b54 24       		.uleb128 0x24
 3538 0b55 56090000 		.4byte	.LASF91
 3539 0b59 01       		.byte	0x1
 3540 0b5a 5503     		.2byte	0x355
 3541 0b5c 25000000 		.4byte	0x25
 3542 0b60 C9040000 		.4byte	.LLST30
 3543 0b64 1B       		.uleb128 0x1b
 3544 0b65 14000000 		.4byte	.LVL162
 3545 0b69 42090000 		.4byte	0x942
 3546 0b6d 00       		.byte	0
 3547 0b6e 2A       		.uleb128 0x2a
 3548 0b6f 6F090000 		.4byte	.LASF111
 3549 0b73 01       		.byte	0x1
 3550 0b74 6703     		.2byte	0x367
 3551 0b76 00000000 		.4byte	.LFB44
 3552 0b7a B4010000 		.4byte	.LFE44-.LFB44
 3553 0b7e 01       		.uleb128 0x1
 3554 0b7f 9C       		.byte	0x9c
 3555 0b80 4C0D0000 		.4byte	0xd4c
 3556 0b84 22       		.uleb128 0x22
 3557 0b85 61726700 		.ascii	"arg\000"
 3558 0b89 01       		.byte	0x1
 3559 0b8a 6703     		.2byte	0x367
 3560 0b8c 24010000 		.4byte	0x124
 3561 0b90 DC040000 		.4byte	.LLST31
 3562 0b94 2B       		.uleb128 0x2b
 3563 0b95 6E050000 		.4byte	.LASF112
 3564 0b99 01       		.byte	0x1
 3565 0b9a 6A03     		.2byte	0x36a
 3566 0b9c BD000000 		.4byte	0xbd
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 91


 3567 0ba0 05       		.byte	0x5
 3568 0ba1 1F       		.uleb128 0x1f
 3569 0ba2 6E6F7700 		.ascii	"now\000"
 3570 0ba6 01       		.byte	0x1
 3571 0ba7 6B03     		.2byte	0x36b
 3572 0ba9 BD000000 		.4byte	0xbd
 3573 0bad FD040000 		.4byte	.LLST32
 3574 0bb1 24       		.uleb128 0x24
 3575 0bb2 BC080000 		.4byte	.LASF110
 3576 0bb6 01       		.byte	0x1
 3577 0bb7 6C03     		.2byte	0x36c
 3578 0bb9 25000000 		.4byte	0x25
 3579 0bbd 3D050000 		.4byte	.LLST33
 3580 0bc1 24       		.uleb128 0x24
 3581 0bc2 12000000 		.4byte	.LASF113
 3582 0bc6 01       		.byte	0x1
 3583 0bc7 6D03     		.2byte	0x36d
 3584 0bc9 D5000000 		.4byte	0xd5
 3585 0bcd 5B050000 		.4byte	.LLST34
 3586 0bd1 24       		.uleb128 0x24
 3587 0bd2 DC0A0000 		.4byte	.LASF114
 3588 0bd6 01       		.byte	0x1
 3589 0bd7 6D03     		.2byte	0x36d
 3590 0bd9 D5000000 		.4byte	0xd5
 3591 0bdd 6E050000 		.4byte	.LLST35
 3592 0be1 24       		.uleb128 0x24
 3593 0be2 96080000 		.4byte	.LASF115
 3594 0be6 01       		.byte	0x1
 3595 0be7 6E03     		.2byte	0x36e
 3596 0be9 BD000000 		.4byte	0xbd
 3597 0bed 81050000 		.4byte	.LLST36
 3598 0bf1 1C       		.uleb128 0x1c
 3599 0bf2 08000000 		.4byte	.LVL166
 3600 0bf6 F8120000 		.4byte	0x12f8
 3601 0bfa 040C0000 		.4byte	0xc04
 3602 0bfe 1D       		.uleb128 0x1d
 3603 0bff 01       		.uleb128 0x1
 3604 0c00 50       		.byte	0x50
 3605 0c01 01       		.uleb128 0x1
 3606 0c02 30       		.byte	0x30
 3607 0c03 00       		.byte	0
 3608 0c04 1B       		.uleb128 0x1b
 3609 0c05 1E000000 		.4byte	.LVL167
 3610 0c09 82090000 		.4byte	0x982
 3611 0c0d 1C       		.uleb128 0x1c
 3612 0c0e 2A000000 		.4byte	.LVL168
 3613 0c12 B2090000 		.4byte	0x9b2
 3614 0c16 200C0000 		.4byte	0xc20
 3615 0c1a 1D       		.uleb128 0x1d
 3616 0c1b 01       		.uleb128 0x1
 3617 0c1c 50       		.byte	0x50
 3618 0c1d 01       		.uleb128 0x1
 3619 0c1e 35       		.byte	0x35
 3620 0c1f 00       		.byte	0
 3621 0c20 1B       		.uleb128 0x1b
 3622 0c21 32000000 		.4byte	.LVL169
 3623 0c25 B00A0000 		.4byte	0xab0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 92


 3624 0c29 1C       		.uleb128 0x1c
 3625 0c2a 38000000 		.4byte	.LVL170
 3626 0c2e E70A0000 		.4byte	0xae7
 3627 0c32 3C0C0000 		.4byte	0xc3c
 3628 0c36 1D       		.uleb128 0x1d
 3629 0c37 01       		.uleb128 0x1
 3630 0c38 50       		.byte	0x50
 3631 0c39 01       		.uleb128 0x1
 3632 0c3a 30       		.byte	0x30
 3633 0c3b 00       		.byte	0
 3634 0c3c 1C       		.uleb128 0x1c
 3635 0c3d 4E000000 		.4byte	.LVL172
 3636 0c41 91130000 		.4byte	0x1391
 3637 0c45 510C0000 		.4byte	0xc51
 3638 0c49 1D       		.uleb128 0x1d
 3639 0c4a 01       		.uleb128 0x1
 3640 0c4b 50       		.byte	0x50
 3641 0c4c 03       		.uleb128 0x3
 3642 0c4d 0A       		.byte	0xa
 3643 0c4e 0008     		.2byte	0x800
 3644 0c50 00       		.byte	0
 3645 0c51 1B       		.uleb128 0x1b
 3646 0c52 52000000 		.4byte	.LVL173
 3647 0c56 B4120000 		.4byte	0x12b4
 3648 0c5a 1B       		.uleb128 0x1b
 3649 0c5b 6C000000 		.4byte	.LVL176
 3650 0c5f 42090000 		.4byte	0x942
 3651 0c63 1C       		.uleb128 0x1c
 3652 0c64 86000000 		.4byte	.LVL179
 3653 0c68 9C130000 		.4byte	0x139c
 3654 0c6c 760C0000 		.4byte	0xc76
 3655 0c70 1D       		.uleb128 0x1d
 3656 0c71 01       		.uleb128 0x1
 3657 0c72 50       		.byte	0x50
 3658 0c73 01       		.uleb128 0x1
 3659 0c74 36       		.byte	0x36
 3660 0c75 00       		.byte	0
 3661 0c76 1C       		.uleb128 0x1c
 3662 0c77 8C000000 		.4byte	.LVL180
 3663 0c7b A7130000 		.4byte	0x13a7
 3664 0c7f 890C0000 		.4byte	0xc89
 3665 0c83 1D       		.uleb128 0x1d
 3666 0c84 01       		.uleb128 0x1
 3667 0c85 50       		.byte	0x50
 3668 0c86 01       		.uleb128 0x1
 3669 0c87 36       		.byte	0x36
 3670 0c88 00       		.byte	0
 3671 0c89 1B       		.uleb128 0x1b
 3672 0c8a BA000000 		.4byte	.LVL181
 3673 0c8e 62130000 		.4byte	0x1362
 3674 0c92 1C       		.uleb128 0x1c
 3675 0c93 C4000000 		.4byte	.LVL182
 3676 0c97 7D120000 		.4byte	0x127d
 3677 0c9b A50C0000 		.4byte	0xca5
 3678 0c9f 1D       		.uleb128 0x1d
 3679 0ca0 01       		.uleb128 0x1
 3680 0ca1 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 93


 3681 0ca2 01       		.uleb128 0x1
 3682 0ca3 30       		.byte	0x30
 3683 0ca4 00       		.byte	0
 3684 0ca5 1B       		.uleb128 0x1b
 3685 0ca6 D4000000 		.4byte	.LVL184
 3686 0caa 42090000 		.4byte	0x942
 3687 0cae 1B       		.uleb128 0x1b
 3688 0caf DE000000 		.4byte	.LVL185
 3689 0cb3 62130000 		.4byte	0x1362
 3690 0cb7 1B       		.uleb128 0x1b
 3691 0cb8 EE000000 		.4byte	.LVL188
 3692 0cbc B2130000 		.4byte	0x13b2
 3693 0cc0 1C       		.uleb128 0x1c
 3694 0cc1 FE000000 		.4byte	.LVL191
 3695 0cc5 D1050000 		.4byte	0x5d1
 3696 0cc9 D30C0000 		.4byte	0xcd3
 3697 0ccd 1D       		.uleb128 0x1d
 3698 0cce 01       		.uleb128 0x1
 3699 0ccf 50       		.byte	0x50
 3700 0cd0 01       		.uleb128 0x1
 3701 0cd1 34       		.byte	0x34
 3702 0cd2 00       		.byte	0
 3703 0cd3 1C       		.uleb128 0x1c
 3704 0cd4 0C010000 		.4byte	.LVL192
 3705 0cd8 D1050000 		.4byte	0x5d1
 3706 0cdc E60C0000 		.4byte	0xce6
 3707 0ce0 1D       		.uleb128 0x1d
 3708 0ce1 01       		.uleb128 0x1
 3709 0ce2 50       		.byte	0x50
 3710 0ce3 01       		.uleb128 0x1
 3711 0ce4 32       		.byte	0x32
 3712 0ce5 00       		.byte	0
 3713 0ce6 1C       		.uleb128 0x1c
 3714 0ce7 22010000 		.4byte	.LVL193
 3715 0ceb E70A0000 		.4byte	0xae7
 3716 0cef F90C0000 		.4byte	0xcf9
 3717 0cf3 1D       		.uleb128 0x1d
 3718 0cf4 01       		.uleb128 0x1
 3719 0cf5 50       		.byte	0x50
 3720 0cf6 01       		.uleb128 0x1
 3721 0cf7 31       		.byte	0x31
 3722 0cf8 00       		.byte	0
 3723 0cf9 1C       		.uleb128 0x1c
 3724 0cfa 36010000 		.4byte	.LVL194
 3725 0cfe E70A0000 		.4byte	0xae7
 3726 0d02 0C0D0000 		.4byte	0xd0c
 3727 0d06 1D       		.uleb128 0x1d
 3728 0d07 01       		.uleb128 0x1
 3729 0d08 50       		.byte	0x50
 3730 0d09 01       		.uleb128 0x1
 3731 0d0a 30       		.byte	0x30
 3732 0d0b 00       		.byte	0
 3733 0d0c 1C       		.uleb128 0x1c
 3734 0d0d 48010000 		.4byte	.LVL195
 3735 0d11 230A0000 		.4byte	0xa23
 3736 0d15 200D0000 		.4byte	0xd20
 3737 0d19 1D       		.uleb128 0x1d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 94


 3738 0d1a 01       		.uleb128 0x1
 3739 0d1b 50       		.byte	0x50
 3740 0d1c 02       		.uleb128 0x2
 3741 0d1d 74       		.byte	0x74
 3742 0d1e 00       		.sleb128 0
 3743 0d1f 00       		.byte	0
 3744 0d20 1B       		.uleb128 0x1b
 3745 0d21 56010000 		.4byte	.LVL196
 3746 0d25 2E0B0000 		.4byte	0xb2e
 3747 0d29 1C       		.uleb128 0x1c
 3748 0d2a 64010000 		.4byte	.LVL199
 3749 0d2e 4A130000 		.4byte	0x134a
 3750 0d32 3C0D0000 		.4byte	0xd3c
 3751 0d36 1D       		.uleb128 0x1d
 3752 0d37 01       		.uleb128 0x1
 3753 0d38 50       		.byte	0x50
 3754 0d39 01       		.uleb128 0x1
 3755 0d3a 35       		.byte	0x35
 3756 0d3b 00       		.byte	0
 3757 0d3c 1E       		.uleb128 0x1e
 3758 0d3d 6A010000 		.4byte	.LVL200
 3759 0d41 F8120000 		.4byte	0x12f8
 3760 0d45 1D       		.uleb128 0x1d
 3761 0d46 01       		.uleb128 0x1
 3762 0d47 50       		.byte	0x50
 3763 0d48 01       		.uleb128 0x1
 3764 0d49 30       		.byte	0x30
 3765 0d4a 00       		.byte	0
 3766 0d4b 00       		.byte	0
 3767 0d4c 2C       		.uleb128 0x2c
 3768 0d4d F4090000 		.4byte	.LASF116
 3769 0d51 01       		.byte	0x1
 3770 0d52 0704     		.2byte	0x407
 3771 0d54 2C000000 		.4byte	0x2c
 3772 0d58 00000000 		.4byte	.LFB45
 3773 0d5c 5C010000 		.4byte	.LFE45-.LFB45
 3774 0d60 01       		.uleb128 0x1
 3775 0d61 9C       		.byte	0x9c
 3776 0d62 C80F0000 		.4byte	0xfc8
 3777 0d66 1F       		.uleb128 0x1f
 3778 0d67 7300     		.ascii	"s\000"
 3779 0d69 01       		.byte	0x1
 3780 0d6a 0904     		.2byte	0x409
 3781 0d6c A5000000 		.4byte	0xa5
 3782 0d70 9F050000 		.4byte	.LLST37
 3783 0d74 1B       		.uleb128 0x1b
 3784 0d75 08000000 		.4byte	.LVL201
 3785 0d79 85050000 		.4byte	0x585
 3786 0d7d 1C       		.uleb128 0x1c
 3787 0d7e 0E000000 		.4byte	.LVL202
 3788 0d82 9C130000 		.4byte	0x139c
 3789 0d86 900D0000 		.4byte	0xd90
 3790 0d8a 1D       		.uleb128 0x1d
 3791 0d8b 01       		.uleb128 0x1
 3792 0d8c 50       		.byte	0x50
 3793 0d8d 01       		.uleb128 0x1
 3794 0d8e 36       		.byte	0x36
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 95


 3795 0d8f 00       		.byte	0
 3796 0d90 1C       		.uleb128 0x1c
 3797 0d91 14000000 		.4byte	.LVL203
 3798 0d95 A7130000 		.4byte	0x13a7
 3799 0d99 A30D0000 		.4byte	0xda3
 3800 0d9d 1D       		.uleb128 0x1d
 3801 0d9e 01       		.uleb128 0x1
 3802 0d9f 50       		.byte	0x50
 3803 0da0 01       		.uleb128 0x1
 3804 0da1 36       		.byte	0x36
 3805 0da2 00       		.byte	0
 3806 0da3 1C       		.uleb128 0x1c
 3807 0da4 1A000000 		.4byte	.LVL204
 3808 0da8 9C130000 		.4byte	0x139c
 3809 0dac B60D0000 		.4byte	0xdb6
 3810 0db0 1D       		.uleb128 0x1d
 3811 0db1 01       		.uleb128 0x1
 3812 0db2 50       		.byte	0x50
 3813 0db3 01       		.uleb128 0x1
 3814 0db4 31       		.byte	0x31
 3815 0db5 00       		.byte	0
 3816 0db6 1C       		.uleb128 0x1c
 3817 0db7 20000000 		.4byte	.LVL205
 3818 0dbb A7130000 		.4byte	0x13a7
 3819 0dbf C90D0000 		.4byte	0xdc9
 3820 0dc3 1D       		.uleb128 0x1d
 3821 0dc4 01       		.uleb128 0x1
 3822 0dc5 50       		.byte	0x50
 3823 0dc6 01       		.uleb128 0x1
 3824 0dc7 31       		.byte	0x31
 3825 0dc8 00       		.byte	0
 3826 0dc9 1C       		.uleb128 0x1c
 3827 0dca 34000000 		.4byte	.LVL206
 3828 0dce BD130000 		.4byte	0x13bd
 3829 0dd2 020E0000 		.4byte	0xe02
 3830 0dd6 1D       		.uleb128 0x1d
 3831 0dd7 01       		.uleb128 0x1
 3832 0dd8 50       		.byte	0x50
 3833 0dd9 05       		.uleb128 0x5
 3834 0dda 03       		.byte	0x3
 3835 0ddb 00000000 		.4byte	PID_Task
 3836 0ddf 1D       		.uleb128 0x1d
 3837 0de0 01       		.uleb128 0x1
 3838 0de1 51       		.byte	0x51
 3839 0de2 05       		.uleb128 0x5
 3840 0de3 03       		.byte	0x3
 3841 0de4 00000000 		.4byte	.LC76
 3842 0de8 1D       		.uleb128 0x1d
 3843 0de9 01       		.uleb128 0x1
 3844 0dea 52       		.byte	0x52
 3845 0deb 02       		.uleb128 0x2
 3846 0dec 08       		.byte	0x8
 3847 0ded 40       		.byte	0x40
 3848 0dee 1D       		.uleb128 0x1d
 3849 0def 01       		.uleb128 0x1
 3850 0df0 53       		.byte	0x53
 3851 0df1 02       		.uleb128 0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 96


 3852 0df2 74       		.byte	0x74
 3853 0df3 00       		.sleb128 0
 3854 0df4 1D       		.uleb128 0x1d
 3855 0df5 02       		.uleb128 0x2
 3856 0df6 7D       		.byte	0x7d
 3857 0df7 00       		.sleb128 0
 3858 0df8 01       		.uleb128 0x1
 3859 0df9 32       		.byte	0x32
 3860 0dfa 1D       		.uleb128 0x1d
 3861 0dfb 02       		.uleb128 0x2
 3862 0dfc 7D       		.byte	0x7d
 3863 0dfd 04       		.sleb128 4
 3864 0dfe 02       		.uleb128 0x2
 3865 0dff 74       		.byte	0x74
 3866 0e00 00       		.sleb128 0
 3867 0e01 00       		.byte	0
 3868 0e02 1C       		.uleb128 0x1c
 3869 0e03 46000000 		.4byte	.LVL207
 3870 0e07 BD130000 		.4byte	0x13bd
 3871 0e0b 3B0E0000 		.4byte	0xe3b
 3872 0e0f 1D       		.uleb128 0x1d
 3873 0e10 01       		.uleb128 0x1
 3874 0e11 50       		.byte	0x50
 3875 0e12 05       		.uleb128 0x5
 3876 0e13 03       		.byte	0x3
 3877 0e14 00000000 		.4byte	Comm_Task
 3878 0e18 1D       		.uleb128 0x1d
 3879 0e19 01       		.uleb128 0x1
 3880 0e1a 51       		.byte	0x51
 3881 0e1b 05       		.uleb128 0x5
 3882 0e1c 03       		.byte	0x3
 3883 0e1d 04000000 		.4byte	.LC79
 3884 0e21 1D       		.uleb128 0x1d
 3885 0e22 01       		.uleb128 0x1
 3886 0e23 52       		.byte	0x52
 3887 0e24 02       		.uleb128 0x2
 3888 0e25 08       		.byte	0x8
 3889 0e26 64       		.byte	0x64
 3890 0e27 1D       		.uleb128 0x1d
 3891 0e28 01       		.uleb128 0x1
 3892 0e29 53       		.byte	0x53
 3893 0e2a 02       		.uleb128 0x2
 3894 0e2b 74       		.byte	0x74
 3895 0e2c 00       		.sleb128 0
 3896 0e2d 1D       		.uleb128 0x1d
 3897 0e2e 02       		.uleb128 0x2
 3898 0e2f 7D       		.byte	0x7d
 3899 0e30 00       		.sleb128 0
 3900 0e31 01       		.uleb128 0x1
 3901 0e32 33       		.byte	0x33
 3902 0e33 1D       		.uleb128 0x1d
 3903 0e34 02       		.uleb128 0x2
 3904 0e35 7D       		.byte	0x7d
 3905 0e36 04       		.sleb128 4
 3906 0e37 02       		.uleb128 0x2
 3907 0e38 74       		.byte	0x74
 3908 0e39 00       		.sleb128 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 97


 3909 0e3a 00       		.byte	0
 3910 0e3b 1C       		.uleb128 0x1c
 3911 0e3c 58000000 		.4byte	.LVL208
 3912 0e40 BD130000 		.4byte	0x13bd
 3913 0e44 740E0000 		.4byte	0xe74
 3914 0e48 1D       		.uleb128 0x1d
 3915 0e49 01       		.uleb128 0x1
 3916 0e4a 50       		.byte	0x50
 3917 0e4b 05       		.uleb128 0x5
 3918 0e4c 03       		.byte	0x3
 3919 0e4d 00000000 		.4byte	Current_Read_Task
 3920 0e51 1D       		.uleb128 0x1d
 3921 0e52 01       		.uleb128 0x1
 3922 0e53 51       		.byte	0x51
 3923 0e54 05       		.uleb128 0x5
 3924 0e55 03       		.byte	0x3
 3925 0e56 14000000 		.4byte	.LC82
 3926 0e5a 1D       		.uleb128 0x1d
 3927 0e5b 01       		.uleb128 0x1
 3928 0e5c 52       		.byte	0x52
 3929 0e5d 02       		.uleb128 0x2
 3930 0e5e 08       		.byte	0x8
 3931 0e5f 40       		.byte	0x40
 3932 0e60 1D       		.uleb128 0x1d
 3933 0e61 01       		.uleb128 0x1
 3934 0e62 53       		.byte	0x53
 3935 0e63 02       		.uleb128 0x2
 3936 0e64 74       		.byte	0x74
 3937 0e65 00       		.sleb128 0
 3938 0e66 1D       		.uleb128 0x1d
 3939 0e67 02       		.uleb128 0x2
 3940 0e68 7D       		.byte	0x7d
 3941 0e69 00       		.sleb128 0
 3942 0e6a 01       		.uleb128 0x1
 3943 0e6b 31       		.byte	0x31
 3944 0e6c 1D       		.uleb128 0x1d
 3945 0e6d 02       		.uleb128 0x2
 3946 0e6e 7D       		.byte	0x7d
 3947 0e6f 04       		.sleb128 4
 3948 0e70 02       		.uleb128 0x2
 3949 0e71 74       		.byte	0x74
 3950 0e72 00       		.sleb128 0
 3951 0e73 00       		.byte	0
 3952 0e74 1C       		.uleb128 0x1c
 3953 0e75 5E000000 		.4byte	.LVL209
 3954 0e79 C9130000 		.4byte	0x13c9
 3955 0e7d 870E0000 		.4byte	0xe87
 3956 0e81 1D       		.uleb128 0x1d
 3957 0e82 01       		.uleb128 0x1
 3958 0e83 50       		.byte	0x50
 3959 0e84 01       		.uleb128 0x1
 3960 0e85 31       		.byte	0x31
 3961 0e86 00       		.byte	0
 3962 0e87 1C       		.uleb128 0x1c
 3963 0e88 74000000 		.4byte	.LVL213
 3964 0e8c 04130000 		.4byte	0x1304
 3965 0e90 9B0E0000 		.4byte	0xe9b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 98


 3966 0e94 1D       		.uleb128 0x1d
 3967 0e95 01       		.uleb128 0x1
 3968 0e96 50       		.byte	0x50
 3969 0e97 02       		.uleb128 0x2
 3970 0e98 74       		.byte	0x74
 3971 0e99 00       		.sleb128 0
 3972 0e9a 00       		.byte	0
 3973 0e9b 1C       		.uleb128 0x1c
 3974 0e9c 7C000000 		.4byte	.LVL214
 3975 0ea0 D5130000 		.4byte	0x13d5
 3976 0ea4 B00E0000 		.4byte	0xeb0
 3977 0ea8 1D       		.uleb128 0x1d
 3978 0ea9 01       		.uleb128 0x1
 3979 0eaa 50       		.byte	0x50
 3980 0eab 03       		.uleb128 0x3
 3981 0eac 0A       		.byte	0xa
 3982 0ead E803     		.2byte	0x3e8
 3983 0eaf 00       		.byte	0
 3984 0eb0 1C       		.uleb128 0x1c
 3985 0eb1 84000000 		.4byte	.LVL216
 3986 0eb5 E0130000 		.4byte	0x13e0
 3987 0eb9 C70E0000 		.4byte	0xec7
 3988 0ebd 1D       		.uleb128 0x1d
 3989 0ebe 01       		.uleb128 0x1
 3990 0ebf 50       		.byte	0x50
 3991 0ec0 05       		.uleb128 0x5
 3992 0ec1 03       		.byte	0x3
 3993 0ec2 00000000 		.4byte	HomeIsrHandler
 3994 0ec6 00       		.byte	0
 3995 0ec7 1C       		.uleb128 0x1c
 3996 0ec8 8A000000 		.4byte	.LVL217
 3997 0ecc EB130000 		.4byte	0x13eb
 3998 0ed0 DE0E0000 		.4byte	0xede
 3999 0ed4 1D       		.uleb128 0x1d
 4000 0ed5 01       		.uleb128 0x1
 4001 0ed6 50       		.byte	0x50
 4002 0ed7 05       		.uleb128 0x5
 4003 0ed8 03       		.byte	0x3
 4004 0ed9 00000000 		.4byte	RSTIsrHandler
 4005 0edd 00       		.byte	0
 4006 0ede 1C       		.uleb128 0x1c
 4007 0edf 90000000 		.4byte	.LVL218
 4008 0ee3 F6130000 		.4byte	0x13f6
 4009 0ee7 F50E0000 		.4byte	0xef5
 4010 0eeb 1D       		.uleb128 0x1d
 4011 0eec 01       		.uleb128 0x1
 4012 0eed 50       		.byte	0x50
 4013 0eee 05       		.uleb128 0x5
 4014 0eef 03       		.byte	0x3
 4015 0ef0 00000000 		.4byte	SPI_SS_IsrHandler
 4016 0ef4 00       		.byte	0
 4017 0ef5 1C       		.uleb128 0x1c
 4018 0ef6 96000000 		.4byte	.LVL219
 4019 0efa 01140000 		.4byte	0x1401
 4020 0efe 080F0000 		.4byte	0xf08
 4021 0f02 1D       		.uleb128 0x1d
 4022 0f03 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 99


 4023 0f04 50       		.byte	0x50
 4024 0f05 01       		.uleb128 0x1
 4025 0f06 33       		.byte	0x33
 4026 0f07 00       		.byte	0
 4027 0f08 1C       		.uleb128 0x1c
 4028 0f09 9C000000 		.4byte	.LVL220
 4029 0f0d 0C140000 		.4byte	0x140c
 4030 0f11 1B0F0000 		.4byte	0xf1b
 4031 0f15 1D       		.uleb128 0x1d
 4032 0f16 01       		.uleb128 0x1
 4033 0f17 50       		.byte	0x50
 4034 0f18 01       		.uleb128 0x1
 4035 0f19 32       		.byte	0x32
 4036 0f1a 00       		.byte	0
 4037 0f1b 1C       		.uleb128 0x1c
 4038 0f1c A2000000 		.4byte	.LVL221
 4039 0f20 17140000 		.4byte	0x1417
 4040 0f24 2E0F0000 		.4byte	0xf2e
 4041 0f28 1D       		.uleb128 0x1d
 4042 0f29 01       		.uleb128 0x1
 4043 0f2a 50       		.byte	0x50
 4044 0f2b 01       		.uleb128 0x1
 4045 0f2c 33       		.byte	0x33
 4046 0f2d 00       		.byte	0
 4047 0f2e 1B       		.uleb128 0x1b
 4048 0f2f A8000000 		.4byte	.LVL222
 4049 0f33 22140000 		.4byte	0x1422
 4050 0f37 1C       		.uleb128 0x1c
 4051 0f38 AE000000 		.4byte	.LVL223
 4052 0f3c D5130000 		.4byte	0x13d5
 4053 0f40 4B0F0000 		.4byte	0xf4b
 4054 0f44 1D       		.uleb128 0x1d
 4055 0f45 01       		.uleb128 0x1
 4056 0f46 50       		.byte	0x50
 4057 0f47 02       		.uleb128 0x2
 4058 0f48 08       		.byte	0x8
 4059 0f49 64       		.byte	0x64
 4060 0f4a 00       		.byte	0
 4061 0f4b 1B       		.uleb128 0x1b
 4062 0f4c B2000000 		.4byte	.LVL224
 4063 0f50 2D140000 		.4byte	0x142d
 4064 0f54 1B       		.uleb128 0x1b
 4065 0f55 B6000000 		.4byte	.LVL225
 4066 0f59 38140000 		.4byte	0x1438
 4067 0f5d 1C       		.uleb128 0x1c
 4068 0f5e BE000000 		.4byte	.LVL226
 4069 0f62 44140000 		.4byte	0x1444
 4070 0f66 720F0000 		.4byte	0xf72
 4071 0f6a 1D       		.uleb128 0x1d
 4072 0f6b 01       		.uleb128 0x1
 4073 0f6c 50       		.byte	0x50
 4074 0f6d 03       		.uleb128 0x3
 4075 0f6e 0A       		.byte	0xa
 4076 0f6f 4006     		.2byte	0x640
 4077 0f71 00       		.byte	0
 4078 0f72 1B       		.uleb128 0x1b
 4079 0f73 C4000000 		.4byte	.LVL227
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 100


 4080 0f77 42090000 		.4byte	0x942
 4081 0f7b 1B       		.uleb128 0x1b
 4082 0f7c D8000000 		.4byte	.LVL228
 4083 0f80 50140000 		.4byte	0x1450
 4084 0f84 1C       		.uleb128 0x1c
 4085 0f85 E2000000 		.4byte	.LVL229
 4086 0f89 72120000 		.4byte	0x1272
 4087 0f8d 980F0000 		.4byte	0xf98
 4088 0f91 1D       		.uleb128 0x1d
 4089 0f92 01       		.uleb128 0x1
 4090 0f93 50       		.byte	0x50
 4091 0f94 02       		.uleb128 0x2
 4092 0f95 75       		.byte	0x75
 4093 0f96 00       		.sleb128 0
 4094 0f97 00       		.byte	0
 4095 0f98 1B       		.uleb128 0x1b
 4096 0f99 EA000000 		.4byte	.LVL230
 4097 0f9d 5B140000 		.4byte	0x145b
 4098 0fa1 1C       		.uleb128 0x1c
 4099 0fa2 F0000000 		.4byte	.LVL231
 4100 0fa6 7D120000 		.4byte	0x127d
 4101 0faa B50F0000 		.4byte	0xfb5
 4102 0fae 1D       		.uleb128 0x1d
 4103 0faf 01       		.uleb128 0x1
 4104 0fb0 50       		.byte	0x50
 4105 0fb1 02       		.uleb128 0x2
 4106 0fb2 74       		.byte	0x74
 4107 0fb3 00       		.sleb128 0
 4108 0fb4 00       		.byte	0
 4109 0fb5 1B       		.uleb128 0x1b
 4110 0fb6 F4000000 		.4byte	.LVL232
 4111 0fba B4120000 		.4byte	0x12b4
 4112 0fbe 1B       		.uleb128 0x1b
 4113 0fbf 0A010000 		.4byte	.LVL233
 4114 0fc3 66140000 		.4byte	0x1466
 4115 0fc7 00       		.byte	0
 4116 0fc8 2D       		.uleb128 0x2d
 4117 0fc9 4A6F6700 		.ascii	"Jog\000"
 4118 0fcd 01       		.byte	0x1
 4119 0fce 3F       		.byte	0x3f
 4120 0fcf D90F0000 		.4byte	0xfd9
 4121 0fd3 05       		.uleb128 0x5
 4122 0fd4 03       		.byte	0x3
 4123 0fd5 00000000 		.4byte	Jog
 4124 0fd9 06       		.uleb128 0x6
 4125 0fda C9000000 		.4byte	0xc9
 4126 0fde 2E       		.uleb128 0x2e
 4127 0fdf 60090000 		.4byte	.LASF117
 4128 0fe3 01       		.byte	0x1
 4129 0fe4 3F       		.byte	0x3f
 4130 0fe5 D90F0000 		.4byte	0xfd9
 4131 0fe9 05       		.uleb128 0x5
 4132 0fea 03       		.byte	0x3
 4133 0feb 00000000 		.4byte	Last_Jog
 4134 0fef 2E       		.uleb128 0x2e
 4135 0ff0 8E050000 		.4byte	.LASF118
 4136 0ff4 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 101


 4137 0ff5 40       		.byte	0x40
 4138 0ff6 C9000000 		.4byte	0xc9
 4139 0ffa 05       		.uleb128 0x5
 4140 0ffb 03       		.byte	0x3
 4141 0ffc 00000000 		.4byte	PWM_Max_Fwd
 4142 1000 2E       		.uleb128 0x2e
 4143 1001 15010000 		.4byte	.LASF119
 4144 1005 01       		.byte	0x1
 4145 1006 40       		.byte	0x40
 4146 1007 C9000000 		.4byte	0xc9
 4147 100b 05       		.uleb128 0x5
 4148 100c 03       		.byte	0x3
 4149 100d 00000000 		.4byte	PWM_Max_Rev
 4150 1011 2E       		.uleb128 0x2e
 4151 1012 14070000 		.4byte	.LASF120
 4152 1016 01       		.byte	0x1
 4153 1017 4B       		.byte	0x4b
 4154 1018 270B0000 		.4byte	0xb27
 4155 101c 05       		.uleb128 0x5
 4156 101d 03       		.byte	0x3
 4157 101e 00000000 		.4byte	PID_Enabled
 4158 1022 2E       		.uleb128 0x2e
 4159 1023 04070000 		.4byte	.LASF121
 4160 1027 01       		.byte	0x1
 4161 1028 4B       		.byte	0x4b
 4162 1029 270B0000 		.4byte	0xb27
 4163 102d 05       		.uleb128 0x5
 4164 102e 03       		.byte	0x3
 4165 102f 00000000 		.4byte	PID_Was_Enabled
 4166 1033 2E       		.uleb128 0x2e
 4167 1034 D7070000 		.4byte	.LASF122
 4168 1038 01       		.byte	0x1
 4169 1039 4C       		.byte	0x4c
 4170 103a BD000000 		.4byte	0xbd
 4171 103e 05       		.uleb128 0x5
 4172 103f 03       		.byte	0x3
 4173 1040 00000000 		.4byte	PID_Setpoint
 4174 1044 2E       		.uleb128 0x2e
 4175 1045 11020000 		.4byte	.LASF123
 4176 1049 01       		.byte	0x1
 4177 104a 4E       		.byte	0x4e
 4178 104b BD000000 		.4byte	0xbd
 4179 104f 05       		.uleb128 0x5
 4180 1050 03       		.byte	0x3
 4181 1051 00000000 		.4byte	lastTime
 4182 1055 2E       		.uleb128 0x2e
 4183 1056 C1060000 		.4byte	.LASF124
 4184 105a 01       		.byte	0x1
 4185 105b 4F       		.byte	0x4f
 4186 105c 25000000 		.4byte	0x25
 4187 1060 05       		.uleb128 0x5
 4188 1061 03       		.byte	0x3
 4189 1062 00000000 		.4byte	Output
 4190 1066 2E       		.uleb128 0x2e
 4191 1067 37020000 		.4byte	.LASF125
 4192 106b 01       		.byte	0x1
 4193 106c 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 102


 4194 106d 25000000 		.4byte	0x25
 4195 1071 05       		.uleb128 0x5
 4196 1072 03       		.byte	0x3
 4197 1073 00000000 		.4byte	ITerm
 4198 1077 2E       		.uleb128 0x2e
 4199 1078 EE070000 		.4byte	.LASF126
 4200 107c 01       		.byte	0x1
 4201 107d 50       		.byte	0x50
 4202 107e 25000000 		.4byte	0x25
 4203 1082 05       		.uleb128 0x5
 4204 1083 03       		.byte	0x3
 4205 1084 00000000 		.4byte	lastPosition
 4206 1088 2E       		.uleb128 0x2e
 4207 1089 95090000 		.4byte	.LASF127
 4208 108d 01       		.byte	0x1
 4209 108e 51       		.byte	0x51
 4210 108f 25000000 		.4byte	0x25
 4211 1093 05       		.uleb128 0x5
 4212 1094 03       		.byte	0x3
 4213 1095 00000000 		.4byte	refKp
 4214 1099 2E       		.uleb128 0x2e
 4215 109a 69090000 		.4byte	.LASF128
 4216 109e 01       		.byte	0x1
 4217 109f 51       		.byte	0x51
 4218 10a0 25000000 		.4byte	0x25
 4219 10a4 05       		.uleb128 0x5
 4220 10a5 03       		.byte	0x3
 4221 10a6 00000000 		.4byte	refKi
 4222 10aa 2E       		.uleb128 0x2e
 4223 10ab 1A040000 		.4byte	.LASF129
 4224 10af 01       		.byte	0x1
 4225 10b0 51       		.byte	0x51
 4226 10b1 25000000 		.4byte	0x25
 4227 10b5 05       		.uleb128 0x5
 4228 10b6 03       		.byte	0x3
 4229 10b7 00000000 		.4byte	refKd
 4230 10bb 2D       		.uleb128 0x2d
 4231 10bc 6B7000   		.ascii	"kp\000"
 4232 10bf 01       		.byte	0x1
 4233 10c0 52       		.byte	0x52
 4234 10c1 25000000 		.4byte	0x25
 4235 10c5 05       		.uleb128 0x5
 4236 10c6 03       		.byte	0x3
 4237 10c7 00000000 		.4byte	kp
 4238 10cb 2D       		.uleb128 0x2d
 4239 10cc 6B6900   		.ascii	"ki\000"
 4240 10cf 01       		.byte	0x1
 4241 10d0 52       		.byte	0x52
 4242 10d1 25000000 		.4byte	0x25
 4243 10d5 05       		.uleb128 0x5
 4244 10d6 03       		.byte	0x3
 4245 10d7 00000000 		.4byte	ki
 4246 10db 2D       		.uleb128 0x2d
 4247 10dc 6B6400   		.ascii	"kd\000"
 4248 10df 01       		.byte	0x1
 4249 10e0 52       		.byte	0x52
 4250 10e1 25000000 		.4byte	0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 103


 4251 10e5 05       		.uleb128 0x5
 4252 10e6 03       		.byte	0x3
 4253 10e7 00000000 		.4byte	kd
 4254 10eb 2E       		.uleb128 0x2e
 4255 10ec E5050000 		.4byte	.LASF130
 4256 10f0 01       		.byte	0x1
 4257 10f1 53       		.byte	0x53
 4258 10f2 BD000000 		.4byte	0xbd
 4259 10f6 05       		.uleb128 0x5
 4260 10f7 03       		.byte	0x3
 4261 10f8 00000000 		.4byte	refSampleTime
 4262 10fc 2E       		.uleb128 0x2e
 4263 10fd 52030000 		.4byte	.LASF131
 4264 1101 01       		.byte	0x1
 4265 1102 54       		.byte	0x54
 4266 1103 25000000 		.4byte	0x25
 4267 1107 05       		.uleb128 0x5
 4268 1108 03       		.byte	0x3
 4269 1109 00000000 		.4byte	outMin
 4270 110d 2E       		.uleb128 0x2e
 4271 110e 25090000 		.4byte	.LASF132
 4272 1112 01       		.byte	0x1
 4273 1113 54       		.byte	0x54
 4274 1114 25000000 		.4byte	0x25
 4275 1118 05       		.uleb128 0x5
 4276 1119 03       		.byte	0x3
 4277 111a 00000000 		.4byte	outMax
 4278 111e 2E       		.uleb128 0x2e
 4279 111f 4B030000 		.4byte	.LASF133
 4280 1123 01       		.byte	0x1
 4281 1124 55       		.byte	0x55
 4282 1125 270B0000 		.4byte	0xb27
 4283 1129 05       		.uleb128 0x5
 4284 112a 03       		.byte	0x3
 4285 112b 00000000 		.4byte	inAuto
 4286 112f 2E       		.uleb128 0x2e
 4287 1130 7A020000 		.4byte	.LASF134
 4288 1134 01       		.byte	0x1
 4289 1135 BA       		.byte	0xba
 4290 1136 40110000 		.4byte	0x1140
 4291 113a 05       		.uleb128 0x5
 4292 113b 03       		.byte	0x3
 4293 113c 00000000 		.4byte	ConfigState
 4294 1140 06       		.uleb128 0x6
 4295 1141 B6010000 		.4byte	0x1b6
 4296 1145 2E       		.uleb128 0x2e
 4297 1146 1A090000 		.4byte	.LASF135
 4298 114a 01       		.byte	0x1
 4299 114b BB       		.byte	0xbb
 4300 114c EF000000 		.4byte	0xef
 4301 1150 05       		.uleb128 0x5
 4302 1151 03       		.byte	0x3
 4303 1152 00000000 		.4byte	FaultState
 4304 1156 2E       		.uleb128 0x2e
 4305 1157 47090000 		.4byte	.LASF136
 4306 115b 01       		.byte	0x1
 4307 115c BC       		.byte	0xbc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 104


 4308 115d EF000000 		.4byte	0xef
 4309 1161 05       		.uleb128 0x5
 4310 1162 03       		.byte	0x3
 4311 1163 00000000 		.4byte	ConfigSequence
 4312 1167 2E       		.uleb128 0x2e
 4313 1168 50080000 		.4byte	.LASF137
 4314 116c 01       		.byte	0x1
 4315 116d BD       		.byte	0xbd
 4316 116e F4000000 		.4byte	0xf4
 4317 1172 05       		.uleb128 0x5
 4318 1173 03       		.byte	0x3
 4319 1174 00000000 		.4byte	ChecksumErrors
 4320 1178 2E       		.uleb128 0x2e
 4321 1179 83000000 		.4byte	.LASF138
 4322 117d 01       		.byte	0x1
 4323 117e BE       		.byte	0xbe
 4324 117f F4000000 		.4byte	0xf4
 4325 1183 05       		.uleb128 0x5
 4326 1184 03       		.byte	0x3
 4327 1185 00000000 		.4byte	Current
 4328 1189 2D       		.uleb128 0x2d
 4329 118a 50574D00 		.ascii	"PWM\000"
 4330 118e 01       		.byte	0x1
 4331 118f BF       		.byte	0xbf
 4332 1190 9A110000 		.4byte	0x119a
 4333 1194 05       		.uleb128 0x5
 4334 1195 03       		.byte	0x3
 4335 1196 00000000 		.4byte	PWM
 4336 119a 06       		.uleb128 0x6
 4337 119b 25000000 		.4byte	0x25
 4338 119f 2E       		.uleb128 0x2e
 4339 11a0 CC000000 		.4byte	.LASF139
 4340 11a4 01       		.byte	0x1
 4341 11a5 C0       		.byte	0xc0
 4342 11a6 05010000 		.4byte	0x105
 4343 11aa 05       		.uleb128 0x5
 4344 11ab 03       		.byte	0x3
 4345 11ac 00000000 		.4byte	PID_Last_Position
 4346 11b0 16       		.uleb128 0x16
 4347 11b1 A5000000 		.4byte	0xa5
 4348 11b5 C0110000 		.4byte	0x11c0
 4349 11b9 17       		.uleb128 0x17
 4350 11ba 1D010000 		.4byte	0x11d
 4351 11be 13       		.byte	0x13
 4352 11bf 00       		.byte	0
 4353 11c0 2E       		.uleb128 0x2e
 4354 11c1 D5050000 		.4byte	.LASF140
 4355 11c5 01       		.byte	0x1
 4356 11c6 C1       		.byte	0xc1
 4357 11c7 B0110000 		.4byte	0x11b0
 4358 11cb 05       		.uleb128 0x5
 4359 11cc 03       		.byte	0x3
 4360 11cd 00000000 		.4byte	CurrentI2Cinbuf
 4361 11d1 2E       		.uleb128 0x2e
 4362 11d2 A7070000 		.4byte	.LASF141
 4363 11d6 01       		.byte	0x1
 4364 11d7 C4       		.byte	0xc4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 105


 4365 11d8 8C010000 		.4byte	0x18c
 4366 11dc 05       		.uleb128 0x5
 4367 11dd 03       		.byte	0x3
 4368 11de 00000000 		.4byte	uxHighWaterMark_PID
 4369 11e2 2E       		.uleb128 0x2e
 4370 11e3 3A060000 		.4byte	.LASF142
 4371 11e7 01       		.byte	0x1
 4372 11e8 C5       		.byte	0xc5
 4373 11e9 8C010000 		.4byte	0x18c
 4374 11ed 05       		.uleb128 0x5
 4375 11ee 03       		.byte	0x3
 4376 11ef 00000000 		.4byte	uxHighWaterMark_Current
 4377 11f3 2E       		.uleb128 0x2e
 4378 11f4 330A0000 		.4byte	.LASF143
 4379 11f8 01       		.byte	0x1
 4380 11f9 C6       		.byte	0xc6
 4381 11fa 8C010000 		.4byte	0x18c
 4382 11fe 05       		.uleb128 0x5
 4383 11ff 03       		.byte	0x3
 4384 1200 00000000 		.4byte	uxHighWaterMark_Comm
 4385 1204 2E       		.uleb128 0x2e
 4386 1205 3D000000 		.4byte	.LASF144
 4387 1209 01       		.byte	0x1
 4388 120a C9       		.byte	0xc9
 4389 120b 81010000 		.4byte	0x181
 4390 120f 05       		.uleb128 0x5
 4391 1210 03       		.byte	0x3
 4392 1211 00000000 		.4byte	Lock
 4393 1215 2E       		.uleb128 0x2e
 4394 1216 14060000 		.4byte	.LASF145
 4395 121a 01       		.byte	0x1
 4396 121b DC       		.byte	0xdc
 4397 121c BD000000 		.4byte	0xbd
 4398 1220 05       		.uleb128 0x5
 4399 1221 03       		.byte	0x3
 4400 1222 00000000 		.4byte	LastMessageTimeTick
 4401 1226 2F       		.uleb128 0x2f
 4402 1227 22000000 		.4byte	.LASF146
 4403 122b 01       		.byte	0x1
 4404 122c 0F01     		.2byte	0x10f
 4405 122e 5C030000 		.4byte	0x35c
 4406 1232 05       		.uleb128 0x5
 4407 1233 03       		.byte	0x3
 4408 1234 00000000 		.4byte	rxMessage
 4409 1238 2F       		.uleb128 0x2f
 4410 1239 F3050000 		.4byte	.LASF147
 4411 123d 01       		.byte	0x1
 4412 123e 2301     		.2byte	0x123
 4413 1240 3E040000 		.4byte	0x43e
 4414 1244 05       		.uleb128 0x5
 4415 1245 03       		.byte	0x3
 4416 1246 00000000 		.4byte	txMessage
 4417 124a 2F       		.uleb128 0x2f
 4418 124b 06040000 		.4byte	.LASF148
 4419 124f 01       		.byte	0x1
 4420 1250 2B01     		.2byte	0x12b
 4421 1252 7A040000 		.4byte	0x47a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 106


 4422 1256 05       		.uleb128 0x5
 4423 1257 03       		.byte	0x3
 4424 1258 00000000 		.4byte	txMessageState
 4425 125c 30       		.uleb128 0x30
 4426 125d C9040000 		.4byte	.LASF149
 4427 1261 C9040000 		.4byte	.LASF149
 4428 1265 08       		.byte	0x8
 4429 1266 28       		.byte	0x28
 4430 1267 30       		.uleb128 0x30
 4431 1268 78090000 		.4byte	.LASF150
 4432 126c 78090000 		.4byte	.LASF150
 4433 1270 09       		.byte	0x9
 4434 1271 39       		.byte	0x39
 4435 1272 30       		.uleb128 0x30
 4436 1273 FD050000 		.4byte	.LASF151
 4437 1277 FD050000 		.4byte	.LASF151
 4438 127b 0A       		.byte	0xa
 4439 127c 5A       		.byte	0x5a
 4440 127d 30       		.uleb128 0x30
 4441 127e 1A020000 		.4byte	.LASF152
 4442 1282 1A020000 		.4byte	.LASF152
 4443 1286 0B       		.byte	0xb
 4444 1287 5A       		.byte	0x5a
 4445 1288 30       		.uleb128 0x30
 4446 1289 690A0000 		.4byte	.LASF153
 4447 128d 690A0000 		.4byte	.LASF153
 4448 1291 0C       		.byte	0xc
 4449 1292 28       		.byte	0x28
 4450 1293 30       		.uleb128 0x30
 4451 1294 B5000000 		.4byte	.LASF154
 4452 1298 B5000000 		.4byte	.LASF154
 4453 129c 0D       		.byte	0xd
 4454 129d 39       		.byte	0x39
 4455 129e 30       		.uleb128 0x30
 4456 129f 89030000 		.4byte	.LASF155
 4457 12a3 89030000 		.4byte	.LASF155
 4458 12a7 0E       		.byte	0xe
 4459 12a8 39       		.byte	0x39
 4460 12a9 30       		.uleb128 0x30
 4461 12aa E0010000 		.4byte	.LASF156
 4462 12ae E0010000 		.4byte	.LASF156
 4463 12b2 0E       		.byte	0xe
 4464 12b3 32       		.byte	0x32
 4465 12b4 31       		.uleb128 0x31
 4466 12b5 25050000 		.4byte	.LASF157
 4467 12b9 25050000 		.4byte	.LASF157
 4468 12bd 0F       		.byte	0xf
 4469 12be 3E05     		.2byte	0x53e
 4470 12c0 32       		.uleb128 0x32
 4471 12c1 9A050000 		.4byte	.LASF199
 4472 12c5 9A050000 		.4byte	.LASF199
 4473 12c9 31       		.uleb128 0x31
 4474 12ca 04080000 		.4byte	.LASF158
 4475 12ce 04080000 		.4byte	.LASF158
 4476 12d2 10       		.byte	0x10
 4477 12d3 3D03     		.2byte	0x33d
 4478 12d5 31       		.uleb128 0x31
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 107


 4479 12d6 48040000 		.4byte	.LASF159
 4480 12da 48040000 		.4byte	.LASF159
 4481 12de 10       		.byte	0x10
 4482 12df 3F03     		.2byte	0x33f
 4483 12e1 31       		.uleb128 0x31
 4484 12e2 4A010000 		.4byte	.LASF160
 4485 12e6 4A010000 		.4byte	.LASF160
 4486 12ea 10       		.byte	0x10
 4487 12eb 4703     		.2byte	0x347
 4488 12ed 30       		.uleb128 0x30
 4489 12ee 44070000 		.4byte	.LASF161
 4490 12f2 44070000 		.4byte	.LASF161
 4491 12f6 11       		.byte	0x11
 4492 12f7 BA       		.byte	0xba
 4493 12f8 31       		.uleb128 0x31
 4494 12f9 4C020000 		.4byte	.LASF162
 4495 12fd 4C020000 		.4byte	.LASF162
 4496 1301 0F       		.byte	0xf
 4497 1302 8E05     		.2byte	0x58e
 4498 1304 30       		.uleb128 0x30
 4499 1305 E4000000 		.4byte	.LASF163
 4500 1309 E4000000 		.4byte	.LASF163
 4501 130d 12       		.byte	0x12
 4502 130e 33       		.byte	0x33
 4503 130f 30       		.uleb128 0x30
 4504 1310 A9090000 		.4byte	.LASF164
 4505 1314 A9090000 		.4byte	.LASF164
 4506 1318 13       		.byte	0x13
 4507 1319 33       		.byte	0x33
 4508 131a 31       		.uleb128 0x31
 4509 131b 1C080000 		.4byte	.LASF165
 4510 131f 1C080000 		.4byte	.LASF165
 4511 1323 14       		.byte	0x14
 4512 1324 1B01     		.2byte	0x11b
 4513 1326 31       		.uleb128 0x31
 4514 1327 5F000000 		.4byte	.LASF166
 4515 132b 5F000000 		.4byte	.LASF166
 4516 132f 14       		.byte	0x14
 4517 1330 1E01     		.2byte	0x11e
 4518 1332 31       		.uleb128 0x31
 4519 1333 E6040000 		.4byte	.LASF167
 4520 1337 E6040000 		.4byte	.LASF167
 4521 133b 14       		.byte	0x14
 4522 133c 1D01     		.2byte	0x11d
 4523 133e 31       		.uleb128 0x31
 4524 133f C4080000 		.4byte	.LASF168
 4525 1343 C4080000 		.4byte	.LASF168
 4526 1347 14       		.byte	0x14
 4527 1348 1401     		.2byte	0x114
 4528 134a 31       		.uleb128 0x31
 4529 134b D3030000 		.4byte	.LASF169
 4530 134f D3030000 		.4byte	.LASF169
 4531 1353 0F       		.byte	0xf
 4532 1354 ED02     		.2byte	0x2ed
 4533 1356 31       		.uleb128 0x31
 4534 1357 5F030000 		.4byte	.LASF170
 4535 135b 5F030000 		.4byte	.LASF170
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 108


 4536 135f 06       		.byte	0x6
 4537 1360 8805     		.2byte	0x588
 4538 1362 30       		.uleb128 0x30
 4539 1363 AB030000 		.4byte	.LASF171
 4540 1367 AB030000 		.4byte	.LASF171
 4541 136b 0A       		.byte	0xa
 4542 136c 5D       		.byte	0x5d
 4543 136d 31       		.uleb128 0x31
 4544 136e 73030000 		.4byte	.LASF172
 4545 1372 73030000 		.4byte	.LASF172
 4546 1376 10       		.byte	0x10
 4547 1377 4503     		.2byte	0x345
 4548 1379 31       		.uleb128 0x31
 4549 137a C1030000 		.4byte	.LASF173
 4550 137e C1030000 		.4byte	.LASF173
 4551 1382 06       		.byte	0x6
 4552 1383 8802     		.2byte	0x288
 4553 1385 31       		.uleb128 0x31
 4554 1386 AF040000 		.4byte	.LASF174
 4555 138a AF040000 		.4byte	.LASF174
 4556 138e 15       		.byte	0x15
 4557 138f 5501     		.2byte	0x155
 4558 1391 30       		.uleb128 0x30
 4559 1392 78050000 		.4byte	.LASF175
 4560 1396 78050000 		.4byte	.LASF175
 4561 139a 16       		.byte	0x16
 4562 139b 77       		.byte	0x77
 4563 139c 30       		.uleb128 0x30
 4564 139d 7C070000 		.4byte	.LASF176
 4565 13a1 7C070000 		.4byte	.LASF176
 4566 13a5 17       		.byte	0x17
 4567 13a6 36       		.byte	0x36
 4568 13a7 30       		.uleb128 0x30
 4569 13a8 C9010000 		.4byte	.LASF177
 4570 13ac C9010000 		.4byte	.LASF177
 4571 13b0 18       		.byte	0x18
 4572 13b1 36       		.byte	0x36
 4573 13b2 30       		.uleb128 0x30
 4574 13b3 7A080000 		.4byte	.LASF178
 4575 13b7 7A080000 		.4byte	.LASF178
 4576 13bb 0B       		.byte	0xb
 4577 13bc 5D       		.byte	0x5d
 4578 13bd 31       		.uleb128 0x31
 4579 13be 8C040000 		.4byte	.LASF179
 4580 13c2 8C040000 		.4byte	.LASF179
 4581 13c6 0F       		.byte	0xf
 4582 13c7 4101     		.2byte	0x141
 4583 13c9 31       		.uleb128 0x31
 4584 13ca FC040000 		.4byte	.LASF180
 4585 13ce FC040000 		.4byte	.LASF180
 4586 13d2 06       		.byte	0x6
 4587 13d3 8405     		.2byte	0x584
 4588 13d5 30       		.uleb128 0x30
 4589 13d6 63040000 		.4byte	.LASF181
 4590 13da 63040000 		.4byte	.LASF181
 4591 13de 11       		.byte	0x11
 4592 13df D9       		.byte	0xd9
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 109


 4593 13e0 30       		.uleb128 0x30
 4594 13e1 B5090000 		.4byte	.LASF182
 4595 13e5 B5090000 		.4byte	.LASF182
 4596 13e9 0C       		.byte	0xc
 4597 13ea 18       		.byte	0x18
 4598 13eb 30       		.uleb128 0x30
 4599 13ec 510A0000 		.4byte	.LASF183
 4600 13f0 510A0000 		.4byte	.LASF183
 4601 13f4 08       		.byte	0x8
 4602 13f5 18       		.byte	0x18
 4603 13f6 30       		.uleb128 0x30
 4604 13f7 A7010000 		.4byte	.LASF184
 4605 13fb A7010000 		.4byte	.LASF184
 4606 13ff 19       		.byte	0x19
 4607 1400 18       		.byte	0x18
 4608 1401 30       		.uleb128 0x30
 4609 1402 14030000 		.4byte	.LASF185
 4610 1406 14030000 		.4byte	.LASF185
 4611 140a 0C       		.byte	0xc
 4612 140b 20       		.byte	0x20
 4613 140c 30       		.uleb128 0x30
 4614 140d BB070000 		.4byte	.LASF186
 4615 1411 BB070000 		.4byte	.LASF186
 4616 1415 08       		.byte	0x8
 4617 1416 20       		.byte	0x20
 4618 1417 30       		.uleb128 0x30
 4619 1418 0E050000 		.4byte	.LASF187
 4620 141c 0E050000 		.4byte	.LASF187
 4621 1420 19       		.byte	0x19
 4622 1421 20       		.byte	0x20
 4623 1422 30       		.uleb128 0x30
 4624 1423 38010000 		.4byte	.LASF188
 4625 1427 38010000 		.4byte	.LASF188
 4626 142b 1A       		.byte	0x1a
 4627 142c 72       		.byte	0x72
 4628 142d 30       		.uleb128 0x30
 4629 142e D9080000 		.4byte	.LASF189
 4630 1432 D9080000 		.4byte	.LASF189
 4631 1436 1B       		.byte	0x1b
 4632 1437 72       		.byte	0x72
 4633 1438 31       		.uleb128 0x31
 4634 1439 8B000000 		.4byte	.LASF190
 4635 143d 8B000000 		.4byte	.LASF190
 4636 1441 15       		.byte	0x15
 4637 1442 3201     		.2byte	0x132
 4638 1444 31       		.uleb128 0x31
 4639 1445 68020000 		.4byte	.LASF191
 4640 1449 68020000 		.4byte	.LASF191
 4641 144d 15       		.byte	0x15
 4642 144e 5001     		.2byte	0x150
 4643 1450 30       		.uleb128 0x30
 4644 1451 F3080000 		.4byte	.LASF192
 4645 1455 F3080000 		.4byte	.LASF192
 4646 1459 0A       		.byte	0xa
 4647 145a 4F       		.byte	0x4f
 4648 145b 30       		.uleb128 0x30
 4649 145c 1D0A0000 		.4byte	.LASF193
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 110


 4650 1460 1D0A0000 		.4byte	.LASF193
 4651 1464 0B       		.byte	0xb
 4652 1465 4F       		.byte	0x4f
 4653 1466 31       		.uleb128 0x31
 4654 1467 A8080000 		.4byte	.LASF194
 4655 146b A8080000 		.4byte	.LASF194
 4656 146f 0F       		.byte	0xf
 4657 1470 8E04     		.2byte	0x48e
 4658 1472 00       		.byte	0
 4659              		.section	.debug_abbrev,"",%progbits
 4660              	.Ldebug_abbrev0:
 4661 0000 01       		.uleb128 0x1
 4662 0001 11       		.uleb128 0x11
 4663 0002 01       		.byte	0x1
 4664 0003 25       		.uleb128 0x25
 4665 0004 0E       		.uleb128 0xe
 4666 0005 13       		.uleb128 0x13
 4667 0006 0B       		.uleb128 0xb
 4668 0007 03       		.uleb128 0x3
 4669 0008 0E       		.uleb128 0xe
 4670 0009 1B       		.uleb128 0x1b
 4671 000a 0E       		.uleb128 0xe
 4672 000b 55       		.uleb128 0x55
 4673 000c 17       		.uleb128 0x17
 4674 000d 11       		.uleb128 0x11
 4675 000e 01       		.uleb128 0x1
 4676 000f 10       		.uleb128 0x10
 4677 0010 17       		.uleb128 0x17
 4678 0011 00       		.byte	0
 4679 0012 00       		.byte	0
 4680 0013 02       		.uleb128 0x2
 4681 0014 24       		.uleb128 0x24
 4682 0015 00       		.byte	0
 4683 0016 0B       		.uleb128 0xb
 4684 0017 0B       		.uleb128 0xb
 4685 0018 3E       		.uleb128 0x3e
 4686 0019 0B       		.uleb128 0xb
 4687 001a 03       		.uleb128 0x3
 4688 001b 0E       		.uleb128 0xe
 4689 001c 00       		.byte	0
 4690 001d 00       		.byte	0
 4691 001e 03       		.uleb128 0x3
 4692 001f 24       		.uleb128 0x24
 4693 0020 00       		.byte	0
 4694 0021 0B       		.uleb128 0xb
 4695 0022 0B       		.uleb128 0xb
 4696 0023 3E       		.uleb128 0x3e
 4697 0024 0B       		.uleb128 0xb
 4698 0025 03       		.uleb128 0x3
 4699 0026 08       		.uleb128 0x8
 4700 0027 00       		.byte	0
 4701 0028 00       		.byte	0
 4702 0029 04       		.uleb128 0x4
 4703 002a 16       		.uleb128 0x16
 4704 002b 00       		.byte	0
 4705 002c 03       		.uleb128 0x3
 4706 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 111


 4707 002e 3A       		.uleb128 0x3a
 4708 002f 0B       		.uleb128 0xb
 4709 0030 3B       		.uleb128 0x3b
 4710 0031 0B       		.uleb128 0xb
 4711 0032 49       		.uleb128 0x49
 4712 0033 13       		.uleb128 0x13
 4713 0034 00       		.byte	0
 4714 0035 00       		.byte	0
 4715 0036 05       		.uleb128 0x5
 4716 0037 16       		.uleb128 0x16
 4717 0038 00       		.byte	0
 4718 0039 03       		.uleb128 0x3
 4719 003a 0E       		.uleb128 0xe
 4720 003b 3A       		.uleb128 0x3a
 4721 003c 0B       		.uleb128 0xb
 4722 003d 3B       		.uleb128 0x3b
 4723 003e 05       		.uleb128 0x5
 4724 003f 49       		.uleb128 0x49
 4725 0040 13       		.uleb128 0x13
 4726 0041 00       		.byte	0
 4727 0042 00       		.byte	0
 4728 0043 06       		.uleb128 0x6
 4729 0044 35       		.uleb128 0x35
 4730 0045 00       		.byte	0
 4731 0046 49       		.uleb128 0x49
 4732 0047 13       		.uleb128 0x13
 4733 0048 00       		.byte	0
 4734 0049 00       		.byte	0
 4735 004a 07       		.uleb128 0x7
 4736 004b 0F       		.uleb128 0xf
 4737 004c 00       		.byte	0
 4738 004d 0B       		.uleb128 0xb
 4739 004e 0B       		.uleb128 0xb
 4740 004f 49       		.uleb128 0x49
 4741 0050 13       		.uleb128 0x13
 4742 0051 00       		.byte	0
 4743 0052 00       		.byte	0
 4744 0053 08       		.uleb128 0x8
 4745 0054 15       		.uleb128 0x15
 4746 0055 00       		.byte	0
 4747 0056 27       		.uleb128 0x27
 4748 0057 19       		.uleb128 0x19
 4749 0058 00       		.byte	0
 4750 0059 00       		.byte	0
 4751 005a 09       		.uleb128 0x9
 4752 005b 0F       		.uleb128 0xf
 4753 005c 00       		.byte	0
 4754 005d 0B       		.uleb128 0xb
 4755 005e 0B       		.uleb128 0xb
 4756 005f 00       		.byte	0
 4757 0060 00       		.byte	0
 4758 0061 0A       		.uleb128 0xa
 4759 0062 04       		.uleb128 0x4
 4760 0063 01       		.byte	0x1
 4761 0064 03       		.uleb128 0x3
 4762 0065 0E       		.uleb128 0xe
 4763 0066 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 112


 4764 0067 0B       		.uleb128 0xb
 4765 0068 49       		.uleb128 0x49
 4766 0069 13       		.uleb128 0x13
 4767 006a 3A       		.uleb128 0x3a
 4768 006b 0B       		.uleb128 0xb
 4769 006c 3B       		.uleb128 0x3b
 4770 006d 0B       		.uleb128 0xb
 4771 006e 01       		.uleb128 0x1
 4772 006f 13       		.uleb128 0x13
 4773 0070 00       		.byte	0
 4774 0071 00       		.byte	0
 4775 0072 0B       		.uleb128 0xb
 4776 0073 28       		.uleb128 0x28
 4777 0074 00       		.byte	0
 4778 0075 03       		.uleb128 0x3
 4779 0076 0E       		.uleb128 0xe
 4780 0077 1C       		.uleb128 0x1c
 4781 0078 0D       		.uleb128 0xd
 4782 0079 00       		.byte	0
 4783 007a 00       		.byte	0
 4784 007b 0C       		.uleb128 0xc
 4785 007c 04       		.uleb128 0x4
 4786 007d 01       		.byte	0x1
 4787 007e 0B       		.uleb128 0xb
 4788 007f 0B       		.uleb128 0xb
 4789 0080 49       		.uleb128 0x49
 4790 0081 13       		.uleb128 0x13
 4791 0082 3A       		.uleb128 0x3a
 4792 0083 0B       		.uleb128 0xb
 4793 0084 3B       		.uleb128 0x3b
 4794 0085 0B       		.uleb128 0xb
 4795 0086 01       		.uleb128 0x1
 4796 0087 13       		.uleb128 0x13
 4797 0088 00       		.byte	0
 4798 0089 00       		.byte	0
 4799 008a 0D       		.uleb128 0xd
 4800 008b 28       		.uleb128 0x28
 4801 008c 00       		.byte	0
 4802 008d 03       		.uleb128 0x3
 4803 008e 0E       		.uleb128 0xe
 4804 008f 1C       		.uleb128 0x1c
 4805 0090 0B       		.uleb128 0xb
 4806 0091 00       		.byte	0
 4807 0092 00       		.byte	0
 4808 0093 0E       		.uleb128 0xe
 4809 0094 13       		.uleb128 0x13
 4810 0095 01       		.byte	0x1
 4811 0096 0B       		.uleb128 0xb
 4812 0097 0B       		.uleb128 0xb
 4813 0098 3A       		.uleb128 0x3a
 4814 0099 0B       		.uleb128 0xb
 4815 009a 3B       		.uleb128 0x3b
 4816 009b 0B       		.uleb128 0xb
 4817 009c 01       		.uleb128 0x1
 4818 009d 13       		.uleb128 0x13
 4819 009e 00       		.byte	0
 4820 009f 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 113


 4821 00a0 0F       		.uleb128 0xf
 4822 00a1 0D       		.uleb128 0xd
 4823 00a2 00       		.byte	0
 4824 00a3 03       		.uleb128 0x3
 4825 00a4 0E       		.uleb128 0xe
 4826 00a5 3A       		.uleb128 0x3a
 4827 00a6 0B       		.uleb128 0xb
 4828 00a7 3B       		.uleb128 0x3b
 4829 00a8 0B       		.uleb128 0xb
 4830 00a9 49       		.uleb128 0x49
 4831 00aa 13       		.uleb128 0x13
 4832 00ab 38       		.uleb128 0x38
 4833 00ac 0B       		.uleb128 0xb
 4834 00ad 00       		.byte	0
 4835 00ae 00       		.byte	0
 4836 00af 10       		.uleb128 0x10
 4837 00b0 0D       		.uleb128 0xd
 4838 00b1 00       		.byte	0
 4839 00b2 03       		.uleb128 0x3
 4840 00b3 08       		.uleb128 0x8
 4841 00b4 3A       		.uleb128 0x3a
 4842 00b5 0B       		.uleb128 0xb
 4843 00b6 3B       		.uleb128 0x3b
 4844 00b7 0B       		.uleb128 0xb
 4845 00b8 49       		.uleb128 0x49
 4846 00b9 13       		.uleb128 0x13
 4847 00ba 38       		.uleb128 0x38
 4848 00bb 0B       		.uleb128 0xb
 4849 00bc 00       		.byte	0
 4850 00bd 00       		.byte	0
 4851 00be 11       		.uleb128 0x11
 4852 00bf 0D       		.uleb128 0xd
 4853 00c0 00       		.byte	0
 4854 00c1 03       		.uleb128 0x3
 4855 00c2 0E       		.uleb128 0xe
 4856 00c3 3A       		.uleb128 0x3a
 4857 00c4 0B       		.uleb128 0xb
 4858 00c5 3B       		.uleb128 0x3b
 4859 00c6 05       		.uleb128 0x5
 4860 00c7 49       		.uleb128 0x49
 4861 00c8 13       		.uleb128 0x13
 4862 00c9 38       		.uleb128 0x38
 4863 00ca 0B       		.uleb128 0xb
 4864 00cb 00       		.byte	0
 4865 00cc 00       		.byte	0
 4866 00cd 12       		.uleb128 0x12
 4867 00ce 0D       		.uleb128 0xd
 4868 00cf 00       		.byte	0
 4869 00d0 03       		.uleb128 0x3
 4870 00d1 08       		.uleb128 0x8
 4871 00d2 3A       		.uleb128 0x3a
 4872 00d3 0B       		.uleb128 0xb
 4873 00d4 3B       		.uleb128 0x3b
 4874 00d5 05       		.uleb128 0x5
 4875 00d6 49       		.uleb128 0x49
 4876 00d7 13       		.uleb128 0x13
 4877 00d8 38       		.uleb128 0x38
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 114


 4878 00d9 0B       		.uleb128 0xb
 4879 00da 00       		.byte	0
 4880 00db 00       		.byte	0
 4881 00dc 13       		.uleb128 0x13
 4882 00dd 17       		.uleb128 0x17
 4883 00de 01       		.byte	0x1
 4884 00df 0B       		.uleb128 0xb
 4885 00e0 0B       		.uleb128 0xb
 4886 00e1 3A       		.uleb128 0x3a
 4887 00e2 0B       		.uleb128 0xb
 4888 00e3 3B       		.uleb128 0x3b
 4889 00e4 05       		.uleb128 0x5
 4890 00e5 01       		.uleb128 0x1
 4891 00e6 13       		.uleb128 0x13
 4892 00e7 00       		.byte	0
 4893 00e8 00       		.byte	0
 4894 00e9 14       		.uleb128 0x14
 4895 00ea 0D       		.uleb128 0xd
 4896 00eb 00       		.byte	0
 4897 00ec 03       		.uleb128 0x3
 4898 00ed 08       		.uleb128 0x8
 4899 00ee 3A       		.uleb128 0x3a
 4900 00ef 0B       		.uleb128 0xb
 4901 00f0 3B       		.uleb128 0x3b
 4902 00f1 05       		.uleb128 0x5
 4903 00f2 49       		.uleb128 0x49
 4904 00f3 13       		.uleb128 0x13
 4905 00f4 00       		.byte	0
 4906 00f5 00       		.byte	0
 4907 00f6 15       		.uleb128 0x15
 4908 00f7 0D       		.uleb128 0xd
 4909 00f8 00       		.byte	0
 4910 00f9 03       		.uleb128 0x3
 4911 00fa 0E       		.uleb128 0xe
 4912 00fb 3A       		.uleb128 0x3a
 4913 00fc 0B       		.uleb128 0xb
 4914 00fd 3B       		.uleb128 0x3b
 4915 00fe 05       		.uleb128 0x5
 4916 00ff 49       		.uleb128 0x49
 4917 0100 13       		.uleb128 0x13
 4918 0101 00       		.byte	0
 4919 0102 00       		.byte	0
 4920 0103 16       		.uleb128 0x16
 4921 0104 01       		.uleb128 0x1
 4922 0105 01       		.byte	0x1
 4923 0106 49       		.uleb128 0x49
 4924 0107 13       		.uleb128 0x13
 4925 0108 01       		.uleb128 0x1
 4926 0109 13       		.uleb128 0x13
 4927 010a 00       		.byte	0
 4928 010b 00       		.byte	0
 4929 010c 17       		.uleb128 0x17
 4930 010d 21       		.uleb128 0x21
 4931 010e 00       		.byte	0
 4932 010f 49       		.uleb128 0x49
 4933 0110 13       		.uleb128 0x13
 4934 0111 2F       		.uleb128 0x2f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 115


 4935 0112 0B       		.uleb128 0xb
 4936 0113 00       		.byte	0
 4937 0114 00       		.byte	0
 4938 0115 18       		.uleb128 0x18
 4939 0116 13       		.uleb128 0x13
 4940 0117 01       		.byte	0x1
 4941 0118 0B       		.uleb128 0xb
 4942 0119 0B       		.uleb128 0xb
 4943 011a 3A       		.uleb128 0x3a
 4944 011b 0B       		.uleb128 0xb
 4945 011c 3B       		.uleb128 0x3b
 4946 011d 05       		.uleb128 0x5
 4947 011e 01       		.uleb128 0x1
 4948 011f 13       		.uleb128 0x13
 4949 0120 00       		.byte	0
 4950 0121 00       		.byte	0
 4951 0122 19       		.uleb128 0x19
 4952 0123 04       		.uleb128 0x4
 4953 0124 01       		.byte	0x1
 4954 0125 0B       		.uleb128 0xb
 4955 0126 0B       		.uleb128 0xb
 4956 0127 49       		.uleb128 0x49
 4957 0128 13       		.uleb128 0x13
 4958 0129 3A       		.uleb128 0x3a
 4959 012a 0B       		.uleb128 0xb
 4960 012b 3B       		.uleb128 0x3b
 4961 012c 05       		.uleb128 0x5
 4962 012d 01       		.uleb128 0x1
 4963 012e 13       		.uleb128 0x13
 4964 012f 00       		.byte	0
 4965 0130 00       		.byte	0
 4966 0131 1A       		.uleb128 0x1a
 4967 0132 2E       		.uleb128 0x2e
 4968 0133 01       		.byte	0x1
 4969 0134 3F       		.uleb128 0x3f
 4970 0135 19       		.uleb128 0x19
 4971 0136 03       		.uleb128 0x3
 4972 0137 0E       		.uleb128 0xe
 4973 0138 3A       		.uleb128 0x3a
 4974 0139 0B       		.uleb128 0xb
 4975 013a 3B       		.uleb128 0x3b
 4976 013b 05       		.uleb128 0x5
 4977 013c 27       		.uleb128 0x27
 4978 013d 19       		.uleb128 0x19
 4979 013e 11       		.uleb128 0x11
 4980 013f 01       		.uleb128 0x1
 4981 0140 12       		.uleb128 0x12
 4982 0141 06       		.uleb128 0x6
 4983 0142 40       		.uleb128 0x40
 4984 0143 18       		.uleb128 0x18
 4985 0144 9742     		.uleb128 0x2117
 4986 0146 19       		.uleb128 0x19
 4987 0147 01       		.uleb128 0x1
 4988 0148 13       		.uleb128 0x13
 4989 0149 00       		.byte	0
 4990 014a 00       		.byte	0
 4991 014b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 116


 4992 014c 898201   		.uleb128 0x4109
 4993 014f 00       		.byte	0
 4994 0150 11       		.uleb128 0x11
 4995 0151 01       		.uleb128 0x1
 4996 0152 31       		.uleb128 0x31
 4997 0153 13       		.uleb128 0x13
 4998 0154 00       		.byte	0
 4999 0155 00       		.byte	0
 5000 0156 1C       		.uleb128 0x1c
 5001 0157 898201   		.uleb128 0x4109
 5002 015a 01       		.byte	0x1
 5003 015b 11       		.uleb128 0x11
 5004 015c 01       		.uleb128 0x1
 5005 015d 31       		.uleb128 0x31
 5006 015e 13       		.uleb128 0x13
 5007 015f 01       		.uleb128 0x1
 5008 0160 13       		.uleb128 0x13
 5009 0161 00       		.byte	0
 5010 0162 00       		.byte	0
 5011 0163 1D       		.uleb128 0x1d
 5012 0164 8A8201   		.uleb128 0x410a
 5013 0167 00       		.byte	0
 5014 0168 02       		.uleb128 0x2
 5015 0169 18       		.uleb128 0x18
 5016 016a 9142     		.uleb128 0x2111
 5017 016c 18       		.uleb128 0x18
 5018 016d 00       		.byte	0
 5019 016e 00       		.byte	0
 5020 016f 1E       		.uleb128 0x1e
 5021 0170 898201   		.uleb128 0x4109
 5022 0173 01       		.byte	0x1
 5023 0174 11       		.uleb128 0x11
 5024 0175 01       		.uleb128 0x1
 5025 0176 31       		.uleb128 0x31
 5026 0177 13       		.uleb128 0x13
 5027 0178 00       		.byte	0
 5028 0179 00       		.byte	0
 5029 017a 1F       		.uleb128 0x1f
 5030 017b 34       		.uleb128 0x34
 5031 017c 00       		.byte	0
 5032 017d 03       		.uleb128 0x3
 5033 017e 08       		.uleb128 0x8
 5034 017f 3A       		.uleb128 0x3a
 5035 0180 0B       		.uleb128 0xb
 5036 0181 3B       		.uleb128 0x3b
 5037 0182 05       		.uleb128 0x5
 5038 0183 49       		.uleb128 0x49
 5039 0184 13       		.uleb128 0x13
 5040 0185 02       		.uleb128 0x2
 5041 0186 17       		.uleb128 0x17
 5042 0187 00       		.byte	0
 5043 0188 00       		.byte	0
 5044 0189 20       		.uleb128 0x20
 5045 018a 05       		.uleb128 0x5
 5046 018b 00       		.byte	0
 5047 018c 03       		.uleb128 0x3
 5048 018d 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 117


 5049 018e 3A       		.uleb128 0x3a
 5050 018f 0B       		.uleb128 0xb
 5051 0190 3B       		.uleb128 0x3b
 5052 0191 05       		.uleb128 0x5
 5053 0192 49       		.uleb128 0x49
 5054 0193 13       		.uleb128 0x13
 5055 0194 02       		.uleb128 0x2
 5056 0195 17       		.uleb128 0x17
 5057 0196 00       		.byte	0
 5058 0197 00       		.byte	0
 5059 0198 21       		.uleb128 0x21
 5060 0199 2E       		.uleb128 0x2e
 5061 019a 01       		.byte	0x1
 5062 019b 3F       		.uleb128 0x3f
 5063 019c 19       		.uleb128 0x19
 5064 019d 03       		.uleb128 0x3
 5065 019e 0E       		.uleb128 0xe
 5066 019f 3A       		.uleb128 0x3a
 5067 01a0 0B       		.uleb128 0xb
 5068 01a1 3B       		.uleb128 0x3b
 5069 01a2 05       		.uleb128 0x5
 5070 01a3 27       		.uleb128 0x27
 5071 01a4 19       		.uleb128 0x19
 5072 01a5 8701     		.uleb128 0x87
 5073 01a7 19       		.uleb128 0x19
 5074 01a8 11       		.uleb128 0x11
 5075 01a9 01       		.uleb128 0x1
 5076 01aa 12       		.uleb128 0x12
 5077 01ab 06       		.uleb128 0x6
 5078 01ac 40       		.uleb128 0x40
 5079 01ad 18       		.uleb128 0x18
 5080 01ae 9742     		.uleb128 0x2117
 5081 01b0 19       		.uleb128 0x19
 5082 01b1 01       		.uleb128 0x1
 5083 01b2 13       		.uleb128 0x13
 5084 01b3 00       		.byte	0
 5085 01b4 00       		.byte	0
 5086 01b5 22       		.uleb128 0x22
 5087 01b6 05       		.uleb128 0x5
 5088 01b7 00       		.byte	0
 5089 01b8 03       		.uleb128 0x3
 5090 01b9 08       		.uleb128 0x8
 5091 01ba 3A       		.uleb128 0x3a
 5092 01bb 0B       		.uleb128 0xb
 5093 01bc 3B       		.uleb128 0x3b
 5094 01bd 05       		.uleb128 0x5
 5095 01be 49       		.uleb128 0x49
 5096 01bf 13       		.uleb128 0x13
 5097 01c0 02       		.uleb128 0x2
 5098 01c1 17       		.uleb128 0x17
 5099 01c2 00       		.byte	0
 5100 01c3 00       		.byte	0
 5101 01c4 23       		.uleb128 0x23
 5102 01c5 34       		.uleb128 0x34
 5103 01c6 00       		.byte	0
 5104 01c7 03       		.uleb128 0x3
 5105 01c8 08       		.uleb128 0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 118


 5106 01c9 3A       		.uleb128 0x3a
 5107 01ca 0B       		.uleb128 0xb
 5108 01cb 3B       		.uleb128 0x3b
 5109 01cc 05       		.uleb128 0x5
 5110 01cd 49       		.uleb128 0x49
 5111 01ce 13       		.uleb128 0x13
 5112 01cf 02       		.uleb128 0x2
 5113 01d0 18       		.uleb128 0x18
 5114 01d1 00       		.byte	0
 5115 01d2 00       		.byte	0
 5116 01d3 24       		.uleb128 0x24
 5117 01d4 34       		.uleb128 0x34
 5118 01d5 00       		.byte	0
 5119 01d6 03       		.uleb128 0x3
 5120 01d7 0E       		.uleb128 0xe
 5121 01d8 3A       		.uleb128 0x3a
 5122 01d9 0B       		.uleb128 0xb
 5123 01da 3B       		.uleb128 0x3b
 5124 01db 05       		.uleb128 0x5
 5125 01dc 49       		.uleb128 0x49
 5126 01dd 13       		.uleb128 0x13
 5127 01de 02       		.uleb128 0x2
 5128 01df 17       		.uleb128 0x17
 5129 01e0 00       		.byte	0
 5130 01e1 00       		.byte	0
 5131 01e2 25       		.uleb128 0x25
 5132 01e3 34       		.uleb128 0x34
 5133 01e4 00       		.byte	0
 5134 01e5 03       		.uleb128 0x3
 5135 01e6 0E       		.uleb128 0xe
 5136 01e7 3A       		.uleb128 0x3a
 5137 01e8 0B       		.uleb128 0xb
 5138 01e9 3B       		.uleb128 0x3b
 5139 01ea 05       		.uleb128 0x5
 5140 01eb 49       		.uleb128 0x49
 5141 01ec 13       		.uleb128 0x13
 5142 01ed 02       		.uleb128 0x2
 5143 01ee 18       		.uleb128 0x18
 5144 01ef 00       		.byte	0
 5145 01f0 00       		.byte	0
 5146 01f1 26       		.uleb128 0x26
 5147 01f2 05       		.uleb128 0x5
 5148 01f3 00       		.byte	0
 5149 01f4 03       		.uleb128 0x3
 5150 01f5 0E       		.uleb128 0xe
 5151 01f6 3A       		.uleb128 0x3a
 5152 01f7 0B       		.uleb128 0xb
 5153 01f8 3B       		.uleb128 0x3b
 5154 01f9 05       		.uleb128 0x5
 5155 01fa 49       		.uleb128 0x49
 5156 01fb 13       		.uleb128 0x13
 5157 01fc 02       		.uleb128 0x2
 5158 01fd 18       		.uleb128 0x18
 5159 01fe 00       		.byte	0
 5160 01ff 00       		.byte	0
 5161 0200 27       		.uleb128 0x27
 5162 0201 2E       		.uleb128 0x2e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 119


 5163 0202 01       		.byte	0x1
 5164 0203 3F       		.uleb128 0x3f
 5165 0204 19       		.uleb128 0x19
 5166 0205 03       		.uleb128 0x3
 5167 0206 0E       		.uleb128 0xe
 5168 0207 3A       		.uleb128 0x3a
 5169 0208 0B       		.uleb128 0xb
 5170 0209 3B       		.uleb128 0x3b
 5171 020a 05       		.uleb128 0x5
 5172 020b 27       		.uleb128 0x27
 5173 020c 19       		.uleb128 0x19
 5174 020d 11       		.uleb128 0x11
 5175 020e 01       		.uleb128 0x1
 5176 020f 12       		.uleb128 0x12
 5177 0210 06       		.uleb128 0x6
 5178 0211 40       		.uleb128 0x40
 5179 0212 18       		.uleb128 0x18
 5180 0213 9642     		.uleb128 0x2116
 5181 0215 19       		.uleb128 0x19
 5182 0216 01       		.uleb128 0x1
 5183 0217 13       		.uleb128 0x13
 5184 0218 00       		.byte	0
 5185 0219 00       		.byte	0
 5186 021a 28       		.uleb128 0x28
 5187 021b 0B       		.uleb128 0xb
 5188 021c 01       		.byte	0x1
 5189 021d 11       		.uleb128 0x11
 5190 021e 01       		.uleb128 0x1
 5191 021f 12       		.uleb128 0x12
 5192 0220 06       		.uleb128 0x6
 5193 0221 00       		.byte	0
 5194 0222 00       		.byte	0
 5195 0223 29       		.uleb128 0x29
 5196 0224 2E       		.uleb128 0x2e
 5197 0225 01       		.byte	0x1
 5198 0226 3F       		.uleb128 0x3f
 5199 0227 19       		.uleb128 0x19
 5200 0228 03       		.uleb128 0x3
 5201 0229 0E       		.uleb128 0xe
 5202 022a 3A       		.uleb128 0x3a
 5203 022b 0B       		.uleb128 0xb
 5204 022c 3B       		.uleb128 0x3b
 5205 022d 05       		.uleb128 0x5
 5206 022e 27       		.uleb128 0x27
 5207 022f 19       		.uleb128 0x19
 5208 0230 49       		.uleb128 0x49
 5209 0231 13       		.uleb128 0x13
 5210 0232 11       		.uleb128 0x11
 5211 0233 01       		.uleb128 0x1
 5212 0234 12       		.uleb128 0x12
 5213 0235 06       		.uleb128 0x6
 5214 0236 40       		.uleb128 0x40
 5215 0237 18       		.uleb128 0x18
 5216 0238 9642     		.uleb128 0x2116
 5217 023a 19       		.uleb128 0x19
 5218 023b 01       		.uleb128 0x1
 5219 023c 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 120


 5220 023d 00       		.byte	0
 5221 023e 00       		.byte	0
 5222 023f 2A       		.uleb128 0x2a
 5223 0240 2E       		.uleb128 0x2e
 5224 0241 01       		.byte	0x1
 5225 0242 3F       		.uleb128 0x3f
 5226 0243 19       		.uleb128 0x19
 5227 0244 03       		.uleb128 0x3
 5228 0245 0E       		.uleb128 0xe
 5229 0246 3A       		.uleb128 0x3a
 5230 0247 0B       		.uleb128 0xb
 5231 0248 3B       		.uleb128 0x3b
 5232 0249 05       		.uleb128 0x5
 5233 024a 27       		.uleb128 0x27
 5234 024b 19       		.uleb128 0x19
 5235 024c 8701     		.uleb128 0x87
 5236 024e 19       		.uleb128 0x19
 5237 024f 11       		.uleb128 0x11
 5238 0250 01       		.uleb128 0x1
 5239 0251 12       		.uleb128 0x12
 5240 0252 06       		.uleb128 0x6
 5241 0253 40       		.uleb128 0x40
 5242 0254 18       		.uleb128 0x18
 5243 0255 9642     		.uleb128 0x2116
 5244 0257 19       		.uleb128 0x19
 5245 0258 01       		.uleb128 0x1
 5246 0259 13       		.uleb128 0x13
 5247 025a 00       		.byte	0
 5248 025b 00       		.byte	0
 5249 025c 2B       		.uleb128 0x2b
 5250 025d 34       		.uleb128 0x34
 5251 025e 00       		.byte	0
 5252 025f 03       		.uleb128 0x3
 5253 0260 0E       		.uleb128 0xe
 5254 0261 3A       		.uleb128 0x3a
 5255 0262 0B       		.uleb128 0xb
 5256 0263 3B       		.uleb128 0x3b
 5257 0264 05       		.uleb128 0x5
 5258 0265 49       		.uleb128 0x49
 5259 0266 13       		.uleb128 0x13
 5260 0267 1C       		.uleb128 0x1c
 5261 0268 0B       		.uleb128 0xb
 5262 0269 00       		.byte	0
 5263 026a 00       		.byte	0
 5264 026b 2C       		.uleb128 0x2c
 5265 026c 2E       		.uleb128 0x2e
 5266 026d 01       		.byte	0x1
 5267 026e 3F       		.uleb128 0x3f
 5268 026f 19       		.uleb128 0x19
 5269 0270 03       		.uleb128 0x3
 5270 0271 0E       		.uleb128 0xe
 5271 0272 3A       		.uleb128 0x3a
 5272 0273 0B       		.uleb128 0xb
 5273 0274 3B       		.uleb128 0x3b
 5274 0275 05       		.uleb128 0x5
 5275 0276 27       		.uleb128 0x27
 5276 0277 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 121


 5277 0278 49       		.uleb128 0x49
 5278 0279 13       		.uleb128 0x13
 5279 027a 11       		.uleb128 0x11
 5280 027b 01       		.uleb128 0x1
 5281 027c 12       		.uleb128 0x12
 5282 027d 06       		.uleb128 0x6
 5283 027e 40       		.uleb128 0x40
 5284 027f 18       		.uleb128 0x18
 5285 0280 9742     		.uleb128 0x2117
 5286 0282 19       		.uleb128 0x19
 5287 0283 01       		.uleb128 0x1
 5288 0284 13       		.uleb128 0x13
 5289 0285 00       		.byte	0
 5290 0286 00       		.byte	0
 5291 0287 2D       		.uleb128 0x2d
 5292 0288 34       		.uleb128 0x34
 5293 0289 00       		.byte	0
 5294 028a 03       		.uleb128 0x3
 5295 028b 08       		.uleb128 0x8
 5296 028c 3A       		.uleb128 0x3a
 5297 028d 0B       		.uleb128 0xb
 5298 028e 3B       		.uleb128 0x3b
 5299 028f 0B       		.uleb128 0xb
 5300 0290 49       		.uleb128 0x49
 5301 0291 13       		.uleb128 0x13
 5302 0292 3F       		.uleb128 0x3f
 5303 0293 19       		.uleb128 0x19
 5304 0294 02       		.uleb128 0x2
 5305 0295 18       		.uleb128 0x18
 5306 0296 00       		.byte	0
 5307 0297 00       		.byte	0
 5308 0298 2E       		.uleb128 0x2e
 5309 0299 34       		.uleb128 0x34
 5310 029a 00       		.byte	0
 5311 029b 03       		.uleb128 0x3
 5312 029c 0E       		.uleb128 0xe
 5313 029d 3A       		.uleb128 0x3a
 5314 029e 0B       		.uleb128 0xb
 5315 029f 3B       		.uleb128 0x3b
 5316 02a0 0B       		.uleb128 0xb
 5317 02a1 49       		.uleb128 0x49
 5318 02a2 13       		.uleb128 0x13
 5319 02a3 3F       		.uleb128 0x3f
 5320 02a4 19       		.uleb128 0x19
 5321 02a5 02       		.uleb128 0x2
 5322 02a6 18       		.uleb128 0x18
 5323 02a7 00       		.byte	0
 5324 02a8 00       		.byte	0
 5325 02a9 2F       		.uleb128 0x2f
 5326 02aa 34       		.uleb128 0x34
 5327 02ab 00       		.byte	0
 5328 02ac 03       		.uleb128 0x3
 5329 02ad 0E       		.uleb128 0xe
 5330 02ae 3A       		.uleb128 0x3a
 5331 02af 0B       		.uleb128 0xb
 5332 02b0 3B       		.uleb128 0x3b
 5333 02b1 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 122


 5334 02b2 49       		.uleb128 0x49
 5335 02b3 13       		.uleb128 0x13
 5336 02b4 3F       		.uleb128 0x3f
 5337 02b5 19       		.uleb128 0x19
 5338 02b6 02       		.uleb128 0x2
 5339 02b7 18       		.uleb128 0x18
 5340 02b8 00       		.byte	0
 5341 02b9 00       		.byte	0
 5342 02ba 30       		.uleb128 0x30
 5343 02bb 2E       		.uleb128 0x2e
 5344 02bc 00       		.byte	0
 5345 02bd 3F       		.uleb128 0x3f
 5346 02be 19       		.uleb128 0x19
 5347 02bf 3C       		.uleb128 0x3c
 5348 02c0 19       		.uleb128 0x19
 5349 02c1 6E       		.uleb128 0x6e
 5350 02c2 0E       		.uleb128 0xe
 5351 02c3 03       		.uleb128 0x3
 5352 02c4 0E       		.uleb128 0xe
 5353 02c5 3A       		.uleb128 0x3a
 5354 02c6 0B       		.uleb128 0xb
 5355 02c7 3B       		.uleb128 0x3b
 5356 02c8 0B       		.uleb128 0xb
 5357 02c9 00       		.byte	0
 5358 02ca 00       		.byte	0
 5359 02cb 31       		.uleb128 0x31
 5360 02cc 2E       		.uleb128 0x2e
 5361 02cd 00       		.byte	0
 5362 02ce 3F       		.uleb128 0x3f
 5363 02cf 19       		.uleb128 0x19
 5364 02d0 3C       		.uleb128 0x3c
 5365 02d1 19       		.uleb128 0x19
 5366 02d2 6E       		.uleb128 0x6e
 5367 02d3 0E       		.uleb128 0xe
 5368 02d4 03       		.uleb128 0x3
 5369 02d5 0E       		.uleb128 0xe
 5370 02d6 3A       		.uleb128 0x3a
 5371 02d7 0B       		.uleb128 0xb
 5372 02d8 3B       		.uleb128 0x3b
 5373 02d9 05       		.uleb128 0x5
 5374 02da 00       		.byte	0
 5375 02db 00       		.byte	0
 5376 02dc 32       		.uleb128 0x32
 5377 02dd 2E       		.uleb128 0x2e
 5378 02de 00       		.byte	0
 5379 02df 3F       		.uleb128 0x3f
 5380 02e0 19       		.uleb128 0x19
 5381 02e1 3C       		.uleb128 0x3c
 5382 02e2 19       		.uleb128 0x19
 5383 02e3 6E       		.uleb128 0x6e
 5384 02e4 0E       		.uleb128 0xe
 5385 02e5 03       		.uleb128 0x3
 5386 02e6 0E       		.uleb128 0xe
 5387 02e7 00       		.byte	0
 5388 02e8 00       		.byte	0
 5389 02e9 00       		.byte	0
 5390              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 123


 5391              	.Ldebug_loc0:
 5392              	.LLST0:
 5393 0000 28000000 		.4byte	.LVL10
 5394 0004 2C000000 		.4byte	.LVL11
 5395 0008 0200     		.2byte	0x2
 5396 000a 30       		.byte	0x30
 5397 000b 9F       		.byte	0x9f
 5398 000c 2C000000 		.4byte	.LVL11
 5399 0010 48000000 		.4byte	.LVL16
 5400 0014 0100     		.2byte	0x1
 5401 0016 54       		.byte	0x54
 5402 0017 00000000 		.4byte	0
 5403 001b 00000000 		.4byte	0
 5404              	.LLST1:
 5405 001f 00000000 		.4byte	.LVL20
 5406 0023 12000000 		.4byte	.LVL21
 5407 0027 0100     		.2byte	0x1
 5408 0029 50       		.byte	0x50
 5409 002a 12000000 		.4byte	.LVL21
 5410 002e 1C000000 		.4byte	.LFE33
 5411 0032 0400     		.2byte	0x4
 5412 0034 F3       		.byte	0xf3
 5413 0035 01       		.uleb128 0x1
 5414 0036 50       		.byte	0x50
 5415 0037 9F       		.byte	0x9f
 5416 0038 00000000 		.4byte	0
 5417 003c 00000000 		.4byte	0
 5418              	.LLST2:
 5419 0040 00000000 		.4byte	.LVL22
 5420 0044 06000000 		.4byte	.LVL24
 5421 0048 0100     		.2byte	0x1
 5422 004a 50       		.byte	0x50
 5423 004b 06000000 		.4byte	.LVL24
 5424 004f F0000000 		.4byte	.LFE35
 5425 0053 0400     		.2byte	0x4
 5426 0055 F3       		.byte	0xf3
 5427 0056 01       		.uleb128 0x1
 5428 0057 50       		.byte	0x50
 5429 0058 9F       		.byte	0x9f
 5430 0059 00000000 		.4byte	0
 5431 005d 00000000 		.4byte	0
 5432              	.LLST3:
 5433 0061 40000000 		.4byte	.LVL33
 5434 0065 58000000 		.4byte	.LVL37
 5435 0069 0300     		.2byte	0x3
 5436 006b 08       		.byte	0x8
 5437 006c 20       		.byte	0x20
 5438 006d 9F       		.byte	0x9f
 5439 006e 00000000 		.4byte	0
 5440 0072 00000000 		.4byte	0
 5441              	.LLST4:
 5442 0076 48000000 		.4byte	.LVL34
 5443 007a 58000000 		.4byte	.LVL37
 5444 007e 0200     		.2byte	0x2
 5445 0080 30       		.byte	0x30
 5446 0081 9F       		.byte	0x9f
 5447 0082 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 124


 5448 0086 00000000 		.4byte	0
 5449              	.LLST5:
 5450 008a 04000000 		.4byte	.LVL23
 5451 008e 10000000 		.4byte	.LVL26
 5452 0092 0200     		.2byte	0x2
 5453 0094 30       		.byte	0x30
 5454 0095 9F       		.byte	0x9f
 5455 0096 10000000 		.4byte	.LVL26
 5456 009a 22000000 		.4byte	.LVL29
 5457 009e 0100     		.2byte	0x1
 5458 00a0 54       		.byte	0x54
 5459 00a1 24000000 		.4byte	.LVL30
 5460 00a5 F0000000 		.4byte	.LFE35
 5461 00a9 0100     		.2byte	0x1
 5462 00ab 54       		.byte	0x54
 5463 00ac 00000000 		.4byte	0
 5464 00b0 00000000 		.4byte	0
 5465              	.LLST6:
 5466 00b4 00000000 		.4byte	.LVL48
 5467 00b8 04000000 		.4byte	.LVL49
 5468 00bc 0100     		.2byte	0x1
 5469 00be 50       		.byte	0x50
 5470 00bf 04000000 		.4byte	.LVL49
 5471 00c3 5C020000 		.4byte	.LFE36
 5472 00c7 0400     		.2byte	0x4
 5473 00c9 F3       		.byte	0xf3
 5474 00ca 01       		.uleb128 0x1
 5475 00cb 50       		.byte	0x50
 5476 00cc 9F       		.byte	0x9f
 5477 00cd 00000000 		.4byte	0
 5478 00d1 00000000 		.4byte	0
 5479              	.LLST7:
 5480 00d5 36000000 		.4byte	.LVL53
 5481 00d9 58010000 		.4byte	.LVL72
 5482 00dd 0100     		.2byte	0x1
 5483 00df 54       		.byte	0x54
 5484 00e0 00000000 		.4byte	0
 5485 00e4 00000000 		.4byte	0
 5486              	.LLST8:
 5487 00e8 34000000 		.4byte	.LVL52
 5488 00ec D6000000 		.4byte	.LVL65
 5489 00f0 0100     		.2byte	0x1
 5490 00f2 50       		.byte	0x50
 5491 00f3 F8000000 		.4byte	.LVL67
 5492 00f7 FA000000 		.4byte	.LVL68
 5493 00fb 0100     		.2byte	0x1
 5494 00fd 50       		.byte	0x50
 5495 00fe 00000000 		.4byte	0
 5496 0102 00000000 		.4byte	0
 5497              	.LLST9:
 5498 0106 3C000000 		.4byte	.LVL54
 5499 010a 42000000 		.4byte	.LVL55
 5500 010e 0200     		.2byte	0x2
 5501 0110 30       		.byte	0x30
 5502 0111 9F       		.byte	0x9f
 5503 0112 42000000 		.4byte	.LVL55
 5504 0116 4C000000 		.4byte	.LVL58
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 125


 5505 011a 0100     		.2byte	0x1
 5506 011c 53       		.byte	0x53
 5507 011d 4E000000 		.4byte	.LVL59
 5508 0121 58000000 		.4byte	.LVL60
 5509 0125 0100     		.2byte	0x1
 5510 0127 53       		.byte	0x53
 5511 0128 6A000000 		.4byte	.LVL62
 5512 012c 6C000000 		.4byte	.LVL63
 5513 0130 0100     		.2byte	0x1
 5514 0132 53       		.byte	0x53
 5515 0133 B2010000 		.4byte	.LVL74
 5516 0137 B8010000 		.4byte	.LVL75
 5517 013b 0200     		.2byte	0x2
 5518 013d 30       		.byte	0x30
 5519 013e 9F       		.byte	0x9f
 5520 013f B8010000 		.4byte	.LVL75
 5521 0143 C2010000 		.4byte	.LVL78
 5522 0147 0100     		.2byte	0x1
 5523 0149 53       		.byte	0x53
 5524 014a C4010000 		.4byte	.LVL79
 5525 014e D3010000 		.4byte	.LVL81-1
 5526 0152 0100     		.2byte	0x1
 5527 0154 53       		.byte	0x53
 5528 0155 00000000 		.4byte	0
 5529 0159 00000000 		.4byte	0
 5530              	.LLST10:
 5531 015d 3C000000 		.4byte	.LVL54
 5532 0161 42000000 		.4byte	.LVL55
 5533 0165 0200     		.2byte	0x2
 5534 0167 30       		.byte	0x30
 5535 0168 9F       		.byte	0x9f
 5536 0169 42000000 		.4byte	.LVL55
 5537 016d 48000000 		.4byte	.LVL56
 5538 0171 0100     		.2byte	0x1
 5539 0173 52       		.byte	0x52
 5540 0174 4A000000 		.4byte	.LVL57
 5541 0178 5C000000 		.4byte	.LVL61
 5542 017c 0100     		.2byte	0x1
 5543 017e 52       		.byte	0x52
 5544 017f 6A000000 		.4byte	.LVL62
 5545 0183 80000000 		.4byte	.LVL64
 5546 0187 0100     		.2byte	0x1
 5547 0189 52       		.byte	0x52
 5548 018a F8000000 		.4byte	.LVL67
 5549 018e 00010000 		.4byte	.LVL69
 5550 0192 0100     		.2byte	0x1
 5551 0194 52       		.byte	0x52
 5552 0195 B2010000 		.4byte	.LVL74
 5553 0199 B8010000 		.4byte	.LVL75
 5554 019d 0200     		.2byte	0x2
 5555 019f 30       		.byte	0x30
 5556 01a0 9F       		.byte	0x9f
 5557 01a1 B8010000 		.4byte	.LVL75
 5558 01a5 BE010000 		.4byte	.LVL76
 5559 01a9 0100     		.2byte	0x1
 5560 01ab 52       		.byte	0x52
 5561 01ac C0010000 		.4byte	.LVL77
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 126


 5562 01b0 CC010000 		.4byte	.LVL80
 5563 01b4 0100     		.2byte	0x1
 5564 01b6 52       		.byte	0x52
 5565 01b7 00000000 		.4byte	0
 5566 01bb 00000000 		.4byte	0
 5567              	.LLST11:
 5568 01bf 00000000 		.4byte	.LVL86
 5569 01c3 08000000 		.4byte	.LVL88
 5570 01c7 0100     		.2byte	0x1
 5571 01c9 50       		.byte	0x50
 5572 01ca 08000000 		.4byte	.LVL88
 5573 01ce 68000000 		.4byte	.LVL103
 5574 01d2 0100     		.2byte	0x1
 5575 01d4 55       		.byte	0x55
 5576 01d5 68000000 		.4byte	.LVL103
 5577 01d9 78000000 		.4byte	.LFE37
 5578 01dd 0600     		.2byte	0x6
 5579 01df F3       		.byte	0xf3
 5580 01e0 03       		.uleb128 0x3
 5581 01e1 F5       		.byte	0xf5
 5582 01e2 00       		.uleb128 0
 5583 01e3 25       		.uleb128 0x25
 5584 01e4 9F       		.byte	0x9f
 5585 01e5 00000000 		.4byte	0
 5586 01e9 00000000 		.4byte	0
 5587              	.LLST12:
 5588 01ed 04000000 		.4byte	.LVL87
 5589 01f1 08000000 		.4byte	.LVL88
 5590 01f5 0100     		.2byte	0x1
 5591 01f7 50       		.byte	0x50
 5592 01f8 08000000 		.4byte	.LVL88
 5593 01fc 36000000 		.4byte	.LVL93
 5594 0200 0100     		.2byte	0x1
 5595 0202 55       		.byte	0x55
 5596 0203 36000000 		.4byte	.LVL93
 5597 0207 52000000 		.4byte	.LVL96
 5598 020b 0100     		.2byte	0x1
 5599 020d 54       		.byte	0x54
 5600 020e 54000000 		.4byte	.LVL97
 5601 0212 68000000 		.4byte	.LVL102
 5602 0216 0100     		.2byte	0x1
 5603 0218 54       		.byte	0x54
 5604 0219 00000000 		.4byte	0
 5605 021d 00000000 		.4byte	0
 5606              	.LLST13:
 5607 0221 06000000 		.4byte	.LVL104
 5608 0225 09000000 		.4byte	.LVL105-1
 5609 0229 0100     		.2byte	0x1
 5610 022b 50       		.byte	0x50
 5611 022c 00000000 		.4byte	0
 5612 0230 00000000 		.4byte	0
 5613              	.LLST14:
 5614 0234 00000000 		.4byte	.LVL108
 5615 0238 0F000000 		.4byte	.LVL109-1
 5616 023c 0100     		.2byte	0x1
 5617 023e 50       		.byte	0x50
 5618 023f 0F000000 		.4byte	.LVL109-1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 127


 5619 0243 44000000 		.4byte	.LFE39
 5620 0247 0400     		.2byte	0x4
 5621 0249 F3       		.byte	0xf3
 5622 024a 01       		.uleb128 0x1
 5623 024b 50       		.byte	0x50
 5624 024c 9F       		.byte	0x9f
 5625 024d 00000000 		.4byte	0
 5626 0251 00000000 		.4byte	0
 5627              	.LLST15:
 5628 0255 00000000 		.4byte	.LVL108
 5629 0259 0F000000 		.4byte	.LVL109-1
 5630 025d 0100     		.2byte	0x1
 5631 025f 51       		.byte	0x51
 5632 0260 0F000000 		.4byte	.LVL109-1
 5633 0264 32000000 		.4byte	.LVL117
 5634 0268 0100     		.2byte	0x1
 5635 026a 56       		.byte	0x56
 5636 026b 32000000 		.4byte	.LVL117
 5637 026f 44000000 		.4byte	.LFE39
 5638 0273 0600     		.2byte	0x6
 5639 0275 F3       		.byte	0xf3
 5640 0276 03       		.uleb128 0x3
 5641 0277 F5       		.byte	0xf5
 5642 0278 01       		.uleb128 0x1
 5643 0279 25       		.uleb128 0x25
 5644 027a 9F       		.byte	0x9f
 5645 027b 00000000 		.4byte	0
 5646 027f 00000000 		.4byte	0
 5647              	.LLST16:
 5648 0283 00000000 		.4byte	.LVL108
 5649 0287 0F000000 		.4byte	.LVL109-1
 5650 028b 0100     		.2byte	0x1
 5651 028d 52       		.byte	0x52
 5652 028e 0F000000 		.4byte	.LVL109-1
 5653 0292 32000000 		.4byte	.LVL116
 5654 0296 0100     		.2byte	0x1
 5655 0298 55       		.byte	0x55
 5656 0299 32000000 		.4byte	.LVL116
 5657 029d 44000000 		.4byte	.LFE39
 5658 02a1 0600     		.2byte	0x6
 5659 02a3 F3       		.byte	0xf3
 5660 02a4 03       		.uleb128 0x3
 5661 02a5 F5       		.byte	0xf5
 5662 02a6 02       		.uleb128 0x2
 5663 02a7 25       		.uleb128 0x25
 5664 02a8 9F       		.byte	0x9f
 5665 02a9 00000000 		.4byte	0
 5666 02ad 00000000 		.4byte	0
 5667              	.LLST17:
 5668 02b1 00000000 		.4byte	.LVL108
 5669 02b5 0F000000 		.4byte	.LVL109-1
 5670 02b9 0100     		.2byte	0x1
 5671 02bb 53       		.byte	0x53
 5672 02bc 0F000000 		.4byte	.LVL109-1
 5673 02c0 32000000 		.4byte	.LVL115
 5674 02c4 0100     		.2byte	0x1
 5675 02c6 54       		.byte	0x54
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 128


 5676 02c7 32000000 		.4byte	.LVL115
 5677 02cb 44000000 		.4byte	.LFE39
 5678 02cf 0600     		.2byte	0x6
 5679 02d1 F3       		.byte	0xf3
 5680 02d2 03       		.uleb128 0x3
 5681 02d3 F5       		.byte	0xf5
 5682 02d4 03       		.uleb128 0x3
 5683 02d5 25       		.uleb128 0x25
 5684 02d6 9F       		.byte	0x9f
 5685 02d7 00000000 		.4byte	0
 5686 02db 00000000 		.4byte	0
 5687              	.LLST18:
 5688 02df 18000000 		.4byte	.LVL111
 5689 02e3 21000000 		.4byte	.LVL112-1
 5690 02e7 0100     		.2byte	0x1
 5691 02e9 50       		.byte	0x50
 5692 02ea 21000000 		.4byte	.LVL112-1
 5693 02ee 32000000 		.4byte	.LVL114
 5694 02f2 0100     		.2byte	0x1
 5695 02f4 57       		.byte	0x57
 5696 02f5 00000000 		.4byte	0
 5697 02f9 00000000 		.4byte	0
 5698              	.LLST19:
 5699 02fd 00000000 		.4byte	.LVL118
 5700 0301 17000000 		.4byte	.LVL119-1
 5701 0305 0100     		.2byte	0x1
 5702 0307 50       		.byte	0x50
 5703 0308 17000000 		.4byte	.LVL119-1
 5704 030c FA000000 		.4byte	.LVL144
 5705 0310 0100     		.2byte	0x1
 5706 0312 54       		.byte	0x54
 5707 0313 FA000000 		.4byte	.LVL144
 5708 0317 FC000000 		.4byte	.LVL145
 5709 031b 0100     		.2byte	0x1
 5710 031d 50       		.byte	0x50
 5711 031e FC000000 		.4byte	.LVL145
 5712 0322 FE000000 		.4byte	.LVL146
 5713 0326 0100     		.2byte	0x1
 5714 0328 54       		.byte	0x54
 5715 0329 FE000000 		.4byte	.LVL146
 5716 032d 3C010000 		.4byte	.LFE40
 5717 0331 0400     		.2byte	0x4
 5718 0333 F3       		.byte	0xf3
 5719 0334 01       		.uleb128 0x1
 5720 0335 50       		.byte	0x50
 5721 0336 9F       		.byte	0x9f
 5722 0337 00000000 		.4byte	0
 5723 033b 00000000 		.4byte	0
 5724              	.LLST20:
 5725 033f 00000000 		.4byte	.LVL118
 5726 0343 17000000 		.4byte	.LVL119-1
 5727 0347 0100     		.2byte	0x1
 5728 0349 51       		.byte	0x51
 5729 034a 17000000 		.4byte	.LVL119-1
 5730 034e 52000000 		.4byte	.LVL128
 5731 0352 0100     		.2byte	0x1
 5732 0354 55       		.byte	0x55
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 129


 5733 0355 52000000 		.4byte	.LVL128
 5734 0359 FA000000 		.4byte	.LVL144
 5735 035d 0400     		.2byte	0x4
 5736 035f F3       		.byte	0xf3
 5737 0360 01       		.uleb128 0x1
 5738 0361 51       		.byte	0x51
 5739 0362 9F       		.byte	0x9f
 5740 0363 FA000000 		.4byte	.LVL144
 5741 0367 FC000000 		.4byte	.LVL145
 5742 036b 0100     		.2byte	0x1
 5743 036d 51       		.byte	0x51
 5744 036e FC000000 		.4byte	.LVL145
 5745 0372 3C010000 		.4byte	.LFE40
 5746 0376 0400     		.2byte	0x4
 5747 0378 F3       		.byte	0xf3
 5748 0379 01       		.uleb128 0x1
 5749 037a 51       		.byte	0x51
 5750 037b 9F       		.byte	0x9f
 5751 037c 00000000 		.4byte	0
 5752 0380 00000000 		.4byte	0
 5753              	.LLST21:
 5754 0384 3A000000 		.4byte	.LVL124
 5755 0388 3D000000 		.4byte	.LVL125-1
 5756 038c 0100     		.2byte	0x1
 5757 038e 50       		.byte	0x50
 5758 038f 3D000000 		.4byte	.LVL125-1
 5759 0393 52000000 		.4byte	.LVL128
 5760 0397 0600     		.2byte	0x6
 5761 0399 75       		.byte	0x75
 5762 039a 00       		.sleb128 0
 5763 039b 76       		.byte	0x76
 5764 039c 00       		.sleb128 0
 5765 039d 1C       		.byte	0x1c
 5766 039e 9F       		.byte	0x9f
 5767 039f 52000000 		.4byte	.LVL128
 5768 03a3 96000000 		.4byte	.LVL134
 5769 03a7 0700     		.2byte	0x7
 5770 03a9 F3       		.byte	0xf3
 5771 03aa 01       		.uleb128 0x1
 5772 03ab 51       		.byte	0x51
 5773 03ac 76       		.byte	0x76
 5774 03ad 00       		.sleb128 0
 5775 03ae 1C       		.byte	0x1c
 5776 03af 9F       		.byte	0x9f
 5777 03b0 00000000 		.4byte	0
 5778 03b4 00000000 		.4byte	0
 5779              	.LLST22:
 5780 03b8 96000000 		.4byte	.LVL134
 5781 03bc 9C000000 		.4byte	.LVL135
 5782 03c0 0100     		.2byte	0x1
 5783 03c2 50       		.byte	0x50
 5784 03c3 9C000000 		.4byte	.LVL135
 5785 03c7 C2000000 		.4byte	.LVL141
 5786 03cb 0100     		.2byte	0x1
 5787 03cd 56       		.byte	0x56
 5788 03ce 00000000 		.4byte	0
 5789 03d2 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 130


 5790              	.LLST23:
 5791 03d6 20000000 		.4byte	.LVL122
 5792 03da 37000000 		.4byte	.LVL123-1
 5793 03de 0100     		.2byte	0x1
 5794 03e0 50       		.byte	0x50
 5795 03e1 00000000 		.4byte	0
 5796 03e5 00000000 		.4byte	0
 5797              	.LLST24:
 5798 03e9 1A000000 		.4byte	.LVL120
 5799 03ed 1E000000 		.4byte	.LVL121
 5800 03f1 0100     		.2byte	0x1
 5801 03f3 50       		.byte	0x50
 5802 03f4 1E000000 		.4byte	.LVL121
 5803 03f8 96000000 		.4byte	.LVL134
 5804 03fc 0100     		.2byte	0x1
 5805 03fe 56       		.byte	0x56
 5806 03ff 00000000 		.4byte	0
 5807 0403 00000000 		.4byte	0
 5808              	.LLST25:
 5809 0407 00000000 		.4byte	.LVL147
 5810 040b 09000000 		.4byte	.LVL148-1
 5811 040f 0100     		.2byte	0x1
 5812 0411 50       		.byte	0x50
 5813 0412 09000000 		.4byte	.LVL148-1
 5814 0416 62000000 		.4byte	.LVL154
 5815 041a 0100     		.2byte	0x1
 5816 041c 55       		.byte	0x55
 5817 041d 62000000 		.4byte	.LVL154
 5818 0421 74000000 		.4byte	.LFE41
 5819 0425 0600     		.2byte	0x6
 5820 0427 F3       		.byte	0xf3
 5821 0428 03       		.uleb128 0x3
 5822 0429 F5       		.byte	0xf5
 5823 042a 00       		.uleb128 0
 5824 042b 25       		.uleb128 0x25
 5825 042c 9F       		.byte	0x9f
 5826 042d 00000000 		.4byte	0
 5827 0431 00000000 		.4byte	0
 5828              	.LLST26:
 5829 0435 00000000 		.4byte	.LVL147
 5830 0439 09000000 		.4byte	.LVL148-1
 5831 043d 0100     		.2byte	0x1
 5832 043f 51       		.byte	0x51
 5833 0440 09000000 		.4byte	.LVL148-1
 5834 0444 62000000 		.4byte	.LVL153
 5835 0448 0100     		.2byte	0x1
 5836 044a 54       		.byte	0x54
 5837 044b 62000000 		.4byte	.LVL153
 5838 044f 74000000 		.4byte	.LFE41
 5839 0453 0600     		.2byte	0x6
 5840 0455 F3       		.byte	0xf3
 5841 0456 03       		.uleb128 0x3
 5842 0457 F5       		.byte	0xf5
 5843 0458 01       		.uleb128 0x1
 5844 0459 25       		.uleb128 0x25
 5845 045a 9F       		.byte	0x9f
 5846 045b 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 131


 5847 045f 00000000 		.4byte	0
 5848              	.LLST27:
 5849 0463 00000000 		.4byte	.LVL155
 5850 0467 19000000 		.4byte	.LVL157-1
 5851 046b 0100     		.2byte	0x1
 5852 046d 50       		.byte	0x50
 5853 046e 19000000 		.4byte	.LVL157-1
 5854 0472 24000000 		.4byte	.LFE42
 5855 0476 0400     		.2byte	0x4
 5856 0478 F3       		.byte	0xf3
 5857 0479 01       		.uleb128 0x1
 5858 047a 50       		.byte	0x50
 5859 047b 9F       		.byte	0x9f
 5860 047c 00000000 		.4byte	0
 5861 0480 00000000 		.4byte	0
 5862              	.LLST28:
 5863 0484 0A000000 		.4byte	.LVL156
 5864 0488 1E000000 		.4byte	.LVL158
 5865 048c 0100     		.2byte	0x1
 5866 048e 54       		.byte	0x54
 5867 048f 1E000000 		.4byte	.LVL158
 5868 0493 24000000 		.4byte	.LFE42
 5869 0497 0500     		.2byte	0x5
 5870 0499 03       		.byte	0x3
 5871 049a 00000000 		.4byte	inAuto
 5872 049e 00000000 		.4byte	0
 5873 04a2 00000000 		.4byte	0
 5874              	.LLST29:
 5875 04a6 00000000 		.4byte	.LVL159
 5876 04aa 07000000 		.4byte	.LVL160-1
 5877 04ae 0100     		.2byte	0x1
 5878 04b0 50       		.byte	0x50
 5879 04b1 07000000 		.4byte	.LVL160-1
 5880 04b5 1C000000 		.4byte	.LFE43
 5881 04b9 0600     		.2byte	0x6
 5882 04bb F3       		.byte	0xf3
 5883 04bc 03       		.uleb128 0x3
 5884 04bd F5       		.byte	0xf5
 5885 04be 00       		.uleb128 0
 5886 04bf 25       		.uleb128 0x25
 5887 04c0 9F       		.byte	0x9f
 5888 04c1 00000000 		.4byte	0
 5889 04c5 00000000 		.4byte	0
 5890              	.LLST30:
 5891 04c9 10000000 		.4byte	.LVL161
 5892 04cd 13000000 		.4byte	.LVL162-1
 5893 04d1 0100     		.2byte	0x1
 5894 04d3 50       		.byte	0x50
 5895 04d4 00000000 		.4byte	0
 5896 04d8 00000000 		.4byte	0
 5897              	.LLST31:
 5898 04dc 00000000 		.4byte	.LVL163
 5899 04e0 04000000 		.4byte	.LVL165
 5900 04e4 0100     		.2byte	0x1
 5901 04e6 50       		.byte	0x50
 5902 04e7 04000000 		.4byte	.LVL165
 5903 04eb B4010000 		.4byte	.LFE44
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 132


 5904 04ef 0400     		.2byte	0x4
 5905 04f1 F3       		.byte	0xf3
 5906 04f2 01       		.uleb128 0x1
 5907 04f3 50       		.byte	0x50
 5908 04f4 9F       		.byte	0x9f
 5909 04f5 00000000 		.4byte	0
 5910 04f9 00000000 		.4byte	0
 5911              	.LLST32:
 5912 04fd 38000000 		.4byte	.LVL170
 5913 0501 46000000 		.4byte	.LVL171
 5914 0505 0200     		.2byte	0x2
 5915 0507 30       		.byte	0x30
 5916 0508 9F       		.byte	0x9f
 5917 0509 54000000 		.4byte	.LVL174
 5918 050d 68000000 		.4byte	.LVL175
 5919 0511 0100     		.2byte	0x1
 5920 0513 50       		.byte	0x50
 5921 0514 68000000 		.4byte	.LVL175
 5922 0518 78000000 		.4byte	.LVL177
 5923 051c 0100     		.2byte	0x1
 5924 051e 54       		.byte	0x54
 5925 051f 78000000 		.4byte	.LVL177
 5926 0523 82000000 		.4byte	.LVL178
 5927 0527 0100     		.2byte	0x1
 5928 0529 50       		.byte	0x50
 5929 052a 82000000 		.4byte	.LVL178
 5930 052e B4010000 		.4byte	.LFE44
 5931 0532 0100     		.2byte	0x1
 5932 0534 54       		.byte	0x54
 5933 0535 00000000 		.4byte	0
 5934 0539 00000000 		.4byte	0
 5935              	.LLST33:
 5936 053d 48010000 		.4byte	.LVL195
 5937 0541 55010000 		.4byte	.LVL196-1
 5938 0545 0100     		.2byte	0x1
 5939 0547 50       		.byte	0x50
 5940 0548 58010000 		.4byte	.LVL197
 5941 054c 5E010000 		.4byte	.LVL198
 5942 0550 0100     		.2byte	0x1
 5943 0552 50       		.byte	0x50
 5944 0553 00000000 		.4byte	0
 5945 0557 00000000 		.4byte	0
 5946              	.LLST34:
 5947 055b DE000000 		.4byte	.LVL185
 5948 055f E4000000 		.4byte	.LVL186
 5949 0563 0100     		.2byte	0x1
 5950 0565 50       		.byte	0x50
 5951 0566 00000000 		.4byte	0
 5952 056a 00000000 		.4byte	0
 5953              	.LLST35:
 5954 056e EA000000 		.4byte	.LVL187
 5955 0572 0C010000 		.4byte	.LVL192
 5956 0576 0100     		.2byte	0x1
 5957 0578 55       		.byte	0x55
 5958 0579 00000000 		.4byte	0
 5959 057d 00000000 		.4byte	0
 5960              	.LLST36:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 133


 5961 0581 F0000000 		.4byte	.LVL189
 5962 0585 FA000000 		.4byte	.LVL190
 5963 0589 0100     		.2byte	0x1
 5964 058b 50       		.byte	0x50
 5965 058c FA000000 		.4byte	.LVL190
 5966 0590 0C010000 		.4byte	.LVL192
 5967 0594 0100     		.2byte	0x1
 5968 0596 56       		.byte	0x56
 5969 0597 00000000 		.4byte	0
 5970 059b 00000000 		.4byte	0
 5971              	.LLST37:
 5972 059f 68000000 		.4byte	.LVL210
 5973 05a3 6C000000 		.4byte	.LVL211
 5974 05a7 0100     		.2byte	0x1
 5975 05a9 54       		.byte	0x54
 5976 05aa 6E000000 		.4byte	.LVL212
 5977 05ae 7E000000 		.4byte	.LVL215
 5978 05b2 0100     		.2byte	0x1
 5979 05b4 54       		.byte	0x54
 5980 05b5 00000000 		.4byte	0
 5981 05b9 00000000 		.4byte	0
 5982              		.section	.debug_aranges,"",%progbits
 5983 0000 9C000000 		.4byte	0x9c
 5984 0004 0200     		.2byte	0x2
 5985 0006 00000000 		.4byte	.Ldebug_info0
 5986 000a 04       		.byte	0x4
 5987 000b 00       		.byte	0
 5988 000c 0000     		.2byte	0
 5989 000e 0000     		.2byte	0
 5990 0010 00000000 		.4byte	.LFB46
 5991 0014 18000000 		.4byte	.LFE46-.LFB46
 5992 0018 00000000 		.4byte	.LFB47
 5993 001c 12000000 		.4byte	.LFE47-.LFB47
 5994 0020 00000000 		.4byte	.LFB48
 5995 0024 5C000000 		.4byte	.LFE48-.LFB48
 5996 0028 00000000 		.4byte	.LFB32
 5997 002c 28000000 		.4byte	.LFE32-.LFB32
 5998 0030 00000000 		.4byte	.LFB33
 5999 0034 1C000000 		.4byte	.LFE33-.LFB33
 6000 0038 00000000 		.4byte	.LFB35
 6001 003c F0000000 		.4byte	.LFE35-.LFB35
 6002 0040 00000000 		.4byte	.LFB34
 6003 0044 1C000000 		.4byte	.LFE34-.LFB34
 6004 0048 00000000 		.4byte	.LFB36
 6005 004c 5C020000 		.4byte	.LFE36-.LFB36
 6006 0050 00000000 		.4byte	.LFB37
 6007 0054 78000000 		.4byte	.LFE37-.LFB37
 6008 0058 00000000 		.4byte	.LFB38
 6009 005c 58000000 		.4byte	.LFE38-.LFB38
 6010 0060 00000000 		.4byte	.LFB39
 6011 0064 44000000 		.4byte	.LFE39-.LFB39
 6012 0068 00000000 		.4byte	.LFB40
 6013 006c 3C010000 		.4byte	.LFE40-.LFB40
 6014 0070 00000000 		.4byte	.LFB41
 6015 0074 74000000 		.4byte	.LFE41-.LFB41
 6016 0078 00000000 		.4byte	.LFB42
 6017 007c 24000000 		.4byte	.LFE42-.LFB42
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 134


 6018 0080 00000000 		.4byte	.LFB43
 6019 0084 1C000000 		.4byte	.LFE43-.LFB43
 6020 0088 00000000 		.4byte	.LFB44
 6021 008c B4010000 		.4byte	.LFE44-.LFB44
 6022 0090 00000000 		.4byte	.LFB45
 6023 0094 5C010000 		.4byte	.LFE45-.LFB45
 6024 0098 00000000 		.4byte	0
 6025 009c 00000000 		.4byte	0
 6026              		.section	.debug_ranges,"",%progbits
 6027              	.Ldebug_ranges0:
 6028 0000 00000000 		.4byte	.LFB46
 6029 0004 18000000 		.4byte	.LFE46
 6030 0008 00000000 		.4byte	.LFB47
 6031 000c 12000000 		.4byte	.LFE47
 6032 0010 00000000 		.4byte	.LFB48
 6033 0014 5C000000 		.4byte	.LFE48
 6034 0018 00000000 		.4byte	.LFB32
 6035 001c 28000000 		.4byte	.LFE32
 6036 0020 00000000 		.4byte	.LFB33
 6037 0024 1C000000 		.4byte	.LFE33
 6038 0028 00000000 		.4byte	.LFB35
 6039 002c F0000000 		.4byte	.LFE35
 6040 0030 00000000 		.4byte	.LFB34
 6041 0034 1C000000 		.4byte	.LFE34
 6042 0038 00000000 		.4byte	.LFB36
 6043 003c 5C020000 		.4byte	.LFE36
 6044 0040 00000000 		.4byte	.LFB37
 6045 0044 78000000 		.4byte	.LFE37
 6046 0048 00000000 		.4byte	.LFB38
 6047 004c 58000000 		.4byte	.LFE38
 6048 0050 00000000 		.4byte	.LFB39
 6049 0054 44000000 		.4byte	.LFE39
 6050 0058 00000000 		.4byte	.LFB40
 6051 005c 3C010000 		.4byte	.LFE40
 6052 0060 00000000 		.4byte	.LFB41
 6053 0064 74000000 		.4byte	.LFE41
 6054 0068 00000000 		.4byte	.LFB42
 6055 006c 24000000 		.4byte	.LFE42
 6056 0070 00000000 		.4byte	.LFB43
 6057 0074 1C000000 		.4byte	.LFE43
 6058 0078 00000000 		.4byte	.LFB44
 6059 007c B4010000 		.4byte	.LFE44
 6060 0080 00000000 		.4byte	.LFB45
 6061 0084 5C010000 		.4byte	.LFE45
 6062 0088 00000000 		.4byte	0
 6063 008c 00000000 		.4byte	0
 6064              		.section	.debug_line,"",%progbits
 6065              	.Ldebug_line0:
 6066 0000 3A050000 		.section	.debug_str,"MS",%progbits,1
 6066      02009902 
 6066      00000201 
 6066      FB0E0D00 
 6066      01010101 
 6067              	.LASF88:
 6068 0000 43757272 		.ascii	"Current_Read_Task\000"
 6068      656E745F 
 6068      52656164 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 135


 6068      5F546173 
 6068      6B00
 6069              	.LASF113:
 6070 0012 43757272 		.ascii	"CurrentPosition\000"
 6070      656E7450 
 6070      6F736974 
 6070      696F6E00 
 6071              	.LASF146:
 6072 0022 72784D65 		.ascii	"rxMessage\000"
 6072      73736167 
 6072      6500
 6073              	.LASF196:
 6074 002c 6D61696E 		.ascii	"main.c\000"
 6074      2E6300
 6075              	.LASF76:
 6076 0033 74786D73 		.ascii	"txmsClear\000"
 6076      436C6561 
 6076      7200
 6077              	.LASF144:
 6078 003d 4C6F636B 		.ascii	"Lock\000"
 6078      00
 6079              	.LASF42:
 6080 0042 6673456E 		.ascii	"fsEncoder\000"
 6080      636F6465 
 6080      7200
 6081              	.LASF36:
 6082 004c 6373556E 		.ascii	"csUnconfig\000"
 6082      636F6E66 
 6082      696700
 6083              	.LASF107:
 6084 0057 6E657741 		.ascii	"newAuto\000"
 6084      75746F00 
 6085              	.LASF166:
 6086 005f 4932435F 		.ascii	"I2C_I2CMasterWriteByte\000"
 6086      4932434D 
 6086      61737465 
 6086      72577269 
 6086      74654279 
 6087              	.LASF1:
 6088 0076 756E7369 		.ascii	"unsigned int\000"
 6088      676E6564 
 6088      20696E74 
 6088      00
 6089              	.LASF138:
 6090 0083 43757272 		.ascii	"Current\000"
 6090      656E7400 
 6091              	.LASF190:
 6092 008b 50574D5F 		.ascii	"PWM_1_Start\000"
 6092      315F5374 
 6092      61727400 
 6093              	.LASF65:
 6094 0097 636C6561 		.ascii	"clearfaults\000"
 6094      72666175 
 6094      6C747300 
 6095              	.LASF98:
 6096 00a3 6E65774B 		.ascii	"newKd\000"
 6096      6400
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 136


 6097              	.LASF97:
 6098 00a9 6E65774B 		.ascii	"newKi\000"
 6098      6900
 6099              	.LASF96:
 6100 00af 6E65774B 		.ascii	"newKp\000"
 6100      7000
 6101              	.LASF154:
 6102 00b5 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 6102      5F494E5F 
 6102      436C6561 
 6102      72496E74 
 6102      65727275 
 6103              	.LASF139:
 6104 00cc 5049445F 		.ascii	"PID_Last_Position\000"
 6104      4C617374 
 6104      5F506F73 
 6104      6974696F 
 6104      6E00
 6105              	.LASF61:
 6106 00de 6C696D69 		.ascii	"limit\000"
 6106      7400
 6107              	.LASF163:
 6108 00e4 4C45445F 		.ascii	"LED_Write\000"
 6108      57726974 
 6108      6500
 6109              	.LASF80:
 6110 00ee 486F6D65 		.ascii	"HomeIsrHandler\000"
 6110      49737248 
 6110      616E646C 
 6110      657200
 6111              	.LASF78:
 6112 00fd 74784D65 		.ascii	"txMessageStates_t\000"
 6112      73736167 
 6112      65537461 
 6112      7465735F 
 6112      7400
 6113              	.LASF101:
 6114 010f 6572726F 		.ascii	"error\000"
 6114      7200
 6115              	.LASF119:
 6116 0115 50574D5F 		.ascii	"PWM_Max_Rev\000"
 6116      4D61785F 
 6116      52657600 
 6117              	.LASF87:
 6118 0121 436C6561 		.ascii	"ClearFault\000"
 6118      72466175 
 6118      6C7400
 6119              	.LASF28:
 6120 012c 50656E64 		.ascii	"PendSV_IRQn\000"
 6120      53565F49 
 6120      52516E00 
 6121              	.LASF188:
 6122 0138 4932435F 		.ascii	"I2C_Start\000"
 6122      53746172 
 6122      7400
 6123              	.LASF37:
 6124 0142 63735265 		.ascii	"csReady\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 137


 6124      61647900 
 6125              	.LASF160:
 6126 014a 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 6126      315F5370 
 6126      69556172 
 6126      74436C65 
 6126      61725478 
 6127              	.LASF14:
 6128 0165 75696E74 		.ascii	"uint32_t\000"
 6128      33325F74 
 6128      00
 6129              	.LASF55:
 6130 016e 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 6130      73736167 
 6130      655F6F70 
 6130      636F6465 
 6130      735F7400 
 6131              	.LASF66:
 6132 0182 72784D65 		.ascii	"rxMessage_status_t\000"
 6132      73736167 
 6132      655F7374 
 6132      61747573 
 6132      5F7400
 6133              	.LASF83:
 6134 0195 41737365 		.ascii	"AssertFault\000"
 6134      72744661 
 6134      756C7400 
 6135              	.LASF0:
 6136 01a1 666C6F61 		.ascii	"float\000"
 6136      7400
 6137              	.LASF184:
 6138 01a7 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 6138      7370695F 
 6138      73735F53 
 6138      74617274 
 6138      457800
 6139              	.LASF56:
 6140 01ba 63686563 		.ascii	"checksum\000"
 6140      6B73756D 
 6140      00
 6141              	.LASF19:
 6142 01c3 696E7433 		.ascii	"int32\000"
 6142      3200
 6143              	.LASF177:
 6144 01c9 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 6144      585F4F55 
 6144      545F5365 
 6144      74447269 
 6144      76654D6F 
 6145              	.LASF156:
 6146 01e0 7370695F 		.ascii	"spi_ss_Read\000"
 6146      73735F52 
 6146      65616400 
 6147              	.LASF12:
 6148 01ec 6C6F6E67 		.ascii	"long long unsigned int\000"
 6148      206C6F6E 
 6148      6720756E 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 138


 6148      7369676E 
 6148      65642069 
 6149              	.LASF82:
 6150 0203 73657475 		.ascii	"setupFreeRTOS\000"
 6150      70467265 
 6150      6552544F 
 6150      5300
 6151              	.LASF123:
 6152 0211 6C617374 		.ascii	"lastTime\000"
 6152      54696D65 
 6152      00
 6153              	.LASF152:
 6154 021a 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 6154      785F436F 
 6154      756E7465 
 6154      725F315F 
 6154      57726974 
 6155              	.LASF125:
 6156 0237 49546572 		.ascii	"ITerm\000"
 6156      6D00
 6157              	.LASF84:
 6158 023d 62797465 		.ascii	"byteMSB\000"
 6158      4D534200 
 6159              	.LASF63:
 6160 0245 656E6162 		.ascii	"enable\000"
 6160      6C6500
 6161              	.LASF162:
 6162 024c 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 6162      736B4765 
 6162      74537461 
 6162      636B4869 
 6162      67685761 
 6163              	.LASF191:
 6164 0268 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 6164      315F5772 
 6164      69746550 
 6164      6572696F 
 6164      6400
 6165              	.LASF134:
 6166 027a 436F6E66 		.ascii	"ConfigState\000"
 6166      69675374 
 6166      61746500 
 6167              	.LASF195:
 6168 0286 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6168      43313120 
 6168      352E342E 
 6168      31203230 
 6168      31363036 
 6169 02b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6169      20726576 
 6169      6973696F 
 6169      6E203233 
 6169      37373135 
 6170 02ec 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6170      66756E63 
 6170      74696F6E 
 6170      2D736563 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 139


 6170      74696F6E 
 6171              	.LASF185:
 6172 0314 6973725F 		.ascii	"isr_home_SetPriority\000"
 6172      686F6D65 
 6172      5F536574 
 6172      5072696F 
 6172      72697479 
 6173              	.LASF109:
 6174 0329 5049445F 		.ascii	"PID_SetDrive\000"
 6174      53657444 
 6174      72697665 
 6174      00
 6175              	.LASF108:
 6176 0336 5F426F6F 		.ascii	"_Bool\000"
 6176      6C00
 6177              	.LASF41:
 6178 033c 6673556E 		.ascii	"fsUnconfigured\000"
 6178      636F6E66 
 6178      69677572 
 6178      656400
 6179              	.LASF133:
 6180 034b 696E4175 		.ascii	"inAuto\000"
 6180      746F00
 6181              	.LASF131:
 6182 0352 6F75744D 		.ascii	"outMin\000"
 6182      696E00
 6183              	.LASF92:
 6184 0359 64726976 		.ascii	"drive\000"
 6184      6500
 6185              	.LASF170:
 6186 035f 78517565 		.ascii	"xQueueSemaphoreTake\000"
 6186      75655365 
 6186      6D617068 
 6186      6F726554 
 6186      616B6500 
 6187              	.LASF172:
 6188 0373 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 6188      315F5370 
 6188      69556172 
 6188      74507574 
 6188      41727261 
 6189              	.LASF155:
 6190 0389 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 6190      73735F43 
 6190      6C656172 
 6190      496E7465 
 6190      72727570 
 6191              	.LASF86:
 6192 039f 43757272 		.ascii	"CurrentTemp\000"
 6192      656E7454 
 6192      656D7000 
 6193              	.LASF171:
 6194 03ab 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 6194      7465725F 
 6194      315F5265 
 6194      6164436F 
 6194      756E7465 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 140


 6195              	.LASF173:
 6196 03c1 78517565 		.ascii	"xQueueGenericSend\000"
 6196      75654765 
 6196      6E657269 
 6196      6353656E 
 6196      6400
 6197              	.LASF169:
 6198 03d3 76546173 		.ascii	"vTaskDelay\000"
 6198      6B44656C 
 6198      617900
 6199              	.LASF59:
 6200 03de 72784D65 		.ascii	"rxMessage_overlay_t\000"
 6200      73736167 
 6200      655F6F76 
 6200      65726C61 
 6200      795F7400 
 6201              	.LASF104:
 6202 03f2 5049445F 		.ascii	"PID_SetOutputLimits\000"
 6202      5365744F 
 6202      75747075 
 6202      744C696D 
 6202      69747300 
 6203              	.LASF148:
 6204 0406 74784D65 		.ascii	"txMessageState\000"
 6204      73736167 
 6204      65537461 
 6204      746500
 6205              	.LASF21:
 6206 0415 63686172 		.ascii	"char\000"
 6206      00
 6207              	.LASF129:
 6208 041a 7265664B 		.ascii	"refKd\000"
 6208      6400
 6209              	.LASF31:
 6210 0420 55426173 		.ascii	"UBaseType_t\000"
 6210      65547970 
 6210      655F7400 
 6211              	.LASF67:
 6212 042c 6F766572 		.ascii	"overlay\000"
 6212      6C617900 
 6213              	.LASF105:
 6214 0434 5049445F 		.ascii	"PID_SetMode\000"
 6214      5365744D 
 6214      6F646500 
 6215              	.LASF90:
 6216 0440 50574D5F 		.ascii	"PWM_Set\000"
 6216      53657400 
 6217              	.LASF159:
 6218 0448 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 6218      315F5370 
 6218      69556172 
 6218      74436C65 
 6218      61725278 
 6219              	.LASF181:
 6220 0463 43794465 		.ascii	"CyDelay\000"
 6220      6C617900 
 6221              	.LASF16:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 141


 6222 046b 75696E74 		.ascii	"uint16\000"
 6222      313600
 6223              	.LASF18:
 6224 0472 696E7438 		.ascii	"int8\000"
 6224      00
 6225              	.LASF58:
 6226 0477 6F70636F 		.ascii	"opcode\000"
 6226      646500
 6227              	.LASF33:
 6228 047e 51756575 		.ascii	"QueueHandle_t\000"
 6228      6548616E 
 6228      646C655F 
 6228      7400
 6229              	.LASF179:
 6230 048c 78546173 		.ascii	"xTaskCreate\000"
 6230      6B437265 
 6230      61746500 
 6231              	.LASF13:
 6232 0498 75696E74 		.ascii	"uint8_t\000"
 6232      385F7400 
 6233              	.LASF69:
 6234 04a0 73746174 		.ascii	"status\000"
 6234      757300
 6235              	.LASF43:
 6236 04a7 6673496E 		.ascii	"fsIndex\000"
 6236      64657800 
 6237              	.LASF174:
 6238 04af 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 6238      315F5772 
 6238      69746543 
 6238      6F6D7061 
 6238      726500
 6239              	.LASF40:
 6240 04c2 66734E4F 		.ascii	"fsNONE\000"
 6240      4E4500
 6241              	.LASF149:
 6242 04c9 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 6242      7273745F 
 6242      656E636F 
 6242      6465725F 
 6242      436C6561 
 6243              	.LASF167:
 6244 04e6 4932435F 		.ascii	"I2C_I2CMasterSendStop\000"
 6244      4932434D 
 6244      61737465 
 6244      7253656E 
 6244      6453746F 
 6245              	.LASF180:
 6246 04fc 78517565 		.ascii	"xQueueCreateMutex\000"
 6246      75654372 
 6246      65617465 
 6246      4D757465 
 6246      7800
 6247              	.LASF187:
 6248 050e 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 6248      7370695F 
 6248      73735F53 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 142


 6248      65745072 
 6248      696F7269 
 6249              	.LASF157:
 6250 0525 78546173 		.ascii	"xTaskGetTickCount\000"
 6250      6B476574 
 6250      5469636B 
 6250      436F756E 
 6250      7400
 6251              	.LASF103:
 6252 0537 74696D65 		.ascii	"timeChange\000"
 6252      4368616E 
 6252      676500
 6253              	.LASF2:
 6254 0542 6C6F6E67 		.ascii	"long long int\000"
 6254      206C6F6E 
 6254      6720696E 
 6254      7400
 6255              	.LASF45:
 6256 0550 66734368 		.ascii	"fsChecksum\000"
 6256      65636B73 
 6256      756D00
 6257              	.LASF30:
 6258 055b 42617365 		.ascii	"BaseType_t\000"
 6258      54797065 
 6258      5F7400
 6259              	.LASF53:
 6260 0566 6F704572 		.ascii	"opError\000"
 6260      726F7200 
 6261              	.LASF112:
 6262 056e 736C6565 		.ascii	"sleeptime\000"
 6262      7074696D 
 6262      6500
 6263              	.LASF175:
 6264 0578 43795379 		.ascii	"CySysWdtResetCounters\000"
 6264      73576474 
 6264      52657365 
 6264      74436F75 
 6264      6E746572 
 6265              	.LASF118:
 6266 058e 50574D5F 		.ascii	"PWM_Max_Fwd\000"
 6266      4D61785F 
 6266      46776400 
 6267              	.LASF199:
 6268 059a 6D656D73 		.ascii	"memset\000"
 6268      657400
 6269              	.LASF23:
 6270 05a1 63796973 		.ascii	"cyisraddress\000"
 6270      72616464 
 6270      72657373 
 6270      00
 6271              	.LASF72:
 6272 05ae 63686563 		.ascii	"checksum_errors\000"
 6272      6B73756D 
 6272      5F657272 
 6272      6F727300 
 6273              	.LASF57:
 6274 05be 73697A65 		.ascii	"size\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 143


 6274      00
 6275              	.LASF17:
 6276 05c3 75696E74 		.ascii	"uint32\000"
 6276      333200
 6277              	.LASF77:
 6278 05ca 74786D73 		.ascii	"txmsLoaded\000"
 6278      4C6F6164 
 6278      656400
 6279              	.LASF140:
 6280 05d5 43757272 		.ascii	"CurrentI2Cinbuf\000"
 6280      656E7449 
 6280      3243696E 
 6280      62756600 
 6281              	.LASF130:
 6282 05e5 72656653 		.ascii	"refSampleTime\000"
 6282      616D706C 
 6282      6554696D 
 6282      6500
 6283              	.LASF147:
 6284 05f3 74784D65 		.ascii	"txMessage\000"
 6284      73736167 
 6284      6500
 6285              	.LASF151:
 6286 05fd 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 6286      7465725F 
 6286      315F5772 
 6286      69746543 
 6286      6F756E74 
 6287              	.LASF145:
 6288 0614 4C617374 		.ascii	"LastMessageTimeTick\000"
 6288      4D657373 
 6288      61676554 
 6288      696D6554 
 6288      69636B00 
 6289              	.LASF81:
 6290 0628 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 6290      53535F49 
 6290      73724861 
 6290      6E646C65 
 6290      7200
 6291              	.LASF142:
 6292 063a 75784869 		.ascii	"uxHighWaterMark_Current\000"
 6292      67685761 
 6292      7465724D 
 6292      61726B5F 
 6292      43757272 
 6293              	.LASF32:
 6294 0652 5469636B 		.ascii	"TickType_t\000"
 6294      54797065 
 6294      5F7400
 6295              	.LASF39:
 6296 065d 436F6E66 		.ascii	"ConfigStates_t\000"
 6296      69675374 
 6296      61746573 
 6296      5F7400
 6297              	.LASF94:
 6298 066c 5049445F 		.ascii	"PID_SetTunings\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 144


 6298      53657454 
 6298      756E696E 
 6298      677300
 6299              	.LASF3:
 6300 067b 6C6F6E67 		.ascii	"long double\000"
 6300      20646F75 
 6300      626C6500 
 6301              	.LASF198:
 6302 0687 4952516E 		.ascii	"IRQn\000"
 6302      00
 6303              	.LASF22:
 6304 068c 72656733 		.ascii	"reg32\000"
 6304      3200
 6305              	.LASF35:
 6306 0692 6373554E 		.ascii	"csUNDEFINED\000"
 6306      44454649 
 6306      4E454400 
 6307              	.LASF100:
 6308 069e 5049445F 		.ascii	"PID_Compute\000"
 6308      436F6D70 
 6308      75746500 
 6309              	.LASF95:
 6310 06aa 6E657753 		.ascii	"newSampleTime\000"
 6310      616D706C 
 6310      6554696D 
 6310      6500
 6311              	.LASF60:
 6312 06b8 73657175 		.ascii	"sequence\000"
 6312      656E6365 
 6312      00
 6313              	.LASF124:
 6314 06c1 4F757470 		.ascii	"Output\000"
 6314      757400
 6315              	.LASF68:
 6316 06c8 636F6E66 		.ascii	"config\000"
 6316      696700
 6317              	.LASF44:
 6318 06cf 66734375 		.ascii	"fsCurrentRead\000"
 6318      7272656E 
 6318      74526561 
 6318      6400
 6319              	.LASF6:
 6320 06dd 73686F72 		.ascii	"short int\000"
 6320      7420696E 
 6320      7400
 6321              	.LASF102:
 6322 06e7 64506F73 		.ascii	"dPosition\000"
 6322      6974696F 
 6322      6E00
 6323              	.LASF62:
 6324 06f1 72784D65 		.ascii	"rxMessage_config_t\000"
 6324      73736167 
 6324      655F636F 
 6324      6E666967 
 6324      5F7400
 6325              	.LASF121:
 6326 0704 5049445F 		.ascii	"PID_Was_Enabled\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 145


 6326      5761735F 
 6326      456E6162 
 6326      6C656400 
 6327              	.LASF120:
 6328 0714 5049445F 		.ascii	"PID_Enabled\000"
 6328      456E6162 
 6328      6C656400 
 6329              	.LASF106:
 6330 0720 4D6F6465 		.ascii	"Mode\000"
 6330      00
 6331              	.LASF8:
 6332 0725 6C6F6E67 		.ascii	"long int\000"
 6332      20696E74 
 6332      00
 6333              	.LASF38:
 6334 072e 63734D41 		.ascii	"csMAX\000"
 6334      5800
 6335              	.LASF99:
 6336 0734 73616D70 		.ascii	"sampleTimeInSec\000"
 6336      6C655469 
 6336      6D65496E 
 6336      53656300 
 6337              	.LASF161:
 6338 0744 4379496E 		.ascii	"CyIntSetSysVector\000"
 6338      74536574 
 6338      53797356 
 6338      6563746F 
 6338      7200
 6339              	.LASF25:
 6340 0756 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6340      61736B61 
 6340      626C6549 
 6340      6E745F49 
 6340      52516E00 
 6341              	.LASF34:
 6342 076a 53656D61 		.ascii	"SemaphoreHandle_t\000"
 6342      70686F72 
 6342      6548616E 
 6342      646C655F 
 6342      7400
 6343              	.LASF176:
 6344 077c 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 6344      5F4F5554 
 6344      5F536574 
 6344      44726976 
 6344      654D6F64 
 6345              	.LASF75:
 6346 0792 74784D65 		.ascii	"txMessage_t\000"
 6346      73736167 
 6346      655F7400 
 6347              	.LASF64:
 6348 079e 73657470 		.ascii	"setpoint\000"
 6348      6F696E74 
 6348      00
 6349              	.LASF141:
 6350 07a7 75784869 		.ascii	"uxHighWaterMark_PID\000"
 6350      67685761 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 146


 6350      7465724D 
 6350      61726B5F 
 6350      50494400 
 6351              	.LASF186:
 6352 07bb 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 6352      7273745F 
 6352      656E636F 
 6352      6465725F 
 6352      53657450 
 6353              	.LASF122:
 6354 07d7 5049445F 		.ascii	"PID_Setpoint\000"
 6354      53657470 
 6354      6F696E74 
 6354      00
 6355              	.LASF9:
 6356 07e4 5F5F7569 		.ascii	"__uint8_t\000"
 6356      6E74385F 
 6356      7400
 6357              	.LASF126:
 6358 07ee 6C617374 		.ascii	"lastPosition\000"
 6358      506F7369 
 6358      74696F6E 
 6358      00
 6359              	.LASF52:
 6360 07fb 6F705374 		.ascii	"opStatus\000"
 6360      61747573 
 6360      00
 6361              	.LASF158:
 6362 0804 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 6362      315F5370 
 6362      69556172 
 6362      74526561 
 6362      64527844 
 6363              	.LASF165:
 6364 081c 4932435F 		.ascii	"I2C_I2CMasterSendStart\000"
 6364      4932434D 
 6364      61737465 
 6364      7253656E 
 6364      64537461 
 6365              	.LASF54:
 6366 0833 6F704D41 		.ascii	"opMAX\000"
 6366      5800
 6367              	.LASF89:
 6368 0839 436F6D6D 		.ascii	"Comm_Task\000"
 6368      5F546173 
 6368      6B00
 6369              	.LASF29:
 6370 0843 53797354 		.ascii	"SysTick_IRQn\000"
 6370      69636B5F 
 6370      4952516E 
 6370      00
 6371              	.LASF137:
 6372 0850 43686563 		.ascii	"ChecksumErrors\000"
 6372      6B73756D 
 6372      4572726F 
 6372      727300
 6373              	.LASF24:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 147


 6374 085f 73697A65 		.ascii	"sizetype\000"
 6374      74797065 
 6374      00
 6375              	.LASF11:
 6376 0868 6C6F6E67 		.ascii	"long unsigned int\000"
 6376      20756E73 
 6376      69676E65 
 6376      6420696E 
 6376      7400
 6377              	.LASF178:
 6378 087a 496E6465 		.ascii	"Index_Counter_1_ReadCounter\000"
 6378      785F436F 
 6378      756E7465 
 6378      725F315F 
 6378      52656164 
 6379              	.LASF115:
 6380 0896 43757272 		.ascii	"CurrentIndexCount\000"
 6380      656E7449 
 6380      6E646578 
 6380      436F756E 
 6380      7400
 6381              	.LASF194:
 6382 08a8 76546173 		.ascii	"vTaskStartScheduler\000"
 6382      6B537461 
 6382      72745363 
 6382      68656475 
 6382      6C657200 
 6383              	.LASF110:
 6384 08bc 70657263 		.ascii	"percent\000"
 6384      656E7400 
 6385              	.LASF168:
 6386 08c4 4932435F 		.ascii	"I2C_I2CMasterReadBuf\000"
 6386      4932434D 
 6386      61737465 
 6386      72526561 
 6386      64427566 
 6387              	.LASF189:
 6388 08d9 5350495F 		.ascii	"SPI_1_Start\000"
 6388      315F5374 
 6388      61727400 
 6389              	.LASF5:
 6390 08e5 756E7369 		.ascii	"unsigned char\000"
 6390      676E6564 
 6390      20636861 
 6390      7200
 6391              	.LASF192:
 6392 08f3 436F756E 		.ascii	"Counter_1_Start\000"
 6392      7465725F 
 6392      315F5374 
 6392      61727400 
 6393              	.LASF10:
 6394 0903 5F5F7569 		.ascii	"__uint32_t\000"
 6394      6E743332 
 6394      5F7400
 6395              	.LASF50:
 6396 090e 6F70554E 		.ascii	"opUNDEFINED\000"
 6396      44454649 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 148


 6396      4E454400 
 6397              	.LASF135:
 6398 091a 4661756C 		.ascii	"FaultState\000"
 6398      74537461 
 6398      746500
 6399              	.LASF132:
 6400 0925 6F75744D 		.ascii	"outMax\000"
 6400      617800
 6401              	.LASF27:
 6402 092c 53564361 		.ascii	"SVCall_IRQn\000"
 6402      6C6C5F49 
 6402      52516E00 
 6403              	.LASF46:
 6404 0938 66735832 		.ascii	"fsX2\000"
 6404      00
 6405              	.LASF47:
 6406 093d 66735833 		.ascii	"fsX3\000"
 6406      00
 6407              	.LASF48:
 6408 0942 66735834 		.ascii	"fsX4\000"
 6408      00
 6409              	.LASF136:
 6410 0947 436F6E66 		.ascii	"ConfigSequence\000"
 6410      69675365 
 6410      7175656E 
 6410      636500
 6411              	.LASF91:
 6412 0956 64757479 		.ascii	"dutycycle\000"
 6412      6379636C 
 6412      6500
 6413              	.LASF117:
 6414 0960 4C617374 		.ascii	"Last_Jog\000"
 6414      5F4A6F67 
 6414      00
 6415              	.LASF128:
 6416 0969 7265664B 		.ascii	"refKi\000"
 6416      6900
 6417              	.LASF111:
 6418 096f 5049445F 		.ascii	"PID_Task\000"
 6418      5461736B 
 6418      00
 6419              	.LASF150:
 6420 0978 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 6420      745F456E 
 6420      636F6465 
 6420      725F436C 
 6420      65617249 
 6421              	.LASF127:
 6422 0995 7265664B 		.ascii	"refKp\000"
 6422      7000
 6423              	.LASF70:
 6424 099b 73746174 		.ascii	"state\000"
 6424      6500
 6425              	.LASF85:
 6426 09a1 62797465 		.ascii	"byteLSB\000"
 6426      4C534200 
 6427              	.LASF164:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 149


 6428 09a9 50524F42 		.ascii	"PROBE_Write\000"
 6428      455F5772 
 6428      69746500 
 6429              	.LASF182:
 6430 09b5 6973725F 		.ascii	"isr_home_StartEx\000"
 6430      686F6D65 
 6430      5F537461 
 6430      72744578 
 6430      00
 6431              	.LASF4:
 6432 09c6 7369676E 		.ascii	"signed char\000"
 6432      65642063 
 6432      68617200 
 6433              	.LASF7:
 6434 09d2 73686F72 		.ascii	"short unsigned int\000"
 6434      7420756E 
 6434      7369676E 
 6434      65642069 
 6434      6E7400
 6435              	.LASF93:
 6436 09e5 5049445F 		.ascii	"PID_Initialize\000"
 6436      496E6974 
 6436      69616C69 
 6436      7A6500
 6437              	.LASF116:
 6438 09f4 6D61696E 		.ascii	"main\000"
 6438      00
 6439              	.LASF26:
 6440 09f9 48617264 		.ascii	"HardFault_IRQn\000"
 6440      4661756C 
 6440      745F4952 
 6440      516E00
 6441              	.LASF73:
 6442 0a08 63757272 		.ascii	"current\000"
 6442      656E7400 
 6443              	.LASF15:
 6444 0a10 75696E74 		.ascii	"uint8\000"
 6444      3800
 6445              	.LASF20:
 6446 0a16 646F7562 		.ascii	"double\000"
 6446      6C6500
 6447              	.LASF193:
 6448 0a1d 496E6465 		.ascii	"Index_Counter_1_Start\000"
 6448      785F436F 
 6448      756E7465 
 6448      725F315F 
 6448      53746172 
 6449              	.LASF143:
 6450 0a33 75784869 		.ascii	"uxHighWaterMark_Comm\000"
 6450      67685761 
 6450      7465724D 
 6450      61726B5F 
 6450      436F6D6D 
 6451              	.LASF51:
 6452 0a48 6F70436F 		.ascii	"opConfig\000"
 6452      6E666967 
 6452      00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc9vZali.s 			page 150


 6453              	.LASF183:
 6454 0a51 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 6454      7273745F 
 6454      656E636F 
 6454      6465725F 
 6454      53746172 
 6455              	.LASF153:
 6456 0a69 6973725F 		.ascii	"isr_home_ClearPending\000"
 6456      686F6D65 
 6456      5F436C65 
 6456      61725065 
 6456      6E64696E 
 6457              	.LASF71:
 6458 0a7f 6661756C 		.ascii	"fault\000"
 6458      7400
 6459              	.LASF79:
 6460 0a85 52535449 		.ascii	"RSTIsrHandler\000"
 6460      73724861 
 6460      6E646C65 
 6460      7200
 6461              	.LASF74:
 6462 0a93 706F7369 		.ascii	"position\000"
 6462      74696F6E 
 6462      00
 6463              	.LASF49:
 6464 0a9c 4661756C 		.ascii	"FaultStates_t\000"
 6464      74537461 
 6464      7465735F 
 6464      7400
 6465              	.LASF197:
 6466 0aaa 433A5C70 		.ascii	"C:\\proj\\acsnb-motor-cypress\\QuadEncoderRTOS.cyds"
 6466      726F6A5C 
 6466      6163736E 
 6466      622D6D6F 
 6466      746F722D 
 6467 0ada 6E00     		.ascii	"n\000"
 6468              	.LASF114:
 6469 0adc 44656C74 		.ascii	"DeltaPosition\000"
 6469      61506F73 
 6469      6974696F 
 6469      6E00
 6470              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
