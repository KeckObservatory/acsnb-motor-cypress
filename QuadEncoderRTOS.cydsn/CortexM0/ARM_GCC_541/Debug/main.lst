ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB44:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  12:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  13:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  14:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  15:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  16:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  17:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  18:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  19:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  20:main.c        **** *******************************************************************************/
  21:main.c        **** #include <I2C_I2C.h>
  22:main.c        **** #include <stdbool.h>
  23:main.c        **** #include <stdlib.h>
  24:main.c        **** #include <math.h>
  25:main.c        **** #include "INA219.h"
  26:main.c        **** 
  27:main.c        **** /* Firmware revision as of 2022-07-27 PMR */
  28:main.c        **** #define FIRMWARE_REV_0 0
  29:main.c        **** #define FIRMWARE_REV_1 1
  30:main.c        **** #define FIRMWARE_REV_2 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 2


  31:main.c        **** 
  32:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  33:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  34:main.c        **** 
  35:main.c        **** /* --------------------------------------------------------------------- 
  36:main.c        ****  * CONSTANTS
  37:main.c        ****  * --------------------------------------------------------------------- */
  38:main.c        **** 
  39:main.c        **** /* Interrupt priorities */
  40:main.c        **** #define NESTED_ISR                             (1u)
  41:main.c        **** #define HIGHER_PRIORITY                        (2u)
  42:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  43:main.c        **** 
  44:main.c        **** /* Interrupt prototypes */
  45:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  46:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  47:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  48:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  49:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  50:main.c        **** 
  51:main.c        **** /* --------------------------------------------------------------------- 
  52:main.c        ****  * WDT Defines
  53:main.c        ****  *
  54:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  55:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  56:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  57:main.c        ****  * --------------------------------------------------------------------- */
  58:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  59:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  60:main.c        **** 
  61:main.c        **** /* --------------------------------------------------------------------- 
  62:main.c        ****  * PWM Defines
  63:main.c        ****  * --------------------------------------------------------------------- */
  64:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  65:main.c        **** //#define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * (PWM_15KHZ_PERIOD/100))
  66:main.c        **** #define PWM_PCT_TO_COMPARE(x)                  trunc((float) x * 16)
  67:main.c        **** #define PWM_IDLE                               (50.0)
  68:main.c        **** 
  69:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  70:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  71:main.c        **** #define INA219_CAL_VALUE                       (8192)
  72:main.c        **** 
  73:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  74:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  75:main.c        **** 
  76:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  77:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  78:main.c        **** 
  79:main.c        **** /* --------------------------------------------------------------------- 
  80:main.c        ****  * PID Defines
  81:main.c        ****  * --------------------------------------------------------------------- */
  82:main.c        **** #define PID_MANUAL                             (0)
  83:main.c        **** #define PID_AUTOMATIC                          (1)
  84:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (25)
  85:main.c        **** bool inAuto = false;
  86:main.c        **** 
  87:main.c        **** volatile int8 Jog, LastJog;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 3


  88:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  89:main.c        **** int32 PID_Setpoint, PID_EffectiveSetpoint;
  90:main.c        **** uint8 PID_EffSetDelta;
  91:main.c        **** uint32 lastTime;
  92:main.c        **** float Output;
  93:main.c        **** float ITerm;
  94:main.c        **** volatile int32 Position, LastPosition;
  95:main.c        **** float kp, ki, kd; // PID values
  96:main.c        **** uint32 refSampleTime = 5; // Default to 5ms
  97:main.c        **** float outMax_Total, outMax_ITerm;
  98:main.c        **** float pwmLimit, pwmMax, pwmMin;    
  99:main.c        **** bool homingDone = true;
 100:main.c        **** 
 101:main.c        **** /* --------------------------------------------------------------------- 
 102:main.c        ****  * Timekeeping defines
 103:main.c        ****  * --------------------------------------------------------------------- */
 104:main.c        **** volatile uint64 UptimeMicrosecondsAccumulator = 0;
 105:main.c        **** volatile uint64 UptimeSeconds = 0;
 106:main.c        **** 
 107:main.c        **** /* --------------------------------------------------------------------- 
 108:main.c        ****  * ENCODER PROPERTIES
 109:main.c        ****  *
 110:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 111:main.c        ****  *
 112:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 113:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 114:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 115:main.c        ****  * flag and resetting the counter to 0 again.
 116:main.c        ****  *
 117:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 118:main.c        ****  * --------------------------------------------------------------------- */
 119:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 120:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 121:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 122:main.c        **** 
 123:main.c        **** /* --------------------------------------------------------------------- 
 124:main.c        ****  * GLOBALS
 125:main.c        ****  * --------------------------------------------------------------------- */
 126:main.c        **** /* Coarse reporting of state back to the node box software */
 127:main.c        **** typedef enum {    
 128:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 129:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 130:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 131:main.c        ****     csMAX    
 132:main.c        **** } ConfigStates_t;
 133:main.c        **** 
 134:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 135:main.c        **** 
 136:main.c        **** /* Fault codes, these are bit encoded into a uint8 */
 137:main.c        **** typedef enum {
 138:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 139:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 140:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 141:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 142:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 143:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 144:main.c        ****     fsX2           = 0b00100000,    /* */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 4


 145:main.c        ****     fsX3           = 0b01000000,    /* */
 146:main.c        ****     fsX4           = 0b10000000     /* */
 147:main.c        **** } FaultStates_t;
 148:main.c        **** 
 149:main.c        **** volatile ConfigStates_t ConfigState;
 150:main.c        **** volatile uint8 FaultState;
 151:main.c        **** volatile uint8 ConfigSequence;
 152:main.c        **** volatile uint16 ChecksumErrors;
 153:main.c        **** volatile int16 Current;
 154:main.c        **** volatile float PWM;
 155:main.c        **** uint8 CurrentI2Cinbuf[20];
 156:main.c        **** 
 157:main.c        **** /* --------------------------------------------------------------------- 
 158:main.c        ****  * SPI MESSAGING
 159:main.c        ****  * --------------------------------------------------------------------- */
 160:main.c        **** /* V2 protocol 
 161:main.c        **** 
 162:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 163:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 164:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 165:main.c        **** */
 166:main.c        ****     
 167:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 168:main.c        **** #define MAX_MESSAGE_SIZE 30
 169:main.c        ****     
 170:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 171:main.c        ****    talking.  Nominally 1 second max of not talking. */
 172:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 173:main.c        **** uint32 LastMessageTimeSeconds;
 174:main.c        **** 
 175:main.c        **** /* Opcodes that can come from the node box software */
 176:main.c        **** typedef enum {
 177:main.c        ****     opUNDEFINED = 0,
 178:main.c        ****     opConfig    = 1,
 179:main.c        ****     opStatus    = 2,
 180:main.c        ****     opSetEnc    = 3,
 181:main.c        ****     opMAX       
 182:main.c        **** } rxMessage_opcodes_t;    
 183:main.c        **** 
 184:main.c        **** /* Sanity check for opcodes */
 185:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 186:main.c        **** 
 187:main.c        **** typedef struct { 
 188:main.c        ****     uint8 checksum;        
 189:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 190:main.c        ****     uint8 opcode;     /* Operation (generic overlay for previewing opcode value) */
 191:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 192:main.c        **** 
 193:main.c        **** /* Configuration message, 19 bytes */
 194:main.c        **** typedef struct {
 195:main.c        ****     uint8 checksum;        
 196:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 197:main.c        ****     uint8 opcode;     /* Operation: 01 == config */        
 198:main.c        ****     uint8 sequence;   /* Configuration message sequence number */
 199:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 200:main.c        ****     float Ki;
 201:main.c        ****     float Kd;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 5


 202:main.c        ****     uint8 limit_Total;/* Total drive output limit, +/- percentage */
 203:main.c        ****     uint8 limit_ITerm;/* PID I term output limit, also +/- percentage */
 204:main.c        ****     uint8 effsetdelta;/* PID effective setpoint increment delta, nominally 25 steps */
 205:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 206:main.c        **** 
 207:main.c        **** /* Status message, contains desired position and such values, 12 bytes */
 208:main.c        **** typedef struct {
 209:main.c        ****     uint8  checksum;        
 210:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 211:main.c        ****     uint8  opcode;     /* Operation: 02 == status */
 212:main.c        ****     uint8  enable;     /* Enable/disable PID algorithm */
 213:main.c        ****     int32  setpoint;   /* Setpoint (desired actuator position) */
 214:main.c        ****     int8   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 215:main.c        ****     uint8  clearfaults;/* Set to nonzero to clear all the current faults */
 216:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 217:main.c        ****    
 218:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 219:main.c        **** typedef struct {
 220:main.c        ****     uint8  checksum;        
 221:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 222:main.c        ****     uint8  opcode;     /* Operation: 03 == set encoders */
 223:main.c        ****     int32  setpoint;   /* Setpoint (force an actuator logical position) */
 224:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 225:main.c        **** 
 226:main.c        **** 
 227:main.c        **** /* Wrap the message with an array of bytes */
 228:main.c        **** union {
 229:main.c        ****     uint8               buf[MAX_MESSAGE_SIZE];
 230:main.c        ****     rxMessage_overlay_t overlay;
 231:main.c        ****     rxMessage_config_t  config;
 232:main.c        ****     rxMessage_status_t  status;  
 233:main.c        ****     rxMessage_setenc_t  setenc;
 234:main.c        **** } rxMessage;
 235:main.c        **** 
 236:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 18 byt
 237:main.c        **** typedef struct  {  
 238:main.c        ****     uint8  checksum;   /* Message checksum */    
 239:main.c        ****     uint8  version0;   /* Version byte 0 */ 
 240:main.c        ****     uint8  version1;   /* Version byte 1 */
 241:main.c        ****     uint8  version2;   /* Version byte 2 */
 242:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 243:main.c        ****     uint8  opcode;     /* Echo back of the opcode this response is for, operation: 02 == status */
 244:main.c        ****     uint8  state;      /* Enum value for current device configuration state */ 
 245:main.c        ****     uint8  fault;      /* Bit encoded fields for current fault status */
 246:main.c        ****     uint8  sequence;   /* Echo back the config sequence number currently set */
 247:main.c        ****     uint16 checksum_errors; /* Count of checksum errors */
 248:main.c        ****     int16 current;     /* Motor current consumption (mA) */
 249:main.c        ****     int32 position;    /* Actual actuator position, signed value */ 
 250:main.c        ****     float pwm;         /* PWM value the motor is moving at */     
 251:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 252:main.c        **** 
 253:main.c        **** /* Wrap the message with an array of bytes */
 254:main.c        **** union {    
 255:main.c        ****     uint8       buf[MAX_MESSAGE_SIZE];
 256:main.c        ****     txMessage_t msg;
 257:main.c        **** } txMessage;
 258:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 6


 259:main.c        **** /* State machine definition for transmit side of messaging */
 260:main.c        **** typedef enum {
 261:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 262:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 263:main.c        **** } txMessageStates_t;
 264:main.c        **** 
 265:main.c        **** txMessageStates_t txMessageState;
 266:main.c        **** 
 267:main.c        **** /* --------------------------------------------------------------------- 
 268:main.c        ****  * Function prototypes
 269:main.c        ****  * --------------------------------------------------------------------- */
 270:main.c        **** int32 GetPosition(void);
 271:main.c        **** void runRateGroup1_PID(void);
 272:main.c        **** void runRateGroup3_SPI(void);
 273:main.c        **** void runRateGroup4_MotorCurrentRead(void);
 274:main.c        **** 
 275:main.c        **** 
 276:main.c        **** 
 277:main.c        **** 
 278:main.c        **** /*******************************************************************************
 279:main.c        **** * Function Name: AssertFault
 280:main.c        **** ********************************************************************************
 281:main.c        **** * Summary:
 282:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 283:main.c        **** *  all faults.
 284:main.c        **** *
 285:main.c        **** * Parameters: FaultStates_t of the fault detected.
 286:main.c        **** * Return: None
 287:main.c        **** *******************************************************************************/
 288:main.c        **** void AssertFault(FaultStates_t fault) {
 289:main.c        ****  
 290:main.c        ****     switch (fault) {
 291:main.c        ****      
 292:main.c        ****         /* Clears all asserted faults */
 293:main.c        ****         case fsNONE:
 294:main.c        ****             FaultState = fsNONE;
 295:main.c        ****             break;        
 296:main.c        ****         
 297:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 298:main.c        ****         default:
 299:main.c        ****             FaultState |= fault;
 300:main.c        ****             break;        
 301:main.c        ****     }    
 302:main.c        **** }
 303:main.c        **** 
 304:main.c        **** 
 305:main.c        **** /*******************************************************************************
 306:main.c        **** * Function Name: ClearFault
 307:main.c        **** ********************************************************************************
 308:main.c        **** * Summary:
 309:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 310:main.c        **** *  all faults.
 311:main.c        **** *
 312:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 313:main.c        **** * Return: None
 314:main.c        **** *******************************************************************************/
 315:main.c        **** void ClearFault(FaultStates_t fault) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 7


 316:main.c        ****  
 317:main.c        ****     switch (fault) {
 318:main.c        ****      
 319:main.c        ****         /* Clears all asserted faults */
 320:main.c        ****         case fsNONE:
 321:main.c        ****             FaultState = fsNONE;
 322:main.c        ****             break;        
 323:main.c        ****         
 324:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 325:main.c        ****         default:
 326:main.c        ****             FaultState &= ~fault;
 327:main.c        ****             break;        
 328:main.c        ****     }    
 329:main.c        **** }
 330:main.c        **** 
 331:main.c        **** 
 332:main.c        **** /*******************************************************************************
 333:main.c        **** * Function Name: runRateGroup4_MotorCurrentRead
 334:main.c        **** ********************************************************************************
 335:main.c        **** * Summary:
 336:main.c        **** *  Task to read the motor current consumption.
 337:main.c        **** *
 338:main.c        **** * Parameters: None
 339:main.c        **** * Return: None
 340:main.c        **** *******************************************************************************/
 341:main.c        **** void runRateGroup4_MotorCurrentRead(void) {
 342:main.c        ****     
 343:main.c        ****     static bool initialized = false;
 344:main.c        ****     static float CurrentTemp;
 345:main.c        ****     
 346:main.c        ****     if (!initialized) {
 347:main.c        ****         /* Start I2C for Current Monitor */
 348:main.c        ****         I2C_Start();
 349:main.c        ****         Init_INA(INA219_I2C_ADDR);
 350:main.c        ****         
 351:main.c        ****     initialized = true;
 352:main.c        ****     }
 353:main.c        ****     
 354:main.c        ****     CurrentTemp = getCurrent_mA(INA219_I2C_ADDR);
 355:main.c        ****             
 356:main.c        ****     Current = (int16_t) CurrentTemp;
 357:main.c        ****     //AssertFault(fsCurrentRead);
 358:main.c        ****     
 359:main.c        ****     /* Read the current at 2Hz */        
 360:main.c        **** ///        Sleep(500);
 361:main.c        ****         
 362:main.c        **** }
 363:main.c        **** 
 364:main.c        **** 
 365:main.c        **** /*******************************************************************************
 366:main.c        **** * Function Name: Comm_Task
 367:main.c        **** ********************************************************************************
 368:main.c        **** * Summary:
 369:main.c        **** *  Task to perform the SPI communications.
 370:main.c        **** *
 371:main.c        **** * Parameters: None
 372:main.c        **** * Return: None
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 8


 373:main.c        **** *******************************************************************************/
 374:main.c        **** void runRateGroup3_SPI(void) {
 375:main.c        ****  
 376:main.c        ****     rxMessage_opcodes_t opcode;
 377:main.c        ****     uint8 size;
 378:main.c        ****     uint8 i;
 379:main.c        ****     uint8 checksum;
 380:main.c        ****     uint8 limit;    
 381:main.c        ****     
 382:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 383:main.c        ****        get to it next cycle! */
 384:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 385:main.c        ****         return;
 386:main.c        ****     
 387:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 388:main.c        ****     switch (txMessageState) {
 389:main.c        ****      
 390:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 391:main.c        ****         case txmsClear:
 392:main.c        ****                 
 393:main.c        ****             /* Get a few items out of the message before checking the sum */
 394:main.c        ****             size     = rxMessage.overlay.size;
 395:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 396:main.c        ****             
 397:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 398:main.c        ****             if (size > sizeof(txMessage.buf))
 399:main.c        ****                 size = sizeof(txMessage.buf);                            
 400:main.c        ****         
 401:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 402:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 403:main.c        ****                 checksum += rxMessage.buf[i]; 
 404:main.c        **** 
 405:main.c        ****             /* Checksum fault, don't try to process the messgage */
 406:main.c        ****             if ((checksum & 0xFF) != 0) {
 407:main.c        ****                 
 408:main.c        ****                 txMessage.msg.opcode = opcode;
 409:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 410:main.c        ****                 ChecksumErrors++;
 411:main.c        ****                 
 412:main.c        ****             /* Message looks fine, process it */
 413:main.c        ****             } else {
 414:main.c        **** 
 415:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 416:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 417:main.c        ****                 
 418:main.c        ****                     switch (opcode) {
 419:main.c        ****                     
 420:main.c        ****                         case opConfig:
 421:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 422:main.c        ****                         
 423:main.c        ****                             /* Update the PID values passed down from the server */
 424:main.c        ****                             kp = rxMessage.config.Kp;
 425:main.c        ****                             ki = rxMessage.config.Ki;
 426:main.c        ****                             kd = rxMessage.config.Kd;      
 427:main.c        ****                         
 428:main.c        ****                             /* PID effective setpoint increment delta value */                     
 429:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 9


 430:main.c        ****                                
 431:main.c        ****                             /* Setup the output limits and stop a jog if one was in progress */
 432:main.c        ****                             Jog = 0;
 433:main.c        ****                         
 434:main.c        ****                             /* Clip the limits to 100% duty cycle */
 435:main.c        ****                             limit = rxMessage.config.limit_Total;
 436:main.c        ****                             if (limit > 100)
 437:main.c        ****                                 limit = 100;
 438:main.c        ****                         
 439:main.c        ****                             outMax_Total = limit;                                        
 440:main.c        ****                             
 441:main.c        ****                             limit = rxMessage.config.limit_ITerm;                                  
 442:main.c        ****                             if (limit > 100)
 443:main.c        ****                                 limit = 100;
 444:main.c        ****                             
 445:main.c        ****                             outMax_ITerm = limit;
 446:main.c        ****                             
 447:main.c        ****                             /* Convert the configured output maximum also into a PWM value, because
 448:main.c        ****                             could be set from manual control of the PWM.  
 449:main.c        **** 
 450:main.c        ****                             outMax_Total ranges from 0 to 100% of power delivery, which means we ne
 451:main.c        ****                             convert it into a value symmetrically above and below the "neutral" cen
 452:main.c        ****                             point value of 50 */    
 453:main.c        ****                             pwmLimit = (outMax_Total/100 * 50);
 454:main.c        ****                             pwmMax = 50 + pwmLimit;
 455:main.c        ****                             pwmMin = 50 - pwmLimit;
 456:main.c        ****                         
 457:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 458:main.c        ****                             ConfigState = csReady;  
 459:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 460:main.c        ****                         
 461:main.c        ****                             /* Clear all the faults when reconfigured */
 462:main.c        ****                             ClearFault(fsNONE);
 463:main.c        ****                             break;
 464:main.c        **** 
 465:main.c        ****                         case opStatus:
 466:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 467:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 468:main.c        ****                             
 469:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
 470:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
 471:main.c        ****                                 
 472:main.c        ****                                 /* Remember where we started */
 473:main.c        ****                                 LastPosition = GetPosition();
 474:main.c        ****                                 
 475:main.c        ****                                 /* Update destination */
 476:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 477:main.c        ****                                 
 478:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 479:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 480:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 481:main.c        ****                                 
 482:main.c        ****                                 /* Reset counting of index marks */
 483:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 484:main.c        ****                             }                                        
 485:main.c        ****                         
 486:main.c        ****                             /* PWM jog value ranges from -50 to 50, where -50 is max-reverse curren
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 10


 487:main.c        ****                             Jog = rxMessage.status.jog;                                            
 488:main.c        ****                             break;
 489:main.c        ****                         
 490:main.c        ****                         case opSetEnc:
 491:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 492:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);   
 493:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 494:main.c        ****                             break;                                        
 495:main.c        ****                             
 496:main.c        ****                         /* No other opcodes are valid */
 497:main.c        ****                         default:
 498:main.c        ****                             break;
 499:main.c        ****                     }                           
 500:main.c        ****                 }                            
 501:main.c        ****             }
 502:main.c        ****             
 503:main.c        ****             /* Get a fresh copy of the position information */
 504:main.c        ****             Position = GetPosition();
 505:main.c        ****             
 506:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 507:main.c        ****             txMessage.msg.checksum = 0;
 508:main.c        ****             txMessage.msg.version0 = FIRMWARE_REV_0;
 509:main.c        ****             txMessage.msg.version1 = FIRMWARE_REV_1;
 510:main.c        ****             txMessage.msg.version2 = FIRMWARE_REV_2;
 511:main.c        ****             txMessage.msg.size     = sizeof(txMessage_t);
 512:main.c        ****             txMessage.msg.opcode   = opStatus;
 513:main.c        ****             txMessage.msg.state    = (uint8) ConfigState;
 514:main.c        ****             txMessage.msg.fault    = (uint8) FaultState;
 515:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 516:main.c        ****             txMessage.msg.sequence = ConfigSequence;
 517:main.c        ****             txMessage.msg.position = Position;
 518:main.c        ****             txMessage.msg.pwm      = PWM;
 519:main.c        ****             txMessage.msg.current  = Current;                            
 520:main.c        ****             
 521:main.c        ****             /* Set the checksum in the response */
 522:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 523:main.c        ****                 checksum += txMessage.buf[i]; 
 524:main.c        ****                 
 525:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
 526:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 527:main.c        ****                 
 528:main.c        ****             /* Copy the readied buffer out to the FIFO */
 529:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 530:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 531:main.c        **** 
 532:main.c        ****             /* Indicate it's loaded for use */
 533:main.c        ****             txMessageState = txmsLoaded;
 534:main.c        ****             
 535:main.c        ****             /* Clear all the faults if told to */
 536:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 537:main.c        ****                 ClearFault(fsNONE);
 538:main.c        ****         
 539:main.c        ****             break;
 540:main.c        ****     
 541:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 542:main.c        ****         case txmsLoaded:                
 543:main.c        ****             break;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 11


 544:main.c        ****                 
 545:main.c        ****     } // End of message state case statement
 546:main.c        **** 
 547:main.c        **** }
 548:main.c        ****     
 549:main.c        **** 
 550:main.c        **** /*******************************************************************************
 551:main.c        **** * Function Name: PWM_Set
 552:main.c        **** ********************************************************************************
 553:main.c        **** * Summary:
 554:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 555:main.c        **** *
 556:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 557:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
 558:main.c        **** * Return: None
 559:main.c        **** *******************************************************************************/
 560:main.c        **** void PWM_Set(float dutycycle) {
 561:main.c        ****     
 562:main.c        ****     float drive = dutycycle;
 563:main.c        ****     
 564:main.c        ****     /* Clip to the max PWM drive +/- around 50 */
 565:main.c        ****     if (drive > pwmMax) {
 566:main.c        ****         drive = pwmMax;
 567:main.c        ****     } else if (drive < pwmMin) {
 568:main.c        ****         drive = pwmMin;
 569:main.c        ****     }
 570:main.c        ****     
 571:main.c        ****     PWM_1_WriteCompare(PWM_PCT_TO_COMPARE(drive));    
 572:main.c        **** }
 573:main.c        **** 
 574:main.c        **** 
 575:main.c        **** /*******************************************************************************
 576:main.c        **** * Function Name: GetPosition
 577:main.c        **** ********************************************************************************
 578:main.c        **** * Summary:
 579:main.c        **** *  Get the physical position value and compensate for negative locations.
 580:main.c        **** *
 581:main.c        **** * Parameters: None
 582:main.c        **** * Return: int32 (signed!) position value
 583:main.c        **** *******************************************************************************/
 584:main.c        **** int32 GetPosition(void) {
 585:main.c        ****     
 586:main.c        ****     static volatile uint32 RawPosition;
 587:main.c        ****     static volatile int32 result;
 588:main.c        ****     
 589:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 590:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 591:main.c        ****     
 592:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 593:main.c        ****        underflow and make that into a negative value */
 594:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 595:main.c        ****         
 596:main.c        ****         result = (-1) * ((int32) ENCODER_MAX - (int32) RawPosition);
 597:main.c        ****         
 598:main.c        ****     } else {
 599:main.c        ****      
 600:main.c        ****         /* Value is "positive", treat it normally */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 12


 601:main.c        ****         result = (int32) RawPosition;
 602:main.c        ****     }
 603:main.c        ****     
 604:main.c        ****     /* Update the master copy of position information */
 605:main.c        ****     Position = result;
 606:main.c        ****     return result;
 607:main.c        **** }
 608:main.c        **** 
 609:main.c        **** 
 610:main.c        **** /*******************************************************************************
 611:main.c        **** * Function Name: PID_Initialize
 612:main.c        **** ********************************************************************************
 613:main.c        **** * Summary:
 614:main.c        **** *  Setup and reset the PID terms.
 615:main.c        **** *
 616:main.c        **** * Parameters: None
 617:main.c        **** * Return: None
 618:main.c        **** *******************************************************************************/
 619:main.c        **** void PID_Initialize(void) {
 620:main.c        ****     
 621:main.c        ****     /* Get up-to-date position */
 622:main.c        ****     Position = GetPosition();
 623:main.c        ****     LastPosition = Position;
 624:main.c        ****     
 625:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 626:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 627:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 628:main.c        ****     
 629:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 630:main.c        ****        switching from manual to auto frequently */
 631:main.c        ****     ITerm = 0;
 632:main.c        **** }    
 633:main.c        **** 
 634:main.c        **** 
 635:main.c        **** /*******************************************************************************
 636:main.c        **** * Function Name: PID_Compute
 637:main.c        **** ********************************************************************************
 638:main.c        **** * Summary:
 639:main.c        **** *  Execute a pass through the PID process to create a duty cycle output.
 640:main.c        **** *
 641:main.c        **** * Parameters: Current time and current destination.
 642:main.c        **** * Return: PWM output, in percentage.
 643:main.c        **** *******************************************************************************/
 644:main.c        **** #ifdef ZERO
 645:main.c        **** float PID_Compute(uint32 setpoint) {
 646:main.c        ****     
 647:main.c        ****     int32 error, dPosition;
 648:main.c        ****         
 649:main.c        ****     if(!inAuto) 
 650:main.c        ****         return 0;
 651:main.c        ****     
 652:main.c        ****     /* Get most up-to-date current position */
 653:main.c        ****     Position = GetPosition();
 654:main.c        **** 
 655:main.c        ****     /* Compute all the working error variables */
 656:main.c        ****     error = setpoint - Position;
 657:main.c        ****     ITerm += (ki * error);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 13


 658:main.c        ****     
 659:main.c        ****     /* Clip the I term at a max value for just that term (windup guard) */
 660:main.c        ****     if (ITerm > outMax_ITerm) {
 661:main.c        ****         ITerm = outMax_ITerm;
 662:main.c        ****     } else if (ITerm < -outMax_ITerm) {
 663:main.c        ****         ITerm = -outMax_ITerm;
 664:main.c        ****     }
 665:main.c        ****     
 666:main.c        ****     /* Calculate the error term */
 667:main.c        ****     dPosition = (Position - LastPosition);
 668:main.c        **** 
 669:main.c        ****     /* Compute PID Output */
 670:main.c        ****     Output = (kp * error) + ITerm - (kd * dPosition);
 671:main.c        ****     
 672:main.c        ****     /* Clip the output */
 673:main.c        ****     if (Output> outMax_Total) {
 674:main.c        ****         Output = outMax_Total;
 675:main.c        ****     } else if (Output < -outMax_Total) {
 676:main.c        ****         Output = -outMax_Total;
 677:main.c        ****     }
 678:main.c        **** 
 679:main.c        ****     /* Remember some variables for next time */
 680:main.c        ****     LastPosition = Position;
 681:main.c        ****     
 682:main.c        ****     return Output;    
 683:main.c        **** }
 684:main.c        **** #endif
 685:main.c        **** 
 686:main.c        **** /*******************************************************************************
 687:main.c        **** * Function Name: PID_SetMode
 688:main.c        **** ********************************************************************************
 689:main.c        **** * Summary:
 690:main.c        **** *  Sets the PID into automatic or manual mode.
 691:main.c        **** *
 692:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 693:main.c        **** * Return: None
 694:main.c        **** *******************************************************************************/
 695:main.c        **** void PID_SetMode(uint32 Mode) {
 696:main.c        ****     
 697:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 698:main.c        ****     
 699:main.c        ****     if (newAuto && !inAuto) {  
 700:main.c        ****         /*we just went from manual to auto*/
 701:main.c        ****         PID_Initialize();
 702:main.c        ****     }
 703:main.c        ****     
 704:main.c        ****     inAuto = newAuto;
 705:main.c        **** } 
 706:main.c        ****     
 707:main.c        **** 
 708:main.c        **** /*******************************************************************************
 709:main.c        **** * Function Name: PID_SetDrive
 710:main.c        **** ********************************************************************************
 711:main.c        **** * Summary:
 712:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 713:main.c        **** *
 714:main.c        **** * Parameters: Percentage output to drive the PWM.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 14


 715:main.c        **** * Return: None
 716:main.c        **** *******************************************************************************/
 717:main.c        **** void PID_SetDrive(float percent) {
 718:main.c        **** 
 719:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 720:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 721:main.c        ****     float dutycycle = (percent + 100) / 2;    
 722:main.c        ****     
 723:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 724:main.c        ****     PWM_Set(dutycycle);  
 725:main.c        **** }
 726:main.c        **** 
 727:main.c        **** 
 728:main.c        **** /*******************************************************************************
 729:main.c        **** * Function Name: runRateGroup1_PID
 730:main.c        **** ********************************************************************************
 731:main.c        **** * Summary:
 732:main.c        **** *  Task to perform the PID calculations.
 733:main.c        **** *
 734:main.c        **** * Parameters: None
 735:main.c        **** * Return: None
 736:main.c        **** *******************************************************************************/
 737:main.c        **** void runRateGroup1_PID(void) {
 738:main.c        ****     
 739:main.c        ****     static bool initialized = false;
 740:main.c        ****     
 741:main.c        ****     static int32 DeltaPosition;
 742:main.c        ****     static uint32 CurrentIndexCount;
 743:main.c        ****     int32 error, dPosition;
 744:main.c        ****     
 745:main.c        ****     /* Initial values */
 746:main.c        **** 
 747:main.c        ****     if (!initialized) {
 748:main.c        ****         
 749:main.c        ****         /* Setup the PID subsystem */
 750:main.c        ****         PID_Initialize();
 751:main.c        ****         PID_SetMode(PID_MANUAL);
 752:main.c        ****         
 753:main.c        ****         /* Initially default to 100% output max until config tells us otherwise */
 754:main.c        ****         outMax_Total = 100;
 755:main.c        ****         outMax_ITerm = 100;
 756:main.c        **** 
 757:main.c        ****         /* Init the PWM limits the same way, full maximums */
 758:main.c        ****         pwmLimit = 50;   // This is a + or - value
 759:main.c        ****         pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 760:main.c        ****         pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
 761:main.c        ****         
 762:main.c        ****         /* Start off disabled */
 763:main.c        ****         PID_Setpoint = 0;  
 764:main.c        ****         PID_EffectiveSetpoint = 0;
 765:main.c        ****         PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 766:main.c        ****         PID_Was_Enabled = false;
 767:main.c        ****         PID_Enabled = false;
 768:main.c        ****         
 769:main.c        ****         initialized = true;
 770:main.c        ****     }
 771:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 15


 772:main.c        ****     /* ------------------------------------------------------------------------------------ */
 773:main.c        ****     /* At the top of the PID loop, refresh the counter of the watchdog to indicate the task 
 774:main.c        ****        is still alive.  Were the BRMS to stop working or the motion thread to die, the CPU 
 775:main.c        ****        will be reset after 2 seconds. */
 776:main.c        ****     WDT_COUNT1_REFRESH();        
 777:main.c        ****     /* ------------------------------------------------------------------------------------ */
 778:main.c        **** 
 779:main.c        ****     
 780:main.c        ****     
 781:main.c        ****     
 782:main.c        ****     /////////////////////////////////////////////////////
 783:main.c        ****     // TESTING ONLY
 784:main.c        ****     //ConfigState = csReady;
 785:main.c        ****     //PID_Enabled = true;
 786:main.c        ****     /////////////////////////////////////////////////////
 787:main.c        ****         
 788:main.c        **** 
 789:main.c        ****     
 790:main.c        ****     
 791:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 792:main.c        ****        take preventative action and abandon any moves in progress. */
 793:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 794:main.c        ****         
 795:main.c        ****         /* Stop all motion */
 796:main.c        ****         PWM_Set(PWM_JOG_NEUTRAL);
 797:main.c        ****         PID_Enabled = false;
 798:main.c        ****         
 799:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the next m
 800:main.c        ****            in which case we want to be neutral. */
 801:main.c        ****         Jog = 0;
 802:main.c        **** 
 803:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 804:main.c        ****     } else if (ConfigState == csReady) {
 805:main.c        ****         
 806:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 807:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 808:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 809:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 810:main.c        ****     
 811:main.c        ****         /* If the server is asking us to jog, do that instead of PID */
 812:main.c        ****         if (!PID_Enabled) {                   
 813:main.c        ****             
 814:main.c        ****             /* When we start homing, it looks like a big negative jog.  Setup to watch the index ma
 815:main.c        ****                so we can assert faults if they aren't changing. */                
 816:main.c        ****             if ((Jog != LastJog) && (Jog != 0)) {
 817:main.c        ****                 
 818:main.c        ****                 /* Update the 'last' jog value, so we don't fall into this reset code over and over
 819:main.c        ****                 LastJog = Jog;
 820:main.c        ****                 
 821:main.c        ****                 /* Remember where we started */
 822:main.c        ****                 LastPosition = GetPosition();
 823:main.c        ****                 
 824:main.c        ****                 /* Reset counting of index marks */
 825:main.c        ****                 Index_Counter_1_WriteCounter(0);
 826:main.c        ****             }                
 827:main.c        ****             
 828:main.c        ****             /* Drive in the direction and speed the server told us */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 16


 829:main.c        ****             PWM_Set(PWM_JOG_NEUTRAL + Jog);
 830:main.c        **** 
 831:main.c        ****             /* Watch for stuck signals while we are moving */
 832:main.c        ****             if ( Jog != 0 ) {
 833:main.c        ****             
 834:main.c        ****                 /* If we have moved a good distance away from the origin point, compare index count
 835:main.c        ****                    looking for discrepancy. */
 836:main.c        ****                 Position = GetPosition();
 837:main.c        ****                 DeltaPosition = labs( Position - LastPosition );
 838:main.c        ****                 CurrentIndexCount = Index_Counter_1_ReadCounter();
 839:main.c        ****                 
 840:main.c        ****                 /* Look for index failure: the index counter should have incremented by at least 1 
 841:main.c        ****                    homing is complete */
 842:main.c        ****                 if (homingDone) {
 843:main.c        ****                     if (CurrentIndexCount == 0)
 844:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 845:main.c        ****                             AssertFault(fsIndex);        
 846:main.c        ****                 }
 847:main.c        ****                 
 848:main.c        ****                 /* Look for encoder failure: the encoders should register some amount of movement i
 849:main.c        ****                    but only if homing is totally done */
 850:main.c        ****                 if (homingDone) {
 851:main.c        ****                     if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 852:main.c        ****                         AssertFault(fsEncoder);
 853:main.c        ****                 }
 854:main.c        ****             }
 855:main.c        ****             
 856:main.c        ****         }
 857:main.c        ****         
 858:main.c        ****         /* Handle mode switching */
 859:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 860:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 861:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 862:main.c        ****             PID_SetMode(PID_MANUAL);                
 863:main.c        ****         } else {
 864:main.c        ****             // No mode change happened   
 865:main.c        ****         }
 866:main.c        ****         
 867:main.c        ****         /* Save value for next cycle */
 868:main.c        ****         PID_Was_Enabled = PID_Enabled;
 869:main.c        ****         
 870:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 871:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 872:main.c        ****     
 873:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 874:main.c        ****         
 875:main.c        ****         1) The setpoint will change to 2000.
 876:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 877:main.c        ****         3) Calculate the PID and return.
 878:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 879:main.c        ****         5) Calculate the PID and return.
 880:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 881:main.c        ****         */
 882:main.c        **** 
 883:main.c        ****         if (PID_Enabled) {
 884:main.c        ****             
 885:main.c        ****             if (PID_EffSetDelta == 0) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 17


 886:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 887:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 888:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 889:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 890:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 891:main.c        ****             } else {
 892:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 893:main.c        ****             }
 894:main.c        ****             
 895:main.c        ****             /* ---------------------------------------------------- */
 896:main.c        ****             /* Run the PID algorithm against the effective setpoint */
 897:main.c        ****             
 898:main.c        ****             /* Get most up-to-date current position */
 899:main.c        ****             Position = GetPosition();
 900:main.c        ****             
 901:main.c        ****             /* Compute all the working error variables */
 902:main.c        ****             error = PID_EffectiveSetpoint - Position;
 903:main.c        ****             ITerm += (ki * error);
 904:main.c        ****             
 905:main.c        ****             /* Clip the I term at a max value for just that term (windup guard) */
 906:main.c        ****             if (ITerm > outMax_ITerm) {
 907:main.c        ****                 ITerm = outMax_ITerm;
 908:main.c        ****             } else if (ITerm < -outMax_ITerm) {
 909:main.c        ****                 ITerm = -outMax_ITerm;
 910:main.c        ****             }
 911:main.c        ****             
 912:main.c        ****             /* Calculate the error term */
 913:main.c        ****             dPosition = (Position - LastPosition);
 914:main.c        **** 
 915:main.c        ****             /* Compute PID Output */
 916:main.c        ****             Output = (kp * error) + ITerm - (kd * dPosition);
 917:main.c        ****             
 918:main.c        ****             /* Clip the output */
 919:main.c        ****             if (Output> outMax_Total) {
 920:main.c        ****                 Output = outMax_Total;
 921:main.c        ****             } else if (Output < -outMax_Total) {
 922:main.c        ****                 Output = -outMax_Total;
 923:main.c        ****             }
 924:main.c        **** 
 925:main.c        ****             /* Remember some variables for next time */
 926:main.c        ****             LastPosition = Position;
 927:main.c        ****         
 928:main.c        ****             /* Use the global PWM value to communicate back the percentage of drive to the server *
 929:main.c        ****             PWM = Output;
 930:main.c        ****             
 931:main.c        ****             /* Put the PID drive percentage out on the wire */
 932:main.c        ****             PID_SetDrive(Output);
 933:main.c        ****             
 934:main.c        ****         } else {
 935:main.c        ****             /* If disabled, just return 0 */
 936:main.c        ****             PWM = 0;
 937:main.c        ****         }
 938:main.c        ****         
 939:main.c        ****     }
 940:main.c        ****   
 941:main.c        **** }
 942:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 18


 943:main.c        **** 
 944:main.c        **** /*******************************************************************************
 945:main.c        **** * Function Name: main
 946:main.c        **** ********************************************************************************
 947:main.c        **** * Summary:
 948:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 949:main.c        **** *
 950:main.c        **** * Parameters: None
 951:main.c        **** * Return: NEVER!
 952:main.c        **** *******************************************************************************/
 953:main.c        **** int main(void) {
 954:main.c        ****     
 955:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 956:main.c        ****        microprocessor   There is a race condition here: unless the actuator is on a home
 957:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 958:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 959:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 960:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 961:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 962:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 963:main.c        **** 
 964:main.c        ****     
 965:main.c        ****     /********************************************************************** 
 966:main.c        ****     * Interrupts
 967:main.c        ****     **********************************************************************/
 968:main.c        ****     
 969:main.c        ****     /* BRMS timer interrupt */
 970:main.c        ****     Timer_BRMS_Start();
 971:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 972:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 973:main.c        ****     
 974:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 975:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 976:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 977:main.c        **** 
 978:main.c        ****     /* Encoder interrupt */
 979:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 980:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 981:main.c        ****     
 982:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 983:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 984:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
 985:main.c        **** 
 986:main.c        ****     /* Enable the global interrupt */
 987:main.c        ****     CyGlobalIntEnable;
 988:main.c        ****     
 989:main.c        ****     /********************************************************************** 
 990:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 991:main.c        ****     **********************************************************************/
 992:main.c        **** 
 993:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 994:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 995:main.c        ****        when you hit a breakpoint. */
 996:main.c        **** 
 997:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 998:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 999:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 19


1000:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
1001:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
1002:main.c        **** 	
1003:main.c        **** 	/* Enable WDT counter 1 */
1004:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
1005:main.c        **** 	
1006:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
1007:main.c        **** 	CySysWdtLock();
1008:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
1009:main.c        **** 	CySysWdtUnlock();        
1010:main.c        **** #endif    
1011:main.c        **** 
1012:main.c        ****     
1013:main.c        ****     /*********************************************************************** 
1014:main.c        ****     * Start the various subsystems.
1015:main.c        ****     ***********************************************************************/
1016:main.c        ****     I2C_Start();
1017:main.c        ****     CyDelay(100u);
1018:main.c        ****     SPI_1_Start();
1019:main.c        ****     
1020:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
1021:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
1022:main.c        ****     PWM_1_Start();
1023:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
1024:main.c        ****     PWM_Set(PWM_IDLE);   
1025:main.c        ****     
1026:main.c        ****     /* Default the jog value to neutral (no movement) */
1027:main.c        ****     Jog = 0;
1028:main.c        ****     
1029:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
1030:main.c        ****     homingDone = false;
1031:main.c        ****    
1032:main.c        ****     /* Start counting the quadrature encoding */
1033:main.c        ****     Counter_1_Start();    
1034:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
1035:main.c        ****     LastPosition = ENCODER_MAX;
1036:main.c        ****     
1037:main.c        ****     /* Clear and start the index mark counter */
1038:main.c        ****     Index_Counter_1_Start();
1039:main.c        ****     Index_Counter_1_WriteCounter(0);
1040:main.c        ****      
1041:main.c        ****     /* Start off unconfigured */
1042:main.c        ****     ConfigState = csUnconfig;  
1043:main.c        ****     ConfigSequence = 0;
1044:main.c        ****     ChecksumErrors = 0;
1045:main.c        **** 
1046:main.c        ****     /***********************************************************************
1047:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
1048:main.c        ****     * constantly interrupted by the task scheduler.
1049:main.c        ****     ***********************************************************************/
1050:main.c        ****     while (1) {
1051:main.c        ****         
1052:main.c        ****         CyDelay(1000u); 
1053:main.c        ****         
1054:main.c        ****         
1055:main.c        ****     }
1056:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 20


1057:main.c        ****     
1058:main.c        ****     
1059:main.c        ****     /***********************************************************************
1060:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
1061:main.c        ****     ***********************************************************************/
1062:main.c        ****     return 1;       
1063:main.c        **** }
1064:main.c        **** 
1065:main.c        **** 
1066:main.c        **** /*******************************************************************************
1067:main.c        **** * Function Name: BRMS_Interrupt
1068:main.c        **** ********************************************************************************
1069:main.c        **** * Summary:
1070:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
1071:main.c        **** *
1072:main.c        **** * Parameters: None
1073:main.c        **** * Return: None
1074:main.c        **** *******************************************************************************/
1075:main.c        **** CY_ISR(BRMS_Interrupt) {
1076:main.c        ****     
1077:main.c        ****     static uint32 brmsTask;                 // The BRMS schedule counter
1078:main.c        **** 
1079:main.c        ****     static uint32 brmsRG1Mask = 0b00000001; // Rate group 1 mask
1080:main.c        ****     static uint32 brmsRG2Mask = 0b00000010; // Rate group 2 mask
1081:main.c        ****     static uint32 brmsRG3Mask = 0b00000100; // Rate group 3 mask
1082:main.c        ****     static uint32 brmsRG4Mask = 0b00001000; // Rate group 4 mask
1083:main.c        ****     static uint32 brmsRG5Mask = 0b00010000; // Rate group 5 mask
1084:main.c        ****     
1085:main.c        ****     /* Clears the timer interrupt */
1086:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
1087:main.c        **** 
1088:main.c        ****     /* Use the LED to indicate we are servicing the BRMS interrupt */
1089:main.c        ****     LED_Write(1);
1090:main.c        ****     
1091:main.c        ****     /* 200us has elapsed since last we were called */
1092:main.c        ****     UptimeMicrosecondsAccumulator += 200;
1093:main.c        **** 
1094:main.c        ****     /* When we reach 1M microseconds, a second has passed */
1095:main.c        ****     if (UptimeMicrosecondsAccumulator == 1000000) {
1096:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1097:main.c        ****         UptimeSeconds++;
1098:main.c        ****     }
1099:main.c        **** 
1100:main.c        ****     /* Increment the BRMS task counter infinitely */
1101:main.c        ****     brmsTask++;
1102:main.c        **** 
1103:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
1104:main.c        ****        sequentially until one results in a "true" value.  
1105:main.c        ****     
1106:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1107:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1108:main.c        ****     
1109:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
1110:main.c        ****        value ends in 0bxx10. 
1111:main.c        ****     
1112:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1113:main.c        ****        ends in 0bx100.  
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 21


1114:main.c        ****     
1115:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1116:main.c        ****     
1117:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1118:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1119:main.c        ****        interrupt returns.
1120:main.c        ****     */
1121:main.c        ****     if (brmsTask & brmsRG1Mask) {
1122:main.c        ****         
1123:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1124:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1125:main.c        ****            to a 2.5KHz update rate. */
1126:main.c        ****         runRateGroup1_PID();
1127:main.c        ****         
1128:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1129:main.c        ****         
1130:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1131:main.c        ****         //runRateGroup2_TBD();        
1132:main.c        ****         
1133:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1134:main.c        ****         
1135:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1136:main.c        ****         runRateGroup3_SPI();
1137:main.c        ****         
1138:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1139:main.c        ****      
1140:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1141:main.c        ****         ///runRateGroup4_MotorCurrentRead();
1142:main.c        **** 
1143:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1144:main.c        ****      
1145:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1146:main.c        ****         //runRateGroup5_TBD();
1147:main.c        ****     }
1148:main.c        ****     
1149:main.c        ****     /* At the exit from the BRMS handler, turn off the LED */
1150:main.c        ****     LED_Write(0);
1151:main.c        **** }
1152:main.c        **** 
1153:main.c        **** 
1154:main.c        **** /*******************************************************************************
1155:main.c        **** * Function Name: RSTIsrHandler
1156:main.c        **** ********************************************************************************
1157:main.c        **** * Summary:
1158:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1159:main.c        **** *  Clears a pending Interrupt.
1160:main.c        **** *  Clears a pin Interrupt.
1161:main.c        **** *
1162:main.c        **** * Parameters: None
1163:main.c        **** * Return: None
1164:main.c        **** *******************************************************************************/
1165:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1165 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 22


  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1166:main.c        ****     
1167:main.c        ****     /* Clear pending Interrupt */
1168:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1168 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1169:main.c        ****     
1170:main.c        ****     /* Clear pin Interrupt */
1171:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1171 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1172:main.c        ****     
1173:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1174:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1174 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1175:main.c        ****     
1176:main.c        ****     /* Clear the index counter */
1177:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1177 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1178:main.c        ****     
1179:main.c        ****     /* When we hit the index mark, homing is complete */
1180:main.c        ****     homingDone = true;    
  50              		.loc 1 1180 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1181:main.c        **** }
  54              		.loc 1 1181 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE44:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
  70              	HomeIsrHandler:
  71              	.LFB45:
1182:main.c        **** 
1183:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 23


1184:main.c        **** /*******************************************************************************
1185:main.c        **** * Function Name: HomeIsrHandler
1186:main.c        **** ********************************************************************************
1187:main.c        **** * Summary:
1188:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1189:main.c        **** *  Clears a pending Interrupt.
1190:main.c        **** *  Clears a pin Interrupt.
1191:main.c        **** *
1192:main.c        **** * Parameters: None
1193:main.c        **** * Return: None
1194:main.c        **** *******************************************************************************/
1195:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1195 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1196:main.c        ****     
1197:main.c        ****     /* Clear pending Interrupt */
1198:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1198 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1199:main.c        ****     
1200:main.c        ****     /* Clear pin Interrupt */
1201:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1201 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  85              	.LVL5:
1202:main.c        **** 
1203:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1204:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1204 0
  87 000a 0020     		movs	r0, #0
  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1205:main.c        ****     
1206:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1207:main.c        ****     homingDone = false;
  90              		.loc 1 1207 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1208:main.c        **** }
  94              		.loc 1 1208 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
 100 0018 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE45:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 24


 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB46:
1209:main.c        **** 
1210:main.c        **** 
1211:main.c        **** /*******************************************************************************
1212:main.c        **** * Function Name: SPI_SS_IsrHandler
1213:main.c        **** ********************************************************************************
1214:main.c        **** * Summary:
1215:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1216:main.c        **** *  Clears a pin Interrupt.
1217:main.c        **** *
1218:main.c        **** * Parameters: None
1219:main.c        **** * Return: None
1220:main.c        **** *******************************************************************************/
1221:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1221 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1222:main.c        ****     
1223:main.c        ****     uint32 i;
1224:main.c        ****     
1225:main.c        ****     /* Clear SPI slave select pin Interrupt */
1226:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1226 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
1227:main.c        ****     
1228:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1229:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1229 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1230:main.c        ****         return;
1231:main.c        ****    
1232:main.c        ****     /* Update the last message tick timer */
1233:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1233 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
 132 0014 0E4B     		ldr	r3, .L12+4
 133 0016 1A60     		str	r2, [r3]
1234:main.c        **** 
1235:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 25


1236:main.c        ****        check the messaging state before resetting the buffers */
1237:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1237 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1238:main.c        ****      
1239:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1240:main.c        ****         case txmsClear:
1241:main.c        ****             break;
1242:main.c        ****      
1243:main.c        ****         /* A message was readied for transmission */
1244:main.c        ****         case txmsLoaded:
1245:main.c        ****          
1246:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1247:main.c        ****             
1248:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1249:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1249 0
 140 0020 1E22     		movs	r2, #30
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1250:main.c        **** 
1251:main.c        ****             /* Message from the master is completely clocked in by now */     
1252:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1252 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
 148              	.LVL10:
 149              	.L11:
1253:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1253 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1252:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1252 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1252:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1252 0 is_stmt 0 discriminator 1
 160 0038 1D2C     		cmp	r4, #29
 161 003a F8D9     		bls	.L11
1254:main.c        ****             }
1255:main.c        ****             
1256:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1257:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1257 0 is_stmt 1
 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 164              	.LVL13:
1258:main.c        ****             
1259:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 26


1260:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1260 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1261:main.c        ****             
1262:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1263:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1263 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1264:main.c        ****             break;
1265:main.c        ****             
1266:main.c        ****     } 
1267:main.c        **** }
 174              		.loc 1 1267 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE46:
 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 288:main.c        ****  
 196              		.loc 1 288 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
 290:main.c        ****      
 202              		.loc 1 290 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 294:main.c        ****             break;        
 205              		.loc 1 294 0
 206 0004 0022     		movs	r2, #0
 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 295:main.c        ****         
 209              		.loc 1 295 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 27


 210 000a 03E0     		b	.L14
 211              	.L18:
 299:main.c        ****             break;        
 212              		.loc 1 299 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 302:main.c        **** 
 219              		.loc 1 302 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 315:main.c        ****  
 237              		.loc 1 315 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
 317:main.c        ****      
 243              		.loc 1 317 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 321:main.c        ****             break;        
 246              		.loc 1 321 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 322:main.c        ****         
 250              		.loc 1 322 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 326:main.c        ****             break;        
 253              		.loc 1 326 0
 254 000c 024A     		ldr	r2, .L26
 255 000e 1378     		ldrb	r3, [r2]
 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 329:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 28


 259              		.loc 1 329 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.global	__aeabi_f2iz
 270              		.section	.text.runRateGroup4_MotorCurrentRead,"ax",%progbits
 271              		.align	2
 272              		.global	runRateGroup4_MotorCurrentRead
 273              		.code	16
 274              		.thumb_func
 275              		.type	runRateGroup4_MotorCurrentRead, %function
 276              	runRateGroup4_MotorCurrentRead:
 277              	.LFB34:
 341:main.c        ****     
 278              		.loc 1 341 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 346:main.c        ****         /* Start I2C for Current Monitor */
 286              		.loc 1 346 0
 287 0002 0A4B     		ldr	r3, .L30
 288 0004 1B7A     		ldrb	r3, [r3, #8]
 289 0006 002B     		cmp	r3, #0
 290 0008 07D1     		bne	.L29
 348:main.c        ****         Init_INA(INA219_I2C_ADDR);
 291              		.loc 1 348 0
 292 000a FFF7FEFF 		bl	I2C_Start
 293              	.LVL19:
 349:main.c        ****         
 294              		.loc 1 349 0
 295 000e 4020     		movs	r0, #64
 296 0010 FFF7FEFF 		bl	Init_INA
 297              	.LVL20:
 351:main.c        ****     }
 298              		.loc 1 351 0
 299 0014 0122     		movs	r2, #1
 300 0016 054B     		ldr	r3, .L30
 301 0018 1A72     		strb	r2, [r3, #8]
 302              	.L29:
 354:main.c        ****             
 303              		.loc 1 354 0
 304 001a 4020     		movs	r0, #64
 305 001c FFF7FEFF 		bl	getCurrent_mA
 306              	.LVL21:
 356:main.c        ****     //AssertFault(fsCurrentRead);
 307              		.loc 1 356 0
 308 0020 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 29


 309              	.LVL22:
 310 0024 00B2     		sxth	r0, r0
 311 0026 024B     		ldr	r3, .L30+4
 312 0028 1880     		strh	r0, [r3]
 362:main.c        **** 
 313              		.loc 1 362 0
 314              		@ sp needed
 315 002a 10BD     		pop	{r4, pc}
 316              	.L31:
 317              		.align	2
 318              	.L30:
 319 002c 00000000 		.word	.LANCHOR1
 320 0030 00000000 		.word	Current
 321              		.cfi_endproc
 322              	.LFE34:
 323              		.size	runRateGroup4_MotorCurrentRead, .-runRateGroup4_MotorCurrentRead
 324              		.global	__aeabi_fcmpgt
 325              		.global	__aeabi_fcmplt
 326              		.global	__aeabi_fmul
 327              		.global	__aeabi_f2uiz
 328              		.section	.text.PWM_Set,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_Set
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_Set, %function
 334              	PWM_Set:
 335              	.LFB36:
 560:main.c        ****     
 336              		.loc 1 560 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL23:
 341 0000 70B5     		push	{r4, r5, r6, lr}
 342              		.cfi_def_cfa_offset 16
 343              		.cfi_offset 4, -16
 344              		.cfi_offset 5, -12
 345              		.cfi_offset 6, -8
 346              		.cfi_offset 14, -4
 347 0002 051C     		adds	r5, r0, #0
 348              	.LVL24:
 565:main.c        ****         drive = pwmMax;
 349              		.loc 1 565 0
 350 0004 0C4B     		ldr	r3, .L34
 351 0006 1C68     		ldr	r4, [r3]
 352 0008 211C     		adds	r1, r4, #0
 353 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 354              	.LVL25:
 355 000e 0028     		cmp	r0, #0
 356 0010 08D1     		bne	.L33
 567:main.c        ****         drive = pwmMin;
 357              		.loc 1 567 0
 358 0012 0A4B     		ldr	r3, .L34+4
 359 0014 1C68     		ldr	r4, [r3]
 360 0016 211C     		adds	r1, r4, #0
 361 0018 281C     		adds	r0, r5, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 30


 362 001a FFF7FEFF 		bl	__aeabi_fcmplt
 363              	.LVL26:
 364 001e 0028     		cmp	r0, #0
 365 0020 00D1     		bne	.L33
 562:main.c        ****     
 366              		.loc 1 562 0
 367 0022 2C1C     		adds	r4, r5, #0
 368              	.L33:
 369              	.LVL27:
 571:main.c        **** }
 370              		.loc 1 571 0
 371 0024 8321     		movs	r1, #131
 372 0026 C905     		lsls	r1, r1, #23
 373 0028 201C     		adds	r0, r4, #0
 374 002a FFF7FEFF 		bl	__aeabi_fmul
 375              	.LVL28:
 376 002e FFF7FEFF 		bl	__aeabi_f2uiz
 377              	.LVL29:
 378 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
 379              	.LVL30:
 572:main.c        **** 
 380              		.loc 1 572 0
 381              		@ sp needed
 382              	.LVL31:
 383              	.LVL32:
 384 0036 70BD     		pop	{r4, r5, r6, pc}
 385              	.L35:
 386              		.align	2
 387              	.L34:
 388 0038 00000000 		.word	pwmMax
 389 003c 00000000 		.word	pwmMin
 390              		.cfi_endproc
 391              	.LFE36:
 392              		.size	PWM_Set, .-PWM_Set
 393              		.section	.text.GetPosition,"ax",%progbits
 394              		.align	2
 395              		.global	GetPosition
 396              		.code	16
 397              		.thumb_func
 398              		.type	GetPosition, %function
 399              	GetPosition:
 400              	.LFB37:
 584:main.c        ****     
 401              		.loc 1 584 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405 0000 10B5     		push	{r4, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 4, -8
 408              		.cfi_offset 14, -4
 590:main.c        ****     
 409              		.loc 1 590 0
 410 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 411              	.LVL33:
 412 0006 0B4B     		ldr	r3, .L39
 413 0008 D860     		str	r0, [r3, #12]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 31


 594:main.c        ****         
 414              		.loc 1 594 0
 415 000a DA68     		ldr	r2, [r3, #12]
 416 000c 0A4B     		ldr	r3, .L39+4
 417 000e 9A42     		cmp	r2, r3
 418 0010 06D9     		bls	.L37
 596:main.c        ****         
 419              		.loc 1 596 0
 420 0012 084A     		ldr	r2, .L39
 421 0014 D368     		ldr	r3, [r2, #12]
 422 0016 0949     		ldr	r1, .L39+8
 423 0018 8C46     		mov	ip, r1
 424 001a 6344     		add	r3, r3, ip
 425 001c 1361     		str	r3, [r2, #16]
 426 001e 02E0     		b	.L38
 427              	.L37:
 601:main.c        ****     }
 428              		.loc 1 601 0
 429 0020 044B     		ldr	r3, .L39
 430 0022 DA68     		ldr	r2, [r3, #12]
 431 0024 1A61     		str	r2, [r3, #16]
 432              	.L38:
 605:main.c        ****     return result;
 433              		.loc 1 605 0
 434 0026 034B     		ldr	r3, .L39
 435 0028 1969     		ldr	r1, [r3, #16]
 436 002a 054A     		ldr	r2, .L39+12
 437 002c 1160     		str	r1, [r2]
 606:main.c        **** }
 438              		.loc 1 606 0
 439 002e 1869     		ldr	r0, [r3, #16]
 607:main.c        **** 
 440              		.loc 1 607 0
 441              		@ sp needed
 442 0030 10BD     		pop	{r4, pc}
 443              	.L40:
 444 0032 C046     		.align	2
 445              	.L39:
 446 0034 00000000 		.word	.LANCHOR1
 447 0038 FFFFEF00 		.word	15728639
 448 003c 010000FF 		.word	-16777215
 449 0040 00000000 		.word	Position
 450              		.cfi_endproc
 451              	.LFE37:
 452              		.size	GetPosition, .-GetPosition
 453              		.global	__aeabi_ui2f
 454              		.global	__aeabi_fdiv
 455              		.global	__aeabi_fadd
 456              		.global	__aeabi_fsub
 457              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 458              		.align	2
 459              		.global	runRateGroup3_SPI
 460              		.code	16
 461              		.thumb_func
 462              		.type	runRateGroup3_SPI, %function
 463              	runRateGroup3_SPI:
 464              	.LFB35:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 32


 374:main.c        ****  
 465              		.loc 1 374 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 10B5     		push	{r4, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 14, -4
 384:main.c        ****         return;
 473              		.loc 1 384 0
 474 0002 994B     		ldr	r3, .L60
 475 0004 1B68     		ldr	r3, [r3]
 476 0006 DB07     		lsls	r3, r3, #31
 477 0008 00D5     		bpl	.LCB373
 478 000a 2CE1     		b	.L41	@long jump
 479              	.LCB373:
 388:main.c        ****      
 480              		.loc 1 388 0
 481 000c 974B     		ldr	r3, .L60+4
 482 000e 1B78     		ldrb	r3, [r3]
 483 0010 002B     		cmp	r3, #0
 484 0012 00D0     		beq	.LCB378
 485 0014 27E1     		b	.L41	@long jump
 486              	.LCB378:
 394:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 487              		.loc 1 394 0
 488 0016 964B     		ldr	r3, .L60+8
 489 0018 5878     		ldrb	r0, [r3, #1]
 490              	.LVL34:
 395:main.c        ****             
 491              		.loc 1 395 0
 492 001a 9C78     		ldrb	r4, [r3, #2]
 493              	.LVL35:
 398:main.c        ****                 size = sizeof(txMessage.buf);                            
 494              		.loc 1 398 0
 495 001c 1E28     		cmp	r0, #30
 496 001e 00D9     		bls	.L44
 399:main.c        ****         
 497              		.loc 1 399 0
 498 0020 1E20     		movs	r0, #30
 499              	.LVL36:
 500              	.L44:
 402:main.c        ****                 checksum += rxMessage.buf[i]; 
 501              		.loc 1 402 0
 502 0022 0022     		movs	r2, #0
 503 0024 0023     		movs	r3, #0
 504 0026 05E0     		b	.L45
 505              	.LVL37:
 506              	.L46:
 403:main.c        **** 
 507              		.loc 1 403 0 discriminator 3
 508 0028 9149     		ldr	r1, .L60+8
 509 002a C95C     		ldrb	r1, [r1, r3]
 510 002c 5218     		adds	r2, r2, r1
 511              	.LVL38:
 512 002e D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 33


 513              	.LVL39:
 402:main.c        ****                 checksum += rxMessage.buf[i]; 
 514              		.loc 1 402 0 discriminator 3
 515 0030 0133     		adds	r3, r3, #1
 516              	.LVL40:
 517 0032 DBB2     		uxtb	r3, r3
 518              	.LVL41:
 519              	.L45:
 402:main.c        ****                 checksum += rxMessage.buf[i]; 
 520              		.loc 1 402 0 is_stmt 0 discriminator 1
 521 0034 9842     		cmp	r0, r3
 522 0036 F7D8     		bhi	.L46
 406:main.c        ****                 
 523              		.loc 1 406 0 is_stmt 1
 524 0038 002A     		cmp	r2, #0
 525 003a 09D0     		beq	.L47
 408:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 526              		.loc 1 408 0
 527 003c 8D4B     		ldr	r3, .L60+12
 528              	.LVL42:
 529 003e 5C71     		strb	r4, [r3, #5]
 409:main.c        ****                 ChecksumErrors++;
 530              		.loc 1 409 0
 531 0040 1522     		movs	r2, #21
 532              	.LVL43:
 533 0042 1A71     		strb	r2, [r3, #4]
 410:main.c        ****                 
 534              		.loc 1 410 0
 535 0044 8C4A     		ldr	r2, .L60+16
 536 0046 1388     		ldrh	r3, [r2]
 537 0048 0133     		adds	r3, r3, #1
 538 004a 9BB2     		uxth	r3, r3
 539 004c 1380     		strh	r3, [r2]
 540 004e BBE0     		b	.L48
 541              	.LVL44:
 542              	.L47:
 416:main.c        ****                 
 543              		.loc 1 416 0
 544 0050 631E     		subs	r3, r4, #1
 545              	.LVL45:
 546 0052 DBB2     		uxtb	r3, r3
 547 0054 022B     		cmp	r3, #2
 548 0056 00D9     		bls	.LCB444
 549 0058 B6E0     		b	.L48	@long jump
 550              	.LCB444:
 418:main.c        ****                     
 551              		.loc 1 418 0
 552 005a 022C     		cmp	r4, #2
 553 005c 65D0     		beq	.L49
 554 005e 032C     		cmp	r4, #3
 555 0060 00D1     		bne	.LCB448
 556 0062 95E0     		b	.L50	@long jump
 557              	.LCB448:
 558 0064 012C     		cmp	r4, #1
 559 0066 00D0     		beq	.LCB450
 560 0068 AEE0     		b	.L48	@long jump
 561              	.LCB450:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 34


 424:main.c        ****                             ki = rxMessage.config.Ki;
 562              		.loc 1 424 0
 563 006a 814B     		ldr	r3, .L60+8
 564 006c 1A79     		ldrb	r2, [r3, #4]
 565              	.LVL46:
 566 006e 5979     		ldrb	r1, [r3, #5]
 567 0070 0902     		lsls	r1, r1, #8
 568 0072 1143     		orrs	r1, r2
 569 0074 9A79     		ldrb	r2, [r3, #6]
 570 0076 1204     		lsls	r2, r2, #16
 571 0078 0A43     		orrs	r2, r1
 572 007a 1100     		movs	r1, r2
 573 007c DA79     		ldrb	r2, [r3, #7]
 574 007e 1206     		lsls	r2, r2, #24
 575 0080 0A43     		orrs	r2, r1
 576 0082 7E49     		ldr	r1, .L60+20
 577 0084 0A60     		str	r2, [r1]
 425:main.c        ****                             kd = rxMessage.config.Kd;      
 578              		.loc 1 425 0
 579 0086 1A7A     		ldrb	r2, [r3, #8]
 580 0088 597A     		ldrb	r1, [r3, #9]
 581 008a 0902     		lsls	r1, r1, #8
 582 008c 1143     		orrs	r1, r2
 583 008e 9A7A     		ldrb	r2, [r3, #10]
 584 0090 1204     		lsls	r2, r2, #16
 585 0092 0A43     		orrs	r2, r1
 586 0094 1100     		movs	r1, r2
 587 0096 DA7A     		ldrb	r2, [r3, #11]
 588 0098 1206     		lsls	r2, r2, #24
 589 009a 0A43     		orrs	r2, r1
 590 009c 7849     		ldr	r1, .L60+24
 591 009e 0A60     		str	r2, [r1]
 426:main.c        ****                         
 592              		.loc 1 426 0
 593 00a0 1A7B     		ldrb	r2, [r3, #12]
 594 00a2 597B     		ldrb	r1, [r3, #13]
 595 00a4 0902     		lsls	r1, r1, #8
 596 00a6 1143     		orrs	r1, r2
 597 00a8 9A7B     		ldrb	r2, [r3, #14]
 598 00aa 1204     		lsls	r2, r2, #16
 599 00ac 0A43     		orrs	r2, r1
 600 00ae 1100     		movs	r1, r2
 601 00b0 DA7B     		ldrb	r2, [r3, #15]
 602 00b2 1206     		lsls	r2, r2, #24
 603 00b4 0A43     		orrs	r2, r1
 604 00b6 7349     		ldr	r1, .L60+28
 605 00b8 0A60     		str	r2, [r1]
 429:main.c        ****                                
 606              		.loc 1 429 0
 607 00ba 997C     		ldrb	r1, [r3, #18]
 608 00bc 724A     		ldr	r2, .L60+32
 609 00be 1170     		strb	r1, [r2]
 432:main.c        ****                         
 610              		.loc 1 432 0
 611 00c0 0021     		movs	r1, #0
 612 00c2 724A     		ldr	r2, .L60+36
 613 00c4 1170     		strb	r1, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 35


 435:main.c        ****                             if (limit > 100)
 614              		.loc 1 435 0
 615 00c6 187C     		ldrb	r0, [r3, #16]
 616              	.LVL47:
 436:main.c        ****                                 limit = 100;
 617              		.loc 1 436 0
 618 00c8 6428     		cmp	r0, #100
 619 00ca 00D9     		bls	.L52
 437:main.c        ****                         
 620              		.loc 1 437 0
 621 00cc 6420     		movs	r0, #100
 622              	.LVL48:
 623              	.L52:
 439:main.c        ****                             
 624              		.loc 1 439 0
 625 00ce FFF7FEFF 		bl	__aeabi_ui2f
 626              	.LVL49:
 627 00d2 041C     		adds	r4, r0, #0
 628              	.LVL50:
 629 00d4 6E4B     		ldr	r3, .L60+40
 630 00d6 1860     		str	r0, [r3]
 441:main.c        ****                             if (limit > 100)
 631              		.loc 1 441 0
 632 00d8 654B     		ldr	r3, .L60+8
 633 00da 587C     		ldrb	r0, [r3, #17]
 634              	.LVL51:
 442:main.c        ****                                 limit = 100;
 635              		.loc 1 442 0
 636 00dc 6428     		cmp	r0, #100
 637 00de 00D9     		bls	.L53
 443:main.c        ****                             
 638              		.loc 1 443 0
 639 00e0 6420     		movs	r0, #100
 640              	.LVL52:
 641              	.L53:
 445:main.c        ****                             
 642              		.loc 1 445 0
 643 00e2 FFF7FEFF 		bl	__aeabi_ui2f
 644              	.LVL53:
 645 00e6 6B4B     		ldr	r3, .L60+44
 646 00e8 1860     		str	r0, [r3]
 453:main.c        ****                             pwmMax = 50 + pwmLimit;
 647              		.loc 1 453 0
 648 00ea 6B49     		ldr	r1, .L60+48
 649 00ec 201C     		adds	r0, r4, #0
 650 00ee FFF7FEFF 		bl	__aeabi_fdiv
 651              	.LVL54:
 652 00f2 6A49     		ldr	r1, .L60+52
 653 00f4 FFF7FEFF 		bl	__aeabi_fmul
 654              	.LVL55:
 655 00f8 041C     		adds	r4, r0, #0
 656 00fa 694B     		ldr	r3, .L60+56
 657 00fc 1860     		str	r0, [r3]
 454:main.c        ****                             pwmMin = 50 - pwmLimit;
 658              		.loc 1 454 0
 659 00fe 6749     		ldr	r1, .L60+52
 660 0100 FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 36


 661              	.LVL56:
 662 0104 674B     		ldr	r3, .L60+60
 663 0106 1860     		str	r0, [r3]
 455:main.c        ****                         
 664              		.loc 1 455 0
 665 0108 211C     		adds	r1, r4, #0
 666 010a 6448     		ldr	r0, .L60+52
 667 010c FFF7FEFF 		bl	__aeabi_fsub
 668              	.LVL57:
 669 0110 654B     		ldr	r3, .L60+64
 670 0112 1860     		str	r0, [r3]
 458:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 671              		.loc 1 458 0
 672 0114 0222     		movs	r2, #2
 673 0116 654B     		ldr	r3, .L60+68
 674 0118 1A70     		strb	r2, [r3]
 459:main.c        ****                         
 675              		.loc 1 459 0
 676 011a 554B     		ldr	r3, .L60+8
 677 011c DA78     		ldrb	r2, [r3, #3]
 678 011e 644B     		ldr	r3, .L60+72
 679 0120 1A70     		strb	r2, [r3]
 462:main.c        ****                             break;
 680              		.loc 1 462 0
 681 0122 0020     		movs	r0, #0
 682 0124 FFF7FEFF 		bl	ClearFault
 683              	.LVL58:
 463:main.c        **** 
 684              		.loc 1 463 0
 685 0128 4EE0     		b	.L48
 686              	.LVL59:
 687              	.L49:
 467:main.c        ****                             
 688              		.loc 1 467 0
 689 012a 5148     		ldr	r0, .L60+8
 690              	.LVL60:
 691 012c C378     		ldrb	r3, [r0, #3]
 692 012e 5A1E     		subs	r2, r3, #1
 693 0130 9341     		sbcs	r3, r3, r2
 694              	.LVL61:
 695 0132 604A     		ldr	r2, .L60+76
 696 0134 1370     		strb	r3, [r2]
 470:main.c        ****                                 
 697              		.loc 1 470 0
 698 0136 0379     		ldrb	r3, [r0, #4]
 699 0138 4279     		ldrb	r2, [r0, #5]
 700 013a 1202     		lsls	r2, r2, #8
 701 013c 1A43     		orrs	r2, r3
 702 013e 8379     		ldrb	r3, [r0, #6]
 703 0140 1B04     		lsls	r3, r3, #16
 704 0142 1343     		orrs	r3, r2
 705 0144 1A00     		movs	r2, r3
 706 0146 C379     		ldrb	r3, [r0, #7]
 707 0148 1B06     		lsls	r3, r3, #24
 708 014a 1343     		orrs	r3, r2
 709 014c 5A4A     		ldr	r2, .L60+80
 710 014e 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 37


 711 0150 9342     		cmp	r3, r2
 712 0152 17D0     		beq	.L54
 473:main.c        ****                                 
 713              		.loc 1 473 0
 714 0154 FFF7FEFF 		bl	GetPosition
 715              	.LVL62:
 716 0158 584C     		ldr	r4, .L60+84
 717              	.LVL63:
 718 015a 2060     		str	r0, [r4]
 476:main.c        ****                                 
 719              		.loc 1 476 0
 720 015c 4448     		ldr	r0, .L60+8
 721 015e 0379     		ldrb	r3, [r0, #4]
 722 0160 4279     		ldrb	r2, [r0, #5]
 723 0162 1202     		lsls	r2, r2, #8
 724 0164 1A43     		orrs	r2, r3
 725 0166 8379     		ldrb	r3, [r0, #6]
 726 0168 1B04     		lsls	r3, r3, #16
 727 016a 1343     		orrs	r3, r2
 728 016c 1A00     		movs	r2, r3
 729 016e C379     		ldrb	r3, [r0, #7]
 730 0170 1B06     		lsls	r3, r3, #24
 731 0172 1343     		orrs	r3, r2
 732 0174 504A     		ldr	r2, .L60+80
 733 0176 1360     		str	r3, [r2]
 480:main.c        ****                                 
 734              		.loc 1 480 0
 735 0178 2268     		ldr	r2, [r4]
 736 017a 514B     		ldr	r3, .L60+88
 737 017c 1A60     		str	r2, [r3]
 483:main.c        ****                             }                                        
 738              		.loc 1 483 0
 739 017e 0020     		movs	r0, #0
 740 0180 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 741              	.LVL64:
 742              	.L54:
 487:main.c        ****                             break;
 743              		.loc 1 487 0
 744 0184 3A4B     		ldr	r3, .L60+8
 745 0186 0822     		movs	r2, #8
 746 0188 9A56     		ldrsb	r2, [r3, r2]
 747 018a 404B     		ldr	r3, .L60+36
 748 018c 1A70     		strb	r2, [r3]
 488:main.c        ****                         
 749              		.loc 1 488 0
 750 018e 1BE0     		b	.L48
 751              	.LVL65:
 752              	.L50:
 492:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 753              		.loc 1 492 0
 754 0190 374C     		ldr	r4, .L60+8
 755              	.LVL66:
 756 0192 2179     		ldrb	r1, [r4, #4]
 757 0194 6379     		ldrb	r3, [r4, #5]
 758 0196 1B02     		lsls	r3, r3, #8
 759 0198 0B43     		orrs	r3, r1
 760 019a 1A00     		movs	r2, r3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 38


 761              	.LVL67:
 762 019c A079     		ldrb	r0, [r4, #6]
 763              	.LVL68:
 764 019e 0004     		lsls	r0, r0, #16
 765 01a0 0300     		movs	r3, r0
 766 01a2 1343     		orrs	r3, r2
 767 01a4 E079     		ldrb	r0, [r4, #7]
 768 01a6 0006     		lsls	r0, r0, #24
 769 01a8 1843     		orrs	r0, r3
 770 01aa FFF7FEFF 		bl	Counter_1_WriteCounter
 771              	.LVL69:
 493:main.c        ****                             break;                                        
 772              		.loc 1 493 0
 773 01ae 2379     		ldrb	r3, [r4, #4]
 774 01b0 6279     		ldrb	r2, [r4, #5]
 775 01b2 1202     		lsls	r2, r2, #8
 776 01b4 1A43     		orrs	r2, r3
 777 01b6 A379     		ldrb	r3, [r4, #6]
 778 01b8 1B04     		lsls	r3, r3, #16
 779 01ba 1343     		orrs	r3, r2
 780 01bc 1A00     		movs	r2, r3
 781 01be E379     		ldrb	r3, [r4, #7]
 782 01c0 1B06     		lsls	r3, r3, #24
 783 01c2 1343     		orrs	r3, r2
 784 01c4 3D4A     		ldr	r2, .L60+84
 785 01c6 1360     		str	r3, [r2]
 786              	.L48:
 504:main.c        ****             
 787              		.loc 1 504 0
 788 01c8 FFF7FEFF 		bl	GetPosition
 789              	.LVL70:
 790 01cc 3D49     		ldr	r1, .L60+92
 791 01ce 0860     		str	r0, [r1]
 507:main.c        ****             txMessage.msg.version0 = FIRMWARE_REV_0;
 792              		.loc 1 507 0
 793 01d0 284B     		ldr	r3, .L60+12
 794 01d2 0022     		movs	r2, #0
 795 01d4 1A70     		strb	r2, [r3]
 508:main.c        ****             txMessage.msg.version1 = FIRMWARE_REV_1;
 796              		.loc 1 508 0
 797 01d6 5A70     		strb	r2, [r3, #1]
 509:main.c        ****             txMessage.msg.version2 = FIRMWARE_REV_2;
 798              		.loc 1 509 0
 799 01d8 0120     		movs	r0, #1
 800 01da 9870     		strb	r0, [r3, #2]
 510:main.c        ****             txMessage.msg.size     = sizeof(txMessage_t);
 801              		.loc 1 510 0
 802 01dc DA70     		strb	r2, [r3, #3]
 511:main.c        ****             txMessage.msg.opcode   = opStatus;
 803              		.loc 1 511 0
 804 01de 1532     		adds	r2, r2, #21
 805 01e0 1A71     		strb	r2, [r3, #4]
 512:main.c        ****             txMessage.msg.state    = (uint8) ConfigState;
 806              		.loc 1 512 0
 807 01e2 133A     		subs	r2, r2, #19
 808 01e4 5A71     		strb	r2, [r3, #5]
 513:main.c        ****             txMessage.msg.fault    = (uint8) FaultState;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 39


 809              		.loc 1 513 0
 810 01e6 314A     		ldr	r2, .L60+68
 811 01e8 1278     		ldrb	r2, [r2]
 812 01ea 9A71     		strb	r2, [r3, #6]
 514:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 813              		.loc 1 514 0
 814 01ec 364A     		ldr	r2, .L60+96
 815 01ee 1278     		ldrb	r2, [r2]
 816 01f0 DA71     		strb	r2, [r3, #7]
 515:main.c        ****             txMessage.msg.sequence = ConfigSequence;
 817              		.loc 1 515 0
 818 01f2 214A     		ldr	r2, .L60+16
 819 01f4 1288     		ldrh	r2, [r2]
 820 01f6 92B2     		uxth	r2, r2
 821 01f8 5A72     		strb	r2, [r3, #9]
 822 01fa 120A     		lsrs	r2, r2, #8
 823 01fc 9A72     		strb	r2, [r3, #10]
 516:main.c        ****             txMessage.msg.position = Position;
 824              		.loc 1 516 0
 825 01fe 2C4A     		ldr	r2, .L60+72
 826 0200 1278     		ldrb	r2, [r2]
 827 0202 1A72     		strb	r2, [r3, #8]
 517:main.c        ****             txMessage.msg.pwm      = PWM;
 828              		.loc 1 517 0
 829 0204 0A68     		ldr	r2, [r1]
 830 0206 5A73     		strb	r2, [r3, #13]
 831 0208 100A     		lsrs	r0, r2, #8
 832 020a 9873     		strb	r0, [r3, #14]
 833 020c 100C     		lsrs	r0, r2, #16
 834 020e D873     		strb	r0, [r3, #15]
 835 0210 120E     		lsrs	r2, r2, #24
 836 0212 1A74     		strb	r2, [r3, #16]
 518:main.c        ****             txMessage.msg.current  = Current;                            
 837              		.loc 1 518 0
 838 0214 2D4A     		ldr	r2, .L60+100
 839 0216 1268     		ldr	r2, [r2]
 840 0218 5A74     		strb	r2, [r3, #17]
 841 021a 100A     		lsrs	r0, r2, #8
 842 021c 9874     		strb	r0, [r3, #18]
 843 021e 100C     		lsrs	r0, r2, #16
 844 0220 D874     		strb	r0, [r3, #19]
 845 0222 120E     		lsrs	r2, r2, #24
 846 0224 1A75     		strb	r2, [r3, #20]
 519:main.c        ****             
 847              		.loc 1 519 0
 848 0226 2A4A     		ldr	r2, .L60+104
 849 0228 1288     		ldrh	r2, [r2]
 850 022a DA72     		strb	r2, [r3, #11]
 851 022c 120A     		lsrs	r2, r2, #8
 852 022e 1A73     		strb	r2, [r3, #12]
 853              	.LVL71:
 522:main.c        ****                 checksum += txMessage.buf[i]; 
 854              		.loc 1 522 0
 855 0230 0022     		movs	r2, #0
 856 0232 0023     		movs	r3, #0
 857 0234 05E0     		b	.L55
 858              	.LVL72:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 40


 859              	.L56:
 523:main.c        ****                 
 860              		.loc 1 523 0 discriminator 3
 861 0236 0F49     		ldr	r1, .L60+12
 862 0238 C95C     		ldrb	r1, [r1, r3]
 863 023a 5218     		adds	r2, r2, r1
 864              	.LVL73:
 865 023c D2B2     		uxtb	r2, r2
 866              	.LVL74:
 522:main.c        ****                 checksum += txMessage.buf[i]; 
 867              		.loc 1 522 0 discriminator 3
 868 023e 0133     		adds	r3, r3, #1
 869              	.LVL75:
 870 0240 DBB2     		uxtb	r3, r3
 871              	.LVL76:
 872              	.L55:
 522:main.c        ****                 checksum += txMessage.buf[i]; 
 873              		.loc 1 522 0 is_stmt 0 discriminator 1
 874 0242 142B     		cmp	r3, #20
 875 0244 F7D9     		bls	.L56
 526:main.c        ****                 
 876              		.loc 1 526 0 is_stmt 1
 877 0246 0B48     		ldr	r0, .L60+12
 878 0248 5242     		rsbs	r2, r2, #0
 879              	.LVL77:
 880 024a 0270     		strb	r2, [r0]
 530:main.c        **** 
 881              		.loc 1 530 0
 882 024c 1E21     		movs	r1, #30
 883 024e FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 884              	.LVL78:
 533:main.c        ****             
 885              		.loc 1 533 0
 886 0252 0122     		movs	r2, #1
 887 0254 054B     		ldr	r3, .L60+4
 888 0256 1A70     		strb	r2, [r3]
 536:main.c        ****                 ClearFault(fsNONE);
 889              		.loc 1 536 0
 890 0258 054B     		ldr	r3, .L60+8
 891 025a 5B7A     		ldrb	r3, [r3, #9]
 892 025c 002B     		cmp	r3, #0
 893 025e 02D0     		beq	.L41
 537:main.c        ****         
 894              		.loc 1 537 0
 895 0260 0020     		movs	r0, #0
 896 0262 FFF7FEFF 		bl	ClearFault
 897              	.LVL79:
 898              	.L41:
 547:main.c        ****     
 899              		.loc 1 547 0
 900              		@ sp needed
 901 0266 10BD     		pop	{r4, pc}
 902              	.L61:
 903              		.align	2
 904              	.L60:
 905 0268 24000740 		.word	1074200612
 906 026c 00000000 		.word	txMessageState
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 41


 907 0270 00000000 		.word	rxMessage
 908 0274 00000000 		.word	txMessage
 909 0278 00000000 		.word	ChecksumErrors
 910 027c 00000000 		.word	kp
 911 0280 00000000 		.word	ki
 912 0284 00000000 		.word	kd
 913 0288 00000000 		.word	PID_EffSetDelta
 914 028c 00000000 		.word	Jog
 915 0290 00000000 		.word	outMax_Total
 916 0294 00000000 		.word	outMax_ITerm
 917 0298 0000C842 		.word	1120403456
 918 029c 00004842 		.word	1112014848
 919 02a0 00000000 		.word	pwmLimit
 920 02a4 00000000 		.word	pwmMax
 921 02a8 00000000 		.word	pwmMin
 922 02ac 00000000 		.word	ConfigState
 923 02b0 00000000 		.word	ConfigSequence
 924 02b4 00000000 		.word	PID_Enabled
 925 02b8 00000000 		.word	PID_Setpoint
 926 02bc 00000000 		.word	LastPosition
 927 02c0 00000000 		.word	PID_EffectiveSetpoint
 928 02c4 00000000 		.word	Position
 929 02c8 00000000 		.word	FaultState
 930 02cc 00000000 		.word	PWM
 931 02d0 00000000 		.word	Current
 932              		.cfi_endproc
 933              	.LFE35:
 934              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 935              		.section	.text.PID_Initialize,"ax",%progbits
 936              		.align	2
 937              		.global	PID_Initialize
 938              		.code	16
 939              		.thumb_func
 940              		.type	PID_Initialize, %function
 941              	PID_Initialize:
 942              	.LFB38:
 619:main.c        ****     
 943              		.loc 1 619 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947 0000 10B5     		push	{r4, lr}
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 4, -8
 950              		.cfi_offset 14, -4
 622:main.c        ****     LastPosition = Position;
 951              		.loc 1 622 0
 952 0002 FFF7FEFF 		bl	GetPosition
 953              	.LVL80:
 954 0006 064B     		ldr	r3, .L63
 955 0008 1860     		str	r0, [r3]
 623:main.c        ****     
 956              		.loc 1 623 0
 957 000a 1A68     		ldr	r2, [r3]
 958 000c 054B     		ldr	r3, .L63+4
 959 000e 1A60     		str	r2, [r3]
 627:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 42


 960              		.loc 1 627 0
 961 0010 1A68     		ldr	r2, [r3]
 962 0012 054B     		ldr	r3, .L63+8
 963 0014 1A60     		str	r2, [r3]
 631:main.c        **** }    
 964              		.loc 1 631 0
 965 0016 0022     		movs	r2, #0
 966 0018 044B     		ldr	r3, .L63+12
 967 001a 1A60     		str	r2, [r3]
 632:main.c        **** 
 968              		.loc 1 632 0
 969              		@ sp needed
 970 001c 10BD     		pop	{r4, pc}
 971              	.L64:
 972 001e C046     		.align	2
 973              	.L63:
 974 0020 00000000 		.word	Position
 975 0024 00000000 		.word	LastPosition
 976 0028 00000000 		.word	PID_EffectiveSetpoint
 977 002c 00000000 		.word	ITerm
 978              		.cfi_endproc
 979              	.LFE38:
 980              		.size	PID_Initialize, .-PID_Initialize
 981              		.section	.text.PID_SetMode,"ax",%progbits
 982              		.align	2
 983              		.global	PID_SetMode
 984              		.code	16
 985              		.thumb_func
 986              		.type	PID_SetMode, %function
 987              	PID_SetMode:
 988              	.LFB39:
 695:main.c        ****     
 989              		.loc 1 695 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              	.LVL81:
 994 0000 10B5     		push	{r4, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 4, -8
 997              		.cfi_offset 14, -4
 697:main.c        ****     
 998              		.loc 1 697 0
 999 0002 441E     		subs	r4, r0, #1
 1000 0004 6342     		rsbs	r3, r4, #0
 1001 0006 5C41     		adcs	r4, r4, r3
 1002 0008 E4B2     		uxtb	r4, r4
 1003              	.LVL82:
 699:main.c        ****         /*we just went from manual to auto*/
 1004              		.loc 1 699 0
 1005 000a 0128     		cmp	r0, #1
 1006 000c 05D1     		bne	.L66
 699:main.c        ****         /*we just went from manual to auto*/
 1007              		.loc 1 699 0 is_stmt 0 discriminator 1
 1008 000e 044B     		ldr	r3, .L67
 1009 0010 1B7D     		ldrb	r3, [r3, #20]
 1010 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 43


 1011 0014 01D1     		bne	.L66
 701:main.c        ****     }
 1012              		.loc 1 701 0 is_stmt 1
 1013 0016 FFF7FEFF 		bl	PID_Initialize
 1014              	.LVL83:
 1015              	.L66:
 704:main.c        **** } 
 1016              		.loc 1 704 0
 1017 001a 014B     		ldr	r3, .L67
 1018 001c 1C75     		strb	r4, [r3, #20]
 705:main.c        ****     
 1019              		.loc 1 705 0
 1020              		@ sp needed
 1021              	.LVL84:
 1022 001e 10BD     		pop	{r4, pc}
 1023              	.L68:
 1024              		.align	2
 1025              	.L67:
 1026 0020 00000000 		.word	.LANCHOR1
 1027              		.cfi_endproc
 1028              	.LFE39:
 1029              		.size	PID_SetMode, .-PID_SetMode
 1030              		.section	.text.PID_SetDrive,"ax",%progbits
 1031              		.align	2
 1032              		.global	PID_SetDrive
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	PID_SetDrive, %function
 1036              	PID_SetDrive:
 1037              	.LFB40:
 717:main.c        **** 
 1038              		.loc 1 717 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              	.LVL85:
 1043 0000 10B5     		push	{r4, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 4, -8
 1046              		.cfi_offset 14, -4
 721:main.c        ****     
 1047              		.loc 1 721 0
 1048 0002 0549     		ldr	r1, .L70
 1049 0004 FFF7FEFF 		bl	__aeabi_fadd
 1050              	.LVL86:
 1051 0008 FC21     		movs	r1, #252
 1052 000a 8905     		lsls	r1, r1, #22
 1053 000c FFF7FEFF 		bl	__aeabi_fmul
 1054              	.LVL87:
 724:main.c        **** }
 1055              		.loc 1 724 0
 1056 0010 FFF7FEFF 		bl	PWM_Set
 1057              	.LVL88:
 725:main.c        **** 
 1058              		.loc 1 725 0
 1059              		@ sp needed
 1060 0014 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 44


 1061              	.L71:
 1062 0016 C046     		.align	2
 1063              	.L70:
 1064 0018 0000C842 		.word	1120403456
 1065              		.cfi_endproc
 1066              	.LFE40:
 1067              		.size	PID_SetDrive, .-PID_SetDrive
 1068              		.global	__aeabi_i2f
 1069              		.section	.text.runRateGroup1_PID,"ax",%progbits
 1070              		.align	2
 1071              		.global	runRateGroup1_PID
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	runRateGroup1_PID, %function
 1075              	runRateGroup1_PID:
 1076              	.LFB41:
 737:main.c        ****     
 1077              		.loc 1 737 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 70B5     		push	{r4, r5, r6, lr}
 1082              		.cfi_def_cfa_offset 16
 1083              		.cfi_offset 4, -16
 1084              		.cfi_offset 5, -12
 1085              		.cfi_offset 6, -8
 1086              		.cfi_offset 14, -4
 747:main.c        ****         
 1087              		.loc 1 747 0
 1088 0002 A34B     		ldr	r3, .L102
 1089 0004 5B7D     		ldrb	r3, [r3, #21]
 1090 0006 002B     		cmp	r3, #0
 1091 0008 20D1     		bne	.L73
 750:main.c        ****         PID_SetMode(PID_MANUAL);
 1092              		.loc 1 750 0
 1093 000a FFF7FEFF 		bl	PID_Initialize
 1094              	.LVL89:
 751:main.c        ****         
 1095              		.loc 1 751 0
 1096 000e 0020     		movs	r0, #0
 1097 0010 FFF7FEFF 		bl	PID_SetMode
 1098              	.LVL90:
 754:main.c        ****         outMax_ITerm = 100;
 1099              		.loc 1 754 0
 1100 0014 9F4B     		ldr	r3, .L102+4
 1101 0016 A04A     		ldr	r2, .L102+8
 1102 0018 1360     		str	r3, [r2]
 755:main.c        **** 
 1103              		.loc 1 755 0
 1104 001a A04A     		ldr	r2, .L102+12
 1105 001c 1360     		str	r3, [r2]
 758:main.c        ****         pwmMax = PWM_JOG_NEUTRAL + pwmLimit;
 1106              		.loc 1 758 0
 1107 001e A049     		ldr	r1, .L102+16
 1108 0020 A04A     		ldr	r2, .L102+20
 1109 0022 1160     		str	r1, [r2]
 759:main.c        ****         pwmMin = PWM_JOG_NEUTRAL - pwmLimit;    
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 45


 1110              		.loc 1 759 0
 1111 0024 A04A     		ldr	r2, .L102+24
 1112 0026 1360     		str	r3, [r2]
 760:main.c        ****         
 1113              		.loc 1 760 0
 1114 0028 0022     		movs	r2, #0
 1115 002a A04B     		ldr	r3, .L102+28
 1116 002c 1A60     		str	r2, [r3]
 763:main.c        ****         PID_EffectiveSetpoint = 0;
 1117              		.loc 1 763 0
 1118 002e 0023     		movs	r3, #0
 1119 0030 9F4A     		ldr	r2, .L102+32
 1120 0032 1360     		str	r3, [r2]
 764:main.c        ****         PID_EffSetDelta = PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1121              		.loc 1 764 0
 1122 0034 9F4A     		ldr	r2, .L102+36
 1123 0036 1360     		str	r3, [r2]
 765:main.c        ****         PID_Was_Enabled = false;
 1124              		.loc 1 765 0
 1125 0038 1921     		movs	r1, #25
 1126 003a 9F4A     		ldr	r2, .L102+40
 1127 003c 1170     		strb	r1, [r2]
 766:main.c        ****         PID_Enabled = false;
 1128              		.loc 1 766 0
 1129 003e 9F4A     		ldr	r2, .L102+44
 1130 0040 1370     		strb	r3, [r2]
 767:main.c        ****         
 1131              		.loc 1 767 0
 1132 0042 9F4A     		ldr	r2, .L102+48
 1133 0044 1370     		strb	r3, [r2]
 769:main.c        ****     }
 1134              		.loc 1 769 0
 1135 0046 0122     		movs	r2, #1
 1136 0048 914B     		ldr	r3, .L102
 1137 004a 5A75     		strb	r2, [r3, #21]
 1138              	.L73:
 776:main.c        ****     /* ------------------------------------------------------------------------------------ */
 1139              		.loc 1 776 0
 1140 004c 8020     		movs	r0, #128
 1141 004e 0001     		lsls	r0, r0, #4
 1142 0050 FFF7FEFF 		bl	CySysWdtResetCounters
 1143              	.LVL91:
 793:main.c        ****         
 1144              		.loc 1 793 0
 1145 0054 9B4B     		ldr	r3, .L102+52
 1146 0056 1B68     		ldr	r3, [r3]
 1147 0058 0133     		adds	r3, r3, #1
 1148 005a 0024     		movs	r4, #0
 1149 005c 8C4A     		ldr	r2, .L102
 1150 005e 1068     		ldr	r0, [r2]
 1151 0060 5168     		ldr	r1, [r2, #4]
 1152 0062 0029     		cmp	r1, #0
 1153 0064 03D1     		bne	.L95
 1154 0066 A142     		cmp	r1, r4
 1155 0068 0AD1     		bne	.L74
 1156 006a 9842     		cmp	r0, r3
 1157 006c 08D9     		bls	.L74
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 46


 1158              	.L95:
 796:main.c        ****         PID_Enabled = false;
 1159              		.loc 1 796 0
 1160 006e 8C48     		ldr	r0, .L102+16
 1161 0070 FFF7FEFF 		bl	PWM_Set
 1162              	.LVL92:
 797:main.c        ****         
 1163              		.loc 1 797 0
 1164 0074 0023     		movs	r3, #0
 1165 0076 924A     		ldr	r2, .L102+48
 1166 0078 1370     		strb	r3, [r2]
 801:main.c        **** 
 1167              		.loc 1 801 0
 1168 007a 934A     		ldr	r2, .L102+56
 1169 007c 1370     		strb	r3, [r2]
 1170 007e 06E1     		b	.L72
 1171              	.L74:
 804:main.c        ****         
 1172              		.loc 1 804 0
 1173 0080 924B     		ldr	r3, .L102+60
 1174 0082 1B78     		ldrb	r3, [r3]
 1175 0084 022B     		cmp	r3, #2
 1176 0086 00D0     		beq	.LCB1016
 1177 0088 01E1     		b	.L72	@long jump
 1178              	.LCB1016:
 808:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 1179              		.loc 1 808 0
 1180 008a 0620     		movs	r0, #6
 1181 008c FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1182              	.LVL93:
 809:main.c        ****     
 1183              		.loc 1 809 0
 1184 0090 0620     		movs	r0, #6
 1185 0092 FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1186              	.LVL94:
 812:main.c        ****             
 1187              		.loc 1 812 0
 1188 0096 8A4B     		ldr	r3, .L102+48
 1189 0098 1B78     		ldrb	r3, [r3]
 1190 009a 002B     		cmp	r3, #0
 1191 009c 4FD1     		bne	.L77
 816:main.c        ****                 
 1192              		.loc 1 816 0
 1193 009e 8A4B     		ldr	r3, .L102+56
 1194 00a0 1A78     		ldrb	r2, [r3]
 1195 00a2 52B2     		sxtb	r2, r2
 1196 00a4 8A4B     		ldr	r3, .L102+64
 1197 00a6 1B78     		ldrb	r3, [r3]
 1198 00a8 5BB2     		sxtb	r3, r3
 1199 00aa 9A42     		cmp	r2, r3
 1200 00ac 0FD0     		beq	.L78
 816:main.c        ****                 
 1201              		.loc 1 816 0 is_stmt 0 discriminator 1
 1202 00ae 864B     		ldr	r3, .L102+56
 1203 00b0 1B78     		ldrb	r3, [r3]
 1204 00b2 002B     		cmp	r3, #0
 1205 00b4 0BD0     		beq	.L78
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 47


 819:main.c        ****                 
 1206              		.loc 1 819 0 is_stmt 1
 1207 00b6 844B     		ldr	r3, .L102+56
 1208 00b8 1B78     		ldrb	r3, [r3]
 1209 00ba 5BB2     		sxtb	r3, r3
 1210 00bc 844A     		ldr	r2, .L102+64
 1211 00be 1370     		strb	r3, [r2]
 822:main.c        ****                 
 1212              		.loc 1 822 0
 1213 00c0 FFF7FEFF 		bl	GetPosition
 1214              	.LVL95:
 1215 00c4 834B     		ldr	r3, .L102+68
 1216 00c6 1860     		str	r0, [r3]
 825:main.c        ****             }                
 1217              		.loc 1 825 0
 1218 00c8 0020     		movs	r0, #0
 1219 00ca FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1220              	.LVL96:
 1221              	.L78:
 829:main.c        **** 
 1222              		.loc 1 829 0
 1223 00ce 7E4C     		ldr	r4, .L102+56
 1224 00d0 2078     		ldrb	r0, [r4]
 1225 00d2 40B2     		sxtb	r0, r0
 1226 00d4 3230     		adds	r0, r0, #50
 1227 00d6 FFF7FEFF 		bl	__aeabi_i2f
 1228              	.LVL97:
 1229 00da FFF7FEFF 		bl	PWM_Set
 1230              	.LVL98:
 832:main.c        ****             
 1231              		.loc 1 832 0
 1232 00de 2378     		ldrb	r3, [r4]
 1233 00e0 002B     		cmp	r3, #0
 1234 00e2 2CD0     		beq	.L77
 836:main.c        ****                 DeltaPosition = labs( Position - LastPosition );
 1235              		.loc 1 836 0
 1236 00e4 FFF7FEFF 		bl	GetPosition
 1237              	.LVL99:
 1238 00e8 7B4B     		ldr	r3, .L102+72
 1239 00ea 1860     		str	r0, [r3]
 837:main.c        ****                 CurrentIndexCount = Index_Counter_1_ReadCounter();
 1240              		.loc 1 837 0
 1241 00ec 1B68     		ldr	r3, [r3]
 1242 00ee 794A     		ldr	r2, .L102+68
 1243 00f0 1268     		ldr	r2, [r2]
 1244 00f2 9B1A     		subs	r3, r3, r2
 1245 00f4 DA17     		asrs	r2, r3, #31
 1246 00f6 9B18     		adds	r3, r3, r2
 1247 00f8 5340     		eors	r3, r2
 1248 00fa 654C     		ldr	r4, .L102
 1249 00fc A361     		str	r3, [r4, #24]
 838:main.c        ****                 
 1250              		.loc 1 838 0
 1251 00fe FFF7FEFF 		bl	Index_Counter_1_ReadCounter
 1252              	.LVL100:
 1253 0102 E061     		str	r0, [r4, #28]
 842:main.c        ****                     if (CurrentIndexCount == 0)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 48


 1254              		.loc 1 842 0
 1255 0104 754B     		ldr	r3, .L102+76
 1256 0106 1B78     		ldrb	r3, [r3]
 1257 0108 002B     		cmp	r3, #0
 1258 010a 09D0     		beq	.L79
 843:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 1259              		.loc 1 843 0
 1260 010c 0028     		cmp	r0, #0
 1261 010e 07D1     		bne	.L79
 844:main.c        ****                             AssertFault(fsIndex);        
 1262              		.loc 1 844 0
 1263 0110 5F4B     		ldr	r3, .L102
 1264 0112 9A69     		ldr	r2, [r3, #24]
 1265 0114 724B     		ldr	r3, .L102+80
 1266 0116 9A42     		cmp	r2, r3
 1267 0118 02DD     		ble	.L79
 845:main.c        ****                 }
 1268              		.loc 1 845 0
 1269 011a 0420     		movs	r0, #4
 1270 011c FFF7FEFF 		bl	AssertFault
 1271              	.LVL101:
 1272              	.L79:
 850:main.c        ****                     if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 1273              		.loc 1 850 0
 1274 0120 6E4B     		ldr	r3, .L102+76
 1275 0122 1B78     		ldrb	r3, [r3]
 1276 0124 002B     		cmp	r3, #0
 1277 0126 0AD0     		beq	.L77
 851:main.c        ****                         AssertFault(fsEncoder);
 1278              		.loc 1 851 0
 1279 0128 594B     		ldr	r3, .L102
 1280 012a DB69     		ldr	r3, [r3, #28]
 1281 012c 002B     		cmp	r3, #0
 1282 012e 06D0     		beq	.L77
 851:main.c        ****                         AssertFault(fsEncoder);
 1283              		.loc 1 851 0 is_stmt 0 discriminator 1
 1284 0130 574B     		ldr	r3, .L102
 1285 0132 9B69     		ldr	r3, [r3, #24]
 1286 0134 012B     		cmp	r3, #1
 1287 0136 02DC     		bgt	.L77
 852:main.c        ****                 }
 1288              		.loc 1 852 0 is_stmt 1
 1289 0138 0220     		movs	r0, #2
 1290 013a FFF7FEFF 		bl	AssertFault
 1291              	.LVL102:
 1292              	.L77:
 859:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1293              		.loc 1 859 0
 1294 013e 5F4B     		ldr	r3, .L102+44
 1295 0140 1B78     		ldrb	r3, [r3]
 1296 0142 002B     		cmp	r3, #0
 1297 0144 07D1     		bne	.L80
 859:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1298              		.loc 1 859 0 is_stmt 0 discriminator 1
 1299 0146 5E4A     		ldr	r2, .L102+48
 1300 0148 1278     		ldrb	r2, [r2]
 1301 014a 002A     		cmp	r2, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 49


 1302 014c 03D0     		beq	.L80
 860:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 1303              		.loc 1 860 0 is_stmt 1
 1304 014e 0120     		movs	r0, #1
 1305 0150 FFF7FEFF 		bl	PID_SetMode
 1306              	.LVL103:
 1307 0154 08E0     		b	.L81
 1308              	.L80:
 861:main.c        ****             PID_SetMode(PID_MANUAL);                
 1309              		.loc 1 861 0
 1310 0156 5A4A     		ldr	r2, .L102+48
 1311 0158 1278     		ldrb	r2, [r2]
 1312 015a 002A     		cmp	r2, #0
 1313 015c 04D1     		bne	.L81
 861:main.c        ****             PID_SetMode(PID_MANUAL);                
 1314              		.loc 1 861 0 is_stmt 0 discriminator 1
 1315 015e 002B     		cmp	r3, #0
 1316 0160 02D0     		beq	.L81
 862:main.c        ****         } else {
 1317              		.loc 1 862 0 is_stmt 1
 1318 0162 0020     		movs	r0, #0
 1319 0164 FFF7FEFF 		bl	PID_SetMode
 1320              	.LVL104:
 1321              	.L81:
 868:main.c        ****         
 1322              		.loc 1 868 0
 1323 0168 554B     		ldr	r3, .L102+48
 1324 016a 1B78     		ldrb	r3, [r3]
 1325 016c 534A     		ldr	r2, .L102+44
 1326 016e 1370     		strb	r3, [r2]
 883:main.c        ****             
 1327              		.loc 1 883 0
 1328 0170 002B     		cmp	r3, #0
 1329 0172 00D1     		bne	.LCB1146
 1330 0174 88E0     		b	.L82	@long jump
 1331              	.LCB1146:
 885:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 1332              		.loc 1 885 0
 1333 0176 504B     		ldr	r3, .L102+40
 1334 0178 1B78     		ldrb	r3, [r3]
 1335 017a 002B     		cmp	r3, #0
 1336 017c 04D1     		bne	.L83
 886:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1337              		.loc 1 886 0
 1338 017e 4C4B     		ldr	r3, .L102+32
 1339 0180 1A68     		ldr	r2, [r3]
 1340 0182 4C4B     		ldr	r3, .L102+36
 1341 0184 1A60     		str	r2, [r3]
 1342 0186 16E0     		b	.L84
 1343              	.L83:
 887:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 1344              		.loc 1 887 0
 1345 0188 4A4A     		ldr	r2, .L102+36
 1346 018a 1168     		ldr	r1, [r2]
 1347 018c 484A     		ldr	r2, .L102+32
 1348 018e 1068     		ldr	r0, [r2]
 1349 0190 0A1A     		subs	r2, r1, r0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 50


 1350 0192 D417     		asrs	r4, r2, #31
 1351 0194 1219     		adds	r2, r2, r4
 1352 0196 6240     		eors	r2, r4
 1353 0198 5C00     		lsls	r4, r3, #1
 1354 019a A242     		cmp	r2, r4
 1355 019c 02DC     		bgt	.L85
 888:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1356              		.loc 1 888 0
 1357 019e 454B     		ldr	r3, .L102+36
 1358 01a0 1860     		str	r0, [r3]
 1359 01a2 08E0     		b	.L84
 1360              	.L85:
 889:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1361              		.loc 1 889 0
 1362 01a4 8142     		cmp	r1, r0
 1363 01a6 03DA     		bge	.L86
 890:main.c        ****             } else {
 1364              		.loc 1 890 0
 1365 01a8 CB18     		adds	r3, r1, r3
 1366 01aa 424A     		ldr	r2, .L102+36
 1367 01ac 1360     		str	r3, [r2]
 1368 01ae 02E0     		b	.L84
 1369              	.L86:
 892:main.c        ****             }
 1370              		.loc 1 892 0
 1371 01b0 CB1A     		subs	r3, r1, r3
 1372 01b2 404A     		ldr	r2, .L102+36
 1373 01b4 1360     		str	r3, [r2]
 1374              	.L84:
 899:main.c        ****             
 1375              		.loc 1 899 0
 1376 01b6 FFF7FEFF 		bl	GetPosition
 1377              	.LVL105:
 1378 01ba 474A     		ldr	r2, .L102+72
 1379 01bc 1060     		str	r0, [r2]
 902:main.c        ****             ITerm += (ki * error);
 1380              		.loc 1 902 0
 1381 01be 3D4B     		ldr	r3, .L102+36
 1382 01c0 1B68     		ldr	r3, [r3]
 1383 01c2 1068     		ldr	r0, [r2]
 1384 01c4 181A     		subs	r0, r3, r0
 1385              	.LVL106:
 903:main.c        ****             
 1386              		.loc 1 903 0
 1387 01c6 FFF7FEFF 		bl	__aeabi_i2f
 1388              	.LVL107:
 1389 01ca 051C     		adds	r5, r0, #0
 1390 01cc 454B     		ldr	r3, .L102+84
 1391 01ce 1968     		ldr	r1, [r3]
 1392 01d0 FFF7FEFF 		bl	__aeabi_fmul
 1393              	.LVL108:
 1394 01d4 444C     		ldr	r4, .L102+88
 1395 01d6 2168     		ldr	r1, [r4]
 1396 01d8 FFF7FEFF 		bl	__aeabi_fadd
 1397              	.LVL109:
 1398 01dc 061C     		adds	r6, r0, #0
 1399 01de 2060     		str	r0, [r4]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 51


 906:main.c        ****                 ITerm = outMax_ITerm;
 1400              		.loc 1 906 0
 1401 01e0 2E4B     		ldr	r3, .L102+12
 1402 01e2 1C68     		ldr	r4, [r3]
 1403 01e4 211C     		adds	r1, r4, #0
 1404 01e6 FFF7FEFF 		bl	__aeabi_fcmpgt
 1405              	.LVL110:
 1406 01ea 0028     		cmp	r0, #0
 1407 01ec 02D0     		beq	.L100
 907:main.c        ****             } else if (ITerm < -outMax_ITerm) {
 1408              		.loc 1 907 0
 1409 01ee 3E4B     		ldr	r3, .L102+88
 1410 01f0 1C60     		str	r4, [r3]
 1411 01f2 0BE0     		b	.L89
 1412              	.L100:
 908:main.c        ****                 ITerm = -outMax_ITerm;
 1413              		.loc 1 908 0
 1414 01f4 8023     		movs	r3, #128
 1415 01f6 1B06     		lsls	r3, r3, #24
 1416 01f8 9C46     		mov	ip, r3
 1417 01fa 6444     		add	r4, r4, ip
 1418 01fc 211C     		adds	r1, r4, #0
 1419 01fe 301C     		adds	r0, r6, #0
 1420 0200 FFF7FEFF 		bl	__aeabi_fcmplt
 1421              	.LVL111:
 1422 0204 0028     		cmp	r0, #0
 1423 0206 01D0     		beq	.L89
 909:main.c        ****             }
 1424              		.loc 1 909 0
 1425 0208 374B     		ldr	r3, .L102+88
 1426 020a 1C60     		str	r4, [r3]
 1427              	.L89:
 913:main.c        **** 
 1428              		.loc 1 913 0
 1429 020c 324B     		ldr	r3, .L102+72
 1430 020e 1B68     		ldr	r3, [r3]
 1431 0210 304A     		ldr	r2, .L102+68
 1432 0212 1468     		ldr	r4, [r2]
 1433 0214 1C1B     		subs	r4, r3, r4
 1434              	.LVL112:
 916:main.c        ****             
 1435              		.loc 1 916 0
 1436 0216 354B     		ldr	r3, .L102+92
 1437 0218 1968     		ldr	r1, [r3]
 1438 021a 281C     		adds	r0, r5, #0
 1439 021c FFF7FEFF 		bl	__aeabi_fmul
 1440              	.LVL113:
 1441 0220 314B     		ldr	r3, .L102+88
 1442 0222 1968     		ldr	r1, [r3]
 1443 0224 FFF7FEFF 		bl	__aeabi_fadd
 1444              	.LVL114:
 1445 0228 051C     		adds	r5, r0, #0
 1446 022a 2000     		movs	r0, r4
 1447 022c FFF7FEFF 		bl	__aeabi_i2f
 1448              	.LVL115:
 1449 0230 2F4B     		ldr	r3, .L102+96
 1450 0232 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 52


 1451 0234 FFF7FEFF 		bl	__aeabi_fmul
 1452              	.LVL116:
 1453 0238 011C     		adds	r1, r0, #0
 1454 023a 281C     		adds	r0, r5, #0
 1455 023c FFF7FEFF 		bl	__aeabi_fsub
 1456              	.LVL117:
 1457 0240 051C     		adds	r5, r0, #0
 1458 0242 2C4B     		ldr	r3, .L102+100
 1459 0244 1860     		str	r0, [r3]
 919:main.c        ****                 Output = outMax_Total;
 1460              		.loc 1 919 0
 1461 0246 144B     		ldr	r3, .L102+8
 1462 0248 1C68     		ldr	r4, [r3]
 1463              	.LVL118:
 1464 024a 211C     		adds	r1, r4, #0
 1465 024c FFF7FEFF 		bl	__aeabi_fcmpgt
 1466              	.LVL119:
 1467 0250 0028     		cmp	r0, #0
 1468 0252 02D0     		beq	.L101
 920:main.c        ****             } else if (Output < -outMax_Total) {
 1469              		.loc 1 920 0
 1470 0254 274B     		ldr	r3, .L102+100
 1471 0256 1C60     		str	r4, [r3]
 1472 0258 0BE0     		b	.L93
 1473              	.L101:
 921:main.c        ****                 Output = -outMax_Total;
 1474              		.loc 1 921 0
 1475 025a 8023     		movs	r3, #128
 1476 025c 1B06     		lsls	r3, r3, #24
 1477 025e 9C46     		mov	ip, r3
 1478 0260 6444     		add	r4, r4, ip
 1479 0262 211C     		adds	r1, r4, #0
 1480 0264 281C     		adds	r0, r5, #0
 1481 0266 FFF7FEFF 		bl	__aeabi_fcmplt
 1482              	.LVL120:
 1483 026a 0028     		cmp	r0, #0
 1484 026c 01D0     		beq	.L93
 922:main.c        ****             }
 1485              		.loc 1 922 0
 1486 026e 214B     		ldr	r3, .L102+100
 1487 0270 1C60     		str	r4, [r3]
 1488              	.L93:
 926:main.c        ****         
 1489              		.loc 1 926 0
 1490 0272 194B     		ldr	r3, .L102+72
 1491 0274 1A68     		ldr	r2, [r3]
 1492 0276 174B     		ldr	r3, .L102+68
 1493 0278 1A60     		str	r2, [r3]
 929:main.c        ****             
 1494              		.loc 1 929 0
 1495 027a 1E4B     		ldr	r3, .L102+100
 1496 027c 1868     		ldr	r0, [r3]
 1497 027e 1E4B     		ldr	r3, .L102+104
 1498 0280 1860     		str	r0, [r3]
 932:main.c        ****             
 1499              		.loc 1 932 0
 1500 0282 FFF7FEFF 		bl	PID_SetDrive
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 53


 1501              	.LVL121:
 1502 0286 02E0     		b	.L72
 1503              	.L82:
 936:main.c        ****         }
 1504              		.loc 1 936 0
 1505 0288 0022     		movs	r2, #0
 1506 028a 1B4B     		ldr	r3, .L102+104
 1507 028c 1A60     		str	r2, [r3]
 1508              	.L72:
 941:main.c        **** 
 1509              		.loc 1 941 0
 1510              		@ sp needed
 1511 028e 70BD     		pop	{r4, r5, r6, pc}
 1512              	.L103:
 1513              		.align	2
 1514              	.L102:
 1515 0290 00000000 		.word	.LANCHOR1
 1516 0294 0000C842 		.word	1120403456
 1517 0298 00000000 		.word	outMax_Total
 1518 029c 00000000 		.word	outMax_ITerm
 1519 02a0 00004842 		.word	1112014848
 1520 02a4 00000000 		.word	pwmLimit
 1521 02a8 00000000 		.word	pwmMax
 1522 02ac 00000000 		.word	pwmMin
 1523 02b0 00000000 		.word	PID_Setpoint
 1524 02b4 00000000 		.word	PID_EffectiveSetpoint
 1525 02b8 00000000 		.word	PID_EffSetDelta
 1526 02bc 00000000 		.word	PID_Was_Enabled
 1527 02c0 00000000 		.word	PID_Enabled
 1528 02c4 00000000 		.word	LastMessageTimeSeconds
 1529 02c8 00000000 		.word	Jog
 1530 02cc 00000000 		.word	ConfigState
 1531 02d0 00000000 		.word	LastJog
 1532 02d4 00000000 		.word	LastPosition
 1533 02d8 00000000 		.word	Position
 1534 02dc 00000000 		.word	.LANCHOR0
 1535 02e0 204E0000 		.word	20000
 1536 02e4 00000000 		.word	ki
 1537 02e8 00000000 		.word	ITerm
 1538 02ec 00000000 		.word	kp
 1539 02f0 00000000 		.word	kd
 1540 02f4 00000000 		.word	Output
 1541 02f8 00000000 		.word	PWM
 1542              		.cfi_endproc
 1543              	.LFE41:
 1544              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1545              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1546              		.align	2
 1547              		.global	BRMS_Interrupt
 1548              		.code	16
 1549              		.thumb_func
 1550              		.type	BRMS_Interrupt, %function
 1551              	BRMS_Interrupt:
 1552              	.LFB43:
1075:main.c        ****     
 1553              		.loc 1 1075 0
 1554              		.cfi_startproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 54


 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557 0000 70B5     		push	{r4, r5, r6, lr}
 1558              		.cfi_def_cfa_offset 16
 1559              		.cfi_offset 4, -16
 1560              		.cfi_offset 5, -12
 1561              		.cfi_offset 6, -8
 1562              		.cfi_offset 14, -4
1086:main.c        **** 
 1563              		.loc 1 1086 0
 1564 0002 0220     		movs	r0, #2
 1565 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
 1566              	.LVL122:
1089:main.c        ****     
 1567              		.loc 1 1089 0
 1568 0008 0120     		movs	r0, #1
 1569 000a FFF7FEFF 		bl	LED_Write
 1570              	.LVL123:
1092:main.c        **** 
 1571              		.loc 1 1092 0
 1572 000e 184B     		ldr	r3, .L108
 1573 0010 1C6A     		ldr	r4, [r3, #32]
 1574 0012 5D6A     		ldr	r5, [r3, #36]
 1575 0014 C820     		movs	r0, #200
 1576 0016 0021     		movs	r1, #0
 1577 0018 0019     		adds	r0, r0, r4
 1578 001a 6941     		adcs	r1, r1, r5
 1579 001c 1862     		str	r0, [r3, #32]
 1580 001e 5962     		str	r1, [r3, #36]
1095:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1581              		.loc 1 1095 0
 1582 0020 1A6A     		ldr	r2, [r3, #32]
 1583 0022 5B6A     		ldr	r3, [r3, #36]
 1584 0024 1349     		ldr	r1, .L108+4
 1585 0026 8A42     		cmp	r2, r1
 1586 0028 0ED1     		bne	.L105
 1587 002a 002B     		cmp	r3, #0
 1588 002c 0CD1     		bne	.L105
1096:main.c        ****         UptimeSeconds++;
 1589              		.loc 1 1096 0
 1590 002e 104B     		ldr	r3, .L108
 1591 0030 0020     		movs	r0, #0
 1592 0032 0021     		movs	r1, #0
 1593 0034 1862     		str	r0, [r3, #32]
 1594 0036 5962     		str	r1, [r3, #36]
1097:main.c        ****     }
 1595              		.loc 1 1097 0
 1596 0038 1C68     		ldr	r4, [r3]
 1597 003a 5D68     		ldr	r5, [r3, #4]
 1598 003c 0120     		movs	r0, #1
 1599 003e 0021     		movs	r1, #0
 1600 0040 0019     		adds	r0, r0, r4
 1601 0042 6941     		adcs	r1, r1, r5
 1602 0044 1860     		str	r0, [r3]
 1603 0046 5960     		str	r1, [r3, #4]
 1604              	.L105:
1101:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 55


 1605              		.loc 1 1101 0
 1606 0048 094A     		ldr	r2, .L108
 1607 004a 936A     		ldr	r3, [r2, #40]
 1608 004c 0133     		adds	r3, r3, #1
 1609 004e 9362     		str	r3, [r2, #40]
1121:main.c        ****         
 1610              		.loc 1 1121 0
 1611 0050 DA07     		lsls	r2, r3, #31
 1612 0052 02D5     		bpl	.L106
1126:main.c        ****         
 1613              		.loc 1 1126 0
 1614 0054 FFF7FEFF 		bl	runRateGroup1_PID
 1615              	.LVL124:
 1616 0058 05E0     		b	.L107
 1617              	.L106:
1128:main.c        ****         
 1618              		.loc 1 1128 0
 1619 005a 9A07     		lsls	r2, r3, #30
 1620 005c 03D4     		bmi	.L107
1133:main.c        ****         
 1621              		.loc 1 1133 0
 1622 005e 5B07     		lsls	r3, r3, #29
 1623 0060 01D5     		bpl	.L107
1136:main.c        ****         
 1624              		.loc 1 1136 0
 1625 0062 FFF7FEFF 		bl	runRateGroup3_SPI
 1626              	.LVL125:
 1627              	.L107:
1150:main.c        **** }
 1628              		.loc 1 1150 0
 1629 0066 0020     		movs	r0, #0
 1630 0068 FFF7FEFF 		bl	LED_Write
 1631              	.LVL126:
1151:main.c        **** 
 1632              		.loc 1 1151 0
 1633              		@ sp needed
 1634 006c 70BD     		pop	{r4, r5, r6, pc}
 1635              	.L109:
 1636 006e C046     		.align	2
 1637              	.L108:
 1638 0070 00000000 		.word	.LANCHOR1
 1639 0074 40420F00 		.word	1000000
 1640              		.cfi_endproc
 1641              	.LFE43:
 1642              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1643              		.section	.text.main,"ax",%progbits
 1644              		.align	2
 1645              		.global	main
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	main, %function
 1649              	main:
 1650              	.LFB42:
 953:main.c        ****     
 1651              		.loc 1 953 0
 1652              		.cfi_startproc
 1653              		@ Volatile: function does not return.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 56


 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 0, uses_anonymous_args = 0
 1656 0000 70B5     		push	{r4, r5, r6, lr}
 1657              		.cfi_def_cfa_offset 16
 1658              		.cfi_offset 4, -16
 1659              		.cfi_offset 5, -12
 1660              		.cfi_offset 6, -8
 1661              		.cfi_offset 14, -4
 961:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1662              		.loc 1 961 0
 1663 0002 0120     		movs	r0, #1
 1664 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1665              	.LVL127:
 962:main.c        **** 
 1666              		.loc 1 962 0
 1667 0008 0120     		movs	r0, #1
 1668 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1669              	.LVL128:
 970:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1670              		.loc 1 970 0
 1671 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1672              	.LVL129:
 971:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1673              		.loc 1 971 0
 1674 0012 2348     		ldr	r0, .L112
 1675 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1676              	.LVL130:
 972:main.c        ****     
 1677              		.loc 1 972 0
 1678 0018 0220     		movs	r0, #2
 1679 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1680              	.LVL131:
 975:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1681              		.loc 1 975 0
 1682 001e 2148     		ldr	r0, .L112+4
 1683 0020 FFF7FEFF 		bl	isr_home_StartEx
 1684              	.LVL132:
 976:main.c        **** 
 1685              		.loc 1 976 0
 1686 0024 0320     		movs	r0, #3
 1687 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1688              	.LVL133:
 979:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1689              		.loc 1 979 0
 1690 002a 1F48     		ldr	r0, .L112+8
 1691 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1692              	.LVL134:
 980:main.c        ****     
 1693              		.loc 1 980 0
 1694 0030 0320     		movs	r0, #3
 1695 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1696              	.LVL135:
 983:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
 1697              		.loc 1 983 0
 1698 0036 1D48     		ldr	r0, .L112+12
 1699 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1700              	.LVL136:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 57


 984:main.c        **** 
 1701              		.loc 1 984 0
 1702 003c 0320     		movs	r0, #3
 1703 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1704              	.LVL137:
 987:main.c        ****     
 1705              		.loc 1 987 0
 1706              		.syntax divided
 1707              	@ 987 "main.c" 1
 1708 0042 62B6     		CPSIE   i
 1709              	@ 0 "" 2
1016:main.c        ****     CyDelay(100u);
 1710              		.loc 1 1016 0
 1711              		.thumb
 1712              		.syntax unified
 1713 0044 FFF7FEFF 		bl	I2C_Start
 1714              	.LVL138:
1017:main.c        ****     SPI_1_Start();
 1715              		.loc 1 1017 0
 1716 0048 6420     		movs	r0, #100
 1717 004a FFF7FEFF 		bl	CyDelay
 1718              	.LVL139:
1018:main.c        ****     
 1719              		.loc 1 1018 0
 1720 004e FFF7FEFF 		bl	SPI_1_Start
 1721              	.LVL140:
1022:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1722              		.loc 1 1022 0
 1723 0052 FFF7FEFF 		bl	PWM_1_Start
 1724              	.LVL141:
1023:main.c        ****     PWM_Set(PWM_IDLE);   
 1725              		.loc 1 1023 0
 1726 0056 C820     		movs	r0, #200
 1727 0058 C000     		lsls	r0, r0, #3
 1728 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1729              	.LVL142:
1024:main.c        ****     
 1730              		.loc 1 1024 0
 1731 005e 1448     		ldr	r0, .L112+16
 1732 0060 FFF7FEFF 		bl	PWM_Set
 1733              	.LVL143:
1027:main.c        ****     
 1734              		.loc 1 1027 0
 1735 0064 0024     		movs	r4, #0
 1736 0066 134B     		ldr	r3, .L112+20
 1737 0068 1C70     		strb	r4, [r3]
1030:main.c        ****    
 1738              		.loc 1 1030 0
 1739 006a 134B     		ldr	r3, .L112+24
 1740 006c 1C70     		strb	r4, [r3]
1033:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1741              		.loc 1 1033 0
 1742 006e FFF7FEFF 		bl	Counter_1_Start
 1743              	.LVL144:
1034:main.c        ****     LastPosition = ENCODER_MAX;
 1744              		.loc 1 1034 0
 1745 0072 124D     		ldr	r5, .L112+28
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 58


 1746 0074 2800     		movs	r0, r5
 1747 0076 FFF7FEFF 		bl	Counter_1_WriteCounter
 1748              	.LVL145:
1035:main.c        ****     
 1749              		.loc 1 1035 0
 1750 007a 114B     		ldr	r3, .L112+32
 1751 007c 1D60     		str	r5, [r3]
1038:main.c        ****     Index_Counter_1_WriteCounter(0);
 1752              		.loc 1 1038 0
 1753 007e FFF7FEFF 		bl	Index_Counter_1_Start
 1754              	.LVL146:
1039:main.c        ****      
 1755              		.loc 1 1039 0
 1756 0082 0020     		movs	r0, #0
 1757 0084 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1758              	.LVL147:
1042:main.c        ****     ConfigSequence = 0;
 1759              		.loc 1 1042 0
 1760 0088 0122     		movs	r2, #1
 1761 008a 0E4B     		ldr	r3, .L112+36
 1762 008c 1A70     		strb	r2, [r3]
1043:main.c        ****     ChecksumErrors = 0;
 1763              		.loc 1 1043 0
 1764 008e 0E4B     		ldr	r3, .L112+40
 1765 0090 1C70     		strb	r4, [r3]
1044:main.c        **** 
 1766              		.loc 1 1044 0
 1767 0092 0E4B     		ldr	r3, .L112+44
 1768 0094 1C80     		strh	r4, [r3]
 1769              	.L111:
1052:main.c        ****         
 1770              		.loc 1 1052 0 discriminator 1
 1771 0096 FA20     		movs	r0, #250
 1772 0098 8000     		lsls	r0, r0, #2
 1773 009a FFF7FEFF 		bl	CyDelay
 1774              	.LVL148:
 1775 009e FAE7     		b	.L111
 1776              	.L113:
 1777              		.align	2
 1778              	.L112:
 1779 00a0 00000000 		.word	BRMS_Interrupt
 1780 00a4 00000000 		.word	HomeIsrHandler
 1781 00a8 00000000 		.word	RSTIsrHandler
 1782 00ac 00000000 		.word	SPI_SS_IsrHandler
 1783 00b0 00004842 		.word	1112014848
 1784 00b4 00000000 		.word	Jog
 1785 00b8 00000000 		.word	.LANCHOR0
 1786 00bc FFFFFF00 		.word	16777215
 1787 00c0 00000000 		.word	LastPosition
 1788 00c4 00000000 		.word	ConfigState
 1789 00c8 00000000 		.word	ConfigSequence
 1790 00cc 00000000 		.word	ChecksumErrors
 1791              		.cfi_endproc
 1792              	.LFE42:
 1793              		.size	main, .-main
 1794              		.comm	txMessageState,1,1
 1795              		.comm	txMessage,30,4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 59


 1796              		.comm	rxMessage,30,4
 1797              		.comm	LastMessageTimeSeconds,4,4
 1798              		.comm	CurrentI2Cinbuf,20,4
 1799              		.comm	PWM,4,4
 1800              		.comm	Current,2,2
 1801              		.comm	ChecksumErrors,2,2
 1802              		.comm	ConfigSequence,1,1
 1803              		.comm	FaultState,1,1
 1804              		.comm	ConfigState,1,1
 1805              		.global	UptimeSeconds
 1806              		.global	UptimeMicrosecondsAccumulator
 1807              		.global	homingDone
 1808              		.comm	pwmMin,4,4
 1809              		.comm	pwmMax,4,4
 1810              		.comm	pwmLimit,4,4
 1811              		.comm	outMax_ITerm,4,4
 1812              		.comm	outMax_Total,4,4
 1813              		.global	refSampleTime
 1814              		.comm	kd,4,4
 1815              		.comm	ki,4,4
 1816              		.comm	kp,4,4
 1817              		.comm	LastPosition,4,4
 1818              		.comm	Position,4,4
 1819              		.comm	ITerm,4,4
 1820              		.comm	Output,4,4
 1821              		.comm	lastTime,4,4
 1822              		.comm	PID_EffSetDelta,1,1
 1823              		.comm	PID_EffectiveSetpoint,4,4
 1824              		.comm	PID_Setpoint,4,4
 1825              		.comm	PID_Was_Enabled,1,1
 1826              		.comm	PID_Enabled,1,1
 1827              		.comm	LastJog,1,1
 1828              		.comm	Jog,1,1
 1829              		.global	inAuto
 1830              		.data
 1831              		.align	2
 1832              		.set	.LANCHOR0,. + 0
 1833              		.type	homingDone, %object
 1834              		.size	homingDone, 1
 1835              	homingDone:
 1836 0000 01       		.byte	1
 1837 0001 000000   		.space	3
 1838              		.type	refSampleTime, %object
 1839              		.size	refSampleTime, 4
 1840              	refSampleTime:
 1841 0004 05000000 		.word	5
 1842              		.bss
 1843              		.align	3
 1844              		.set	.LANCHOR1,. + 0
 1845              		.type	UptimeSeconds, %object
 1846              		.size	UptimeSeconds, 8
 1847              	UptimeSeconds:
 1848 0000 00000000 		.space	8
 1848      00000000 
 1849              		.type	initialized.7241, %object
 1850              		.size	initialized.7241, 1
 1851              	initialized.7241:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 60


 1852 0008 00       		.space	1
 1853 0009 000000   		.space	3
 1854              		.type	RawPosition.7272, %object
 1855              		.size	RawPosition.7272, 4
 1856              	RawPosition.7272:
 1857 000c 00000000 		.space	4
 1858              		.type	result.7273, %object
 1859              		.size	result.7273, 4
 1860              	result.7273:
 1861 0010 00000000 		.space	4
 1862              		.type	inAuto, %object
 1863              		.size	inAuto, 1
 1864              	inAuto:
 1865 0014 00       		.space	1
 1866              		.type	initialized.7288, %object
 1867              		.size	initialized.7288, 1
 1868              	initialized.7288:
 1869 0015 00       		.space	1
 1870 0016 0000     		.space	2
 1871              		.type	DeltaPosition.7289, %object
 1872              		.size	DeltaPosition.7289, 4
 1873              	DeltaPosition.7289:
 1874 0018 00000000 		.space	4
 1875              		.type	CurrentIndexCount.7290, %object
 1876              		.size	CurrentIndexCount.7290, 4
 1877              	CurrentIndexCount.7290:
 1878 001c 00000000 		.space	4
 1879              		.type	UptimeMicrosecondsAccumulator, %object
 1880              		.size	UptimeMicrosecondsAccumulator, 8
 1881              	UptimeMicrosecondsAccumulator:
 1882 0020 00000000 		.space	8
 1882      00000000 
 1883              		.type	brmsTask.7300, %object
 1884              		.size	brmsTask.7300, 4
 1885              	brmsTask.7300:
 1886 0028 00000000 		.space	4
 1887              		.text
 1888              	.Letext0:
 1889              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1890              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1891              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1892              		.file 5 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1893              		.file 6 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1894              		.file 7 "Generated_Source\\PSoC4/Counter_1.h"
 1895              		.file 8 "Generated_Source\\PSoC4/Index_Counter_1.h"
 1896              		.file 9 "Generated_Source\\PSoC4/isr_home.h"
 1897              		.file 10 "Generated_Source\\PSoC4/HOME_IN.h"
 1898              		.file 11 "Generated_Source\\PSoC4/spi_ss.h"
 1899              		.file 12 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1900              		.file 13 "Generated_Source\\PSoC4/I2C.h"
 1901              		.file 14 "INA219.h"
 1902              		.file 15 "Generated_Source\\PSoC4/PWM_1.h"
 1903              		.file 16 "Generated_Source\\PSoC4/CyLFClk.h"
 1904              		.file 17 "Generated_Source\\PSoC4/HOME_OUT.h"
 1905              		.file 18 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1906              		.file 19 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1907              		.file 20 "Generated_Source\\PSoC4/LED.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 61


 1908              		.file 21 "Generated_Source\\PSoC4/isr_brms.h"
 1909              		.file 22 "Generated_Source\\PSoC4/isr_spi_ss.h"
 1910              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1911              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1912              		.section	.debug_info,"",%progbits
 1913              	.Ldebug_info0:
 1914 0000 12100000 		.4byte	0x1012
 1915 0004 0400     		.2byte	0x4
 1916 0006 00000000 		.4byte	.Ldebug_abbrev0
 1917 000a 04       		.byte	0x4
 1918 000b 01       		.uleb128 0x1
 1919 000c 43020000 		.4byte	.LASF177
 1920 0010 0C       		.byte	0xc
 1921 0011 12000000 		.4byte	.LASF178
 1922 0015 C5090000 		.4byte	.LASF179
 1923 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1924 001d 00000000 		.4byte	0
 1925 0021 00000000 		.4byte	.Ldebug_line0
 1926 0025 02       		.uleb128 0x2
 1927 0026 04       		.byte	0x4
 1928 0027 04       		.byte	0x4
 1929 0028 7A010000 		.4byte	.LASF0
 1930 002c 02       		.uleb128 0x2
 1931 002d 01       		.byte	0x1
 1932 002e 06       		.byte	0x6
 1933 002f D1080000 		.4byte	.LASF1
 1934 0033 02       		.uleb128 0x2
 1935 0034 01       		.byte	0x1
 1936 0035 08       		.byte	0x8
 1937 0036 17080000 		.4byte	.LASF2
 1938 003a 03       		.uleb128 0x3
 1939 003b D8040000 		.4byte	.LASF10
 1940 003f 02       		.byte	0x2
 1941 0040 29       		.byte	0x29
 1942 0041 45000000 		.4byte	0x45
 1943 0045 02       		.uleb128 0x2
 1944 0046 02       		.byte	0x2
 1945 0047 05       		.byte	0x5
 1946 0048 41060000 		.4byte	.LASF3
 1947 004c 02       		.uleb128 0x2
 1948 004d 02       		.byte	0x2
 1949 004e 07       		.byte	0x7
 1950 004f DD080000 		.4byte	.LASF4
 1951 0053 02       		.uleb128 0x2
 1952 0054 04       		.byte	0x4
 1953 0055 05       		.byte	0x5
 1954 0056 95060000 		.4byte	.LASF5
 1955 005a 02       		.uleb128 0x2
 1956 005b 04       		.byte	0x4
 1957 005c 07       		.byte	0x7
 1958 005d AE070000 		.4byte	.LASF6
 1959 0061 02       		.uleb128 0x2
 1960 0062 08       		.byte	0x8
 1961 0063 05       		.byte	0x5
 1962 0064 99040000 		.4byte	.LASF7
 1963 0068 02       		.uleb128 0x2
 1964 0069 08       		.byte	0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 62


 1965 006a 07       		.byte	0x7
 1966 006b B8010000 		.4byte	.LASF8
 1967 006f 04       		.uleb128 0x4
 1968 0070 04       		.byte	0x4
 1969 0071 05       		.byte	0x5
 1970 0072 696E7400 		.ascii	"int\000"
 1971 0076 02       		.uleb128 0x2
 1972 0077 04       		.byte	0x4
 1973 0078 07       		.byte	0x7
 1974 0079 61000000 		.4byte	.LASF9
 1975 007d 03       		.uleb128 0x3
 1976 007e A9010000 		.4byte	.LASF11
 1977 0082 03       		.byte	0x3
 1978 0083 20       		.byte	0x20
 1979 0084 3A000000 		.4byte	0x3a
 1980 0088 05       		.uleb128 0x5
 1981 0089 0C090000 		.4byte	.LASF12
 1982 008d 04       		.byte	0x4
 1983 008e FC01     		.2byte	0x1fc
 1984 0090 33000000 		.4byte	0x33
 1985 0094 05       		.uleb128 0x5
 1986 0095 29040000 		.4byte	.LASF13
 1987 0099 04       		.byte	0x4
 1988 009a FD01     		.2byte	0x1fd
 1989 009c 4C000000 		.4byte	0x4c
 1990 00a0 05       		.uleb128 0x5
 1991 00a1 2B050000 		.4byte	.LASF14
 1992 00a5 04       		.byte	0x4
 1993 00a6 FE01     		.2byte	0x1fe
 1994 00a8 5A000000 		.4byte	0x5a
 1995 00ac 05       		.uleb128 0x5
 1996 00ad 30040000 		.4byte	.LASF15
 1997 00b1 04       		.byte	0x4
 1998 00b2 FF01     		.2byte	0x1ff
 1999 00b4 2C000000 		.4byte	0x2c
 2000 00b8 05       		.uleb128 0x5
 2001 00b9 A0000000 		.4byte	.LASF16
 2002 00bd 04       		.byte	0x4
 2003 00be 0002     		.2byte	0x200
 2004 00c0 45000000 		.4byte	0x45
 2005 00c4 05       		.uleb128 0x5
 2006 00c5 A3010000 		.4byte	.LASF17
 2007 00c9 04       		.byte	0x4
 2008 00ca 0102     		.2byte	0x201
 2009 00cc 53000000 		.4byte	0x53
 2010 00d0 02       		.uleb128 0x2
 2011 00d1 08       		.byte	0x8
 2012 00d2 04       		.byte	0x4
 2013 00d3 12090000 		.4byte	.LASF18
 2014 00d7 05       		.uleb128 0x5
 2015 00d8 71070000 		.4byte	.LASF19
 2016 00dc 04       		.byte	0x4
 2017 00dd 0802     		.2byte	0x208
 2018 00df 68000000 		.4byte	0x68
 2019 00e3 02       		.uleb128 0x2
 2020 00e4 01       		.byte	0x1
 2021 00e5 08       		.byte	0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 63


 2022 00e6 E6030000 		.4byte	.LASF20
 2023 00ea 06       		.uleb128 0x6
 2024 00eb 88000000 		.4byte	0x88
 2025 00ef 06       		.uleb128 0x6
 2026 00f0 94000000 		.4byte	0x94
 2027 00f4 05       		.uleb128 0x5
 2028 00f5 0A060000 		.4byte	.LASF21
 2029 00f9 04       		.byte	0x4
 2030 00fa A802     		.2byte	0x2a8
 2031 00fc 00010000 		.4byte	0x100
 2032 0100 06       		.uleb128 0x6
 2033 0101 A0000000 		.4byte	0xa0
 2034 0105 02       		.uleb128 0x2
 2035 0106 08       		.byte	0x8
 2036 0107 04       		.byte	0x4
 2037 0108 F0050000 		.4byte	.LASF22
 2038 010c 02       		.uleb128 0x2
 2039 010d 04       		.byte	0x4
 2040 010e 07       		.byte	0x7
 2041 010f A5070000 		.4byte	.LASF23
 2042 0113 07       		.uleb128 0x7
 2043 0114 01       		.byte	0x1
 2044 0115 33000000 		.4byte	0x33
 2045 0119 01       		.byte	0x1
 2046 011a 7F       		.byte	0x7f
 2047 011b 38010000 		.4byte	0x138
 2048 011f 08       		.uleb128 0x8
 2049 0120 10060000 		.4byte	.LASF24
 2050 0124 00       		.byte	0
 2051 0125 08       		.uleb128 0x8
 2052 0126 4E000000 		.4byte	.LASF25
 2053 012a 01       		.byte	0x1
 2054 012b 08       		.uleb128 0x8
 2055 012c 11010000 		.4byte	.LASF26
 2056 0130 02       		.byte	0x2
 2057 0131 08       		.uleb128 0x8
 2058 0132 9E060000 		.4byte	.LASF27
 2059 0136 03       		.byte	0x3
 2060 0137 00       		.byte	0
 2061 0138 03       		.uleb128 0x3
 2062 0139 BA050000 		.4byte	.LASF28
 2063 013d 01       		.byte	0x1
 2064 013e 84       		.byte	0x84
 2065 013f 13010000 		.4byte	0x113
 2066 0143 07       		.uleb128 0x7
 2067 0144 01       		.byte	0x1
 2068 0145 33000000 		.4byte	0x33
 2069 0149 01       		.byte	0x1
 2070 014a 89       		.byte	0x89
 2071 014b 86010000 		.4byte	0x186
 2072 014f 08       		.uleb128 0x8
 2073 0150 5E040000 		.4byte	.LASF29
 2074 0154 00       		.byte	0
 2075 0155 08       		.uleb128 0x8
 2076 0156 1F030000 		.4byte	.LASF30
 2077 015a 01       		.byte	0x1
 2078 015b 08       		.uleb128 0x8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 64


 2079 015c 44000000 		.4byte	.LASF31
 2080 0160 02       		.byte	0x2
 2081 0161 08       		.uleb128 0x8
 2082 0162 43040000 		.4byte	.LASF32
 2083 0166 04       		.byte	0x4
 2084 0167 08       		.uleb128 0x8
 2085 0168 33060000 		.4byte	.LASF33
 2086 016c 08       		.byte	0x8
 2087 016d 08       		.uleb128 0x8
 2088 016e C1040000 		.4byte	.LASF34
 2089 0172 10       		.byte	0x10
 2090 0173 08       		.uleb128 0x8
 2091 0174 5E080000 		.4byte	.LASF35
 2092 0178 20       		.byte	0x20
 2093 0179 08       		.uleb128 0x8
 2094 017a 63080000 		.4byte	.LASF36
 2095 017e 40       		.byte	0x40
 2096 017f 08       		.uleb128 0x8
 2097 0180 68080000 		.4byte	.LASF37
 2098 0184 80       		.byte	0x80
 2099 0185 00       		.byte	0
 2100 0186 03       		.uleb128 0x3
 2101 0187 A1090000 		.4byte	.LASF38
 2102 018b 01       		.byte	0x1
 2103 018c 93       		.byte	0x93
 2104 018d 43010000 		.4byte	0x143
 2105 0191 07       		.uleb128 0x7
 2106 0192 01       		.byte	0x1
 2107 0193 33000000 		.4byte	0x33
 2108 0197 01       		.byte	0x1
 2109 0198 B0       		.byte	0xb0
 2110 0199 BC010000 		.4byte	0x1bc
 2111 019d 08       		.uleb128 0x8
 2112 019e 35080000 		.4byte	.LASF39
 2113 01a2 00       		.byte	0
 2114 01a3 08       		.uleb128 0x8
 2115 01a4 4D090000 		.4byte	.LASF40
 2116 01a8 01       		.byte	0x1
 2117 01a9 08       		.uleb128 0x8
 2118 01aa 68070000 		.4byte	.LASF41
 2119 01ae 02       		.byte	0x2
 2120 01af 08       		.uleb128 0x8
 2121 01b0 41080000 		.4byte	.LASF42
 2122 01b4 03       		.byte	0x3
 2123 01b5 08       		.uleb128 0x8
 2124 01b6 90070000 		.4byte	.LASF43
 2125 01ba 04       		.byte	0x4
 2126 01bb 00       		.byte	0
 2127 01bc 03       		.uleb128 0x3
 2128 01bd 47010000 		.4byte	.LASF44
 2129 01c1 01       		.byte	0x1
 2130 01c2 B6       		.byte	0xb6
 2131 01c3 91010000 		.4byte	0x191
 2132 01c7 09       		.uleb128 0x9
 2133 01c8 03       		.byte	0x3
 2134 01c9 01       		.byte	0x1
 2135 01ca BB       		.byte	0xbb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 65


 2136 01cb F4010000 		.4byte	0x1f4
 2137 01cf 0A       		.uleb128 0xa
 2138 01d0 93010000 		.4byte	.LASF45
 2139 01d4 01       		.byte	0x1
 2140 01d5 BC       		.byte	0xbc
 2141 01d6 88000000 		.4byte	0x88
 2142 01da 00       		.byte	0
 2143 01db 0A       		.uleb128 0xa
 2144 01dc 26050000 		.4byte	.LASF46
 2145 01e0 01       		.byte	0x1
 2146 01e1 BD       		.byte	0xbd
 2147 01e2 88000000 		.4byte	0x88
 2148 01e6 01       		.byte	0x1
 2149 01e7 0A       		.uleb128 0xa
 2150 01e8 35040000 		.4byte	.LASF47
 2151 01ec 01       		.byte	0x1
 2152 01ed BE       		.byte	0xbe
 2153 01ee 88000000 		.4byte	0x88
 2154 01f2 02       		.byte	0x2
 2155 01f3 00       		.byte	0
 2156 01f4 03       		.uleb128 0x3
 2157 01f5 A4030000 		.4byte	.LASF48
 2158 01f9 01       		.byte	0x1
 2159 01fa BF       		.byte	0xbf
 2160 01fb C7010000 		.4byte	0x1c7
 2161 01ff 09       		.uleb128 0x9
 2162 0200 13       		.byte	0x13
 2163 0201 01       		.byte	0x1
 2164 0202 C2       		.byte	0xc2
 2165 0203 7D020000 		.4byte	0x27d
 2166 0207 0A       		.uleb128 0xa
 2167 0208 93010000 		.4byte	.LASF45
 2168 020c 01       		.byte	0x1
 2169 020d C3       		.byte	0xc3
 2170 020e 88000000 		.4byte	0x88
 2171 0212 00       		.byte	0
 2172 0213 0A       		.uleb128 0xa
 2173 0214 26050000 		.4byte	.LASF46
 2174 0218 01       		.byte	0x1
 2175 0219 C4       		.byte	0xc4
 2176 021a 88000000 		.4byte	0x88
 2177 021e 01       		.byte	0x1
 2178 021f 0A       		.uleb128 0xa
 2179 0220 35040000 		.4byte	.LASF47
 2180 0224 01       		.byte	0x1
 2181 0225 C5       		.byte	0xc5
 2182 0226 88000000 		.4byte	0x88
 2183 022a 02       		.byte	0x2
 2184 022b 0A       		.uleb128 0xa
 2185 022c 1C060000 		.4byte	.LASF49
 2186 0230 01       		.byte	0x1
 2187 0231 C6       		.byte	0xc6
 2188 0232 88000000 		.4byte	0x88
 2189 0236 03       		.byte	0x3
 2190 0237 0B       		.uleb128 0xb
 2191 0238 4B7000   		.ascii	"Kp\000"
 2192 023b 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 66


 2193 023c C7       		.byte	0xc7
 2194 023d 25000000 		.4byte	0x25
 2195 0241 04       		.byte	0x4
 2196 0242 0B       		.uleb128 0xb
 2197 0243 4B6900   		.ascii	"Ki\000"
 2198 0246 01       		.byte	0x1
 2199 0247 C8       		.byte	0xc8
 2200 0248 25000000 		.4byte	0x25
 2201 024c 08       		.byte	0x8
 2202 024d 0B       		.uleb128 0xb
 2203 024e 4B6400   		.ascii	"Kd\000"
 2204 0251 01       		.byte	0x1
 2205 0252 C9       		.byte	0xc9
 2206 0253 25000000 		.4byte	0x25
 2207 0257 0C       		.byte	0xc
 2208 0258 0A       		.uleb128 0xa
 2209 0259 B4080000 		.4byte	.LASF50
 2210 025d 01       		.byte	0x1
 2211 025e CA       		.byte	0xca
 2212 025f 88000000 		.4byte	0x88
 2213 0263 10       		.byte	0x10
 2214 0264 0A       		.uleb128 0xa
 2215 0265 D1020000 		.4byte	.LASF51
 2216 0269 01       		.byte	0x1
 2217 026a CB       		.byte	0xcb
 2218 026b 88000000 		.4byte	0x88
 2219 026f 11       		.byte	0x11
 2220 0270 0A       		.uleb128 0xa
 2221 0271 38000000 		.4byte	.LASF52
 2222 0275 01       		.byte	0x1
 2223 0276 CC       		.byte	0xcc
 2224 0277 88000000 		.4byte	0x88
 2225 027b 12       		.byte	0x12
 2226 027c 00       		.byte	0
 2227 027d 03       		.uleb128 0x3
 2228 027e 55060000 		.4byte	.LASF53
 2229 0282 01       		.byte	0x1
 2230 0283 CD       		.byte	0xcd
 2231 0284 FF010000 		.4byte	0x1ff
 2232 0288 09       		.uleb128 0x9
 2233 0289 0A       		.byte	0xa
 2234 028a 01       		.byte	0x1
 2235 028b D0       		.byte	0xd0
 2236 028c E5020000 		.4byte	0x2e5
 2237 0290 0A       		.uleb128 0xa
 2238 0291 93010000 		.4byte	.LASF45
 2239 0295 01       		.byte	0x1
 2240 0296 D1       		.byte	0xd1
 2241 0297 88000000 		.4byte	0x88
 2242 029b 00       		.byte	0
 2243 029c 0A       		.uleb128 0xa
 2244 029d 26050000 		.4byte	.LASF46
 2245 02a1 01       		.byte	0x1
 2246 02a2 D2       		.byte	0xd2
 2247 02a3 88000000 		.4byte	0x88
 2248 02a7 01       		.byte	0x1
 2249 02a8 0A       		.uleb128 0xa
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 67


 2250 02a9 35040000 		.4byte	.LASF47
 2251 02ad 01       		.byte	0x1
 2252 02ae D3       		.byte	0xd3
 2253 02af 88000000 		.4byte	0x88
 2254 02b3 02       		.byte	0x2
 2255 02b4 0A       		.uleb128 0xa
 2256 02b5 12020000 		.4byte	.LASF54
 2257 02b9 01       		.byte	0x1
 2258 02ba D4       		.byte	0xd4
 2259 02bb 88000000 		.4byte	0x88
 2260 02bf 03       		.byte	0x3
 2261 02c0 0A       		.uleb128 0xa
 2262 02c1 18070000 		.4byte	.LASF55
 2263 02c5 01       		.byte	0x1
 2264 02c6 D5       		.byte	0xd5
 2265 02c7 C4000000 		.4byte	0xc4
 2266 02cb 04       		.byte	0x4
 2267 02cc 0B       		.uleb128 0xb
 2268 02cd 6A6F6700 		.ascii	"jog\000"
 2269 02d1 01       		.byte	0x1
 2270 02d2 D6       		.byte	0xd6
 2271 02d3 AC000000 		.4byte	0xac
 2272 02d7 08       		.byte	0x8
 2273 02d8 0A       		.uleb128 0xa
 2274 02d9 94000000 		.4byte	.LASF56
 2275 02dd 01       		.byte	0x1
 2276 02de D7       		.byte	0xd7
 2277 02df 88000000 		.4byte	0x88
 2278 02e3 09       		.byte	0x9
 2279 02e4 00       		.byte	0
 2280 02e5 03       		.uleb128 0x3
 2281 02e6 5B010000 		.4byte	.LASF57
 2282 02ea 01       		.byte	0x1
 2283 02eb D8       		.byte	0xd8
 2284 02ec 88020000 		.4byte	0x288
 2285 02f0 09       		.uleb128 0x9
 2286 02f1 07       		.byte	0x7
 2287 02f2 01       		.byte	0x1
 2288 02f3 DB       		.byte	0xdb
 2289 02f4 29030000 		.4byte	0x329
 2290 02f8 0A       		.uleb128 0xa
 2291 02f9 93010000 		.4byte	.LASF45
 2292 02fd 01       		.byte	0x1
 2293 02fe DC       		.byte	0xdc
 2294 02ff 88000000 		.4byte	0x88
 2295 0303 00       		.byte	0
 2296 0304 0A       		.uleb128 0xa
 2297 0305 26050000 		.4byte	.LASF46
 2298 0309 01       		.byte	0x1
 2299 030a DD       		.byte	0xdd
 2300 030b 88000000 		.4byte	0x88
 2301 030f 01       		.byte	0x1
 2302 0310 0A       		.uleb128 0xa
 2303 0311 35040000 		.4byte	.LASF47
 2304 0315 01       		.byte	0x1
 2305 0316 DE       		.byte	0xde
 2306 0317 88000000 		.4byte	0x88
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 68


 2307 031b 02       		.byte	0x2
 2308 031c 0A       		.uleb128 0xa
 2309 031d 18070000 		.4byte	.LASF55
 2310 0321 01       		.byte	0x1
 2311 0322 DF       		.byte	0xdf
 2312 0323 C4000000 		.4byte	0xc4
 2313 0327 03       		.byte	0x3
 2314 0328 00       		.byte	0
 2315 0329 03       		.uleb128 0x3
 2316 032a 34010000 		.4byte	.LASF58
 2317 032e 01       		.byte	0x1
 2318 032f E0       		.byte	0xe0
 2319 0330 F0020000 		.4byte	0x2f0
 2320 0334 0C       		.uleb128 0xc
 2321 0335 1E       		.byte	0x1e
 2322 0336 01       		.byte	0x1
 2323 0337 E4       		.byte	0xe4
 2324 0338 74030000 		.4byte	0x374
 2325 033c 0D       		.uleb128 0xd
 2326 033d 62756600 		.ascii	"buf\000"
 2327 0341 01       		.byte	0x1
 2328 0342 E5       		.byte	0xe5
 2329 0343 74030000 		.4byte	0x374
 2330 0347 0E       		.uleb128 0xe
 2331 0348 A4060000 		.4byte	.LASF59
 2332 034c 01       		.byte	0x1
 2333 034d E6       		.byte	0xe6
 2334 034e F4010000 		.4byte	0x1f4
 2335 0352 0E       		.uleb128 0xe
 2336 0353 2C060000 		.4byte	.LASF60
 2337 0357 01       		.byte	0x1
 2338 0358 E7       		.byte	0xe7
 2339 0359 7D020000 		.4byte	0x27d
 2340 035d 0E       		.uleb128 0xe
 2341 035e 3C040000 		.4byte	.LASF61
 2342 0362 01       		.byte	0x1
 2343 0363 E8       		.byte	0xe8
 2344 0364 E5020000 		.4byte	0x2e5
 2345 0368 0E       		.uleb128 0xe
 2346 0369 9C010000 		.4byte	.LASF62
 2347 036d 01       		.byte	0x1
 2348 036e E9       		.byte	0xe9
 2349 036f 29030000 		.4byte	0x329
 2350 0373 00       		.byte	0
 2351 0374 0F       		.uleb128 0xf
 2352 0375 88000000 		.4byte	0x88
 2353 0379 84030000 		.4byte	0x384
 2354 037d 10       		.uleb128 0x10
 2355 037e 0C010000 		.4byte	0x10c
 2356 0382 1D       		.byte	0x1d
 2357 0383 00       		.byte	0
 2358 0384 09       		.uleb128 0x9
 2359 0385 15       		.byte	0x15
 2360 0386 01       		.byte	0x1
 2361 0387 ED       		.byte	0xed
 2362 0388 29040000 		.4byte	0x429
 2363 038c 0A       		.uleb128 0xa
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 69


 2364 038d 93010000 		.4byte	.LASF45
 2365 0391 01       		.byte	0x1
 2366 0392 EE       		.byte	0xee
 2367 0393 88000000 		.4byte	0x88
 2368 0397 00       		.byte	0
 2369 0398 0A       		.uleb128 0xa
 2370 0399 89030000 		.4byte	.LASF63
 2371 039d 01       		.byte	0x1
 2372 039e EF       		.byte	0xef
 2373 039f 88000000 		.4byte	0x88
 2374 03a3 01       		.byte	0x1
 2375 03a4 0A       		.uleb128 0xa
 2376 03a5 92030000 		.4byte	.LASF64
 2377 03a9 01       		.byte	0x1
 2378 03aa F0       		.byte	0xf0
 2379 03ab 88000000 		.4byte	0x88
 2380 03af 02       		.byte	0x2
 2381 03b0 0A       		.uleb128 0xa
 2382 03b1 9B030000 		.4byte	.LASF65
 2383 03b5 01       		.byte	0x1
 2384 03b6 F1       		.byte	0xf1
 2385 03b7 88000000 		.4byte	0x88
 2386 03bb 03       		.byte	0x3
 2387 03bc 0A       		.uleb128 0xa
 2388 03bd 26050000 		.4byte	.LASF46
 2389 03c1 01       		.byte	0x1
 2390 03c2 F2       		.byte	0xf2
 2391 03c3 88000000 		.4byte	0x88
 2392 03c7 04       		.byte	0x4
 2393 03c8 0A       		.uleb128 0xa
 2394 03c9 35040000 		.4byte	.LASF47
 2395 03cd 01       		.byte	0x1
 2396 03ce F3       		.byte	0xf3
 2397 03cf 88000000 		.4byte	0x88
 2398 03d3 05       		.byte	0x5
 2399 03d4 0A       		.uleb128 0xa
 2400 03d5 AE080000 		.4byte	.LASF66
 2401 03d9 01       		.byte	0x1
 2402 03da F4       		.byte	0xf4
 2403 03db 88000000 		.4byte	0x88
 2404 03df 06       		.byte	0x6
 2405 03e0 0A       		.uleb128 0xa
 2406 03e1 84090000 		.4byte	.LASF67
 2407 03e5 01       		.byte	0x1
 2408 03e6 F5       		.byte	0xf5
 2409 03e7 88000000 		.4byte	0x88
 2410 03eb 07       		.byte	0x7
 2411 03ec 0A       		.uleb128 0xa
 2412 03ed 1C060000 		.4byte	.LASF49
 2413 03f1 01       		.byte	0x1
 2414 03f2 F6       		.byte	0xf6
 2415 03f3 88000000 		.4byte	0x88
 2416 03f7 08       		.byte	0x8
 2417 03f8 0A       		.uleb128 0xa
 2418 03f9 16050000 		.4byte	.LASF68
 2419 03fd 01       		.byte	0x1
 2420 03fe F7       		.byte	0xf7
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 70


 2421 03ff 94000000 		.4byte	0x94
 2422 0403 09       		.byte	0x9
 2423 0404 0A       		.uleb128 0xa
 2424 0405 04090000 		.4byte	.LASF69
 2425 0409 01       		.byte	0x1
 2426 040a F8       		.byte	0xf8
 2427 040b B8000000 		.4byte	0xb8
 2428 040f 0B       		.byte	0xb
 2429 0410 0A       		.uleb128 0xa
 2430 0411 98090000 		.4byte	.LASF70
 2431 0415 01       		.byte	0x1
 2432 0416 F9       		.byte	0xf9
 2433 0417 C4000000 		.4byte	0xc4
 2434 041b 0D       		.byte	0xd
 2435 041c 0B       		.uleb128 0xb
 2436 041d 70776D00 		.ascii	"pwm\000"
 2437 0421 01       		.byte	0x1
 2438 0422 FA       		.byte	0xfa
 2439 0423 25000000 		.4byte	0x25
 2440 0427 11       		.byte	0x11
 2441 0428 00       		.byte	0
 2442 0429 03       		.uleb128 0x3
 2443 042a 0C070000 		.4byte	.LASF71
 2444 042e 01       		.byte	0x1
 2445 042f FB       		.byte	0xfb
 2446 0430 84030000 		.4byte	0x384
 2447 0434 0C       		.uleb128 0xc
 2448 0435 1E       		.byte	0x1e
 2449 0436 01       		.byte	0x1
 2450 0437 FE       		.byte	0xfe
 2451 0438 54040000 		.4byte	0x454
 2452 043c 0D       		.uleb128 0xd
 2453 043d 62756600 		.ascii	"buf\000"
 2454 0441 01       		.byte	0x1
 2455 0442 FF       		.byte	0xff
 2456 0443 74030000 		.4byte	0x374
 2457 0447 11       		.uleb128 0x11
 2458 0448 6D736700 		.ascii	"msg\000"
 2459 044c 01       		.byte	0x1
 2460 044d 0001     		.2byte	0x100
 2461 044f 29040000 		.4byte	0x429
 2462 0453 00       		.byte	0
 2463 0454 12       		.uleb128 0x12
 2464 0455 01       		.byte	0x1
 2465 0456 33000000 		.4byte	0x33
 2466 045a 01       		.byte	0x1
 2467 045b 0401     		.2byte	0x104
 2468 045d 6E040000 		.4byte	0x46e
 2469 0461 08       		.uleb128 0x8
 2470 0462 25000000 		.4byte	.LASF72
 2471 0466 00       		.byte	0
 2472 0467 08       		.uleb128 0x8
 2473 0468 32050000 		.4byte	.LASF73
 2474 046c 01       		.byte	0x1
 2475 046d 00       		.byte	0
 2476 046e 05       		.uleb128 0x5
 2477 046f DC000000 		.4byte	.LASF74
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 71


 2478 0473 01       		.byte	0x1
 2479 0474 0701     		.2byte	0x107
 2480 0476 54040000 		.4byte	0x454
 2481 047a 13       		.uleb128 0x13
 2482 047b 8A090000 		.4byte	.LASF75
 2483 047f 01       		.byte	0x1
 2484 0480 8D04     		.2byte	0x48d
 2485 0482 00000000 		.4byte	.LFB44
 2486 0486 24000000 		.4byte	.LFE44-.LFB44
 2487 048a 01       		.uleb128 0x1
 2488 048b 9C       		.byte	0x9c
 2489 048c C5040000 		.4byte	0x4c5
 2490 0490 14       		.uleb128 0x14
 2491 0491 06000000 		.4byte	.LVL0
 2492 0495 610E0000 		.4byte	0xe61
 2493 0499 14       		.uleb128 0x14
 2494 049a 0A000000 		.4byte	.LVL1
 2495 049e 6C0E0000 		.4byte	0xe6c
 2496 04a2 15       		.uleb128 0x15
 2497 04a3 10000000 		.4byte	.LVL2
 2498 04a7 770E0000 		.4byte	0xe77
 2499 04ab B5040000 		.4byte	0x4b5
 2500 04af 16       		.uleb128 0x16
 2501 04b0 01       		.uleb128 0x1
 2502 04b1 50       		.byte	0x50
 2503 04b2 01       		.uleb128 0x1
 2504 04b3 30       		.byte	0x30
 2505 04b4 00       		.byte	0
 2506 04b5 17       		.uleb128 0x17
 2507 04b6 16000000 		.4byte	.LVL3
 2508 04ba 820E0000 		.4byte	0xe82
 2509 04be 16       		.uleb128 0x16
 2510 04bf 01       		.uleb128 0x1
 2511 04c0 50       		.byte	0x50
 2512 04c1 01       		.uleb128 0x1
 2513 04c2 30       		.byte	0x30
 2514 04c3 00       		.byte	0
 2515 04c4 00       		.byte	0
 2516 04c5 13       		.uleb128 0x13
 2517 04c6 CD000000 		.4byte	.LASF76
 2518 04ca 01       		.byte	0x1
 2519 04cb AB04     		.2byte	0x4ab
 2520 04cd 00000000 		.4byte	.LFB45
 2521 04d1 1C000000 		.4byte	.LFE45-.LFB45
 2522 04d5 01       		.uleb128 0x1
 2523 04d6 9C       		.byte	0x9c
 2524 04d7 FD040000 		.4byte	0x4fd
 2525 04db 14       		.uleb128 0x14
 2526 04dc 06000000 		.4byte	.LVL4
 2527 04e0 8D0E0000 		.4byte	0xe8d
 2528 04e4 14       		.uleb128 0x14
 2529 04e5 0A000000 		.4byte	.LVL5
 2530 04e9 980E0000 		.4byte	0xe98
 2531 04ed 17       		.uleb128 0x17
 2532 04ee 10000000 		.4byte	.LVL6
 2533 04f2 770E0000 		.4byte	0xe77
 2534 04f6 16       		.uleb128 0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 72


 2535 04f7 01       		.uleb128 0x1
 2536 04f8 50       		.byte	0x50
 2537 04f9 01       		.uleb128 0x1
 2538 04fa 30       		.byte	0x30
 2539 04fb 00       		.byte	0
 2540 04fc 00       		.byte	0
 2541 04fd 13       		.uleb128 0x13
 2542 04fe 89050000 		.4byte	.LASF77
 2543 0502 01       		.byte	0x1
 2544 0503 C504     		.2byte	0x4c5
 2545 0505 00000000 		.4byte	.LFB46
 2546 0509 60000000 		.4byte	.LFE46-.LFB46
 2547 050d 01       		.uleb128 0x1
 2548 050e 9C       		.byte	0x9c
 2549 050f 70050000 		.4byte	0x570
 2550 0513 18       		.uleb128 0x18
 2551 0514 6900     		.ascii	"i\000"
 2552 0516 01       		.byte	0x1
 2553 0517 C704     		.2byte	0x4c7
 2554 0519 A0000000 		.4byte	0xa0
 2555 051d 00000000 		.4byte	.LLST0
 2556 0521 14       		.uleb128 0x14
 2557 0522 06000000 		.4byte	.LVL7
 2558 0526 A30E0000 		.4byte	0xea3
 2559 052a 14       		.uleb128 0x14
 2560 052b 0A000000 		.4byte	.LVL8
 2561 052f AE0E0000 		.4byte	0xeae
 2562 0533 15       		.uleb128 0x15
 2563 0534 2A000000 		.4byte	.LVL9
 2564 0538 B90E0000 		.4byte	0xeb9
 2565 053c 54050000 		.4byte	0x554
 2566 0540 16       		.uleb128 0x16
 2567 0541 01       		.uleb128 0x1
 2568 0542 50       		.byte	0x50
 2569 0543 05       		.uleb128 0x5
 2570 0544 03       		.byte	0x3
 2571 0545 00000000 		.4byte	txMessage
 2572 0549 16       		.uleb128 0x16
 2573 054a 01       		.uleb128 0x1
 2574 054b 51       		.byte	0x51
 2575 054c 01       		.uleb128 0x1
 2576 054d 30       		.byte	0x30
 2577 054e 16       		.uleb128 0x16
 2578 054f 01       		.uleb128 0x1
 2579 0550 52       		.byte	0x52
 2580 0551 01       		.uleb128 0x1
 2581 0552 4E       		.byte	0x4e
 2582 0553 00       		.byte	0
 2583 0554 14       		.uleb128 0x14
 2584 0555 32000000 		.4byte	.LVL11
 2585 0559 C20E0000 		.4byte	0xec2
 2586 055d 14       		.uleb128 0x14
 2587 055e 40000000 		.4byte	.LVL13
 2588 0562 CE0E0000 		.4byte	0xece
 2589 0566 14       		.uleb128 0x14
 2590 0567 44000000 		.4byte	.LVL14
 2591 056b DA0E0000 		.4byte	0xeda
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 73


 2592 056f 00       		.byte	0
 2593 0570 13       		.uleb128 0x13
 2594 0571 6E010000 		.4byte	.LASF78
 2595 0575 01       		.byte	0x1
 2596 0576 2001     		.2byte	0x120
 2597 0578 00000000 		.4byte	.LFB32
 2598 057c 1C000000 		.4byte	.LFE32-.LFB32
 2599 0580 01       		.uleb128 0x1
 2600 0581 9C       		.byte	0x9c
 2601 0582 97050000 		.4byte	0x597
 2602 0586 19       		.uleb128 0x19
 2603 0587 84090000 		.4byte	.LASF67
 2604 058b 01       		.byte	0x1
 2605 058c 2001     		.2byte	0x120
 2606 058e 86010000 		.4byte	0x186
 2607 0592 1F000000 		.4byte	.LLST1
 2608 0596 00       		.byte	0
 2609 0597 13       		.uleb128 0x13
 2610 0598 F4000000 		.4byte	.LASF79
 2611 059c 01       		.byte	0x1
 2612 059d 3B01     		.2byte	0x13b
 2613 059f 00000000 		.4byte	.LFB33
 2614 05a3 1C000000 		.4byte	.LFE33-.LFB33
 2615 05a7 01       		.uleb128 0x1
 2616 05a8 9C       		.byte	0x9c
 2617 05a9 BC050000 		.4byte	0x5bc
 2618 05ad 1A       		.uleb128 0x1a
 2619 05ae 84090000 		.4byte	.LASF67
 2620 05b2 01       		.byte	0x1
 2621 05b3 3B01     		.2byte	0x13b
 2622 05b5 86010000 		.4byte	0x186
 2623 05b9 01       		.uleb128 0x1
 2624 05ba 50       		.byte	0x50
 2625 05bb 00       		.byte	0
 2626 05bc 1B       		.uleb128 0x1b
 2627 05bd 9B050000 		.4byte	.LASF80
 2628 05c1 01       		.byte	0x1
 2629 05c2 5501     		.2byte	0x155
 2630 05c4 00000000 		.4byte	.LFB34
 2631 05c8 34000000 		.4byte	.LFE34-.LFB34
 2632 05cc 01       		.uleb128 0x1
 2633 05cd 9C       		.byte	0x9c
 2634 05ce 1E060000 		.4byte	0x61e
 2635 05d2 1C       		.uleb128 0x1c
 2636 05d3 2B020000 		.4byte	.LASF81
 2637 05d7 01       		.byte	0x1
 2638 05d8 5701     		.2byte	0x157
 2639 05da 1E060000 		.4byte	0x61e
 2640 05de 05       		.uleb128 0x5
 2641 05df 03       		.byte	0x3
 2642 05e0 08000000 		.4byte	initialized.7241
 2643 05e4 1D       		.uleb128 0x1d
 2644 05e5 67030000 		.4byte	.LASF180
 2645 05e9 01       		.byte	0x1
 2646 05ea 5801     		.2byte	0x158
 2647 05ec 25000000 		.4byte	0x25
 2648 05f0 14       		.uleb128 0x14
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 74


 2649 05f1 0E000000 		.4byte	.LVL19
 2650 05f5 E60E0000 		.4byte	0xee6
 2651 05f9 15       		.uleb128 0x15
 2652 05fa 14000000 		.4byte	.LVL20
 2653 05fe F10E0000 		.4byte	0xef1
 2654 0602 0D060000 		.4byte	0x60d
 2655 0606 16       		.uleb128 0x16
 2656 0607 01       		.uleb128 0x1
 2657 0608 50       		.byte	0x50
 2658 0609 02       		.uleb128 0x2
 2659 060a 08       		.byte	0x8
 2660 060b 40       		.byte	0x40
 2661 060c 00       		.byte	0
 2662 060d 17       		.uleb128 0x17
 2663 060e 20000000 		.4byte	.LVL21
 2664 0612 FC0E0000 		.4byte	0xefc
 2665 0616 16       		.uleb128 0x16
 2666 0617 01       		.uleb128 0x1
 2667 0618 50       		.byte	0x50
 2668 0619 02       		.uleb128 0x2
 2669 061a 08       		.byte	0x8
 2670 061b 40       		.byte	0x40
 2671 061c 00       		.byte	0
 2672 061d 00       		.byte	0
 2673 061e 02       		.uleb128 0x2
 2674 061f 01       		.byte	0x1
 2675 0620 02       		.byte	0x2
 2676 0621 19030000 		.4byte	.LASF82
 2677 0625 1B       		.uleb128 0x1b
 2678 0626 F7030000 		.4byte	.LASF83
 2679 062a 01       		.byte	0x1
 2680 062b 3002     		.2byte	0x230
 2681 062d 00000000 		.4byte	.LFB36
 2682 0631 40000000 		.4byte	.LFE36-.LFB36
 2683 0635 01       		.uleb128 0x1
 2684 0636 9C       		.byte	0x9c
 2685 0637 65060000 		.4byte	0x665
 2686 063b 19       		.uleb128 0x19
 2687 063c 7C080000 		.4byte	.LASF84
 2688 0640 01       		.byte	0x1
 2689 0641 3002     		.2byte	0x230
 2690 0643 25000000 		.4byte	0x25
 2691 0647 40000000 		.4byte	.LLST2
 2692 064b 1E       		.uleb128 0x1e
 2693 064c 35030000 		.4byte	.LASF85
 2694 0650 01       		.byte	0x1
 2695 0651 3202     		.2byte	0x232
 2696 0653 25000000 		.4byte	0x25
 2697 0657 6E000000 		.4byte	.LLST3
 2698 065b 14       		.uleb128 0x14
 2699 065c 36000000 		.4byte	.LVL30
 2700 0660 070F0000 		.4byte	0xf07
 2701 0664 00       		.byte	0
 2702 0665 1F       		.uleb128 0x1f
 2703 0666 2D070000 		.4byte	.LASF181
 2704 066a 01       		.byte	0x1
 2705 066b 4802     		.2byte	0x248
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 75


 2706 066d C4000000 		.4byte	0xc4
 2707 0671 00000000 		.4byte	.LFB37
 2708 0675 44000000 		.4byte	.LFE37-.LFB37
 2709 0679 01       		.uleb128 0x1
 2710 067a 9C       		.byte	0x9c
 2711 067b AD060000 		.4byte	0x6ad
 2712 067f 1C       		.uleb128 0x1c
 2713 0680 DD060000 		.4byte	.LASF86
 2714 0684 01       		.byte	0x1
 2715 0685 4A02     		.2byte	0x24a
 2716 0687 00010000 		.4byte	0x100
 2717 068b 05       		.uleb128 0x5
 2718 068c 03       		.byte	0x3
 2719 068d 0C000000 		.4byte	RawPosition.7272
 2720 0691 1C       		.uleb128 0x1c
 2721 0692 B1010000 		.4byte	.LASF87
 2722 0696 01       		.byte	0x1
 2723 0697 4B02     		.2byte	0x24b
 2724 0699 AD060000 		.4byte	0x6ad
 2725 069d 05       		.uleb128 0x5
 2726 069e 03       		.byte	0x3
 2727 069f 10000000 		.4byte	result.7273
 2728 06a3 14       		.uleb128 0x14
 2729 06a4 06000000 		.4byte	.LVL33
 2730 06a8 130F0000 		.4byte	0xf13
 2731 06ac 00       		.byte	0
 2732 06ad 06       		.uleb128 0x6
 2733 06ae C4000000 		.4byte	0xc4
 2734 06b2 1B       		.uleb128 0x1b
 2735 06b3 C9050000 		.4byte	.LASF88
 2736 06b7 01       		.byte	0x1
 2737 06b8 7601     		.2byte	0x176
 2738 06ba 00000000 		.4byte	.LFB35
 2739 06be D4020000 		.4byte	.LFE35-.LFB35
 2740 06c2 01       		.uleb128 0x1
 2741 06c3 9C       		.byte	0x9c
 2742 06c4 83070000 		.4byte	0x783
 2743 06c8 1E       		.uleb128 0x1e
 2744 06c9 35040000 		.4byte	.LASF47
 2745 06cd 01       		.byte	0x1
 2746 06ce 7801     		.2byte	0x178
 2747 06d0 BC010000 		.4byte	0x1bc
 2748 06d4 97000000 		.4byte	.LLST4
 2749 06d8 1E       		.uleb128 0x1e
 2750 06d9 26050000 		.4byte	.LASF46
 2751 06dd 01       		.byte	0x1
 2752 06de 7901     		.2byte	0x179
 2753 06e0 88000000 		.4byte	0x88
 2754 06e4 CC000000 		.4byte	.LLST5
 2755 06e8 18       		.uleb128 0x18
 2756 06e9 6900     		.ascii	"i\000"
 2757 06eb 01       		.byte	0x1
 2758 06ec 7A01     		.2byte	0x17a
 2759 06ee 88000000 		.4byte	0x88
 2760 06f2 F5000000 		.4byte	.LLST6
 2761 06f6 1E       		.uleb128 0x1e
 2762 06f7 93010000 		.4byte	.LASF45
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 76


 2763 06fb 01       		.byte	0x1
 2764 06fc 7B01     		.2byte	0x17b
 2765 06fe 88000000 		.4byte	0x88
 2766 0702 4C010000 		.4byte	.LLST7
 2767 0706 1E       		.uleb128 0x1e
 2768 0707 BD000000 		.4byte	.LASF89
 2769 070b 01       		.byte	0x1
 2770 070c 7C01     		.2byte	0x17c
 2771 070e 88000000 		.4byte	0x88
 2772 0712 B9010000 		.4byte	.LLST8
 2773 0716 15       		.uleb128 0x15
 2774 0717 28010000 		.4byte	.LVL58
 2775 071b 97050000 		.4byte	0x597
 2776 071f 29070000 		.4byte	0x729
 2777 0723 16       		.uleb128 0x16
 2778 0724 01       		.uleb128 0x1
 2779 0725 50       		.byte	0x50
 2780 0726 01       		.uleb128 0x1
 2781 0727 30       		.byte	0x30
 2782 0728 00       		.byte	0
 2783 0729 14       		.uleb128 0x14
 2784 072a 58010000 		.4byte	.LVL62
 2785 072e 65060000 		.4byte	0x665
 2786 0732 15       		.uleb128 0x15
 2787 0733 84010000 		.4byte	.LVL64
 2788 0737 820E0000 		.4byte	0xe82
 2789 073b 45070000 		.4byte	0x745
 2790 073f 16       		.uleb128 0x16
 2791 0740 01       		.uleb128 0x1
 2792 0741 50       		.byte	0x50
 2793 0742 01       		.uleb128 0x1
 2794 0743 30       		.byte	0x30
 2795 0744 00       		.byte	0
 2796 0745 14       		.uleb128 0x14
 2797 0746 AE010000 		.4byte	.LVL69
 2798 074a 770E0000 		.4byte	0xe77
 2799 074e 14       		.uleb128 0x14
 2800 074f CC010000 		.4byte	.LVL70
 2801 0753 65060000 		.4byte	0x665
 2802 0757 15       		.uleb128 0x15
 2803 0758 52020000 		.4byte	.LVL78
 2804 075c 1E0F0000 		.4byte	0xf1e
 2805 0760 73070000 		.4byte	0x773
 2806 0764 16       		.uleb128 0x16
 2807 0765 01       		.uleb128 0x1
 2808 0766 50       		.byte	0x50
 2809 0767 05       		.uleb128 0x5
 2810 0768 03       		.byte	0x3
 2811 0769 00000000 		.4byte	txMessage
 2812 076d 16       		.uleb128 0x16
 2813 076e 01       		.uleb128 0x1
 2814 076f 51       		.byte	0x51
 2815 0770 01       		.uleb128 0x1
 2816 0771 4E       		.byte	0x4e
 2817 0772 00       		.byte	0
 2818 0773 17       		.uleb128 0x17
 2819 0774 66020000 		.4byte	.LVL79
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 77


 2820 0778 97050000 		.4byte	0x597
 2821 077c 16       		.uleb128 0x16
 2822 077d 01       		.uleb128 0x1
 2823 077e 50       		.byte	0x50
 2824 077f 01       		.uleb128 0x1
 2825 0780 30       		.byte	0x30
 2826 0781 00       		.byte	0
 2827 0782 00       		.byte	0
 2828 0783 13       		.uleb128 0x13
 2829 0784 F0080000 		.4byte	.LASF90
 2830 0788 01       		.byte	0x1
 2831 0789 6B02     		.2byte	0x26b
 2832 078b 00000000 		.4byte	.LFB38
 2833 078f 30000000 		.4byte	.LFE38-.LFB38
 2834 0793 01       		.uleb128 0x1
 2835 0794 9C       		.byte	0x9c
 2836 0795 A3070000 		.4byte	0x7a3
 2837 0799 14       		.uleb128 0x14
 2838 079a 06000000 		.4byte	.LVL80
 2839 079e 65060000 		.4byte	0x665
 2840 07a2 00       		.byte	0
 2841 07a3 13       		.uleb128 0x13
 2842 07a4 EB030000 		.4byte	.LASF91
 2843 07a8 01       		.byte	0x1
 2844 07a9 B702     		.2byte	0x2b7
 2845 07ab 00000000 		.4byte	.LFB39
 2846 07af 24000000 		.4byte	.LFE39-.LFB39
 2847 07b3 01       		.uleb128 0x1
 2848 07b4 9C       		.byte	0x9c
 2849 07b5 E3070000 		.4byte	0x7e3
 2850 07b9 19       		.uleb128 0x19
 2851 07ba 84060000 		.4byte	.LASF92
 2852 07be 01       		.byte	0x1
 2853 07bf B702     		.2byte	0x2b7
 2854 07c1 A0000000 		.4byte	0xa0
 2855 07c5 D7010000 		.4byte	.LLST9
 2856 07c9 1E       		.uleb128 0x1e
 2857 07ca 59000000 		.4byte	.LASF93
 2858 07ce 01       		.byte	0x1
 2859 07cf B902     		.2byte	0x2b9
 2860 07d1 1E060000 		.4byte	0x61e
 2861 07d5 F8010000 		.4byte	.LLST10
 2862 07d9 14       		.uleb128 0x14
 2863 07da 1A000000 		.4byte	.LVL83
 2864 07de 83070000 		.4byte	0x783
 2865 07e2 00       		.byte	0
 2866 07e3 1B       		.uleb128 0x1b
 2867 07e4 FB020000 		.4byte	.LASF94
 2868 07e8 01       		.byte	0x1
 2869 07e9 CD02     		.2byte	0x2cd
 2870 07eb 00000000 		.4byte	.LFB40
 2871 07ef 1C000000 		.4byte	.LFE40-.LFB40
 2872 07f3 01       		.uleb128 0x1
 2873 07f4 9C       		.byte	0x9c
 2874 07f5 23080000 		.4byte	0x823
 2875 07f9 19       		.uleb128 0x19
 2876 07fa 03080000 		.4byte	.LASF95
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 78


 2877 07fe 01       		.byte	0x1
 2878 07ff CD02     		.2byte	0x2cd
 2879 0801 25000000 		.4byte	0x25
 2880 0805 1A020000 		.4byte	.LLST11
 2881 0809 1E       		.uleb128 0x1e
 2882 080a 7C080000 		.4byte	.LASF84
 2883 080e 01       		.byte	0x1
 2884 080f D102     		.2byte	0x2d1
 2885 0811 25000000 		.4byte	0x25
 2886 0815 3D020000 		.4byte	.LLST12
 2887 0819 14       		.uleb128 0x14
 2888 081a 14000000 		.4byte	.LVL88
 2889 081e 25060000 		.4byte	0x625
 2890 0822 00       		.byte	0
 2891 0823 1B       		.uleb128 0x1b
 2892 0824 82000000 		.4byte	.LASF96
 2893 0828 01       		.byte	0x1
 2894 0829 E102     		.2byte	0x2e1
 2895 082b 00000000 		.4byte	.LFB41
 2896 082f FC020000 		.4byte	.LFE41-.LFB41
 2897 0833 01       		.uleb128 0x1
 2898 0834 9C       		.byte	0x9c
 2899 0835 86090000 		.4byte	0x986
 2900 0839 1C       		.uleb128 0x1c
 2901 083a 2B020000 		.4byte	.LASF81
 2902 083e 01       		.byte	0x1
 2903 083f E302     		.2byte	0x2e3
 2904 0841 1E060000 		.4byte	0x61e
 2905 0845 05       		.uleb128 0x5
 2906 0846 03       		.byte	0x3
 2907 0847 15000000 		.4byte	initialized.7288
 2908 084b 1C       		.uleb128 0x1c
 2909 084c F7090000 		.4byte	.LASF97
 2910 0850 01       		.byte	0x1
 2911 0851 E502     		.2byte	0x2e5
 2912 0853 C4000000 		.4byte	0xc4
 2913 0857 05       		.uleb128 0x5
 2914 0858 03       		.byte	0x3
 2915 0859 18000000 		.4byte	DeltaPosition.7289
 2916 085d 1C       		.uleb128 0x1c
 2917 085e F1070000 		.4byte	.LASF98
 2918 0862 01       		.byte	0x1
 2919 0863 E602     		.2byte	0x2e6
 2920 0865 A0000000 		.4byte	0xa0
 2921 0869 05       		.uleb128 0x5
 2922 086a 03       		.byte	0x3
 2923 086b 1C000000 		.4byte	CurrentIndexCount.7290
 2924 086f 1E       		.uleb128 0x1e
 2925 0870 EE000000 		.4byte	.LASF99
 2926 0874 01       		.byte	0x1
 2927 0875 E702     		.2byte	0x2e7
 2928 0877 C4000000 		.4byte	0xc4
 2929 087b 50020000 		.4byte	.LLST13
 2930 087f 1E       		.uleb128 0x1e
 2931 0880 4B060000 		.4byte	.LASF100
 2932 0884 01       		.byte	0x1
 2933 0885 E702     		.2byte	0x2e7
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 79


 2934 0887 C4000000 		.4byte	0xc4
 2935 088b 63020000 		.4byte	.LLST14
 2936 088f 14       		.uleb128 0x14
 2937 0890 0E000000 		.4byte	.LVL89
 2938 0894 83070000 		.4byte	0x783
 2939 0898 15       		.uleb128 0x15
 2940 0899 14000000 		.4byte	.LVL90
 2941 089d A3070000 		.4byte	0x7a3
 2942 08a1 AB080000 		.4byte	0x8ab
 2943 08a5 16       		.uleb128 0x16
 2944 08a6 01       		.uleb128 0x1
 2945 08a7 50       		.byte	0x50
 2946 08a8 01       		.uleb128 0x1
 2947 08a9 30       		.byte	0x30
 2948 08aa 00       		.byte	0
 2949 08ab 15       		.uleb128 0x15
 2950 08ac 54000000 		.4byte	.LVL91
 2951 08b0 2A0F0000 		.4byte	0xf2a
 2952 08b4 C0080000 		.4byte	0x8c0
 2953 08b8 16       		.uleb128 0x16
 2954 08b9 01       		.uleb128 0x1
 2955 08ba 50       		.byte	0x50
 2956 08bb 03       		.uleb128 0x3
 2957 08bc 0A       		.byte	0xa
 2958 08bd 0008     		.2byte	0x800
 2959 08bf 00       		.byte	0
 2960 08c0 14       		.uleb128 0x14
 2961 08c1 74000000 		.4byte	.LVL92
 2962 08c5 25060000 		.4byte	0x625
 2963 08c9 15       		.uleb128 0x15
 2964 08ca 90000000 		.4byte	.LVL93
 2965 08ce 350F0000 		.4byte	0xf35
 2966 08d2 DC080000 		.4byte	0x8dc
 2967 08d6 16       		.uleb128 0x16
 2968 08d7 01       		.uleb128 0x1
 2969 08d8 50       		.byte	0x50
 2970 08d9 01       		.uleb128 0x1
 2971 08da 36       		.byte	0x36
 2972 08db 00       		.byte	0
 2973 08dc 15       		.uleb128 0x15
 2974 08dd 96000000 		.4byte	.LVL94
 2975 08e1 400F0000 		.4byte	0xf40
 2976 08e5 EF080000 		.4byte	0x8ef
 2977 08e9 16       		.uleb128 0x16
 2978 08ea 01       		.uleb128 0x1
 2979 08eb 50       		.byte	0x50
 2980 08ec 01       		.uleb128 0x1
 2981 08ed 36       		.byte	0x36
 2982 08ee 00       		.byte	0
 2983 08ef 14       		.uleb128 0x14
 2984 08f0 C4000000 		.4byte	.LVL95
 2985 08f4 65060000 		.4byte	0x665
 2986 08f8 15       		.uleb128 0x15
 2987 08f9 CE000000 		.4byte	.LVL96
 2988 08fd 820E0000 		.4byte	0xe82
 2989 0901 0C090000 		.4byte	0x90c
 2990 0905 16       		.uleb128 0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 80


 2991 0906 01       		.uleb128 0x1
 2992 0907 50       		.byte	0x50
 2993 0908 02       		.uleb128 0x2
 2994 0909 74       		.byte	0x74
 2995 090a 00       		.sleb128 0
 2996 090b 00       		.byte	0
 2997 090c 14       		.uleb128 0x14
 2998 090d DE000000 		.4byte	.LVL98
 2999 0911 25060000 		.4byte	0x625
 3000 0915 14       		.uleb128 0x14
 3001 0916 E8000000 		.4byte	.LVL99
 3002 091a 65060000 		.4byte	0x665
 3003 091e 14       		.uleb128 0x14
 3004 091f 02010000 		.4byte	.LVL100
 3005 0923 4B0F0000 		.4byte	0xf4b
 3006 0927 15       		.uleb128 0x15
 3007 0928 20010000 		.4byte	.LVL101
 3008 092c 70050000 		.4byte	0x570
 3009 0930 3A090000 		.4byte	0x93a
 3010 0934 16       		.uleb128 0x16
 3011 0935 01       		.uleb128 0x1
 3012 0936 50       		.byte	0x50
 3013 0937 01       		.uleb128 0x1
 3014 0938 34       		.byte	0x34
 3015 0939 00       		.byte	0
 3016 093a 15       		.uleb128 0x15
 3017 093b 3E010000 		.4byte	.LVL102
 3018 093f 70050000 		.4byte	0x570
 3019 0943 4D090000 		.4byte	0x94d
 3020 0947 16       		.uleb128 0x16
 3021 0948 01       		.uleb128 0x1
 3022 0949 50       		.byte	0x50
 3023 094a 01       		.uleb128 0x1
 3024 094b 32       		.byte	0x32
 3025 094c 00       		.byte	0
 3026 094d 15       		.uleb128 0x15
 3027 094e 54010000 		.4byte	.LVL103
 3028 0952 A3070000 		.4byte	0x7a3
 3029 0956 60090000 		.4byte	0x960
 3030 095a 16       		.uleb128 0x16
 3031 095b 01       		.uleb128 0x1
 3032 095c 50       		.byte	0x50
 3033 095d 01       		.uleb128 0x1
 3034 095e 31       		.byte	0x31
 3035 095f 00       		.byte	0
 3036 0960 15       		.uleb128 0x15
 3037 0961 68010000 		.4byte	.LVL104
 3038 0965 A3070000 		.4byte	0x7a3
 3039 0969 73090000 		.4byte	0x973
 3040 096d 16       		.uleb128 0x16
 3041 096e 01       		.uleb128 0x1
 3042 096f 50       		.byte	0x50
 3043 0970 01       		.uleb128 0x1
 3044 0971 30       		.byte	0x30
 3045 0972 00       		.byte	0
 3046 0973 14       		.uleb128 0x14
 3047 0974 BA010000 		.4byte	.LVL105
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 81


 3048 0978 65060000 		.4byte	0x665
 3049 097c 14       		.uleb128 0x14
 3050 097d 86020000 		.4byte	.LVL121
 3051 0981 E3070000 		.4byte	0x7e3
 3052 0985 00       		.byte	0
 3053 0986 13       		.uleb128 0x13
 3054 0987 FF030000 		.4byte	.LASF101
 3055 098b 01       		.byte	0x1
 3056 098c 3304     		.2byte	0x433
 3057 098e 00000000 		.4byte	.LFB43
 3058 0992 78000000 		.4byte	.LFE43-.LFB43
 3059 0996 01       		.uleb128 0x1
 3060 0997 9C       		.byte	0x9c
 3061 0998 370A0000 		.4byte	0xa37
 3062 099c 1C       		.uleb128 0x1c
 3063 099d 2F000000 		.4byte	.LASF102
 3064 09a1 01       		.byte	0x1
 3065 09a2 3504     		.2byte	0x435
 3066 09a4 A0000000 		.4byte	0xa0
 3067 09a8 05       		.uleb128 0x5
 3068 09a9 03       		.byte	0x3
 3069 09aa 28000000 		.4byte	brmsTask.7300
 3070 09ae 20       		.uleb128 0x20
 3071 09af 6E000000 		.4byte	.LASF103
 3072 09b3 01       		.byte	0x1
 3073 09b4 3704     		.2byte	0x437
 3074 09b6 370A0000 		.4byte	0xa37
 3075 09ba 01       		.byte	0x1
 3076 09bb 20       		.uleb128 0x20
 3077 09bc 21070000 		.4byte	.LASF104
 3078 09c0 01       		.byte	0x1
 3079 09c1 3804     		.2byte	0x438
 3080 09c3 3C0A0000 		.4byte	0xa3c
 3081 09c7 02       		.byte	0x2
 3082 09c8 20       		.uleb128 0x20
 3083 09c9 00070000 		.4byte	.LASF105
 3084 09cd 01       		.byte	0x1
 3085 09ce 3904     		.2byte	0x439
 3086 09d0 410A0000 		.4byte	0xa41
 3087 09d4 04       		.byte	0x4
 3088 09d5 20       		.uleb128 0x20
 3089 09d6 19000000 		.4byte	.LASF106
 3090 09da 01       		.byte	0x1
 3091 09db 3A04     		.2byte	0x43a
 3092 09dd 460A0000 		.4byte	0xa46
 3093 09e1 08       		.byte	0x8
 3094 09e2 20       		.uleb128 0x20
 3095 09e3 89060000 		.4byte	.LASF107
 3096 09e7 01       		.byte	0x1
 3097 09e8 3B04     		.2byte	0x43b
 3098 09ea A0000000 		.4byte	0xa0
 3099 09ee 10       		.byte	0x10
 3100 09ef 15       		.uleb128 0x15
 3101 09f0 08000000 		.4byte	.LVL122
 3102 09f4 560F0000 		.4byte	0xf56
 3103 09f8 020A0000 		.4byte	0xa02
 3104 09fc 16       		.uleb128 0x16
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 82


 3105 09fd 01       		.uleb128 0x1
 3106 09fe 50       		.byte	0x50
 3107 09ff 01       		.uleb128 0x1
 3108 0a00 32       		.byte	0x32
 3109 0a01 00       		.byte	0
 3110 0a02 15       		.uleb128 0x15
 3111 0a03 0E000000 		.4byte	.LVL123
 3112 0a07 620F0000 		.4byte	0xf62
 3113 0a0b 150A0000 		.4byte	0xa15
 3114 0a0f 16       		.uleb128 0x16
 3115 0a10 01       		.uleb128 0x1
 3116 0a11 50       		.byte	0x50
 3117 0a12 01       		.uleb128 0x1
 3118 0a13 31       		.byte	0x31
 3119 0a14 00       		.byte	0
 3120 0a15 14       		.uleb128 0x14
 3121 0a16 58000000 		.4byte	.LVL124
 3122 0a1a 23080000 		.4byte	0x823
 3123 0a1e 14       		.uleb128 0x14
 3124 0a1f 66000000 		.4byte	.LVL125
 3125 0a23 B2060000 		.4byte	0x6b2
 3126 0a27 17       		.uleb128 0x17
 3127 0a28 6C000000 		.4byte	.LVL126
 3128 0a2c 620F0000 		.4byte	0xf62
 3129 0a30 16       		.uleb128 0x16
 3130 0a31 01       		.uleb128 0x1
 3131 0a32 50       		.byte	0x50
 3132 0a33 01       		.uleb128 0x1
 3133 0a34 30       		.byte	0x30
 3134 0a35 00       		.byte	0
 3135 0a36 00       		.byte	0
 3136 0a37 21       		.uleb128 0x21
 3137 0a38 A0000000 		.4byte	0xa0
 3138 0a3c 21       		.uleb128 0x21
 3139 0a3d A0000000 		.4byte	0xa0
 3140 0a41 21       		.uleb128 0x21
 3141 0a42 A0000000 		.4byte	0xa0
 3142 0a46 21       		.uleb128 0x21
 3143 0a47 A0000000 		.4byte	0xa0
 3144 0a4b 22       		.uleb128 0x22
 3145 0a4c FF080000 		.4byte	.LASF182
 3146 0a50 01       		.byte	0x1
 3147 0a51 B903     		.2byte	0x3b9
 3148 0a53 6F000000 		.4byte	0x6f
 3149 0a57 00000000 		.4byte	.LFB42
 3150 0a5b D0000000 		.4byte	.LFE42-.LFB42
 3151 0a5f 01       		.uleb128 0x1
 3152 0a60 9C       		.byte	0x9c
 3153 0a61 D50B0000 		.4byte	0xbd5
 3154 0a65 15       		.uleb128 0x15
 3155 0a66 08000000 		.4byte	.LVL127
 3156 0a6a 350F0000 		.4byte	0xf35
 3157 0a6e 780A0000 		.4byte	0xa78
 3158 0a72 16       		.uleb128 0x16
 3159 0a73 01       		.uleb128 0x1
 3160 0a74 50       		.byte	0x50
 3161 0a75 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 83


 3162 0a76 31       		.byte	0x31
 3163 0a77 00       		.byte	0
 3164 0a78 15       		.uleb128 0x15
 3165 0a79 0E000000 		.4byte	.LVL128
 3166 0a7d 400F0000 		.4byte	0xf40
 3167 0a81 8B0A0000 		.4byte	0xa8b
 3168 0a85 16       		.uleb128 0x16
 3169 0a86 01       		.uleb128 0x1
 3170 0a87 50       		.byte	0x50
 3171 0a88 01       		.uleb128 0x1
 3172 0a89 31       		.byte	0x31
 3173 0a8a 00       		.byte	0
 3174 0a8b 14       		.uleb128 0x14
 3175 0a8c 12000000 		.4byte	.LVL129
 3176 0a90 6D0F0000 		.4byte	0xf6d
 3177 0a94 15       		.uleb128 0x15
 3178 0a95 18000000 		.4byte	.LVL130
 3179 0a99 790F0000 		.4byte	0xf79
 3180 0a9d AB0A0000 		.4byte	0xaab
 3181 0aa1 16       		.uleb128 0x16
 3182 0aa2 01       		.uleb128 0x1
 3183 0aa3 50       		.byte	0x50
 3184 0aa4 05       		.uleb128 0x5
 3185 0aa5 03       		.byte	0x3
 3186 0aa6 00000000 		.4byte	BRMS_Interrupt
 3187 0aaa 00       		.byte	0
 3188 0aab 15       		.uleb128 0x15
 3189 0aac 1E000000 		.4byte	.LVL131
 3190 0ab0 840F0000 		.4byte	0xf84
 3191 0ab4 BE0A0000 		.4byte	0xabe
 3192 0ab8 16       		.uleb128 0x16
 3193 0ab9 01       		.uleb128 0x1
 3194 0aba 50       		.byte	0x50
 3195 0abb 01       		.uleb128 0x1
 3196 0abc 32       		.byte	0x32
 3197 0abd 00       		.byte	0
 3198 0abe 15       		.uleb128 0x15
 3199 0abf 24000000 		.4byte	.LVL132
 3200 0ac3 8F0F0000 		.4byte	0xf8f
 3201 0ac7 D50A0000 		.4byte	0xad5
 3202 0acb 16       		.uleb128 0x16
 3203 0acc 01       		.uleb128 0x1
 3204 0acd 50       		.byte	0x50
 3205 0ace 05       		.uleb128 0x5
 3206 0acf 03       		.byte	0x3
 3207 0ad0 00000000 		.4byte	HomeIsrHandler
 3208 0ad4 00       		.byte	0
 3209 0ad5 15       		.uleb128 0x15
 3210 0ad6 2A000000 		.4byte	.LVL133
 3211 0ada 9A0F0000 		.4byte	0xf9a
 3212 0ade E80A0000 		.4byte	0xae8
 3213 0ae2 16       		.uleb128 0x16
 3214 0ae3 01       		.uleb128 0x1
 3215 0ae4 50       		.byte	0x50
 3216 0ae5 01       		.uleb128 0x1
 3217 0ae6 33       		.byte	0x33
 3218 0ae7 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 84


 3219 0ae8 15       		.uleb128 0x15
 3220 0ae9 30000000 		.4byte	.LVL134
 3221 0aed A50F0000 		.4byte	0xfa5
 3222 0af1 FF0A0000 		.4byte	0xaff
 3223 0af5 16       		.uleb128 0x16
 3224 0af6 01       		.uleb128 0x1
 3225 0af7 50       		.byte	0x50
 3226 0af8 05       		.uleb128 0x5
 3227 0af9 03       		.byte	0x3
 3228 0afa 00000000 		.4byte	RSTIsrHandler
 3229 0afe 00       		.byte	0
 3230 0aff 15       		.uleb128 0x15
 3231 0b00 36000000 		.4byte	.LVL135
 3232 0b04 B00F0000 		.4byte	0xfb0
 3233 0b08 120B0000 		.4byte	0xb12
 3234 0b0c 16       		.uleb128 0x16
 3235 0b0d 01       		.uleb128 0x1
 3236 0b0e 50       		.byte	0x50
 3237 0b0f 01       		.uleb128 0x1
 3238 0b10 33       		.byte	0x33
 3239 0b11 00       		.byte	0
 3240 0b12 15       		.uleb128 0x15
 3241 0b13 3C000000 		.4byte	.LVL136
 3242 0b17 BB0F0000 		.4byte	0xfbb
 3243 0b1b 290B0000 		.4byte	0xb29
 3244 0b1f 16       		.uleb128 0x16
 3245 0b20 01       		.uleb128 0x1
 3246 0b21 50       		.byte	0x50
 3247 0b22 05       		.uleb128 0x5
 3248 0b23 03       		.byte	0x3
 3249 0b24 00000000 		.4byte	SPI_SS_IsrHandler
 3250 0b28 00       		.byte	0
 3251 0b29 15       		.uleb128 0x15
 3252 0b2a 42000000 		.4byte	.LVL137
 3253 0b2e C60F0000 		.4byte	0xfc6
 3254 0b32 3C0B0000 		.4byte	0xb3c
 3255 0b36 16       		.uleb128 0x16
 3256 0b37 01       		.uleb128 0x1
 3257 0b38 50       		.byte	0x50
 3258 0b39 01       		.uleb128 0x1
 3259 0b3a 33       		.byte	0x33
 3260 0b3b 00       		.byte	0
 3261 0b3c 14       		.uleb128 0x14
 3262 0b3d 48000000 		.4byte	.LVL138
 3263 0b41 E60E0000 		.4byte	0xee6
 3264 0b45 15       		.uleb128 0x15
 3265 0b46 4E000000 		.4byte	.LVL139
 3266 0b4a D10F0000 		.4byte	0xfd1
 3267 0b4e 590B0000 		.4byte	0xb59
 3268 0b52 16       		.uleb128 0x16
 3269 0b53 01       		.uleb128 0x1
 3270 0b54 50       		.byte	0x50
 3271 0b55 02       		.uleb128 0x2
 3272 0b56 08       		.byte	0x8
 3273 0b57 64       		.byte	0x64
 3274 0b58 00       		.byte	0
 3275 0b59 14       		.uleb128 0x14
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 85


 3276 0b5a 52000000 		.4byte	.LVL140
 3277 0b5e DC0F0000 		.4byte	0xfdc
 3278 0b62 14       		.uleb128 0x14
 3279 0b63 56000000 		.4byte	.LVL141
 3280 0b67 E70F0000 		.4byte	0xfe7
 3281 0b6b 15       		.uleb128 0x15
 3282 0b6c 5E000000 		.4byte	.LVL142
 3283 0b70 F30F0000 		.4byte	0xff3
 3284 0b74 800B0000 		.4byte	0xb80
 3285 0b78 16       		.uleb128 0x16
 3286 0b79 01       		.uleb128 0x1
 3287 0b7a 50       		.byte	0x50
 3288 0b7b 03       		.uleb128 0x3
 3289 0b7c 0A       		.byte	0xa
 3290 0b7d 4006     		.2byte	0x640
 3291 0b7f 00       		.byte	0
 3292 0b80 14       		.uleb128 0x14
 3293 0b81 64000000 		.4byte	.LVL143
 3294 0b85 25060000 		.4byte	0x625
 3295 0b89 14       		.uleb128 0x14
 3296 0b8a 72000000 		.4byte	.LVL144
 3297 0b8e FF0F0000 		.4byte	0xfff
 3298 0b92 15       		.uleb128 0x15
 3299 0b93 7A000000 		.4byte	.LVL145
 3300 0b97 770E0000 		.4byte	0xe77
 3301 0b9b A60B0000 		.4byte	0xba6
 3302 0b9f 16       		.uleb128 0x16
 3303 0ba0 01       		.uleb128 0x1
 3304 0ba1 50       		.byte	0x50
 3305 0ba2 02       		.uleb128 0x2
 3306 0ba3 75       		.byte	0x75
 3307 0ba4 00       		.sleb128 0
 3308 0ba5 00       		.byte	0
 3309 0ba6 14       		.uleb128 0x14
 3310 0ba7 82000000 		.4byte	.LVL146
 3311 0bab 0A100000 		.4byte	0x100a
 3312 0baf 15       		.uleb128 0x15
 3313 0bb0 88000000 		.4byte	.LVL147
 3314 0bb4 820E0000 		.4byte	0xe82
 3315 0bb8 C30B0000 		.4byte	0xbc3
 3316 0bbc 16       		.uleb128 0x16
 3317 0bbd 01       		.uleb128 0x1
 3318 0bbe 50       		.byte	0x50
 3319 0bbf 02       		.uleb128 0x2
 3320 0bc0 74       		.byte	0x74
 3321 0bc1 00       		.sleb128 0
 3322 0bc2 00       		.byte	0
 3323 0bc3 17       		.uleb128 0x17
 3324 0bc4 9E000000 		.4byte	.LVL148
 3325 0bc8 D10F0000 		.4byte	0xfd1
 3326 0bcc 16       		.uleb128 0x16
 3327 0bcd 01       		.uleb128 0x1
 3328 0bce 50       		.byte	0x50
 3329 0bcf 03       		.uleb128 0x3
 3330 0bd0 0A       		.byte	0xa
 3331 0bd1 E803     		.2byte	0x3e8
 3332 0bd3 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 86


 3333 0bd4 00       		.byte	0
 3334 0bd5 23       		.uleb128 0x23
 3335 0bd6 2E030000 		.4byte	.LASF108
 3336 0bda 01       		.byte	0x1
 3337 0bdb 55       		.byte	0x55
 3338 0bdc 1E060000 		.4byte	0x61e
 3339 0be0 05       		.uleb128 0x5
 3340 0be1 03       		.byte	0x3
 3341 0be2 00000000 		.4byte	inAuto
 3342 0be6 24       		.uleb128 0x24
 3343 0be7 4A6F6700 		.ascii	"Jog\000"
 3344 0beb 01       		.byte	0x1
 3345 0bec 57       		.byte	0x57
 3346 0bed F70B0000 		.4byte	0xbf7
 3347 0bf1 05       		.uleb128 0x5
 3348 0bf2 03       		.byte	0x3
 3349 0bf3 00000000 		.4byte	Jog
 3350 0bf7 06       		.uleb128 0x6
 3351 0bf8 AC000000 		.4byte	0xac
 3352 0bfc 23       		.uleb128 0x23
 3353 0bfd 09010000 		.4byte	.LASF109
 3354 0c01 01       		.byte	0x1
 3355 0c02 57       		.byte	0x57
 3356 0c03 F70B0000 		.4byte	0xbf7
 3357 0c07 05       		.uleb128 0x5
 3358 0c08 03       		.byte	0x3
 3359 0c09 00000000 		.4byte	LastJog
 3360 0c0d 23       		.uleb128 0x23
 3361 0c0e 78060000 		.4byte	.LASF110
 3362 0c12 01       		.byte	0x1
 3363 0c13 58       		.byte	0x58
 3364 0c14 1E060000 		.4byte	0x61e
 3365 0c18 05       		.uleb128 0x5
 3366 0c19 03       		.byte	0x3
 3367 0c1a 00000000 		.4byte	PID_Enabled
 3368 0c1e 23       		.uleb128 0x23
 3369 0c1f 68060000 		.4byte	.LASF111
 3370 0c23 01       		.byte	0x1
 3371 0c24 58       		.byte	0x58
 3372 0c25 1E060000 		.4byte	0x61e
 3373 0c29 05       		.uleb128 0x5
 3374 0c2a 03       		.byte	0x3
 3375 0c2b 00000000 		.4byte	PID_Was_Enabled
 3376 0c2f 23       		.uleb128 0x23
 3377 0c30 5B070000 		.4byte	.LASF112
 3378 0c34 01       		.byte	0x1
 3379 0c35 59       		.byte	0x59
 3380 0c36 C4000000 		.4byte	0xc4
 3381 0c3a 05       		.uleb128 0x5
 3382 0c3b 03       		.byte	0x3
 3383 0c3c 00000000 		.4byte	PID_Setpoint
 3384 0c40 23       		.uleb128 0x23
 3385 0c41 AF090000 		.4byte	.LASF113
 3386 0c45 01       		.byte	0x1
 3387 0c46 59       		.byte	0x59
 3388 0c47 C4000000 		.4byte	0xc4
 3389 0c4b 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 87


 3390 0c4c 03       		.byte	0x3
 3391 0c4d 00000000 		.4byte	PID_EffectiveSetpoint
 3392 0c51 23       		.uleb128 0x23
 3393 0c52 CF010000 		.4byte	.LASF114
 3394 0c56 01       		.byte	0x1
 3395 0c57 5A       		.byte	0x5a
 3396 0c58 88000000 		.4byte	0x88
 3397 0c5c 05       		.uleb128 0x5
 3398 0c5d 03       		.byte	0x3
 3399 0c5e 00000000 		.4byte	PID_EffSetDelta
 3400 0c62 23       		.uleb128 0x23
 3401 0c63 DF010000 		.4byte	.LASF115
 3402 0c67 01       		.byte	0x1
 3403 0c68 5B       		.byte	0x5b
 3404 0c69 A0000000 		.4byte	0xa0
 3405 0c6d 05       		.uleb128 0x5
 3406 0c6e 03       		.byte	0x3
 3407 0c6f 00000000 		.4byte	lastTime
 3408 0c73 23       		.uleb128 0x23
 3409 0c74 25060000 		.4byte	.LASF116
 3410 0c78 01       		.byte	0x1
 3411 0c79 5C       		.byte	0x5c
 3412 0c7a 25000000 		.4byte	0x25
 3413 0c7e 05       		.uleb128 0x5
 3414 0c7f 03       		.byte	0x3
 3415 0c80 00000000 		.4byte	Output
 3416 0c84 23       		.uleb128 0x23
 3417 0c85 0C020000 		.4byte	.LASF117
 3418 0c89 01       		.byte	0x1
 3419 0c8a 5D       		.byte	0x5d
 3420 0c8b 25000000 		.4byte	0x25
 3421 0c8f 05       		.uleb128 0x5
 3422 0c90 03       		.byte	0x3
 3423 0c91 00000000 		.4byte	ITerm
 3424 0c95 23       		.uleb128 0x23
 3425 0c96 DD030000 		.4byte	.LASF118
 3426 0c9a 01       		.byte	0x1
 3427 0c9b 5E       		.byte	0x5e
 3428 0c9c AD060000 		.4byte	0x6ad
 3429 0ca0 05       		.uleb128 0x5
 3430 0ca1 03       		.byte	0x3
 3431 0ca2 00000000 		.4byte	Position
 3432 0ca6 23       		.uleb128 0x23
 3433 0ca7 5B050000 		.4byte	.LASF119
 3434 0cab 01       		.byte	0x1
 3435 0cac 5E       		.byte	0x5e
 3436 0cad AD060000 		.4byte	0x6ad
 3437 0cb1 05       		.uleb128 0x5
 3438 0cb2 03       		.byte	0x3
 3439 0cb3 00000000 		.4byte	LastPosition
 3440 0cb7 24       		.uleb128 0x24
 3441 0cb8 6B7000   		.ascii	"kp\000"
 3442 0cbb 01       		.byte	0x1
 3443 0cbc 5F       		.byte	0x5f
 3444 0cbd 25000000 		.4byte	0x25
 3445 0cc1 05       		.uleb128 0x5
 3446 0cc2 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 88


 3447 0cc3 00000000 		.4byte	kp
 3448 0cc7 24       		.uleb128 0x24
 3449 0cc8 6B6900   		.ascii	"ki\000"
 3450 0ccb 01       		.byte	0x1
 3451 0ccc 5F       		.byte	0x5f
 3452 0ccd 25000000 		.4byte	0x25
 3453 0cd1 05       		.uleb128 0x5
 3454 0cd2 03       		.byte	0x3
 3455 0cd3 00000000 		.4byte	ki
 3456 0cd7 24       		.uleb128 0x24
 3457 0cd8 6B6400   		.ascii	"kd\000"
 3458 0cdb 01       		.byte	0x1
 3459 0cdc 5F       		.byte	0x5f
 3460 0cdd 25000000 		.4byte	0x25
 3461 0ce1 05       		.uleb128 0x5
 3462 0ce2 03       		.byte	0x3
 3463 0ce3 00000000 		.4byte	kd
 3464 0ce7 23       		.uleb128 0x23
 3465 0ce8 4D050000 		.4byte	.LASF120
 3466 0cec 01       		.byte	0x1
 3467 0ced 60       		.byte	0x60
 3468 0cee A0000000 		.4byte	0xa0
 3469 0cf2 05       		.uleb128 0x5
 3470 0cf3 03       		.byte	0x3
 3471 0cf4 00000000 		.4byte	refSampleTime
 3472 0cf8 23       		.uleb128 0x23
 3473 0cf9 DD020000 		.4byte	.LASF121
 3474 0cfd 01       		.byte	0x1
 3475 0cfe 61       		.byte	0x61
 3476 0cff 25000000 		.4byte	0x25
 3477 0d03 05       		.uleb128 0x5
 3478 0d04 03       		.byte	0x3
 3479 0d05 00000000 		.4byte	outMax_Total
 3480 0d09 23       		.uleb128 0x23
 3481 0d0a 39070000 		.4byte	.LASF122
 3482 0d0e 01       		.byte	0x1
 3483 0d0f 61       		.byte	0x61
 3484 0d10 25000000 		.4byte	0x25
 3485 0d14 05       		.uleb128 0x5
 3486 0d15 03       		.byte	0x3
 3487 0d16 00000000 		.4byte	outMax_ITerm
 3488 0d1a 23       		.uleb128 0x23
 3489 0d1b 55080000 		.4byte	.LASF123
 3490 0d1f 01       		.byte	0x1
 3491 0d20 62       		.byte	0x62
 3492 0d21 25000000 		.4byte	0x25
 3493 0d25 05       		.uleb128 0x5
 3494 0d26 03       		.byte	0x3
 3495 0d27 00000000 		.4byte	pwmLimit
 3496 0d2b 23       		.uleb128 0x23
 3497 0d2c 54070000 		.4byte	.LASF124
 3498 0d30 01       		.byte	0x1
 3499 0d31 62       		.byte	0x62
 3500 0d32 25000000 		.4byte	0x25
 3501 0d36 05       		.uleb128 0x5
 3502 0d37 03       		.byte	0x3
 3503 0d38 00000000 		.4byte	pwmMax
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 89


 3504 0d3c 23       		.uleb128 0x23
 3505 0d3d E8010000 		.4byte	.LASF125
 3506 0d41 01       		.byte	0x1
 3507 0d42 62       		.byte	0x62
 3508 0d43 25000000 		.4byte	0x25
 3509 0d47 05       		.uleb128 0x5
 3510 0d48 03       		.byte	0x3
 3511 0d49 00000000 		.4byte	pwmMin
 3512 0d4d 23       		.uleb128 0x23
 3513 0d4e 86080000 		.4byte	.LASF126
 3514 0d52 01       		.byte	0x1
 3515 0d53 63       		.byte	0x63
 3516 0d54 1E060000 		.4byte	0x61e
 3517 0d58 05       		.uleb128 0x5
 3518 0d59 03       		.byte	0x3
 3519 0d5a 00000000 		.4byte	homingDone
 3520 0d5e 23       		.uleb128 0x23
 3521 0d5f 2F090000 		.4byte	.LASF127
 3522 0d63 01       		.byte	0x1
 3523 0d64 68       		.byte	0x68
 3524 0d65 6F0D0000 		.4byte	0xd6f
 3525 0d69 05       		.uleb128 0x5
 3526 0d6a 03       		.byte	0x3
 3527 0d6b 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3528 0d6f 06       		.uleb128 0x6
 3529 0d70 D7000000 		.4byte	0xd7
 3530 0d74 23       		.uleb128 0x23
 3531 0d75 46070000 		.4byte	.LASF128
 3532 0d79 01       		.byte	0x1
 3533 0d7a 69       		.byte	0x69
 3534 0d7b 6F0D0000 		.4byte	0xd6f
 3535 0d7f 05       		.uleb128 0x5
 3536 0d80 03       		.byte	0x3
 3537 0d81 00000000 		.4byte	UptimeSeconds
 3538 0d85 23       		.uleb128 0x23
 3539 0d86 37020000 		.4byte	.LASF129
 3540 0d8a 01       		.byte	0x1
 3541 0d8b 95       		.byte	0x95
 3542 0d8c 960D0000 		.4byte	0xd96
 3543 0d90 05       		.uleb128 0x5
 3544 0d91 03       		.byte	0x3
 3545 0d92 00000000 		.4byte	ConfigState
 3546 0d96 06       		.uleb128 0x6
 3547 0d97 38010000 		.4byte	0x138
 3548 0d9b 23       		.uleb128 0x23
 3549 0d9c 4A080000 		.4byte	.LASF130
 3550 0da0 01       		.byte	0x1
 3551 0da1 96       		.byte	0x96
 3552 0da2 EA000000 		.4byte	0xea
 3553 0da6 05       		.uleb128 0x5
 3554 0da7 03       		.byte	0x3
 3555 0da8 00000000 		.4byte	FaultState
 3556 0dac 23       		.uleb128 0x23
 3557 0dad 6D080000 		.4byte	.LASF131
 3558 0db1 01       		.byte	0x1
 3559 0db2 97       		.byte	0x97
 3560 0db3 EA000000 		.4byte	0xea
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 90


 3561 0db7 05       		.uleb128 0x5
 3562 0db8 03       		.byte	0x3
 3563 0db9 00000000 		.4byte	ConfigSequence
 3564 0dbd 23       		.uleb128 0x23
 3565 0dbe 96070000 		.4byte	.LASF132
 3566 0dc2 01       		.byte	0x1
 3567 0dc3 98       		.byte	0x98
 3568 0dc4 EF000000 		.4byte	0xef
 3569 0dc8 05       		.uleb128 0x5
 3570 0dc9 03       		.byte	0x3
 3571 0dca 00000000 		.4byte	ChecksumErrors
 3572 0dce 23       		.uleb128 0x23
 3573 0dcf 7A000000 		.4byte	.LASF133
 3574 0dd3 01       		.byte	0x1
 3575 0dd4 99       		.byte	0x99
 3576 0dd5 DF0D0000 		.4byte	0xddf
 3577 0dd9 05       		.uleb128 0x5
 3578 0dda 03       		.byte	0x3
 3579 0ddb 00000000 		.4byte	Current
 3580 0ddf 06       		.uleb128 0x6
 3581 0de0 B8000000 		.4byte	0xb8
 3582 0de4 24       		.uleb128 0x24
 3583 0de5 50574D00 		.ascii	"PWM\000"
 3584 0de9 01       		.byte	0x1
 3585 0dea 9A       		.byte	0x9a
 3586 0deb F50D0000 		.4byte	0xdf5
 3587 0def 05       		.uleb128 0x5
 3588 0df0 03       		.byte	0x3
 3589 0df1 00000000 		.4byte	PWM
 3590 0df5 06       		.uleb128 0x6
 3591 0df6 25000000 		.4byte	0x25
 3592 0dfa 0F       		.uleb128 0xf
 3593 0dfb 88000000 		.4byte	0x88
 3594 0dff 0A0E0000 		.4byte	0xe0a
 3595 0e03 10       		.uleb128 0x10
 3596 0e04 0C010000 		.4byte	0x10c
 3597 0e08 13       		.byte	0x13
 3598 0e09 00       		.byte	0
 3599 0e0a 23       		.uleb128 0x23
 3600 0e0b 3D050000 		.4byte	.LASF134
 3601 0e0f 01       		.byte	0x1
 3602 0e10 9B       		.byte	0x9b
 3603 0e11 FA0D0000 		.4byte	0xdfa
 3604 0e15 05       		.uleb128 0x5
 3605 0e16 03       		.byte	0x3
 3606 0e17 00000000 		.4byte	CurrentI2Cinbuf
 3607 0e1b 23       		.uleb128 0x23
 3608 0e1c E9060000 		.4byte	.LASF135
 3609 0e20 01       		.byte	0x1
 3610 0e21 AD       		.byte	0xad
 3611 0e22 A0000000 		.4byte	0xa0
 3612 0e26 05       		.uleb128 0x5
 3613 0e27 03       		.byte	0x3
 3614 0e28 00000000 		.4byte	LastMessageTimeSeconds
 3615 0e2c 23       		.uleb128 0x23
 3616 0e2d 08000000 		.4byte	.LASF136
 3617 0e31 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 91


 3618 0e32 EA       		.byte	0xea
 3619 0e33 34030000 		.4byte	0x334
 3620 0e37 05       		.uleb128 0x5
 3621 0e38 03       		.byte	0x3
 3622 0e39 00000000 		.4byte	rxMessage
 3623 0e3d 25       		.uleb128 0x25
 3624 0e3e 68050000 		.4byte	.LASF137
 3625 0e42 01       		.byte	0x1
 3626 0e43 0101     		.2byte	0x101
 3627 0e45 34040000 		.4byte	0x434
 3628 0e49 05       		.uleb128 0x5
 3629 0e4a 03       		.byte	0x3
 3630 0e4b 00000000 		.4byte	txMessage
 3631 0e4f 25       		.uleb128 0x25
 3632 0e50 B8060000 		.4byte	.LASF138
 3633 0e54 01       		.byte	0x1
 3634 0e55 0901     		.2byte	0x109
 3635 0e57 6E040000 		.4byte	0x46e
 3636 0e5b 05       		.uleb128 0x5
 3637 0e5c 03       		.byte	0x3
 3638 0e5d 00000000 		.4byte	txMessageState
 3639 0e61 26       		.uleb128 0x26
 3640 0e62 65040000 		.4byte	.LASF139
 3641 0e66 65040000 		.4byte	.LASF139
 3642 0e6a 05       		.byte	0x5
 3643 0e6b 28       		.byte	0x28
 3644 0e6c 26       		.uleb128 0x26
 3645 0e6d 91080000 		.4byte	.LASF140
 3646 0e71 91080000 		.4byte	.LASF140
 3647 0e75 06       		.byte	0x6
 3648 0e76 39       		.byte	0x39
 3649 0e77 26       		.uleb128 0x26
 3650 0e78 72050000 		.4byte	.LASF141
 3651 0e7c 72050000 		.4byte	.LASF141
 3652 0e80 07       		.byte	0x7
 3653 0e81 5A       		.byte	0x5a
 3654 0e82 26       		.uleb128 0x26
 3655 0e83 EF010000 		.4byte	.LASF142
 3656 0e87 EF010000 		.4byte	.LASF142
 3657 0e8b 08       		.byte	0x8
 3658 0e8c 5A       		.byte	0x5a
 3659 0e8d 26       		.uleb128 0x26
 3660 0e8e 6E090000 		.4byte	.LASF143
 3661 0e92 6E090000 		.4byte	.LASF143
 3662 0e96 09       		.byte	0x9
 3663 0e97 28       		.byte	0x28
 3664 0e98 26       		.uleb128 0x26
 3665 0e99 A6000000 		.4byte	.LASF144
 3666 0e9d A6000000 		.4byte	.LASF144
 3667 0ea1 0A       		.byte	0xa
 3668 0ea2 39       		.byte	0x39
 3669 0ea3 26       		.uleb128 0x26
 3670 0ea4 51030000 		.4byte	.LASF145
 3671 0ea8 51030000 		.4byte	.LASF145
 3672 0eac 0B       		.byte	0xb
 3673 0ead 39       		.byte	0x39
 3674 0eae 26       		.uleb128 0x26
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 92


 3675 0eaf CC040000 		.4byte	.LASF146
 3676 0eb3 CC040000 		.4byte	.LASF146
 3677 0eb7 0B       		.byte	0xb
 3678 0eb8 32       		.byte	0x32
 3679 0eb9 27       		.uleb128 0x27
 3680 0eba 0F050000 		.4byte	.LASF183
 3681 0ebe 0F050000 		.4byte	.LASF183
 3682 0ec2 28       		.uleb128 0x28
 3683 0ec3 78070000 		.4byte	.LASF147
 3684 0ec7 78070000 		.4byte	.LASF147
 3685 0ecb 0C       		.byte	0xc
 3686 0ecc 3D03     		.2byte	0x33d
 3687 0ece 28       		.uleb128 0x28
 3688 0ecf 0E040000 		.4byte	.LASF148
 3689 0ed3 0E040000 		.4byte	.LASF148
 3690 0ed7 0C       		.byte	0xc
 3691 0ed8 3F03     		.2byte	0x33f
 3692 0eda 28       		.uleb128 0x28
 3693 0edb 19010000 		.4byte	.LASF149
 3694 0edf 19010000 		.4byte	.LASF149
 3695 0ee3 0C       		.byte	0xc
 3696 0ee4 4703     		.2byte	0x347
 3697 0ee6 26       		.uleb128 0x26
 3698 0ee7 FF000000 		.4byte	.LASF150
 3699 0eeb FF000000 		.4byte	.LASF150
 3700 0eef 0D       		.byte	0xd
 3701 0ef0 72       		.byte	0x72
 3702 0ef1 26       		.uleb128 0x26
 3703 0ef2 D4030000 		.4byte	.LASF151
 3704 0ef6 D4030000 		.4byte	.LASF151
 3705 0efa 0E       		.byte	0xe
 3706 0efb 6A       		.byte	0x6a
 3707 0efc 26       		.uleb128 0x26
 3708 0efd FC050000 		.4byte	.LASF152
 3709 0f01 FC050000 		.4byte	.LASF152
 3710 0f05 0E       		.byte	0xe
 3711 0f06 70       		.byte	0x70
 3712 0f07 28       		.uleb128 0x28
 3713 0f08 4B040000 		.4byte	.LASF153
 3714 0f0c 4B040000 		.4byte	.LASF153
 3715 0f10 0F       		.byte	0xf
 3716 0f11 5501     		.2byte	0x155
 3717 0f13 26       		.uleb128 0x26
 3718 0f14 73030000 		.4byte	.LASF154
 3719 0f18 73030000 		.4byte	.LASF154
 3720 0f1c 07       		.byte	0x7
 3721 0f1d 5D       		.byte	0x5d
 3722 0f1e 28       		.uleb128 0x28
 3723 0f1f 3B030000 		.4byte	.LASF155
 3724 0f23 3B030000 		.4byte	.LASF155
 3725 0f27 0C       		.byte	0xc
 3726 0f28 4503     		.2byte	0x345
 3727 0f2a 26       		.uleb128 0x26
 3728 0f2b F9040000 		.4byte	.LASF156
 3729 0f2f F9040000 		.4byte	.LASF156
 3730 0f33 10       		.byte	0x10
 3731 0f34 77       		.byte	0x77
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 93


 3732 0f35 26       		.uleb128 0x26
 3733 0f36 C7060000 		.4byte	.LASF157
 3734 0f3a C7060000 		.4byte	.LASF157
 3735 0f3e 11       		.byte	0x11
 3736 0f3f 36       		.byte	0x36
 3737 0f40 26       		.uleb128 0x26
 3738 0f41 E2040000 		.4byte	.LASF158
 3739 0f45 E2040000 		.4byte	.LASF158
 3740 0f49 12       		.byte	0x12
 3741 0f4a 36       		.byte	0x36
 3742 0f4b 26       		.uleb128 0x26
 3743 0f4c D5070000 		.4byte	.LASF159
 3744 0f50 D5070000 		.4byte	.LASF159
 3745 0f54 08       		.byte	0x8
 3746 0f55 5D       		.byte	0x5d
 3747 0f56 28       		.uleb128 0x28
 3748 0f57 A7040000 		.4byte	.LASF160
 3749 0f5b A7040000 		.4byte	.LASF160
 3750 0f5f 13       		.byte	0x13
 3751 0f60 4701     		.2byte	0x147
 3752 0f62 26       		.uleb128 0x26
 3753 0f63 C3000000 		.4byte	.LASF161
 3754 0f67 C3000000 		.4byte	.LASF161
 3755 0f6b 14       		.byte	0x14
 3756 0f6c 33       		.byte	0x33
 3757 0f6d 28       		.uleb128 0x28
 3758 0f6e 08030000 		.4byte	.LASF162
 3759 0f72 08030000 		.4byte	.LASF162
 3760 0f76 13       		.byte	0x13
 3761 0f77 3201     		.2byte	0x132
 3762 0f79 26       		.uleb128 0x26
 3763 0f7a EA020000 		.4byte	.LASF163
 3764 0f7e EA020000 		.4byte	.LASF163
 3765 0f82 15       		.byte	0x15
 3766 0f83 18       		.byte	0x18
 3767 0f84 26       		.uleb128 0x26
 3768 0f85 DB050000 		.4byte	.LASF164
 3769 0f89 DB050000 		.4byte	.LASF164
 3770 0f8d 15       		.byte	0x15
 3771 0f8e 20       		.byte	0x20
 3772 0f8f 26       		.uleb128 0x26
 3773 0f90 C0080000 		.4byte	.LASF165
 3774 0f94 C0080000 		.4byte	.LASF165
 3775 0f98 09       		.byte	0x9
 3776 0f99 18       		.byte	0x18
 3777 0f9a 26       		.uleb128 0x26
 3778 0f9b C0070000 		.4byte	.LASF166
 3779 0f9f C0070000 		.4byte	.LASF166
 3780 0fa3 09       		.byte	0x9
 3781 0fa4 20       		.byte	0x20
 3782 0fa5 26       		.uleb128 0x26
 3783 0fa6 56090000 		.4byte	.LASF167
 3784 0faa 56090000 		.4byte	.LASF167
 3785 0fae 05       		.byte	0x5
 3786 0faf 18       		.byte	0x18
 3787 0fb0 26       		.uleb128 0x26
 3788 0fb1 B8030000 		.4byte	.LASF168
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 94


 3789 0fb5 B8030000 		.4byte	.LASF168
 3790 0fb9 05       		.byte	0x5
 3791 0fba 20       		.byte	0x20
 3792 0fbb 26       		.uleb128 0x26
 3793 0fbc 80010000 		.4byte	.LASF169
 3794 0fc0 80010000 		.4byte	.LASF169
 3795 0fc4 16       		.byte	0x16
 3796 0fc5 18       		.byte	0x18
 3797 0fc6 26       		.uleb128 0x26
 3798 0fc7 82040000 		.4byte	.LASF170
 3799 0fcb 82040000 		.4byte	.LASF170
 3800 0fcf 16       		.byte	0x16
 3801 0fd0 20       		.byte	0x20
 3802 0fd1 26       		.uleb128 0x26
 3803 0fd2 00000000 		.4byte	.LASF171
 3804 0fd6 00000000 		.4byte	.LASF171
 3805 0fda 17       		.byte	0x17
 3806 0fdb EC       		.byte	0xec
 3807 0fdc 26       		.uleb128 0x26
 3808 0fdd 0B080000 		.4byte	.LASF172
 3809 0fe1 0B080000 		.4byte	.LASF172
 3810 0fe5 18       		.byte	0x18
 3811 0fe6 72       		.byte	0x72
 3812 0fe7 28       		.uleb128 0x28
 3813 0fe8 AC060000 		.4byte	.LASF173
 3814 0fec AC060000 		.4byte	.LASF173
 3815 0ff0 0F       		.byte	0xf
 3816 0ff1 3201     		.2byte	0x132
 3817 0ff3 28       		.uleb128 0x28
 3818 0ff4 19020000 		.4byte	.LASF174
 3819 0ff8 19020000 		.4byte	.LASF174
 3820 0ffc 0F       		.byte	0xf
 3821 0ffd 5001     		.2byte	0x150
 3822 0fff 26       		.uleb128 0x26
 3823 1000 25080000 		.4byte	.LASF175
 3824 1004 25080000 		.4byte	.LASF175
 3825 1008 07       		.byte	0x7
 3826 1009 4F       		.byte	0x4f
 3827 100a 26       		.uleb128 0x26
 3828 100b 19090000 		.4byte	.LASF176
 3829 100f 19090000 		.4byte	.LASF176
 3830 1013 08       		.byte	0x8
 3831 1014 4F       		.byte	0x4f
 3832 1015 00       		.byte	0
 3833              		.section	.debug_abbrev,"",%progbits
 3834              	.Ldebug_abbrev0:
 3835 0000 01       		.uleb128 0x1
 3836 0001 11       		.uleb128 0x11
 3837 0002 01       		.byte	0x1
 3838 0003 25       		.uleb128 0x25
 3839 0004 0E       		.uleb128 0xe
 3840 0005 13       		.uleb128 0x13
 3841 0006 0B       		.uleb128 0xb
 3842 0007 03       		.uleb128 0x3
 3843 0008 0E       		.uleb128 0xe
 3844 0009 1B       		.uleb128 0x1b
 3845 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 95


 3846 000b 55       		.uleb128 0x55
 3847 000c 17       		.uleb128 0x17
 3848 000d 11       		.uleb128 0x11
 3849 000e 01       		.uleb128 0x1
 3850 000f 10       		.uleb128 0x10
 3851 0010 17       		.uleb128 0x17
 3852 0011 00       		.byte	0
 3853 0012 00       		.byte	0
 3854 0013 02       		.uleb128 0x2
 3855 0014 24       		.uleb128 0x24
 3856 0015 00       		.byte	0
 3857 0016 0B       		.uleb128 0xb
 3858 0017 0B       		.uleb128 0xb
 3859 0018 3E       		.uleb128 0x3e
 3860 0019 0B       		.uleb128 0xb
 3861 001a 03       		.uleb128 0x3
 3862 001b 0E       		.uleb128 0xe
 3863 001c 00       		.byte	0
 3864 001d 00       		.byte	0
 3865 001e 03       		.uleb128 0x3
 3866 001f 16       		.uleb128 0x16
 3867 0020 00       		.byte	0
 3868 0021 03       		.uleb128 0x3
 3869 0022 0E       		.uleb128 0xe
 3870 0023 3A       		.uleb128 0x3a
 3871 0024 0B       		.uleb128 0xb
 3872 0025 3B       		.uleb128 0x3b
 3873 0026 0B       		.uleb128 0xb
 3874 0027 49       		.uleb128 0x49
 3875 0028 13       		.uleb128 0x13
 3876 0029 00       		.byte	0
 3877 002a 00       		.byte	0
 3878 002b 04       		.uleb128 0x4
 3879 002c 24       		.uleb128 0x24
 3880 002d 00       		.byte	0
 3881 002e 0B       		.uleb128 0xb
 3882 002f 0B       		.uleb128 0xb
 3883 0030 3E       		.uleb128 0x3e
 3884 0031 0B       		.uleb128 0xb
 3885 0032 03       		.uleb128 0x3
 3886 0033 08       		.uleb128 0x8
 3887 0034 00       		.byte	0
 3888 0035 00       		.byte	0
 3889 0036 05       		.uleb128 0x5
 3890 0037 16       		.uleb128 0x16
 3891 0038 00       		.byte	0
 3892 0039 03       		.uleb128 0x3
 3893 003a 0E       		.uleb128 0xe
 3894 003b 3A       		.uleb128 0x3a
 3895 003c 0B       		.uleb128 0xb
 3896 003d 3B       		.uleb128 0x3b
 3897 003e 05       		.uleb128 0x5
 3898 003f 49       		.uleb128 0x49
 3899 0040 13       		.uleb128 0x13
 3900 0041 00       		.byte	0
 3901 0042 00       		.byte	0
 3902 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 96


 3903 0044 35       		.uleb128 0x35
 3904 0045 00       		.byte	0
 3905 0046 49       		.uleb128 0x49
 3906 0047 13       		.uleb128 0x13
 3907 0048 00       		.byte	0
 3908 0049 00       		.byte	0
 3909 004a 07       		.uleb128 0x7
 3910 004b 04       		.uleb128 0x4
 3911 004c 01       		.byte	0x1
 3912 004d 0B       		.uleb128 0xb
 3913 004e 0B       		.uleb128 0xb
 3914 004f 49       		.uleb128 0x49
 3915 0050 13       		.uleb128 0x13
 3916 0051 3A       		.uleb128 0x3a
 3917 0052 0B       		.uleb128 0xb
 3918 0053 3B       		.uleb128 0x3b
 3919 0054 0B       		.uleb128 0xb
 3920 0055 01       		.uleb128 0x1
 3921 0056 13       		.uleb128 0x13
 3922 0057 00       		.byte	0
 3923 0058 00       		.byte	0
 3924 0059 08       		.uleb128 0x8
 3925 005a 28       		.uleb128 0x28
 3926 005b 00       		.byte	0
 3927 005c 03       		.uleb128 0x3
 3928 005d 0E       		.uleb128 0xe
 3929 005e 1C       		.uleb128 0x1c
 3930 005f 0B       		.uleb128 0xb
 3931 0060 00       		.byte	0
 3932 0061 00       		.byte	0
 3933 0062 09       		.uleb128 0x9
 3934 0063 13       		.uleb128 0x13
 3935 0064 01       		.byte	0x1
 3936 0065 0B       		.uleb128 0xb
 3937 0066 0B       		.uleb128 0xb
 3938 0067 3A       		.uleb128 0x3a
 3939 0068 0B       		.uleb128 0xb
 3940 0069 3B       		.uleb128 0x3b
 3941 006a 0B       		.uleb128 0xb
 3942 006b 01       		.uleb128 0x1
 3943 006c 13       		.uleb128 0x13
 3944 006d 00       		.byte	0
 3945 006e 00       		.byte	0
 3946 006f 0A       		.uleb128 0xa
 3947 0070 0D       		.uleb128 0xd
 3948 0071 00       		.byte	0
 3949 0072 03       		.uleb128 0x3
 3950 0073 0E       		.uleb128 0xe
 3951 0074 3A       		.uleb128 0x3a
 3952 0075 0B       		.uleb128 0xb
 3953 0076 3B       		.uleb128 0x3b
 3954 0077 0B       		.uleb128 0xb
 3955 0078 49       		.uleb128 0x49
 3956 0079 13       		.uleb128 0x13
 3957 007a 38       		.uleb128 0x38
 3958 007b 0B       		.uleb128 0xb
 3959 007c 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 97


 3960 007d 00       		.byte	0
 3961 007e 0B       		.uleb128 0xb
 3962 007f 0D       		.uleb128 0xd
 3963 0080 00       		.byte	0
 3964 0081 03       		.uleb128 0x3
 3965 0082 08       		.uleb128 0x8
 3966 0083 3A       		.uleb128 0x3a
 3967 0084 0B       		.uleb128 0xb
 3968 0085 3B       		.uleb128 0x3b
 3969 0086 0B       		.uleb128 0xb
 3970 0087 49       		.uleb128 0x49
 3971 0088 13       		.uleb128 0x13
 3972 0089 38       		.uleb128 0x38
 3973 008a 0B       		.uleb128 0xb
 3974 008b 00       		.byte	0
 3975 008c 00       		.byte	0
 3976 008d 0C       		.uleb128 0xc
 3977 008e 17       		.uleb128 0x17
 3978 008f 01       		.byte	0x1
 3979 0090 0B       		.uleb128 0xb
 3980 0091 0B       		.uleb128 0xb
 3981 0092 3A       		.uleb128 0x3a
 3982 0093 0B       		.uleb128 0xb
 3983 0094 3B       		.uleb128 0x3b
 3984 0095 0B       		.uleb128 0xb
 3985 0096 01       		.uleb128 0x1
 3986 0097 13       		.uleb128 0x13
 3987 0098 00       		.byte	0
 3988 0099 00       		.byte	0
 3989 009a 0D       		.uleb128 0xd
 3990 009b 0D       		.uleb128 0xd
 3991 009c 00       		.byte	0
 3992 009d 03       		.uleb128 0x3
 3993 009e 08       		.uleb128 0x8
 3994 009f 3A       		.uleb128 0x3a
 3995 00a0 0B       		.uleb128 0xb
 3996 00a1 3B       		.uleb128 0x3b
 3997 00a2 0B       		.uleb128 0xb
 3998 00a3 49       		.uleb128 0x49
 3999 00a4 13       		.uleb128 0x13
 4000 00a5 00       		.byte	0
 4001 00a6 00       		.byte	0
 4002 00a7 0E       		.uleb128 0xe
 4003 00a8 0D       		.uleb128 0xd
 4004 00a9 00       		.byte	0
 4005 00aa 03       		.uleb128 0x3
 4006 00ab 0E       		.uleb128 0xe
 4007 00ac 3A       		.uleb128 0x3a
 4008 00ad 0B       		.uleb128 0xb
 4009 00ae 3B       		.uleb128 0x3b
 4010 00af 0B       		.uleb128 0xb
 4011 00b0 49       		.uleb128 0x49
 4012 00b1 13       		.uleb128 0x13
 4013 00b2 00       		.byte	0
 4014 00b3 00       		.byte	0
 4015 00b4 0F       		.uleb128 0xf
 4016 00b5 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 98


 4017 00b6 01       		.byte	0x1
 4018 00b7 49       		.uleb128 0x49
 4019 00b8 13       		.uleb128 0x13
 4020 00b9 01       		.uleb128 0x1
 4021 00ba 13       		.uleb128 0x13
 4022 00bb 00       		.byte	0
 4023 00bc 00       		.byte	0
 4024 00bd 10       		.uleb128 0x10
 4025 00be 21       		.uleb128 0x21
 4026 00bf 00       		.byte	0
 4027 00c0 49       		.uleb128 0x49
 4028 00c1 13       		.uleb128 0x13
 4029 00c2 2F       		.uleb128 0x2f
 4030 00c3 0B       		.uleb128 0xb
 4031 00c4 00       		.byte	0
 4032 00c5 00       		.byte	0
 4033 00c6 11       		.uleb128 0x11
 4034 00c7 0D       		.uleb128 0xd
 4035 00c8 00       		.byte	0
 4036 00c9 03       		.uleb128 0x3
 4037 00ca 08       		.uleb128 0x8
 4038 00cb 3A       		.uleb128 0x3a
 4039 00cc 0B       		.uleb128 0xb
 4040 00cd 3B       		.uleb128 0x3b
 4041 00ce 05       		.uleb128 0x5
 4042 00cf 49       		.uleb128 0x49
 4043 00d0 13       		.uleb128 0x13
 4044 00d1 00       		.byte	0
 4045 00d2 00       		.byte	0
 4046 00d3 12       		.uleb128 0x12
 4047 00d4 04       		.uleb128 0x4
 4048 00d5 01       		.byte	0x1
 4049 00d6 0B       		.uleb128 0xb
 4050 00d7 0B       		.uleb128 0xb
 4051 00d8 49       		.uleb128 0x49
 4052 00d9 13       		.uleb128 0x13
 4053 00da 3A       		.uleb128 0x3a
 4054 00db 0B       		.uleb128 0xb
 4055 00dc 3B       		.uleb128 0x3b
 4056 00dd 05       		.uleb128 0x5
 4057 00de 01       		.uleb128 0x1
 4058 00df 13       		.uleb128 0x13
 4059 00e0 00       		.byte	0
 4060 00e1 00       		.byte	0
 4061 00e2 13       		.uleb128 0x13
 4062 00e3 2E       		.uleb128 0x2e
 4063 00e4 01       		.byte	0x1
 4064 00e5 3F       		.uleb128 0x3f
 4065 00e6 19       		.uleb128 0x19
 4066 00e7 03       		.uleb128 0x3
 4067 00e8 0E       		.uleb128 0xe
 4068 00e9 3A       		.uleb128 0x3a
 4069 00ea 0B       		.uleb128 0xb
 4070 00eb 3B       		.uleb128 0x3b
 4071 00ec 05       		.uleb128 0x5
 4072 00ed 27       		.uleb128 0x27
 4073 00ee 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 99


 4074 00ef 11       		.uleb128 0x11
 4075 00f0 01       		.uleb128 0x1
 4076 00f1 12       		.uleb128 0x12
 4077 00f2 06       		.uleb128 0x6
 4078 00f3 40       		.uleb128 0x40
 4079 00f4 18       		.uleb128 0x18
 4080 00f5 9742     		.uleb128 0x2117
 4081 00f7 19       		.uleb128 0x19
 4082 00f8 01       		.uleb128 0x1
 4083 00f9 13       		.uleb128 0x13
 4084 00fa 00       		.byte	0
 4085 00fb 00       		.byte	0
 4086 00fc 14       		.uleb128 0x14
 4087 00fd 898201   		.uleb128 0x4109
 4088 0100 00       		.byte	0
 4089 0101 11       		.uleb128 0x11
 4090 0102 01       		.uleb128 0x1
 4091 0103 31       		.uleb128 0x31
 4092 0104 13       		.uleb128 0x13
 4093 0105 00       		.byte	0
 4094 0106 00       		.byte	0
 4095 0107 15       		.uleb128 0x15
 4096 0108 898201   		.uleb128 0x4109
 4097 010b 01       		.byte	0x1
 4098 010c 11       		.uleb128 0x11
 4099 010d 01       		.uleb128 0x1
 4100 010e 31       		.uleb128 0x31
 4101 010f 13       		.uleb128 0x13
 4102 0110 01       		.uleb128 0x1
 4103 0111 13       		.uleb128 0x13
 4104 0112 00       		.byte	0
 4105 0113 00       		.byte	0
 4106 0114 16       		.uleb128 0x16
 4107 0115 8A8201   		.uleb128 0x410a
 4108 0118 00       		.byte	0
 4109 0119 02       		.uleb128 0x2
 4110 011a 18       		.uleb128 0x18
 4111 011b 9142     		.uleb128 0x2111
 4112 011d 18       		.uleb128 0x18
 4113 011e 00       		.byte	0
 4114 011f 00       		.byte	0
 4115 0120 17       		.uleb128 0x17
 4116 0121 898201   		.uleb128 0x4109
 4117 0124 01       		.byte	0x1
 4118 0125 11       		.uleb128 0x11
 4119 0126 01       		.uleb128 0x1
 4120 0127 31       		.uleb128 0x31
 4121 0128 13       		.uleb128 0x13
 4122 0129 00       		.byte	0
 4123 012a 00       		.byte	0
 4124 012b 18       		.uleb128 0x18
 4125 012c 34       		.uleb128 0x34
 4126 012d 00       		.byte	0
 4127 012e 03       		.uleb128 0x3
 4128 012f 08       		.uleb128 0x8
 4129 0130 3A       		.uleb128 0x3a
 4130 0131 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 100


 4131 0132 3B       		.uleb128 0x3b
 4132 0133 05       		.uleb128 0x5
 4133 0134 49       		.uleb128 0x49
 4134 0135 13       		.uleb128 0x13
 4135 0136 02       		.uleb128 0x2
 4136 0137 17       		.uleb128 0x17
 4137 0138 00       		.byte	0
 4138 0139 00       		.byte	0
 4139 013a 19       		.uleb128 0x19
 4140 013b 05       		.uleb128 0x5
 4141 013c 00       		.byte	0
 4142 013d 03       		.uleb128 0x3
 4143 013e 0E       		.uleb128 0xe
 4144 013f 3A       		.uleb128 0x3a
 4145 0140 0B       		.uleb128 0xb
 4146 0141 3B       		.uleb128 0x3b
 4147 0142 05       		.uleb128 0x5
 4148 0143 49       		.uleb128 0x49
 4149 0144 13       		.uleb128 0x13
 4150 0145 02       		.uleb128 0x2
 4151 0146 17       		.uleb128 0x17
 4152 0147 00       		.byte	0
 4153 0148 00       		.byte	0
 4154 0149 1A       		.uleb128 0x1a
 4155 014a 05       		.uleb128 0x5
 4156 014b 00       		.byte	0
 4157 014c 03       		.uleb128 0x3
 4158 014d 0E       		.uleb128 0xe
 4159 014e 3A       		.uleb128 0x3a
 4160 014f 0B       		.uleb128 0xb
 4161 0150 3B       		.uleb128 0x3b
 4162 0151 05       		.uleb128 0x5
 4163 0152 49       		.uleb128 0x49
 4164 0153 13       		.uleb128 0x13
 4165 0154 02       		.uleb128 0x2
 4166 0155 18       		.uleb128 0x18
 4167 0156 00       		.byte	0
 4168 0157 00       		.byte	0
 4169 0158 1B       		.uleb128 0x1b
 4170 0159 2E       		.uleb128 0x2e
 4171 015a 01       		.byte	0x1
 4172 015b 3F       		.uleb128 0x3f
 4173 015c 19       		.uleb128 0x19
 4174 015d 03       		.uleb128 0x3
 4175 015e 0E       		.uleb128 0xe
 4176 015f 3A       		.uleb128 0x3a
 4177 0160 0B       		.uleb128 0xb
 4178 0161 3B       		.uleb128 0x3b
 4179 0162 05       		.uleb128 0x5
 4180 0163 27       		.uleb128 0x27
 4181 0164 19       		.uleb128 0x19
 4182 0165 11       		.uleb128 0x11
 4183 0166 01       		.uleb128 0x1
 4184 0167 12       		.uleb128 0x12
 4185 0168 06       		.uleb128 0x6
 4186 0169 40       		.uleb128 0x40
 4187 016a 18       		.uleb128 0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 101


 4188 016b 9642     		.uleb128 0x2116
 4189 016d 19       		.uleb128 0x19
 4190 016e 01       		.uleb128 0x1
 4191 016f 13       		.uleb128 0x13
 4192 0170 00       		.byte	0
 4193 0171 00       		.byte	0
 4194 0172 1C       		.uleb128 0x1c
 4195 0173 34       		.uleb128 0x34
 4196 0174 00       		.byte	0
 4197 0175 03       		.uleb128 0x3
 4198 0176 0E       		.uleb128 0xe
 4199 0177 3A       		.uleb128 0x3a
 4200 0178 0B       		.uleb128 0xb
 4201 0179 3B       		.uleb128 0x3b
 4202 017a 05       		.uleb128 0x5
 4203 017b 49       		.uleb128 0x49
 4204 017c 13       		.uleb128 0x13
 4205 017d 02       		.uleb128 0x2
 4206 017e 18       		.uleb128 0x18
 4207 017f 00       		.byte	0
 4208 0180 00       		.byte	0
 4209 0181 1D       		.uleb128 0x1d
 4210 0182 34       		.uleb128 0x34
 4211 0183 00       		.byte	0
 4212 0184 03       		.uleb128 0x3
 4213 0185 0E       		.uleb128 0xe
 4214 0186 3A       		.uleb128 0x3a
 4215 0187 0B       		.uleb128 0xb
 4216 0188 3B       		.uleb128 0x3b
 4217 0189 05       		.uleb128 0x5
 4218 018a 49       		.uleb128 0x49
 4219 018b 13       		.uleb128 0x13
 4220 018c 00       		.byte	0
 4221 018d 00       		.byte	0
 4222 018e 1E       		.uleb128 0x1e
 4223 018f 34       		.uleb128 0x34
 4224 0190 00       		.byte	0
 4225 0191 03       		.uleb128 0x3
 4226 0192 0E       		.uleb128 0xe
 4227 0193 3A       		.uleb128 0x3a
 4228 0194 0B       		.uleb128 0xb
 4229 0195 3B       		.uleb128 0x3b
 4230 0196 05       		.uleb128 0x5
 4231 0197 49       		.uleb128 0x49
 4232 0198 13       		.uleb128 0x13
 4233 0199 02       		.uleb128 0x2
 4234 019a 17       		.uleb128 0x17
 4235 019b 00       		.byte	0
 4236 019c 00       		.byte	0
 4237 019d 1F       		.uleb128 0x1f
 4238 019e 2E       		.uleb128 0x2e
 4239 019f 01       		.byte	0x1
 4240 01a0 3F       		.uleb128 0x3f
 4241 01a1 19       		.uleb128 0x19
 4242 01a2 03       		.uleb128 0x3
 4243 01a3 0E       		.uleb128 0xe
 4244 01a4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 102


 4245 01a5 0B       		.uleb128 0xb
 4246 01a6 3B       		.uleb128 0x3b
 4247 01a7 05       		.uleb128 0x5
 4248 01a8 27       		.uleb128 0x27
 4249 01a9 19       		.uleb128 0x19
 4250 01aa 49       		.uleb128 0x49
 4251 01ab 13       		.uleb128 0x13
 4252 01ac 11       		.uleb128 0x11
 4253 01ad 01       		.uleb128 0x1
 4254 01ae 12       		.uleb128 0x12
 4255 01af 06       		.uleb128 0x6
 4256 01b0 40       		.uleb128 0x40
 4257 01b1 18       		.uleb128 0x18
 4258 01b2 9742     		.uleb128 0x2117
 4259 01b4 19       		.uleb128 0x19
 4260 01b5 01       		.uleb128 0x1
 4261 01b6 13       		.uleb128 0x13
 4262 01b7 00       		.byte	0
 4263 01b8 00       		.byte	0
 4264 01b9 20       		.uleb128 0x20
 4265 01ba 34       		.uleb128 0x34
 4266 01bb 00       		.byte	0
 4267 01bc 03       		.uleb128 0x3
 4268 01bd 0E       		.uleb128 0xe
 4269 01be 3A       		.uleb128 0x3a
 4270 01bf 0B       		.uleb128 0xb
 4271 01c0 3B       		.uleb128 0x3b
 4272 01c1 05       		.uleb128 0x5
 4273 01c2 49       		.uleb128 0x49
 4274 01c3 13       		.uleb128 0x13
 4275 01c4 1C       		.uleb128 0x1c
 4276 01c5 0B       		.uleb128 0xb
 4277 01c6 00       		.byte	0
 4278 01c7 00       		.byte	0
 4279 01c8 21       		.uleb128 0x21
 4280 01c9 26       		.uleb128 0x26
 4281 01ca 00       		.byte	0
 4282 01cb 49       		.uleb128 0x49
 4283 01cc 13       		.uleb128 0x13
 4284 01cd 00       		.byte	0
 4285 01ce 00       		.byte	0
 4286 01cf 22       		.uleb128 0x22
 4287 01d0 2E       		.uleb128 0x2e
 4288 01d1 01       		.byte	0x1
 4289 01d2 3F       		.uleb128 0x3f
 4290 01d3 19       		.uleb128 0x19
 4291 01d4 03       		.uleb128 0x3
 4292 01d5 0E       		.uleb128 0xe
 4293 01d6 3A       		.uleb128 0x3a
 4294 01d7 0B       		.uleb128 0xb
 4295 01d8 3B       		.uleb128 0x3b
 4296 01d9 05       		.uleb128 0x5
 4297 01da 27       		.uleb128 0x27
 4298 01db 19       		.uleb128 0x19
 4299 01dc 49       		.uleb128 0x49
 4300 01dd 13       		.uleb128 0x13
 4301 01de 8701     		.uleb128 0x87
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 103


 4302 01e0 19       		.uleb128 0x19
 4303 01e1 11       		.uleb128 0x11
 4304 01e2 01       		.uleb128 0x1
 4305 01e3 12       		.uleb128 0x12
 4306 01e4 06       		.uleb128 0x6
 4307 01e5 40       		.uleb128 0x40
 4308 01e6 18       		.uleb128 0x18
 4309 01e7 9742     		.uleb128 0x2117
 4310 01e9 19       		.uleb128 0x19
 4311 01ea 01       		.uleb128 0x1
 4312 01eb 13       		.uleb128 0x13
 4313 01ec 00       		.byte	0
 4314 01ed 00       		.byte	0
 4315 01ee 23       		.uleb128 0x23
 4316 01ef 34       		.uleb128 0x34
 4317 01f0 00       		.byte	0
 4318 01f1 03       		.uleb128 0x3
 4319 01f2 0E       		.uleb128 0xe
 4320 01f3 3A       		.uleb128 0x3a
 4321 01f4 0B       		.uleb128 0xb
 4322 01f5 3B       		.uleb128 0x3b
 4323 01f6 0B       		.uleb128 0xb
 4324 01f7 49       		.uleb128 0x49
 4325 01f8 13       		.uleb128 0x13
 4326 01f9 3F       		.uleb128 0x3f
 4327 01fa 19       		.uleb128 0x19
 4328 01fb 02       		.uleb128 0x2
 4329 01fc 18       		.uleb128 0x18
 4330 01fd 00       		.byte	0
 4331 01fe 00       		.byte	0
 4332 01ff 24       		.uleb128 0x24
 4333 0200 34       		.uleb128 0x34
 4334 0201 00       		.byte	0
 4335 0202 03       		.uleb128 0x3
 4336 0203 08       		.uleb128 0x8
 4337 0204 3A       		.uleb128 0x3a
 4338 0205 0B       		.uleb128 0xb
 4339 0206 3B       		.uleb128 0x3b
 4340 0207 0B       		.uleb128 0xb
 4341 0208 49       		.uleb128 0x49
 4342 0209 13       		.uleb128 0x13
 4343 020a 3F       		.uleb128 0x3f
 4344 020b 19       		.uleb128 0x19
 4345 020c 02       		.uleb128 0x2
 4346 020d 18       		.uleb128 0x18
 4347 020e 00       		.byte	0
 4348 020f 00       		.byte	0
 4349 0210 25       		.uleb128 0x25
 4350 0211 34       		.uleb128 0x34
 4351 0212 00       		.byte	0
 4352 0213 03       		.uleb128 0x3
 4353 0214 0E       		.uleb128 0xe
 4354 0215 3A       		.uleb128 0x3a
 4355 0216 0B       		.uleb128 0xb
 4356 0217 3B       		.uleb128 0x3b
 4357 0218 05       		.uleb128 0x5
 4358 0219 49       		.uleb128 0x49
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 104


 4359 021a 13       		.uleb128 0x13
 4360 021b 3F       		.uleb128 0x3f
 4361 021c 19       		.uleb128 0x19
 4362 021d 02       		.uleb128 0x2
 4363 021e 18       		.uleb128 0x18
 4364 021f 00       		.byte	0
 4365 0220 00       		.byte	0
 4366 0221 26       		.uleb128 0x26
 4367 0222 2E       		.uleb128 0x2e
 4368 0223 00       		.byte	0
 4369 0224 3F       		.uleb128 0x3f
 4370 0225 19       		.uleb128 0x19
 4371 0226 3C       		.uleb128 0x3c
 4372 0227 19       		.uleb128 0x19
 4373 0228 6E       		.uleb128 0x6e
 4374 0229 0E       		.uleb128 0xe
 4375 022a 03       		.uleb128 0x3
 4376 022b 0E       		.uleb128 0xe
 4377 022c 3A       		.uleb128 0x3a
 4378 022d 0B       		.uleb128 0xb
 4379 022e 3B       		.uleb128 0x3b
 4380 022f 0B       		.uleb128 0xb
 4381 0230 00       		.byte	0
 4382 0231 00       		.byte	0
 4383 0232 27       		.uleb128 0x27
 4384 0233 2E       		.uleb128 0x2e
 4385 0234 00       		.byte	0
 4386 0235 3F       		.uleb128 0x3f
 4387 0236 19       		.uleb128 0x19
 4388 0237 3C       		.uleb128 0x3c
 4389 0238 19       		.uleb128 0x19
 4390 0239 6E       		.uleb128 0x6e
 4391 023a 0E       		.uleb128 0xe
 4392 023b 03       		.uleb128 0x3
 4393 023c 0E       		.uleb128 0xe
 4394 023d 00       		.byte	0
 4395 023e 00       		.byte	0
 4396 023f 28       		.uleb128 0x28
 4397 0240 2E       		.uleb128 0x2e
 4398 0241 00       		.byte	0
 4399 0242 3F       		.uleb128 0x3f
 4400 0243 19       		.uleb128 0x19
 4401 0244 3C       		.uleb128 0x3c
 4402 0245 19       		.uleb128 0x19
 4403 0246 6E       		.uleb128 0x6e
 4404 0247 0E       		.uleb128 0xe
 4405 0248 03       		.uleb128 0x3
 4406 0249 0E       		.uleb128 0xe
 4407 024a 3A       		.uleb128 0x3a
 4408 024b 0B       		.uleb128 0xb
 4409 024c 3B       		.uleb128 0x3b
 4410 024d 05       		.uleb128 0x5
 4411 024e 00       		.byte	0
 4412 024f 00       		.byte	0
 4413 0250 00       		.byte	0
 4414              		.section	.debug_loc,"",%progbits
 4415              	.Ldebug_loc0:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 105


 4416              	.LLST0:
 4417 0000 2A000000 		.4byte	.LVL9
 4418 0004 2E000000 		.4byte	.LVL10
 4419 0008 0200     		.2byte	0x2
 4420 000a 30       		.byte	0x30
 4421 000b 9F       		.byte	0x9f
 4422 000c 2E000000 		.4byte	.LVL10
 4423 0010 4A000000 		.4byte	.LVL15
 4424 0014 0100     		.2byte	0x1
 4425 0016 54       		.byte	0x54
 4426 0017 00000000 		.4byte	0
 4427 001b 00000000 		.4byte	0
 4428              	.LLST1:
 4429 001f 00000000 		.4byte	.LVL16
 4430 0023 12000000 		.4byte	.LVL17
 4431 0027 0100     		.2byte	0x1
 4432 0029 50       		.byte	0x50
 4433 002a 12000000 		.4byte	.LVL17
 4434 002e 1C000000 		.4byte	.LFE32
 4435 0032 0400     		.2byte	0x4
 4436 0034 F3       		.byte	0xf3
 4437 0035 01       		.uleb128 0x1
 4438 0036 50       		.byte	0x50
 4439 0037 9F       		.byte	0x9f
 4440 0038 00000000 		.4byte	0
 4441 003c 00000000 		.4byte	0
 4442              	.LLST2:
 4443 0040 00000000 		.4byte	.LVL23
 4444 0044 0D000000 		.4byte	.LVL25-1
 4445 0048 0100     		.2byte	0x1
 4446 004a 50       		.byte	0x50
 4447 004b 0D000000 		.4byte	.LVL25-1
 4448 004f 36000000 		.4byte	.LVL32
 4449 0053 0100     		.2byte	0x1
 4450 0055 55       		.byte	0x55
 4451 0056 36000000 		.4byte	.LVL32
 4452 005a 40000000 		.4byte	.LFE36
 4453 005e 0600     		.2byte	0x6
 4454 0060 F3       		.byte	0xf3
 4455 0061 03       		.uleb128 0x3
 4456 0062 F5       		.byte	0xf5
 4457 0063 00       		.uleb128 0
 4458 0064 25       		.uleb128 0x25
 4459 0065 9F       		.byte	0x9f
 4460 0066 00000000 		.4byte	0
 4461 006a 00000000 		.4byte	0
 4462              	.LLST3:
 4463 006e 04000000 		.4byte	.LVL24
 4464 0072 0D000000 		.4byte	.LVL25-1
 4465 0076 0100     		.2byte	0x1
 4466 0078 50       		.byte	0x50
 4467 0079 0D000000 		.4byte	.LVL25-1
 4468 007d 24000000 		.4byte	.LVL27
 4469 0081 0100     		.2byte	0x1
 4470 0083 55       		.byte	0x55
 4471 0084 24000000 		.4byte	.LVL27
 4472 0088 36000000 		.4byte	.LVL31
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 106


 4473 008c 0100     		.2byte	0x1
 4474 008e 54       		.byte	0x54
 4475 008f 00000000 		.4byte	0
 4476 0093 00000000 		.4byte	0
 4477              	.LLST4:
 4478 0097 1C000000 		.4byte	.LVL35
 4479 009b D4000000 		.4byte	.LVL50
 4480 009f 0100     		.2byte	0x1
 4481 00a1 54       		.byte	0x54
 4482 00a2 2A010000 		.4byte	.LVL59
 4483 00a6 5A010000 		.4byte	.LVL63
 4484 00aa 0100     		.2byte	0x1
 4485 00ac 54       		.byte	0x54
 4486 00ad 90010000 		.4byte	.LVL65
 4487 00b1 92010000 		.4byte	.LVL66
 4488 00b5 0100     		.2byte	0x1
 4489 00b7 54       		.byte	0x54
 4490 00b8 92010000 		.4byte	.LVL66
 4491 00bc AD010000 		.4byte	.LVL69-1
 4492 00c0 0200     		.2byte	0x2
 4493 00c2 74       		.byte	0x74
 4494 00c3 02       		.sleb128 2
 4495 00c4 00000000 		.4byte	0
 4496 00c8 00000000 		.4byte	0
 4497              	.LLST5:
 4498 00cc 1A000000 		.4byte	.LVL34
 4499 00d0 C8000000 		.4byte	.LVL47
 4500 00d4 0100     		.2byte	0x1
 4501 00d6 50       		.byte	0x50
 4502 00d7 2A010000 		.4byte	.LVL59
 4503 00db 2C010000 		.4byte	.LVL60
 4504 00df 0100     		.2byte	0x1
 4505 00e1 50       		.byte	0x50
 4506 00e2 90010000 		.4byte	.LVL65
 4507 00e6 9E010000 		.4byte	.LVL68
 4508 00ea 0100     		.2byte	0x1
 4509 00ec 50       		.byte	0x50
 4510 00ed 00000000 		.4byte	0
 4511 00f1 00000000 		.4byte	0
 4512              	.LLST6:
 4513 00f5 22000000 		.4byte	.LVL36
 4514 00f9 28000000 		.4byte	.LVL37
 4515 00fd 0200     		.2byte	0x2
 4516 00ff 30       		.byte	0x30
 4517 0100 9F       		.byte	0x9f
 4518 0101 28000000 		.4byte	.LVL37
 4519 0105 32000000 		.4byte	.LVL40
 4520 0109 0100     		.2byte	0x1
 4521 010b 53       		.byte	0x53
 4522 010c 34000000 		.4byte	.LVL41
 4523 0110 3E000000 		.4byte	.LVL42
 4524 0114 0100     		.2byte	0x1
 4525 0116 53       		.byte	0x53
 4526 0117 50000000 		.4byte	.LVL44
 4527 011b 52000000 		.4byte	.LVL45
 4528 011f 0100     		.2byte	0x1
 4529 0121 53       		.byte	0x53
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 107


 4530 0122 30020000 		.4byte	.LVL71
 4531 0126 36020000 		.4byte	.LVL72
 4532 012a 0200     		.2byte	0x2
 4533 012c 30       		.byte	0x30
 4534 012d 9F       		.byte	0x9f
 4535 012e 36020000 		.4byte	.LVL72
 4536 0132 40020000 		.4byte	.LVL75
 4537 0136 0100     		.2byte	0x1
 4538 0138 53       		.byte	0x53
 4539 0139 42020000 		.4byte	.LVL76
 4540 013d 51020000 		.4byte	.LVL78-1
 4541 0141 0100     		.2byte	0x1
 4542 0143 53       		.byte	0x53
 4543 0144 00000000 		.4byte	0
 4544 0148 00000000 		.4byte	0
 4545              	.LLST7:
 4546 014c 22000000 		.4byte	.LVL36
 4547 0150 28000000 		.4byte	.LVL37
 4548 0154 0200     		.2byte	0x2
 4549 0156 30       		.byte	0x30
 4550 0157 9F       		.byte	0x9f
 4551 0158 28000000 		.4byte	.LVL37
 4552 015c 2E000000 		.4byte	.LVL38
 4553 0160 0100     		.2byte	0x1
 4554 0162 52       		.byte	0x52
 4555 0163 30000000 		.4byte	.LVL39
 4556 0167 42000000 		.4byte	.LVL43
 4557 016b 0100     		.2byte	0x1
 4558 016d 52       		.byte	0x52
 4559 016e 50000000 		.4byte	.LVL44
 4560 0172 6E000000 		.4byte	.LVL46
 4561 0176 0100     		.2byte	0x1
 4562 0178 52       		.byte	0x52
 4563 0179 2A010000 		.4byte	.LVL59
 4564 017d 32010000 		.4byte	.LVL61
 4565 0181 0100     		.2byte	0x1
 4566 0183 52       		.byte	0x52
 4567 0184 90010000 		.4byte	.LVL65
 4568 0188 9C010000 		.4byte	.LVL67
 4569 018c 0100     		.2byte	0x1
 4570 018e 52       		.byte	0x52
 4571 018f 30020000 		.4byte	.LVL71
 4572 0193 36020000 		.4byte	.LVL72
 4573 0197 0200     		.2byte	0x2
 4574 0199 30       		.byte	0x30
 4575 019a 9F       		.byte	0x9f
 4576 019b 36020000 		.4byte	.LVL72
 4577 019f 3C020000 		.4byte	.LVL73
 4578 01a3 0100     		.2byte	0x1
 4579 01a5 52       		.byte	0x52
 4580 01a6 3E020000 		.4byte	.LVL74
 4581 01aa 4A020000 		.4byte	.LVL77
 4582 01ae 0100     		.2byte	0x1
 4583 01b0 52       		.byte	0x52
 4584 01b1 00000000 		.4byte	0
 4585 01b5 00000000 		.4byte	0
 4586              	.LLST8:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 108


 4587 01b9 C8000000 		.4byte	.LVL47
 4588 01bd D1000000 		.4byte	.LVL49-1
 4589 01c1 0100     		.2byte	0x1
 4590 01c3 50       		.byte	0x50
 4591 01c4 DC000000 		.4byte	.LVL51
 4592 01c8 E5000000 		.4byte	.LVL53-1
 4593 01cc 0100     		.2byte	0x1
 4594 01ce 50       		.byte	0x50
 4595 01cf 00000000 		.4byte	0
 4596 01d3 00000000 		.4byte	0
 4597              	.LLST9:
 4598 01d7 00000000 		.4byte	.LVL81
 4599 01db 19000000 		.4byte	.LVL83-1
 4600 01df 0100     		.2byte	0x1
 4601 01e1 50       		.byte	0x50
 4602 01e2 19000000 		.4byte	.LVL83-1
 4603 01e6 24000000 		.4byte	.LFE39
 4604 01ea 0400     		.2byte	0x4
 4605 01ec F3       		.byte	0xf3
 4606 01ed 01       		.uleb128 0x1
 4607 01ee 50       		.byte	0x50
 4608 01ef 9F       		.byte	0x9f
 4609 01f0 00000000 		.4byte	0
 4610 01f4 00000000 		.4byte	0
 4611              	.LLST10:
 4612 01f8 0A000000 		.4byte	.LVL82
 4613 01fc 1E000000 		.4byte	.LVL84
 4614 0200 0100     		.2byte	0x1
 4615 0202 54       		.byte	0x54
 4616 0203 1E000000 		.4byte	.LVL84
 4617 0207 24000000 		.4byte	.LFE39
 4618 020b 0500     		.2byte	0x5
 4619 020d 03       		.byte	0x3
 4620 020e 00000000 		.4byte	inAuto
 4621 0212 00000000 		.4byte	0
 4622 0216 00000000 		.4byte	0
 4623              	.LLST11:
 4624 021a 00000000 		.4byte	.LVL85
 4625 021e 07000000 		.4byte	.LVL86-1
 4626 0222 0100     		.2byte	0x1
 4627 0224 50       		.byte	0x50
 4628 0225 07000000 		.4byte	.LVL86-1
 4629 0229 1C000000 		.4byte	.LFE40
 4630 022d 0600     		.2byte	0x6
 4631 022f F3       		.byte	0xf3
 4632 0230 03       		.uleb128 0x3
 4633 0231 F5       		.byte	0xf5
 4634 0232 00       		.uleb128 0
 4635 0233 25       		.uleb128 0x25
 4636 0234 9F       		.byte	0x9f
 4637 0235 00000000 		.4byte	0
 4638 0239 00000000 		.4byte	0
 4639              	.LLST12:
 4640 023d 10000000 		.4byte	.LVL87
 4641 0241 13000000 		.4byte	.LVL88-1
 4642 0245 0100     		.2byte	0x1
 4643 0247 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 109


 4644 0248 00000000 		.4byte	0
 4645 024c 00000000 		.4byte	0
 4646              	.LLST13:
 4647 0250 C6010000 		.4byte	.LVL106
 4648 0254 C9010000 		.4byte	.LVL107-1
 4649 0258 0100     		.2byte	0x1
 4650 025a 50       		.byte	0x50
 4651 025b 00000000 		.4byte	0
 4652 025f 00000000 		.4byte	0
 4653              	.LLST14:
 4654 0263 16020000 		.4byte	.LVL112
 4655 0267 4A020000 		.4byte	.LVL118
 4656 026b 0100     		.2byte	0x1
 4657 026d 54       		.byte	0x54
 4658 026e 00000000 		.4byte	0
 4659 0272 00000000 		.4byte	0
 4660              		.section	.debug_aranges,"",%progbits
 4661 0000 8C000000 		.4byte	0x8c
 4662 0004 0200     		.2byte	0x2
 4663 0006 00000000 		.4byte	.Ldebug_info0
 4664 000a 04       		.byte	0x4
 4665 000b 00       		.byte	0
 4666 000c 0000     		.2byte	0
 4667 000e 0000     		.2byte	0
 4668 0010 00000000 		.4byte	.LFB44
 4669 0014 24000000 		.4byte	.LFE44-.LFB44
 4670 0018 00000000 		.4byte	.LFB45
 4671 001c 1C000000 		.4byte	.LFE45-.LFB45
 4672 0020 00000000 		.4byte	.LFB46
 4673 0024 60000000 		.4byte	.LFE46-.LFB46
 4674 0028 00000000 		.4byte	.LFB32
 4675 002c 1C000000 		.4byte	.LFE32-.LFB32
 4676 0030 00000000 		.4byte	.LFB33
 4677 0034 1C000000 		.4byte	.LFE33-.LFB33
 4678 0038 00000000 		.4byte	.LFB34
 4679 003c 34000000 		.4byte	.LFE34-.LFB34
 4680 0040 00000000 		.4byte	.LFB36
 4681 0044 40000000 		.4byte	.LFE36-.LFB36
 4682 0048 00000000 		.4byte	.LFB37
 4683 004c 44000000 		.4byte	.LFE37-.LFB37
 4684 0050 00000000 		.4byte	.LFB35
 4685 0054 D4020000 		.4byte	.LFE35-.LFB35
 4686 0058 00000000 		.4byte	.LFB38
 4687 005c 30000000 		.4byte	.LFE38-.LFB38
 4688 0060 00000000 		.4byte	.LFB39
 4689 0064 24000000 		.4byte	.LFE39-.LFB39
 4690 0068 00000000 		.4byte	.LFB40
 4691 006c 1C000000 		.4byte	.LFE40-.LFB40
 4692 0070 00000000 		.4byte	.LFB41
 4693 0074 FC020000 		.4byte	.LFE41-.LFB41
 4694 0078 00000000 		.4byte	.LFB43
 4695 007c 78000000 		.4byte	.LFE43-.LFB43
 4696 0080 00000000 		.4byte	.LFB42
 4697 0084 D0000000 		.4byte	.LFE42-.LFB42
 4698 0088 00000000 		.4byte	0
 4699 008c 00000000 		.4byte	0
 4700              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 110


 4701              	.Ldebug_ranges0:
 4702 0000 00000000 		.4byte	.LFB44
 4703 0004 24000000 		.4byte	.LFE44
 4704 0008 00000000 		.4byte	.LFB45
 4705 000c 1C000000 		.4byte	.LFE45
 4706 0010 00000000 		.4byte	.LFB46
 4707 0014 60000000 		.4byte	.LFE46
 4708 0018 00000000 		.4byte	.LFB32
 4709 001c 1C000000 		.4byte	.LFE32
 4710 0020 00000000 		.4byte	.LFB33
 4711 0024 1C000000 		.4byte	.LFE33
 4712 0028 00000000 		.4byte	.LFB34
 4713 002c 34000000 		.4byte	.LFE34
 4714 0030 00000000 		.4byte	.LFB36
 4715 0034 40000000 		.4byte	.LFE36
 4716 0038 00000000 		.4byte	.LFB37
 4717 003c 44000000 		.4byte	.LFE37
 4718 0040 00000000 		.4byte	.LFB35
 4719 0044 D4020000 		.4byte	.LFE35
 4720 0048 00000000 		.4byte	.LFB38
 4721 004c 30000000 		.4byte	.LFE38
 4722 0050 00000000 		.4byte	.LFB39
 4723 0054 24000000 		.4byte	.LFE39
 4724 0058 00000000 		.4byte	.LFB40
 4725 005c 1C000000 		.4byte	.LFE40
 4726 0060 00000000 		.4byte	.LFB41
 4727 0064 FC020000 		.4byte	.LFE41
 4728 0068 00000000 		.4byte	.LFB43
 4729 006c 78000000 		.4byte	.LFE43
 4730 0070 00000000 		.4byte	.LFB42
 4731 0074 D0000000 		.4byte	.LFE42
 4732 0078 00000000 		.4byte	0
 4733 007c 00000000 		.4byte	0
 4734              		.section	.debug_line,"",%progbits
 4735              	.Ldebug_line0:
 4736 0000 B5040000 		.section	.debug_str,"MS",%progbits,1
 4736      02005C02 
 4736      00000201 
 4736      FB0E0D00 
 4736      01010101 
 4737              	.LASF171:
 4738 0000 43794465 		.ascii	"CyDelay\000"
 4738      6C617900 
 4739              	.LASF136:
 4740 0008 72784D65 		.ascii	"rxMessage\000"
 4740      73736167 
 4740      6500
 4741              	.LASF178:
 4742 0012 6D61696E 		.ascii	"main.c\000"
 4742      2E6300
 4743              	.LASF106:
 4744 0019 62726D73 		.ascii	"brmsRG4Mask\000"
 4744      5247344D 
 4744      61736B00 
 4745              	.LASF72:
 4746 0025 74786D73 		.ascii	"txmsClear\000"
 4746      436C6561 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 111


 4746      7200
 4747              	.LASF102:
 4748 002f 62726D73 		.ascii	"brmsTask\000"
 4748      5461736B 
 4748      00
 4749              	.LASF52:
 4750 0038 65666673 		.ascii	"effsetdelta\000"
 4750      65746465 
 4750      6C746100 
 4751              	.LASF31:
 4752 0044 6673456E 		.ascii	"fsEncoder\000"
 4752      636F6465 
 4752      7200
 4753              	.LASF25:
 4754 004e 6373556E 		.ascii	"csUnconfig\000"
 4754      636F6E66 
 4754      696700
 4755              	.LASF93:
 4756 0059 6E657741 		.ascii	"newAuto\000"
 4756      75746F00 
 4757              	.LASF9:
 4758 0061 756E7369 		.ascii	"unsigned int\000"
 4758      676E6564 
 4758      20696E74 
 4758      00
 4759              	.LASF103:
 4760 006e 62726D73 		.ascii	"brmsRG1Mask\000"
 4760      5247314D 
 4760      61736B00 
 4761              	.LASF133:
 4762 007a 43757272 		.ascii	"Current\000"
 4762      656E7400 
 4763              	.LASF96:
 4764 0082 72756E52 		.ascii	"runRateGroup1_PID\000"
 4764      61746547 
 4764      726F7570 
 4764      315F5049 
 4764      4400
 4765              	.LASF56:
 4766 0094 636C6561 		.ascii	"clearfaults\000"
 4766      72666175 
 4766      6C747300 
 4767              	.LASF16:
 4768 00a0 696E7431 		.ascii	"int16\000"
 4768      3600
 4769              	.LASF144:
 4770 00a6 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4770      5F494E5F 
 4770      436C6561 
 4770      72496E74 
 4770      65727275 
 4771              	.LASF89:
 4772 00bd 6C696D69 		.ascii	"limit\000"
 4772      7400
 4773              	.LASF161:
 4774 00c3 4C45445F 		.ascii	"LED_Write\000"
 4774      57726974 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 112


 4774      6500
 4775              	.LASF76:
 4776 00cd 486F6D65 		.ascii	"HomeIsrHandler\000"
 4776      49737248 
 4776      616E646C 
 4776      657200
 4777              	.LASF74:
 4778 00dc 74784D65 		.ascii	"txMessageStates_t\000"
 4778      73736167 
 4778      65537461 
 4778      7465735F 
 4778      7400
 4779              	.LASF99:
 4780 00ee 6572726F 		.ascii	"error\000"
 4780      7200
 4781              	.LASF79:
 4782 00f4 436C6561 		.ascii	"ClearFault\000"
 4782      72466175 
 4782      6C7400
 4783              	.LASF150:
 4784 00ff 4932435F 		.ascii	"I2C_Start\000"
 4784      53746172 
 4784      7400
 4785              	.LASF109:
 4786 0109 4C617374 		.ascii	"LastJog\000"
 4786      4A6F6700 
 4787              	.LASF26:
 4788 0111 63735265 		.ascii	"csReady\000"
 4788      61647900 
 4789              	.LASF149:
 4790 0119 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4790      315F5370 
 4790      69556172 
 4790      74436C65 
 4790      61725478 
 4791              	.LASF58:
 4792 0134 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4792      73736167 
 4792      655F7365 
 4792      74656E63 
 4792      5F7400
 4793              	.LASF44:
 4794 0147 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4794      73736167 
 4794      655F6F70 
 4794      636F6465 
 4794      735F7400 
 4795              	.LASF57:
 4796 015b 72784D65 		.ascii	"rxMessage_status_t\000"
 4796      73736167 
 4796      655F7374 
 4796      61747573 
 4796      5F7400
 4797              	.LASF78:
 4798 016e 41737365 		.ascii	"AssertFault\000"
 4798      72744661 
 4798      756C7400 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 113


 4799              	.LASF0:
 4800 017a 666C6F61 		.ascii	"float\000"
 4800      7400
 4801              	.LASF169:
 4802 0180 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4802      7370695F 
 4802      73735F53 
 4802      74617274 
 4802      457800
 4803              	.LASF45:
 4804 0193 63686563 		.ascii	"checksum\000"
 4804      6B73756D 
 4804      00
 4805              	.LASF62:
 4806 019c 73657465 		.ascii	"setenc\000"
 4806      6E6300
 4807              	.LASF17:
 4808 01a3 696E7433 		.ascii	"int32\000"
 4808      3200
 4809              	.LASF11:
 4810 01a9 696E7431 		.ascii	"int16_t\000"
 4810      365F7400 
 4811              	.LASF87:
 4812 01b1 72657375 		.ascii	"result\000"
 4812      6C7400
 4813              	.LASF8:
 4814 01b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4814      206C6F6E 
 4814      6720756E 
 4814      7369676E 
 4814      65642069 
 4815              	.LASF114:
 4816 01cf 5049445F 		.ascii	"PID_EffSetDelta\000"
 4816      45666653 
 4816      65744465 
 4816      6C746100 
 4817              	.LASF115:
 4818 01df 6C617374 		.ascii	"lastTime\000"
 4818      54696D65 
 4818      00
 4819              	.LASF125:
 4820 01e8 70776D4D 		.ascii	"pwmMin\000"
 4820      696E00
 4821              	.LASF142:
 4822 01ef 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4822      785F436F 
 4822      756E7465 
 4822      725F315F 
 4822      57726974 
 4823              	.LASF117:
 4824 020c 49546572 		.ascii	"ITerm\000"
 4824      6D00
 4825              	.LASF54:
 4826 0212 656E6162 		.ascii	"enable\000"
 4826      6C6500
 4827              	.LASF174:
 4828 0219 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 114


 4828      315F5772 
 4828      69746550 
 4828      6572696F 
 4828      6400
 4829              	.LASF81:
 4830 022b 696E6974 		.ascii	"initialized\000"
 4830      69616C69 
 4830      7A656400 
 4831              	.LASF129:
 4832 0237 436F6E66 		.ascii	"ConfigState\000"
 4832      69675374 
 4832      61746500 
 4833              	.LASF177:
 4834 0243 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4834      43313120 
 4834      352E342E 
 4834      31203230 
 4834      31363036 
 4835 0276 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4835      20726576 
 4835      6973696F 
 4835      6E203233 
 4835      37373135 
 4836 02a9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4836      66756E63 
 4836      74696F6E 
 4836      2D736563 
 4836      74696F6E 
 4837              	.LASF51:
 4838 02d1 6C696D69 		.ascii	"limit_ITerm\000"
 4838      745F4954 
 4838      65726D00 
 4839              	.LASF121:
 4840 02dd 6F75744D 		.ascii	"outMax_Total\000"
 4840      61785F54 
 4840      6F74616C 
 4840      00
 4841              	.LASF163:
 4842 02ea 6973725F 		.ascii	"isr_brms_StartEx\000"
 4842      62726D73 
 4842      5F537461 
 4842      72744578 
 4842      00
 4843              	.LASF94:
 4844 02fb 5049445F 		.ascii	"PID_SetDrive\000"
 4844      53657444 
 4844      72697665 
 4844      00
 4845              	.LASF162:
 4846 0308 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4846      725F4252 
 4846      4D535F53 
 4846      74617274 
 4846      00
 4847              	.LASF82:
 4848 0319 5F426F6F 		.ascii	"_Bool\000"
 4848      6C00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 115


 4849              	.LASF30:
 4850 031f 6673556E 		.ascii	"fsUnconfigured\000"
 4850      636F6E66 
 4850      69677572 
 4850      656400
 4851              	.LASF108:
 4852 032e 696E4175 		.ascii	"inAuto\000"
 4852      746F00
 4853              	.LASF85:
 4854 0335 64726976 		.ascii	"drive\000"
 4854      6500
 4855              	.LASF155:
 4856 033b 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4856      315F5370 
 4856      69556172 
 4856      74507574 
 4856      41727261 
 4857              	.LASF145:
 4858 0351 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4858      73735F43 
 4858      6C656172 
 4858      496E7465 
 4858      72727570 
 4859              	.LASF180:
 4860 0367 43757272 		.ascii	"CurrentTemp\000"
 4860      656E7454 
 4860      656D7000 
 4861              	.LASF154:
 4862 0373 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4862      7465725F 
 4862      315F5265 
 4862      6164436F 
 4862      756E7465 
 4863              	.LASF63:
 4864 0389 76657273 		.ascii	"version0\000"
 4864      696F6E30 
 4864      00
 4865              	.LASF64:
 4866 0392 76657273 		.ascii	"version1\000"
 4866      696F6E31 
 4866      00
 4867              	.LASF65:
 4868 039b 76657273 		.ascii	"version2\000"
 4868      696F6E32 
 4868      00
 4869              	.LASF48:
 4870 03a4 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4870      73736167 
 4870      655F6F76 
 4870      65726C61 
 4870      795F7400 
 4871              	.LASF168:
 4872 03b8 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4872      7273745F 
 4872      656E636F 
 4872      6465725F 
 4872      53657450 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 116


 4873              	.LASF151:
 4874 03d4 496E6974 		.ascii	"Init_INA\000"
 4874      5F494E41 
 4874      00
 4875              	.LASF118:
 4876 03dd 506F7369 		.ascii	"Position\000"
 4876      74696F6E 
 4876      00
 4877              	.LASF20:
 4878 03e6 63686172 		.ascii	"char\000"
 4878      00
 4879              	.LASF91:
 4880 03eb 5049445F 		.ascii	"PID_SetMode\000"
 4880      5365744D 
 4880      6F646500 
 4881              	.LASF83:
 4882 03f7 50574D5F 		.ascii	"PWM_Set\000"
 4882      53657400 
 4883              	.LASF101:
 4884 03ff 42524D53 		.ascii	"BRMS_Interrupt\000"
 4884      5F496E74 
 4884      65727275 
 4884      707400
 4885              	.LASF148:
 4886 040e 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4886      315F5370 
 4886      69556172 
 4886      74436C65 
 4886      61725278 
 4887              	.LASF13:
 4888 0429 75696E74 		.ascii	"uint16\000"
 4888      313600
 4889              	.LASF15:
 4890 0430 696E7438 		.ascii	"int8\000"
 4890      00
 4891              	.LASF47:
 4892 0435 6F70636F 		.ascii	"opcode\000"
 4892      646500
 4893              	.LASF61:
 4894 043c 73746174 		.ascii	"status\000"
 4894      757300
 4895              	.LASF32:
 4896 0443 6673496E 		.ascii	"fsIndex\000"
 4896      64657800 
 4897              	.LASF153:
 4898 044b 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4898      315F5772 
 4898      69746543 
 4898      6F6D7061 
 4898      726500
 4899              	.LASF29:
 4900 045e 66734E4F 		.ascii	"fsNONE\000"
 4900      4E4500
 4901              	.LASF139:
 4902 0465 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4902      7273745F 
 4902      656E636F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 117


 4902      6465725F 
 4902      436C6561 
 4903              	.LASF170:
 4904 0482 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4904      7370695F 
 4904      73735F53 
 4904      65745072 
 4904      696F7269 
 4905              	.LASF7:
 4906 0499 6C6F6E67 		.ascii	"long long int\000"
 4906      206C6F6E 
 4906      6720696E 
 4906      7400
 4907              	.LASF160:
 4908 04a7 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4908      725F4252 
 4908      4D535F43 
 4908      6C656172 
 4908      496E7465 
 4909              	.LASF34:
 4910 04c1 66734368 		.ascii	"fsChecksum\000"
 4910      65636B73 
 4910      756D00
 4911              	.LASF146:
 4912 04cc 7370695F 		.ascii	"spi_ss_Read\000"
 4912      73735F52 
 4912      65616400 
 4913              	.LASF10:
 4914 04d8 5F5F696E 		.ascii	"__int16_t\000"
 4914      7431365F 
 4914      7400
 4915              	.LASF158:
 4916 04e2 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4916      585F4F55 
 4916      545F5365 
 4916      74447269 
 4916      76654D6F 
 4917              	.LASF156:
 4918 04f9 43795379 		.ascii	"CySysWdtResetCounters\000"
 4918      73576474 
 4918      52657365 
 4918      74436F75 
 4918      6E746572 
 4919              	.LASF183:
 4920 050f 6D656D73 		.ascii	"memset\000"
 4920      657400
 4921              	.LASF68:
 4922 0516 63686563 		.ascii	"checksum_errors\000"
 4922      6B73756D 
 4922      5F657272 
 4922      6F727300 
 4923              	.LASF46:
 4924 0526 73697A65 		.ascii	"size\000"
 4924      00
 4925              	.LASF14:
 4926 052b 75696E74 		.ascii	"uint32\000"
 4926      333200
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 118


 4927              	.LASF73:
 4928 0532 74786D73 		.ascii	"txmsLoaded\000"
 4928      4C6F6164 
 4928      656400
 4929              	.LASF134:
 4930 053d 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4930      656E7449 
 4930      3243696E 
 4930      62756600 
 4931              	.LASF120:
 4932 054d 72656653 		.ascii	"refSampleTime\000"
 4932      616D706C 
 4932      6554696D 
 4932      6500
 4933              	.LASF119:
 4934 055b 4C617374 		.ascii	"LastPosition\000"
 4934      506F7369 
 4934      74696F6E 
 4934      00
 4935              	.LASF137:
 4936 0568 74784D65 		.ascii	"txMessage\000"
 4936      73736167 
 4936      6500
 4937              	.LASF141:
 4938 0572 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4938      7465725F 
 4938      315F5772 
 4938      69746543 
 4938      6F756E74 
 4939              	.LASF77:
 4940 0589 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4940      53535F49 
 4940      73724861 
 4940      6E646C65 
 4940      7200
 4941              	.LASF80:
 4942 059b 72756E52 		.ascii	"runRateGroup4_MotorCurrentRead\000"
 4942      61746547 
 4942      726F7570 
 4942      345F4D6F 
 4942      746F7243 
 4943              	.LASF28:
 4944 05ba 436F6E66 		.ascii	"ConfigStates_t\000"
 4944      69675374 
 4944      61746573 
 4944      5F7400
 4945              	.LASF88:
 4946 05c9 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4946      61746547 
 4946      726F7570 
 4946      335F5350 
 4946      4900
 4947              	.LASF164:
 4948 05db 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4948      62726D73 
 4948      5F536574 
 4948      5072696F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 119


 4948      72697479 
 4949              	.LASF22:
 4950 05f0 6C6F6E67 		.ascii	"long double\000"
 4950      20646F75 
 4950      626C6500 
 4951              	.LASF152:
 4952 05fc 67657443 		.ascii	"getCurrent_mA\000"
 4952      75727265 
 4952      6E745F6D 
 4952      4100
 4953              	.LASF21:
 4954 060a 72656733 		.ascii	"reg32\000"
 4954      3200
 4955              	.LASF24:
 4956 0610 6373554E 		.ascii	"csUNDEFINED\000"
 4956      44454649 
 4956      4E454400 
 4957              	.LASF49:
 4958 061c 73657175 		.ascii	"sequence\000"
 4958      656E6365 
 4958      00
 4959              	.LASF116:
 4960 0625 4F757470 		.ascii	"Output\000"
 4960      757400
 4961              	.LASF60:
 4962 062c 636F6E66 		.ascii	"config\000"
 4962      696700
 4963              	.LASF33:
 4964 0633 66734375 		.ascii	"fsCurrentRead\000"
 4964      7272656E 
 4964      74526561 
 4964      6400
 4965              	.LASF3:
 4966 0641 73686F72 		.ascii	"short int\000"
 4966      7420696E 
 4966      7400
 4967              	.LASF100:
 4968 064b 64506F73 		.ascii	"dPosition\000"
 4968      6974696F 
 4968      6E00
 4969              	.LASF53:
 4970 0655 72784D65 		.ascii	"rxMessage_config_t\000"
 4970      73736167 
 4970      655F636F 
 4970      6E666967 
 4970      5F7400
 4971              	.LASF111:
 4972 0668 5049445F 		.ascii	"PID_Was_Enabled\000"
 4972      5761735F 
 4972      456E6162 
 4972      6C656400 
 4973              	.LASF110:
 4974 0678 5049445F 		.ascii	"PID_Enabled\000"
 4974      456E6162 
 4974      6C656400 
 4975              	.LASF92:
 4976 0684 4D6F6465 		.ascii	"Mode\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 120


 4976      00
 4977              	.LASF107:
 4978 0689 62726D73 		.ascii	"brmsRG5Mask\000"
 4978      5247354D 
 4978      61736B00 
 4979              	.LASF5:
 4980 0695 6C6F6E67 		.ascii	"long int\000"
 4980      20696E74 
 4980      00
 4981              	.LASF27:
 4982 069e 63734D41 		.ascii	"csMAX\000"
 4982      5800
 4983              	.LASF59:
 4984 06a4 6F766572 		.ascii	"overlay\000"
 4984      6C617900 
 4985              	.LASF173:
 4986 06ac 50574D5F 		.ascii	"PWM_1_Start\000"
 4986      315F5374 
 4986      61727400 
 4987              	.LASF138:
 4988 06b8 74784D65 		.ascii	"txMessageState\000"
 4988      73736167 
 4988      65537461 
 4988      746500
 4989              	.LASF157:
 4990 06c7 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4990      5F4F5554 
 4990      5F536574 
 4990      44726976 
 4990      654D6F64 
 4991              	.LASF86:
 4992 06dd 52617750 		.ascii	"RawPosition\000"
 4992      6F736974 
 4992      696F6E00 
 4993              	.LASF135:
 4994 06e9 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4994      4D657373 
 4994      61676554 
 4994      696D6553 
 4994      65636F6E 
 4995              	.LASF105:
 4996 0700 62726D73 		.ascii	"brmsRG3Mask\000"
 4996      5247334D 
 4996      61736B00 
 4997              	.LASF71:
 4998 070c 74784D65 		.ascii	"txMessage_t\000"
 4998      73736167 
 4998      655F7400 
 4999              	.LASF55:
 5000 0718 73657470 		.ascii	"setpoint\000"
 5000      6F696E74 
 5000      00
 5001              	.LASF104:
 5002 0721 62726D73 		.ascii	"brmsRG2Mask\000"
 5002      5247324D 
 5002      61736B00 
 5003              	.LASF181:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 121


 5004 072d 47657450 		.ascii	"GetPosition\000"
 5004      6F736974 
 5004      696F6E00 
 5005              	.LASF122:
 5006 0739 6F75744D 		.ascii	"outMax_ITerm\000"
 5006      61785F49 
 5006      5465726D 
 5006      00
 5007              	.LASF128:
 5008 0746 55707469 		.ascii	"UptimeSeconds\000"
 5008      6D655365 
 5008      636F6E64 
 5008      7300
 5009              	.LASF124:
 5010 0754 70776D4D 		.ascii	"pwmMax\000"
 5010      617800
 5011              	.LASF112:
 5012 075b 5049445F 		.ascii	"PID_Setpoint\000"
 5012      53657470 
 5012      6F696E74 
 5012      00
 5013              	.LASF41:
 5014 0768 6F705374 		.ascii	"opStatus\000"
 5014      61747573 
 5014      00
 5015              	.LASF19:
 5016 0771 75696E74 		.ascii	"uint64\000"
 5016      363400
 5017              	.LASF147:
 5018 0778 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 5018      315F5370 
 5018      69556172 
 5018      74526561 
 5018      64527844 
 5019              	.LASF43:
 5020 0790 6F704D41 		.ascii	"opMAX\000"
 5020      5800
 5021              	.LASF132:
 5022 0796 43686563 		.ascii	"ChecksumErrors\000"
 5022      6B73756D 
 5022      4572726F 
 5022      727300
 5023              	.LASF23:
 5024 07a5 73697A65 		.ascii	"sizetype\000"
 5024      74797065 
 5024      00
 5025              	.LASF6:
 5026 07ae 6C6F6E67 		.ascii	"long unsigned int\000"
 5026      20756E73 
 5026      69676E65 
 5026      6420696E 
 5026      7400
 5027              	.LASF166:
 5028 07c0 6973725F 		.ascii	"isr_home_SetPriority\000"
 5028      686F6D65 
 5028      5F536574 
 5028      5072696F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 122


 5028      72697479 
 5029              	.LASF159:
 5030 07d5 496E6465 		.ascii	"Index_Counter_1_ReadCounter\000"
 5030      785F436F 
 5030      756E7465 
 5030      725F315F 
 5030      52656164 
 5031              	.LASF98:
 5032 07f1 43757272 		.ascii	"CurrentIndexCount\000"
 5032      656E7449 
 5032      6E646578 
 5032      436F756E 
 5032      7400
 5033              	.LASF95:
 5034 0803 70657263 		.ascii	"percent\000"
 5034      656E7400 
 5035              	.LASF172:
 5036 080b 5350495F 		.ascii	"SPI_1_Start\000"
 5036      315F5374 
 5036      61727400 
 5037              	.LASF2:
 5038 0817 756E7369 		.ascii	"unsigned char\000"
 5038      676E6564 
 5038      20636861 
 5038      7200
 5039              	.LASF175:
 5040 0825 436F756E 		.ascii	"Counter_1_Start\000"
 5040      7465725F 
 5040      315F5374 
 5040      61727400 
 5041              	.LASF39:
 5042 0835 6F70554E 		.ascii	"opUNDEFINED\000"
 5042      44454649 
 5042      4E454400 
 5043              	.LASF42:
 5044 0841 6F705365 		.ascii	"opSetEnc\000"
 5044      74456E63 
 5044      00
 5045              	.LASF130:
 5046 084a 4661756C 		.ascii	"FaultState\000"
 5046      74537461 
 5046      746500
 5047              	.LASF123:
 5048 0855 70776D4C 		.ascii	"pwmLimit\000"
 5048      696D6974 
 5048      00
 5049              	.LASF35:
 5050 085e 66735832 		.ascii	"fsX2\000"
 5050      00
 5051              	.LASF36:
 5052 0863 66735833 		.ascii	"fsX3\000"
 5052      00
 5053              	.LASF37:
 5054 0868 66735834 		.ascii	"fsX4\000"
 5054      00
 5055              	.LASF131:
 5056 086d 436F6E66 		.ascii	"ConfigSequence\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 123


 5056      69675365 
 5056      7175656E 
 5056      636500
 5057              	.LASF84:
 5058 087c 64757479 		.ascii	"dutycycle\000"
 5058      6379636C 
 5058      6500
 5059              	.LASF126:
 5060 0886 686F6D69 		.ascii	"homingDone\000"
 5060      6E67446F 
 5060      6E6500
 5061              	.LASF140:
 5062 0891 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 5062      745F456E 
 5062      636F6465 
 5062      725F436C 
 5062      65617249 
 5063              	.LASF66:
 5064 08ae 73746174 		.ascii	"state\000"
 5064      6500
 5065              	.LASF50:
 5066 08b4 6C696D69 		.ascii	"limit_Total\000"
 5066      745F546F 
 5066      74616C00 
 5067              	.LASF165:
 5068 08c0 6973725F 		.ascii	"isr_home_StartEx\000"
 5068      686F6D65 
 5068      5F537461 
 5068      72744578 
 5068      00
 5069              	.LASF1:
 5070 08d1 7369676E 		.ascii	"signed char\000"
 5070      65642063 
 5070      68617200 
 5071              	.LASF4:
 5072 08dd 73686F72 		.ascii	"short unsigned int\000"
 5072      7420756E 
 5072      7369676E 
 5072      65642069 
 5072      6E7400
 5073              	.LASF90:
 5074 08f0 5049445F 		.ascii	"PID_Initialize\000"
 5074      496E6974 
 5074      69616C69 
 5074      7A6500
 5075              	.LASF182:
 5076 08ff 6D61696E 		.ascii	"main\000"
 5076      00
 5077              	.LASF69:
 5078 0904 63757272 		.ascii	"current\000"
 5078      656E7400 
 5079              	.LASF12:
 5080 090c 75696E74 		.ascii	"uint8\000"
 5080      3800
 5081              	.LASF18:
 5082 0912 646F7562 		.ascii	"double\000"
 5082      6C6500
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 124


 5083              	.LASF176:
 5084 0919 496E6465 		.ascii	"Index_Counter_1_Start\000"
 5084      785F436F 
 5084      756E7465 
 5084      725F315F 
 5084      53746172 
 5085              	.LASF127:
 5086 092f 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 5086      6D654D69 
 5086      63726F73 
 5086      65636F6E 
 5086      64734163 
 5087              	.LASF40:
 5088 094d 6F70436F 		.ascii	"opConfig\000"
 5088      6E666967 
 5088      00
 5089              	.LASF167:
 5090 0956 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 5090      7273745F 
 5090      656E636F 
 5090      6465725F 
 5090      53746172 
 5091              	.LASF143:
 5092 096e 6973725F 		.ascii	"isr_home_ClearPending\000"
 5092      686F6D65 
 5092      5F436C65 
 5092      61725065 
 5092      6E64696E 
 5093              	.LASF67:
 5094 0984 6661756C 		.ascii	"fault\000"
 5094      7400
 5095              	.LASF75:
 5096 098a 52535449 		.ascii	"RSTIsrHandler\000"
 5096      73724861 
 5096      6E646C65 
 5096      7200
 5097              	.LASF70:
 5098 0998 706F7369 		.ascii	"position\000"
 5098      74696F6E 
 5098      00
 5099              	.LASF38:
 5100 09a1 4661756C 		.ascii	"FaultStates_t\000"
 5100      74537461 
 5100      7465735F 
 5100      7400
 5101              	.LASF113:
 5102 09af 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 5102      45666665 
 5102      63746976 
 5102      65536574 
 5102      706F696E 
 5103              	.LASF179:
 5104 09c5 433A5C70 		.ascii	"C:\\proj\\acsnb-motor-cypress\\QuadEncoderRTOS.cyds"
 5104      726F6A5C 
 5104      6163736E 
 5104      622D6D6F 
 5104      746F722D 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccf258qY.s 			page 125


 5105 09f5 6E00     		.ascii	"n\000"
 5106              	.LASF97:
 5107 09f7 44656C74 		.ascii	"DeltaPosition\000"
 5107      61506F73 
 5107      6974696F 
 5107      6E00
 5108              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
