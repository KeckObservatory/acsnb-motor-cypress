ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB43:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 04/07/23 PMR  Rev: 0-2-1 add move timer to messaging
  12:main.c        **** * 02/08/23 PMR  Rev: 0-2-0 rework PID algorithm based on Galil findings
  13:main.c        **** * 07/27/22 PMR  Rev: 0-1-0 convert FreeRTOS to binary-rate-monotonic-scheduler (BRMS)
  14:main.c        **** * 07/09/20 PMR  Rev: 0-0-7 implement zeroing the encoder value
  15:main.c        **** * 07/09/19 PMR  Rev: 0-0-6 fix tuning of INA219 and inhibit encoder report during homing
  16:main.c        **** * 05/09/19 PMR  Rev: 0-0-5 multiple shaper and PID fixes; let encoder go negative
  17:main.c        **** * 03/22/19 PMR  Rev: 0-0-3 add PID separate I limit and simplify limiting code
  18:main.c        **** * 02/07/19 PMR  Rev: 0-0-2 implement revision numbering in protocol
  19:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  20:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  21:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  22:main.c        **** *******************************************************************************/
  23:main.c        **** #include <I2C_I2C.h>
  24:main.c        **** #include <stdbool.h>
  25:main.c        **** #include <stdlib.h>
  26:main.c        **** #include <math.h>
  27:main.c        **** #include "pid.h"
  28:main.c        **** #include "INA219.h"
  29:main.c        **** 
  30:main.c        **** /* Firmware revision as of 2023-04-07 */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 2


  31:main.c        **** #define FIRMWARE_REV_0 0
  32:main.c        **** #define FIRMWARE_REV_1 2
  33:main.c        **** #define FIRMWARE_REV_2 1
  34:main.c        **** 
  35:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  36:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  37:main.c        **** 
  38:main.c        **** /* For the ACS test set, the drives are wired backwards!  Use a polarity of -1 in that case. */
  39:main.c        **** //#define DRIVE_POLARITY -1
  40:main.c        **** #define DRIVE_POLARITY 1
  41:main.c        **** 
  42:main.c        **** /* --------------------------------------------------------------------- 
  43:main.c        ****  * CONSTANTS
  44:main.c        ****  * --------------------------------------------------------------------- */
  45:main.c        **** 
  46:main.c        **** /* Interrupt priorities */
  47:main.c        **** #define NESTED_ISR                             (1u)
  48:main.c        **** #define HIGHER_PRIORITY                        (2u)
  49:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  50:main.c        **** 
  51:main.c        **** /* Interrupt prototypes */
  52:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  53:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  54:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  55:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  56:main.c        **** CY_ISR_PROTO(BRMS_Interrupt);
  57:main.c        **** 
  58:main.c        **** /* --------------------------------------------------------------------- 
  59:main.c        ****  * WDT Defines
  60:main.c        ****  *
  61:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  62:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  63:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  64:main.c        ****  * --------------------------------------------------------------------- */
  65:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  66:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  67:main.c        **** 
  68:main.c        **** /* --------------------------------------------------------------------- 
  69:main.c        ****  * PWM Defines
  70:main.c        ****  * --------------------------------------------------------------------- */
  71:main.c        **** #define PWM_15KHZ_PERIOD                       (1600)
  72:main.c        **** #define PWM_NEUTRAL                            (0)
  73:main.c        **** 
  74:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  75:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  76:main.c        **** #define INA219_CAL_VALUE                       (8192)
  77:main.c        **** 
  78:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  79:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  80:main.c        **** 
  81:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  82:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  83:main.c        **** 
  84:main.c        **** /* --------------------------------------------------------------------- 
  85:main.c        ****  * PID Defines
  86:main.c        ****  * --------------------------------------------------------------------- */
  87:main.c        **** #define PID_MANUAL                             (0)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 3


  88:main.c        **** #define PID_AUTOMATIC                          (1)
  89:main.c        **** #define PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT   (250)
  90:main.c        **** #define OVERRIDE_PID_CONSTANTS                 1
  91:main.c        **** bool inAuto = false;
  92:main.c        **** 
  93:main.c        **** volatile int8_t Jog, LastJog;
  94:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  95:main.c        **** int32_t PID_Setpoint, PID_EffectiveSetpoint;
  96:main.c        **** uint8_t PID_EffSetDelta;
  97:main.c        **** uint32_t lastTime;
  98:main.c        **** 
  99:main.c        **** volatile int32_t Position, LastPosition;
 100:main.c        **** volatile int32_t Output;
 101:main.c        **** volatile uint16_t limitOutput;
 102:main.c        **** volatile uint16_t limitIterm;
 103:main.c        **** 
 104:main.c        **** bool homingDone = true;
 105:main.c        **** 
 106:main.c        **** /* --------------------------------------------------------------------- 
 107:main.c        ****  * Move timer defines
 108:main.c        ****  * 
 109:main.c        ****  * Wait for 30 samples of position to be the same before declaring a move
 110:main.c        ****  * done.
 111:main.c        ****  * --------------------------------------------------------------------- */
 112:main.c        **** #define LAST_MOVE_TIME_SAMPLE_COUNT 30
 113:main.c        **** 
 114:main.c        **** /* Use UptimeMicroseconds to calculate how long a move elapsed */
 115:main.c        **** uint32_t LastMoveStartTimeUsec = 0;
 116:main.c        **** uint32_t LastMoveEndTimeUsec = 0;
 117:main.c        **** 
 118:main.c        **** /* Counter for how many samples elapsed since the move was complete */
 119:main.c        **** uint16_t LastMoveStableCount = 0;
 120:main.c        **** 
 121:main.c        **** /* Time value in microseconds for how long the last move took */
 122:main.c        **** uint32_t LastMoveTimeUsec = 0;
 123:main.c        **** 
 124:main.c        **** /* Set this flag when a new move comes down from the ACS */
 125:main.c        **** bool NewCommandedMove = false;
 126:main.c        **** 
 127:main.c        **** /* --------------------------------------------------------------------- 
 128:main.c        ****  * Timekeeping defines
 129:main.c        ****  * --------------------------------------------------------------------- */
 130:main.c        **** volatile uint64_t UptimeMicroseconds = 0;
 131:main.c        **** volatile uint64_t UptimeMicrosecondsAccumulator = 0;
 132:main.c        **** volatile uint64_t UptimeMilliseconds = 0;
 133:main.c        **** volatile uint64_t UptimeMillisecondsAccumulator = 0;
 134:main.c        **** volatile uint64_t UptimeSeconds = 0;
 135:main.c        **** 
 136:main.c        **** /* --------------------------------------------------------------------- 
 137:main.c        ****  * ENCODER PROPERTIES
 138:main.c        ****  *
 139:main.c        ****  * The encoder counts up and down in Counter_1, which is unsigned 24 bit
 140:main.c        ****  *
 141:main.c        ****  * Note: the negative boundary is defined as 1,048,576 counts of underflow
 142:main.c        ****  * in the Counter_1 value.  This allows us to start at max travel, reset 
 143:main.c        ****  * encoder to 0 and count negative the full travel before hitting the home
 144:main.c        ****  * flag and resetting the counter to 0 again.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 4


 145:main.c        ****  *
 146:main.c        ****  * (0x100000 or 1.048M is >3x the entire actuator travel)
 147:main.c        ****  * --------------------------------------------------------------------- */
 148:main.c        **** #define ENCODER_MAX                            (0xFFFFFF)             
 149:main.c        **** #define ENCODER_NEGATIVE_BOUNDARY              (0xFFFFFF - 0x100000)  
 150:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
 151:main.c        **** 
 152:main.c        **** /* --------------------------------------------------------------------- 
 153:main.c        ****  * GLOBALS
 154:main.c        ****  * --------------------------------------------------------------------- */
 155:main.c        **** /* Coarse reporting of state back to the node box software */
 156:main.c        **** typedef enum {    
 157:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 158:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 159:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 160:main.c        ****     csMAX    
 161:main.c        **** } ConfigStates_t;
 162:main.c        **** 
 163:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 164:main.c        **** 
 165:main.c        **** /* Fault codes, these are bit encoded into a uint8_t */
 166:main.c        **** typedef enum {
 167:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 168:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 169:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 170:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 171:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 172:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 173:main.c        ****     fsX2           = 0b00100000,    /* */
 174:main.c        ****     fsX3           = 0b01000000,    /* */
 175:main.c        ****     fsX4           = 0b10000000     /* */
 176:main.c        **** } FaultStates_t;
 177:main.c        **** 
 178:main.c        **** volatile ConfigStates_t ConfigState;
 179:main.c        **** volatile uint8_t FaultState;
 180:main.c        **** volatile uint8_t ConfigSequence;
 181:main.c        **** volatile uint16_t ChecksumErrors;
 182:main.c        **** volatile int16_t MotorCurrent;
 183:main.c        **** uint8_t CurrentI2Cinbuf[20];
 184:main.c        **** 
 185:main.c        **** /* --------------------------------------------------------------------- 
 186:main.c        ****  * SPI MESSAGING
 187:main.c        ****  * --------------------------------------------------------------------- */
 188:main.c        **** /* V2 protocol 
 189:main.c        **** 
 190:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 191:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 192:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 193:main.c        **** */
 194:main.c        ****     
 195:main.c        **** /* Set this to be at least the size of the status response message */
 196:main.c        **** #define MAX_MESSAGE_SIZE 27
 197:main.c        ****     
 198:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 199:main.c        ****    talking.  Nominally 1 second max of not talking. */
 200:main.c        **** #define MAX_LAST_MESSAGE_TIME_SECONDS 1
 201:main.c        **** uint32_t LastMessageTimeSeconds;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 5


 202:main.c        **** 
 203:main.c        **** /* Opcodes that can come from the node box software */
 204:main.c        **** typedef enum {
 205:main.c        ****     opUNDEFINED = 0,
 206:main.c        ****     opConfig    = 1,
 207:main.c        ****     opStatus    = 2,
 208:main.c        ****     opSetEnc    = 3,
 209:main.c        ****     opMAX       
 210:main.c        **** } rxMessage_opcodes_t;    
 211:main.c        **** 
 212:main.c        **** /* Sanity check for opcodes */
 213:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 214:main.c        **** 
 215:main.c        **** typedef struct { 
 216:main.c        ****     uint8_t checksum;        
 217:main.c        ****     uint8_t size;       /* Size of the message bytes, including opcode and size and checksum */
 218:main.c        ****     uint8_t opcode;     /* Operation (generic overlay for previewing opcode value) */
 219:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 220:main.c        **** 
 221:main.c        **** /* Configuration message, 22 bytes */
 222:main.c        **** typedef struct {
 223:main.c        ****     uint8_t checksum;        
 224:main.c        ****     uint8_t size;        /* Size of the message bytes, including opcode and size and checksum */
 225:main.c        ****     uint8_t opcode;      /* Operation: 01 == config */        
 226:main.c        ****     uint8_t sequence;    /* Configuration message sequence number */
 227:main.c        ****     
 228:main.c        ****     uint32_t overrideKp; /* If nonzero, override the PID P term */
 229:main.c        ****     uint32_t overrideKi; /* If nonzero, override the PID I term */
 230:main.c        ****     uint32_t overrideKd; /* If nonzero, override the PID D term */
 231:main.c        ****     
 232:main.c        ****     uint16_t limitOutput;/* Drive output limit, ranges from 0 to 800 */
 233:main.c        ****     uint16_t limitIterm; /* PID I term output limit, ranges from 0 to 800 */
 234:main.c        ****     uint16_t effsetdelta;/* PID effective setpoint increment delta, nominally 250 steps */
 235:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 236:main.c        **** 
 237:main.c        **** /* Status message, contains desired position and such values, 10 bytes */
 238:main.c        **** typedef struct {
 239:main.c        ****     uint8_t  checksum;        
 240:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 241:main.c        ****     uint8_t  opcode;     /* Operation: 02 == status */
 242:main.c        ****     uint8_t  enable;     /* Enable/disable PID algorithm */
 243:main.c        ****     int32_t  setpoint;   /* Setpoint (desired actuator position) */
 244:main.c        ****     int8_t   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 245:main.c        ****     uint8_t  clearfaults;/* Set to nonzero to clear all the current faults */
 246:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 247:main.c        ****    
 248:main.c        **** /* Clear message, contains new encoder position, 7 bytes */
 249:main.c        **** typedef struct {
 250:main.c        ****     uint8_t  checksum;        
 251:main.c        ****     uint8_t  size;       /* Size of the message bytes, including opcode and size and checksum */
 252:main.c        ****     uint8_t  opcode;     /* Operation: 03 == set encoders */
 253:main.c        ****     int32_t  setpoint;   /* Setpoint (force an actuator logical position) */
 254:main.c        **** } __attribute__ ((__packed__)) rxMessage_setenc_t;
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** /* Wrap the message with an array of bytes */
 258:main.c        **** union {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 6


 259:main.c        ****     uint8_t             buf[MAX_MESSAGE_SIZE];
 260:main.c        ****     rxMessage_overlay_t overlay;
 261:main.c        ****     rxMessage_config_t  config;
 262:main.c        ****     rxMessage_status_t  status;  
 263:main.c        ****     rxMessage_setenc_t  setenc;
 264:main.c        **** } rxMessage;
 265:main.c        **** 
 266:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (27 bytes) */
 267:main.c        **** typedef struct  {  
 268:main.c        ****     uint8_t  checksum;        /* Message checksum */    
 269:main.c        ****     uint8_t  version0;        /* Version byte 0 */ 
 270:main.c        ****     uint8_t  version1;        /* Version byte 1 */
 271:main.c        ****     uint8_t  version2;        /* Version byte 2 */
 272:main.c        ****     uint8_t  size;            /* Size of the message bytes, including opcode and size and checksum 
 273:main.c        ****     uint8_t  opcode;          /* Echo back of the opcode this response is for, operation: 02 == sta
 274:main.c        ****     uint8_t  state;           /* Enum value for current device configuration state */ 
 275:main.c        ****     uint8_t  fault;           /* Bit encoded fields for current fault status */
 276:main.c        ****     uint8_t  sequence;        /* Echo back the config sequence number currently set */
 277:main.c        ****     uint16_t checksum_errors; /* Count of checksum errors */
 278:main.c        ****     int16_t  motor_current;   /* Motor current consumption (mA) */
 279:main.c        ****     int32_t  position;        /* Actual actuator position, signed value */ 
 280:main.c        ****     int16_t  pwm;             /* PWM value the motor is moving at */     
 281:main.c        ****     int32_t  iterm;           /* Instantaneous PID iterm value */
 282:main.c        ****     uint32_t last_move_time;  /* Amount of time for the last move, in us */ 
 283:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 284:main.c        **** 
 285:main.c        **** /* Wrap the message with an array of bytes */
 286:main.c        **** union {    
 287:main.c        ****     uint8_t     buf[MAX_MESSAGE_SIZE];
 288:main.c        ****     txMessage_t msg;
 289:main.c        **** } txMessage;
 290:main.c        **** 
 291:main.c        **** /* State machine definition for transmit side of messaging */
 292:main.c        **** typedef enum {
 293:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 294:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 295:main.c        **** } txMessageStates_t;
 296:main.c        **** 
 297:main.c        **** txMessageStates_t txMessageState;
 298:main.c        **** 
 299:main.c        **** 
 300:main.c        **** 
 301:main.c        **** /* --------------------------------------------------------------------- 
 302:main.c        ****  * Function prototypes
 303:main.c        ****  * --------------------------------------------------------------------- */
 304:main.c        **** int32_t GetPosition(void);
 305:main.c        **** void runRateGroup1_PID(void);
 306:main.c        **** void runRateGroup3_SPI(void);
 307:main.c        **** void MotorCurrentRead(void);
 308:main.c        **** 
 309:main.c        **** 
 310:main.c        **** /*******************************************************************************
 311:main.c        **** * Function Name: AssertFault
 312:main.c        **** ********************************************************************************
 313:main.c        **** * Summary:
 314:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 315:main.c        **** *  all faults.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 7


 316:main.c        **** *
 317:main.c        **** * Parameters: FaultStates_t of the fault detected.
 318:main.c        **** * Return: None
 319:main.c        **** *******************************************************************************/
 320:main.c        **** void AssertFault(FaultStates_t fault) {
 321:main.c        ****  
 322:main.c        ****     switch (fault) {
 323:main.c        ****      
 324:main.c        ****         /* Clears all asserted faults */
 325:main.c        ****         case fsNONE:
 326:main.c        ****             FaultState = fsNONE;
 327:main.c        ****             break;        
 328:main.c        ****         
 329:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 330:main.c        ****         default:
 331:main.c        ****             FaultState |= fault;
 332:main.c        ****             break;        
 333:main.c        ****     }    
 334:main.c        **** }
 335:main.c        **** 
 336:main.c        **** 
 337:main.c        **** /*******************************************************************************
 338:main.c        **** * Function Name: ClearFault
 339:main.c        **** ********************************************************************************
 340:main.c        **** * Summary:
 341:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 342:main.c        **** *  all faults.
 343:main.c        **** *
 344:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 345:main.c        **** * Return: None
 346:main.c        **** *******************************************************************************/
 347:main.c        **** void ClearFault(FaultStates_t fault) {
 348:main.c        ****  
 349:main.c        ****     switch (fault) {
 350:main.c        ****      
 351:main.c        ****         /* Clears all asserted faults */
 352:main.c        ****         case fsNONE:
 353:main.c        ****             FaultState = fsNONE;
 354:main.c        ****             break;        
 355:main.c        ****         
 356:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 357:main.c        ****         default:
 358:main.c        ****             FaultState &= ~fault;
 359:main.c        ****             break;        
 360:main.c        ****     }    
 361:main.c        **** }
 362:main.c        **** 
 363:main.c        **** 
 364:main.c        **** /*******************************************************************************
 365:main.c        **** * Function Name: MotorCurrentRead
 366:main.c        **** ********************************************************************************
 367:main.c        **** * Summary:
 368:main.c        **** *  Read the motor current consumption.
 369:main.c        **** *
 370:main.c        **** * Parameters: None
 371:main.c        **** * Return: None
 372:main.c        **** *******************************************************************************/
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 8


 373:main.c        **** void MotorCurrentRead(void) {
 374:main.c        ****     
 375:main.c        ****     //TODO: Convert this to integer math
 376:main.c        ****     float c;
 377:main.c        ****     
 378:main.c        ****     c = getCurrent_mA(INA219_I2C_ADDR);
 379:main.c        ****     
 380:main.c        ****     /* Assign the global MotorCurrent value */
 381:main.c        ****     MotorCurrent = (int16_t) c;       
 382:main.c        **** }
 383:main.c        **** 
 384:main.c        **** 
 385:main.c        **** /*******************************************************************************
 386:main.c        **** * Function Name: Comm_Task
 387:main.c        **** ********************************************************************************
 388:main.c        **** * Summary:
 389:main.c        **** *  Task to perform the SPI communications.
 390:main.c        **** *
 391:main.c        **** * Parameters: None
 392:main.c        **** * Return: None
 393:main.c        **** *******************************************************************************/
 394:main.c        **** void runRateGroup3_SPI(void) {
 395:main.c        ****  
 396:main.c        ****     rxMessage_opcodes_t opcode;
 397:main.c        ****     uint8_t size;
 398:main.c        ****     uint8_t i;
 399:main.c        ****     uint8_t checksum;
 400:main.c        ****     int32_t distance;
 401:main.c        ****     
 402:main.c        ****     /* If the SPI is moving data out right now, do not touch the message buffer, we will
 403:main.c        ****        get to it next cycle! */
 404:main.c        ****     if (SPI_1_SpiIsBusBusy()) 
 405:main.c        ****         return;
 406:main.c        ****     
 407:main.c        ****     /* In certain states, this thread is responsible for loading the outbound messaging */
 408:main.c        ****     switch (txMessageState) {
 409:main.c        ****      
 410:main.c        ****         /* Output buffer is clear and ready for loading, rxMessage is (probably) good and needs pro
 411:main.c        ****         case txmsClear:
 412:main.c        ****                 
 413:main.c        ****             /* Get a few items out of the message before checking the sum */
 414:main.c        ****             size     = rxMessage.overlay.size;
 415:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 416:main.c        ****             
 417:main.c        ****             /* Make sure the size makes sense.  If we have to reset the size it's probably a corrup
 418:main.c        ****             if (size > sizeof(txMessage.buf))
 419:main.c        ****                 size = sizeof(txMessage.buf);                            
 420:main.c        ****         
 421:main.c        ****             /* Calculate the checksum by summing the bytes of the entire message, it should resolve
 422:main.c        ****             for (i = 0, checksum = 0; i < size; i++)
 423:main.c        ****                 checksum += rxMessage.buf[i]; 
 424:main.c        **** 
 425:main.c        ****             /* Checksum fault, don't try to process the messgage */
 426:main.c        ****             if ((checksum & 0xFF) != 0) {
 427:main.c        ****                 
 428:main.c        ****                 txMessage.msg.opcode = opcode;
 429:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 9


 430:main.c        ****                 ChecksumErrors++;
 431:main.c        ****                 
 432:main.c        ****             /* Message looks fine, process it */
 433:main.c        ****             } else {
 434:main.c        **** 
 435:main.c        ****                 /* Message opcode must be valid before trying to process the message contents */
 436:main.c        ****                 if ( rxMessageOpcodeValid(opcode) ) {                            
 437:main.c        ****                 
 438:main.c        ****                     switch (opcode) {
 439:main.c        ****                     
 440:main.c        ****                         case opConfig:
 441:main.c        ****                             /* Special message to establish settings on the device such as PID gain
 442:main.c        ****                         
 443:main.c        ****                             /* Remember where we were when the init was sent */
 444:main.c        ****                             LastPosition = GetPosition();
 445:main.c        ****                            
 446:main.c        ****                             /* Initialize the setpoints to be equal to where we are right now.*/
 447:main.c        ****                             PID_Setpoint = LastPosition;
 448:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 449:main.c        ****                             
 450:main.c        ****                             /* Disable PID if it's on */
 451:main.c        ****                             PID_Was_Enabled = false;
 452:main.c        ****                             PID_Enabled = false;
 453:main.c        **** 
 454:main.c        ****                             /* Stop a jog if one was in progress */
 455:main.c        ****                             Jog = 0;
 456:main.c        ****                             
 457:main.c        ****                             /* Output and Iterm limits */
 458:main.c        ****                             limitOutput = rxMessage.config.limitOutput;
 459:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 460:main.c        ****                                 
 461:main.c        ****                                 
 462:main.c        ****                             /* Update the PID values passed down from the server */
 463:main.c        ****                         
 464:main.c        **** #ifndef OVERRIDE_PID_CONSTANTS
 465:main.c        ****                             kp = rxMessage.config.Kp;
 466:main.c        ****                             ki = rxMessage.config.Ki;
 467:main.c        ****                             kd = rxMessage.config.Kd;      
 468:main.c        ****                         
 469:main.c        ****                             /* PID effective setpoint increment delta value */                     
 470:main.c        ****                             PID_EffSetDelta = rxMessage.config.effsetdelta;
 471:main.c        **** #endif
 472:main.c        ****                         
 473:main.c        ****                             /* We have received a config message, so signal to the PID thread that 
 474:main.c        ****                             ConfigState = csReady;  
 475:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 476:main.c        ****                         
 477:main.c        ****                             /* Clear all the faults when reconfigured */
 478:main.c        ****                             ClearFault(fsNONE);
 479:main.c        ****                             break;
 480:main.c        **** 
 481:main.c        ****                         case opStatus:
 482:main.c        ****                             /* The normal message telling us where to go, how much to jog, enable o
 483:main.c        ****                             PID_Enabled = (bool) rxMessage.status.enable;
 484:main.c        ****                             
 485:main.c        ****                             /* If we are commanded to move somewhere else, remember where we starte
 486:main.c        ****                             if (PID_Setpoint != rxMessage.status.setpoint) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 10


 487:main.c        ****                                 
 488:main.c        ****                                 /* This is a new move, start timing! */
 489:main.c        ****                                 NewCommandedMove = true;
 490:main.c        ****                                 
 491:main.c        ****                                 /* Remember where we started */
 492:main.c        ****                                 LastPosition = GetPosition();
 493:main.c        ****                                 
 494:main.c        ****                                 /* Update destination */
 495:main.c        ****                                 PID_Setpoint = rxMessage.status.setpoint;
 496:main.c        ****                                 
 497:main.c        ****                                 /* Initialize the effective setpoint to be equal to where we are ri
 498:main.c        ****                                 it will be incremented/decremented when the PID algorithm runs next
 499:main.c        ****                                 PID_EffectiveSetpoint = LastPosition;                              
 500:main.c        ****                                 
 501:main.c        ****                                 /* Reset counting of index marks */
 502:main.c        ****                                 Index_Counter_1_WriteCounter(0);
 503:main.c        ****                                 
 504:main.c        ****                                 
 505:main.c        ****                                 /* The demand has changed.  Hold off the integrator for a certain a
 506:main.c        ****                                 dictated by the size of the move (if it's more than 50 counts) */
 507:main.c        ****                                 distance = PID_Setpoint - LastPosition;                            
 508:main.c        ****                                 if (distance < 0) {
 509:main.c        ****                                     distance *= -1;
 510:main.c        ****                                 }
 511:main.c        ****                                 
 512:main.c        **** #define ITERM_90PCT_FIT_CONSTANT 13
 513:main.c        ****                                 
 514:main.c        ****                                 if (distance > 50) {                                
 515:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 516:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 517:main.c        ****                                 } else {
 518:main.c        ****                                     iterm_delay = 0;
 519:main.c        ****                                 }
 520:main.c        ****                                 
 521:main.c        ****                                 
 522:main.c        ****                                 /* The demand has changed, reset the iterm delay to the max */
 523:main.c        ****                                 //iterm_delay = ITERM_DELAY_DEFAULT;  
 524:main.c        ****                                 //iterm_delay = 0;
 525:main.c        ****                             }                                        
 526:main.c        ****                         
 527:main.c        ****                             /* PWM jog value ranges from -50 to 50, where -50 is max-reverse curren
 528:main.c        ****                             Jog = rxMessage.status.jog;                                            
 529:main.c        ****                             break;
 530:main.c        ****                         
 531:main.c        ****                         case opSetEnc:
 532:main.c        ****                             /* The message is telling us what to arbitrarily set the encoder values
 533:main.c        ****                             Counter_1_WriteCounter(rxMessage.status.setpoint);
 534:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 535:main.c        ****                             break;                                        
 536:main.c        ****                             
 537:main.c        ****                         /* No other opcodes are valid */
 538:main.c        ****                         default:
 539:main.c        ****                             break;
 540:main.c        ****                     }                           
 541:main.c        ****                 }                            
 542:main.c        ****             }
 543:main.c        ****             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 11


 544:main.c        ****             /* Get a fresh copy of the position information */
 545:main.c        ****             Position = GetPosition();
 546:main.c        ****             
 547:main.c        ****             /* Fill out the common reponse the same way every time, as a status response */
 548:main.c        ****             txMessage.msg.checksum        = 0;
 549:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 550:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
 551:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 552:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 553:main.c        ****             txMessage.msg.opcode          = opStatus;
 554:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 555:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 556:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 557:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 558:main.c        ****             txMessage.msg.position        = Position;
 559:main.c        ****             txMessage.msg.pwm             = Output;
 560:main.c        ****             txMessage.msg.iterm           = iterm;
 561:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 562:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 563:main.c        ****             
 564:main.c        ****             /* Set the checksum in the response */
 565:main.c        ****             for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 566:main.c        ****                 checksum += txMessage.buf[i]; 
 567:main.c        ****                 
 568:main.c        ****             /* Take the 2's complement of the sum and put it back in the message */
 569:main.c        ****             txMessage.msg.checksum = ~checksum + 1;
 570:main.c        ****                 
 571:main.c        ****             /* Copy the readied buffer out to the FIFO */
 572:main.c        ****             //TODO: should we clear this here, or at the end of the transmit complete interrupt?   
 573:main.c        ****             SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 574:main.c        **** 
 575:main.c        ****             /* Indicate it's loaded for use */
 576:main.c        ****             txMessageState = txmsLoaded;
 577:main.c        ****             
 578:main.c        ****             /* Clear all the faults if told to */
 579:main.c        ****             if ((bool) rxMessage.status.clearfaults)
 580:main.c        ****                 ClearFault(fsNONE);
 581:main.c        ****         
 582:main.c        ****             break;
 583:main.c        ****     
 584:main.c        ****         /* A message was already readied for transmission, nothing to do here */
 585:main.c        ****         case txmsLoaded:                
 586:main.c        ****             break;
 587:main.c        ****                 
 588:main.c        ****     } // End of message state case statement
 589:main.c        **** 
 590:main.c        **** }
 591:main.c        ****     
 592:main.c        **** 
 593:main.c        **** /*******************************************************************************
 594:main.c        **** * Function Name: PWM_Set
 595:main.c        **** ********************************************************************************
 596:main.c        **** * Summary:
 597:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 598:main.c        **** *
 599:main.c        **** * Parameters: Duty cycle, in percent.  A value of 50 is "neutral", values up 
 600:main.c        **** *             to 100 is forward drive, and below 50 down to 0 is backward drive.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 12


 601:main.c        **** * Return: None
 602:main.c        **** *******************************************************************************/
 603:main.c        **** void PWM_Set(int32_t output) {    
 604:main.c        ****         
 605:main.c        ****     /* output varies from -800 to 800, which needs to be expressed as 0 to 1600 
 606:main.c        ****        for the PWM */
 607:main.c        ****     PWM_1_WriteCompare((PWM_15KHZ_PERIOD/2) + (DRIVE_POLARITY * output));    
 608:main.c        **** }
 609:main.c        **** 
 610:main.c        **** 
 611:main.c        **** /*******************************************************************************
 612:main.c        **** * Function Name: GetPosition
 613:main.c        **** ********************************************************************************
 614:main.c        **** * Summary:
 615:main.c        **** *  Get the physical position value and compensate for negative locations.
 616:main.c        **** *
 617:main.c        **** * Parameters: None
 618:main.c        **** * Return: int32_t (signed!) position value
 619:main.c        **** *******************************************************************************/
 620:main.c        **** int32_t GetPosition(void) {
 621:main.c        ****     
 622:main.c        ****     static volatile uint32_t RawPosition;
 623:main.c        ****     static volatile int32_t result;
 624:main.c        ****     
 625:main.c        ****     /* Get up-to-date position from the 24 bit unsigned counter*/
 626:main.c        ****     RawPosition = Counter_1_ReadCounter();   
 627:main.c        ****     
 628:main.c        ****     /* If the raw position is higher than some extremely high number, treat it as 
 629:main.c        ****        underflow and make that into a negative value */
 630:main.c        ****     if (RawPosition > ENCODER_NEGATIVE_BOUNDARY) {
 631:main.c        ****         
 632:main.c        ****         result = (-1) * ((int32_t) ENCODER_MAX - (int32_t) RawPosition);
 633:main.c        ****         
 634:main.c        ****     } else {
 635:main.c        ****      
 636:main.c        ****         /* Value is "positive", treat it normally */
 637:main.c        ****         result = (int32_t) RawPosition;
 638:main.c        ****     }
 639:main.c        ****     
 640:main.c        ****     /* Update the master copy of position information */
 641:main.c        ****     Position = result;
 642:main.c        ****     return result;
 643:main.c        **** }
 644:main.c        **** 
 645:main.c        **** 
 646:main.c        **** /*******************************************************************************
 647:main.c        **** * Function Name: PID_Initialize
 648:main.c        **** ********************************************************************************
 649:main.c        **** * Summary:
 650:main.c        **** *  Setup and reset the PID terms.
 651:main.c        **** *
 652:main.c        **** * Parameters: None
 653:main.c        **** * Return: None
 654:main.c        **** *******************************************************************************/
 655:main.c        **** void PID_Initialize(void) {
 656:main.c        ****     
 657:main.c        ****     /* Get up-to-date position */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 13


 658:main.c        ****     Position = GetPosition();
 659:main.c        ****     LastPosition = Position;
 660:main.c        ****     
 661:main.c        ****     /* Initialize the effective setpoint to be equal to where we are right now,
 662:main.c        ****     it will be incremented/decremented when the PID algorithm runs next time */
 663:main.c        ****     PID_EffectiveSetpoint = LastPosition;
 664:main.c        ****     
 665:main.c        ****     /* 2019-03-13 PMR: Init to zero instead of the output value, since we are not
 666:main.c        ****        switching from manual to auto frequently */
 667:main.c        ****     iterm = 0;
 668:main.c        **** }    
 669:main.c        **** 
 670:main.c        **** 
 671:main.c        **** /*******************************************************************************
 672:main.c        **** * Function Name: PID_SetMode
 673:main.c        **** ********************************************************************************
 674:main.c        **** * Summary:
 675:main.c        **** *  Sets the PID into automatic or manual mode.
 676:main.c        **** *
 677:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 678:main.c        **** * Return: None
 679:main.c        **** *******************************************************************************/
 680:main.c        **** void PID_SetMode(uint32_t Mode) {
 681:main.c        ****     
 682:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 683:main.c        ****     
 684:main.c        ****     if (newAuto && !inAuto) {  
 685:main.c        ****         /*we just went from manual to auto*/
 686:main.c        ****         PID_Initialize();
 687:main.c        ****     }
 688:main.c        ****     
 689:main.c        ****     inAuto = newAuto;
 690:main.c        **** } 
 691:main.c        **** 
 692:main.c        **** 
 693:main.c        **** /*******************************************************************************
 694:main.c        **** * Function Name: runRateGroup1_PID
 695:main.c        **** ********************************************************************************
 696:main.c        **** * Summary:
 697:main.c        **** *  Task to perform the PID calculations.
 698:main.c        **** *
 699:main.c        **** * Parameters: None
 700:main.c        **** * Return: None
 701:main.c        **** *******************************************************************************/
 702:main.c        **** void runRateGroup1_PID(void) {
 703:main.c        ****    
 704:main.c        ****     /////////////////////////////////////////////////////
 705:main.c        ****     // TESTING ONLY
 706:main.c        ****     //ConfigState = csReady;
 707:main.c        ****     //PID_Enabled = true;
 708:main.c        ****     /////////////////////////////////////////////////////
 709:main.c        **** 
 710:main.c        ****     /* If the server hasn't talked to us in a while (no messages on the SPI), 
 711:main.c        ****        take preventative action and abandon any moves in progress. */
 712:main.c        ****     if (UptimeSeconds > (LastMessageTimeSeconds + MAX_LAST_MESSAGE_TIME_SECONDS)) {
 713:main.c        ****         
 714:main.c        ****         /* Stop all motion */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 14


 715:main.c        ****         ////PWM_Set(PWM_JOG_NEUTRAL);
 716:main.c        ****         PWM_Set(PWM_NEUTRAL);
 717:main.c        ****         PID_Enabled = false;
 718:main.c        ****         
 719:main.c        ****         /* Clear the values that would drive motion on the next message arrival.  Assume the next m
 720:main.c        ****            in which case we want to be neutral. */
 721:main.c        ****         Jog = 0;
 722:main.c        **** 
 723:main.c        ****     /* Only run the PID algorithm if we have been configured by the nodebox software */
 724:main.c        ****     } else if (ConfigState == csReady) {
 725:main.c        ****         
 726:main.c        ****         /* Enable the drive outputs for the home and index once configured, otherwise they
 727:main.c        ****            can screw up the boot pins on the BeagleBoneBlack */
 728:main.c        ****         HOME_OUT_SetDriveMode(HOME_OUT_DM_STRONG); 
 729:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 730:main.c        **** 
 731:main.c        ****         /* Handle mode switching */
 732:main.c        ****         if (!PID_Was_Enabled && PID_Enabled) {
 733:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 734:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 735:main.c        ****             PID_SetMode(PID_MANUAL);                
 736:main.c        ****         } else {
 737:main.c        ****             // No mode change happened   
 738:main.c        ****         }
 739:main.c        ****         
 740:main.c        ****         /* Save value for next cycle */
 741:main.c        ****         PID_Was_Enabled = PID_Enabled;
 742:main.c        ****         
 743:main.c        ****         /* Calculate the effective setpoint, which is defined as N (nominally 25) counts closer to 
 744:main.c        ****         actual setpoint, incremented once per cycle of this algorithm.  
 745:main.c        ****     
 746:main.c        ****         Consider a move of +2000 counts from position 0 to 2000: 
 747:main.c        ****         
 748:main.c        ****         1) The setpoint will change to 2000.
 749:main.c        ****         2) The effective setpoint is initialized to the current position, plus 25 counts = 25.
 750:main.c        ****         3) Calculate the PID and return.
 751:main.c        ****         4) The next time PID_Compute is called, increment the effective setpoint by 25 counts = 50.
 752:main.c        ****         5) Calculate the PID and return.
 753:main.c        ****         6) Repeat steps 4 and 5 until the effective setpoint equals the actual setpoint.           
 754:main.c        ****         */
 755:main.c        ****         
 756:main.c        ****         if (PID_Enabled) {
 757:main.c        ****             
 758:main.c        ****             if (PID_EffSetDelta == 0) {
 759:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 760:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 761:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 762:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 763:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 764:main.c        ****             } else {
 765:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint - PID_EffSetDelta);
 766:main.c        ****             }
 767:main.c        ****             
 768:main.c        ****             /* Get most up-to-date current position */
 769:main.c        ****             Position = GetPosition();
 770:main.c        ****             
 771:main.c        ****             /* Run the PID algorithm once */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 15


 772:main.c        ****             Output = PID_UpdateValues(PID_EffectiveSetpoint, Position);
 773:main.c        ****             
 774:main.c        ****             /* Put the PID output value out on the wire */
 775:main.c        ****             PWM_Set(Output);
 776:main.c        ****             
 777:main.c        ****             /* Calculate how long the last commanded move has taken */
 778:main.c        ****             if (NewCommandedMove) {
 779:main.c        ****                 
 780:main.c        ****                 if (Position == PID_Setpoint) {
 781:main.c        ****                     
 782:main.c        ****                     /* We are at the set point, but it's not known if the motion is stable yet, we 
 783:main.c        ****                     Therefore, count how many times we have held at this location.  When it exceeds
 784:main.c        ****                     use the time we first reached this position as the move's end time. */
 785:main.c        ****                     if (LastMoveStableCount == LAST_MOVE_TIME_SAMPLE_COUNT) {
 786:main.c        ****                         
 787:main.c        ****                         /* We have arrived at the set point and have been here for 6ms (30 counts o
 788:main.c        ****                         good and calculate how long this move took */
 789:main.c        ****                         LastMoveTimeUsec = LastMoveEndTimeUsec - LastMoveStartTimeUsec;
 790:main.c        ****                         
 791:main.c        ****                         /* Clear the flag for this particular move */ 
 792:main.c        ****                         NewCommandedMove = false;
 793:main.c        ****                         
 794:main.c        ****                     } else {
 795:main.c        ****                         
 796:main.c        ****                         /* We have reached the destination but it is not yet proven stable. Increme
 797:main.c        ****                         It will be reset to zero if we deviate from this position. */              
 798:main.c        ****                         LastMoveStableCount += 1;
 799:main.c        **** 
 800:main.c        ****                         /* If the stable count is exactly 1, then this might be the start of a new 
 801:main.c        ****                         note the time.  This is potentially the END TIME of a move.  The start time
 802:main.c        ****                         when the node box sent a new set point. */
 803:main.c        ****                         if (LastMoveStableCount == 1) {
 804:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 805:main.c        ****                         }                    
 806:main.c        ****                     }                
 807:main.c        ****                     
 808:main.c        ****                 } else {
 809:main.c        ****                     
 810:main.c        ****                     /* Reset the stable counter, because we are not at the commanded location */
 811:main.c        ****                     LastMoveStableCount = 0;                
 812:main.c        ****                 }
 813:main.c        ****             }
 814:main.c        **** 
 815:main.c        ****         } else {
 816:main.c        ****             /* If disabled, just return 0 */
 817:main.c        ****             Output = 0;
 818:main.c        ****         }        
 819:main.c        ****     }
 820:main.c        **** }
 821:main.c        **** 
 822:main.c        **** 
 823:main.c        **** /*******************************************************************************
 824:main.c        **** * Function Name: main
 825:main.c        **** ********************************************************************************
 826:main.c        **** * Summary:
 827:main.c        **** *  Setup tasks, interrupts, and perform the background task functions.
 828:main.c        **** *
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 16


 829:main.c        **** * Parameters: None
 830:main.c        **** * Return: NEVER!
 831:main.c        **** *******************************************************************************/
 832:main.c        **** int main(void) {
 833:main.c        ****     
 834:main.c        ****     /* DISABLE the drive outputs for the home and index immediately upon booting the 
 835:main.c        ****        microprocessor.  There is a race condition here: unless the actuator is on a home
 836:main.c        ****        flag or index mark, a 1 will be written to each output.  Depending on which 
 837:main.c        ****        Cypress device this is, it could end up going to one of the boot pins of the Beagle
 838:main.c        ****        Bone Black device.  Undesirable results can result: corrupt serial output on the
 839:main.c        ****        console, inabulity to boot from eMMC, or even a complete failure to power on. */
 840:main.c        ****     HOME_OUT_SetDriveMode(HOME_OUT_DM_DIG_HIZ); 
 841:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 842:main.c        **** 
 843:main.c        ****     
 844:main.c        ****     /********************************************************************** 
 845:main.c        ****     * Interrupts
 846:main.c        ****     **********************************************************************/
 847:main.c        ****     
 848:main.c        ****     /* BRMS timer interrupt */
 849:main.c        ****     Timer_BRMS_Start();
 850:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 851:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 852:main.c        **** 
 853:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
 854:main.c        ****     isr_home_StartEx(HomeIsrHandler);
 855:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 856:main.c        **** 
 857:main.c        ****     /* Encoder interrupt */
 858:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 859:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 860:main.c        ****     
 861:main.c        ****     /* Setup the SPI slave select interrupt ISR */
 862:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
 863:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 864:main.c        **** 
 865:main.c        ****     /* Enable the global interrupt */
 866:main.c        ****     CyGlobalIntEnable;
 867:main.c        ****     
 868:main.c        ****     /********************************************************************** 
 869:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
 870:main.c        ****     **********************************************************************/
 871:main.c        **** 
 872:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
 873:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
 874:main.c        ****        when you hit a breakpoint. */
 875:main.c        **** 
 876:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
 877:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 878:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
 879:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 880:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 881:main.c        **** 	
 882:main.c        **** 	/* Enable WDT counter 1 */
 883:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
 884:main.c        **** 	
 885:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 17


 886:main.c        **** 	CySysWdtLock();
 887:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 888:main.c        **** 	CySysWdtUnlock();        
 889:main.c        **** #endif    
 890:main.c        **** 
 891:main.c        ****     
 892:main.c        ****     /*********************************************************************** 
 893:main.c        ****     * Start the various subsystems.
 894:main.c        ****     ***********************************************************************/
 895:main.c        ****     I2C_Start();
 896:main.c        ****     
 897:main.c        ****     /* Start I2C for the Motor Current monitor */
 898:main.c        ****     //Init_INA(INA219_I2C_ADDR);
 899:main.c        ****     
 900:main.c        ****     CyDelay(100u);
 901:main.c        ****     SPI_1_Start();
 902:main.c        ****     
 903:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
 904:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
 905:main.c        ****     PWM_1_Start();
 906:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 907:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 908:main.c        ****     
 909:main.c        ****     /* Default the jog value to neutral (no movement) */
 910:main.c        ****     Jog = 0;
 911:main.c        ****     
 912:main.c        ****     /* Set a flag that homing is not done yet, since we just booted */
 913:main.c        ****     homingDone = false;
 914:main.c        ****    
 915:main.c        ****     /* Start counting the quadrature encoding */
 916:main.c        ****     Counter_1_Start();    
 917:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 918:main.c        ****     LastPosition = ENCODER_MAX;
 919:main.c        ****     
 920:main.c        ****     /* Clear and start the index mark counter */
 921:main.c        ****     Index_Counter_1_Start();
 922:main.c        ****     Index_Counter_1_WriteCounter(0);
 923:main.c        ****      
 924:main.c        ****     /* Start off unconfigured */
 925:main.c        ****     ConfigState = csUnconfig;  
 926:main.c        ****     ConfigSequence = 0;
 927:main.c        ****     ChecksumErrors = 0;
 928:main.c        ****     
 929:main.c        ****     /***************************/
 930:main.c        ****     /* Setup the PID subsystem */
 931:main.c        ****     PID_Initialize();
 932:main.c        ****     PID_SetMode(PID_MANUAL);
 933:main.c        ****     
 934:main.c        ****     /* Initially default to full output max until config tells us otherwise */
 935:main.c        ****     limitOutput = 800;
 936:main.c        ****     limitIterm = 800;
 937:main.c        ****     
 938:main.c        ****     /* Start off disabled */
 939:main.c        ****     PID_Setpoint          = 0;  
 940:main.c        ****     PID_EffectiveSetpoint = 0;
 941:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 942:main.c        ****     PID_Was_Enabled       = false;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 18


 943:main.c        ****     PID_Enabled           = false;
 944:main.c        ****     //PID_SetDrive(0); // Drive set to 0%
 945:main.c        ****     PWM_Set(PWM_NEUTRAL);
 946:main.c        ****   
 947:main.c        ****     /***********************************************************************
 948:main.c        ****     * Run the background tasks.  Assume anything executed in here will be
 949:main.c        ****     * constantly interrupted by the task scheduler.
 950:main.c        ****     ***********************************************************************/
 951:main.c        ****     while (1) {
 952:main.c        **** 
 953:main.c        ****         //TODO: Enable/disable this mechanism based on some input from the SPI master,
 954:main.c        ****         //      which might be the ACS test set, or the beagle bone node box.  Disable it for
 955:main.c        ****         //      now to prevent multi-mastering of the I2C bus, which doesn't work.
 956:main.c        ****         /*
 957:main.c        ****         PROBE_Write(1);
 958:main.c        ****         MotorCurrentRead();
 959:main.c        ****         PROBE_Write(0);
 960:main.c        ****         */
 961:main.c        ****         
 962:main.c        ****         /*
 963:main.c        ****         if (UptimeMicroseconds > (LastUptimeMicroseconds + 500)) {
 964:main.c        ****             LastUptimeMicroseconds = UptimeMicroseconds;
 965:main.c        ****             
 966:main.c        ****             if (toggle) {
 967:main.c        ****                 PROBE_Write(1);
 968:main.c        ****                 toggle = false;
 969:main.c        ****             } else {
 970:main.c        ****                 PROBE_Write(0);
 971:main.c        ****                 toggle = true;
 972:main.c        ****             }
 973:main.c        ****         }
 974:main.c        ****         */
 975:main.c        ****         
 976:main.c        ****         
 977:main.c        ****         /* Use the LED as a heartbeat */
 978:main.c        ****         if (UptimeSeconds % 2) {
 979:main.c        ****             LED_Write(1);
 980:main.c        ****         } else {
 981:main.c        ****             LED_Write(0);
 982:main.c        ****         } 
 983:main.c        ****         
 984:main.c        ****         // Delay 10ms before next loop iteration
 985:main.c        ****         CyDelay(10);         
 986:main.c        ****         
 987:main.c        ****         
 988:main.c        ****    
 989:main.c        ****     /* ------------------------------------------------------------------------------------ */
 990:main.c        ****     /* Every loop, refresh the counter of the watchdog to indicate the system is still alive
 991:main.c        ****        and not stalled out in some interrupt somewhre.  Were the BRMS to stop working or the 
 992:main.c        ****        motion thread to die, the CPU will be reset after 2 seconds. */
 993:main.c        **** ////    WDT_COUNT1_REFRESH();        
 994:main.c        ****     /* ------------------------------------------------------------------------------------ */
 995:main.c        ****         
 996:main.c        ****     }
 997:main.c        ****       
 998:main.c        ****     
 999:main.c        ****     /***********************************************************************
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 19


1000:main.c        ****     *  We should never reach this, if we do, we'll crash (reset).
1001:main.c        ****     ***********************************************************************/
1002:main.c        ****     return 1;       
1003:main.c        **** }
1004:main.c        **** 
1005:main.c        **** 
1006:main.c        **** /*******************************************************************************
1007:main.c        **** * Function Name: BRMS_Interrupt
1008:main.c        **** ********************************************************************************
1009:main.c        **** * Summary:
1010:main.c        **** *  Hooks the 200us tick for the BRMS scheduler.
1011:main.c        **** *
1012:main.c        **** * Parameters: None
1013:main.c        **** * Return: None
1014:main.c        **** *******************************************************************************/
1015:main.c        **** CY_ISR(BRMS_Interrupt) {
1016:main.c        ****     
1017:main.c        ****     static uint32_t brmsTask;                 // The BRMS schedule counter
1018:main.c        **** 
1019:main.c        ****     static uint32_t brmsRG1Mask = 0b00000001; // Rate group 1 mask
1020:main.c        ****     static uint32_t brmsRG2Mask = 0b00000010; // Rate group 2 mask
1021:main.c        ****     static uint32_t brmsRG3Mask = 0b00000100; // Rate group 3 mask
1022:main.c        ****     static uint32_t brmsRG4Mask = 0b00001000; // Rate group 4 mask
1023:main.c        ****     static uint32_t brmsRG5Mask = 0b00010000; // Rate group 5 mask
1024:main.c        ****     
1025:main.c        ****     /* Clears the timer interrupt */
1026:main.c        ****     Timer_BRMS_ClearInterrupt(Timer_BRMS_INTR_MASK_CC_MATCH);
1027:main.c        **** 
1028:main.c        ****     PROBE_Write(1);
1029:main.c        ****     
1030:main.c        ****     /* Use this 200us interrupt as a clock mechanism */
1031:main.c        ****     UptimeMicroseconds += 200;
1032:main.c        ****     UptimeMicrosecondsAccumulator += 200;
1033:main.c        ****     
1034:main.c        ****     /* Count milliseconds */
1035:main.c        ****     if (UptimeMicrosecondsAccumulator > 1000) {
1036:main.c        ****         UptimeMicrosecondsAccumulator = 0;
1037:main.c        ****         UptimeMilliseconds += 1;
1038:main.c        ****         UptimeMillisecondsAccumulator += 1;
1039:main.c        ****     }
1040:main.c        ****     
1041:main.c        ****     /* Count seconds */
1042:main.c        ****     if (UptimeMillisecondsAccumulator > 1000) {
1043:main.c        ****         UptimeMillisecondsAccumulator = 0;
1044:main.c        ****         UptimeSeconds += 1;
1045:main.c        ****     }
1046:main.c        ****     
1047:main.c        ****     /* Increment the BRMS task counter infinitely */
1048:main.c        ****     brmsTask++;
1049:main.c        **** 
1050:main.c        ****     /* Determine which rate group to run.  Do this by applying the rate group masks
1051:main.c        ****        sequentially until one results in a "true" value.  
1052:main.c        ****     
1053:main.c        ****        For example: the 1st rate group is invoked every time the brmsTask value ends 
1054:main.c        ****        in 0bxxx1, and ignored when it's 0bxxx0.  
1055:main.c        ****     
1056:main.c        ****        The second rate group is invoked half as often as the first: when the brmsTask
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 20


1057:main.c        ****        value ends in 0bxx10. 
1058:main.c        ****     
1059:main.c        ****        The third rate group is invoked half as often as the second: when brmsTask
1060:main.c        ****        ends in 0bx100.  
1061:main.c        ****     
1062:main.c        ****        In this way, we have decreasing tiers of tasks that are run for at most 200us.
1063:main.c        ****     
1064:main.c        ****        The "background" task does not run at interrupt level.  The main() of the program
1065:main.c        ****        represents everything non time critical, using whatever CPU is left over when the
1066:main.c        ****        interrupt returns.
1067:main.c        ****     */
1068:main.c        ****     if (brmsTask & brmsRG1Mask) {
1069:main.c        ****         
1070:main.c        ****         /* The PID task has the highest priority for this system.  Run it every time rate 
1071:main.c        ****            group 1 comes around, which results in an invocation of PID every 400us.  Equal
1072:main.c        ****            to a 2.5KHz update rate. */
1073:main.c        ****         runRateGroup1_PID();
1074:main.c        ****         
1075:main.c        ****     } else if (brmsTask & brmsRG2Mask) {
1076:main.c        ****         
1077:main.c        ****         /* Rate group 2 is run every 0.8ms, or 1.25KHz*/
1078:main.c        ****         //runRateGroup2_TBD();           
1079:main.c        ****         
1080:main.c        ****     } else if (brmsTask & brmsRG3Mask) {
1081:main.c        ****         
1082:main.c        ****         /* Rate group 3 is run every 1.6ms, or 625Hz*/
1083:main.c        ****         runRateGroup3_SPI();
1084:main.c        ****         
1085:main.c        ****     } else if (brmsTask & brmsRG4Mask) {
1086:main.c        ****      
1087:main.c        ****         /* Rate group 4 is run every 3.2ms, or 312Hz*/
1088:main.c        ****         //runRateGroup4_TBD();
1089:main.c        **** 
1090:main.c        ****     } else if (brmsTask & brmsRG5Mask) {
1091:main.c        ****      
1092:main.c        ****         /* Rate group 5 is run every 6.4ms, or 156Hz*/
1093:main.c        ****         //runRateGroup5_TBD();
1094:main.c        ****     }
1095:main.c        ****     
1096:main.c        ****     PROBE_Write(0);
1097:main.c        ****    
1098:main.c        **** }
1099:main.c        **** 
1100:main.c        **** 
1101:main.c        **** /*******************************************************************************
1102:main.c        **** * Function Name: RSTIsrHandler
1103:main.c        **** ********************************************************************************
1104:main.c        **** * Summary:
1105:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1106:main.c        **** *  Clears a pending Interrupt.
1107:main.c        **** *  Clears a pin Interrupt.
1108:main.c        **** *
1109:main.c        **** * Parameters: None
1110:main.c        **** * Return: None
1111:main.c        **** *******************************************************************************/
1112:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1112 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 21


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1113:main.c        ****     
1114:main.c        ****     /* Clear pending Interrupt */
1115:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1115 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1116:main.c        ****     
1117:main.c        ****     /* Clear pin Interrupt */
1118:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1118 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1119:main.c        ****     
1120:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1121:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1121 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1122:main.c        ****     
1123:main.c        ****     /* Clear the index counter */
1124:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1124 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1125:main.c        ****     
1126:main.c        ****     /* When we hit the index mark, homing is complete */
1127:main.c        ****     homingDone = true;    
  50              		.loc 1 1127 0
  51 0016 0122     		movs	r2, #1
  52 0018 014B     		ldr	r3, .L2
  53 001a 1A70     		strb	r2, [r3]
1128:main.c        **** }
  54              		.loc 1 1128 0
  55              		@ sp needed
  56 001c 10BD     		pop	{r4, pc}
  57              	.L3:
  58 001e C046     		.align	2
  59              	.L2:
  60 0020 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE43:
  63              		.size	RSTIsrHandler, .-RSTIsrHandler
  64              		.section	.text.HomeIsrHandler,"ax",%progbits
  65              		.align	2
  66              		.global	HomeIsrHandler
  67              		.code	16
  68              		.thumb_func
  69              		.type	HomeIsrHandler, %function
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 22


  70              	HomeIsrHandler:
  71              	.LFB44:
1129:main.c        **** 
1130:main.c        **** 
1131:main.c        **** /*******************************************************************************
1132:main.c        **** * Function Name: HomeIsrHandler
1133:main.c        **** ********************************************************************************
1134:main.c        **** * Summary:
1135:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1136:main.c        **** *  Clears a pending Interrupt.
1137:main.c        **** *  Clears a pin Interrupt.
1138:main.c        **** *
1139:main.c        **** * Parameters: None
1140:main.c        **** * Return: None
1141:main.c        **** *******************************************************************************/
1142:main.c        **** CY_ISR(HomeIsrHandler) {
  72              		.loc 1 1142 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
1143:main.c        ****     
1144:main.c        ****     /* Clear pending Interrupt */
1145:main.c        ****     isr_home_ClearPending(); 
  80              		.loc 1 1145 0
  81 0002 FFF7FEFF 		bl	isr_home_ClearPending
  82              	.LVL4:
1146:main.c        ****     
1147:main.c        ****     /* Clear pin Interrupt */
1148:main.c        ****     HOME_IN_ClearInterrupt();
  83              		.loc 1 1148 0
  84 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  85              	.LVL5:
1149:main.c        **** 
1150:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1151:main.c        ****     Counter_1_WriteCounter(0);
  86              		.loc 1 1151 0
  87 000a 0020     		movs	r0, #0
  88 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  89              	.LVL6:
1152:main.c        ****     
1153:main.c        ****     /* Set a flag that homing is not done yet until the next index position */
1154:main.c        ****     homingDone = false;
  90              		.loc 1 1154 0
  91 0010 0022     		movs	r2, #0
  92 0012 014B     		ldr	r3, .L5
  93 0014 1A70     		strb	r2, [r3]
1155:main.c        **** }
  94              		.loc 1 1155 0
  95              		@ sp needed
  96 0016 10BD     		pop	{r4, pc}
  97              	.L6:
  98              		.align	2
  99              	.L5:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 23


 100 0018 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE44:
 103              		.size	HomeIsrHandler, .-HomeIsrHandler
 104              		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
 105              		.align	2
 106              		.global	SPI_SS_IsrHandler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SPI_SS_IsrHandler, %function
 110              	SPI_SS_IsrHandler:
 111              	.LFB45:
1156:main.c        **** 
1157:main.c        **** 
1158:main.c        **** /*******************************************************************************
1159:main.c        **** * Function Name: SPI_SS_IsrHandler
1160:main.c        **** ********************************************************************************
1161:main.c        **** * Summary:
1162:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1163:main.c        **** *  Clears a pin Interrupt.
1164:main.c        **** *
1165:main.c        **** * Parameters: None
1166:main.c        **** * Return: None
1167:main.c        **** *******************************************************************************/
1168:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
 112              		.loc 1 1168 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1169:main.c        ****     
1170:main.c        ****     uint32_t i;
1171:main.c        ****     
1172:main.c        ****     /* Clear SPI slave select pin Interrupt */
1173:main.c        ****     spi_ss_ClearInterrupt();
 120              		.loc 1 1173 0
 121 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 122              	.LVL7:
1174:main.c        ****     
1175:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1176:main.c        ****     if (!spi_ss_Read()) 
 123              		.loc 1 1176 0
 124 0006 FFF7FEFF 		bl	spi_ss_Read
 125              	.LVL8:
 126 000a 0028     		cmp	r0, #0
 127 000c 1DD0     		beq	.L7
1177:main.c        ****         return;
1178:main.c        ****    
1179:main.c        ****     /* Update the last message tick timer */
1180:main.c        ****     LastMessageTimeSeconds = UptimeSeconds;
 128              		.loc 1 1180 0
 129 000e 0F4B     		ldr	r3, .L12
 130 0010 1A68     		ldr	r2, [r3]
 131 0012 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 24


 132 0014 0E4B     		ldr	r3, .L12+4
 133 0016 1A60     		str	r2, [r3]
1181:main.c        **** 
1182:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1183:main.c        ****        check the messaging state before resetting the buffers */
1184:main.c        ****     switch (txMessageState) {
 134              		.loc 1 1184 0
 135 0018 0E4B     		ldr	r3, .L12+8
 136 001a 1B78     		ldrb	r3, [r3]
 137 001c 012B     		cmp	r3, #1
 138 001e 14D1     		bne	.L7
1185:main.c        ****      
1186:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1187:main.c        ****         case txmsClear:
1188:main.c        ****             break;
1189:main.c        ****      
1190:main.c        ****         /* A message was readied for transmission */
1191:main.c        ****         case txmsLoaded:
1192:main.c        ****          
1193:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1194:main.c        ****             
1195:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1196:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 139              		.loc 1 1196 0
 140 0020 1B22     		movs	r2, #27
 141 0022 0021     		movs	r1, #0
 142 0024 0C48     		ldr	r0, .L12+12
 143 0026 FFF7FEFF 		bl	memset
 144              	.LVL9:
1197:main.c        **** 
1198:main.c        ****             /* Message from the master is completely clocked in by now */     
1199:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 145              		.loc 1 1199 0
 146 002a 0024     		movs	r4, #0
 147 002c 04E0     		b	.L10
 148              	.LVL10:
 149              	.L11:
1200:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 150              		.loc 1 1200 0 discriminator 3
 151 002e FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 152              	.LVL11:
 153 0032 0A4B     		ldr	r3, .L12+16
 154 0034 1855     		strb	r0, [r3, r4]
1199:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 155              		.loc 1 1199 0 discriminator 3
 156 0036 0134     		adds	r4, r4, #1
 157              	.LVL12:
 158              	.L10:
1199:main.c        ****                 rxMessage.buf[i] = (uint8_t) SPI_1_SpiUartReadRxData();            
 159              		.loc 1 1199 0 is_stmt 0 discriminator 1
 160 0038 1A2C     		cmp	r4, #26
 161 003a F8D9     		bls	.L11
1201:main.c        ****             }
1202:main.c        ****             
1203:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1204:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 162              		.loc 1 1204 0 is_stmt 1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 25


 163 003c FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 164              	.LVL13:
1205:main.c        ****             
1206:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1207:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 165              		.loc 1 1207 0
 166 0040 FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 167              	.LVL14:
1208:main.c        ****             
1209:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1210:main.c        ****             txMessageState = txmsClear;        
 168              		.loc 1 1210 0
 169 0044 0022     		movs	r2, #0
 170 0046 034B     		ldr	r3, .L12+8
 171 0048 1A70     		strb	r2, [r3]
 172              	.LVL15:
 173              	.L7:
1211:main.c        ****             break;
1212:main.c        ****             
1213:main.c        ****     } 
1214:main.c        ****         
1215:main.c        **** }
 174              		.loc 1 1215 0
 175              		@ sp needed
 176 004a 10BD     		pop	{r4, pc}
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 004c 00000000 		.word	.LANCHOR1
 181 0050 00000000 		.word	LastMessageTimeSeconds
 182 0054 00000000 		.word	txMessageState
 183 0058 00000000 		.word	txMessage
 184 005c 00000000 		.word	rxMessage
 185              		.cfi_endproc
 186              	.LFE45:
 187              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 188              		.section	.text.AssertFault,"ax",%progbits
 189              		.align	2
 190              		.global	AssertFault
 191              		.code	16
 192              		.thumb_func
 193              		.type	AssertFault, %function
 194              	AssertFault:
 195              	.LFB32:
 320:main.c        ****  
 196              		.loc 1 320 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL16:
 322:main.c        ****      
 202              		.loc 1 322 0
 203 0000 0028     		cmp	r0, #0
 204 0002 03D1     		bne	.L18
 326:main.c        ****             break;        
 205              		.loc 1 326 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 26


 206 0004 0022     		movs	r2, #0
 207 0006 044B     		ldr	r3, .L19
 208 0008 1A70     		strb	r2, [r3]
 327:main.c        ****         
 209              		.loc 1 327 0
 210 000a 03E0     		b	.L14
 211              	.L18:
 331:main.c        ****             break;        
 212              		.loc 1 331 0
 213 000c 024B     		ldr	r3, .L19
 214 000e 1A78     		ldrb	r2, [r3]
 215 0010 1043     		orrs	r0, r2
 216              	.LVL17:
 217 0012 1870     		strb	r0, [r3]
 218              	.L14:
 334:main.c        **** 
 219              		.loc 1 334 0
 220              		@ sp needed
 221 0014 7047     		bx	lr
 222              	.L20:
 223 0016 C046     		.align	2
 224              	.L19:
 225 0018 00000000 		.word	FaultState
 226              		.cfi_endproc
 227              	.LFE32:
 228              		.size	AssertFault, .-AssertFault
 229              		.section	.text.ClearFault,"ax",%progbits
 230              		.align	2
 231              		.global	ClearFault
 232              		.code	16
 233              		.thumb_func
 234              		.type	ClearFault, %function
 235              	ClearFault:
 236              	.LFB33:
 347:main.c        ****  
 237              		.loc 1 347 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL18:
 349:main.c        ****      
 243              		.loc 1 349 0
 244 0000 0028     		cmp	r0, #0
 245 0002 03D1     		bne	.L25
 353:main.c        ****             break;        
 246              		.loc 1 353 0
 247 0004 0022     		movs	r2, #0
 248 0006 044B     		ldr	r3, .L26
 249 0008 1A70     		strb	r2, [r3]
 354:main.c        ****         
 250              		.loc 1 354 0
 251 000a 03E0     		b	.L21
 252              	.L25:
 358:main.c        ****             break;        
 253              		.loc 1 358 0
 254 000c 024A     		ldr	r2, .L26
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 27


 255 000e 1378     		ldrb	r3, [r2]
 256 0010 8343     		bics	r3, r0
 257 0012 1370     		strb	r3, [r2]
 258              	.L21:
 361:main.c        **** 
 259              		.loc 1 361 0
 260              		@ sp needed
 261 0014 7047     		bx	lr
 262              	.L27:
 263 0016 C046     		.align	2
 264              	.L26:
 265 0018 00000000 		.word	FaultState
 266              		.cfi_endproc
 267              	.LFE33:
 268              		.size	ClearFault, .-ClearFault
 269              		.global	__aeabi_f2iz
 270              		.section	.text.MotorCurrentRead,"ax",%progbits
 271              		.align	2
 272              		.global	MotorCurrentRead
 273              		.code	16
 274              		.thumb_func
 275              		.type	MotorCurrentRead, %function
 276              	MotorCurrentRead:
 277              	.LFB34:
 373:main.c        ****     
 278              		.loc 1 373 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 378:main.c        ****     
 286              		.loc 1 378 0
 287 0002 4020     		movs	r0, #64
 288 0004 FFF7FEFF 		bl	getCurrent_mA
 289              	.LVL19:
 381:main.c        **** }
 290              		.loc 1 381 0
 291 0008 FFF7FEFF 		bl	__aeabi_f2iz
 292              	.LVL20:
 293 000c 00B2     		sxth	r0, r0
 294 000e 014B     		ldr	r3, .L29
 295 0010 1880     		strh	r0, [r3]
 382:main.c        **** 
 296              		.loc 1 382 0
 297              		@ sp needed
 298 0012 10BD     		pop	{r4, pc}
 299              	.L30:
 300              		.align	2
 301              	.L29:
 302 0014 00000000 		.word	MotorCurrent
 303              		.cfi_endproc
 304              	.LFE34:
 305              		.size	MotorCurrentRead, .-MotorCurrentRead
 306              		.section	.text.PWM_Set,"ax",%progbits
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 28


 307              		.align	2
 308              		.global	PWM_Set
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_Set, %function
 312              	PWM_Set:
 313              	.LFB36:
 603:main.c        ****         
 314              		.loc 1 603 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL21:
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 607:main.c        **** }
 323              		.loc 1 607 0
 324 0002 C823     		movs	r3, #200
 325 0004 9B00     		lsls	r3, r3, #2
 326 0006 9C46     		mov	ip, r3
 327 0008 6044     		add	r0, r0, ip
 328              	.LVL22:
 329 000a FFF7FEFF 		bl	PWM_1_WriteCompare
 330              	.LVL23:
 608:main.c        **** 
 331              		.loc 1 608 0
 332              		@ sp needed
 333 000e 10BD     		pop	{r4, pc}
 334              		.cfi_endproc
 335              	.LFE36:
 336              		.size	PWM_Set, .-PWM_Set
 337              		.section	.text.GetPosition,"ax",%progbits
 338              		.align	2
 339              		.global	GetPosition
 340              		.code	16
 341              		.thumb_func
 342              		.type	GetPosition, %function
 343              	GetPosition:
 344              	.LFB37:
 620:main.c        ****     
 345              		.loc 1 620 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 626:main.c        ****     
 353              		.loc 1 626 0
 354 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
 355              	.LVL24:
 356 0006 0B4B     		ldr	r3, .L35
 357 0008 9860     		str	r0, [r3, #8]
 630:main.c        ****         
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 29


 358              		.loc 1 630 0
 359 000a 9A68     		ldr	r2, [r3, #8]
 360 000c 0A4B     		ldr	r3, .L35+4
 361 000e 9A42     		cmp	r2, r3
 362 0010 06D9     		bls	.L33
 632:main.c        ****         
 363              		.loc 1 632 0
 364 0012 084A     		ldr	r2, .L35
 365 0014 9368     		ldr	r3, [r2, #8]
 366 0016 0949     		ldr	r1, .L35+8
 367 0018 8C46     		mov	ip, r1
 368 001a 6344     		add	r3, r3, ip
 369 001c D360     		str	r3, [r2, #12]
 370 001e 02E0     		b	.L34
 371              	.L33:
 637:main.c        ****     }
 372              		.loc 1 637 0
 373 0020 044B     		ldr	r3, .L35
 374 0022 9A68     		ldr	r2, [r3, #8]
 375 0024 DA60     		str	r2, [r3, #12]
 376              	.L34:
 641:main.c        ****     return result;
 377              		.loc 1 641 0
 378 0026 034B     		ldr	r3, .L35
 379 0028 D968     		ldr	r1, [r3, #12]
 380 002a 054A     		ldr	r2, .L35+12
 381 002c 1160     		str	r1, [r2]
 642:main.c        **** }
 382              		.loc 1 642 0
 383 002e D868     		ldr	r0, [r3, #12]
 643:main.c        **** 
 384              		.loc 1 643 0
 385              		@ sp needed
 386 0030 10BD     		pop	{r4, pc}
 387              	.L36:
 388 0032 C046     		.align	2
 389              	.L35:
 390 0034 00000000 		.word	.LANCHOR1
 391 0038 FFFFEF00 		.word	15728639
 392 003c 010000FF 		.word	-16777215
 393 0040 00000000 		.word	Position
 394              		.cfi_endproc
 395              	.LFE37:
 396              		.size	GetPosition, .-GetPosition
 397              		.section	.text.runRateGroup3_SPI,"ax",%progbits
 398              		.align	2
 399              		.global	runRateGroup3_SPI
 400              		.code	16
 401              		.thumb_func
 402              		.type	runRateGroup3_SPI, %function
 403              	runRateGroup3_SPI:
 404              	.LFB35:
 394:main.c        ****  
 405              		.loc 1 394 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 30


 409 0000 70B5     		push	{r4, r5, r6, lr}
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 4, -16
 412              		.cfi_offset 5, -12
 413              		.cfi_offset 6, -8
 414              		.cfi_offset 14, -4
 404:main.c        ****         return;
 415              		.loc 1 404 0
 416 0002 914B     		ldr	r3, .L54
 417 0004 1B68     		ldr	r3, [r3]
 418 0006 DB07     		lsls	r3, r3, #31
 419 0008 00D5     		bpl	.LCB323
 420 000a 1CE1     		b	.L37	@long jump
 421              	.LCB323:
 408:main.c        ****      
 422              		.loc 1 408 0
 423 000c 8F4B     		ldr	r3, .L54+4
 424 000e 1B78     		ldrb	r3, [r3]
 425 0010 002B     		cmp	r3, #0
 426 0012 00D0     		beq	.LCB328
 427 0014 17E1     		b	.L37	@long jump
 428              	.LCB328:
 414:main.c        ****             opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 429              		.loc 1 414 0
 430 0016 8E4B     		ldr	r3, .L54+8
 431 0018 5878     		ldrb	r0, [r3, #1]
 432              	.LVL25:
 415:main.c        ****             
 433              		.loc 1 415 0
 434 001a 9C78     		ldrb	r4, [r3, #2]
 435              	.LVL26:
 418:main.c        ****                 size = sizeof(txMessage.buf);                            
 436              		.loc 1 418 0
 437 001c 1B28     		cmp	r0, #27
 438 001e 00D9     		bls	.L40
 419:main.c        ****         
 439              		.loc 1 419 0
 440 0020 1B20     		movs	r0, #27
 441              	.LVL27:
 442              	.L40:
 422:main.c        ****                 checksum += rxMessage.buf[i]; 
 443              		.loc 1 422 0
 444 0022 0022     		movs	r2, #0
 445 0024 0023     		movs	r3, #0
 446 0026 05E0     		b	.L41
 447              	.LVL28:
 448              	.L42:
 423:main.c        **** 
 449              		.loc 1 423 0 discriminator 3
 450 0028 8949     		ldr	r1, .L54+8
 451 002a C95C     		ldrb	r1, [r1, r3]
 452 002c 5218     		adds	r2, r2, r1
 453              	.LVL29:
 454 002e D2B2     		uxtb	r2, r2
 455              	.LVL30:
 422:main.c        ****                 checksum += rxMessage.buf[i]; 
 456              		.loc 1 422 0 discriminator 3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 31


 457 0030 0133     		adds	r3, r3, #1
 458              	.LVL31:
 459 0032 DBB2     		uxtb	r3, r3
 460              	.LVL32:
 461              	.L41:
 422:main.c        ****                 checksum += rxMessage.buf[i]; 
 462              		.loc 1 422 0 is_stmt 0 discriminator 1
 463 0034 9842     		cmp	r0, r3
 464 0036 F7D8     		bhi	.L42
 426:main.c        ****                 
 465              		.loc 1 426 0 is_stmt 1
 466 0038 002A     		cmp	r2, #0
 467 003a 09D0     		beq	.L43
 428:main.c        ****                 txMessage.msg.size = sizeof(txMessage_t);
 468              		.loc 1 428 0
 469 003c 854B     		ldr	r3, .L54+12
 470              	.LVL33:
 471 003e 5C71     		strb	r4, [r3, #5]
 429:main.c        ****                 ChecksumErrors++;
 472              		.loc 1 429 0
 473 0040 1B22     		movs	r2, #27
 474              	.LVL34:
 475 0042 1A71     		strb	r2, [r3, #4]
 430:main.c        ****                 
 476              		.loc 1 430 0
 477 0044 844A     		ldr	r2, .L54+16
 478 0046 1388     		ldrh	r3, [r2]
 479 0048 0133     		adds	r3, r3, #1
 480 004a 9BB2     		uxth	r3, r3
 481 004c 1380     		strh	r3, [r2]
 482 004e 9BE0     		b	.L44
 483              	.LVL35:
 484              	.L43:
 436:main.c        ****                 
 485              		.loc 1 436 0
 486 0050 631E     		subs	r3, r4, #1
 487              	.LVL36:
 488 0052 DBB2     		uxtb	r3, r3
 489 0054 022B     		cmp	r3, #2
 490 0056 00D9     		bls	.LCB394
 491 0058 96E0     		b	.L44	@long jump
 492              	.LCB394:
 438:main.c        ****                     
 493              		.loc 1 438 0
 494 005a 022C     		cmp	r4, #2
 495 005c 2CD0     		beq	.L45
 496 005e 032C     		cmp	r4, #3
 497 0060 76D0     		beq	.L46
 498 0062 012C     		cmp	r4, #1
 499 0064 00D0     		beq	.LCB400
 500 0066 8FE0     		b	.L44	@long jump
 501              	.LCB400:
 444:main.c        ****                            
 502              		.loc 1 444 0
 503 0068 FFF7FEFF 		bl	GetPosition
 504              	.LVL37:
 505 006c 7B4B     		ldr	r3, .L54+20
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 32


 506 006e 1860     		str	r0, [r3]
 447:main.c        ****                             PID_EffectiveSetpoint = LastPosition;                                  
 507              		.loc 1 447 0
 508 0070 1968     		ldr	r1, [r3]
 509 0072 7B4A     		ldr	r2, .L54+24
 510 0074 1160     		str	r1, [r2]
 448:main.c        ****                             
 511              		.loc 1 448 0
 512 0076 1A68     		ldr	r2, [r3]
 513 0078 7A4B     		ldr	r3, .L54+28
 514 007a 1A60     		str	r2, [r3]
 451:main.c        ****                             PID_Enabled = false;
 515              		.loc 1 451 0
 516 007c 0023     		movs	r3, #0
 517 007e 7A4A     		ldr	r2, .L54+32
 518 0080 1370     		strb	r3, [r2]
 452:main.c        **** 
 519              		.loc 1 452 0
 520 0082 7A4A     		ldr	r2, .L54+36
 521 0084 1370     		strb	r3, [r2]
 455:main.c        ****                             
 522              		.loc 1 455 0
 523 0086 7A4A     		ldr	r2, .L54+40
 524 0088 1370     		strb	r3, [r2]
 458:main.c        ****                             limitIterm = rxMessage.config.limitIterm;
 525              		.loc 1 458 0
 526 008a 714B     		ldr	r3, .L54+8
 527 008c 197C     		ldrb	r1, [r3, #16]
 528 008e 5A7C     		ldrb	r2, [r3, #17]
 529 0090 1202     		lsls	r2, r2, #8
 530 0092 0A43     		orrs	r2, r1
 531 0094 7749     		ldr	r1, .L54+44
 532 0096 0A80     		strh	r2, [r1]
 459:main.c        ****                                 
 533              		.loc 1 459 0
 534 0098 997C     		ldrb	r1, [r3, #18]
 535 009a DA7C     		ldrb	r2, [r3, #19]
 536 009c 1202     		lsls	r2, r2, #8
 537 009e 0A43     		orrs	r2, r1
 538 00a0 7549     		ldr	r1, .L54+48
 539 00a2 0A80     		strh	r2, [r1]
 474:main.c        ****                             ConfigSequence = rxMessage.config.sequence;
 540              		.loc 1 474 0
 541 00a4 0221     		movs	r1, #2
 542 00a6 754A     		ldr	r2, .L54+52
 543 00a8 1170     		strb	r1, [r2]
 475:main.c        ****                         
 544              		.loc 1 475 0
 545 00aa DA78     		ldrb	r2, [r3, #3]
 546 00ac 744B     		ldr	r3, .L54+56
 547 00ae 1A70     		strb	r2, [r3]
 478:main.c        ****                             break;
 548              		.loc 1 478 0
 549 00b0 0020     		movs	r0, #0
 550 00b2 FFF7FEFF 		bl	ClearFault
 551              	.LVL38:
 479:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 33


 552              		.loc 1 479 0
 553 00b6 67E0     		b	.L44
 554              	.LVL39:
 555              	.L45:
 483:main.c        ****                             
 556              		.loc 1 483 0
 557 00b8 6548     		ldr	r0, .L54+8
 558              	.LVL40:
 559 00ba C378     		ldrb	r3, [r0, #3]
 560 00bc 5A1E     		subs	r2, r3, #1
 561 00be 9341     		sbcs	r3, r3, r2
 562              	.LVL41:
 563 00c0 6A4A     		ldr	r2, .L54+36
 564 00c2 1370     		strb	r3, [r2]
 486:main.c        ****                                 
 565              		.loc 1 486 0
 566 00c4 0379     		ldrb	r3, [r0, #4]
 567 00c6 4279     		ldrb	r2, [r0, #5]
 568 00c8 1202     		lsls	r2, r2, #8
 569 00ca 1A43     		orrs	r2, r3
 570 00cc 8379     		ldrb	r3, [r0, #6]
 571 00ce 1B04     		lsls	r3, r3, #16
 572 00d0 1343     		orrs	r3, r2
 573 00d2 1A00     		movs	r2, r3
 574 00d4 C379     		ldrb	r3, [r0, #7]
 575 00d6 1B06     		lsls	r3, r3, #24
 576 00d8 1343     		orrs	r3, r2
 577 00da 614A     		ldr	r2, .L54+24
 578 00dc 1268     		ldr	r2, [r2]
 579 00de 9342     		cmp	r3, r2
 580 00e0 30D0     		beq	.L48
 489:main.c        ****                                 
 581              		.loc 1 489 0
 582 00e2 0122     		movs	r2, #1
 583 00e4 674B     		ldr	r3, .L54+60
 584 00e6 1A74     		strb	r2, [r3, #16]
 492:main.c        ****                                 
 585              		.loc 1 492 0
 586 00e8 FFF7FEFF 		bl	GetPosition
 587              	.LVL42:
 588 00ec 5B4C     		ldr	r4, .L54+20
 589              	.LVL43:
 590 00ee 2060     		str	r0, [r4]
 495:main.c        ****                                 
 591              		.loc 1 495 0
 592 00f0 5748     		ldr	r0, .L54+8
 593 00f2 0379     		ldrb	r3, [r0, #4]
 594 00f4 4279     		ldrb	r2, [r0, #5]
 595 00f6 1202     		lsls	r2, r2, #8
 596 00f8 1A43     		orrs	r2, r3
 597 00fa 8379     		ldrb	r3, [r0, #6]
 598 00fc 1B04     		lsls	r3, r3, #16
 599 00fe 1343     		orrs	r3, r2
 600 0100 1A00     		movs	r2, r3
 601 0102 C379     		ldrb	r3, [r0, #7]
 602 0104 1B06     		lsls	r3, r3, #24
 603 0106 1343     		orrs	r3, r2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 34


 604 0108 554D     		ldr	r5, .L54+24
 605 010a 2B60     		str	r3, [r5]
 499:main.c        ****                                 
 606              		.loc 1 499 0
 607 010c 2268     		ldr	r2, [r4]
 608 010e 554B     		ldr	r3, .L54+28
 609 0110 1A60     		str	r2, [r3]
 502:main.c        ****                                 
 610              		.loc 1 502 0
 611 0112 0020     		movs	r0, #0
 612 0114 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 613              	.LVL44:
 507:main.c        ****                                 if (distance < 0) {
 614              		.loc 1 507 0
 615 0118 2B68     		ldr	r3, [r5]
 616 011a 2268     		ldr	r2, [r4]
 617 011c 9B1A     		subs	r3, r3, r2
 618              	.LVL45:
 508:main.c        ****                                     distance *= -1;
 619              		.loc 1 508 0
 620 011e 00D5     		bpl	.L49
 509:main.c        ****                                 }
 621              		.loc 1 509 0
 622 0120 5B42     		rsbs	r3, r3, #0
 623              	.LVL46:
 624              	.L49:
 514:main.c        ****                                     iterm_delay = ((distance / 16) + ITERM_90PCT_FIT_CONSTANT) * 10
 625              		.loc 1 514 0
 626 0122 322B     		cmp	r3, #50
 627 0124 0BDD     		ble	.L50
 515:main.c        ****                                     //iterm_delay = distance >> 4;  // Shift by 4 is equal to div b
 628              		.loc 1 515 0
 629 0126 DA17     		asrs	r2, r3, #31
 630 0128 0F21     		movs	r1, #15
 631 012a 0A40     		ands	r2, r1
 632 012c D318     		adds	r3, r2, r3
 633              	.LVL47:
 634 012e 1B11     		asrs	r3, r3, #4
 635 0130 0D33     		adds	r3, r3, #13
 636 0132 FA22     		movs	r2, #250
 637 0134 9200     		lsls	r2, r2, #2
 638 0136 5343     		muls	r3, r2
 639 0138 534A     		ldr	r2, .L54+64
 640 013a 1360     		str	r3, [r2]
 641 013c 02E0     		b	.L48
 642              	.LVL48:
 643              	.L50:
 518:main.c        ****                                 }
 644              		.loc 1 518 0
 645 013e 0022     		movs	r2, #0
 646 0140 514B     		ldr	r3, .L54+64
 647              	.LVL49:
 648 0142 1A60     		str	r2, [r3]
 649              	.L48:
 528:main.c        ****                             break;
 650              		.loc 1 528 0
 651 0144 424B     		ldr	r3, .L54+8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 35


 652 0146 0822     		movs	r2, #8
 653 0148 9A56     		ldrsb	r2, [r3, r2]
 654 014a 494B     		ldr	r3, .L54+40
 655 014c 1A70     		strb	r2, [r3]
 529:main.c        ****                         
 656              		.loc 1 529 0
 657 014e 1BE0     		b	.L44
 658              	.LVL50:
 659              	.L46:
 533:main.c        ****                             LastPosition = rxMessage.status.setpoint;
 660              		.loc 1 533 0
 661 0150 3F4C     		ldr	r4, .L54+8
 662              	.LVL51:
 663 0152 2179     		ldrb	r1, [r4, #4]
 664 0154 6379     		ldrb	r3, [r4, #5]
 665 0156 1B02     		lsls	r3, r3, #8
 666 0158 0B43     		orrs	r3, r1
 667 015a 1A00     		movs	r2, r3
 668              	.LVL52:
 669 015c A079     		ldrb	r0, [r4, #6]
 670              	.LVL53:
 671 015e 0004     		lsls	r0, r0, #16
 672 0160 0300     		movs	r3, r0
 673 0162 1343     		orrs	r3, r2
 674 0164 E079     		ldrb	r0, [r4, #7]
 675 0166 0006     		lsls	r0, r0, #24
 676 0168 1843     		orrs	r0, r3
 677 016a FFF7FEFF 		bl	Counter_1_WriteCounter
 678              	.LVL54:
 534:main.c        ****                             break;                                        
 679              		.loc 1 534 0
 680 016e 2379     		ldrb	r3, [r4, #4]
 681 0170 6279     		ldrb	r2, [r4, #5]
 682 0172 1202     		lsls	r2, r2, #8
 683 0174 1A43     		orrs	r2, r3
 684 0176 A379     		ldrb	r3, [r4, #6]
 685 0178 1B04     		lsls	r3, r3, #16
 686 017a 1343     		orrs	r3, r2
 687 017c 1A00     		movs	r2, r3
 688 017e E379     		ldrb	r3, [r4, #7]
 689 0180 1B06     		lsls	r3, r3, #24
 690 0182 1343     		orrs	r3, r2
 691 0184 354A     		ldr	r2, .L54+20
 692 0186 1360     		str	r3, [r2]
 693              	.L44:
 545:main.c        ****             
 694              		.loc 1 545 0
 695 0188 FFF7FEFF 		bl	GetPosition
 696              	.LVL55:
 697 018c 3F49     		ldr	r1, .L54+68
 698 018e 0860     		str	r0, [r1]
 548:main.c        ****             txMessage.msg.version0        = FIRMWARE_REV_0;
 699              		.loc 1 548 0
 700 0190 304B     		ldr	r3, .L54+12
 701 0192 0022     		movs	r2, #0
 702 0194 1A70     		strb	r2, [r3]
 549:main.c        ****             txMessage.msg.version1        = FIRMWARE_REV_1;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 36


 703              		.loc 1 549 0
 704 0196 5A70     		strb	r2, [r3, #1]
 550:main.c        ****             txMessage.msg.version2        = FIRMWARE_REV_2;
 705              		.loc 1 550 0
 706 0198 0232     		adds	r2, r2, #2
 707 019a 9A70     		strb	r2, [r3, #2]
 551:main.c        ****             txMessage.msg.size            = sizeof(txMessage_t);
 708              		.loc 1 551 0
 709 019c 0120     		movs	r0, #1
 710 019e D870     		strb	r0, [r3, #3]
 552:main.c        ****             txMessage.msg.opcode          = opStatus;
 711              		.loc 1 552 0
 712 01a0 1A30     		adds	r0, r0, #26
 713 01a2 1871     		strb	r0, [r3, #4]
 553:main.c        ****             txMessage.msg.state           = (uint8_t) ConfigState;
 714              		.loc 1 553 0
 715 01a4 5A71     		strb	r2, [r3, #5]
 554:main.c        ****             txMessage.msg.fault           = (uint8_t) FaultState;
 716              		.loc 1 554 0
 717 01a6 354A     		ldr	r2, .L54+52
 718 01a8 1278     		ldrb	r2, [r2]
 719 01aa 9A71     		strb	r2, [r3, #6]
 555:main.c        ****             txMessage.msg.checksum_errors = ChecksumErrors;
 720              		.loc 1 555 0
 721 01ac 384A     		ldr	r2, .L54+72
 722 01ae 1278     		ldrb	r2, [r2]
 723 01b0 DA71     		strb	r2, [r3, #7]
 556:main.c        ****             txMessage.msg.sequence        = ConfigSequence;
 724              		.loc 1 556 0
 725 01b2 294A     		ldr	r2, .L54+16
 726 01b4 1288     		ldrh	r2, [r2]
 727 01b6 92B2     		uxth	r2, r2
 728 01b8 5A72     		strb	r2, [r3, #9]
 729 01ba 120A     		lsrs	r2, r2, #8
 730 01bc 9A72     		strb	r2, [r3, #10]
 557:main.c        ****             txMessage.msg.position        = Position;
 731              		.loc 1 557 0
 732 01be 304A     		ldr	r2, .L54+56
 733 01c0 1278     		ldrb	r2, [r2]
 734 01c2 1A72     		strb	r2, [r3, #8]
 558:main.c        ****             txMessage.msg.pwm             = Output;
 735              		.loc 1 558 0
 736 01c4 0A68     		ldr	r2, [r1]
 737 01c6 5A73     		strb	r2, [r3, #13]
 738 01c8 100A     		lsrs	r0, r2, #8
 739 01ca 9873     		strb	r0, [r3, #14]
 740 01cc 100C     		lsrs	r0, r2, #16
 741 01ce D873     		strb	r0, [r3, #15]
 742 01d0 120E     		lsrs	r2, r2, #24
 743 01d2 1A74     		strb	r2, [r3, #16]
 559:main.c        ****             txMessage.msg.iterm           = iterm;
 744              		.loc 1 559 0
 745 01d4 2F4A     		ldr	r2, .L54+76
 746 01d6 1268     		ldr	r2, [r2]
 747 01d8 92B2     		uxth	r2, r2
 748 01da 5A74     		strb	r2, [r3, #17]
 749 01dc 120A     		lsrs	r2, r2, #8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 37


 750 01de 9A74     		strb	r2, [r3, #18]
 560:main.c        ****             txMessage.msg.motor_current   = MotorCurrent;                  
 751              		.loc 1 560 0
 752 01e0 2D4A     		ldr	r2, .L54+80
 753 01e2 1078     		ldrb	r0, [r2]
 754 01e4 D874     		strb	r0, [r3, #19]
 755 01e6 5078     		ldrb	r0, [r2, #1]
 756 01e8 1875     		strb	r0, [r3, #20]
 757 01ea 9078     		ldrb	r0, [r2, #2]
 758 01ec 5875     		strb	r0, [r3, #21]
 759 01ee D278     		ldrb	r2, [r2, #3]
 760 01f0 9A75     		strb	r2, [r3, #22]
 561:main.c        ****             txMessage.msg.last_move_time  = LastMoveTimeUsec;
 761              		.loc 1 561 0
 762 01f2 2A4A     		ldr	r2, .L54+84
 763 01f4 1288     		ldrh	r2, [r2]
 764 01f6 DA72     		strb	r2, [r3, #11]
 765 01f8 120A     		lsrs	r2, r2, #8
 766 01fa 1A73     		strb	r2, [r3, #12]
 562:main.c        ****             
 767              		.loc 1 562 0
 768 01fc 214A     		ldr	r2, .L54+60
 769 01fe 1900     		movs	r1, r3
 770 0200 107D     		ldrb	r0, [r2, #20]
 771 0202 D875     		strb	r0, [r3, #23]
 772 0204 537D     		ldrb	r3, [r2, #21]
 773 0206 0B76     		strb	r3, [r1, #24]
 774 0208 937D     		ldrb	r3, [r2, #22]
 775 020a 4B76     		strb	r3, [r1, #25]
 776 020c D37D     		ldrb	r3, [r2, #23]
 777 020e 8B76     		strb	r3, [r1, #26]
 778              	.LVL56:
 565:main.c        ****                 checksum += txMessage.buf[i]; 
 779              		.loc 1 565 0
 780 0210 0022     		movs	r2, #0
 781 0212 0023     		movs	r3, #0
 782 0214 05E0     		b	.L51
 783              	.LVL57:
 784              	.L52:
 566:main.c        ****                 
 785              		.loc 1 566 0 discriminator 3
 786 0216 0F49     		ldr	r1, .L54+12
 787 0218 C95C     		ldrb	r1, [r1, r3]
 788 021a 5218     		adds	r2, r2, r1
 789              	.LVL58:
 790 021c D2B2     		uxtb	r2, r2
 791              	.LVL59:
 565:main.c        ****                 checksum += txMessage.buf[i]; 
 792              		.loc 1 565 0 discriminator 3
 793 021e 0133     		adds	r3, r3, #1
 794              	.LVL60:
 795 0220 DBB2     		uxtb	r3, r3
 796              	.LVL61:
 797              	.L51:
 565:main.c        ****                 checksum += txMessage.buf[i]; 
 798              		.loc 1 565 0 is_stmt 0 discriminator 1
 799 0222 1A2B     		cmp	r3, #26
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 38


 800 0224 F7D9     		bls	.L52
 569:main.c        ****                 
 801              		.loc 1 569 0 is_stmt 1
 802 0226 0B48     		ldr	r0, .L54+12
 803 0228 5242     		rsbs	r2, r2, #0
 804              	.LVL62:
 805 022a 0270     		strb	r2, [r0]
 573:main.c        **** 
 806              		.loc 1 573 0
 807 022c 1B21     		movs	r1, #27
 808 022e FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 809              	.LVL63:
 576:main.c        ****             
 810              		.loc 1 576 0
 811 0232 0122     		movs	r2, #1
 812 0234 054B     		ldr	r3, .L54+4
 813 0236 1A70     		strb	r2, [r3]
 579:main.c        ****                 ClearFault(fsNONE);
 814              		.loc 1 579 0
 815 0238 054B     		ldr	r3, .L54+8
 816 023a 5B7A     		ldrb	r3, [r3, #9]
 817 023c 002B     		cmp	r3, #0
 818 023e 02D0     		beq	.L37
 580:main.c        ****         
 819              		.loc 1 580 0
 820 0240 0020     		movs	r0, #0
 821 0242 FFF7FEFF 		bl	ClearFault
 822              	.LVL64:
 823              	.L37:
 590:main.c        ****     
 824              		.loc 1 590 0
 825              		@ sp needed
 826 0246 70BD     		pop	{r4, r5, r6, pc}
 827              	.L55:
 828              		.align	2
 829              	.L54:
 830 0248 24000740 		.word	1074200612
 831 024c 00000000 		.word	txMessageState
 832 0250 00000000 		.word	rxMessage
 833 0254 00000000 		.word	txMessage
 834 0258 00000000 		.word	ChecksumErrors
 835 025c 00000000 		.word	LastPosition
 836 0260 00000000 		.word	PID_Setpoint
 837 0264 00000000 		.word	PID_EffectiveSetpoint
 838 0268 00000000 		.word	PID_Was_Enabled
 839 026c 00000000 		.word	PID_Enabled
 840 0270 00000000 		.word	Jog
 841 0274 00000000 		.word	limitOutput
 842 0278 00000000 		.word	limitIterm
 843 027c 00000000 		.word	ConfigState
 844 0280 00000000 		.word	ConfigSequence
 845 0284 00000000 		.word	.LANCHOR1
 846 0288 00000000 		.word	iterm_delay
 847 028c 00000000 		.word	Position
 848 0290 00000000 		.word	FaultState
 849 0294 00000000 		.word	Output
 850 0298 00000000 		.word	iterm
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 39


 851 029c 00000000 		.word	MotorCurrent
 852              		.cfi_endproc
 853              	.LFE35:
 854              		.size	runRateGroup3_SPI, .-runRateGroup3_SPI
 855              		.section	.text.PID_Initialize,"ax",%progbits
 856              		.align	2
 857              		.global	PID_Initialize
 858              		.code	16
 859              		.thumb_func
 860              		.type	PID_Initialize, %function
 861              	PID_Initialize:
 862              	.LFB38:
 655:main.c        ****     
 863              		.loc 1 655 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867 0000 10B5     		push	{r4, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 4, -8
 870              		.cfi_offset 14, -4
 658:main.c        ****     LastPosition = Position;
 871              		.loc 1 658 0
 872 0002 FFF7FEFF 		bl	GetPosition
 873              	.LVL65:
 874 0006 064B     		ldr	r3, .L57
 875 0008 1860     		str	r0, [r3]
 659:main.c        ****     
 876              		.loc 1 659 0
 877 000a 1A68     		ldr	r2, [r3]
 878 000c 054B     		ldr	r3, .L57+4
 879 000e 1A60     		str	r2, [r3]
 663:main.c        ****     
 880              		.loc 1 663 0
 881 0010 1A68     		ldr	r2, [r3]
 882 0012 054B     		ldr	r3, .L57+8
 883 0014 1A60     		str	r2, [r3]
 667:main.c        **** }    
 884              		.loc 1 667 0
 885 0016 0022     		movs	r2, #0
 886 0018 044B     		ldr	r3, .L57+12
 887 001a 1A60     		str	r2, [r3]
 668:main.c        **** 
 888              		.loc 1 668 0
 889              		@ sp needed
 890 001c 10BD     		pop	{r4, pc}
 891              	.L58:
 892 001e C046     		.align	2
 893              	.L57:
 894 0020 00000000 		.word	Position
 895 0024 00000000 		.word	LastPosition
 896 0028 00000000 		.word	PID_EffectiveSetpoint
 897 002c 00000000 		.word	iterm
 898              		.cfi_endproc
 899              	.LFE38:
 900              		.size	PID_Initialize, .-PID_Initialize
 901              		.section	.text.PID_SetMode,"ax",%progbits
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 40


 902              		.align	2
 903              		.global	PID_SetMode
 904              		.code	16
 905              		.thumb_func
 906              		.type	PID_SetMode, %function
 907              	PID_SetMode:
 908              	.LFB39:
 680:main.c        ****     
 909              		.loc 1 680 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL66:
 914 0000 10B5     		push	{r4, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 4, -8
 917              		.cfi_offset 14, -4
 682:main.c        ****     
 918              		.loc 1 682 0
 919 0002 441E     		subs	r4, r0, #1
 920 0004 6342     		rsbs	r3, r4, #0
 921 0006 5C41     		adcs	r4, r4, r3
 922 0008 E4B2     		uxtb	r4, r4
 923              	.LVL67:
 684:main.c        ****         /*we just went from manual to auto*/
 924              		.loc 1 684 0
 925 000a 0128     		cmp	r0, #1
 926 000c 05D1     		bne	.L60
 684:main.c        ****         /*we just went from manual to auto*/
 927              		.loc 1 684 0 is_stmt 0 discriminator 1
 928 000e 044B     		ldr	r3, .L61
 929 0010 1B7E     		ldrb	r3, [r3, #24]
 930 0012 002B     		cmp	r3, #0
 931 0014 01D1     		bne	.L60
 686:main.c        ****     }
 932              		.loc 1 686 0 is_stmt 1
 933 0016 FFF7FEFF 		bl	PID_Initialize
 934              	.LVL68:
 935              	.L60:
 689:main.c        **** } 
 936              		.loc 1 689 0
 937 001a 014B     		ldr	r3, .L61
 938 001c 1C76     		strb	r4, [r3, #24]
 690:main.c        **** 
 939              		.loc 1 690 0
 940              		@ sp needed
 941              	.LVL69:
 942 001e 10BD     		pop	{r4, pc}
 943              	.L62:
 944              		.align	2
 945              	.L61:
 946 0020 00000000 		.word	.LANCHOR1
 947              		.cfi_endproc
 948              	.LFE39:
 949              		.size	PID_SetMode, .-PID_SetMode
 950              		.section	.text.runRateGroup1_PID,"ax",%progbits
 951              		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 41


 952              		.global	runRateGroup1_PID
 953              		.code	16
 954              		.thumb_func
 955              		.type	runRateGroup1_PID, %function
 956              	runRateGroup1_PID:
 957              	.LFB40:
 702:main.c        ****    
 958              		.loc 1 702 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 10B5     		push	{r4, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 4, -8
 965              		.cfi_offset 14, -4
 712:main.c        ****         
 966              		.loc 1 712 0
 967 0002 484B     		ldr	r3, .L77
 968 0004 1B68     		ldr	r3, [r3]
 969 0006 0133     		adds	r3, r3, #1
 970 0008 0024     		movs	r4, #0
 971 000a 474A     		ldr	r2, .L77+4
 972 000c 1068     		ldr	r0, [r2]
 973 000e 5168     		ldr	r1, [r2, #4]
 974 0010 0029     		cmp	r1, #0
 975 0012 03D1     		bne	.L76
 976 0014 A142     		cmp	r1, r4
 977 0016 0AD1     		bne	.L64
 978 0018 9842     		cmp	r0, r3
 979 001a 08D9     		bls	.L64
 980              	.L76:
 716:main.c        ****         PID_Enabled = false;
 981              		.loc 1 716 0
 982 001c 0020     		movs	r0, #0
 983 001e FFF7FEFF 		bl	PWM_Set
 984              	.LVL70:
 717:main.c        ****         
 985              		.loc 1 717 0
 986 0022 0023     		movs	r3, #0
 987 0024 414A     		ldr	r2, .L77+8
 988 0026 1370     		strb	r3, [r2]
 721:main.c        **** 
 989              		.loc 1 721 0
 990 0028 414A     		ldr	r2, .L77+12
 991 002a 1370     		strb	r3, [r2]
 992 002c 79E0     		b	.L63
 993              	.L64:
 724:main.c        ****         
 994              		.loc 1 724 0
 995 002e 414B     		ldr	r3, .L77+16
 996 0030 1B78     		ldrb	r3, [r3]
 997 0032 022B     		cmp	r3, #2
 998 0034 75D1     		bne	.L63
 728:main.c        ****         INDEX_OUT_SetDriveMode(INDEX_OUT_DM_STRONG); 
 999              		.loc 1 728 0
 1000 0036 0620     		movs	r0, #6
 1001 0038 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 42


 1002              	.LVL71:
 729:main.c        **** 
 1003              		.loc 1 729 0
 1004 003c 0620     		movs	r0, #6
 1005 003e FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1006              	.LVL72:
 732:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1007              		.loc 1 732 0
 1008 0042 3D4B     		ldr	r3, .L77+20
 1009 0044 1B78     		ldrb	r3, [r3]
 1010 0046 002B     		cmp	r3, #0
 1011 0048 07D1     		bne	.L67
 732:main.c        ****             PID_SetMode(PID_AUTOMATIC);
 1012              		.loc 1 732 0 is_stmt 0 discriminator 1
 1013 004a 384A     		ldr	r2, .L77+8
 1014 004c 1278     		ldrb	r2, [r2]
 1015 004e 002A     		cmp	r2, #0
 1016 0050 03D0     		beq	.L67
 733:main.c        ****         } else if (!PID_Enabled && PID_Was_Enabled) {
 1017              		.loc 1 733 0 is_stmt 1
 1018 0052 0120     		movs	r0, #1
 1019 0054 FFF7FEFF 		bl	PID_SetMode
 1020              	.LVL73:
 1021 0058 08E0     		b	.L68
 1022              	.L67:
 734:main.c        ****             PID_SetMode(PID_MANUAL);                
 1023              		.loc 1 734 0
 1024 005a 344A     		ldr	r2, .L77+8
 1025 005c 1278     		ldrb	r2, [r2]
 1026 005e 002A     		cmp	r2, #0
 1027 0060 04D1     		bne	.L68
 734:main.c        ****             PID_SetMode(PID_MANUAL);                
 1028              		.loc 1 734 0 is_stmt 0 discriminator 1
 1029 0062 002B     		cmp	r3, #0
 1030 0064 02D0     		beq	.L68
 735:main.c        ****         } else {
 1031              		.loc 1 735 0 is_stmt 1
 1032 0066 0020     		movs	r0, #0
 1033 0068 FFF7FEFF 		bl	PID_SetMode
 1034              	.LVL74:
 1035              	.L68:
 741:main.c        ****         
 1036              		.loc 1 741 0
 1037 006c 2F4B     		ldr	r3, .L77+8
 1038 006e 1B78     		ldrb	r3, [r3]
 1039 0070 314A     		ldr	r2, .L77+20
 1040 0072 1370     		strb	r3, [r2]
 756:main.c        ****             
 1041              		.loc 1 756 0
 1042 0074 002B     		cmp	r3, #0
 1043 0076 51D0     		beq	.L69
 758:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;
 1044              		.loc 1 758 0
 1045 0078 304B     		ldr	r3, .L77+24
 1046 007a 1B78     		ldrb	r3, [r3]
 1047 007c 002B     		cmp	r3, #0
 1048 007e 04D1     		bne	.L70
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 43


 759:main.c        ****             } else if ( labs(PID_EffectiveSetpoint - PID_Setpoint) <= (2 * PID_EffSetDelta) ) {
 1049              		.loc 1 759 0
 1050 0080 2F4B     		ldr	r3, .L77+28
 1051 0082 1A68     		ldr	r2, [r3]
 1052 0084 2F4B     		ldr	r3, .L77+32
 1053 0086 1A60     		str	r2, [r3]
 1054 0088 16E0     		b	.L71
 1055              	.L70:
 760:main.c        ****                 PID_EffectiveSetpoint = PID_Setpoint;                                              
 1056              		.loc 1 760 0
 1057 008a 2E4A     		ldr	r2, .L77+32
 1058 008c 1168     		ldr	r1, [r2]
 1059 008e 2C4A     		ldr	r2, .L77+28
 1060 0090 1068     		ldr	r0, [r2]
 1061 0092 0A1A     		subs	r2, r1, r0
 1062 0094 D417     		asrs	r4, r2, #31
 1063 0096 1219     		adds	r2, r2, r4
 1064 0098 6240     		eors	r2, r4
 1065 009a 5C00     		lsls	r4, r3, #1
 1066 009c A242     		cmp	r2, r4
 1067 009e 02DC     		bgt	.L72
 761:main.c        ****             } else if (PID_Setpoint > PID_EffectiveSetpoint) {
 1068              		.loc 1 761 0
 1069 00a0 284B     		ldr	r3, .L77+32
 1070 00a2 1860     		str	r0, [r3]
 1071 00a4 08E0     		b	.L71
 1072              	.L72:
 762:main.c        ****                 PID_EffectiveSetpoint = (PID_EffectiveSetpoint + PID_EffSetDelta);
 1073              		.loc 1 762 0
 1074 00a6 8142     		cmp	r1, r0
 1075 00a8 03DA     		bge	.L73
 763:main.c        ****             } else {
 1076              		.loc 1 763 0
 1077 00aa CB18     		adds	r3, r1, r3
 1078 00ac 254A     		ldr	r2, .L77+32
 1079 00ae 1360     		str	r3, [r2]
 1080 00b0 02E0     		b	.L71
 1081              	.L73:
 765:main.c        ****             }
 1082              		.loc 1 765 0
 1083 00b2 CB1A     		subs	r3, r1, r3
 1084 00b4 234A     		ldr	r2, .L77+32
 1085 00b6 1360     		str	r3, [r2]
 1086              	.L71:
 769:main.c        ****             
 1087              		.loc 1 769 0
 1088 00b8 FFF7FEFF 		bl	GetPosition
 1089              	.LVL75:
 1090 00bc 224B     		ldr	r3, .L77+36
 1091 00be 1860     		str	r0, [r3]
 772:main.c        ****             
 1092              		.loc 1 772 0
 1093 00c0 1968     		ldr	r1, [r3]
 1094 00c2 204B     		ldr	r3, .L77+32
 1095 00c4 1868     		ldr	r0, [r3]
 1096 00c6 FFF7FEFF 		bl	PID_UpdateValues
 1097              	.LVL76:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 44


 1098 00ca 204B     		ldr	r3, .L77+40
 1099 00cc 1860     		str	r0, [r3]
 775:main.c        ****             
 1100              		.loc 1 775 0
 1101 00ce 1868     		ldr	r0, [r3]
 1102 00d0 FFF7FEFF 		bl	PWM_Set
 1103              	.LVL77:
 778:main.c        ****                 
 1104              		.loc 1 778 0
 1105 00d4 144B     		ldr	r3, .L77+4
 1106 00d6 1B7C     		ldrb	r3, [r3, #16]
 1107 00d8 002B     		cmp	r3, #0
 1108 00da 22D0     		beq	.L63
 780:main.c        ****                     
 1109              		.loc 1 780 0
 1110 00dc 1A4B     		ldr	r3, .L77+36
 1111 00de 1A68     		ldr	r2, [r3]
 1112 00e0 174B     		ldr	r3, .L77+28
 1113 00e2 1B68     		ldr	r3, [r3]
 1114 00e4 9A42     		cmp	r2, r3
 1115 00e6 15D1     		bne	.L74
 785:main.c        ****                         
 1116              		.loc 1 785 0
 1117 00e8 0F4B     		ldr	r3, .L77+4
 1118 00ea 5B8B     		ldrh	r3, [r3, #26]
 1119 00ec 1E2B     		cmp	r3, #30
 1120 00ee 07D1     		bne	.L75
 789:main.c        ****                         
 1121              		.loc 1 789 0
 1122 00f0 0D4B     		ldr	r3, .L77+4
 1123 00f2 DA69     		ldr	r2, [r3, #28]
 1124 00f4 196A     		ldr	r1, [r3, #32]
 1125 00f6 521A     		subs	r2, r2, r1
 1126 00f8 5A61     		str	r2, [r3, #20]
 792:main.c        ****                         
 1127              		.loc 1 792 0
 1128 00fa 0022     		movs	r2, #0
 1129 00fc 1A74     		strb	r2, [r3, #16]
 1130 00fe 10E0     		b	.L63
 1131              	.L75:
 798:main.c        **** 
 1132              		.loc 1 798 0
 1133 0100 0133     		adds	r3, r3, #1
 1134 0102 9BB2     		uxth	r3, r3
 1135 0104 084A     		ldr	r2, .L77+4
 1136 0106 5383     		strh	r3, [r2, #26]
 803:main.c        ****                             LastMoveEndTimeUsec = UptimeMicroseconds;
 1137              		.loc 1 803 0
 1138 0108 012B     		cmp	r3, #1
 1139 010a 0AD1     		bne	.L63
 804:main.c        ****                         }                    
 1140              		.loc 1 804 0
 1141 010c 906A     		ldr	r0, [r2, #40]
 1142 010e D16A     		ldr	r1, [r2, #44]
 1143 0110 D061     		str	r0, [r2, #28]
 1144 0112 06E0     		b	.L63
 1145              	.L74:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 45


 811:main.c        ****                 }
 1146              		.loc 1 811 0
 1147 0114 0022     		movs	r2, #0
 1148 0116 044B     		ldr	r3, .L77+4
 1149 0118 5A83     		strh	r2, [r3, #26]
 1150 011a 02E0     		b	.L63
 1151              	.L69:
 817:main.c        ****         }        
 1152              		.loc 1 817 0
 1153 011c 0022     		movs	r2, #0
 1154 011e 0B4B     		ldr	r3, .L77+40
 1155 0120 1A60     		str	r2, [r3]
 1156              	.L63:
 820:main.c        **** 
 1157              		.loc 1 820 0
 1158              		@ sp needed
 1159 0122 10BD     		pop	{r4, pc}
 1160              	.L78:
 1161              		.align	2
 1162              	.L77:
 1163 0124 00000000 		.word	LastMessageTimeSeconds
 1164 0128 00000000 		.word	.LANCHOR1
 1165 012c 00000000 		.word	PID_Enabled
 1166 0130 00000000 		.word	Jog
 1167 0134 00000000 		.word	ConfigState
 1168 0138 00000000 		.word	PID_Was_Enabled
 1169 013c 00000000 		.word	PID_EffSetDelta
 1170 0140 00000000 		.word	PID_Setpoint
 1171 0144 00000000 		.word	PID_EffectiveSetpoint
 1172 0148 00000000 		.word	Position
 1173 014c 00000000 		.word	Output
 1174              		.cfi_endproc
 1175              	.LFE40:
 1176              		.size	runRateGroup1_PID, .-runRateGroup1_PID
 1177              		.section	.text.BRMS_Interrupt,"ax",%progbits
 1178              		.align	2
 1179              		.global	BRMS_Interrupt
 1180              		.code	16
 1181              		.thumb_func
 1182              		.type	BRMS_Interrupt, %function
 1183              	BRMS_Interrupt:
 1184              	.LFB42:
1015:main.c        ****     
 1185              		.loc 1 1015 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189 0000 70B5     		push	{r4, r5, r6, lr}
 1190              		.cfi_def_cfa_offset 16
 1191              		.cfi_offset 4, -16
 1192              		.cfi_offset 5, -12
 1193              		.cfi_offset 6, -8
 1194              		.cfi_offset 14, -4
1026:main.c        **** 
 1195              		.loc 1 1026 0
 1196 0002 0220     		movs	r0, #2
 1197 0004 FFF7FEFF 		bl	Timer_BRMS_ClearInterrupt
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 46


 1198              	.LVL78:
1028:main.c        ****     
 1199              		.loc 1 1028 0
 1200 0008 0120     		movs	r0, #1
 1201 000a FFF7FEFF 		bl	PROBE_Write
 1202              	.LVL79:
1031:main.c        ****     UptimeMicrosecondsAccumulator += 200;
 1203              		.loc 1 1031 0
 1204 000e 2A4B     		ldr	r3, .L88
 1205 0010 9C6A     		ldr	r4, [r3, #40]
 1206 0012 DD6A     		ldr	r5, [r3, #44]
 1207 0014 C820     		movs	r0, #200
 1208 0016 0021     		movs	r1, #0
 1209 0018 2418     		adds	r4, r4, r0
 1210 001a 4D41     		adcs	r5, r5, r1
 1211 001c 9C62     		str	r4, [r3, #40]
 1212 001e DD62     		str	r5, [r3, #44]
1032:main.c        ****     
 1213              		.loc 1 1032 0
 1214 0020 1C6B     		ldr	r4, [r3, #48]
 1215 0022 5D6B     		ldr	r5, [r3, #52]
 1216 0024 0019     		adds	r0, r0, r4
 1217 0026 6941     		adcs	r1, r1, r5
 1218 0028 1863     		str	r0, [r3, #48]
 1219 002a 5963     		str	r1, [r3, #52]
1035:main.c        ****         UptimeMicrosecondsAccumulator = 0;
 1220              		.loc 1 1035 0
 1221 002c 196B     		ldr	r1, [r3, #48]
 1222 002e 5A6B     		ldr	r2, [r3, #52]
 1223 0030 002A     		cmp	r2, #0
 1224 0032 04D1     		bne	.L86
 1225 0034 16D1     		bne	.L80
 1226 0036 FA23     		movs	r3, #250
 1227 0038 9B00     		lsls	r3, r3, #2
 1228 003a 9942     		cmp	r1, r3
 1229 003c 12D9     		bls	.L80
 1230              	.L86:
1036:main.c        ****         UptimeMilliseconds += 1;
 1231              		.loc 1 1036 0
 1232 003e 1E4B     		ldr	r3, .L88
 1233 0040 0020     		movs	r0, #0
 1234 0042 0021     		movs	r1, #0
 1235 0044 1863     		str	r0, [r3, #48]
 1236 0046 5963     		str	r1, [r3, #52]
1037:main.c        ****         UptimeMillisecondsAccumulator += 1;
 1237              		.loc 1 1037 0
 1238 0048 9C6B     		ldr	r4, [r3, #56]
 1239 004a DD6B     		ldr	r5, [r3, #60]
 1240 004c 0120     		movs	r0, #1
 1241 004e 0021     		movs	r1, #0
 1242 0050 2418     		adds	r4, r4, r0
 1243 0052 4D41     		adcs	r5, r5, r1
 1244 0054 9C63     		str	r4, [r3, #56]
 1245 0056 DD63     		str	r5, [r3, #60]
1038:main.c        ****     }
 1246              		.loc 1 1038 0
 1247 0058 1C6C     		ldr	r4, [r3, #64]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 47


 1248 005a 5D6C     		ldr	r5, [r3, #68]
 1249 005c 0019     		adds	r0, r0, r4
 1250 005e 6941     		adcs	r1, r1, r5
 1251 0060 1864     		str	r0, [r3, #64]
 1252 0062 5964     		str	r1, [r3, #68]
 1253              	.L80:
1042:main.c        ****         UptimeMillisecondsAccumulator = 0;
 1254              		.loc 1 1042 0
 1255 0064 144B     		ldr	r3, .L88
 1256 0066 196C     		ldr	r1, [r3, #64]
 1257 0068 5A6C     		ldr	r2, [r3, #68]
 1258 006a 002A     		cmp	r2, #0
 1259 006c 04D1     		bne	.L87
 1260 006e 10D1     		bne	.L82
 1261 0070 FA23     		movs	r3, #250
 1262 0072 9B00     		lsls	r3, r3, #2
 1263 0074 9942     		cmp	r1, r3
 1264 0076 0CD9     		bls	.L82
 1265              	.L87:
1043:main.c        ****         UptimeSeconds += 1;
 1266              		.loc 1 1043 0
 1267 0078 0F4B     		ldr	r3, .L88
 1268 007a 0020     		movs	r0, #0
 1269 007c 0021     		movs	r1, #0
 1270 007e 1864     		str	r0, [r3, #64]
 1271 0080 5964     		str	r1, [r3, #68]
1044:main.c        ****     }
 1272              		.loc 1 1044 0
 1273 0082 1C68     		ldr	r4, [r3]
 1274 0084 5D68     		ldr	r5, [r3, #4]
 1275 0086 0120     		movs	r0, #1
 1276 0088 0021     		movs	r1, #0
 1277 008a 0019     		adds	r0, r0, r4
 1278 008c 6941     		adcs	r1, r1, r5
 1279 008e 1860     		str	r0, [r3]
 1280 0090 5960     		str	r1, [r3, #4]
 1281              	.L82:
1048:main.c        **** 
 1282              		.loc 1 1048 0
 1283 0092 094A     		ldr	r2, .L88
 1284 0094 936C     		ldr	r3, [r2, #72]
 1285 0096 0133     		adds	r3, r3, #1
 1286 0098 9364     		str	r3, [r2, #72]
1068:main.c        ****         
 1287              		.loc 1 1068 0
 1288 009a DA07     		lsls	r2, r3, #31
 1289 009c 02D5     		bpl	.L84
1073:main.c        ****         
 1290              		.loc 1 1073 0
 1291 009e FFF7FEFF 		bl	runRateGroup1_PID
 1292              	.LVL80:
 1293 00a2 05E0     		b	.L85
 1294              	.L84:
1075:main.c        ****         
 1295              		.loc 1 1075 0
 1296 00a4 9A07     		lsls	r2, r3, #30
 1297 00a6 03D4     		bmi	.L85
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 48


1080:main.c        ****         
 1298              		.loc 1 1080 0
 1299 00a8 5B07     		lsls	r3, r3, #29
 1300 00aa 01D5     		bpl	.L85
1083:main.c        ****         
 1301              		.loc 1 1083 0
 1302 00ac FFF7FEFF 		bl	runRateGroup3_SPI
 1303              	.LVL81:
 1304              	.L85:
1096:main.c        ****    
 1305              		.loc 1 1096 0
 1306 00b0 0020     		movs	r0, #0
 1307 00b2 FFF7FEFF 		bl	PROBE_Write
 1308              	.LVL82:
1098:main.c        **** 
 1309              		.loc 1 1098 0
 1310              		@ sp needed
 1311 00b6 70BD     		pop	{r4, r5, r6, pc}
 1312              	.L89:
 1313              		.align	2
 1314              	.L88:
 1315 00b8 00000000 		.word	.LANCHOR1
 1316              		.cfi_endproc
 1317              	.LFE42:
 1318              		.size	BRMS_Interrupt, .-BRMS_Interrupt
 1319              		.section	.text.main,"ax",%progbits
 1320              		.align	2
 1321              		.global	main
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	main, %function
 1325              	main:
 1326              	.LFB41:
 832:main.c        ****     
 1327              		.loc 1 832 0
 1328              		.cfi_startproc
 1329              		@ Volatile: function does not return.
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 1332 0000 70B5     		push	{r4, r5, r6, lr}
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 4, -16
 1335              		.cfi_offset 5, -12
 1336              		.cfi_offset 6, -8
 1337              		.cfi_offset 14, -4
 840:main.c        ****     INDEX_OUT_SetDriveMode(INDEX_OUT_DM_DIG_HIZ); 
 1338              		.loc 1 840 0
 1339 0002 0120     		movs	r0, #1
 1340 0004 FFF7FEFF 		bl	HOME_OUT_SetDriveMode
 1341              	.LVL83:
 841:main.c        **** 
 1342              		.loc 1 841 0
 1343 0008 0120     		movs	r0, #1
 1344 000a FFF7FEFF 		bl	INDEX_OUT_SetDriveMode
 1345              	.LVL84:
 849:main.c        ****     isr_brms_StartEx(BRMS_Interrupt);
 1346              		.loc 1 849 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 49


 1347 000e FFF7FEFF 		bl	Timer_BRMS_Start
 1348              	.LVL85:
 850:main.c        ****     isr_brms_SetPriority(HIGHER_PRIORITY);
 1349              		.loc 1 850 0
 1350 0012 3648     		ldr	r0, .L95
 1351 0014 FFF7FEFF 		bl	isr_brms_StartEx
 1352              	.LVL86:
 851:main.c        **** 
 1353              		.loc 1 851 0
 1354 0018 0220     		movs	r0, #2
 1355 001a FFF7FEFF 		bl	isr_brms_SetPriority
 1356              	.LVL87:
 854:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
 1357              		.loc 1 854 0
 1358 001e 3448     		ldr	r0, .L95+4
 1359 0020 FFF7FEFF 		bl	isr_home_StartEx
 1360              	.LVL88:
 855:main.c        **** 
 1361              		.loc 1 855 0
 1362 0024 0320     		movs	r0, #3
 1363 0026 FFF7FEFF 		bl	isr_home_SetPriority
 1364              	.LVL89:
 858:main.c        ****     isr_rst_encoder_SetPriority(DEFAULT_PRIORITY);
 1365              		.loc 1 858 0
 1366 002a 3248     		ldr	r0, .L95+8
 1367 002c FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1368              	.LVL90:
 859:main.c        ****     
 1369              		.loc 1 859 0
 1370 0030 0320     		movs	r0, #3
 1371 0032 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1372              	.LVL91:
 862:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);   
 1373              		.loc 1 862 0
 1374 0036 3048     		ldr	r0, .L95+12
 1375 0038 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1376              	.LVL92:
 863:main.c        **** 
 1377              		.loc 1 863 0
 1378 003c 0320     		movs	r0, #3
 1379 003e FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1380              	.LVL93:
 866:main.c        ****     
 1381              		.loc 1 866 0
 1382              		.syntax divided
 1383              	@ 866 "main.c" 1
 1384 0042 62B6     		CPSIE   i
 1385              	@ 0 "" 2
 895:main.c        ****     
 1386              		.loc 1 895 0
 1387              		.thumb
 1388              		.syntax unified
 1389 0044 FFF7FEFF 		bl	I2C_Start
 1390              	.LVL94:
 900:main.c        ****     SPI_1_Start();
 1391              		.loc 1 900 0
 1392 0048 6420     		movs	r0, #100
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 50


 1393 004a FFF7FEFF 		bl	CyDelay
 1394              	.LVL95:
 901:main.c        ****     
 1395              		.loc 1 901 0
 1396 004e FFF7FEFF 		bl	SPI_1_Start
 1397              	.LVL96:
 905:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1398              		.loc 1 905 0
 1399 0052 FFF7FEFF 		bl	PWM_1_Start
 1400              	.LVL97:
 906:main.c        ****     PWM_Set(PWM_NEUTRAL);   
 1401              		.loc 1 906 0
 1402 0056 C820     		movs	r0, #200
 1403 0058 C000     		lsls	r0, r0, #3
 1404 005a FFF7FEFF 		bl	PWM_1_WritePeriod
 1405              	.LVL98:
 907:main.c        ****     
 1406              		.loc 1 907 0
 1407 005e 0020     		movs	r0, #0
 1408 0060 FFF7FEFF 		bl	PWM_Set
 1409              	.LVL99:
 910:main.c        ****     
 1410              		.loc 1 910 0
 1411 0064 0024     		movs	r4, #0
 1412 0066 254B     		ldr	r3, .L95+16
 1413 0068 1C70     		strb	r4, [r3]
 913:main.c        ****    
 1414              		.loc 1 913 0
 1415 006a 254B     		ldr	r3, .L95+20
 1416 006c 1C70     		strb	r4, [r3]
 916:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1417              		.loc 1 916 0
 1418 006e FFF7FEFF 		bl	Counter_1_Start
 1419              	.LVL100:
 917:main.c        ****     LastPosition = ENCODER_MAX;
 1420              		.loc 1 917 0
 1421 0072 244D     		ldr	r5, .L95+24
 1422 0074 2800     		movs	r0, r5
 1423 0076 FFF7FEFF 		bl	Counter_1_WriteCounter
 1424              	.LVL101:
 918:main.c        ****     
 1425              		.loc 1 918 0
 1426 007a 234B     		ldr	r3, .L95+28
 1427 007c 1D60     		str	r5, [r3]
 921:main.c        ****     Index_Counter_1_WriteCounter(0);
 1428              		.loc 1 921 0
 1429 007e FFF7FEFF 		bl	Index_Counter_1_Start
 1430              	.LVL102:
 922:main.c        ****      
 1431              		.loc 1 922 0
 1432 0082 0020     		movs	r0, #0
 1433 0084 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1434              	.LVL103:
 925:main.c        ****     ConfigSequence = 0;
 1435              		.loc 1 925 0
 1436 0088 0122     		movs	r2, #1
 1437 008a 204B     		ldr	r3, .L95+32
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 51


 1438 008c 1A70     		strb	r2, [r3]
 926:main.c        ****     ChecksumErrors = 0;
 1439              		.loc 1 926 0
 1440 008e 204B     		ldr	r3, .L95+36
 1441 0090 1C70     		strb	r4, [r3]
 927:main.c        ****     
 1442              		.loc 1 927 0
 1443 0092 204B     		ldr	r3, .L95+40
 1444 0094 1C80     		strh	r4, [r3]
 931:main.c        ****     PID_SetMode(PID_MANUAL);
 1445              		.loc 1 931 0
 1446 0096 FFF7FEFF 		bl	PID_Initialize
 1447              	.LVL104:
 932:main.c        ****     
 1448              		.loc 1 932 0
 1449 009a 0020     		movs	r0, #0
 1450 009c FFF7FEFF 		bl	PID_SetMode
 1451              	.LVL105:
 935:main.c        ****     limitIterm = 800;
 1452              		.loc 1 935 0
 1453 00a0 C823     		movs	r3, #200
 1454 00a2 9B00     		lsls	r3, r3, #2
 1455 00a4 1C4A     		ldr	r2, .L95+44
 1456 00a6 1380     		strh	r3, [r2]
 936:main.c        ****     
 1457              		.loc 1 936 0
 1458 00a8 1C4A     		ldr	r2, .L95+48
 1459 00aa 1380     		strh	r3, [r2]
 939:main.c        ****     PID_EffectiveSetpoint = 0;
 1460              		.loc 1 939 0
 1461 00ac 1C4B     		ldr	r3, .L95+52
 1462 00ae 1C60     		str	r4, [r3]
 940:main.c        ****     PID_EffSetDelta       = 250; //PID_EFFECTIVE_SETPOINT_DELTA_DEFAULT;
 1463              		.loc 1 940 0
 1464 00b0 1C4B     		ldr	r3, .L95+56
 1465 00b2 1C60     		str	r4, [r3]
 941:main.c        ****     PID_Was_Enabled       = false;
 1466              		.loc 1 941 0
 1467 00b4 FA22     		movs	r2, #250
 1468 00b6 1C4B     		ldr	r3, .L95+60
 1469 00b8 1A70     		strb	r2, [r3]
 942:main.c        ****     PID_Enabled           = false;
 1470              		.loc 1 942 0
 1471 00ba 1C4B     		ldr	r3, .L95+64
 1472 00bc 0022     		movs	r2, #0
 1473 00be 1A70     		strb	r2, [r3]
 943:main.c        ****     //PID_SetDrive(0); // Drive set to 0%
 1474              		.loc 1 943 0
 1475 00c0 1B4B     		ldr	r3, .L95+68
 1476 00c2 1A70     		strb	r2, [r3]
 945:main.c        ****   
 1477              		.loc 1 945 0
 1478 00c4 0020     		movs	r0, #0
 1479 00c6 FFF7FEFF 		bl	PWM_Set
 1480              	.LVL106:
 1481              	.L94:
 978:main.c        ****             LED_Write(1);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 52


 1482              		.loc 1 978 0
 1483 00ca 1A4B     		ldr	r3, .L95+72
 1484 00cc 1A68     		ldr	r2, [r3]
 1485 00ce 5B68     		ldr	r3, [r3, #4]
 1486 00d0 0123     		movs	r3, #1
 1487 00d2 1342     		tst	r3, r2
 1488 00d4 03D0     		beq	.L91
 979:main.c        ****         } else {
 1489              		.loc 1 979 0
 1490 00d6 0120     		movs	r0, #1
 1491 00d8 FFF7FEFF 		bl	LED_Write
 1492              	.LVL107:
 1493 00dc 02E0     		b	.L93
 1494              	.L91:
 981:main.c        ****         } 
 1495              		.loc 1 981 0
 1496 00de 0020     		movs	r0, #0
 1497 00e0 FFF7FEFF 		bl	LED_Write
 1498              	.LVL108:
 1499              	.L93:
 985:main.c        ****         
 1500              		.loc 1 985 0
 1501 00e4 0A20     		movs	r0, #10
 1502 00e6 FFF7FEFF 		bl	CyDelay
 1503              	.LVL109:
 996:main.c        ****       
 1504              		.loc 1 996 0
 1505 00ea EEE7     		b	.L94
 1506              	.L96:
 1507              		.align	2
 1508              	.L95:
 1509 00ec 00000000 		.word	BRMS_Interrupt
 1510 00f0 00000000 		.word	HomeIsrHandler
 1511 00f4 00000000 		.word	RSTIsrHandler
 1512 00f8 00000000 		.word	SPI_SS_IsrHandler
 1513 00fc 00000000 		.word	Jog
 1514 0100 00000000 		.word	.LANCHOR0
 1515 0104 FFFFFF00 		.word	16777215
 1516 0108 00000000 		.word	LastPosition
 1517 010c 00000000 		.word	ConfigState
 1518 0110 00000000 		.word	ConfigSequence
 1519 0114 00000000 		.word	ChecksumErrors
 1520 0118 00000000 		.word	limitOutput
 1521 011c 00000000 		.word	limitIterm
 1522 0120 00000000 		.word	PID_Setpoint
 1523 0124 00000000 		.word	PID_EffectiveSetpoint
 1524 0128 00000000 		.word	PID_EffSetDelta
 1525 012c 00000000 		.word	PID_Was_Enabled
 1526 0130 00000000 		.word	PID_Enabled
 1527 0134 00000000 		.word	.LANCHOR1
 1528              		.cfi_endproc
 1529              	.LFE41:
 1530              		.size	main, .-main
 1531              		.comm	txMessageState,1,1
 1532              		.comm	txMessage,27,4
 1533              		.comm	rxMessage,27,4
 1534              		.comm	LastMessageTimeSeconds,4,4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 53


 1535              		.comm	CurrentI2Cinbuf,20,4
 1536              		.comm	MotorCurrent,2,2
 1537              		.comm	ChecksumErrors,2,2
 1538              		.comm	ConfigSequence,1,1
 1539              		.comm	FaultState,1,1
 1540              		.comm	ConfigState,1,1
 1541              		.global	UptimeSeconds
 1542              		.global	UptimeMillisecondsAccumulator
 1543              		.global	UptimeMilliseconds
 1544              		.global	UptimeMicrosecondsAccumulator
 1545              		.global	UptimeMicroseconds
 1546              		.global	NewCommandedMove
 1547              		.global	LastMoveTimeUsec
 1548              		.global	LastMoveStableCount
 1549              		.global	LastMoveEndTimeUsec
 1550              		.global	LastMoveStartTimeUsec
 1551              		.global	homingDone
 1552              		.comm	limitIterm,2,2
 1553              		.comm	limitOutput,2,2
 1554              		.comm	Output,4,4
 1555              		.comm	LastPosition,4,4
 1556              		.comm	Position,4,4
 1557              		.comm	lastTime,4,4
 1558              		.comm	PID_EffSetDelta,1,1
 1559              		.comm	PID_EffectiveSetpoint,4,4
 1560              		.comm	PID_Setpoint,4,4
 1561              		.comm	PID_Was_Enabled,1,1
 1562              		.comm	PID_Enabled,1,1
 1563              		.comm	LastJog,1,1
 1564              		.comm	Jog,1,1
 1565              		.global	inAuto
 1566              		.data
 1567              		.set	.LANCHOR0,. + 0
 1568              		.type	homingDone, %object
 1569              		.size	homingDone, 1
 1570              	homingDone:
 1571 0000 01       		.byte	1
 1572              		.bss
 1573              		.align	3
 1574              		.set	.LANCHOR1,. + 0
 1575              		.type	UptimeSeconds, %object
 1576              		.size	UptimeSeconds, 8
 1577              	UptimeSeconds:
 1578 0000 00000000 		.space	8
 1578      00000000 
 1579              		.type	RawPosition.7276, %object
 1580              		.size	RawPosition.7276, 4
 1581              	RawPosition.7276:
 1582 0008 00000000 		.space	4
 1583              		.type	result.7277, %object
 1584              		.size	result.7277, 4
 1585              	result.7277:
 1586 000c 00000000 		.space	4
 1587              		.type	NewCommandedMove, %object
 1588              		.size	NewCommandedMove, 1
 1589              	NewCommandedMove:
 1590 0010 00       		.space	1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 54


 1591 0011 000000   		.space	3
 1592              		.type	LastMoveTimeUsec, %object
 1593              		.size	LastMoveTimeUsec, 4
 1594              	LastMoveTimeUsec:
 1595 0014 00000000 		.space	4
 1596              		.type	inAuto, %object
 1597              		.size	inAuto, 1
 1598              	inAuto:
 1599 0018 00       		.space	1
 1600 0019 00       		.space	1
 1601              		.type	LastMoveStableCount, %object
 1602              		.size	LastMoveStableCount, 2
 1603              	LastMoveStableCount:
 1604 001a 0000     		.space	2
 1605              		.type	LastMoveEndTimeUsec, %object
 1606              		.size	LastMoveEndTimeUsec, 4
 1607              	LastMoveEndTimeUsec:
 1608 001c 00000000 		.space	4
 1609              		.type	LastMoveStartTimeUsec, %object
 1610              		.size	LastMoveStartTimeUsec, 4
 1611              	LastMoveStartTimeUsec:
 1612 0020 00000000 		.space	4
 1613 0024 00000000 		.space	4
 1614              		.type	UptimeMicroseconds, %object
 1615              		.size	UptimeMicroseconds, 8
 1616              	UptimeMicroseconds:
 1617 0028 00000000 		.space	8
 1617      00000000 
 1618              		.type	UptimeMicrosecondsAccumulator, %object
 1619              		.size	UptimeMicrosecondsAccumulator, 8
 1620              	UptimeMicrosecondsAccumulator:
 1621 0030 00000000 		.space	8
 1621      00000000 
 1622              		.type	UptimeMilliseconds, %object
 1623              		.size	UptimeMilliseconds, 8
 1624              	UptimeMilliseconds:
 1625 0038 00000000 		.space	8
 1625      00000000 
 1626              		.type	UptimeMillisecondsAccumulator, %object
 1627              		.size	UptimeMillisecondsAccumulator, 8
 1628              	UptimeMillisecondsAccumulator:
 1629 0040 00000000 		.space	8
 1629      00000000 
 1630              		.type	brmsTask.7295, %object
 1631              		.size	brmsTask.7295, 4
 1632              	brmsTask.7295:
 1633 0048 00000000 		.space	4
 1634              		.text
 1635              	.Letext0:
 1636              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1637              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1638              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1639              		.file 5 "pid.h"
 1640              		.file 6 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 1641              		.file 7 "Generated_Source\\PSoC4/Reset_Encoder.h"
 1642              		.file 8 "Generated_Source\\PSoC4/Counter_1.h"
 1643              		.file 9 "Generated_Source\\PSoC4/Index_Counter_1.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 55


 1644              		.file 10 "Generated_Source\\PSoC4/isr_home.h"
 1645              		.file 11 "Generated_Source\\PSoC4/HOME_IN.h"
 1646              		.file 12 "Generated_Source\\PSoC4/spi_ss.h"
 1647              		.file 13 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 1648              		.file 14 "INA219.h"
 1649              		.file 15 "Generated_Source\\PSoC4/PWM_1.h"
 1650              		.file 16 "Generated_Source\\PSoC4/HOME_OUT.h"
 1651              		.file 17 "Generated_Source\\PSoC4/INDEX_OUT.h"
 1652              		.file 18 "Generated_Source\\PSoC4/Timer_BRMS.h"
 1653              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 1654              		.file 20 "Generated_Source\\PSoC4/isr_brms.h"
 1655              		.file 21 "Generated_Source\\PSoC4/isr_spi_ss.h"
 1656              		.file 22 "Generated_Source\\PSoC4/I2C.h"
 1657              		.file 23 "Generated_Source\\PSoC4/CyLib.h"
 1658              		.file 24 "Generated_Source\\PSoC4/SPI_1.h"
 1659              		.file 25 "Generated_Source\\PSoC4/LED.h"
 1660              		.section	.debug_info,"",%progbits
 1661              	.Ldebug_info0:
 1662 0000 A70F0000 		.4byte	0xfa7
 1663 0004 0400     		.2byte	0x4
 1664 0006 00000000 		.4byte	.Ldebug_abbrev0
 1665 000a 04       		.byte	0x4
 1666 000b 01       		.uleb128 0x1
 1667 000c 62020000 		.4byte	.LASF181
 1668 0010 0C       		.byte	0xc
 1669 0011 12000000 		.4byte	.LASF182
 1670 0015 89050000 		.4byte	.LASF183
 1671 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1672 001d 00000000 		.4byte	0
 1673 0021 00000000 		.4byte	.Ldebug_line0
 1674 0025 02       		.uleb128 0x2
 1675 0026 56060000 		.4byte	.LASF0
 1676 002a 02       		.byte	0x2
 1677 002b 1B       		.byte	0x1b
 1678 002c 30000000 		.4byte	0x30
 1679 0030 03       		.uleb128 0x3
 1680 0031 01       		.byte	0x1
 1681 0032 06       		.byte	0x6
 1682 0033 81090000 		.4byte	.LASF2
 1683 0037 02       		.uleb128 0x2
 1684 0038 2D080000 		.4byte	.LASF1
 1685 003c 02       		.byte	0x2
 1686 003d 1D       		.byte	0x1d
 1687 003e 42000000 		.4byte	0x42
 1688 0042 03       		.uleb128 0x3
 1689 0043 01       		.byte	0x1
 1690 0044 08       		.byte	0x8
 1691 0045 BE080000 		.4byte	.LASF3
 1692 0049 02       		.uleb128 0x2
 1693 004a 2E050000 		.4byte	.LASF4
 1694 004e 02       		.byte	0x2
 1695 004f 29       		.byte	0x29
 1696 0050 54000000 		.4byte	0x54
 1697 0054 03       		.uleb128 0x3
 1698 0055 02       		.byte	0x2
 1699 0056 05       		.byte	0x5
 1700 0057 EF060000 		.4byte	.LASF5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 56


 1701 005b 02       		.uleb128 0x2
 1702 005c 26020000 		.4byte	.LASF6
 1703 0060 02       		.byte	0x2
 1704 0061 2B       		.byte	0x2b
 1705 0062 66000000 		.4byte	0x66
 1706 0066 03       		.uleb128 0x3
 1707 0067 02       		.byte	0x2
 1708 0068 07       		.byte	0x7
 1709 0069 8D090000 		.4byte	.LASF7
 1710 006d 02       		.uleb128 0x2
 1711 006e CE000000 		.4byte	.LASF8
 1712 0072 02       		.byte	0x2
 1713 0073 3F       		.byte	0x3f
 1714 0074 78000000 		.4byte	0x78
 1715 0078 03       		.uleb128 0x3
 1716 0079 04       		.byte	0x4
 1717 007a 05       		.byte	0x5
 1718 007b 39070000 		.4byte	.LASF9
 1719 007f 02       		.uleb128 0x2
 1720 0080 CC080000 		.4byte	.LASF10
 1721 0084 02       		.byte	0x2
 1722 0085 41       		.byte	0x41
 1723 0086 8A000000 		.4byte	0x8a
 1724 008a 03       		.uleb128 0x3
 1725 008b 04       		.byte	0x4
 1726 008c 07       		.byte	0x7
 1727 008d 5E080000 		.4byte	.LASF11
 1728 0091 03       		.uleb128 0x3
 1729 0092 08       		.byte	0x8
 1730 0093 05       		.byte	0x5
 1731 0094 E3040000 		.4byte	.LASF12
 1732 0098 02       		.uleb128 0x2
 1733 0099 43030000 		.4byte	.LASF13
 1734 009d 02       		.byte	0x2
 1735 009e 5B       		.byte	0x5b
 1736 009f A3000000 		.4byte	0xa3
 1737 00a3 03       		.uleb128 0x3
 1738 00a4 08       		.byte	0x8
 1739 00a5 07       		.byte	0x7
 1740 00a6 E9010000 		.4byte	.LASF14
 1741 00aa 04       		.uleb128 0x4
 1742 00ab 04       		.byte	0x4
 1743 00ac 05       		.byte	0x5
 1744 00ad 696E7400 		.ascii	"int\000"
 1745 00b1 03       		.uleb128 0x3
 1746 00b2 04       		.byte	0x4
 1747 00b3 07       		.byte	0x7
 1748 00b4 87000000 		.4byte	.LASF15
 1749 00b8 02       		.uleb128 0x2
 1750 00b9 77010000 		.4byte	.LASF16
 1751 00bd 03       		.byte	0x3
 1752 00be 14       		.byte	0x14
 1753 00bf 25000000 		.4byte	0x25
 1754 00c3 02       		.uleb128 0x2
 1755 00c4 50040000 		.4byte	.LASF17
 1756 00c8 03       		.byte	0x3
 1757 00c9 18       		.byte	0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 57


 1758 00ca 37000000 		.4byte	0x37
 1759 00ce 02       		.uleb128 0x2
 1760 00cf DA010000 		.4byte	.LASF18
 1761 00d3 03       		.byte	0x3
 1762 00d4 20       		.byte	0x20
 1763 00d5 49000000 		.4byte	0x49
 1764 00d9 02       		.uleb128 0x2
 1765 00da AF060000 		.4byte	.LASF19
 1766 00de 03       		.byte	0x3
 1767 00df 24       		.byte	0x24
 1768 00e0 5B000000 		.4byte	0x5b
 1769 00e4 02       		.uleb128 0x2
 1770 00e5 70080000 		.4byte	.LASF20
 1771 00e9 03       		.byte	0x3
 1772 00ea 2C       		.byte	0x2c
 1773 00eb 6D000000 		.4byte	0x6d
 1774 00ef 02       		.uleb128 0x2
 1775 00f0 6E010000 		.4byte	.LASF21
 1776 00f4 03       		.byte	0x3
 1777 00f5 30       		.byte	0x30
 1778 00f6 7F000000 		.4byte	0x7f
 1779 00fa 02       		.uleb128 0x2
 1780 00fb CC070000 		.4byte	.LASF22
 1781 00ff 03       		.byte	0x3
 1782 0100 3C       		.byte	0x3c
 1783 0101 98000000 		.4byte	0x98
 1784 0105 05       		.uleb128 0x5
 1785 0106 CB050000 		.4byte	.LASF23
 1786 010a 04       		.byte	0x4
 1787 010b FE01     		.2byte	0x1fe
 1788 010d 8A000000 		.4byte	0x8a
 1789 0111 03       		.uleb128 0x3
 1790 0112 04       		.byte	0x4
 1791 0113 04       		.byte	0x4
 1792 0114 B1010000 		.4byte	.LASF24
 1793 0118 03       		.uleb128 0x3
 1794 0119 08       		.byte	0x8
 1795 011a 04       		.byte	0x4
 1796 011b BA090000 		.4byte	.LASF25
 1797 011f 03       		.uleb128 0x3
 1798 0120 01       		.byte	0x1
 1799 0121 08       		.byte	0x8
 1800 0122 DB030000 		.4byte	.LASF26
 1801 0126 05       		.uleb128 0x5
 1802 0127 B8060000 		.4byte	.LASF27
 1803 012b 04       		.byte	0x4
 1804 012c A802     		.2byte	0x2a8
 1805 012e 32010000 		.4byte	0x132
 1806 0132 06       		.uleb128 0x6
 1807 0133 05010000 		.4byte	0x105
 1808 0137 03       		.uleb128 0x3
 1809 0138 08       		.byte	0x8
 1810 0139 04       		.byte	0x4
 1811 013a 95060000 		.4byte	.LASF28
 1812 013e 03       		.uleb128 0x3
 1813 013f 04       		.byte	0x4
 1814 0140 07       		.byte	0x7
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 58


 1815 0141 55080000 		.4byte	.LASF29
 1816 0145 06       		.uleb128 0x6
 1817 0146 EF000000 		.4byte	0xef
 1818 014a 07       		.uleb128 0x7
 1819 014b 01       		.byte	0x1
 1820 014c 42000000 		.4byte	0x42
 1821 0150 01       		.byte	0x1
 1822 0151 9C       		.byte	0x9c
 1823 0152 6F010000 		.4byte	0x16f
 1824 0156 08       		.uleb128 0x8
 1825 0157 BE060000 		.4byte	.LASF30
 1826 015b 00       		.byte	0
 1827 015c 08       		.uleb128 0x8
 1828 015d 74000000 		.4byte	.LASF31
 1829 0161 01       		.byte	0x1
 1830 0162 08       		.uleb128 0x8
 1831 0163 4B010000 		.4byte	.LASF32
 1832 0167 02       		.byte	0x2
 1833 0168 08       		.uleb128 0x8
 1834 0169 42070000 		.4byte	.LASF33
 1835 016d 03       		.byte	0x3
 1836 016e 00       		.byte	0
 1837 016f 02       		.uleb128 0x2
 1838 0170 5F060000 		.4byte	.LASF34
 1839 0174 01       		.byte	0x1
 1840 0175 A1       		.byte	0xa1
 1841 0176 4A010000 		.4byte	0x14a
 1842 017a 07       		.uleb128 0x7
 1843 017b 01       		.byte	0x1
 1844 017c 42000000 		.4byte	0x42
 1845 0180 01       		.byte	0x1
 1846 0181 A6       		.byte	0xa6
 1847 0182 BD010000 		.4byte	0x1bd
 1848 0186 08       		.uleb128 0x8
 1849 0187 97040000 		.4byte	.LASF35
 1850 018b 00       		.byte	0
 1851 018c 08       		.uleb128 0x8
 1852 018d 2D030000 		.4byte	.LASF36
 1853 0191 01       		.byte	0x1
 1854 0192 08       		.uleb128 0x8
 1855 0193 6A000000 		.4byte	.LASF37
 1856 0197 02       		.byte	0x2
 1857 0198 08       		.uleb128 0x8
 1858 0199 5F040000 		.4byte	.LASF38
 1859 019d 04       		.byte	0x4
 1860 019e 08       		.uleb128 0x8
 1861 019f E1060000 		.4byte	.LASF39
 1862 01a3 08       		.byte	0x8
 1863 01a4 08       		.uleb128 0x8
 1864 01a5 0B050000 		.4byte	.LASF40
 1865 01a9 10       		.byte	0x10
 1866 01aa 08       		.uleb128 0x8
 1867 01ab F7080000 		.4byte	.LASF41
 1868 01af 20       		.byte	0x20
 1869 01b0 08       		.uleb128 0x8
 1870 01b1 FC080000 		.4byte	.LASF42
 1871 01b5 40       		.byte	0x40
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 59


 1872 01b6 08       		.uleb128 0x8
 1873 01b7 01090000 		.4byte	.LASF43
 1874 01bb 80       		.byte	0x80
 1875 01bc 00       		.byte	0
 1876 01bd 02       		.uleb128 0x2
 1877 01be 490A0000 		.4byte	.LASF44
 1878 01c2 01       		.byte	0x1
 1879 01c3 B0       		.byte	0xb0
 1880 01c4 7A010000 		.4byte	0x17a
 1881 01c8 07       		.uleb128 0x7
 1882 01c9 01       		.byte	0x1
 1883 01ca 42000000 		.4byte	0x42
 1884 01ce 01       		.byte	0x1
 1885 01cf CC       		.byte	0xcc
 1886 01d0 F3010000 		.4byte	0x1f3
 1887 01d4 08       		.uleb128 0x8
 1888 01d5 D7080000 		.4byte	.LASF45
 1889 01d9 00       		.byte	0
 1890 01da 08       		.uleb128 0x8
 1891 01db F5090000 		.4byte	.LASF46
 1892 01df 01       		.byte	0x1
 1893 01e0 08       		.uleb128 0x8
 1894 01e1 37080000 		.4byte	.LASF47
 1895 01e5 02       		.byte	0x2
 1896 01e6 08       		.uleb128 0x8
 1897 01e7 E3080000 		.4byte	.LASF48
 1898 01eb 03       		.byte	0x3
 1899 01ec 08       		.uleb128 0x8
 1900 01ed 40080000 		.4byte	.LASF49
 1901 01f1 04       		.byte	0x4
 1902 01f2 00       		.byte	0
 1903 01f3 02       		.uleb128 0x2
 1904 01f4 7E010000 		.4byte	.LASF50
 1905 01f8 01       		.byte	0x1
 1906 01f9 D2       		.byte	0xd2
 1907 01fa C8010000 		.4byte	0x1c8
 1908 01fe 09       		.uleb128 0x9
 1909 01ff 03       		.byte	0x3
 1910 0200 01       		.byte	0x1
 1911 0201 D7       		.byte	0xd7
 1912 0202 2B020000 		.4byte	0x22b
 1913 0206 0A       		.uleb128 0xa
 1914 0207 CA010000 		.4byte	.LASF51
 1915 020b 01       		.byte	0x1
 1916 020c D8       		.byte	0xd8
 1917 020d C3000000 		.4byte	0xc3
 1918 0211 00       		.byte	0
 1919 0212 0A       		.uleb128 0xa
 1920 0213 84050000 		.4byte	.LASF52
 1921 0217 01       		.byte	0x1
 1922 0218 D9       		.byte	0xd9
 1923 0219 C3000000 		.4byte	0xc3
 1924 021d 01       		.byte	0x1
 1925 021e 0A       		.uleb128 0xa
 1926 021f 3E040000 		.4byte	.LASF53
 1927 0223 01       		.byte	0x1
 1928 0224 DA       		.byte	0xda
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 60


 1929 0225 C3000000 		.4byte	0xc3
 1930 0229 02       		.byte	0x2
 1931 022a 00       		.byte	0
 1932 022b 02       		.uleb128 0x2
 1933 022c BE030000 		.4byte	.LASF54
 1934 0230 01       		.byte	0x1
 1935 0231 DB       		.byte	0xdb
 1936 0232 FE010000 		.4byte	0x1fe
 1937 0236 09       		.uleb128 0x9
 1938 0237 16       		.byte	0x16
 1939 0238 01       		.byte	0x1
 1940 0239 DE       		.byte	0xde
 1941 023a B7020000 		.4byte	0x2b7
 1942 023e 0A       		.uleb128 0xa
 1943 023f CA010000 		.4byte	.LASF51
 1944 0243 01       		.byte	0x1
 1945 0244 DF       		.byte	0xdf
 1946 0245 C3000000 		.4byte	0xc3
 1947 0249 00       		.byte	0
 1948 024a 0A       		.uleb128 0xa
 1949 024b 84050000 		.4byte	.LASF52
 1950 024f 01       		.byte	0x1
 1951 0250 E0       		.byte	0xe0
 1952 0251 C3000000 		.4byte	0xc3
 1953 0255 01       		.byte	0x1
 1954 0256 0A       		.uleb128 0xa
 1955 0257 3E040000 		.4byte	.LASF53
 1956 025b 01       		.byte	0x1
 1957 025c E1       		.byte	0xe1
 1958 025d C3000000 		.4byte	0xc3
 1959 0261 02       		.byte	0x2
 1960 0262 0A       		.uleb128 0xa
 1961 0263 CA060000 		.4byte	.LASF55
 1962 0267 01       		.byte	0x1
 1963 0268 E2       		.byte	0xe2
 1964 0269 C3000000 		.4byte	0xc3
 1965 026d 03       		.byte	0x3
 1966 026e 0A       		.uleb128 0xa
 1967 026f A7080000 		.4byte	.LASF56
 1968 0273 01       		.byte	0x1
 1969 0274 E4       		.byte	0xe4
 1970 0275 EF000000 		.4byte	0xef
 1971 0279 04       		.byte	0x4
 1972 027a 0A       		.uleb128 0xa
 1973 027b 9C080000 		.4byte	.LASF57
 1974 027f 01       		.byte	0x1
 1975 0280 E5       		.byte	0xe5
 1976 0281 EF000000 		.4byte	0xef
 1977 0285 08       		.byte	0x8
 1978 0286 0A       		.uleb128 0xa
 1979 0287 8B080000 		.4byte	.LASF58
 1980 028b 01       		.byte	0x1
 1981 028c E6       		.byte	0xe6
 1982 028d EF000000 		.4byte	0xef
 1983 0291 0C       		.byte	0xc
 1984 0292 0A       		.uleb128 0xa
 1985 0293 56020000 		.4byte	.LASF59
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 61


 1986 0297 01       		.byte	0x1
 1987 0298 E8       		.byte	0xe8
 1988 0299 D9000000 		.4byte	0xd9
 1989 029d 10       		.byte	0x10
 1990 029e 0A       		.uleb128 0xa
 1991 029f 45040000 		.4byte	.LASF60
 1992 02a3 01       		.byte	0x1
 1993 02a4 E9       		.byte	0xe9
 1994 02a5 D9000000 		.4byte	0xd9
 1995 02a9 12       		.byte	0x12
 1996 02aa 0A       		.uleb128 0xa
 1997 02ab 5E000000 		.4byte	.LASF61
 1998 02af 01       		.byte	0x1
 1999 02b0 EA       		.byte	0xea
 2000 02b1 D9000000 		.4byte	0xd9
 2001 02b5 14       		.byte	0x14
 2002 02b6 00       		.byte	0
 2003 02b7 02       		.uleb128 0x2
 2004 02b8 F9060000 		.4byte	.LASF62
 2005 02bc 01       		.byte	0x1
 2006 02bd EB       		.byte	0xeb
 2007 02be 36020000 		.4byte	0x236
 2008 02c2 09       		.uleb128 0x9
 2009 02c3 0A       		.byte	0xa
 2010 02c4 01       		.byte	0x1
 2011 02c5 EE       		.byte	0xee
 2012 02c6 1F030000 		.4byte	0x31f
 2013 02ca 0A       		.uleb128 0xa
 2014 02cb CA010000 		.4byte	.LASF51
 2015 02cf 01       		.byte	0x1
 2016 02d0 EF       		.byte	0xef
 2017 02d1 C3000000 		.4byte	0xc3
 2018 02d5 00       		.byte	0
 2019 02d6 0A       		.uleb128 0xa
 2020 02d7 84050000 		.4byte	.LASF52
 2021 02db 01       		.byte	0x1
 2022 02dc F0       		.byte	0xf0
 2023 02dd C3000000 		.4byte	0xc3
 2024 02e1 01       		.byte	0x1
 2025 02e2 0A       		.uleb128 0xa
 2026 02e3 3E040000 		.4byte	.LASF53
 2027 02e7 01       		.byte	0x1
 2028 02e8 F1       		.byte	0xf1
 2029 02e9 C3000000 		.4byte	0xc3
 2030 02ed 02       		.byte	0x2
 2031 02ee 0A       		.uleb128 0xa
 2032 02ef 31020000 		.4byte	.LASF63
 2033 02f3 01       		.byte	0x1
 2034 02f4 F2       		.byte	0xf2
 2035 02f5 C3000000 		.4byte	0xc3
 2036 02f9 03       		.byte	0x3
 2037 02fa 0A       		.uleb128 0xa
 2038 02fb D5070000 		.4byte	.LASF64
 2039 02ff 01       		.byte	0x1
 2040 0300 F3       		.byte	0xf3
 2041 0301 E4000000 		.4byte	0xe4
 2042 0305 04       		.byte	0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 62


 2043 0306 0B       		.uleb128 0xb
 2044 0307 6A6F6700 		.ascii	"jog\000"
 2045 030b 01       		.byte	0x1
 2046 030c F4       		.byte	0xf4
 2047 030d B8000000 		.4byte	0xb8
 2048 0311 08       		.byte	0x8
 2049 0312 0A       		.uleb128 0xa
 2050 0313 C2000000 		.4byte	.LASF65
 2051 0317 01       		.byte	0x1
 2052 0318 F5       		.byte	0xf5
 2053 0319 C3000000 		.4byte	0xc3
 2054 031d 09       		.byte	0x9
 2055 031e 00       		.byte	0
 2056 031f 02       		.uleb128 0x2
 2057 0320 92010000 		.4byte	.LASF66
 2058 0324 01       		.byte	0x1
 2059 0325 F6       		.byte	0xf6
 2060 0326 C2020000 		.4byte	0x2c2
 2061 032a 09       		.uleb128 0x9
 2062 032b 07       		.byte	0x7
 2063 032c 01       		.byte	0x1
 2064 032d F9       		.byte	0xf9
 2065 032e 63030000 		.4byte	0x363
 2066 0332 0A       		.uleb128 0xa
 2067 0333 CA010000 		.4byte	.LASF51
 2068 0337 01       		.byte	0x1
 2069 0338 FA       		.byte	0xfa
 2070 0339 C3000000 		.4byte	0xc3
 2071 033d 00       		.byte	0
 2072 033e 0A       		.uleb128 0xa
 2073 033f 84050000 		.4byte	.LASF52
 2074 0343 01       		.byte	0x1
 2075 0344 FB       		.byte	0xfb
 2076 0345 C3000000 		.4byte	0xc3
 2077 0349 01       		.byte	0x1
 2078 034a 0A       		.uleb128 0xa
 2079 034b 3E040000 		.4byte	.LASF53
 2080 034f 01       		.byte	0x1
 2081 0350 FC       		.byte	0xfc
 2082 0351 C3000000 		.4byte	0xc3
 2083 0355 02       		.byte	0x2
 2084 0356 0A       		.uleb128 0xa
 2085 0357 D5070000 		.4byte	.LASF64
 2086 035b 01       		.byte	0x1
 2087 035c FD       		.byte	0xfd
 2088 035d E4000000 		.4byte	0xe4
 2089 0361 03       		.byte	0x3
 2090 0362 00       		.byte	0
 2091 0363 02       		.uleb128 0x2
 2092 0364 51090000 		.4byte	.LASF67
 2093 0368 01       		.byte	0x1
 2094 0369 FE       		.byte	0xfe
 2095 036a 2A030000 		.4byte	0x32a
 2096 036e 0C       		.uleb128 0xc
 2097 036f 1B       		.byte	0x1b
 2098 0370 01       		.byte	0x1
 2099 0371 0201     		.2byte	0x102
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 63


 2100 0373 B4030000 		.4byte	0x3b4
 2101 0377 0D       		.uleb128 0xd
 2102 0378 62756600 		.ascii	"buf\000"
 2103 037c 01       		.byte	0x1
 2104 037d 0301     		.2byte	0x103
 2105 037f B4030000 		.4byte	0x3b4
 2106 0383 0E       		.uleb128 0xe
 2107 0384 48070000 		.4byte	.LASF68
 2108 0388 01       		.byte	0x1
 2109 0389 0401     		.2byte	0x104
 2110 038b 2B020000 		.4byte	0x22b
 2111 038f 0E       		.uleb128 0xe
 2112 0390 DA060000 		.4byte	.LASF69
 2113 0394 01       		.byte	0x1
 2114 0395 0501     		.2byte	0x105
 2115 0397 B7020000 		.4byte	0x2b7
 2116 039b 0E       		.uleb128 0xe
 2117 039c 58040000 		.4byte	.LASF70
 2118 03a0 01       		.byte	0x1
 2119 03a1 0601     		.2byte	0x106
 2120 03a3 1F030000 		.4byte	0x31f
 2121 03a7 0E       		.uleb128 0xe
 2122 03a8 D3010000 		.4byte	.LASF71
 2123 03ac 01       		.byte	0x1
 2124 03ad 0701     		.2byte	0x107
 2125 03af 63030000 		.4byte	0x363
 2126 03b3 00       		.byte	0
 2127 03b4 0F       		.uleb128 0xf
 2128 03b5 C3000000 		.4byte	0xc3
 2129 03b9 C4030000 		.4byte	0x3c4
 2130 03bd 10       		.uleb128 0x10
 2131 03be 3E010000 		.4byte	0x13e
 2132 03c2 1A       		.byte	0x1a
 2133 03c3 00       		.byte	0
 2134 03c4 11       		.uleb128 0x11
 2135 03c5 1B       		.byte	0x1b
 2136 03c6 01       		.byte	0x1
 2137 03c7 0B01     		.2byte	0x10b
 2138 03c9 91040000 		.4byte	0x491
 2139 03cd 12       		.uleb128 0x12
 2140 03ce CA010000 		.4byte	.LASF51
 2141 03d2 01       		.byte	0x1
 2142 03d3 0C01     		.2byte	0x10c
 2143 03d5 C3000000 		.4byte	0xc3
 2144 03d9 00       		.byte	0
 2145 03da 12       		.uleb128 0x12
 2146 03db A3030000 		.4byte	.LASF72
 2147 03df 01       		.byte	0x1
 2148 03e0 0D01     		.2byte	0x10d
 2149 03e2 C3000000 		.4byte	0xc3
 2150 03e6 01       		.byte	0x1
 2151 03e7 12       		.uleb128 0x12
 2152 03e8 AC030000 		.4byte	.LASF73
 2153 03ec 01       		.byte	0x1
 2154 03ed 0E01     		.2byte	0x10e
 2155 03ef C3000000 		.4byte	0xc3
 2156 03f3 02       		.byte	0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 64


 2157 03f4 12       		.uleb128 0x12
 2158 03f5 B5030000 		.4byte	.LASF74
 2159 03f9 01       		.byte	0x1
 2160 03fa 0F01     		.2byte	0x10f
 2161 03fc C3000000 		.4byte	0xc3
 2162 0400 03       		.byte	0x3
 2163 0401 12       		.uleb128 0x12
 2164 0402 84050000 		.4byte	.LASF52
 2165 0406 01       		.byte	0x1
 2166 0407 1001     		.2byte	0x110
 2167 0409 C3000000 		.4byte	0xc3
 2168 040d 04       		.byte	0x4
 2169 040e 12       		.uleb128 0x12
 2170 040f 3E040000 		.4byte	.LASF53
 2171 0413 01       		.byte	0x1
 2172 0414 1101     		.2byte	0x111
 2173 0416 C3000000 		.4byte	0xc3
 2174 041a 05       		.byte	0x5
 2175 041b 12       		.uleb128 0x12
 2176 041c 96080000 		.4byte	.LASF75
 2177 0420 01       		.byte	0x1
 2178 0421 1201     		.2byte	0x112
 2179 0423 C3000000 		.4byte	0xc3
 2180 0427 06       		.byte	0x6
 2181 0428 12       		.uleb128 0x12
 2182 0429 2C0A0000 		.4byte	.LASF76
 2183 042d 01       		.byte	0x1
 2184 042e 1301     		.2byte	0x113
 2185 0430 C3000000 		.4byte	0xc3
 2186 0434 07       		.byte	0x7
 2187 0435 12       		.uleb128 0x12
 2188 0436 CA060000 		.4byte	.LASF55
 2189 043a 01       		.byte	0x1
 2190 043b 1401     		.2byte	0x114
 2191 043d C3000000 		.4byte	0xc3
 2192 0441 08       		.byte	0x8
 2193 0442 12       		.uleb128 0x12
 2194 0443 74050000 		.4byte	.LASF77
 2195 0447 01       		.byte	0x1
 2196 0448 1501     		.2byte	0x115
 2197 044a D9000000 		.4byte	0xd9
 2198 044e 09       		.byte	0x9
 2199 044f 12       		.uleb128 0x12
 2200 0450 19000000 		.4byte	.LASF78
 2201 0454 01       		.byte	0x1
 2202 0455 1601     		.2byte	0x116
 2203 0457 CE000000 		.4byte	0xce
 2204 045b 0B       		.byte	0xb
 2205 045c 12       		.uleb128 0x12
 2206 045d 400A0000 		.4byte	.LASF79
 2207 0461 01       		.byte	0x1
 2208 0462 1701     		.2byte	0x117
 2209 0464 E4000000 		.4byte	0xe4
 2210 0468 0D       		.byte	0xd
 2211 0469 13       		.uleb128 0x13
 2212 046a 70776D00 		.ascii	"pwm\000"
 2213 046e 01       		.byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 65


 2214 046f 1801     		.2byte	0x118
 2215 0471 CE000000 		.4byte	0xce
 2216 0475 11       		.byte	0x11
 2217 0476 12       		.uleb128 0x12
 2218 0477 B4090000 		.4byte	.LASF80
 2219 047b 01       		.byte	0x1
 2220 047c 1901     		.2byte	0x119
 2221 047e E4000000 		.4byte	0xe4
 2222 0482 13       		.byte	0x13
 2223 0483 12       		.uleb128 0x12
 2224 0484 E0030000 		.4byte	.LASF81
 2225 0488 01       		.byte	0x1
 2226 0489 1A01     		.2byte	0x11a
 2227 048b EF000000 		.4byte	0xef
 2228 048f 17       		.byte	0x17
 2229 0490 00       		.byte	0
 2230 0491 05       		.uleb128 0x5
 2231 0492 C0070000 		.4byte	.LASF82
 2232 0496 01       		.byte	0x1
 2233 0497 1B01     		.2byte	0x11b
 2234 0499 C4030000 		.4byte	0x3c4
 2235 049d 0C       		.uleb128 0xc
 2236 049e 1B       		.byte	0x1b
 2237 049f 01       		.byte	0x1
 2238 04a0 1E01     		.2byte	0x11e
 2239 04a2 BF040000 		.4byte	0x4bf
 2240 04a6 0D       		.uleb128 0xd
 2241 04a7 62756600 		.ascii	"buf\000"
 2242 04ab 01       		.byte	0x1
 2243 04ac 1F01     		.2byte	0x11f
 2244 04ae B4030000 		.4byte	0x3b4
 2245 04b2 0D       		.uleb128 0xd
 2246 04b3 6D736700 		.ascii	"msg\000"
 2247 04b7 01       		.byte	0x1
 2248 04b8 2001     		.2byte	0x120
 2249 04ba 91040000 		.4byte	0x491
 2250 04be 00       		.byte	0
 2251 04bf 14       		.uleb128 0x14
 2252 04c0 01       		.byte	0x1
 2253 04c1 42000000 		.4byte	0x42
 2254 04c5 01       		.byte	0x1
 2255 04c6 2401     		.2byte	0x124
 2256 04c8 D9040000 		.4byte	0x4d9
 2257 04cc 08       		.uleb128 0x8
 2258 04cd 33000000 		.4byte	.LASF83
 2259 04d1 00       		.byte	0
 2260 04d2 08       		.uleb128 0x8
 2261 04d3 D2050000 		.4byte	.LASF84
 2262 04d7 01       		.byte	0x1
 2263 04d8 00       		.byte	0
 2264 04d9 05       		.uleb128 0x5
 2265 04da 08010000 		.4byte	.LASF85
 2266 04de 01       		.byte	0x1
 2267 04df 2701     		.2byte	0x127
 2268 04e1 BF040000 		.4byte	0x4bf
 2269 04e5 15       		.uleb128 0x15
 2270 04e6 320A0000 		.4byte	.LASF86
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 66


 2271 04ea 01       		.byte	0x1
 2272 04eb 5804     		.2byte	0x458
 2273 04ed 00000000 		.4byte	.LFB43
 2274 04f1 24000000 		.4byte	.LFE43-.LFB43
 2275 04f5 01       		.uleb128 0x1
 2276 04f6 9C       		.byte	0x9c
 2277 04f7 30050000 		.4byte	0x530
 2278 04fb 16       		.uleb128 0x16
 2279 04fc 06000000 		.4byte	.LVL0
 2280 0500 010E0000 		.4byte	0xe01
 2281 0504 16       		.uleb128 0x16
 2282 0505 0A000000 		.4byte	.LVL1
 2283 0509 0C0E0000 		.4byte	0xe0c
 2284 050d 17       		.uleb128 0x17
 2285 050e 10000000 		.4byte	.LVL2
 2286 0512 170E0000 		.4byte	0xe17
 2287 0516 20050000 		.4byte	0x520
 2288 051a 18       		.uleb128 0x18
 2289 051b 01       		.uleb128 0x1
 2290 051c 50       		.byte	0x50
 2291 051d 01       		.uleb128 0x1
 2292 051e 30       		.byte	0x30
 2293 051f 00       		.byte	0
 2294 0520 19       		.uleb128 0x19
 2295 0521 16000000 		.4byte	.LVL3
 2296 0525 220E0000 		.4byte	0xe22
 2297 0529 18       		.uleb128 0x18
 2298 052a 01       		.uleb128 0x1
 2299 052b 50       		.byte	0x50
 2300 052c 01       		.uleb128 0x1
 2301 052d 30       		.byte	0x30
 2302 052e 00       		.byte	0
 2303 052f 00       		.byte	0
 2304 0530 15       		.uleb128 0x15
 2305 0531 F9000000 		.4byte	.LASF87
 2306 0535 01       		.byte	0x1
 2307 0536 7604     		.2byte	0x476
 2308 0538 00000000 		.4byte	.LFB44
 2309 053c 1C000000 		.4byte	.LFE44-.LFB44
 2310 0540 01       		.uleb128 0x1
 2311 0541 9C       		.byte	0x9c
 2312 0542 68050000 		.4byte	0x568
 2313 0546 16       		.uleb128 0x16
 2314 0547 06000000 		.4byte	.LVL4
 2315 054b 2D0E0000 		.4byte	0xe2d
 2316 054f 16       		.uleb128 0x16
 2317 0550 0A000000 		.4byte	.LVL5
 2318 0554 380E0000 		.4byte	0xe38
 2319 0558 19       		.uleb128 0x19
 2320 0559 10000000 		.4byte	.LVL6
 2321 055d 170E0000 		.4byte	0xe17
 2322 0561 18       		.uleb128 0x18
 2323 0562 01       		.uleb128 0x1
 2324 0563 50       		.byte	0x50
 2325 0564 01       		.uleb128 0x1
 2326 0565 30       		.byte	0x30
 2327 0566 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 67


 2328 0567 00       		.byte	0
 2329 0568 15       		.uleb128 0x15
 2330 0569 44060000 		.4byte	.LASF88
 2331 056d 01       		.byte	0x1
 2332 056e 9004     		.2byte	0x490
 2333 0570 00000000 		.4byte	.LFB45
 2334 0574 60000000 		.4byte	.LFE45-.LFB45
 2335 0578 01       		.uleb128 0x1
 2336 0579 9C       		.byte	0x9c
 2337 057a DB050000 		.4byte	0x5db
 2338 057e 1A       		.uleb128 0x1a
 2339 057f 6900     		.ascii	"i\000"
 2340 0581 01       		.byte	0x1
 2341 0582 9204     		.2byte	0x492
 2342 0584 EF000000 		.4byte	0xef
 2343 0588 00000000 		.4byte	.LLST0
 2344 058c 16       		.uleb128 0x16
 2345 058d 06000000 		.4byte	.LVL7
 2346 0591 430E0000 		.4byte	0xe43
 2347 0595 16       		.uleb128 0x16
 2348 0596 0A000000 		.4byte	.LVL8
 2349 059a 4E0E0000 		.4byte	0xe4e
 2350 059e 17       		.uleb128 0x17
 2351 059f 2A000000 		.4byte	.LVL9
 2352 05a3 590E0000 		.4byte	0xe59
 2353 05a7 BF050000 		.4byte	0x5bf
 2354 05ab 18       		.uleb128 0x18
 2355 05ac 01       		.uleb128 0x1
 2356 05ad 50       		.byte	0x50
 2357 05ae 05       		.uleb128 0x5
 2358 05af 03       		.byte	0x3
 2359 05b0 00000000 		.4byte	txMessage
 2360 05b4 18       		.uleb128 0x18
 2361 05b5 01       		.uleb128 0x1
 2362 05b6 51       		.byte	0x51
 2363 05b7 01       		.uleb128 0x1
 2364 05b8 30       		.byte	0x30
 2365 05b9 18       		.uleb128 0x18
 2366 05ba 01       		.uleb128 0x1
 2367 05bb 52       		.byte	0x52
 2368 05bc 01       		.uleb128 0x1
 2369 05bd 4B       		.byte	0x4b
 2370 05be 00       		.byte	0
 2371 05bf 16       		.uleb128 0x16
 2372 05c0 32000000 		.4byte	.LVL11
 2373 05c4 620E0000 		.4byte	0xe62
 2374 05c8 16       		.uleb128 0x16
 2375 05c9 40000000 		.4byte	.LVL13
 2376 05cd 6E0E0000 		.4byte	0xe6e
 2377 05d1 16       		.uleb128 0x16
 2378 05d2 44000000 		.4byte	.LVL14
 2379 05d6 7A0E0000 		.4byte	0xe7a
 2380 05da 00       		.byte	0
 2381 05db 15       		.uleb128 0x15
 2382 05dc A5010000 		.4byte	.LASF89
 2383 05e0 01       		.byte	0x1
 2384 05e1 4001     		.2byte	0x140
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 68


 2385 05e3 00000000 		.4byte	.LFB32
 2386 05e7 1C000000 		.4byte	.LFE32-.LFB32
 2387 05eb 01       		.uleb128 0x1
 2388 05ec 9C       		.byte	0x9c
 2389 05ed 02060000 		.4byte	0x602
 2390 05f1 1B       		.uleb128 0x1b
 2391 05f2 2C0A0000 		.4byte	.LASF76
 2392 05f6 01       		.byte	0x1
 2393 05f7 4001     		.2byte	0x140
 2394 05f9 BD010000 		.4byte	0x1bd
 2395 05fd 1F000000 		.4byte	.LLST1
 2396 0601 00       		.byte	0
 2397 0602 15       		.uleb128 0x15
 2398 0603 1A010000 		.4byte	.LASF90
 2399 0607 01       		.byte	0x1
 2400 0608 5B01     		.2byte	0x15b
 2401 060a 00000000 		.4byte	.LFB33
 2402 060e 1C000000 		.4byte	.LFE33-.LFB33
 2403 0612 01       		.uleb128 0x1
 2404 0613 9C       		.byte	0x9c
 2405 0614 27060000 		.4byte	0x627
 2406 0618 1C       		.uleb128 0x1c
 2407 0619 2C0A0000 		.4byte	.LASF76
 2408 061d 01       		.byte	0x1
 2409 061e 5B01     		.2byte	0x15b
 2410 0620 BD010000 		.4byte	0x1bd
 2411 0624 01       		.uleb128 0x1
 2412 0625 50       		.byte	0x50
 2413 0626 00       		.byte	0
 2414 0627 1D       		.uleb128 0x1d
 2415 0628 44000000 		.4byte	.LASF91
 2416 062c 01       		.byte	0x1
 2417 062d 7501     		.2byte	0x175
 2418 062f 00000000 		.4byte	.LFB34
 2419 0633 18000000 		.4byte	.LFE34-.LFB34
 2420 0637 01       		.uleb128 0x1
 2421 0638 9C       		.byte	0x9c
 2422 0639 5C060000 		.4byte	0x65c
 2423 063d 1A       		.uleb128 0x1a
 2424 063e 6300     		.ascii	"c\000"
 2425 0640 01       		.byte	0x1
 2426 0641 7801     		.2byte	0x178
 2427 0643 11010000 		.4byte	0x111
 2428 0647 40000000 		.4byte	.LLST2
 2429 064b 19       		.uleb128 0x19
 2430 064c 08000000 		.4byte	.LVL19
 2431 0650 860E0000 		.4byte	0xe86
 2432 0654 18       		.uleb128 0x18
 2433 0655 01       		.uleb128 0x1
 2434 0656 50       		.byte	0x50
 2435 0657 02       		.uleb128 0x2
 2436 0658 08       		.byte	0x8
 2437 0659 40       		.byte	0x40
 2438 065a 00       		.byte	0
 2439 065b 00       		.byte	0
 2440 065c 15       		.uleb128 0x15
 2441 065d 0C040000 		.4byte	.LASF92
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 69


 2442 0661 01       		.byte	0x1
 2443 0662 5B02     		.2byte	0x25b
 2444 0664 00000000 		.4byte	.LFB36
 2445 0668 10000000 		.4byte	.LFE36-.LFB36
 2446 066c 01       		.uleb128 0x1
 2447 066d 9C       		.byte	0x9c
 2448 066e 97060000 		.4byte	0x697
 2449 0672 1B       		.uleb128 0x1b
 2450 0673 3D000000 		.4byte	.LASF93
 2451 0677 01       		.byte	0x1
 2452 0678 5B02     		.2byte	0x25b
 2453 067a E4000000 		.4byte	0xe4
 2454 067e 53000000 		.4byte	.LLST3
 2455 0682 19       		.uleb128 0x19
 2456 0683 0E000000 		.4byte	.LVL23
 2457 0687 910E0000 		.4byte	0xe91
 2458 068b 18       		.uleb128 0x18
 2459 068c 01       		.uleb128 0x1
 2460 068d 50       		.byte	0x50
 2461 068e 06       		.uleb128 0x6
 2462 068f F3       		.byte	0xf3
 2463 0690 01       		.uleb128 0x1
 2464 0691 50       		.byte	0x50
 2465 0692 23       		.byte	0x23
 2466 0693 A006     		.uleb128 0x320
 2467 0695 00       		.byte	0
 2468 0696 00       		.byte	0
 2469 0697 1E       		.uleb128 0x1e
 2470 0698 EA070000 		.4byte	.LASF184
 2471 069c 01       		.byte	0x1
 2472 069d 6C02     		.2byte	0x26c
 2473 069f E4000000 		.4byte	0xe4
 2474 06a3 00000000 		.4byte	.LFB37
 2475 06a7 44000000 		.4byte	.LFE37-.LFB37
 2476 06ab 01       		.uleb128 0x1
 2477 06ac 9C       		.byte	0x9c
 2478 06ad DF060000 		.4byte	0x6df
 2479 06b1 1F       		.uleb128 0x1f
 2480 06b2 91070000 		.4byte	.LASF94
 2481 06b6 01       		.byte	0x1
 2482 06b7 6E02     		.2byte	0x26e
 2483 06b9 45010000 		.4byte	0x145
 2484 06bd 05       		.uleb128 0x5
 2485 06be 03       		.byte	0x3
 2486 06bf 08000000 		.4byte	RawPosition.7276
 2487 06c3 1F       		.uleb128 0x1f
 2488 06c4 E2010000 		.4byte	.LASF95
 2489 06c8 01       		.byte	0x1
 2490 06c9 6F02     		.2byte	0x26f
 2491 06cb DF060000 		.4byte	0x6df
 2492 06cf 05       		.uleb128 0x5
 2493 06d0 03       		.byte	0x3
 2494 06d1 0C000000 		.4byte	result.7277
 2495 06d5 16       		.uleb128 0x16
 2496 06d6 06000000 		.4byte	.LVL24
 2497 06da 9D0E0000 		.4byte	0xe9d
 2498 06de 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 70


 2499 06df 06       		.uleb128 0x6
 2500 06e0 E4000000 		.4byte	0xe4
 2501 06e4 15       		.uleb128 0x15
 2502 06e5 6E060000 		.4byte	.LASF96
 2503 06e9 01       		.byte	0x1
 2504 06ea 8A01     		.2byte	0x18a
 2505 06ec 00000000 		.4byte	.LFB35
 2506 06f0 A0020000 		.4byte	.LFE35-.LFB35
 2507 06f4 01       		.uleb128 0x1
 2508 06f5 9C       		.byte	0x9c
 2509 06f6 BE070000 		.4byte	0x7be
 2510 06fa 20       		.uleb128 0x20
 2511 06fb 3E040000 		.4byte	.LASF53
 2512 06ff 01       		.byte	0x1
 2513 0700 8C01     		.2byte	0x18c
 2514 0702 F3010000 		.4byte	0x1f3
 2515 0706 82000000 		.4byte	.LLST4
 2516 070a 20       		.uleb128 0x20
 2517 070b 84050000 		.4byte	.LASF52
 2518 070f 01       		.byte	0x1
 2519 0710 8D01     		.2byte	0x18d
 2520 0712 C3000000 		.4byte	0xc3
 2521 0716 AC000000 		.4byte	.LLST5
 2522 071a 1A       		.uleb128 0x1a
 2523 071b 6900     		.ascii	"i\000"
 2524 071d 01       		.byte	0x1
 2525 071e 8E01     		.2byte	0x18e
 2526 0720 C3000000 		.4byte	0xc3
 2527 0724 D5000000 		.4byte	.LLST6
 2528 0728 20       		.uleb128 0x20
 2529 0729 CA010000 		.4byte	.LASF51
 2530 072d 01       		.byte	0x1
 2531 072e 8F01     		.2byte	0x18f
 2532 0730 C3000000 		.4byte	0xc3
 2533 0734 2C010000 		.4byte	.LLST7
 2534 0738 20       		.uleb128 0x20
 2535 0739 72070000 		.4byte	.LASF97
 2536 073d 01       		.byte	0x1
 2537 073e 9001     		.2byte	0x190
 2538 0740 E4000000 		.4byte	0xe4
 2539 0744 99010000 		.4byte	.LLST8
 2540 0748 16       		.uleb128 0x16
 2541 0749 6C000000 		.4byte	.LVL37
 2542 074d 97060000 		.4byte	0x697
 2543 0751 17       		.uleb128 0x17
 2544 0752 B6000000 		.4byte	.LVL38
 2545 0756 02060000 		.4byte	0x602
 2546 075a 64070000 		.4byte	0x764
 2547 075e 18       		.uleb128 0x18
 2548 075f 01       		.uleb128 0x1
 2549 0760 50       		.byte	0x50
 2550 0761 01       		.uleb128 0x1
 2551 0762 30       		.byte	0x30
 2552 0763 00       		.byte	0
 2553 0764 16       		.uleb128 0x16
 2554 0765 EC000000 		.4byte	.LVL42
 2555 0769 97060000 		.4byte	0x697
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 71


 2556 076d 17       		.uleb128 0x17
 2557 076e 18010000 		.4byte	.LVL44
 2558 0772 220E0000 		.4byte	0xe22
 2559 0776 80070000 		.4byte	0x780
 2560 077a 18       		.uleb128 0x18
 2561 077b 01       		.uleb128 0x1
 2562 077c 50       		.byte	0x50
 2563 077d 01       		.uleb128 0x1
 2564 077e 30       		.byte	0x30
 2565 077f 00       		.byte	0
 2566 0780 16       		.uleb128 0x16
 2567 0781 6E010000 		.4byte	.LVL54
 2568 0785 170E0000 		.4byte	0xe17
 2569 0789 16       		.uleb128 0x16
 2570 078a 8C010000 		.4byte	.LVL55
 2571 078e 97060000 		.4byte	0x697
 2572 0792 17       		.uleb128 0x17
 2573 0793 32020000 		.4byte	.LVL63
 2574 0797 A80E0000 		.4byte	0xea8
 2575 079b AE070000 		.4byte	0x7ae
 2576 079f 18       		.uleb128 0x18
 2577 07a0 01       		.uleb128 0x1
 2578 07a1 50       		.byte	0x50
 2579 07a2 05       		.uleb128 0x5
 2580 07a3 03       		.byte	0x3
 2581 07a4 00000000 		.4byte	txMessage
 2582 07a8 18       		.uleb128 0x18
 2583 07a9 01       		.uleb128 0x1
 2584 07aa 51       		.byte	0x51
 2585 07ab 01       		.uleb128 0x1
 2586 07ac 4B       		.byte	0x4b
 2587 07ad 00       		.byte	0
 2588 07ae 19       		.uleb128 0x19
 2589 07af 46020000 		.4byte	.LVL64
 2590 07b3 02060000 		.4byte	0x602
 2591 07b7 18       		.uleb128 0x18
 2592 07b8 01       		.uleb128 0x1
 2593 07b9 50       		.byte	0x50
 2594 07ba 01       		.uleb128 0x1
 2595 07bb 30       		.byte	0x30
 2596 07bc 00       		.byte	0
 2597 07bd 00       		.byte	0
 2598 07be 15       		.uleb128 0x15
 2599 07bf A0090000 		.4byte	.LASF98
 2600 07c3 01       		.byte	0x1
 2601 07c4 8F02     		.2byte	0x28f
 2602 07c6 00000000 		.4byte	.LFB38
 2603 07ca 30000000 		.4byte	.LFE38-.LFB38
 2604 07ce 01       		.uleb128 0x1
 2605 07cf 9C       		.byte	0x9c
 2606 07d0 DE070000 		.4byte	0x7de
 2607 07d4 16       		.uleb128 0x16
 2608 07d5 06000000 		.4byte	.LVL65
 2609 07d9 97060000 		.4byte	0x697
 2610 07dd 00       		.byte	0
 2611 07de 15       		.uleb128 0x15
 2612 07df 00040000 		.4byte	.LASF99
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 72


 2613 07e3 01       		.byte	0x1
 2614 07e4 A802     		.2byte	0x2a8
 2615 07e6 00000000 		.4byte	.LFB39
 2616 07ea 24000000 		.4byte	.LFE39-.LFB39
 2617 07ee 01       		.uleb128 0x1
 2618 07ef 9C       		.byte	0x9c
 2619 07f0 1E080000 		.4byte	0x81e
 2620 07f4 1B       		.uleb128 0x1b
 2621 07f5 28070000 		.4byte	.LASF100
 2622 07f9 01       		.byte	0x1
 2623 07fa A802     		.2byte	0x2a8
 2624 07fc EF000000 		.4byte	0xef
 2625 0800 B7010000 		.4byte	.LLST9
 2626 0804 20       		.uleb128 0x20
 2627 0805 7F000000 		.4byte	.LASF101
 2628 0809 01       		.byte	0x1
 2629 080a AA02     		.2byte	0x2aa
 2630 080c 1E080000 		.4byte	0x81e
 2631 0810 D8010000 		.4byte	.LLST10
 2632 0814 16       		.uleb128 0x16
 2633 0815 1A000000 		.4byte	.LVL68
 2634 0819 BE070000 		.4byte	0x7be
 2635 081d 00       		.byte	0
 2636 081e 03       		.uleb128 0x3
 2637 081f 01       		.byte	0x1
 2638 0820 02       		.byte	0x2
 2639 0821 27030000 		.4byte	.LASF102
 2640 0825 15       		.uleb128 0x15
 2641 0826 B0000000 		.4byte	.LASF103
 2642 082a 01       		.byte	0x1
 2643 082b BE02     		.2byte	0x2be
 2644 082d 00000000 		.4byte	.LFB40
 2645 0831 50010000 		.4byte	.LFE40-.LFB40
 2646 0835 01       		.uleb128 0x1
 2647 0836 9C       		.byte	0x9c
 2648 0837 B8080000 		.4byte	0x8b8
 2649 083b 17       		.uleb128 0x17
 2650 083c 22000000 		.4byte	.LVL70
 2651 0840 5C060000 		.4byte	0x65c
 2652 0844 4F080000 		.4byte	0x84f
 2653 0848 18       		.uleb128 0x18
 2654 0849 01       		.uleb128 0x1
 2655 084a 50       		.byte	0x50
 2656 084b 02       		.uleb128 0x2
 2657 084c 74       		.byte	0x74
 2658 084d 00       		.sleb128 0
 2659 084e 00       		.byte	0
 2660 084f 17       		.uleb128 0x17
 2661 0850 3C000000 		.4byte	.LVL71
 2662 0854 B40E0000 		.4byte	0xeb4
 2663 0858 62080000 		.4byte	0x862
 2664 085c 18       		.uleb128 0x18
 2665 085d 01       		.uleb128 0x1
 2666 085e 50       		.byte	0x50
 2667 085f 01       		.uleb128 0x1
 2668 0860 36       		.byte	0x36
 2669 0861 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 73


 2670 0862 17       		.uleb128 0x17
 2671 0863 42000000 		.4byte	.LVL72
 2672 0867 BF0E0000 		.4byte	0xebf
 2673 086b 75080000 		.4byte	0x875
 2674 086f 18       		.uleb128 0x18
 2675 0870 01       		.uleb128 0x1
 2676 0871 50       		.byte	0x50
 2677 0872 01       		.uleb128 0x1
 2678 0873 36       		.byte	0x36
 2679 0874 00       		.byte	0
 2680 0875 17       		.uleb128 0x17
 2681 0876 58000000 		.4byte	.LVL73
 2682 087a DE070000 		.4byte	0x7de
 2683 087e 88080000 		.4byte	0x888
 2684 0882 18       		.uleb128 0x18
 2685 0883 01       		.uleb128 0x1
 2686 0884 50       		.byte	0x50
 2687 0885 01       		.uleb128 0x1
 2688 0886 31       		.byte	0x31
 2689 0887 00       		.byte	0
 2690 0888 17       		.uleb128 0x17
 2691 0889 6C000000 		.4byte	.LVL74
 2692 088d DE070000 		.4byte	0x7de
 2693 0891 9C080000 		.4byte	0x89c
 2694 0895 18       		.uleb128 0x18
 2695 0896 01       		.uleb128 0x1
 2696 0897 50       		.byte	0x50
 2697 0898 02       		.uleb128 0x2
 2698 0899 74       		.byte	0x74
 2699 089a 00       		.sleb128 0
 2700 089b 00       		.byte	0
 2701 089c 16       		.uleb128 0x16
 2702 089d BC000000 		.4byte	.LVL75
 2703 08a1 97060000 		.4byte	0x697
 2704 08a5 16       		.uleb128 0x16
 2705 08a6 CA000000 		.4byte	.LVL76
 2706 08aa CA0E0000 		.4byte	0xeca
 2707 08ae 16       		.uleb128 0x16
 2708 08af D4000000 		.4byte	.LVL77
 2709 08b3 5C060000 		.4byte	0x65c
 2710 08b7 00       		.byte	0
 2711 08b8 15       		.uleb128 0x15
 2712 08b9 14040000 		.4byte	.LASF104
 2713 08bd 01       		.byte	0x1
 2714 08be F703     		.2byte	0x3f7
 2715 08c0 00000000 		.4byte	.LFB42
 2716 08c4 BC000000 		.4byte	.LFE42-.LFB42
 2717 08c8 01       		.uleb128 0x1
 2718 08c9 9C       		.byte	0x9c
 2719 08ca 69090000 		.4byte	0x969
 2720 08ce 1F       		.uleb128 0x1f
 2721 08cf 55000000 		.4byte	.LASF105
 2722 08d3 01       		.byte	0x1
 2723 08d4 F903     		.2byte	0x3f9
 2724 08d6 EF000000 		.4byte	0xef
 2725 08da 05       		.uleb128 0x5
 2726 08db 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 74


 2727 08dc 48000000 		.4byte	brmsTask.7295
 2728 08e0 21       		.uleb128 0x21
 2729 08e1 94000000 		.4byte	.LASF106
 2730 08e5 01       		.byte	0x1
 2731 08e6 FB03     		.2byte	0x3fb
 2732 08e8 69090000 		.4byte	0x969
 2733 08ec 01       		.byte	0x1
 2734 08ed 21       		.uleb128 0x21
 2735 08ee DE070000 		.4byte	.LASF107
 2736 08f2 01       		.byte	0x1
 2737 08f3 FC03     		.2byte	0x3fc
 2738 08f5 6E090000 		.4byte	0x96e
 2739 08f9 02       		.byte	0x2
 2740 08fa 21       		.uleb128 0x21
 2741 08fb B4070000 		.4byte	.LASF108
 2742 08ff 01       		.byte	0x1
 2743 0900 FD03     		.2byte	0x3fd
 2744 0902 73090000 		.4byte	0x973
 2745 0906 04       		.byte	0x4
 2746 0907 21       		.uleb128 0x21
 2747 0908 27000000 		.4byte	.LASF109
 2748 090c 01       		.byte	0x1
 2749 090d FE03     		.2byte	0x3fe
 2750 090f 78090000 		.4byte	0x978
 2751 0913 08       		.byte	0x8
 2752 0914 21       		.uleb128 0x21
 2753 0915 2D070000 		.4byte	.LASF110
 2754 0919 01       		.byte	0x1
 2755 091a FF03     		.2byte	0x3ff
 2756 091c EF000000 		.4byte	0xef
 2757 0920 10       		.byte	0x10
 2758 0921 17       		.uleb128 0x17
 2759 0922 08000000 		.4byte	.LVL78
 2760 0926 D50E0000 		.4byte	0xed5
 2761 092a 34090000 		.4byte	0x934
 2762 092e 18       		.uleb128 0x18
 2763 092f 01       		.uleb128 0x1
 2764 0930 50       		.byte	0x50
 2765 0931 01       		.uleb128 0x1
 2766 0932 32       		.byte	0x32
 2767 0933 00       		.byte	0
 2768 0934 17       		.uleb128 0x17
 2769 0935 0E000000 		.4byte	.LVL79
 2770 0939 E10E0000 		.4byte	0xee1
 2771 093d 47090000 		.4byte	0x947
 2772 0941 18       		.uleb128 0x18
 2773 0942 01       		.uleb128 0x1
 2774 0943 50       		.byte	0x50
 2775 0944 01       		.uleb128 0x1
 2776 0945 31       		.byte	0x31
 2777 0946 00       		.byte	0
 2778 0947 16       		.uleb128 0x16
 2779 0948 A2000000 		.4byte	.LVL80
 2780 094c 25080000 		.4byte	0x825
 2781 0950 16       		.uleb128 0x16
 2782 0951 B0000000 		.4byte	.LVL81
 2783 0955 E4060000 		.4byte	0x6e4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 75


 2784 0959 19       		.uleb128 0x19
 2785 095a B6000000 		.4byte	.LVL82
 2786 095e E10E0000 		.4byte	0xee1
 2787 0962 18       		.uleb128 0x18
 2788 0963 01       		.uleb128 0x1
 2789 0964 50       		.byte	0x50
 2790 0965 01       		.uleb128 0x1
 2791 0966 30       		.byte	0x30
 2792 0967 00       		.byte	0
 2793 0968 00       		.byte	0
 2794 0969 22       		.uleb128 0x22
 2795 096a EF000000 		.4byte	0xef
 2796 096e 22       		.uleb128 0x22
 2797 096f EF000000 		.4byte	0xef
 2798 0973 22       		.uleb128 0x22
 2799 0974 EF000000 		.4byte	0xef
 2800 0978 22       		.uleb128 0x22
 2801 0979 EF000000 		.4byte	0xef
 2802 097d 23       		.uleb128 0x23
 2803 097e AF090000 		.4byte	.LASF185
 2804 0982 01       		.byte	0x1
 2805 0983 4003     		.2byte	0x340
 2806 0985 AA000000 		.4byte	0xaa
 2807 0989 00000000 		.4byte	.LFB41
 2808 098d 38010000 		.4byte	.LFE41-.LFB41
 2809 0991 01       		.uleb128 0x1
 2810 0992 9C       		.byte	0x9c
 2811 0993 670B0000 		.4byte	0xb67
 2812 0997 17       		.uleb128 0x17
 2813 0998 08000000 		.4byte	.LVL83
 2814 099c B40E0000 		.4byte	0xeb4
 2815 09a0 AA090000 		.4byte	0x9aa
 2816 09a4 18       		.uleb128 0x18
 2817 09a5 01       		.uleb128 0x1
 2818 09a6 50       		.byte	0x50
 2819 09a7 01       		.uleb128 0x1
 2820 09a8 31       		.byte	0x31
 2821 09a9 00       		.byte	0
 2822 09aa 17       		.uleb128 0x17
 2823 09ab 0E000000 		.4byte	.LVL84
 2824 09af BF0E0000 		.4byte	0xebf
 2825 09b3 BD090000 		.4byte	0x9bd
 2826 09b7 18       		.uleb128 0x18
 2827 09b8 01       		.uleb128 0x1
 2828 09b9 50       		.byte	0x50
 2829 09ba 01       		.uleb128 0x1
 2830 09bb 31       		.byte	0x31
 2831 09bc 00       		.byte	0
 2832 09bd 16       		.uleb128 0x16
 2833 09be 12000000 		.4byte	.LVL85
 2834 09c2 EC0E0000 		.4byte	0xeec
 2835 09c6 17       		.uleb128 0x17
 2836 09c7 18000000 		.4byte	.LVL86
 2837 09cb F80E0000 		.4byte	0xef8
 2838 09cf DD090000 		.4byte	0x9dd
 2839 09d3 18       		.uleb128 0x18
 2840 09d4 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 76


 2841 09d5 50       		.byte	0x50
 2842 09d6 05       		.uleb128 0x5
 2843 09d7 03       		.byte	0x3
 2844 09d8 00000000 		.4byte	BRMS_Interrupt
 2845 09dc 00       		.byte	0
 2846 09dd 17       		.uleb128 0x17
 2847 09de 1E000000 		.4byte	.LVL87
 2848 09e2 030F0000 		.4byte	0xf03
 2849 09e6 F0090000 		.4byte	0x9f0
 2850 09ea 18       		.uleb128 0x18
 2851 09eb 01       		.uleb128 0x1
 2852 09ec 50       		.byte	0x50
 2853 09ed 01       		.uleb128 0x1
 2854 09ee 32       		.byte	0x32
 2855 09ef 00       		.byte	0
 2856 09f0 17       		.uleb128 0x17
 2857 09f1 24000000 		.4byte	.LVL88
 2858 09f5 0E0F0000 		.4byte	0xf0e
 2859 09f9 070A0000 		.4byte	0xa07
 2860 09fd 18       		.uleb128 0x18
 2861 09fe 01       		.uleb128 0x1
 2862 09ff 50       		.byte	0x50
 2863 0a00 05       		.uleb128 0x5
 2864 0a01 03       		.byte	0x3
 2865 0a02 00000000 		.4byte	HomeIsrHandler
 2866 0a06 00       		.byte	0
 2867 0a07 17       		.uleb128 0x17
 2868 0a08 2A000000 		.4byte	.LVL89
 2869 0a0c 190F0000 		.4byte	0xf19
 2870 0a10 1A0A0000 		.4byte	0xa1a
 2871 0a14 18       		.uleb128 0x18
 2872 0a15 01       		.uleb128 0x1
 2873 0a16 50       		.byte	0x50
 2874 0a17 01       		.uleb128 0x1
 2875 0a18 33       		.byte	0x33
 2876 0a19 00       		.byte	0
 2877 0a1a 17       		.uleb128 0x17
 2878 0a1b 30000000 		.4byte	.LVL90
 2879 0a1f 240F0000 		.4byte	0xf24
 2880 0a23 310A0000 		.4byte	0xa31
 2881 0a27 18       		.uleb128 0x18
 2882 0a28 01       		.uleb128 0x1
 2883 0a29 50       		.byte	0x50
 2884 0a2a 05       		.uleb128 0x5
 2885 0a2b 03       		.byte	0x3
 2886 0a2c 00000000 		.4byte	RSTIsrHandler
 2887 0a30 00       		.byte	0
 2888 0a31 17       		.uleb128 0x17
 2889 0a32 36000000 		.4byte	.LVL91
 2890 0a36 2F0F0000 		.4byte	0xf2f
 2891 0a3a 440A0000 		.4byte	0xa44
 2892 0a3e 18       		.uleb128 0x18
 2893 0a3f 01       		.uleb128 0x1
 2894 0a40 50       		.byte	0x50
 2895 0a41 01       		.uleb128 0x1
 2896 0a42 33       		.byte	0x33
 2897 0a43 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 77


 2898 0a44 17       		.uleb128 0x17
 2899 0a45 3C000000 		.4byte	.LVL92
 2900 0a49 3A0F0000 		.4byte	0xf3a
 2901 0a4d 5B0A0000 		.4byte	0xa5b
 2902 0a51 18       		.uleb128 0x18
 2903 0a52 01       		.uleb128 0x1
 2904 0a53 50       		.byte	0x50
 2905 0a54 05       		.uleb128 0x5
 2906 0a55 03       		.byte	0x3
 2907 0a56 00000000 		.4byte	SPI_SS_IsrHandler
 2908 0a5a 00       		.byte	0
 2909 0a5b 17       		.uleb128 0x17
 2910 0a5c 42000000 		.4byte	.LVL93
 2911 0a60 450F0000 		.4byte	0xf45
 2912 0a64 6E0A0000 		.4byte	0xa6e
 2913 0a68 18       		.uleb128 0x18
 2914 0a69 01       		.uleb128 0x1
 2915 0a6a 50       		.byte	0x50
 2916 0a6b 01       		.uleb128 0x1
 2917 0a6c 33       		.byte	0x33
 2918 0a6d 00       		.byte	0
 2919 0a6e 16       		.uleb128 0x16
 2920 0a6f 48000000 		.4byte	.LVL94
 2921 0a73 500F0000 		.4byte	0xf50
 2922 0a77 17       		.uleb128 0x17
 2923 0a78 4E000000 		.4byte	.LVL95
 2924 0a7c 5B0F0000 		.4byte	0xf5b
 2925 0a80 8B0A0000 		.4byte	0xa8b
 2926 0a84 18       		.uleb128 0x18
 2927 0a85 01       		.uleb128 0x1
 2928 0a86 50       		.byte	0x50
 2929 0a87 02       		.uleb128 0x2
 2930 0a88 08       		.byte	0x8
 2931 0a89 64       		.byte	0x64
 2932 0a8a 00       		.byte	0
 2933 0a8b 16       		.uleb128 0x16
 2934 0a8c 52000000 		.4byte	.LVL96
 2935 0a90 660F0000 		.4byte	0xf66
 2936 0a94 16       		.uleb128 0x16
 2937 0a95 56000000 		.4byte	.LVL97
 2938 0a99 710F0000 		.4byte	0xf71
 2939 0a9d 17       		.uleb128 0x17
 2940 0a9e 5E000000 		.4byte	.LVL98
 2941 0aa2 7D0F0000 		.4byte	0xf7d
 2942 0aa6 B20A0000 		.4byte	0xab2
 2943 0aaa 18       		.uleb128 0x18
 2944 0aab 01       		.uleb128 0x1
 2945 0aac 50       		.byte	0x50
 2946 0aad 03       		.uleb128 0x3
 2947 0aae 0A       		.byte	0xa
 2948 0aaf 4006     		.2byte	0x640
 2949 0ab1 00       		.byte	0
 2950 0ab2 17       		.uleb128 0x17
 2951 0ab3 64000000 		.4byte	.LVL99
 2952 0ab7 5C060000 		.4byte	0x65c
 2953 0abb C50A0000 		.4byte	0xac5
 2954 0abf 18       		.uleb128 0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 78


 2955 0ac0 01       		.uleb128 0x1
 2956 0ac1 50       		.byte	0x50
 2957 0ac2 01       		.uleb128 0x1
 2958 0ac3 30       		.byte	0x30
 2959 0ac4 00       		.byte	0
 2960 0ac5 16       		.uleb128 0x16
 2961 0ac6 72000000 		.4byte	.LVL100
 2962 0aca 890F0000 		.4byte	0xf89
 2963 0ace 17       		.uleb128 0x17
 2964 0acf 7A000000 		.4byte	.LVL101
 2965 0ad3 170E0000 		.4byte	0xe17
 2966 0ad7 E20A0000 		.4byte	0xae2
 2967 0adb 18       		.uleb128 0x18
 2968 0adc 01       		.uleb128 0x1
 2969 0add 50       		.byte	0x50
 2970 0ade 02       		.uleb128 0x2
 2971 0adf 75       		.byte	0x75
 2972 0ae0 00       		.sleb128 0
 2973 0ae1 00       		.byte	0
 2974 0ae2 16       		.uleb128 0x16
 2975 0ae3 82000000 		.4byte	.LVL102
 2976 0ae7 940F0000 		.4byte	0xf94
 2977 0aeb 17       		.uleb128 0x17
 2978 0aec 88000000 		.4byte	.LVL103
 2979 0af0 220E0000 		.4byte	0xe22
 2980 0af4 FF0A0000 		.4byte	0xaff
 2981 0af8 18       		.uleb128 0x18
 2982 0af9 01       		.uleb128 0x1
 2983 0afa 50       		.byte	0x50
 2984 0afb 02       		.uleb128 0x2
 2985 0afc 74       		.byte	0x74
 2986 0afd 00       		.sleb128 0
 2987 0afe 00       		.byte	0
 2988 0aff 16       		.uleb128 0x16
 2989 0b00 9A000000 		.4byte	.LVL104
 2990 0b04 BE070000 		.4byte	0x7be
 2991 0b08 17       		.uleb128 0x17
 2992 0b09 A0000000 		.4byte	.LVL105
 2993 0b0d DE070000 		.4byte	0x7de
 2994 0b11 1C0B0000 		.4byte	0xb1c
 2995 0b15 18       		.uleb128 0x18
 2996 0b16 01       		.uleb128 0x1
 2997 0b17 50       		.byte	0x50
 2998 0b18 02       		.uleb128 0x2
 2999 0b19 74       		.byte	0x74
 3000 0b1a 00       		.sleb128 0
 3001 0b1b 00       		.byte	0
 3002 0b1c 17       		.uleb128 0x17
 3003 0b1d CA000000 		.4byte	.LVL106
 3004 0b21 5C060000 		.4byte	0x65c
 3005 0b25 300B0000 		.4byte	0xb30
 3006 0b29 18       		.uleb128 0x18
 3007 0b2a 01       		.uleb128 0x1
 3008 0b2b 50       		.byte	0x50
 3009 0b2c 02       		.uleb128 0x2
 3010 0b2d 74       		.byte	0x74
 3011 0b2e 00       		.sleb128 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 79


 3012 0b2f 00       		.byte	0
 3013 0b30 17       		.uleb128 0x17
 3014 0b31 DC000000 		.4byte	.LVL107
 3015 0b35 9F0F0000 		.4byte	0xf9f
 3016 0b39 430B0000 		.4byte	0xb43
 3017 0b3d 18       		.uleb128 0x18
 3018 0b3e 01       		.uleb128 0x1
 3019 0b3f 50       		.byte	0x50
 3020 0b40 01       		.uleb128 0x1
 3021 0b41 31       		.byte	0x31
 3022 0b42 00       		.byte	0
 3023 0b43 17       		.uleb128 0x17
 3024 0b44 E4000000 		.4byte	.LVL108
 3025 0b48 9F0F0000 		.4byte	0xf9f
 3026 0b4c 570B0000 		.4byte	0xb57
 3027 0b50 18       		.uleb128 0x18
 3028 0b51 01       		.uleb128 0x1
 3029 0b52 50       		.byte	0x50
 3030 0b53 02       		.uleb128 0x2
 3031 0b54 74       		.byte	0x74
 3032 0b55 00       		.sleb128 0
 3033 0b56 00       		.byte	0
 3034 0b57 19       		.uleb128 0x19
 3035 0b58 EA000000 		.4byte	.LVL109
 3036 0b5c 5B0F0000 		.4byte	0xf5b
 3037 0b60 18       		.uleb128 0x18
 3038 0b61 01       		.uleb128 0x1
 3039 0b62 50       		.byte	0x50
 3040 0b63 01       		.uleb128 0x1
 3041 0b64 3A       		.byte	0x3a
 3042 0b65 00       		.byte	0
 3043 0b66 00       		.byte	0
 3044 0b67 24       		.uleb128 0x24
 3045 0b68 B4090000 		.4byte	.LASF80
 3046 0b6c 05       		.byte	0x5
 3047 0b6d 0F       		.byte	0xf
 3048 0b6e E4000000 		.4byte	0xe4
 3049 0b72 24       		.uleb128 0x24
 3050 0b73 22050000 		.4byte	.LASF111
 3051 0b77 05       		.byte	0x5
 3052 0b78 10       		.byte	0x10
 3053 0b79 E4000000 		.4byte	0xe4
 3054 0b7d 25       		.uleb128 0x25
 3055 0b7e 3C030000 		.4byte	.LASF112
 3056 0b82 01       		.byte	0x1
 3057 0b83 5B       		.byte	0x5b
 3058 0b84 1E080000 		.4byte	0x81e
 3059 0b88 05       		.uleb128 0x5
 3060 0b89 03       		.byte	0x3
 3061 0b8a 00000000 		.4byte	inAuto
 3062 0b8e 26       		.uleb128 0x26
 3063 0b8f 4A6F6700 		.ascii	"Jog\000"
 3064 0b93 01       		.byte	0x1
 3065 0b94 5D       		.byte	0x5d
 3066 0b95 9F0B0000 		.4byte	0xb9f
 3067 0b99 05       		.uleb128 0x5
 3068 0b9a 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 80


 3069 0b9b 00000000 		.4byte	Jog
 3070 0b9f 06       		.uleb128 0x6
 3071 0ba0 B8000000 		.4byte	0xb8
 3072 0ba4 25       		.uleb128 0x25
 3073 0ba5 43010000 		.4byte	.LASF113
 3074 0ba9 01       		.byte	0x1
 3075 0baa 5D       		.byte	0x5d
 3076 0bab 9F0B0000 		.4byte	0xb9f
 3077 0baf 05       		.uleb128 0x5
 3078 0bb0 03       		.byte	0x3
 3079 0bb1 00000000 		.4byte	LastJog
 3080 0bb5 25       		.uleb128 0x25
 3081 0bb6 1C070000 		.4byte	.LASF114
 3082 0bba 01       		.byte	0x1
 3083 0bbb 5E       		.byte	0x5e
 3084 0bbc 1E080000 		.4byte	0x81e
 3085 0bc0 05       		.uleb128 0x5
 3086 0bc1 03       		.byte	0x3
 3087 0bc2 00000000 		.4byte	PID_Enabled
 3088 0bc6 25       		.uleb128 0x25
 3089 0bc7 0C070000 		.4byte	.LASF115
 3090 0bcb 01       		.byte	0x1
 3091 0bcc 5E       		.byte	0x5e
 3092 0bcd 1E080000 		.4byte	0x81e
 3093 0bd1 05       		.uleb128 0x5
 3094 0bd2 03       		.byte	0x3
 3095 0bd3 00000000 		.4byte	PID_Was_Enabled
 3096 0bd7 25       		.uleb128 0x25
 3097 0bd8 20080000 		.4byte	.LASF116
 3098 0bdc 01       		.byte	0x1
 3099 0bdd 5F       		.byte	0x5f
 3100 0bde E4000000 		.4byte	0xe4
 3101 0be2 05       		.uleb128 0x5
 3102 0be3 03       		.byte	0x3
 3103 0be4 00000000 		.4byte	PID_Setpoint
 3104 0be8 25       		.uleb128 0x25
 3105 0be9 660A0000 		.4byte	.LASF117
 3106 0bed 01       		.byte	0x1
 3107 0bee 5F       		.byte	0x5f
 3108 0bef E4000000 		.4byte	0xe4
 3109 0bf3 05       		.uleb128 0x5
 3110 0bf4 03       		.byte	0x3
 3111 0bf5 00000000 		.4byte	PID_EffectiveSetpoint
 3112 0bf9 25       		.uleb128 0x25
 3113 0bfa 00020000 		.4byte	.LASF118
 3114 0bfe 01       		.byte	0x1
 3115 0bff 60       		.byte	0x60
 3116 0c00 C3000000 		.4byte	0xc3
 3117 0c04 05       		.uleb128 0x5
 3118 0c05 03       		.byte	0x3
 3119 0c06 00000000 		.4byte	PID_EffSetDelta
 3120 0c0a 25       		.uleb128 0x25
 3121 0c0b 10020000 		.4byte	.LASF119
 3122 0c0f 01       		.byte	0x1
 3123 0c10 61       		.byte	0x61
 3124 0c11 EF000000 		.4byte	0xef
 3125 0c15 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 81


 3126 0c16 03       		.byte	0x3
 3127 0c17 00000000 		.4byte	lastTime
 3128 0c1b 25       		.uleb128 0x25
 3129 0c1c D2030000 		.4byte	.LASF120
 3130 0c20 01       		.byte	0x1
 3131 0c21 63       		.byte	0x63
 3132 0c22 DF060000 		.4byte	0x6df
 3133 0c26 05       		.uleb128 0x5
 3134 0c27 03       		.byte	0x3
 3135 0c28 00000000 		.4byte	Position
 3136 0c2c 25       		.uleb128 0x25
 3137 0c2d 05060000 		.4byte	.LASF121
 3138 0c31 01       		.byte	0x1
 3139 0c32 63       		.byte	0x63
 3140 0c33 DF060000 		.4byte	0x6df
 3141 0c37 05       		.uleb128 0x5
 3142 0c38 03       		.byte	0x3
 3143 0c39 00000000 		.4byte	LastPosition
 3144 0c3d 25       		.uleb128 0x25
 3145 0c3e D3060000 		.4byte	.LASF122
 3146 0c42 01       		.byte	0x1
 3147 0c43 64       		.byte	0x64
 3148 0c44 DF060000 		.4byte	0x6df
 3149 0c48 05       		.uleb128 0x5
 3150 0c49 03       		.byte	0x3
 3151 0c4a 00000000 		.4byte	Output
 3152 0c4e 25       		.uleb128 0x25
 3153 0c4f 56020000 		.4byte	.LASF59
 3154 0c53 01       		.byte	0x1
 3155 0c54 65       		.byte	0x65
 3156 0c55 5F0C0000 		.4byte	0xc5f
 3157 0c59 05       		.uleb128 0x5
 3158 0c5a 03       		.byte	0x3
 3159 0c5b 00000000 		.4byte	limitOutput
 3160 0c5f 06       		.uleb128 0x6
 3161 0c60 D9000000 		.4byte	0xd9
 3162 0c64 25       		.uleb128 0x25
 3163 0c65 45040000 		.4byte	.LASF60
 3164 0c69 01       		.byte	0x1
 3165 0c6a 66       		.byte	0x66
 3166 0c6b 5F0C0000 		.4byte	0xc5f
 3167 0c6f 05       		.uleb128 0x5
 3168 0c70 03       		.byte	0x3
 3169 0c71 00000000 		.4byte	limitIterm
 3170 0c75 25       		.uleb128 0x25
 3171 0c76 15090000 		.4byte	.LASF123
 3172 0c7a 01       		.byte	0x1
 3173 0c7b 68       		.byte	0x68
 3174 0c7c 1E080000 		.4byte	0x81e
 3175 0c80 05       		.uleb128 0x5
 3176 0c81 03       		.byte	0x3
 3177 0c82 00000000 		.4byte	homingDone
 3178 0c86 25       		.uleb128 0x25
 3179 0c87 5C070000 		.4byte	.LASF124
 3180 0c8b 01       		.byte	0x1
 3181 0c8c 73       		.byte	0x73
 3182 0c8d EF000000 		.4byte	0xef
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 82


 3183 0c91 05       		.uleb128 0x5
 3184 0c92 03       		.byte	0x3
 3185 0c93 00000000 		.4byte	LastMoveStartTimeUsec
 3186 0c97 25       		.uleb128 0x25
 3187 0c98 20090000 		.4byte	.LASF125
 3188 0c9c 01       		.byte	0x1
 3189 0c9d 74       		.byte	0x74
 3190 0c9e EF000000 		.4byte	0xef
 3191 0ca2 05       		.uleb128 0x5
 3192 0ca3 03       		.byte	0x3
 3193 0ca4 00000000 		.4byte	LastMoveEndTimeUsec
 3194 0ca8 25       		.uleb128 0x25
 3195 0ca9 2F010000 		.4byte	.LASF126
 3196 0cad 01       		.byte	0x1
 3197 0cae 77       		.byte	0x77
 3198 0caf D9000000 		.4byte	0xd9
 3199 0cb3 05       		.uleb128 0x5
 3200 0cb4 03       		.byte	0x3
 3201 0cb5 00000000 		.4byte	LastMoveStableCount
 3202 0cb9 25       		.uleb128 0x25
 3203 0cba D2040000 		.4byte	.LASF127
 3204 0cbe 01       		.byte	0x1
 3205 0cbf 7A       		.byte	0x7a
 3206 0cc0 EF000000 		.4byte	0xef
 3207 0cc4 05       		.uleb128 0x5
 3208 0cc5 03       		.byte	0x3
 3209 0cc6 00000000 		.4byte	LastMoveTimeUsec
 3210 0cca 25       		.uleb128 0x25
 3211 0ccb 33060000 		.4byte	.LASF128
 3212 0ccf 01       		.byte	0x1
 3213 0cd0 7D       		.byte	0x7d
 3214 0cd1 1E080000 		.4byte	0x81e
 3215 0cd5 05       		.uleb128 0x5
 3216 0cd6 03       		.byte	0x3
 3217 0cd7 00000000 		.4byte	NewCommandedMove
 3218 0cdb 25       		.uleb128 0x25
 3219 0cdc 78080000 		.4byte	.LASF129
 3220 0ce0 01       		.byte	0x1
 3221 0ce1 82       		.byte	0x82
 3222 0ce2 EC0C0000 		.4byte	0xcec
 3223 0ce6 05       		.uleb128 0x5
 3224 0ce7 03       		.byte	0x3
 3225 0ce8 00000000 		.4byte	UptimeMicroseconds
 3226 0cec 06       		.uleb128 0x6
 3227 0ced FA000000 		.4byte	0xfa
 3228 0cf1 25       		.uleb128 0x25
 3229 0cf2 D7090000 		.4byte	.LASF130
 3230 0cf6 01       		.byte	0x1
 3231 0cf7 83       		.byte	0x83
 3232 0cf8 EC0C0000 		.4byte	0xcec
 3233 0cfc 05       		.uleb128 0x5
 3234 0cfd 03       		.byte	0x3
 3235 0cfe 00000000 		.4byte	UptimeMicrosecondsAccumulator
 3236 0d02 25       		.uleb128 0x25
 3237 0d03 7A030000 		.4byte	.LASF131
 3238 0d07 01       		.byte	0x1
 3239 0d08 84       		.byte	0x84
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 83


 3240 0d09 EC0C0000 		.4byte	0xcec
 3241 0d0d 05       		.uleb128 0x5
 3242 0d0e 03       		.byte	0x3
 3243 0d0f 00000000 		.4byte	UptimeMilliseconds
 3244 0d13 25       		.uleb128 0x25
 3245 0d14 56050000 		.4byte	.LASF132
 3246 0d18 01       		.byte	0x1
 3247 0d19 85       		.byte	0x85
 3248 0d1a EC0C0000 		.4byte	0xcec
 3249 0d1e 05       		.uleb128 0x5
 3250 0d1f 03       		.byte	0x3
 3251 0d20 00000000 		.4byte	UptimeMillisecondsAccumulator
 3252 0d24 25       		.uleb128 0x25
 3253 0d25 F6070000 		.4byte	.LASF133
 3254 0d29 01       		.byte	0x1
 3255 0d2a 86       		.byte	0x86
 3256 0d2b EC0C0000 		.4byte	0xcec
 3257 0d2f 05       		.uleb128 0x5
 3258 0d30 03       		.byte	0x3
 3259 0d31 00000000 		.4byte	UptimeSeconds
 3260 0d35 25       		.uleb128 0x25
 3261 0d36 4A020000 		.4byte	.LASF134
 3262 0d3a 01       		.byte	0x1
 3263 0d3b B2       		.byte	0xb2
 3264 0d3c 460D0000 		.4byte	0xd46
 3265 0d40 05       		.uleb128 0x5
 3266 0d41 03       		.byte	0x3
 3267 0d42 00000000 		.4byte	ConfigState
 3268 0d46 06       		.uleb128 0x6
 3269 0d47 6F010000 		.4byte	0x16f
 3270 0d4b 25       		.uleb128 0x25
 3271 0d4c EC080000 		.4byte	.LASF135
 3272 0d50 01       		.byte	0x1
 3273 0d51 B3       		.byte	0xb3
 3274 0d52 5C0D0000 		.4byte	0xd5c
 3275 0d56 05       		.uleb128 0x5
 3276 0d57 03       		.byte	0x3
 3277 0d58 00000000 		.4byte	FaultState
 3278 0d5c 06       		.uleb128 0x6
 3279 0d5d C3000000 		.4byte	0xc3
 3280 0d61 25       		.uleb128 0x25
 3281 0d62 06090000 		.4byte	.LASF136
 3282 0d66 01       		.byte	0x1
 3283 0d67 B4       		.byte	0xb4
 3284 0d68 5C0D0000 		.4byte	0xd5c
 3285 0d6c 05       		.uleb128 0x5
 3286 0d6d 03       		.byte	0x3
 3287 0d6e 00000000 		.4byte	ConfigSequence
 3288 0d72 25       		.uleb128 0x25
 3289 0d73 46080000 		.4byte	.LASF137
 3290 0d77 01       		.byte	0x1
 3291 0d78 B5       		.byte	0xb5
 3292 0d79 5F0C0000 		.4byte	0xc5f
 3293 0d7d 05       		.uleb128 0x5
 3294 0d7e 03       		.byte	0x3
 3295 0d7f 00000000 		.4byte	ChecksumErrors
 3296 0d83 25       		.uleb128 0x25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 84


 3297 0d84 19020000 		.4byte	.LASF138
 3298 0d88 01       		.byte	0x1
 3299 0d89 B6       		.byte	0xb6
 3300 0d8a 940D0000 		.4byte	0xd94
 3301 0d8e 05       		.uleb128 0x5
 3302 0d8f 03       		.byte	0x3
 3303 0d90 00000000 		.4byte	MotorCurrent
 3304 0d94 06       		.uleb128 0x6
 3305 0d95 CE000000 		.4byte	0xce
 3306 0d99 0F       		.uleb128 0xf
 3307 0d9a C3000000 		.4byte	0xc3
 3308 0d9e A90D0000 		.4byte	0xda9
 3309 0da2 10       		.uleb128 0x10
 3310 0da3 3E010000 		.4byte	0x13e
 3311 0da7 13       		.byte	0x13
 3312 0da8 00       		.byte	0
 3313 0da9 25       		.uleb128 0x25
 3314 0daa DD050000 		.4byte	.LASF139
 3315 0dae 01       		.byte	0x1
 3316 0daf B7       		.byte	0xb7
 3317 0db0 990D0000 		.4byte	0xd99
 3318 0db4 05       		.uleb128 0x5
 3319 0db5 03       		.byte	0x3
 3320 0db6 00000000 		.4byte	CurrentI2Cinbuf
 3321 0dba 25       		.uleb128 0x25
 3322 0dbb 9D070000 		.4byte	.LASF140
 3323 0dbf 01       		.byte	0x1
 3324 0dc0 C9       		.byte	0xc9
 3325 0dc1 EF000000 		.4byte	0xef
 3326 0dc5 05       		.uleb128 0x5
 3327 0dc6 03       		.byte	0x3
 3328 0dc7 00000000 		.4byte	LastMessageTimeSeconds
 3329 0dcb 27       		.uleb128 0x27
 3330 0dcc 08000000 		.4byte	.LASF141
 3331 0dd0 01       		.byte	0x1
 3332 0dd1 0801     		.2byte	0x108
 3333 0dd3 6E030000 		.4byte	0x36e
 3334 0dd7 05       		.uleb128 0x5
 3335 0dd8 03       		.byte	0x3
 3336 0dd9 00000000 		.4byte	rxMessage
 3337 0ddd 27       		.uleb128 0x27
 3338 0dde 12060000 		.4byte	.LASF142
 3339 0de2 01       		.byte	0x1
 3340 0de3 2101     		.2byte	0x121
 3341 0de5 9D040000 		.4byte	0x49d
 3342 0de9 05       		.uleb128 0x5
 3343 0dea 03       		.byte	0x3
 3344 0deb 00000000 		.4byte	txMessage
 3345 0def 27       		.uleb128 0x27
 3346 0df0 570A0000 		.4byte	.LASF143
 3347 0df4 01       		.byte	0x1
 3348 0df5 2901     		.2byte	0x129
 3349 0df7 D9040000 		.4byte	0x4d9
 3350 0dfb 05       		.uleb128 0x5
 3351 0dfc 03       		.byte	0x3
 3352 0dfd 00000000 		.4byte	txMessageState
 3353 0e01 28       		.uleb128 0x28
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 85


 3354 0e02 9E040000 		.4byte	.LASF144
 3355 0e06 9E040000 		.4byte	.LASF144
 3356 0e0a 06       		.byte	0x6
 3357 0e0b 28       		.byte	0x28
 3358 0e0c 28       		.uleb128 0x28
 3359 0e0d 34090000 		.4byte	.LASF145
 3360 0e11 34090000 		.4byte	.LASF145
 3361 0e15 07       		.byte	0x7
 3362 0e16 39       		.byte	0x39
 3363 0e17 28       		.uleb128 0x28
 3364 0e18 1C060000 		.4byte	.LASF146
 3365 0e1c 1C060000 		.4byte	.LASF146
 3366 0e20 08       		.byte	0x8
 3367 0e21 5A       		.byte	0x5a
 3368 0e22 28       		.uleb128 0x28
 3369 0e23 67040000 		.4byte	.LASF147
 3370 0e27 67040000 		.4byte	.LASF147
 3371 0e2b 09       		.byte	0x9
 3372 0e2c 5A       		.byte	0x5a
 3373 0e2d 28       		.uleb128 0x28
 3374 0e2e 160A0000 		.4byte	.LASF148
 3375 0e32 160A0000 		.4byte	.LASF148
 3376 0e36 0A       		.byte	0xa
 3377 0e37 28       		.byte	0x28
 3378 0e38 28       		.uleb128 0x28
 3379 0e39 D8000000 		.4byte	.LASF149
 3380 0e3d D8000000 		.4byte	.LASF149
 3381 0e41 0B       		.byte	0xb
 3382 0e42 39       		.byte	0x39
 3383 0e43 28       		.uleb128 0x28
 3384 0e44 64030000 		.4byte	.LASF150
 3385 0e48 64030000 		.4byte	.LASF150
 3386 0e4c 0C       		.byte	0xc
 3387 0e4d 39       		.byte	0x39
 3388 0e4e 28       		.uleb128 0x28
 3389 0e4f 16050000 		.4byte	.LASF151
 3390 0e53 16050000 		.4byte	.LASF151
 3391 0e57 0C       		.byte	0xc
 3392 0e58 32       		.byte	0x32
 3393 0e59 29       		.uleb128 0x29
 3394 0e5a 4F050000 		.4byte	.LASF186
 3395 0e5e 4F050000 		.4byte	.LASF186
 3396 0e62 2A       		.uleb128 0x2a
 3397 0e63 ED050000 		.4byte	.LASF152
 3398 0e67 ED050000 		.4byte	.LASF152
 3399 0e6b 0D       		.byte	0xd
 3400 0e6c 3D03     		.2byte	0x33d
 3401 0e6e 2A       		.uleb128 0x2a
 3402 0e6f 23040000 		.4byte	.LASF153
 3403 0e73 23040000 		.4byte	.LASF153
 3404 0e77 0D       		.byte	0xd
 3405 0e78 3F03     		.2byte	0x33f
 3406 0e7a 2A       		.uleb128 0x2a
 3407 0e7b 53010000 		.4byte	.LASF154
 3408 0e7f 53010000 		.4byte	.LASF154
 3409 0e83 0D       		.byte	0xd
 3410 0e84 4703     		.2byte	0x347
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 86


 3411 0e86 28       		.uleb128 0x28
 3412 0e87 A1060000 		.4byte	.LASF155
 3413 0e8b A1060000 		.4byte	.LASF155
 3414 0e8f 0E       		.byte	0xe
 3415 0e90 70       		.byte	0x70
 3416 0e91 2A       		.uleb128 0x2a
 3417 0e92 84040000 		.4byte	.LASF156
 3418 0e96 84040000 		.4byte	.LASF156
 3419 0e9a 0F       		.byte	0xf
 3420 0e9b 5501     		.2byte	0x155
 3421 0e9d 28       		.uleb128 0x28
 3422 0e9e 8D030000 		.4byte	.LASF157
 3423 0ea2 8D030000 		.4byte	.LASF157
 3424 0ea6 08       		.byte	0x8
 3425 0ea7 5D       		.byte	0x5d
 3426 0ea8 2A       		.uleb128 0x2a
 3427 0ea9 4E030000 		.4byte	.LASF158
 3428 0ead 4E030000 		.4byte	.LASF158
 3429 0eb1 0D       		.byte	0xd
 3430 0eb2 4503     		.2byte	0x345
 3431 0eb4 28       		.uleb128 0x28
 3432 0eb5 7B070000 		.4byte	.LASF159
 3433 0eb9 7B070000 		.4byte	.LASF159
 3434 0ebd 10       		.byte	0x10
 3435 0ebe 36       		.byte	0x36
 3436 0ebf 28       		.uleb128 0x28
 3437 0ec0 38050000 		.4byte	.LASF160
 3438 0ec4 38050000 		.4byte	.LASF160
 3439 0ec8 11       		.byte	0x11
 3440 0ec9 36       		.byte	0x36
 3441 0eca 28       		.uleb128 0x28
 3442 0ecb EF030000 		.4byte	.LASF161
 3443 0ecf EF030000 		.4byte	.LASF161
 3444 0ed3 05       		.byte	0x5
 3445 0ed4 11       		.byte	0x11
 3446 0ed5 2A       		.uleb128 0x2a
 3447 0ed6 F1040000 		.4byte	.LASF162
 3448 0eda F1040000 		.4byte	.LASF162
 3449 0ede 12       		.byte	0x12
 3450 0edf 4701     		.2byte	0x147
 3451 0ee1 28       		.uleb128 0x28
 3452 0ee2 64090000 		.4byte	.LASF163
 3453 0ee6 64090000 		.4byte	.LASF163
 3454 0eea 13       		.byte	0x13
 3455 0eeb 33       		.byte	0x33
 3456 0eec 2A       		.uleb128 0x2a
 3457 0eed 16030000 		.4byte	.LASF164
 3458 0ef1 16030000 		.4byte	.LASF164
 3459 0ef5 12       		.byte	0x12
 3460 0ef6 3201     		.2byte	0x132
 3461 0ef8 28       		.uleb128 0x28
 3462 0ef9 05030000 		.4byte	.LASF165
 3463 0efd 05030000 		.4byte	.LASF165
 3464 0f01 14       		.byte	0x14
 3465 0f02 18       		.byte	0x18
 3466 0f03 28       		.uleb128 0x28
 3467 0f04 80060000 		.4byte	.LASF166
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 87


 3468 0f08 80060000 		.4byte	.LASF166
 3469 0f0c 14       		.byte	0x14
 3470 0f0d 20       		.byte	0x20
 3471 0f0e 28       		.uleb128 0x28
 3472 0f0f 70090000 		.4byte	.LASF167
 3473 0f13 70090000 		.4byte	.LASF167
 3474 0f17 0A       		.byte	0xa
 3475 0f18 18       		.byte	0x18
 3476 0f19 28       		.uleb128 0x28
 3477 0f1a F0020000 		.4byte	.LASF168
 3478 0f1e F0020000 		.4byte	.LASF168
 3479 0f22 0A       		.byte	0xa
 3480 0f23 20       		.byte	0x20
 3481 0f24 28       		.uleb128 0x28
 3482 0f25 FE090000 		.4byte	.LASF169
 3483 0f29 FE090000 		.4byte	.LASF169
 3484 0f2d 06       		.byte	0x6
 3485 0f2e 18       		.byte	0x18
 3486 0f2f 28       		.uleb128 0x28
 3487 0f30 04080000 		.4byte	.LASF170
 3488 0f34 04080000 		.4byte	.LASF170
 3489 0f38 06       		.byte	0x6
 3490 0f39 20       		.byte	0x20
 3491 0f3a 28       		.uleb128 0x28
 3492 0f3b B7010000 		.4byte	.LASF171
 3493 0f3f B7010000 		.4byte	.LASF171
 3494 0f43 15       		.byte	0x15
 3495 0f44 18       		.byte	0x18
 3496 0f45 28       		.uleb128 0x28
 3497 0f46 BB040000 		.4byte	.LASF172
 3498 0f4a BB040000 		.4byte	.LASF172
 3499 0f4e 15       		.byte	0x15
 3500 0f4f 20       		.byte	0x20
 3501 0f50 28       		.uleb128 0x28
 3502 0f51 25010000 		.4byte	.LASF173
 3503 0f55 25010000 		.4byte	.LASF173
 3504 0f59 16       		.byte	0x16
 3505 0f5a 72       		.byte	0x72
 3506 0f5b 28       		.uleb128 0x28
 3507 0f5c 00000000 		.4byte	.LASF174
 3508 0f60 00000000 		.4byte	.LASF174
 3509 0f64 17       		.byte	0x17
 3510 0f65 EC       		.byte	0xec
 3511 0f66 28       		.uleb128 0x28
 3512 0f67 B2080000 		.4byte	.LASF175
 3513 0f6b B2080000 		.4byte	.LASF175
 3514 0f6f 18       		.byte	0x18
 3515 0f70 72       		.byte	0x72
 3516 0f71 2A       		.uleb128 0x2a
 3517 0f72 50070000 		.4byte	.LASF176
 3518 0f76 50070000 		.4byte	.LASF176
 3519 0f7a 0F       		.byte	0xf
 3520 0f7b 3201     		.2byte	0x132
 3521 0f7d 2A       		.uleb128 0x2a
 3522 0f7e 38020000 		.4byte	.LASF177
 3523 0f82 38020000 		.4byte	.LASF177
 3524 0f86 0F       		.byte	0xf
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 88


 3525 0f87 5001     		.2byte	0x150
 3526 0f89 28       		.uleb128 0x28
 3527 0f8a A0000000 		.4byte	.LASF178
 3528 0f8e A0000000 		.4byte	.LASF178
 3529 0f92 08       		.byte	0x8
 3530 0f93 4F       		.byte	0x4f
 3531 0f94 28       		.uleb128 0x28
 3532 0f95 C1090000 		.4byte	.LASF179
 3533 0f99 C1090000 		.4byte	.LASF179
 3534 0f9d 09       		.byte	0x9
 3535 0f9e 4F       		.byte	0x4f
 3536 0f9f 28       		.uleb128 0x28
 3537 0fa0 EF000000 		.4byte	.LASF180
 3538 0fa4 EF000000 		.4byte	.LASF180
 3539 0fa8 19       		.byte	0x19
 3540 0fa9 33       		.byte	0x33
 3541 0faa 00       		.byte	0
 3542              		.section	.debug_abbrev,"",%progbits
 3543              	.Ldebug_abbrev0:
 3544 0000 01       		.uleb128 0x1
 3545 0001 11       		.uleb128 0x11
 3546 0002 01       		.byte	0x1
 3547 0003 25       		.uleb128 0x25
 3548 0004 0E       		.uleb128 0xe
 3549 0005 13       		.uleb128 0x13
 3550 0006 0B       		.uleb128 0xb
 3551 0007 03       		.uleb128 0x3
 3552 0008 0E       		.uleb128 0xe
 3553 0009 1B       		.uleb128 0x1b
 3554 000a 0E       		.uleb128 0xe
 3555 000b 55       		.uleb128 0x55
 3556 000c 17       		.uleb128 0x17
 3557 000d 11       		.uleb128 0x11
 3558 000e 01       		.uleb128 0x1
 3559 000f 10       		.uleb128 0x10
 3560 0010 17       		.uleb128 0x17
 3561 0011 00       		.byte	0
 3562 0012 00       		.byte	0
 3563 0013 02       		.uleb128 0x2
 3564 0014 16       		.uleb128 0x16
 3565 0015 00       		.byte	0
 3566 0016 03       		.uleb128 0x3
 3567 0017 0E       		.uleb128 0xe
 3568 0018 3A       		.uleb128 0x3a
 3569 0019 0B       		.uleb128 0xb
 3570 001a 3B       		.uleb128 0x3b
 3571 001b 0B       		.uleb128 0xb
 3572 001c 49       		.uleb128 0x49
 3573 001d 13       		.uleb128 0x13
 3574 001e 00       		.byte	0
 3575 001f 00       		.byte	0
 3576 0020 03       		.uleb128 0x3
 3577 0021 24       		.uleb128 0x24
 3578 0022 00       		.byte	0
 3579 0023 0B       		.uleb128 0xb
 3580 0024 0B       		.uleb128 0xb
 3581 0025 3E       		.uleb128 0x3e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 89


 3582 0026 0B       		.uleb128 0xb
 3583 0027 03       		.uleb128 0x3
 3584 0028 0E       		.uleb128 0xe
 3585 0029 00       		.byte	0
 3586 002a 00       		.byte	0
 3587 002b 04       		.uleb128 0x4
 3588 002c 24       		.uleb128 0x24
 3589 002d 00       		.byte	0
 3590 002e 0B       		.uleb128 0xb
 3591 002f 0B       		.uleb128 0xb
 3592 0030 3E       		.uleb128 0x3e
 3593 0031 0B       		.uleb128 0xb
 3594 0032 03       		.uleb128 0x3
 3595 0033 08       		.uleb128 0x8
 3596 0034 00       		.byte	0
 3597 0035 00       		.byte	0
 3598 0036 05       		.uleb128 0x5
 3599 0037 16       		.uleb128 0x16
 3600 0038 00       		.byte	0
 3601 0039 03       		.uleb128 0x3
 3602 003a 0E       		.uleb128 0xe
 3603 003b 3A       		.uleb128 0x3a
 3604 003c 0B       		.uleb128 0xb
 3605 003d 3B       		.uleb128 0x3b
 3606 003e 05       		.uleb128 0x5
 3607 003f 49       		.uleb128 0x49
 3608 0040 13       		.uleb128 0x13
 3609 0041 00       		.byte	0
 3610 0042 00       		.byte	0
 3611 0043 06       		.uleb128 0x6
 3612 0044 35       		.uleb128 0x35
 3613 0045 00       		.byte	0
 3614 0046 49       		.uleb128 0x49
 3615 0047 13       		.uleb128 0x13
 3616 0048 00       		.byte	0
 3617 0049 00       		.byte	0
 3618 004a 07       		.uleb128 0x7
 3619 004b 04       		.uleb128 0x4
 3620 004c 01       		.byte	0x1
 3621 004d 0B       		.uleb128 0xb
 3622 004e 0B       		.uleb128 0xb
 3623 004f 49       		.uleb128 0x49
 3624 0050 13       		.uleb128 0x13
 3625 0051 3A       		.uleb128 0x3a
 3626 0052 0B       		.uleb128 0xb
 3627 0053 3B       		.uleb128 0x3b
 3628 0054 0B       		.uleb128 0xb
 3629 0055 01       		.uleb128 0x1
 3630 0056 13       		.uleb128 0x13
 3631 0057 00       		.byte	0
 3632 0058 00       		.byte	0
 3633 0059 08       		.uleb128 0x8
 3634 005a 28       		.uleb128 0x28
 3635 005b 00       		.byte	0
 3636 005c 03       		.uleb128 0x3
 3637 005d 0E       		.uleb128 0xe
 3638 005e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 90


 3639 005f 0B       		.uleb128 0xb
 3640 0060 00       		.byte	0
 3641 0061 00       		.byte	0
 3642 0062 09       		.uleb128 0x9
 3643 0063 13       		.uleb128 0x13
 3644 0064 01       		.byte	0x1
 3645 0065 0B       		.uleb128 0xb
 3646 0066 0B       		.uleb128 0xb
 3647 0067 3A       		.uleb128 0x3a
 3648 0068 0B       		.uleb128 0xb
 3649 0069 3B       		.uleb128 0x3b
 3650 006a 0B       		.uleb128 0xb
 3651 006b 01       		.uleb128 0x1
 3652 006c 13       		.uleb128 0x13
 3653 006d 00       		.byte	0
 3654 006e 00       		.byte	0
 3655 006f 0A       		.uleb128 0xa
 3656 0070 0D       		.uleb128 0xd
 3657 0071 00       		.byte	0
 3658 0072 03       		.uleb128 0x3
 3659 0073 0E       		.uleb128 0xe
 3660 0074 3A       		.uleb128 0x3a
 3661 0075 0B       		.uleb128 0xb
 3662 0076 3B       		.uleb128 0x3b
 3663 0077 0B       		.uleb128 0xb
 3664 0078 49       		.uleb128 0x49
 3665 0079 13       		.uleb128 0x13
 3666 007a 38       		.uleb128 0x38
 3667 007b 0B       		.uleb128 0xb
 3668 007c 00       		.byte	0
 3669 007d 00       		.byte	0
 3670 007e 0B       		.uleb128 0xb
 3671 007f 0D       		.uleb128 0xd
 3672 0080 00       		.byte	0
 3673 0081 03       		.uleb128 0x3
 3674 0082 08       		.uleb128 0x8
 3675 0083 3A       		.uleb128 0x3a
 3676 0084 0B       		.uleb128 0xb
 3677 0085 3B       		.uleb128 0x3b
 3678 0086 0B       		.uleb128 0xb
 3679 0087 49       		.uleb128 0x49
 3680 0088 13       		.uleb128 0x13
 3681 0089 38       		.uleb128 0x38
 3682 008a 0B       		.uleb128 0xb
 3683 008b 00       		.byte	0
 3684 008c 00       		.byte	0
 3685 008d 0C       		.uleb128 0xc
 3686 008e 17       		.uleb128 0x17
 3687 008f 01       		.byte	0x1
 3688 0090 0B       		.uleb128 0xb
 3689 0091 0B       		.uleb128 0xb
 3690 0092 3A       		.uleb128 0x3a
 3691 0093 0B       		.uleb128 0xb
 3692 0094 3B       		.uleb128 0x3b
 3693 0095 05       		.uleb128 0x5
 3694 0096 01       		.uleb128 0x1
 3695 0097 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 91


 3696 0098 00       		.byte	0
 3697 0099 00       		.byte	0
 3698 009a 0D       		.uleb128 0xd
 3699 009b 0D       		.uleb128 0xd
 3700 009c 00       		.byte	0
 3701 009d 03       		.uleb128 0x3
 3702 009e 08       		.uleb128 0x8
 3703 009f 3A       		.uleb128 0x3a
 3704 00a0 0B       		.uleb128 0xb
 3705 00a1 3B       		.uleb128 0x3b
 3706 00a2 05       		.uleb128 0x5
 3707 00a3 49       		.uleb128 0x49
 3708 00a4 13       		.uleb128 0x13
 3709 00a5 00       		.byte	0
 3710 00a6 00       		.byte	0
 3711 00a7 0E       		.uleb128 0xe
 3712 00a8 0D       		.uleb128 0xd
 3713 00a9 00       		.byte	0
 3714 00aa 03       		.uleb128 0x3
 3715 00ab 0E       		.uleb128 0xe
 3716 00ac 3A       		.uleb128 0x3a
 3717 00ad 0B       		.uleb128 0xb
 3718 00ae 3B       		.uleb128 0x3b
 3719 00af 05       		.uleb128 0x5
 3720 00b0 49       		.uleb128 0x49
 3721 00b1 13       		.uleb128 0x13
 3722 00b2 00       		.byte	0
 3723 00b3 00       		.byte	0
 3724 00b4 0F       		.uleb128 0xf
 3725 00b5 01       		.uleb128 0x1
 3726 00b6 01       		.byte	0x1
 3727 00b7 49       		.uleb128 0x49
 3728 00b8 13       		.uleb128 0x13
 3729 00b9 01       		.uleb128 0x1
 3730 00ba 13       		.uleb128 0x13
 3731 00bb 00       		.byte	0
 3732 00bc 00       		.byte	0
 3733 00bd 10       		.uleb128 0x10
 3734 00be 21       		.uleb128 0x21
 3735 00bf 00       		.byte	0
 3736 00c0 49       		.uleb128 0x49
 3737 00c1 13       		.uleb128 0x13
 3738 00c2 2F       		.uleb128 0x2f
 3739 00c3 0B       		.uleb128 0xb
 3740 00c4 00       		.byte	0
 3741 00c5 00       		.byte	0
 3742 00c6 11       		.uleb128 0x11
 3743 00c7 13       		.uleb128 0x13
 3744 00c8 01       		.byte	0x1
 3745 00c9 0B       		.uleb128 0xb
 3746 00ca 0B       		.uleb128 0xb
 3747 00cb 3A       		.uleb128 0x3a
 3748 00cc 0B       		.uleb128 0xb
 3749 00cd 3B       		.uleb128 0x3b
 3750 00ce 05       		.uleb128 0x5
 3751 00cf 01       		.uleb128 0x1
 3752 00d0 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 92


 3753 00d1 00       		.byte	0
 3754 00d2 00       		.byte	0
 3755 00d3 12       		.uleb128 0x12
 3756 00d4 0D       		.uleb128 0xd
 3757 00d5 00       		.byte	0
 3758 00d6 03       		.uleb128 0x3
 3759 00d7 0E       		.uleb128 0xe
 3760 00d8 3A       		.uleb128 0x3a
 3761 00d9 0B       		.uleb128 0xb
 3762 00da 3B       		.uleb128 0x3b
 3763 00db 05       		.uleb128 0x5
 3764 00dc 49       		.uleb128 0x49
 3765 00dd 13       		.uleb128 0x13
 3766 00de 38       		.uleb128 0x38
 3767 00df 0B       		.uleb128 0xb
 3768 00e0 00       		.byte	0
 3769 00e1 00       		.byte	0
 3770 00e2 13       		.uleb128 0x13
 3771 00e3 0D       		.uleb128 0xd
 3772 00e4 00       		.byte	0
 3773 00e5 03       		.uleb128 0x3
 3774 00e6 08       		.uleb128 0x8
 3775 00e7 3A       		.uleb128 0x3a
 3776 00e8 0B       		.uleb128 0xb
 3777 00e9 3B       		.uleb128 0x3b
 3778 00ea 05       		.uleb128 0x5
 3779 00eb 49       		.uleb128 0x49
 3780 00ec 13       		.uleb128 0x13
 3781 00ed 38       		.uleb128 0x38
 3782 00ee 0B       		.uleb128 0xb
 3783 00ef 00       		.byte	0
 3784 00f0 00       		.byte	0
 3785 00f1 14       		.uleb128 0x14
 3786 00f2 04       		.uleb128 0x4
 3787 00f3 01       		.byte	0x1
 3788 00f4 0B       		.uleb128 0xb
 3789 00f5 0B       		.uleb128 0xb
 3790 00f6 49       		.uleb128 0x49
 3791 00f7 13       		.uleb128 0x13
 3792 00f8 3A       		.uleb128 0x3a
 3793 00f9 0B       		.uleb128 0xb
 3794 00fa 3B       		.uleb128 0x3b
 3795 00fb 05       		.uleb128 0x5
 3796 00fc 01       		.uleb128 0x1
 3797 00fd 13       		.uleb128 0x13
 3798 00fe 00       		.byte	0
 3799 00ff 00       		.byte	0
 3800 0100 15       		.uleb128 0x15
 3801 0101 2E       		.uleb128 0x2e
 3802 0102 01       		.byte	0x1
 3803 0103 3F       		.uleb128 0x3f
 3804 0104 19       		.uleb128 0x19
 3805 0105 03       		.uleb128 0x3
 3806 0106 0E       		.uleb128 0xe
 3807 0107 3A       		.uleb128 0x3a
 3808 0108 0B       		.uleb128 0xb
 3809 0109 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 93


 3810 010a 05       		.uleb128 0x5
 3811 010b 27       		.uleb128 0x27
 3812 010c 19       		.uleb128 0x19
 3813 010d 11       		.uleb128 0x11
 3814 010e 01       		.uleb128 0x1
 3815 010f 12       		.uleb128 0x12
 3816 0110 06       		.uleb128 0x6
 3817 0111 40       		.uleb128 0x40
 3818 0112 18       		.uleb128 0x18
 3819 0113 9742     		.uleb128 0x2117
 3820 0115 19       		.uleb128 0x19
 3821 0116 01       		.uleb128 0x1
 3822 0117 13       		.uleb128 0x13
 3823 0118 00       		.byte	0
 3824 0119 00       		.byte	0
 3825 011a 16       		.uleb128 0x16
 3826 011b 898201   		.uleb128 0x4109
 3827 011e 00       		.byte	0
 3828 011f 11       		.uleb128 0x11
 3829 0120 01       		.uleb128 0x1
 3830 0121 31       		.uleb128 0x31
 3831 0122 13       		.uleb128 0x13
 3832 0123 00       		.byte	0
 3833 0124 00       		.byte	0
 3834 0125 17       		.uleb128 0x17
 3835 0126 898201   		.uleb128 0x4109
 3836 0129 01       		.byte	0x1
 3837 012a 11       		.uleb128 0x11
 3838 012b 01       		.uleb128 0x1
 3839 012c 31       		.uleb128 0x31
 3840 012d 13       		.uleb128 0x13
 3841 012e 01       		.uleb128 0x1
 3842 012f 13       		.uleb128 0x13
 3843 0130 00       		.byte	0
 3844 0131 00       		.byte	0
 3845 0132 18       		.uleb128 0x18
 3846 0133 8A8201   		.uleb128 0x410a
 3847 0136 00       		.byte	0
 3848 0137 02       		.uleb128 0x2
 3849 0138 18       		.uleb128 0x18
 3850 0139 9142     		.uleb128 0x2111
 3851 013b 18       		.uleb128 0x18
 3852 013c 00       		.byte	0
 3853 013d 00       		.byte	0
 3854 013e 19       		.uleb128 0x19
 3855 013f 898201   		.uleb128 0x4109
 3856 0142 01       		.byte	0x1
 3857 0143 11       		.uleb128 0x11
 3858 0144 01       		.uleb128 0x1
 3859 0145 31       		.uleb128 0x31
 3860 0146 13       		.uleb128 0x13
 3861 0147 00       		.byte	0
 3862 0148 00       		.byte	0
 3863 0149 1A       		.uleb128 0x1a
 3864 014a 34       		.uleb128 0x34
 3865 014b 00       		.byte	0
 3866 014c 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 94


 3867 014d 08       		.uleb128 0x8
 3868 014e 3A       		.uleb128 0x3a
 3869 014f 0B       		.uleb128 0xb
 3870 0150 3B       		.uleb128 0x3b
 3871 0151 05       		.uleb128 0x5
 3872 0152 49       		.uleb128 0x49
 3873 0153 13       		.uleb128 0x13
 3874 0154 02       		.uleb128 0x2
 3875 0155 17       		.uleb128 0x17
 3876 0156 00       		.byte	0
 3877 0157 00       		.byte	0
 3878 0158 1B       		.uleb128 0x1b
 3879 0159 05       		.uleb128 0x5
 3880 015a 00       		.byte	0
 3881 015b 03       		.uleb128 0x3
 3882 015c 0E       		.uleb128 0xe
 3883 015d 3A       		.uleb128 0x3a
 3884 015e 0B       		.uleb128 0xb
 3885 015f 3B       		.uleb128 0x3b
 3886 0160 05       		.uleb128 0x5
 3887 0161 49       		.uleb128 0x49
 3888 0162 13       		.uleb128 0x13
 3889 0163 02       		.uleb128 0x2
 3890 0164 17       		.uleb128 0x17
 3891 0165 00       		.byte	0
 3892 0166 00       		.byte	0
 3893 0167 1C       		.uleb128 0x1c
 3894 0168 05       		.uleb128 0x5
 3895 0169 00       		.byte	0
 3896 016a 03       		.uleb128 0x3
 3897 016b 0E       		.uleb128 0xe
 3898 016c 3A       		.uleb128 0x3a
 3899 016d 0B       		.uleb128 0xb
 3900 016e 3B       		.uleb128 0x3b
 3901 016f 05       		.uleb128 0x5
 3902 0170 49       		.uleb128 0x49
 3903 0171 13       		.uleb128 0x13
 3904 0172 02       		.uleb128 0x2
 3905 0173 18       		.uleb128 0x18
 3906 0174 00       		.byte	0
 3907 0175 00       		.byte	0
 3908 0176 1D       		.uleb128 0x1d
 3909 0177 2E       		.uleb128 0x2e
 3910 0178 01       		.byte	0x1
 3911 0179 3F       		.uleb128 0x3f
 3912 017a 19       		.uleb128 0x19
 3913 017b 03       		.uleb128 0x3
 3914 017c 0E       		.uleb128 0xe
 3915 017d 3A       		.uleb128 0x3a
 3916 017e 0B       		.uleb128 0xb
 3917 017f 3B       		.uleb128 0x3b
 3918 0180 05       		.uleb128 0x5
 3919 0181 27       		.uleb128 0x27
 3920 0182 19       		.uleb128 0x19
 3921 0183 11       		.uleb128 0x11
 3922 0184 01       		.uleb128 0x1
 3923 0185 12       		.uleb128 0x12
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 95


 3924 0186 06       		.uleb128 0x6
 3925 0187 40       		.uleb128 0x40
 3926 0188 18       		.uleb128 0x18
 3927 0189 9642     		.uleb128 0x2116
 3928 018b 19       		.uleb128 0x19
 3929 018c 01       		.uleb128 0x1
 3930 018d 13       		.uleb128 0x13
 3931 018e 00       		.byte	0
 3932 018f 00       		.byte	0
 3933 0190 1E       		.uleb128 0x1e
 3934 0191 2E       		.uleb128 0x2e
 3935 0192 01       		.byte	0x1
 3936 0193 3F       		.uleb128 0x3f
 3937 0194 19       		.uleb128 0x19
 3938 0195 03       		.uleb128 0x3
 3939 0196 0E       		.uleb128 0xe
 3940 0197 3A       		.uleb128 0x3a
 3941 0198 0B       		.uleb128 0xb
 3942 0199 3B       		.uleb128 0x3b
 3943 019a 05       		.uleb128 0x5
 3944 019b 27       		.uleb128 0x27
 3945 019c 19       		.uleb128 0x19
 3946 019d 49       		.uleb128 0x49
 3947 019e 13       		.uleb128 0x13
 3948 019f 11       		.uleb128 0x11
 3949 01a0 01       		.uleb128 0x1
 3950 01a1 12       		.uleb128 0x12
 3951 01a2 06       		.uleb128 0x6
 3952 01a3 40       		.uleb128 0x40
 3953 01a4 18       		.uleb128 0x18
 3954 01a5 9742     		.uleb128 0x2117
 3955 01a7 19       		.uleb128 0x19
 3956 01a8 01       		.uleb128 0x1
 3957 01a9 13       		.uleb128 0x13
 3958 01aa 00       		.byte	0
 3959 01ab 00       		.byte	0
 3960 01ac 1F       		.uleb128 0x1f
 3961 01ad 34       		.uleb128 0x34
 3962 01ae 00       		.byte	0
 3963 01af 03       		.uleb128 0x3
 3964 01b0 0E       		.uleb128 0xe
 3965 01b1 3A       		.uleb128 0x3a
 3966 01b2 0B       		.uleb128 0xb
 3967 01b3 3B       		.uleb128 0x3b
 3968 01b4 05       		.uleb128 0x5
 3969 01b5 49       		.uleb128 0x49
 3970 01b6 13       		.uleb128 0x13
 3971 01b7 02       		.uleb128 0x2
 3972 01b8 18       		.uleb128 0x18
 3973 01b9 00       		.byte	0
 3974 01ba 00       		.byte	0
 3975 01bb 20       		.uleb128 0x20
 3976 01bc 34       		.uleb128 0x34
 3977 01bd 00       		.byte	0
 3978 01be 03       		.uleb128 0x3
 3979 01bf 0E       		.uleb128 0xe
 3980 01c0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 96


 3981 01c1 0B       		.uleb128 0xb
 3982 01c2 3B       		.uleb128 0x3b
 3983 01c3 05       		.uleb128 0x5
 3984 01c4 49       		.uleb128 0x49
 3985 01c5 13       		.uleb128 0x13
 3986 01c6 02       		.uleb128 0x2
 3987 01c7 17       		.uleb128 0x17
 3988 01c8 00       		.byte	0
 3989 01c9 00       		.byte	0
 3990 01ca 21       		.uleb128 0x21
 3991 01cb 34       		.uleb128 0x34
 3992 01cc 00       		.byte	0
 3993 01cd 03       		.uleb128 0x3
 3994 01ce 0E       		.uleb128 0xe
 3995 01cf 3A       		.uleb128 0x3a
 3996 01d0 0B       		.uleb128 0xb
 3997 01d1 3B       		.uleb128 0x3b
 3998 01d2 05       		.uleb128 0x5
 3999 01d3 49       		.uleb128 0x49
 4000 01d4 13       		.uleb128 0x13
 4001 01d5 1C       		.uleb128 0x1c
 4002 01d6 0B       		.uleb128 0xb
 4003 01d7 00       		.byte	0
 4004 01d8 00       		.byte	0
 4005 01d9 22       		.uleb128 0x22
 4006 01da 26       		.uleb128 0x26
 4007 01db 00       		.byte	0
 4008 01dc 49       		.uleb128 0x49
 4009 01dd 13       		.uleb128 0x13
 4010 01de 00       		.byte	0
 4011 01df 00       		.byte	0
 4012 01e0 23       		.uleb128 0x23
 4013 01e1 2E       		.uleb128 0x2e
 4014 01e2 01       		.byte	0x1
 4015 01e3 3F       		.uleb128 0x3f
 4016 01e4 19       		.uleb128 0x19
 4017 01e5 03       		.uleb128 0x3
 4018 01e6 0E       		.uleb128 0xe
 4019 01e7 3A       		.uleb128 0x3a
 4020 01e8 0B       		.uleb128 0xb
 4021 01e9 3B       		.uleb128 0x3b
 4022 01ea 05       		.uleb128 0x5
 4023 01eb 27       		.uleb128 0x27
 4024 01ec 19       		.uleb128 0x19
 4025 01ed 49       		.uleb128 0x49
 4026 01ee 13       		.uleb128 0x13
 4027 01ef 8701     		.uleb128 0x87
 4028 01f1 19       		.uleb128 0x19
 4029 01f2 11       		.uleb128 0x11
 4030 01f3 01       		.uleb128 0x1
 4031 01f4 12       		.uleb128 0x12
 4032 01f5 06       		.uleb128 0x6
 4033 01f6 40       		.uleb128 0x40
 4034 01f7 18       		.uleb128 0x18
 4035 01f8 9742     		.uleb128 0x2117
 4036 01fa 19       		.uleb128 0x19
 4037 01fb 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 97


 4038 01fc 13       		.uleb128 0x13
 4039 01fd 00       		.byte	0
 4040 01fe 00       		.byte	0
 4041 01ff 24       		.uleb128 0x24
 4042 0200 34       		.uleb128 0x34
 4043 0201 00       		.byte	0
 4044 0202 03       		.uleb128 0x3
 4045 0203 0E       		.uleb128 0xe
 4046 0204 3A       		.uleb128 0x3a
 4047 0205 0B       		.uleb128 0xb
 4048 0206 3B       		.uleb128 0x3b
 4049 0207 0B       		.uleb128 0xb
 4050 0208 49       		.uleb128 0x49
 4051 0209 13       		.uleb128 0x13
 4052 020a 3F       		.uleb128 0x3f
 4053 020b 19       		.uleb128 0x19
 4054 020c 3C       		.uleb128 0x3c
 4055 020d 19       		.uleb128 0x19
 4056 020e 00       		.byte	0
 4057 020f 00       		.byte	0
 4058 0210 25       		.uleb128 0x25
 4059 0211 34       		.uleb128 0x34
 4060 0212 00       		.byte	0
 4061 0213 03       		.uleb128 0x3
 4062 0214 0E       		.uleb128 0xe
 4063 0215 3A       		.uleb128 0x3a
 4064 0216 0B       		.uleb128 0xb
 4065 0217 3B       		.uleb128 0x3b
 4066 0218 0B       		.uleb128 0xb
 4067 0219 49       		.uleb128 0x49
 4068 021a 13       		.uleb128 0x13
 4069 021b 3F       		.uleb128 0x3f
 4070 021c 19       		.uleb128 0x19
 4071 021d 02       		.uleb128 0x2
 4072 021e 18       		.uleb128 0x18
 4073 021f 00       		.byte	0
 4074 0220 00       		.byte	0
 4075 0221 26       		.uleb128 0x26
 4076 0222 34       		.uleb128 0x34
 4077 0223 00       		.byte	0
 4078 0224 03       		.uleb128 0x3
 4079 0225 08       		.uleb128 0x8
 4080 0226 3A       		.uleb128 0x3a
 4081 0227 0B       		.uleb128 0xb
 4082 0228 3B       		.uleb128 0x3b
 4083 0229 0B       		.uleb128 0xb
 4084 022a 49       		.uleb128 0x49
 4085 022b 13       		.uleb128 0x13
 4086 022c 3F       		.uleb128 0x3f
 4087 022d 19       		.uleb128 0x19
 4088 022e 02       		.uleb128 0x2
 4089 022f 18       		.uleb128 0x18
 4090 0230 00       		.byte	0
 4091 0231 00       		.byte	0
 4092 0232 27       		.uleb128 0x27
 4093 0233 34       		.uleb128 0x34
 4094 0234 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 98


 4095 0235 03       		.uleb128 0x3
 4096 0236 0E       		.uleb128 0xe
 4097 0237 3A       		.uleb128 0x3a
 4098 0238 0B       		.uleb128 0xb
 4099 0239 3B       		.uleb128 0x3b
 4100 023a 05       		.uleb128 0x5
 4101 023b 49       		.uleb128 0x49
 4102 023c 13       		.uleb128 0x13
 4103 023d 3F       		.uleb128 0x3f
 4104 023e 19       		.uleb128 0x19
 4105 023f 02       		.uleb128 0x2
 4106 0240 18       		.uleb128 0x18
 4107 0241 00       		.byte	0
 4108 0242 00       		.byte	0
 4109 0243 28       		.uleb128 0x28
 4110 0244 2E       		.uleb128 0x2e
 4111 0245 00       		.byte	0
 4112 0246 3F       		.uleb128 0x3f
 4113 0247 19       		.uleb128 0x19
 4114 0248 3C       		.uleb128 0x3c
 4115 0249 19       		.uleb128 0x19
 4116 024a 6E       		.uleb128 0x6e
 4117 024b 0E       		.uleb128 0xe
 4118 024c 03       		.uleb128 0x3
 4119 024d 0E       		.uleb128 0xe
 4120 024e 3A       		.uleb128 0x3a
 4121 024f 0B       		.uleb128 0xb
 4122 0250 3B       		.uleb128 0x3b
 4123 0251 0B       		.uleb128 0xb
 4124 0252 00       		.byte	0
 4125 0253 00       		.byte	0
 4126 0254 29       		.uleb128 0x29
 4127 0255 2E       		.uleb128 0x2e
 4128 0256 00       		.byte	0
 4129 0257 3F       		.uleb128 0x3f
 4130 0258 19       		.uleb128 0x19
 4131 0259 3C       		.uleb128 0x3c
 4132 025a 19       		.uleb128 0x19
 4133 025b 6E       		.uleb128 0x6e
 4134 025c 0E       		.uleb128 0xe
 4135 025d 03       		.uleb128 0x3
 4136 025e 0E       		.uleb128 0xe
 4137 025f 00       		.byte	0
 4138 0260 00       		.byte	0
 4139 0261 2A       		.uleb128 0x2a
 4140 0262 2E       		.uleb128 0x2e
 4141 0263 00       		.byte	0
 4142 0264 3F       		.uleb128 0x3f
 4143 0265 19       		.uleb128 0x19
 4144 0266 3C       		.uleb128 0x3c
 4145 0267 19       		.uleb128 0x19
 4146 0268 6E       		.uleb128 0x6e
 4147 0269 0E       		.uleb128 0xe
 4148 026a 03       		.uleb128 0x3
 4149 026b 0E       		.uleb128 0xe
 4150 026c 3A       		.uleb128 0x3a
 4151 026d 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 99


 4152 026e 3B       		.uleb128 0x3b
 4153 026f 05       		.uleb128 0x5
 4154 0270 00       		.byte	0
 4155 0271 00       		.byte	0
 4156 0272 00       		.byte	0
 4157              		.section	.debug_loc,"",%progbits
 4158              	.Ldebug_loc0:
 4159              	.LLST0:
 4160 0000 2A000000 		.4byte	.LVL9
 4161 0004 2E000000 		.4byte	.LVL10
 4162 0008 0200     		.2byte	0x2
 4163 000a 30       		.byte	0x30
 4164 000b 9F       		.byte	0x9f
 4165 000c 2E000000 		.4byte	.LVL10
 4166 0010 4A000000 		.4byte	.LVL15
 4167 0014 0100     		.2byte	0x1
 4168 0016 54       		.byte	0x54
 4169 0017 00000000 		.4byte	0
 4170 001b 00000000 		.4byte	0
 4171              	.LLST1:
 4172 001f 00000000 		.4byte	.LVL16
 4173 0023 12000000 		.4byte	.LVL17
 4174 0027 0100     		.2byte	0x1
 4175 0029 50       		.byte	0x50
 4176 002a 12000000 		.4byte	.LVL17
 4177 002e 1C000000 		.4byte	.LFE32
 4178 0032 0400     		.2byte	0x4
 4179 0034 F3       		.byte	0xf3
 4180 0035 01       		.uleb128 0x1
 4181 0036 50       		.byte	0x50
 4182 0037 9F       		.byte	0x9f
 4183 0038 00000000 		.4byte	0
 4184 003c 00000000 		.4byte	0
 4185              	.LLST2:
 4186 0040 08000000 		.4byte	.LVL19
 4187 0044 0B000000 		.4byte	.LVL20-1
 4188 0048 0100     		.2byte	0x1
 4189 004a 50       		.byte	0x50
 4190 004b 00000000 		.4byte	0
 4191 004f 00000000 		.4byte	0
 4192              	.LLST3:
 4193 0053 00000000 		.4byte	.LVL21
 4194 0057 0A000000 		.4byte	.LVL22
 4195 005b 0100     		.2byte	0x1
 4196 005d 50       		.byte	0x50
 4197 005e 0A000000 		.4byte	.LVL22
 4198 0062 0D000000 		.4byte	.LVL23-1
 4199 0066 0400     		.2byte	0x4
 4200 0068 70       		.byte	0x70
 4201 0069 E079     		.sleb128 -800
 4202 006b 9F       		.byte	0x9f
 4203 006c 0D000000 		.4byte	.LVL23-1
 4204 0070 10000000 		.4byte	.LFE36
 4205 0074 0400     		.2byte	0x4
 4206 0076 F3       		.byte	0xf3
 4207 0077 01       		.uleb128 0x1
 4208 0078 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 100


 4209 0079 9F       		.byte	0x9f
 4210 007a 00000000 		.4byte	0
 4211 007e 00000000 		.4byte	0
 4212              	.LLST4:
 4213 0082 1C000000 		.4byte	.LVL26
 4214 0086 EE000000 		.4byte	.LVL43
 4215 008a 0100     		.2byte	0x1
 4216 008c 54       		.byte	0x54
 4217 008d 50010000 		.4byte	.LVL50
 4218 0091 52010000 		.4byte	.LVL51
 4219 0095 0100     		.2byte	0x1
 4220 0097 54       		.byte	0x54
 4221 0098 52010000 		.4byte	.LVL51
 4222 009c 6D010000 		.4byte	.LVL54-1
 4223 00a0 0200     		.2byte	0x2
 4224 00a2 74       		.byte	0x74
 4225 00a3 02       		.sleb128 2
 4226 00a4 00000000 		.4byte	0
 4227 00a8 00000000 		.4byte	0
 4228              	.LLST5:
 4229 00ac 1A000000 		.4byte	.LVL25
 4230 00b0 6B000000 		.4byte	.LVL37-1
 4231 00b4 0100     		.2byte	0x1
 4232 00b6 50       		.byte	0x50
 4233 00b7 B8000000 		.4byte	.LVL39
 4234 00bb BA000000 		.4byte	.LVL40
 4235 00bf 0100     		.2byte	0x1
 4236 00c1 50       		.byte	0x50
 4237 00c2 50010000 		.4byte	.LVL50
 4238 00c6 5E010000 		.4byte	.LVL53
 4239 00ca 0100     		.2byte	0x1
 4240 00cc 50       		.byte	0x50
 4241 00cd 00000000 		.4byte	0
 4242 00d1 00000000 		.4byte	0
 4243              	.LLST6:
 4244 00d5 22000000 		.4byte	.LVL27
 4245 00d9 28000000 		.4byte	.LVL28
 4246 00dd 0200     		.2byte	0x2
 4247 00df 30       		.byte	0x30
 4248 00e0 9F       		.byte	0x9f
 4249 00e1 28000000 		.4byte	.LVL28
 4250 00e5 32000000 		.4byte	.LVL31
 4251 00e9 0100     		.2byte	0x1
 4252 00eb 53       		.byte	0x53
 4253 00ec 34000000 		.4byte	.LVL32
 4254 00f0 3E000000 		.4byte	.LVL33
 4255 00f4 0100     		.2byte	0x1
 4256 00f6 53       		.byte	0x53
 4257 00f7 50000000 		.4byte	.LVL35
 4258 00fb 52000000 		.4byte	.LVL36
 4259 00ff 0100     		.2byte	0x1
 4260 0101 53       		.byte	0x53
 4261 0102 10020000 		.4byte	.LVL56
 4262 0106 16020000 		.4byte	.LVL57
 4263 010a 0200     		.2byte	0x2
 4264 010c 30       		.byte	0x30
 4265 010d 9F       		.byte	0x9f
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 101


 4266 010e 16020000 		.4byte	.LVL57
 4267 0112 20020000 		.4byte	.LVL60
 4268 0116 0100     		.2byte	0x1
 4269 0118 53       		.byte	0x53
 4270 0119 22020000 		.4byte	.LVL61
 4271 011d 31020000 		.4byte	.LVL63-1
 4272 0121 0100     		.2byte	0x1
 4273 0123 53       		.byte	0x53
 4274 0124 00000000 		.4byte	0
 4275 0128 00000000 		.4byte	0
 4276              	.LLST7:
 4277 012c 22000000 		.4byte	.LVL27
 4278 0130 28000000 		.4byte	.LVL28
 4279 0134 0200     		.2byte	0x2
 4280 0136 30       		.byte	0x30
 4281 0137 9F       		.byte	0x9f
 4282 0138 28000000 		.4byte	.LVL28
 4283 013c 2E000000 		.4byte	.LVL29
 4284 0140 0100     		.2byte	0x1
 4285 0142 52       		.byte	0x52
 4286 0143 30000000 		.4byte	.LVL30
 4287 0147 42000000 		.4byte	.LVL34
 4288 014b 0100     		.2byte	0x1
 4289 014d 52       		.byte	0x52
 4290 014e 50000000 		.4byte	.LVL35
 4291 0152 6B000000 		.4byte	.LVL37-1
 4292 0156 0100     		.2byte	0x1
 4293 0158 52       		.byte	0x52
 4294 0159 B8000000 		.4byte	.LVL39
 4295 015d C0000000 		.4byte	.LVL41
 4296 0161 0100     		.2byte	0x1
 4297 0163 52       		.byte	0x52
 4298 0164 50010000 		.4byte	.LVL50
 4299 0168 5C010000 		.4byte	.LVL52
 4300 016c 0100     		.2byte	0x1
 4301 016e 52       		.byte	0x52
 4302 016f 10020000 		.4byte	.LVL56
 4303 0173 16020000 		.4byte	.LVL57
 4304 0177 0200     		.2byte	0x2
 4305 0179 30       		.byte	0x30
 4306 017a 9F       		.byte	0x9f
 4307 017b 16020000 		.4byte	.LVL57
 4308 017f 1C020000 		.4byte	.LVL58
 4309 0183 0100     		.2byte	0x1
 4310 0185 52       		.byte	0x52
 4311 0186 1E020000 		.4byte	.LVL59
 4312 018a 2A020000 		.4byte	.LVL62
 4313 018e 0100     		.2byte	0x1
 4314 0190 52       		.byte	0x52
 4315 0191 00000000 		.4byte	0
 4316 0195 00000000 		.4byte	0
 4317              	.LLST8:
 4318 0199 1E010000 		.4byte	.LVL45
 4319 019d 2E010000 		.4byte	.LVL47
 4320 01a1 0100     		.2byte	0x1
 4321 01a3 53       		.byte	0x53
 4322 01a4 3E010000 		.4byte	.LVL48
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 102


 4323 01a8 42010000 		.4byte	.LVL49
 4324 01ac 0100     		.2byte	0x1
 4325 01ae 53       		.byte	0x53
 4326 01af 00000000 		.4byte	0
 4327 01b3 00000000 		.4byte	0
 4328              	.LLST9:
 4329 01b7 00000000 		.4byte	.LVL66
 4330 01bb 19000000 		.4byte	.LVL68-1
 4331 01bf 0100     		.2byte	0x1
 4332 01c1 50       		.byte	0x50
 4333 01c2 19000000 		.4byte	.LVL68-1
 4334 01c6 24000000 		.4byte	.LFE39
 4335 01ca 0400     		.2byte	0x4
 4336 01cc F3       		.byte	0xf3
 4337 01cd 01       		.uleb128 0x1
 4338 01ce 50       		.byte	0x50
 4339 01cf 9F       		.byte	0x9f
 4340 01d0 00000000 		.4byte	0
 4341 01d4 00000000 		.4byte	0
 4342              	.LLST10:
 4343 01d8 0A000000 		.4byte	.LVL67
 4344 01dc 1E000000 		.4byte	.LVL69
 4345 01e0 0100     		.2byte	0x1
 4346 01e2 54       		.byte	0x54
 4347 01e3 1E000000 		.4byte	.LVL69
 4348 01e7 24000000 		.4byte	.LFE39
 4349 01eb 0500     		.2byte	0x5
 4350 01ed 03       		.byte	0x3
 4351 01ee 00000000 		.4byte	inAuto
 4352 01f2 00000000 		.4byte	0
 4353 01f6 00000000 		.4byte	0
 4354              		.section	.debug_aranges,"",%progbits
 4355 0000 84000000 		.4byte	0x84
 4356 0004 0200     		.2byte	0x2
 4357 0006 00000000 		.4byte	.Ldebug_info0
 4358 000a 04       		.byte	0x4
 4359 000b 00       		.byte	0
 4360 000c 0000     		.2byte	0
 4361 000e 0000     		.2byte	0
 4362 0010 00000000 		.4byte	.LFB43
 4363 0014 24000000 		.4byte	.LFE43-.LFB43
 4364 0018 00000000 		.4byte	.LFB44
 4365 001c 1C000000 		.4byte	.LFE44-.LFB44
 4366 0020 00000000 		.4byte	.LFB45
 4367 0024 60000000 		.4byte	.LFE45-.LFB45
 4368 0028 00000000 		.4byte	.LFB32
 4369 002c 1C000000 		.4byte	.LFE32-.LFB32
 4370 0030 00000000 		.4byte	.LFB33
 4371 0034 1C000000 		.4byte	.LFE33-.LFB33
 4372 0038 00000000 		.4byte	.LFB34
 4373 003c 18000000 		.4byte	.LFE34-.LFB34
 4374 0040 00000000 		.4byte	.LFB36
 4375 0044 10000000 		.4byte	.LFE36-.LFB36
 4376 0048 00000000 		.4byte	.LFB37
 4377 004c 44000000 		.4byte	.LFE37-.LFB37
 4378 0050 00000000 		.4byte	.LFB35
 4379 0054 A0020000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 103


 4380 0058 00000000 		.4byte	.LFB38
 4381 005c 30000000 		.4byte	.LFE38-.LFB38
 4382 0060 00000000 		.4byte	.LFB39
 4383 0064 24000000 		.4byte	.LFE39-.LFB39
 4384 0068 00000000 		.4byte	.LFB40
 4385 006c 50010000 		.4byte	.LFE40-.LFB40
 4386 0070 00000000 		.4byte	.LFB42
 4387 0074 BC000000 		.4byte	.LFE42-.LFB42
 4388 0078 00000000 		.4byte	.LFB41
 4389 007c 38010000 		.4byte	.LFE41-.LFB41
 4390 0080 00000000 		.4byte	0
 4391 0084 00000000 		.4byte	0
 4392              		.section	.debug_ranges,"",%progbits
 4393              	.Ldebug_ranges0:
 4394 0000 00000000 		.4byte	.LFB43
 4395 0004 24000000 		.4byte	.LFE43
 4396 0008 00000000 		.4byte	.LFB44
 4397 000c 1C000000 		.4byte	.LFE44
 4398 0010 00000000 		.4byte	.LFB45
 4399 0014 60000000 		.4byte	.LFE45
 4400 0018 00000000 		.4byte	.LFB32
 4401 001c 1C000000 		.4byte	.LFE32
 4402 0020 00000000 		.4byte	.LFB33
 4403 0024 1C000000 		.4byte	.LFE33
 4404 0028 00000000 		.4byte	.LFB34
 4405 002c 18000000 		.4byte	.LFE34
 4406 0030 00000000 		.4byte	.LFB36
 4407 0034 10000000 		.4byte	.LFE36
 4408 0038 00000000 		.4byte	.LFB37
 4409 003c 44000000 		.4byte	.LFE37
 4410 0040 00000000 		.4byte	.LFB35
 4411 0044 A0020000 		.4byte	.LFE35
 4412 0048 00000000 		.4byte	.LFB38
 4413 004c 30000000 		.4byte	.LFE38
 4414 0050 00000000 		.4byte	.LFB39
 4415 0054 24000000 		.4byte	.LFE39
 4416 0058 00000000 		.4byte	.LFB40
 4417 005c 50010000 		.4byte	.LFE40
 4418 0060 00000000 		.4byte	.LFB42
 4419 0064 BC000000 		.4byte	.LFE42
 4420 0068 00000000 		.4byte	.LFB41
 4421 006c 38010000 		.4byte	.LFE41
 4422 0070 00000000 		.4byte	0
 4423 0074 00000000 		.4byte	0
 4424              		.section	.debug_line,"",%progbits
 4425              	.Ldebug_line0:
 4426 0000 83040000 		.section	.debug_str,"MS",%progbits,1
 4426      02006302 
 4426      00000201 
 4426      FB0E0D00 
 4426      01010101 
 4427              	.LASF174:
 4428 0000 43794465 		.ascii	"CyDelay\000"
 4428      6C617900 
 4429              	.LASF141:
 4430 0008 72784D65 		.ascii	"rxMessage\000"
 4430      73736167 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 104


 4430      6500
 4431              	.LASF182:
 4432 0012 6D61696E 		.ascii	"main.c\000"
 4432      2E6300
 4433              	.LASF78:
 4434 0019 6D6F746F 		.ascii	"motor_current\000"
 4434      725F6375 
 4434      7272656E 
 4434      7400
 4435              	.LASF109:
 4436 0027 62726D73 		.ascii	"brmsRG4Mask\000"
 4436      5247344D 
 4436      61736B00 
 4437              	.LASF83:
 4438 0033 74786D73 		.ascii	"txmsClear\000"
 4438      436C6561 
 4438      7200
 4439              	.LASF93:
 4440 003d 6F757470 		.ascii	"output\000"
 4440      757400
 4441              	.LASF91:
 4442 0044 4D6F746F 		.ascii	"MotorCurrentRead\000"
 4442      72437572 
 4442      72656E74 
 4442      52656164 
 4442      00
 4443              	.LASF105:
 4444 0055 62726D73 		.ascii	"brmsTask\000"
 4444      5461736B 
 4444      00
 4445              	.LASF61:
 4446 005e 65666673 		.ascii	"effsetdelta\000"
 4446      65746465 
 4446      6C746100 
 4447              	.LASF37:
 4448 006a 6673456E 		.ascii	"fsEncoder\000"
 4448      636F6465 
 4448      7200
 4449              	.LASF31:
 4450 0074 6373556E 		.ascii	"csUnconfig\000"
 4450      636F6E66 
 4450      696700
 4451              	.LASF101:
 4452 007f 6E657741 		.ascii	"newAuto\000"
 4452      75746F00 
 4453              	.LASF15:
 4454 0087 756E7369 		.ascii	"unsigned int\000"
 4454      676E6564 
 4454      20696E74 
 4454      00
 4455              	.LASF106:
 4456 0094 62726D73 		.ascii	"brmsRG1Mask\000"
 4456      5247314D 
 4456      61736B00 
 4457              	.LASF178:
 4458 00a0 436F756E 		.ascii	"Counter_1_Start\000"
 4458      7465725F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 105


 4458      315F5374 
 4458      61727400 
 4459              	.LASF103:
 4460 00b0 72756E52 		.ascii	"runRateGroup1_PID\000"
 4460      61746547 
 4460      726F7570 
 4460      315F5049 
 4460      4400
 4461              	.LASF65:
 4462 00c2 636C6561 		.ascii	"clearfaults\000"
 4462      72666175 
 4462      6C747300 
 4463              	.LASF8:
 4464 00ce 5F5F696E 		.ascii	"__int32_t\000"
 4464      7433325F 
 4464      7400
 4465              	.LASF149:
 4466 00d8 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 4466      5F494E5F 
 4466      436C6561 
 4466      72496E74 
 4466      65727275 
 4467              	.LASF180:
 4468 00ef 4C45445F 		.ascii	"LED_Write\000"
 4468      57726974 
 4468      6500
 4469              	.LASF87:
 4470 00f9 486F6D65 		.ascii	"HomeIsrHandler\000"
 4470      49737248 
 4470      616E646C 
 4470      657200
 4471              	.LASF85:
 4472 0108 74784D65 		.ascii	"txMessageStates_t\000"
 4472      73736167 
 4472      65537461 
 4472      7465735F 
 4472      7400
 4473              	.LASF90:
 4474 011a 436C6561 		.ascii	"ClearFault\000"
 4474      72466175 
 4474      6C7400
 4475              	.LASF173:
 4476 0125 4932435F 		.ascii	"I2C_Start\000"
 4476      53746172 
 4476      7400
 4477              	.LASF126:
 4478 012f 4C617374 		.ascii	"LastMoveStableCount\000"
 4478      4D6F7665 
 4478      53746162 
 4478      6C65436F 
 4478      756E7400 
 4479              	.LASF113:
 4480 0143 4C617374 		.ascii	"LastJog\000"
 4480      4A6F6700 
 4481              	.LASF32:
 4482 014b 63735265 		.ascii	"csReady\000"
 4482      61647900 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 106


 4483              	.LASF154:
 4484 0153 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 4484      315F5370 
 4484      69556172 
 4484      74436C65 
 4484      61725478 
 4485              	.LASF21:
 4486 016e 75696E74 		.ascii	"uint32_t\000"
 4486      33325F74 
 4486      00
 4487              	.LASF16:
 4488 0177 696E7438 		.ascii	"int8_t\000"
 4488      5F7400
 4489              	.LASF50:
 4490 017e 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 4490      73736167 
 4490      655F6F70 
 4490      636F6465 
 4490      735F7400 
 4491              	.LASF66:
 4492 0192 72784D65 		.ascii	"rxMessage_status_t\000"
 4492      73736167 
 4492      655F7374 
 4492      61747573 
 4492      5F7400
 4493              	.LASF89:
 4494 01a5 41737365 		.ascii	"AssertFault\000"
 4494      72744661 
 4494      756C7400 
 4495              	.LASF24:
 4496 01b1 666C6F61 		.ascii	"float\000"
 4496      7400
 4497              	.LASF171:
 4498 01b7 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 4498      7370695F 
 4498      73735F53 
 4498      74617274 
 4498      457800
 4499              	.LASF51:
 4500 01ca 63686563 		.ascii	"checksum\000"
 4500      6B73756D 
 4500      00
 4501              	.LASF71:
 4502 01d3 73657465 		.ascii	"setenc\000"
 4502      6E6300
 4503              	.LASF18:
 4504 01da 696E7431 		.ascii	"int16_t\000"
 4504      365F7400 
 4505              	.LASF95:
 4506 01e2 72657375 		.ascii	"result\000"
 4506      6C7400
 4507              	.LASF14:
 4508 01e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 4508      206C6F6E 
 4508      6720756E 
 4508      7369676E 
 4508      65642069 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 107


 4509              	.LASF118:
 4510 0200 5049445F 		.ascii	"PID_EffSetDelta\000"
 4510      45666653 
 4510      65744465 
 4510      6C746100 
 4511              	.LASF119:
 4512 0210 6C617374 		.ascii	"lastTime\000"
 4512      54696D65 
 4512      00
 4513              	.LASF138:
 4514 0219 4D6F746F 		.ascii	"MotorCurrent\000"
 4514      72437572 
 4514      72656E74 
 4514      00
 4515              	.LASF6:
 4516 0226 5F5F7569 		.ascii	"__uint16_t\000"
 4516      6E743136 
 4516      5F7400
 4517              	.LASF63:
 4518 0231 656E6162 		.ascii	"enable\000"
 4518      6C6500
 4519              	.LASF177:
 4520 0238 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4520      315F5772 
 4520      69746550 
 4520      6572696F 
 4520      6400
 4521              	.LASF134:
 4522 024a 436F6E66 		.ascii	"ConfigState\000"
 4522      69675374 
 4522      61746500 
 4523              	.LASF59:
 4524 0256 6C696D69 		.ascii	"limitOutput\000"
 4524      744F7574 
 4524      70757400 
 4525              	.LASF181:
 4526 0262 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4526      43313120 
 4526      352E342E 
 4526      31203230 
 4526      31363036 
 4527 0295 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4527      20726576 
 4527      6973696F 
 4527      6E203233 
 4527      37373135 
 4528 02c8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4528      66756E63 
 4528      74696F6E 
 4528      2D736563 
 4528      74696F6E 
 4529              	.LASF168:
 4530 02f0 6973725F 		.ascii	"isr_home_SetPriority\000"
 4530      686F6D65 
 4530      5F536574 
 4530      5072696F 
 4530      72697479 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 108


 4531              	.LASF165:
 4532 0305 6973725F 		.ascii	"isr_brms_StartEx\000"
 4532      62726D73 
 4532      5F537461 
 4532      72744578 
 4532      00
 4533              	.LASF164:
 4534 0316 54696D65 		.ascii	"Timer_BRMS_Start\000"
 4534      725F4252 
 4534      4D535F53 
 4534      74617274 
 4534      00
 4535              	.LASF102:
 4536 0327 5F426F6F 		.ascii	"_Bool\000"
 4536      6C00
 4537              	.LASF36:
 4538 032d 6673556E 		.ascii	"fsUnconfigured\000"
 4538      636F6E66 
 4538      69677572 
 4538      656400
 4539              	.LASF112:
 4540 033c 696E4175 		.ascii	"inAuto\000"
 4540      746F00
 4541              	.LASF13:
 4542 0343 5F5F7569 		.ascii	"__uint64_t\000"
 4542      6E743634 
 4542      5F7400
 4543              	.LASF158:
 4544 034e 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 4544      315F5370 
 4544      69556172 
 4544      74507574 
 4544      41727261 
 4545              	.LASF150:
 4546 0364 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 4546      73735F43 
 4546      6C656172 
 4546      496E7465 
 4546      72727570 
 4547              	.LASF131:
 4548 037a 55707469 		.ascii	"UptimeMilliseconds\000"
 4548      6D654D69 
 4548      6C6C6973 
 4548      65636F6E 
 4548      647300
 4549              	.LASF157:
 4550 038d 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 4550      7465725F 
 4550      315F5265 
 4550      6164436F 
 4550      756E7465 
 4551              	.LASF72:
 4552 03a3 76657273 		.ascii	"version0\000"
 4552      696F6E30 
 4552      00
 4553              	.LASF73:
 4554 03ac 76657273 		.ascii	"version1\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 109


 4554      696F6E31 
 4554      00
 4555              	.LASF74:
 4556 03b5 76657273 		.ascii	"version2\000"
 4556      696F6E32 
 4556      00
 4557              	.LASF54:
 4558 03be 72784D65 		.ascii	"rxMessage_overlay_t\000"
 4558      73736167 
 4558      655F6F76 
 4558      65726C61 
 4558      795F7400 
 4559              	.LASF120:
 4560 03d2 506F7369 		.ascii	"Position\000"
 4560      74696F6E 
 4560      00
 4561              	.LASF26:
 4562 03db 63686172 		.ascii	"char\000"
 4562      00
 4563              	.LASF81:
 4564 03e0 6C617374 		.ascii	"last_move_time\000"
 4564      5F6D6F76 
 4564      655F7469 
 4564      6D6500
 4565              	.LASF161:
 4566 03ef 5049445F 		.ascii	"PID_UpdateValues\000"
 4566      55706461 
 4566      74655661 
 4566      6C756573 
 4566      00
 4567              	.LASF99:
 4568 0400 5049445F 		.ascii	"PID_SetMode\000"
 4568      5365744D 
 4568      6F646500 
 4569              	.LASF92:
 4570 040c 50574D5F 		.ascii	"PWM_Set\000"
 4570      53657400 
 4571              	.LASF104:
 4572 0414 42524D53 		.ascii	"BRMS_Interrupt\000"
 4572      5F496E74 
 4572      65727275 
 4572      707400
 4573              	.LASF153:
 4574 0423 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 4574      315F5370 
 4574      69556172 
 4574      74436C65 
 4574      61725278 
 4575              	.LASF53:
 4576 043e 6F70636F 		.ascii	"opcode\000"
 4576      646500
 4577              	.LASF60:
 4578 0445 6C696D69 		.ascii	"limitIterm\000"
 4578      74497465 
 4578      726D00
 4579              	.LASF17:
 4580 0450 75696E74 		.ascii	"uint8_t\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 110


 4580      385F7400 
 4581              	.LASF70:
 4582 0458 73746174 		.ascii	"status\000"
 4582      757300
 4583              	.LASF38:
 4584 045f 6673496E 		.ascii	"fsIndex\000"
 4584      64657800 
 4585              	.LASF147:
 4586 0467 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 4586      785F436F 
 4586      756E7465 
 4586      725F315F 
 4586      57726974 
 4587              	.LASF156:
 4588 0484 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4588      315F5772 
 4588      69746543 
 4588      6F6D7061 
 4588      726500
 4589              	.LASF35:
 4590 0497 66734E4F 		.ascii	"fsNONE\000"
 4590      4E4500
 4591              	.LASF144:
 4592 049e 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 4592      7273745F 
 4592      656E636F 
 4592      6465725F 
 4592      436C6561 
 4593              	.LASF172:
 4594 04bb 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 4594      7370695F 
 4594      73735F53 
 4594      65745072 
 4594      696F7269 
 4595              	.LASF127:
 4596 04d2 4C617374 		.ascii	"LastMoveTimeUsec\000"
 4596      4D6F7665 
 4596      54696D65 
 4596      55736563 
 4596      00
 4597              	.LASF12:
 4598 04e3 6C6F6E67 		.ascii	"long long int\000"
 4598      206C6F6E 
 4598      6720696E 
 4598      7400
 4599              	.LASF162:
 4600 04f1 54696D65 		.ascii	"Timer_BRMS_ClearInterrupt\000"
 4600      725F4252 
 4600      4D535F43 
 4600      6C656172 
 4600      496E7465 
 4601              	.LASF40:
 4602 050b 66734368 		.ascii	"fsChecksum\000"
 4602      65636B73 
 4602      756D00
 4603              	.LASF151:
 4604 0516 7370695F 		.ascii	"spi_ss_Read\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 111


 4604      73735F52 
 4604      65616400 
 4605              	.LASF111:
 4606 0522 69746572 		.ascii	"iterm_delay\000"
 4606      6D5F6465 
 4606      6C617900 
 4607              	.LASF4:
 4608 052e 5F5F696E 		.ascii	"__int16_t\000"
 4608      7431365F 
 4608      7400
 4609              	.LASF160:
 4610 0538 494E4445 		.ascii	"INDEX_OUT_SetDriveMode\000"
 4610      585F4F55 
 4610      545F5365 
 4610      74447269 
 4610      76654D6F 
 4611              	.LASF186:
 4612 054f 6D656D73 		.ascii	"memset\000"
 4612      657400
 4613              	.LASF132:
 4614 0556 55707469 		.ascii	"UptimeMillisecondsAccumulator\000"
 4614      6D654D69 
 4614      6C6C6973 
 4614      65636F6E 
 4614      64734163 
 4615              	.LASF77:
 4616 0574 63686563 		.ascii	"checksum_errors\000"
 4616      6B73756D 
 4616      5F657272 
 4616      6F727300 
 4617              	.LASF52:
 4618 0584 73697A65 		.ascii	"size\000"
 4618      00
 4619              	.LASF183:
 4620 0589 433A5C55 		.ascii	"C:\\Users\\prichards\\proj\\acsnb-motor-cypress\\Qu"
 4620      73657273 
 4620      5C707269 
 4620      63686172 
 4620      64735C70 
 4621 05b7 6164456E 		.ascii	"adEncoderRTOS.cydsn\000"
 4621      636F6465 
 4621      7252544F 
 4621      532E6379 
 4621      64736E00 
 4622              	.LASF23:
 4623 05cb 75696E74 		.ascii	"uint32\000"
 4623      333200
 4624              	.LASF84:
 4625 05d2 74786D73 		.ascii	"txmsLoaded\000"
 4625      4C6F6164 
 4625      656400
 4626              	.LASF139:
 4627 05dd 43757272 		.ascii	"CurrentI2Cinbuf\000"
 4627      656E7449 
 4627      3243696E 
 4627      62756600 
 4628              	.LASF152:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 112


 4629 05ed 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 4629      315F5370 
 4629      69556172 
 4629      74526561 
 4629      64527844 
 4630              	.LASF121:
 4631 0605 4C617374 		.ascii	"LastPosition\000"
 4631      506F7369 
 4631      74696F6E 
 4631      00
 4632              	.LASF142:
 4633 0612 74784D65 		.ascii	"txMessage\000"
 4633      73736167 
 4633      6500
 4634              	.LASF146:
 4635 061c 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 4635      7465725F 
 4635      315F5772 
 4635      69746543 
 4635      6F756E74 
 4636              	.LASF128:
 4637 0633 4E657743 		.ascii	"NewCommandedMove\000"
 4637      6F6D6D61 
 4637      6E646564 
 4637      4D6F7665 
 4637      00
 4638              	.LASF88:
 4639 0644 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 4639      53535F49 
 4639      73724861 
 4639      6E646C65 
 4639      7200
 4640              	.LASF0:
 4641 0656 5F5F696E 		.ascii	"__int8_t\000"
 4641      74385F74 
 4641      00
 4642              	.LASF34:
 4643 065f 436F6E66 		.ascii	"ConfigStates_t\000"
 4643      69675374 
 4643      61746573 
 4643      5F7400
 4644              	.LASF96:
 4645 066e 72756E52 		.ascii	"runRateGroup3_SPI\000"
 4645      61746547 
 4645      726F7570 
 4645      335F5350 
 4645      4900
 4646              	.LASF166:
 4647 0680 6973725F 		.ascii	"isr_brms_SetPriority\000"
 4647      62726D73 
 4647      5F536574 
 4647      5072696F 
 4647      72697479 
 4648              	.LASF28:
 4649 0695 6C6F6E67 		.ascii	"long double\000"
 4649      20646F75 
 4649      626C6500 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 113


 4650              	.LASF155:
 4651 06a1 67657443 		.ascii	"getCurrent_mA\000"
 4651      75727265 
 4651      6E745F6D 
 4651      4100
 4652              	.LASF19:
 4653 06af 75696E74 		.ascii	"uint16_t\000"
 4653      31365F74 
 4653      00
 4654              	.LASF27:
 4655 06b8 72656733 		.ascii	"reg32\000"
 4655      3200
 4656              	.LASF30:
 4657 06be 6373554E 		.ascii	"csUNDEFINED\000"
 4657      44454649 
 4657      4E454400 
 4658              	.LASF55:
 4659 06ca 73657175 		.ascii	"sequence\000"
 4659      656E6365 
 4659      00
 4660              	.LASF122:
 4661 06d3 4F757470 		.ascii	"Output\000"
 4661      757400
 4662              	.LASF69:
 4663 06da 636F6E66 		.ascii	"config\000"
 4663      696700
 4664              	.LASF39:
 4665 06e1 66734375 		.ascii	"fsCurrentRead\000"
 4665      7272656E 
 4665      74526561 
 4665      6400
 4666              	.LASF5:
 4667 06ef 73686F72 		.ascii	"short int\000"
 4667      7420696E 
 4667      7400
 4668              	.LASF62:
 4669 06f9 72784D65 		.ascii	"rxMessage_config_t\000"
 4669      73736167 
 4669      655F636F 
 4669      6E666967 
 4669      5F7400
 4670              	.LASF115:
 4671 070c 5049445F 		.ascii	"PID_Was_Enabled\000"
 4671      5761735F 
 4671      456E6162 
 4671      6C656400 
 4672              	.LASF114:
 4673 071c 5049445F 		.ascii	"PID_Enabled\000"
 4673      456E6162 
 4673      6C656400 
 4674              	.LASF100:
 4675 0728 4D6F6465 		.ascii	"Mode\000"
 4675      00
 4676              	.LASF110:
 4677 072d 62726D73 		.ascii	"brmsRG5Mask\000"
 4677      5247354D 
 4677      61736B00 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 114


 4678              	.LASF9:
 4679 0739 6C6F6E67 		.ascii	"long int\000"
 4679      20696E74 
 4679      00
 4680              	.LASF33:
 4681 0742 63734D41 		.ascii	"csMAX\000"
 4681      5800
 4682              	.LASF68:
 4683 0748 6F766572 		.ascii	"overlay\000"
 4683      6C617900 
 4684              	.LASF176:
 4685 0750 50574D5F 		.ascii	"PWM_1_Start\000"
 4685      315F5374 
 4685      61727400 
 4686              	.LASF124:
 4687 075c 4C617374 		.ascii	"LastMoveStartTimeUsec\000"
 4687      4D6F7665 
 4687      53746172 
 4687      7454696D 
 4687      65557365 
 4688              	.LASF97:
 4689 0772 64697374 		.ascii	"distance\000"
 4689      616E6365 
 4689      00
 4690              	.LASF159:
 4691 077b 484F4D45 		.ascii	"HOME_OUT_SetDriveMode\000"
 4691      5F4F5554 
 4691      5F536574 
 4691      44726976 
 4691      654D6F64 
 4692              	.LASF94:
 4693 0791 52617750 		.ascii	"RawPosition\000"
 4693      6F736974 
 4693      696F6E00 
 4694              	.LASF140:
 4695 079d 4C617374 		.ascii	"LastMessageTimeSeconds\000"
 4695      4D657373 
 4695      61676554 
 4695      696D6553 
 4695      65636F6E 
 4696              	.LASF108:
 4697 07b4 62726D73 		.ascii	"brmsRG3Mask\000"
 4697      5247334D 
 4697      61736B00 
 4698              	.LASF82:
 4699 07c0 74784D65 		.ascii	"txMessage_t\000"
 4699      73736167 
 4699      655F7400 
 4700              	.LASF22:
 4701 07cc 75696E74 		.ascii	"uint64_t\000"
 4701      36345F74 
 4701      00
 4702              	.LASF64:
 4703 07d5 73657470 		.ascii	"setpoint\000"
 4703      6F696E74 
 4703      00
 4704              	.LASF107:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 115


 4705 07de 62726D73 		.ascii	"brmsRG2Mask\000"
 4705      5247324D 
 4705      61736B00 
 4706              	.LASF184:
 4707 07ea 47657450 		.ascii	"GetPosition\000"
 4707      6F736974 
 4707      696F6E00 
 4708              	.LASF133:
 4709 07f6 55707469 		.ascii	"UptimeSeconds\000"
 4709      6D655365 
 4709      636F6E64 
 4709      7300
 4710              	.LASF170:
 4711 0804 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 4711      7273745F 
 4711      656E636F 
 4711      6465725F 
 4711      53657450 
 4712              	.LASF116:
 4713 0820 5049445F 		.ascii	"PID_Setpoint\000"
 4713      53657470 
 4713      6F696E74 
 4713      00
 4714              	.LASF1:
 4715 082d 5F5F7569 		.ascii	"__uint8_t\000"
 4715      6E74385F 
 4715      7400
 4716              	.LASF47:
 4717 0837 6F705374 		.ascii	"opStatus\000"
 4717      61747573 
 4717      00
 4718              	.LASF49:
 4719 0840 6F704D41 		.ascii	"opMAX\000"
 4719      5800
 4720              	.LASF137:
 4721 0846 43686563 		.ascii	"ChecksumErrors\000"
 4721      6B73756D 
 4721      4572726F 
 4721      727300
 4722              	.LASF29:
 4723 0855 73697A65 		.ascii	"sizetype\000"
 4723      74797065 
 4723      00
 4724              	.LASF11:
 4725 085e 6C6F6E67 		.ascii	"long unsigned int\000"
 4725      20756E73 
 4725      69676E65 
 4725      6420696E 
 4725      7400
 4726              	.LASF20:
 4727 0870 696E7433 		.ascii	"int32_t\000"
 4727      325F7400 
 4728              	.LASF129:
 4729 0878 55707469 		.ascii	"UptimeMicroseconds\000"
 4729      6D654D69 
 4729      63726F73 
 4729      65636F6E 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 116


 4729      647300
 4730              	.LASF58:
 4731 088b 6F766572 		.ascii	"overrideKd\000"
 4731      72696465 
 4731      4B6400
 4732              	.LASF75:
 4733 0896 73746174 		.ascii	"state\000"
 4733      6500
 4734              	.LASF57:
 4735 089c 6F766572 		.ascii	"overrideKi\000"
 4735      72696465 
 4735      4B6900
 4736              	.LASF56:
 4737 08a7 6F766572 		.ascii	"overrideKp\000"
 4737      72696465 
 4737      4B7000
 4738              	.LASF175:
 4739 08b2 5350495F 		.ascii	"SPI_1_Start\000"
 4739      315F5374 
 4739      61727400 
 4740              	.LASF3:
 4741 08be 756E7369 		.ascii	"unsigned char\000"
 4741      676E6564 
 4741      20636861 
 4741      7200
 4742              	.LASF10:
 4743 08cc 5F5F7569 		.ascii	"__uint32_t\000"
 4743      6E743332 
 4743      5F7400
 4744              	.LASF45:
 4745 08d7 6F70554E 		.ascii	"opUNDEFINED\000"
 4745      44454649 
 4745      4E454400 
 4746              	.LASF48:
 4747 08e3 6F705365 		.ascii	"opSetEnc\000"
 4747      74456E63 
 4747      00
 4748              	.LASF135:
 4749 08ec 4661756C 		.ascii	"FaultState\000"
 4749      74537461 
 4749      746500
 4750              	.LASF41:
 4751 08f7 66735832 		.ascii	"fsX2\000"
 4751      00
 4752              	.LASF42:
 4753 08fc 66735833 		.ascii	"fsX3\000"
 4753      00
 4754              	.LASF43:
 4755 0901 66735834 		.ascii	"fsX4\000"
 4755      00
 4756              	.LASF136:
 4757 0906 436F6E66 		.ascii	"ConfigSequence\000"
 4757      69675365 
 4757      7175656E 
 4757      636500
 4758              	.LASF123:
 4759 0915 686F6D69 		.ascii	"homingDone\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 117


 4759      6E67446F 
 4759      6E6500
 4760              	.LASF125:
 4761 0920 4C617374 		.ascii	"LastMoveEndTimeUsec\000"
 4761      4D6F7665 
 4761      456E6454 
 4761      696D6555 
 4761      73656300 
 4762              	.LASF145:
 4763 0934 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 4763      745F456E 
 4763      636F6465 
 4763      725F436C 
 4763      65617249 
 4764              	.LASF67:
 4765 0951 72784D65 		.ascii	"rxMessage_setenc_t\000"
 4765      73736167 
 4765      655F7365 
 4765      74656E63 
 4765      5F7400
 4766              	.LASF163:
 4767 0964 50524F42 		.ascii	"PROBE_Write\000"
 4767      455F5772 
 4767      69746500 
 4768              	.LASF167:
 4769 0970 6973725F 		.ascii	"isr_home_StartEx\000"
 4769      686F6D65 
 4769      5F537461 
 4769      72744578 
 4769      00
 4770              	.LASF2:
 4771 0981 7369676E 		.ascii	"signed char\000"
 4771      65642063 
 4771      68617200 
 4772              	.LASF7:
 4773 098d 73686F72 		.ascii	"short unsigned int\000"
 4773      7420756E 
 4773      7369676E 
 4773      65642069 
 4773      6E7400
 4774              	.LASF98:
 4775 09a0 5049445F 		.ascii	"PID_Initialize\000"
 4775      496E6974 
 4775      69616C69 
 4775      7A6500
 4776              	.LASF185:
 4777 09af 6D61696E 		.ascii	"main\000"
 4777      00
 4778              	.LASF80:
 4779 09b4 69746572 		.ascii	"iterm\000"
 4779      6D00
 4780              	.LASF25:
 4781 09ba 646F7562 		.ascii	"double\000"
 4781      6C6500
 4782              	.LASF179:
 4783 09c1 496E6465 		.ascii	"Index_Counter_1_Start\000"
 4783      785F436F 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\cc1kIYgn.s 			page 118


 4783      756E7465 
 4783      725F315F 
 4783      53746172 
 4784              	.LASF130:
 4785 09d7 55707469 		.ascii	"UptimeMicrosecondsAccumulator\000"
 4785      6D654D69 
 4785      63726F73 
 4785      65636F6E 
 4785      64734163 
 4786              	.LASF46:
 4787 09f5 6F70436F 		.ascii	"opConfig\000"
 4787      6E666967 
 4787      00
 4788              	.LASF169:
 4789 09fe 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 4789      7273745F 
 4789      656E636F 
 4789      6465725F 
 4789      53746172 
 4790              	.LASF148:
 4791 0a16 6973725F 		.ascii	"isr_home_ClearPending\000"
 4791      686F6D65 
 4791      5F436C65 
 4791      61725065 
 4791      6E64696E 
 4792              	.LASF76:
 4793 0a2c 6661756C 		.ascii	"fault\000"
 4793      7400
 4794              	.LASF86:
 4795 0a32 52535449 		.ascii	"RSTIsrHandler\000"
 4795      73724861 
 4795      6E646C65 
 4795      7200
 4796              	.LASF79:
 4797 0a40 706F7369 		.ascii	"position\000"
 4797      74696F6E 
 4797      00
 4798              	.LASF44:
 4799 0a49 4661756C 		.ascii	"FaultStates_t\000"
 4799      74537461 
 4799      7465735F 
 4799      7400
 4800              	.LASF143:
 4801 0a57 74784D65 		.ascii	"txMessageState\000"
 4801      73736167 
 4801      65537461 
 4801      746500
 4802              	.LASF117:
 4803 0a66 5049445F 		.ascii	"PID_EffectiveSetpoint\000"
 4803      45666665 
 4803      63746976 
 4803      65536574 
 4803      706F696E 
 4804              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
