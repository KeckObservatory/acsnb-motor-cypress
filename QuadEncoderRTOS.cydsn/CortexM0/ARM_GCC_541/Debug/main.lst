ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RSTIsrHandler,"ax",%progbits
  20              		.align	2
  21              		.global	RSTIsrHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	RSTIsrHandler, %function
  25              	RSTIsrHandler:
  26              	.LFB46:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Author: Paul Richards, W.M. Keck Observatory
   4:main.c        **** *   (Adapted from original non-RTOS version from Kona Scientific, JP Fumo)
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This file provides a SPI interface for the Quadrature Encoder for the ACS project.
   8:main.c        **** *  The I2C device provides readback of motor current consumption.
   9:main.c        **** *
  10:main.c        **** * History:
  11:main.c        **** * 12/18/18 PMR  Rev: B  Implement checksummed messaging and max PWM limiting
  12:main.c        **** * 10/11/18 PMR  Rev: A  Implement PWM functions for PDI control
  13:main.c        **** * 07/31/18 PMR  Rev: NC Initial Release after port from Kona Scientific code
  14:main.c        **** *******************************************************************************/
  15:main.c        **** #include <FreeRTOS.h>
  16:main.c        **** #include <semphr.h>
  17:main.c        **** #include <task.h>
  18:main.c        **** #include <I2C_I2C.h>
  19:main.c        **** #include <stdbool.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include "INA219.h"
  23:main.c        **** 
  24:main.c        **** /* Debugging - undefine this for a production system that needs to watchdog */
  25:main.c        **** #define DEBUG_PROBE_ATTACHED 1
  26:main.c        **** 
  27:main.c        **** /* --------------------------------------------------------------------- 
  28:main.c        ****  * CONSTANTS
  29:main.c        ****  * --------------------------------------------------------------------- */
  30:main.c        **** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 2


  31:main.c        **** /* Interrupt priorities (not to be confused with RTOS task priorities) */
  32:main.c        **** #define NESTED_ISR                             (1u)
  33:main.c        **** #define DEFAULT_PRIORITY                       (3u)
  34:main.c        **** #define HIGHER_PRIORITY                        (2u)
  35:main.c        **** 
  36:main.c        **** /* Interrupt prototypes */
  37:main.c        **** CY_ISR_PROTO(HomeIsrHandler);
  38:main.c        **** CY_ISR_PROTO(RSTIsrHandler);
  39:main.c        **** CY_ISR_PROTO(SPI_IsrHandler);
  40:main.c        **** CY_ISR_PROTO(SPI_SS_IsrHandler);
  41:main.c        **** 
  42:main.c        **** /* --------------------------------------------------------------------- 
  43:main.c        ****  * WDT Defines
  44:main.c        ****  *
  45:main.c        ****  * ILO clock is 32KHz (approx. 31ms/count)
  46:main.c        ****  * We will allow the CPU to stall for 2 full seconds before forcibly
  47:main.c        ****  * resetting.  That comes to 64,000 counts for that 2 seconds.
  48:main.c        ****  * --------------------------------------------------------------------- */
  49:main.c        **** #define WDT_COUNT1_REFRESH()                   CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET)
  50:main.c        **** #define WDT_COUNT1_MATCH_RESET                 (0xFA00u)
  51:main.c        **** 
  52:main.c        **** /* --------------------------------------------------------------------- 
  53:main.c        ****  * PWM Defines
  54:main.c        ****  * --------------------------------------------------------------------- */
  55:main.c        **** #define PWM_15KHZ_PERIOD 1600
  56:main.c        **** #define PWM_PCT_TO_COMPARE(x) trunc((float) x * (PWM_15KHZ_PERIOD/100))
  57:main.c        **** #define PWM_IDLE 50.0
  58:main.c        **** 
  59:main.c        **** /* TI INA219 Zero-Drift, Bidirectional Current/Power Monitor With I2C Interface */
  60:main.c        **** #define INA219_I2C_ADDR                        (0x40)
  61:main.c        **** #define INA219_CAL_VALUE                       (8192)
  62:main.c        **** 
  63:main.c        **** volatile int8 Jog, Last_Jog;
  64:main.c        **** int8 PWM_Max_Fwd, PWM_Max_Rev;
  65:main.c        **** 
  66:main.c        **** /* Neutral PWM jog is a 50% duty cycle */
  67:main.c        **** #define PWM_JOG_NEUTRAL                        (50)
  68:main.c        **** 
  69:main.c        **** /* PWM maximum current value clipped to +/- X% duty cycle around the center (50 by default, full po
  70:main.c        **** #define PWM_MAX_MAGNITUDE                      (50) 
  71:main.c        **** 
  72:main.c        **** /* --------------------------------------------------------------------- 
  73:main.c        ****  * PID Defines
  74:main.c        ****  * --------------------------------------------------------------------- */
  75:main.c        **** bool PID_Enabled, PID_Was_Enabled;
  76:main.c        **** uint32 PID_Setpoint;
  77:main.c        **** 
  78:main.c        **** uint32 lastTime;
  79:main.c        **** float Output;
  80:main.c        **** float ITerm, lastPosition;
  81:main.c        **** float refKp, refKi, refKd;
  82:main.c        **** float kp, ki, kd;
  83:main.c        **** uint32 refSampleTime = 5; // Default to 5ms
  84:main.c        **** float outMin, outMax;
  85:main.c        **** bool inAuto = false;
  86:main.c        ****  
  87:main.c        **** #define PID_MANUAL 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 3


  88:main.c        **** #define PID_AUTOMATIC 1
  89:main.c        **** 
  90:main.c        **** /* --------------------------------------------------------------------- 
  91:main.c        ****  * ENCODER PROPERTIES
  92:main.c        ****  * --------------------------------------------------------------------- */
  93:main.c        **** #define ENCODER_MAX                            (0x00800000)
  94:main.c        **** #define ENCODER_COUNTS_PER_INDEX               (10000)
  95:main.c        **** 
  96:main.c        **** /* --------------------------------------------------------------------- 
  97:main.c        ****  * INA219 REGISTERS
  98:main.c        ****  * --------------------------------------------------------------------- */
  99:main.c        **** #define INA219_REG_CONFIG                      (0x00)
 100:main.c        **** #define INA219_REG_SHUNTVOLTAGE                (0x01)
 101:main.c        **** #define INA219_REG_BUSVOLTAGE                  (0x02)
 102:main.c        **** #define INA219_REG_POWER                       (0x03)
 103:main.c        **** #define INA219_REG_CURRENT                     (0x04)
 104:main.c        **** #define INA219_REG_CALIBRATION                 (0x05)
 105:main.c        **** 
 106:main.c        **** /* ****************************
 107:main.c        ****  * INA219 CONFIG REGISTER (R/W)
 108:main.c        ****  * **************************** */
 109:main.c        **** #define INA219_CONFIG_RESET                    (0x8000)  // Reset Bit
 110:main.c        **** 
 111:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_MASK       (0x2000)  // Bus Voltage Range Mask
 112:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_16V        (0x0000)  // 0-16V Range
 113:main.c        **** #define INA219_CONFIG_BVOLTAGERANGE_32V        (0x2000)  // 0-32V Range
 114:main.c        **** 
 115:main.c        **** #define INA219_CONFIG_GAIN_MASK                (0x1800)  // Gain Mask
 116:main.c        **** #define INA219_CONFIG_GAIN_1_40MV              (0x0000)  // Gain 1, 40mV Range
 117:main.c        **** #define INA219_CONFIG_GAIN_2_80MV              (0x0800)  // Gain 2, 80mV Range
 118:main.c        **** #define INA219_CONFIG_GAIN_4_160MV             (0x1000)  // Gain 4, 160mV Range
 119:main.c        **** #define INA219_CONFIG_GAIN_8_320MV             (0x1800)  // Gain 8, 320mV Range
 120:main.c        **** 
 121:main.c        **** #define INA219_CONFIG_BADCRES_MASK             (0x0780)  // Bus ADC Resolution Mask
 122:main.c        **** #define INA219_CONFIG_BADCRES_9BIT             (0x0080)  // 9-bit bus res = 0..511
 123:main.c        **** #define INA219_CONFIG_BADCRES_10BIT            (0x0100)  // 10-bit bus res = 0..1023
 124:main.c        **** #define INA219_CONFIG_BADCRES_11BIT            (0x0200)  // 11-bit bus res = 0..2047
 125:main.c        **** #define INA219_CONFIG_BADCRES_12BIT            (0x0400)  // 12-bit bus res = 0..4097
 126:main.c        **** 
 127:main.c        **** #define INA219_CONFIG_SADCRES_MASK             (0x0078)  // Shunt ADC Resolution and Averaging Mask
 128:main.c        **** #define INA219_CONFIG_SADCRES_9BIT_1S_84US     (0x0000)  // 1 x 9-bit shunt sample
 129:main.c        **** #define INA219_CONFIG_SADCRES_10BIT_1S_148US   (0x0008)  // 1 x 10-bit shunt sample
 130:main.c        **** #define INA219_CONFIG_SADCRES_11BIT_1S_276US   (0x0010)  // 1 x 11-bit shunt sample
 131:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_1S_532US   (0x0018)  // 1 x 12-bit shunt sample
 132:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_2S_1060US  (0x0048)	 // 2 x 12-bit shunt samples averaged toget
 133:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_4S_2130US  (0x0050)  // 4 x 12-bit shunt samples averaged toget
 134:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_8S_4260US  (0x0058)  // 8 x 12-bit shunt samples averaged toget
 135:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_16S_8510US (0x0060)  // 16 x 12-bit shunt samples averaged toge
 136:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_32S_17MS   (0x0068)  // 32 x 12-bit shunt samples averaged toge
 137:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_64S_34MS   (0x0070)  // 64 x 12-bit shunt samples averaged toge
 138:main.c        **** #define INA219_CONFIG_SADCRES_12BIT_128S_69MS  (0x0078)  // 128 x 12-bit shunt samples averaged tog
 139:main.c        **** 
 140:main.c        **** #define INA219_CONFIG_MODE_MASK                (0x0007)  // Operating Mode Mask
 141:main.c        **** #define INA219_CONFIG_MODE_POWERDOWN           (0x0000)
 142:main.c        **** #define INA219_CONFIG_MODE_SVOLT_TRIGGERED     (0x0001)
 143:main.c        **** #define INA219_CONFIG_MODE_BVOLT_TRIGGERED     (0x0002)
 144:main.c        **** #define INA219_CONFIG_MODE_SANDBVOLT_TRIGGERED (0x0003)
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 4


 145:main.c        **** #define INA219_CONFIG_MODE_ADCOFF              (0x0004)
 146:main.c        **** #define INA219_CONFIG_MODE_SVOLT_CONTINUOUS    (0x0005)
 147:main.c        **** #define INA219_CONFIG_MODE_BVOLT_CONTINUOUS    (0x0006)
 148:main.c        **** #define INA219_CONFIG_MODE_SANDBVOLT_CONTINUOUS (0x0007)	
 149:main.c        **** 
 150:main.c        **** 
 151:main.c        **** /* --------------------------------------------------------------------- 
 152:main.c        ****  * RTOS INTERFACES
 153:main.c        ****  * --------------------------------------------------------------------- */
 154:main.c        **** /* Define macros for delaying a task by an amount, returning control back to the OS.
 155:main.c        ****    We have to sleep in OS ticks, so compute how many that is and sleep that long.
 156:main.c        ****    Minimum sleep time is 1ms. */
 157:main.c        **** #define Sleep(MSToSleep)    vTaskDelay( ( MSToSleep * 1000 ) / configTICK_RATE_HZ )
 158:main.c        **** 
 159:main.c        **** 
 160:main.c        **** /* --------------------------------------------------------------------- 
 161:main.c        ****  * GLOBALS
 162:main.c        ****  * --------------------------------------------------------------------- */
 163:main.c        **** /* Coarse reporting of state back to the node box software */
 164:main.c        **** typedef enum {    
 165:main.c        ****     csUNDEFINED   = 0,  /* Invalid state */
 166:main.c        ****     csUnconfig    = 1,  /* Unconfigured, freshly rebooted */
 167:main.c        ****     csReady       = 2,  /* Configuration complete and ready for commands */
 168:main.c        ****     csMAX    
 169:main.c        **** } ConfigStates_t;
 170:main.c        **** 
 171:main.c        **** #define configStateValid(s) ( ((ConfigStates_t) s > csUNDEFINED) && ((ConfigStates_t) s < csMAX) )
 172:main.c        **** 
 173:main.c        **** /* Fault codes, these are bit encoded into a uint8 */
 174:main.c        **** typedef enum {
 175:main.c        ****     fsNONE         = 0b00000000,    /* No faults detected */
 176:main.c        ****     fsUnconfigured = 0b00000001,    /* Attempt to move an unconfigured system */
 177:main.c        ****     fsEncoder      = 0b00000010,    /* One or more encoder phases not changing during a move */
 178:main.c        ****     fsIndex        = 0b00000100,    /* Index marks not seen during a move */
 179:main.c        ****     fsCurrentRead  = 0b00001000,    /* Unable to read current from INA219 device */
 180:main.c        ****     fsChecksum     = 0b00010000,    /* Too many checksum faults */
 181:main.c        ****     fsX2           = 0b00100000,    /* */
 182:main.c        ****     fsX3           = 0b01000000,    /* */
 183:main.c        ****     fsX4           = 0b10000000     /* */
 184:main.c        **** } FaultStates_t;
 185:main.c        **** 
 186:main.c        **** volatile ConfigStates_t ConfigState;
 187:main.c        **** volatile uint8 FaultState;
 188:main.c        **** volatile uint8 ConfigSequence;
 189:main.c        **** volatile uint16 ChecksumErrors;
 190:main.c        **** volatile uint16 Current;
 191:main.c        **** volatile float PWM;
 192:main.c        **** volatile uint32 PID_Last_Position;
 193:main.c        **** uint8 CurrentI2Cinbuf[20];
 194:main.c        **** 
 195:main.c        **** /* Task stack information */
 196:main.c        **** volatile UBaseType_t uxHighWaterMark_PID;
 197:main.c        **** volatile UBaseType_t uxHighWaterMark_Current;
 198:main.c        **** volatile UBaseType_t uxHighWaterMark_Comm;
 199:main.c        **** 
 200:main.c        **** /* Message buffer lock */
 201:main.c        **** SemaphoreHandle_t Lock;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 5


 202:main.c        **** 
 203:main.c        **** /* --------------------------------------------------------------------- 
 204:main.c        ****  * SPI MESSAGING
 205:main.c        ****  * --------------------------------------------------------------------- */
 206:main.c        **** /* V2 protocol 
 207:main.c        **** 
 208:main.c        ****    1) Messages have opcodes (configuration, position, get status)
 209:main.c        ****    2) Messages are validated by a checksum instead of an arbitrary signature pattern.
 210:main.c        ****    3) Transfer the max message size every time, regardless of all bytes used or not.
 211:main.c        **** 
 212:main.c        **** */
 213:main.c        ****     
 214:main.c        **** /* Set this to match the size of the status response message, 18 bytes */    
 215:main.c        **** #define MAX_MESSAGE_SIZE 30
 216:main.c        ****     
 217:main.c        **** /* Remember the last time a message came in so we can timeout moves if the node box stops 
 218:main.c        ****    talking.  5000 ticks is 1 second of not talking. */
 219:main.c        **** #define MAX_LAST_MESSAGE_TIME_TICKS 1000
 220:main.c        **** uint32 LastMessageTimeTick;
 221:main.c        **** 
 222:main.c        **** /* Opcodes that can come from the node box software */
 223:main.c        **** typedef enum {
 224:main.c        ****     opUNDEFINED = 0,
 225:main.c        ****     opConfig    = 1,
 226:main.c        ****     opStatus    = 2,
 227:main.c        ****     opError     = 3,
 228:main.c        ****     opMAX       
 229:main.c        **** } rxMessage_opcodes_t;    
 230:main.c        **** 
 231:main.c        **** /* Sanity check for opcodes */
 232:main.c        **** #define rxMessageOpcodeValid(op) ( ((rxMessage_opcodes_t) op > opUNDEFINED) && ((rxMessage_opcodes_
 233:main.c        **** 
 234:main.c        **** typedef struct { 
 235:main.c        ****     uint8 checksum;        
 236:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 237:main.c        ****     uint8 opcode;     /* Operation (generic overlay for previewing opcode value) */
 238:main.c        **** } __attribute__ ((__packed__)) rxMessage_overlay_t;
 239:main.c        **** 
 240:main.c        **** /* Configuration message, 17 bytes */
 241:main.c        **** typedef struct {
 242:main.c        ****     uint8 checksum;        
 243:main.c        ****     uint8 size;       /* Size of the message bytes, including opcode and size and checksum */
 244:main.c        ****     uint8 opcode;     /* Operation: 01 == config */        
 245:main.c        ****     uint8 sequence;   /* Configuration message sequence number */
 246:main.c        ****     float Kp;         /* PID constants to be used in calculation */
 247:main.c        ****     float Ki;
 248:main.c        ****     float Kd;
 249:main.c        ****     uint8 limit;      /* PWM duty cycle (speed) limit, +/- percent */
 250:main.c        **** } __attribute__ ((__packed__)) rxMessage_config_t;
 251:main.c        **** 
 252:main.c        **** /* Status message, contains desired position and such values, 12 bytes */
 253:main.c        **** typedef struct {
 254:main.c        ****     uint8  checksum;        
 255:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 256:main.c        ****     uint8  opcode;     /* Operation: 02 == status */
 257:main.c        ****     uint8  enable;     /* Enable/disable PID algorithm */
 258:main.c        ****     uint32 setpoint;   /* Setpoint (desired actuator position) */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 6


 259:main.c        ****     int8   jog;        /* Jog value, to manually move the motor; valid range -100 to 100 */ 
 260:main.c        ****     uint8  clearfaults;/* Set to nonzero to clear all the current faults */
 261:main.c        **** } __attribute__ ((__packed__)) rxMessage_status_t;
 262:main.c        ****    
 263:main.c        **** 
 264:main.c        **** 
 265:main.c        **** /* Wrap the message with an array of bytes */
 266:main.c        **** union {
 267:main.c        ****     uint8               buf[MAX_MESSAGE_SIZE];
 268:main.c        ****     rxMessage_overlay_t overlay;
 269:main.c        ****     rxMessage_config_t  config;
 270:main.c        ****     rxMessage_status_t  status;  
 271:main.c        **** } rxMessage;
 272:main.c        **** 
 273:main.c        **** /* Message back to the BBB, watch out for alignment here by packing the structure (should be 18 byt
 274:main.c        **** typedef struct  {  
 275:main.c        ****     uint8  checksum;   /* Message checksum */    
 276:main.c        ****     uint8  size;       /* Size of the message bytes, including opcode and size and checksum */
 277:main.c        ****     uint8  opcode;     /* Echo back of the opcode this response is for, operation: 03 == status */
 278:main.c        ****     uint8  state;      /* Enum value for current device configuration state */ 
 279:main.c        ****     uint8  fault;      /* Bit encoded fields for current fault status */
 280:main.c        ****     uint8  sequence;   /* Echo back the config sequence number currently set */
 281:main.c        ****     uint16 checksum_errors; /* Count of checksum errors */
 282:main.c        ****     uint16 current;    /* Motor current consumption (mA) */
 283:main.c        ****     uint32 position;   /* Actual actuator position */ 
 284:main.c        ****     float pwm;         /* PWM value the motor is moving at */     
 285:main.c        **** } __attribute__ ((__packed__)) txMessage_t;
 286:main.c        **** 
 287:main.c        **** /* Wrap the message with an array of bytes */
 288:main.c        **** union {    
 289:main.c        ****     uint8       buf[MAX_MESSAGE_SIZE];
 290:main.c        ****     txMessage_t msg;
 291:main.c        **** } txMessage;
 292:main.c        **** 
 293:main.c        **** /* State machine definition for transmit side of messaging */
 294:main.c        **** typedef enum {
 295:main.c        ****     txmsClear,    /* Transmit message buffer is empty and needs loading */
 296:main.c        ****     txmsLoaded    /* Transmit message buffer has been loaded by the message thread for sending */
 297:main.c        **** } txMessageStates_t;
 298:main.c        **** 
 299:main.c        **** txMessageStates_t txMessageState;
 300:main.c        **** 
 301:main.c        ****     
 302:main.c        **** 
 303:main.c        **** /*******************************************************************************
 304:main.c        **** * Function Name: setupFreeRTOS
 305:main.c        **** ********************************************************************************
 306:main.c        **** * Summary:
 307:main.c        **** *  Hooks the tick and service handlers for the RTOS at runtime.
 308:main.c        **** *
 309:main.c        **** * Parameters: None
 310:main.c        **** * Return: None
 311:main.c        **** *******************************************************************************/
 312:main.c        **** 
 313:main.c        **** extern void xPortPendSVHandler(void);
 314:main.c        **** extern void xPortSysTickHandler(void);
 315:main.c        **** extern void vPortSVCHandler(void);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 7


 316:main.c        **** 
 317:main.c        **** void setupFreeRTOS(void) {
 318:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 319:main.c        ****     
 320:main.c        ****     /* Handler for Cortex Supervisor Call (SVC, formerly SWI) - address 11 */
 321:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SVCall_IRQn, (cyisraddress)vPortSVCHandler );
 322:main.c        ****     
 323:main.c        ****     /* Handler for Cortex PendSV Call - address 14 */
 324:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + PendSV_IRQn, (cyisraddress)xPortPendSVHandler );    
 325:main.c        ****     
 326:main.c        ****     /* Handler for Cortex SYSTICK - address 15 */
 327:main.c        ****     CyIntSetSysVector( CORTEX_INTERRUPT_BASE + SysTick_IRQn, (cyisraddress)xPortSysTickHandler );
 328:main.c        **** }
 329:main.c        **** 
 330:main.c        **** 
 331:main.c        **** /*******************************************************************************
 332:main.c        **** * Function Name: AssertFault
 333:main.c        **** ********************************************************************************
 334:main.c        **** * Summary:
 335:main.c        **** *  Sets a flag that a particular fault has been detected.  Assert fsNONE to clear
 336:main.c        **** *  all faults.
 337:main.c        **** *
 338:main.c        **** * Parameters: FaultStates_t of the fault detected.
 339:main.c        **** * Return: None
 340:main.c        **** *******************************************************************************/
 341:main.c        **** void AssertFault(FaultStates_t fault) {
 342:main.c        ****  
 343:main.c        ****     switch (fault) {
 344:main.c        ****      
 345:main.c        ****         /* Clears all asserted faults */
 346:main.c        ****         case fsNONE:
 347:main.c        ****             FaultState = fsNONE;
 348:main.c        ****             break;        
 349:main.c        ****         
 350:main.c        ****         /* Any other fault has its bit turned on in the fault status */
 351:main.c        ****         default:
 352:main.c        ****             FaultState |= fault;
 353:main.c        ****             break;        
 354:main.c        ****     }    
 355:main.c        **** }
 356:main.c        **** 
 357:main.c        **** 
 358:main.c        **** /*******************************************************************************
 359:main.c        **** * Function Name: ClearFault
 360:main.c        **** ********************************************************************************
 361:main.c        **** * Summary:
 362:main.c        **** *  Clears a flag that a particular fault has been detected.  Assert fsNONE to clear
 363:main.c        **** *  all faults.
 364:main.c        **** *
 365:main.c        **** * Parameters: FaultStates_t of the fault to be cleared.
 366:main.c        **** * Return: None
 367:main.c        **** *******************************************************************************/
 368:main.c        **** void ClearFault(FaultStates_t fault) {
 369:main.c        ****  
 370:main.c        ****     switch (fault) {
 371:main.c        ****      
 372:main.c        ****         /* Clears all asserted faults */
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 8


 373:main.c        ****         case fsNONE:
 374:main.c        ****             FaultState = fsNONE;
 375:main.c        ****             break;        
 376:main.c        ****         
 377:main.c        ****         /* Any other fault has its bit turned off in the fault status */
 378:main.c        ****         default:
 379:main.c        ****             FaultState &= ~fault;
 380:main.c        ****             break;        
 381:main.c        ****     }    
 382:main.c        **** }
 383:main.c        **** 
 384:main.c        **** 
 385:main.c        **** /*******************************************************************************
 386:main.c        **** * Function Name: Current_Read_Task
 387:main.c        **** ********************************************************************************
 388:main.c        **** * Summary:
 389:main.c        **** *  RTOS task to read the motor current consumption.
 390:main.c        **** *
 391:main.c        **** * Parameters: None
 392:main.c        **** * Return: None
 393:main.c        **** *******************************************************************************/
 394:main.c        **** void Current_Read_Task(void *arg) {
 395:main.c        ****     
 396:main.c        **** //#ifdef zero
 397:main.c        ****     volatile uint32 err;
 398:main.c        ****     uint8 byteMSB;
 399:main.c        ****     uint8 byteLSB;
 400:main.c        **** //#endif
 401:main.c        **** 
 402:main.c        ****     volatile uint16 CurrentTemp;
 403:main.c        ****     uint8 foo = 0;
 404:main.c        ****     
 405:main.c        ****     /* Initial high water mark reading */
 406:main.c        ****     uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
 407:main.c        ****     
 408:main.c        ****     //TODO Init_INA(INA219_I2C_ADDR);
 409:main.c        ****     
 410:main.c        ****     while (1) {
 411:main.c        ****         LED_Write(foo);
 412:main.c        ****         PROBE_Write(foo);
 413:main.c        **** 
 414:main.c        ****         if (foo) { foo = 0; } else { foo = 1; }
 415:main.c        ****         
 416:main.c        ****         //TODO CurrentTemp = getCurrent_raw(INA219_I2C_ADDR);
 417:main.c        ****         
 418:main.c        ****         
 419:main.c        **** //#ifdef zero        
 420:main.c        ****         err = I2C_I2CMasterSendStart(INA219_I2C_ADDR, 0x00, 10); // send start condition for the IN
 421:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 422:main.c        ****             
 423:main.c        ****             I2C_I2CMasterWriteByte(INA219_REG_CALIBRATION, 10);
 424:main.c        ****             
 425:main.c        ****             byteMSB = (uint8)((INA219_CAL_VALUE & 0xFF00) >> 8);
 426:main.c        ****             I2C_I2CMasterWriteByte(byteMSB, 10);
 427:main.c        ****             
 428:main.c        ****             byteLSB = (uint8)(INA219_CAL_VALUE & 0x00FF);
 429:main.c        ****             I2C_I2CMasterWriteByte(byteLSB, 10);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 9


 430:main.c        ****             I2C_I2CMasterSendStop(10);
 431:main.c        ****         } else {
 432:main.c        ****             Current = 0;
 433:main.c        ****             AssertFault(fsCurrentRead);
 434:main.c        ****         }
 435:main.c        ****         
 436:main.c        ****         err = I2C_I2CMasterSendStart(INA219_I2C_ADDR, 0x00, 10); // send start condition for the IN
 437:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 438:main.c        ****             
 439:main.c        ****             I2C_I2CMasterWriteByte(INA219_REG_CURRENT, 10);
 440:main.c        ****             I2C_I2CMasterSendStop(10);
 441:main.c        ****             
 442:main.c        ****             /* Read back the value for the current usage */
 443:main.c        ****             err = I2C_I2CMasterReadBuf(INA219_I2C_ADDR, CurrentI2Cinbuf, 5, 1);
 444:main.c        ****             
 445:main.c        ****             /* Reassemble the current value into a 16 bit value */
 446:main.c        ****             if (err == I2C_I2C_MSTR_NO_ERROR) {
 447:main.c        ****                 CurrentTemp = (uint16)(CurrentI2Cinbuf[0] << 8) + CurrentI2Cinbuf[1];
 448:main.c        ****             } else {
 449:main.c        ****                 CurrentTemp = 0;   
 450:main.c        ****                 AssertFault(fsCurrentRead);
 451:main.c        ****             }
 452:main.c        ****         } else {
 453:main.c        ****             CurrentTemp = 0; 
 454:main.c        ****             AssertFault(fsCurrentRead);
 455:main.c        ****         }
 456:main.c        **** //#endif
 457:main.c        **** 
 458:main.c        **** 
 459:main.c        ****         /* Perform the assignment as one operation, to make it as atomic as possible (may need more
 460:main.c        ****         Current = CurrentTemp;
 461:main.c        **** 
 462:main.c        ****         /* Read the current at 2Hz */        
 463:main.c        ****         Sleep(500);
 464:main.c        ****         
 465:main.c        ****         /* Get our task stack usage high water mark */    
 466:main.c        ****         uxHighWaterMark_Current = uxTaskGetStackHighWaterMark( NULL );
 467:main.c        ****     }
 468:main.c        ****    
 469:main.c        **** }
 470:main.c        **** 
 471:main.c        **** /*******************************************************************************
 472:main.c        **** * Function Name: Comm_Task
 473:main.c        **** ********************************************************************************
 474:main.c        **** * Summary:
 475:main.c        **** *  RTOS task to perform the SPI communications.
 476:main.c        **** *
 477:main.c        **** * Parameters: None
 478:main.c        **** * Return: None
 479:main.c        **** *******************************************************************************/
 480:main.c        **** void Comm_Task(void *arg) {
 481:main.c        ****  
 482:main.c        ****     rxMessage_opcodes_t opcode;
 483:main.c        ****     uint8 size;
 484:main.c        ****     uint8 i;
 485:main.c        ****     uint8 checksum;
 486:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 10


 487:main.c        ****     /* Initial high water mark reading */
 488:main.c        ****     uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );  
 489:main.c        ****     
 490:main.c        ****     while (1) {
 491:main.c        ****         
 492:main.c        ****         /* If the SPI is moving data out right now, skip any touching of the message buffer */
 493:main.c        ****         if (!SPI_1_SpiIsBusBusy()) {
 494:main.c        ****         
 495:main.c        ****             /* In certain states, this thread is responsible for loading the outbound messaging */
 496:main.c        ****             switch (txMessageState) {
 497:main.c        ****              
 498:main.c        ****                 /* Output buffer is clear and ready for loading, rxMessage is (probably) good and n
 499:main.c        ****                 case txmsClear:
 500:main.c        **** 
 501:main.c        ****                     /* Take the lock, set the fields, and release the lock.  If we can't get the lo
 502:main.c        ****                        we have missed this messaging cycle have to skip it.
 503:main.c        ****                        2018-12-18 PMR: At the moment, this is the only task taking the lock so it w
 504:main.c        ****                                        Sometime in the future we might need the lock so I am leavin
 505:main.c        ****                     */
 506:main.c        ****                     if( xSemaphoreTake( Lock, ( TickType_t ) 4 ) == pdTRUE ) {
 507:main.c        ****                         
 508:main.c        ****                         /* Get a few items out of the message before checking the sum */
 509:main.c        ****                         size     = rxMessage.overlay.size;
 510:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 511:main.c        ****                         
 512:main.c        ****                         /* Make sure the size makes sense.  If we have to reset the size it's proba
 513:main.c        ****                         if (size > sizeof(txMessage.buf))
 514:main.c        ****                             size = sizeof(txMessage.buf);                            
 515:main.c        ****                     
 516:main.c        ****                         /* Calculate the checksum by summing the bytes of the entire message, it sh
 517:main.c        ****                         for (i = 0, checksum = 0; i < size; i++)
 518:main.c        ****                             checksum += rxMessage.buf[i]; 
 519:main.c        **** 
 520:main.c        ****                         /* Checksum fault, don't try to process the messgage */
 521:main.c        ****                         if ((checksum & 0xFF) != 0) {
 522:main.c        ****                             
 523:main.c        ****                             txMessage.msg.opcode = opcode;
 524:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 525:main.c        ****                             ChecksumErrors++;
 526:main.c        ****                             
 527:main.c        ****                         /* Message looks fine, process it */
 528:main.c        ****                         } else {
 529:main.c        **** 
 530:main.c        ****                             /* Message opcode must be valid before trying to process the message co
 531:main.c        ****                             if ( rxMessageOpcodeValid(opcode) ) {                            
 532:main.c        ****                             
 533:main.c        ****                                 switch (opcode) {
 534:main.c        ****                                 
 535:main.c        ****                                     case opConfig:
 536:main.c        ****                                         /* Special message to establish settings on the device such
 537:main.c        ****                                     
 538:main.c        ****                                         /* Update the 'reference' values passed down from the serve
 539:main.c        ****                                            values are time interval adjusted */
 540:main.c        ****                                         refKp = rxMessage.config.Kp;
 541:main.c        ****                                         refKi = rxMessage.config.Ki;
 542:main.c        ****                                         refKd = rxMessage.config.Kd;                               
 543:main.c        ****                                            
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 11


 544:main.c        ****                                         /* Setup the PWM limits and stop a jog if one was in progre
 545:main.c        ****                                         Jog = 0;
 546:main.c        ****                                         PWM_Max_Fwd = PWM_JOG_NEUTRAL + rxMessage.config.limit;
 547:main.c        ****                                         PWM_Max_Rev = PWM_JOG_NEUTRAL - rxMessage.config.limit;    
 548:main.c        ****                                     
 549:main.c        ****                                         /* We have received a config message, so signal to the PID 
 550:main.c        ****                                         ConfigState = csReady;  
 551:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 552:main.c        ****                                     
 553:main.c        ****                                         /* Clear all the faults when reconfigured */
 554:main.c        ****                                         ClearFault(fsNONE);
 555:main.c        ****                                         break;
 556:main.c        **** 
 557:main.c        ****                                     case opStatus:
 558:main.c        ****                                         /* The normal message telling us where to go, how much to j
 559:main.c        ****                                         PID_Enabled = (bool) rxMessage.status.enable;
 560:main.c        ****                                         
 561:main.c        ****                                         /* If we are commanded to move somewhere else, remember whe
 562:main.c        ****                                         if (PID_Setpoint != rxMessage.status.setpoint) {
 563:main.c        ****                                             
 564:main.c        ****                                             /* Remember where we started */
 565:main.c        ****                                             PID_Last_Position = Counter_1_ReadCounter();      
 566:main.c        ****                                             
 567:main.c        ****                                             /* Update destination */
 568:main.c        ****                                             PID_Setpoint = rxMessage.status.setpoint;
 569:main.c        ****                                             
 570:main.c        ****                                             /* Reset counting of index marks */
 571:main.c        ****                                             Index_Counter_1_WriteCounter(0);
 572:main.c        ****                                         }                                        
 573:main.c        ****                                     
 574:main.c        ****                                         /* PWM jog value ranges from -50 to 50, where -50 is max-re
 575:main.c        ****                                         Jog = rxMessage.status.jog;                                
 576:main.c        ****                                         break;
 577:main.c        ****                                     
 578:main.c        ****                                     /* No other opcodes are valid */
 579:main.c        ****                                     default:
 580:main.c        ****                                         break;
 581:main.c        ****                                 }                           
 582:main.c        ****                             }                            
 583:main.c        ****                         }
 584:main.c        ****                         
 585:main.c        ****                         /* Fill out the common reponse the same way every time, as a status respons
 586:main.c        ****                         txMessage.msg.checksum = 0;                            
 587:main.c        ****                         txMessage.msg.opcode   = opStatus;
 588:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 589:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 590:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 591:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 592:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 593:main.c        ****                         txMessage.msg.position = Counter_1_ReadCounter();
 594:main.c        ****                         txMessage.msg.pwm      = PWM;
 595:main.c        ****                         txMessage.msg.current  = Current;                            
 596:main.c        ****                         
 597:main.c        ****                         /* Set the checksum in the response */
 598:main.c        ****                         for (i = 0, checksum = 0; i < sizeof(txMessage_t); i++)
 599:main.c        ****                             checksum += txMessage.buf[i]; 
 600:main.c        ****                             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 12


 601:main.c        ****                         /* Take the 2's complement of the sum and put it back in the message */
 602:main.c        ****                         txMessage.msg.checksum = ~checksum + 1;
 603:main.c        ****                             
 604:main.c        ****                         /* Copy the readied buffer out to the FIFO */
 605:main.c        ****                         //TODO: should we clear this here, or at the end of the transmit complete i
 606:main.c        ****                         SPI_1_SpiUartPutArray(txMessage.buf, sizeof(txMessage.buf)); 
 607:main.c        **** 
 608:main.c        ****                         /* Indicate it's loaded for use */
 609:main.c        ****                         txMessageState = txmsLoaded;
 610:main.c        ****                         
 611:main.c        ****                         /* Clear all the faults if told to */
 612:main.c        ****                         if ((bool) rxMessage.status.clearfaults)
 613:main.c        ****                             ClearFault(fsNONE);
 614:main.c        ****                     
 615:main.c        ****                         /* Release the lock */
 616:main.c        ****                         xSemaphoreGive( Lock );
 617:main.c        ****                     }            
 618:main.c        ****                 
 619:main.c        ****                     break;
 620:main.c        ****             
 621:main.c        ****                 /* A message was already readied for transmission, nothing to do here */
 622:main.c        ****                 case txmsLoaded:
 623:main.c        ****                     
 624:main.c        ****                     break;
 625:main.c        ****             }
 626:main.c        ****             
 627:main.c        ****         }
 628:main.c        ****         
 629:main.c        ****         /* Quick sleep, a whole messaging sequence will take maybe 1.5ms */
 630:main.c        ****         Sleep(1);
 631:main.c        ****         
 632:main.c        ****         /* Get our task stack usage high water mark */    
 633:main.c        ****         uxHighWaterMark_Comm = uxTaskGetStackHighWaterMark( NULL );
 634:main.c        ****     }
 635:main.c        **** }
 636:main.c        ****     
 637:main.c        **** 
 638:main.c        **** 
 639:main.c        **** 
 640:main.c        **** /*******************************************************************************
 641:main.c        **** * Function Name: PWM_Set
 642:main.c        **** ********************************************************************************
 643:main.c        **** * Summary:
 644:main.c        **** *  Sets the duty cycle of the PWM at the output pin.
 645:main.c        **** *
 646:main.c        **** * Parameters: Duty cycle, in percent.
 647:main.c        **** * Return: None
 648:main.c        **** *******************************************************************************/
 649:main.c        **** void PWM_Set(float dutycycle) {
 650:main.c        ****     
 651:main.c        ****     float drive = dutycycle;
 652:main.c        **** 
 653:main.c        ****     /* Clip to the configured mix/max */
 654:main.c        ****     if (drive > PWM_Max_Fwd) {
 655:main.c        ****         drive = PWM_Max_Fwd;
 656:main.c        ****     } else if (drive < PWM_Max_Rev) {
 657:main.c        ****         drive = PWM_Max_Rev;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 13


 658:main.c        ****     }
 659:main.c        ****     
 660:main.c        ****     /* If somehow misconfigured to go even higher, clip to the max/min of the drive */
 661:main.c        ****     if (drive > 100) {
 662:main.c        ****         drive = 100;
 663:main.c        ****     } else if (drive < 0) {
 664:main.c        ****         drive = 0;
 665:main.c        ****     }
 666:main.c        ****     
 667:main.c        ****     PWM_1_WriteCompare(PWM_PCT_TO_COMPARE(drive));    
 668:main.c        **** }
 669:main.c        **** 
 670:main.c        **** 
 671:main.c        **** /*******************************************************************************
 672:main.c        **** * Function Name: PID_Initialize
 673:main.c        **** ********************************************************************************
 674:main.c        **** * Summary:
 675:main.c        **** *  Setup and reset the PID terms.
 676:main.c        **** *
 677:main.c        **** * Parameters: None
 678:main.c        **** * Return: None
 679:main.c        **** *******************************************************************************/
 680:main.c        **** void PID_Initialize(void) {
 681:main.c        ****     
 682:main.c        ****     uint32 position;
 683:main.c        ****     
 684:main.c        ****     /* Get up-to-date current position */
 685:main.c        ****     position = Counter_1_ReadCounter();     
 686:main.c        **** 
 687:main.c        ****     lastPosition = position;
 688:main.c        ****     ITerm = Output;
 689:main.c        ****     
 690:main.c        ****     if (ITerm > outMax) {
 691:main.c        ****         ITerm = outMax;
 692:main.c        ****     } else if (ITerm < outMin) {
 693:main.c        ****         ITerm = outMin;
 694:main.c        ****     }
 695:main.c        **** }    
 696:main.c        **** 
 697:main.c        **** 
 698:main.c        **** /*******************************************************************************
 699:main.c        **** * Function Name: PID_SetTunings
 700:main.c        **** ********************************************************************************
 701:main.c        **** * Summary:
 702:main.c        **** *  Setup the p, i, and d gain values and scale to the sample time.
 703:main.c        **** *
 704:main.c        **** * Parameters: Sample time in ms, and Kp, Ki, Kd gains.
 705:main.c        **** * Return: None
 706:main.c        **** *******************************************************************************/
 707:main.c        **** void PID_SetTunings(uint32 newSampleTime, float newKp, float newKi, float newKd) {
 708:main.c        ****     
 709:main.c        ****     if (newSampleTime > 0) {
 710:main.c        ****     
 711:main.c        ****         float sampleTimeInSec = ((float) newSampleTime) / 1000;
 712:main.c        ****     
 713:main.c        ****         kp = newKp;
 714:main.c        ****         ki = newKi * sampleTimeInSec;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 14


 715:main.c        ****         kd = newKd / sampleTimeInSec;        
 716:main.c        ****     }
 717:main.c        **** }
 718:main.c        **** 
 719:main.c        **** 
 720:main.c        **** /*******************************************************************************
 721:main.c        **** * Function Name: PID_Compute
 722:main.c        **** ********************************************************************************
 723:main.c        **** * Summary:
 724:main.c        **** *  Execute a pass through the PID process to create a duty cycle output.
 725:main.c        **** *
 726:main.c        **** * Parameters: Current time and current destination.
 727:main.c        **** * Return: PWM output, in percentage.
 728:main.c        **** *******************************************************************************/
 729:main.c        **** float PID_Compute(uint32 now, uint32 setpoint) {
 730:main.c        ****     
 731:main.c        ****     int32 error, dPosition;
 732:main.c        ****     uint32 timeChange;
 733:main.c        ****     uint32 position;
 734:main.c        ****         
 735:main.c        ****     if(!inAuto) 
 736:main.c        ****         return 0;
 737:main.c        ****     
 738:main.c        ****     /* Get most up-to-date current position */
 739:main.c        ****     position = Counter_1_ReadCounter();     
 740:main.c        **** 
 741:main.c        ****     /* How much time has elapsed since the last pass? */
 742:main.c        ****     timeChange = (now - lastTime);
 743:main.c        ****     
 744:main.c        ****     /* Only do the PID calc if at LEAST 5ms has elapsed */
 745:main.c        ****     if (timeChange >= refSampleTime) {
 746:main.c        **** 
 747:main.c        ****         /* Adjust the gains to the most recent sampling time.  Do it continuously to make sure the 
 748:main.c        ****            in case the cycle runs longer than the normal 5ms. */
 749:main.c        ****         PID_SetTunings(timeChange, refKp, refKi, refKd);
 750:main.c        ****         
 751:main.c        ****         /* Compute all the working error variables */
 752:main.c        ****         error = setpoint - position;
 753:main.c        ****         ITerm += (ki * error);
 754:main.c        ****         
 755:main.c        ****         /* Clip the I term at the output max (windup guard) */
 756:main.c        ****         if (ITerm > outMax) {
 757:main.c        ****             ITerm = outMax;
 758:main.c        ****         } else if (ITerm < outMin) {
 759:main.c        ****             ITerm = outMin;
 760:main.c        ****         }
 761:main.c        ****         
 762:main.c        ****         /* Calculate the error term */
 763:main.c        ****         dPosition = (position - lastPosition);
 764:main.c        **** 
 765:main.c        ****         /* Compute PID Output */
 766:main.c        ****         Output = (kp * error) + ITerm - (kd * dPosition);
 767:main.c        ****         
 768:main.c        ****         /* Clip the output */
 769:main.c        ****         if (Output> outMax) {
 770:main.c        ****             Output = outMax;
 771:main.c        ****         } else if (Output < outMin) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 15


 772:main.c        ****             Output = outMin;
 773:main.c        ****         }
 774:main.c        **** 
 775:main.c        ****         /* Remember some variables for next time */
 776:main.c        ****         lastPosition = position;
 777:main.c        ****         lastTime = now;        
 778:main.c        ****     }
 779:main.c        ****     
 780:main.c        ****     return Output;    
 781:main.c        **** }
 782:main.c        ****  
 783:main.c        **** 
 784:main.c        **** 
 785:main.c        ****  
 786:main.c        **** /*******************************************************************************
 787:main.c        **** * Function Name: PID_SetOutputLimits
 788:main.c        **** ********************************************************************************
 789:main.c        **** * Summary:
 790:main.c        **** *  Define the output limits of the PID process.
 791:main.c        **** *
 792:main.c        **** * Parameters: Min and Max output values.
 793:main.c        **** * Return: None
 794:main.c        **** *******************************************************************************/
 795:main.c        **** void PID_SetOutputLimits(float Min, float Max) {
 796:main.c        ****     
 797:main.c        ****     if(Min > Max) 
 798:main.c        ****         return;
 799:main.c        **** 
 800:main.c        ****     /* Update the global min/max */
 801:main.c        ****     outMin = Min;
 802:main.c        ****     outMax = Max;
 803:main.c        **** 
 804:main.c        ****     /* Clip the output to the new max */
 805:main.c        ****     if(Output > outMax) {
 806:main.c        ****         Output = outMax;
 807:main.c        ****     } else if (Output < outMin) {
 808:main.c        ****         Output = outMin;
 809:main.c        ****     }
 810:main.c        **** 
 811:main.c        ****     /* Clip the I term to the new max */
 812:main.c        ****     if (ITerm > outMax) {
 813:main.c        ****         ITerm = outMax;
 814:main.c        ****     } else if (ITerm < outMin) {
 815:main.c        ****         ITerm = outMin;
 816:main.c        ****     }
 817:main.c        **** }
 818:main.c        ****  
 819:main.c        **** /*******************************************************************************
 820:main.c        **** * Function Name: PID_SetMode
 821:main.c        **** ********************************************************************************
 822:main.c        **** * Summary:
 823:main.c        **** *  Sets the PID into automatic or manual mode.
 824:main.c        **** *
 825:main.c        **** * Parameters: Mode, either PID_AUTOMATIC or PID_MANUAL.
 826:main.c        **** * Return: None
 827:main.c        **** *******************************************************************************/
 828:main.c        **** void PID_SetMode(uint32 Mode) {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 16


 829:main.c        ****     
 830:main.c        ****     bool newAuto = (Mode == PID_AUTOMATIC);
 831:main.c        ****     
 832:main.c        ****     if (newAuto && !inAuto) {  
 833:main.c        ****         /*we just went from manual to auto*/
 834:main.c        ****         PID_Initialize();
 835:main.c        ****     }
 836:main.c        ****     
 837:main.c        ****     inAuto = newAuto;
 838:main.c        **** } 
 839:main.c        ****     
 840:main.c        **** /*******************************************************************************
 841:main.c        **** * Function Name: PID_SetDrive
 842:main.c        **** ********************************************************************************
 843:main.c        **** * Summary:
 844:main.c        **** *  Convert the output of PID into a duty cycle for use on the PWM.
 845:main.c        **** *
 846:main.c        **** * Parameters: Percentage output to drive the PWM.
 847:main.c        **** * Return: None
 848:main.c        **** *******************************************************************************/
 849:main.c        **** void PID_SetDrive(float percent) {
 850:main.c        ****     
 851:main.c        ****     /* Valid percentage range coming out of the PID algorithm is -100.0 to +100.0 
 852:main.c        ****        which needs to be translated into a duty cycle value of 0.0 to 100.0 */
 853:main.c        ****     float dutycycle = (percent + 100) / 2;    
 854:main.c        ****     
 855:main.c        ****     /* The duty cycle can now be written to the PWM device itself */
 856:main.c        ****     PWM_Set(dutycycle);  
 857:main.c        **** }
 858:main.c        **** 
 859:main.c        **** 
 860:main.c        **** 
 861:main.c        **** 
 862:main.c        **** /*******************************************************************************
 863:main.c        **** * Function Name: PID_Task
 864:main.c        **** ********************************************************************************
 865:main.c        **** * Summary:
 866:main.c        **** *  RTOS task to perform the PID calculations.
 867:main.c        **** *
 868:main.c        **** * Parameters: None
 869:main.c        **** * Return: None
 870:main.c        **** *******************************************************************************/
 871:main.c        **** void PID_Task(void *arg) {
 872:main.c        ****     
 873:main.c        ****     /* Sleep this thread 5ms at a time */
 874:main.c        ****     uint32 sleeptime = 5;    
 875:main.c        ****     uint32 now;
 876:main.c        ****     float percent; 
 877:main.c        ****     int32 CurrentPosition, DeltaPosition;
 878:main.c        ****     uint32 CurrentIndexCount;
 879:main.c        ****     
 880:main.c        ****     /* Initial high water mark reading */
 881:main.c        ****     uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );
 882:main.c        ****     
 883:main.c        ****     /* Initial values */
 884:main.c        **** 
 885:main.c        ****     /* These are the 'reference' values passed down from the server, not to be used in-the-raw beca
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 17


 886:main.c        ****        values are time interval adjusted */
 887:main.c        ****     refKp = 0;
 888:main.c        ****     refKi = 0;
 889:main.c        ****     refKd = 0;
 890:main.c        ****     
 891:main.c        ****     /* Setup the PID subsystem */
 892:main.c        ****     PID_Initialize();
 893:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);
 894:main.c        ****     PID_SetOutputLimits(-100.0, 100.0);
 895:main.c        ****     PID_SetMode(PID_MANUAL);
 896:main.c        **** 
 897:main.c        ****     now = 0;
 898:main.c        ****     
 899:main.c        ****     /* Start off disabled */
 900:main.c        ****     PID_Setpoint = 0;  
 901:main.c        ****     PID_Was_Enabled = false;
 902:main.c        ****     PID_Enabled = false;
 903:main.c        ****     
 904:main.c        ****     while (1) {
 905:main.c        ****               
 906:main.c        ****         /* ------------------------------------------------------------------------------------ */
 907:main.c        ****         /* At the top of the PID loop, refresh the counter of the watchdog to indicate the RTOS 
 908:main.c        ****            thread is still alive.  Were the RTOS to crash or the motion thread to die, the CPU 
 909:main.c        ****            will be reset after 2 seconds. */
 910:main.c        ****         WDT_COUNT1_REFRESH();        
 911:main.c        ****         /* ------------------------------------------------------------------------------------ */
 912:main.c        **** 
 913:main.c        ****         
 914:main.c        ****         /* If the server hasn't talked to us in a while (no messages on the SPI), 
 915:main.c        ****            take preventative action and abandon any moves in progress.  When the uint32
 916:main.c        ****            overflows, "now" will be (temporarily) less than the last timestamped message,
 917:main.c        ****            so handle that too */
 918:main.c        ****         now = xTaskGetTickCount();
 919:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 920:main.c        ****              (now < LastMessageTimeTick) ) {
 921:main.c        ****             
 922:main.c        ****             /* Stop all motion */
 923:main.c        ****             PWM_Set(PWM_JOG_NEUTRAL);
 924:main.c        ****             PID_Enabled = false;
 925:main.c        ****             
 926:main.c        ****             /* Clear the values that would drive motion on the next message arrival.  Assume the ne
 927:main.c        ****                in which case we want to be neutral. */
 928:main.c        ****             Jog = 0;
 929:main.c        **** 
 930:main.c        ****         /* Only run the PID algorithm if we have been configured by the nodebox software */
 931:main.c        ****         } else if (ConfigState == csReady) {
 932:main.c        ****         
 933:main.c        ****             /* If the server is asking us to jog, do that instead of PID */
 934:main.c        ****             if (!PID_Enabled) {                   
 935:main.c        ****                 
 936:main.c        ****                 /* When we start homing, it looks like a big negative jog.  Setup to watch the inde
 937:main.c        ****                    so we can assert faults if they aren't changing. */                
 938:main.c        ****                 if ((Jog != Last_Jog) && (Jog != 0)) {
 939:main.c        ****                     
 940:main.c        ****                     /* Update the 'last' jog value, so we don't fall into this reset code over and 
 941:main.c        ****                     Last_Jog = Jog;
 942:main.c        ****                     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 18


 943:main.c        ****                     /* Remember where we started */
 944:main.c        ****                     PID_Last_Position = Counter_1_ReadCounter();      
 945:main.c        ****                     
 946:main.c        ****                     /* Reset counting of index marks */
 947:main.c        ****                     Index_Counter_1_WriteCounter(0);
 948:main.c        ****                 }                
 949:main.c        ****                 
 950:main.c        ****                 /* Drive in the direction and speed the server told us */
 951:main.c        ****                 PWM_Set(PWM_JOG_NEUTRAL + Jog);
 952:main.c        **** 
 953:main.c        ****                 /* Watch for stuck signals while we are moving */
 954:main.c        ****                 if ( Jog != 0 ) {
 955:main.c        ****                 
 956:main.c        ****                     /* If we have moved a good distance away from the origin point, compare index c
 957:main.c        ****                        looking for discrepancy. */
 958:main.c        ****                     CurrentPosition = Counter_1_ReadCounter();
 959:main.c        ****                     DeltaPosition = labs( ((int32) CurrentPosition) - ((int32) PID_Last_Position) )
 960:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 961:main.c        ****                     
 962:main.c        ****                     /* Look for index failure: the index counter should have incremented by at leas
 963:main.c        ****                     if (CurrentIndexCount == 0)
 964:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 965:main.c        ****                             AssertFault(fsIndex);        
 966:main.c        ****                     
 967:main.c        ****                     /* Look for encoder failure: the encoders should register some amount of moveme
 968:main.c        ****                     if ((CurrentIndexCount > 0) && (DeltaPosition < 2))                     
 969:main.c        ****                         AssertFault(fsEncoder);
 970:main.c        ****                 }
 971:main.c        ****                 
 972:main.c        ****             }
 973:main.c        ****             
 974:main.c        ****             /* Handle mode switching */
 975:main.c        ****             if (!PID_Was_Enabled && PID_Enabled) {
 976:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 977:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 978:main.c        ****                 PID_SetMode(PID_MANUAL);                
 979:main.c        ****             } else {
 980:main.c        ****                 // No mode change happened   
 981:main.c        ****             }
 982:main.c        ****             
 983:main.c        ****             /* Save value for next cycle */
 984:main.c        ****             PID_Was_Enabled = PID_Enabled;
 985:main.c        ****             
 986:main.c        ****                 
 987:main.c        ****             /* Run the PID algorithm */
 988:main.c        ****             percent = PID_Compute(now, PID_Setpoint);
 989:main.c        ****             
 990:main.c        ****             /* Send the pwm back up to the BBB */
 991:main.c        ****             if (PID_Enabled) {
 992:main.c        ****                 
 993:main.c        ****                 /* Use the global PWM value to communicate back the percentage of drive to the serv
 994:main.c        ****                 PWM = percent;
 995:main.c        ****                 
 996:main.c        ****                 /* Put the PID drive percentage out on the wire */
 997:main.c        ****                 PID_SetDrive(percent);
 998:main.c        ****                 
 999:main.c        ****             } else {
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 19


1000:main.c        ****                 /* If disabled, just return 0 */
1001:main.c        ****                 PWM = 0;
1002:main.c        ****             }
1003:main.c        ****             
1004:main.c        ****         }
1005:main.c        ****         
1006:main.c        ****         /* Run the loop every 5ms, which is 200Hz update rate */
1007:main.c        ****         Sleep(sleeptime);
1008:main.c        **** 
1009:main.c        ****         /* Get our task stack usage high water mark */    
1010:main.c        ****         uxHighWaterMark_PID = uxTaskGetStackHighWaterMark( NULL );        
1011:main.c        ****     }
1012:main.c        ****    
1013:main.c        **** }
1014:main.c        **** 
1015:main.c        **** 
1016:main.c        **** 
1017:main.c        **** /*******************************************************************************
1018:main.c        **** * Function Name: main
1019:main.c        **** ********************************************************************************
1020:main.c        **** * Summary:
1021:main.c        **** *  Setup tasks, interrupts, and get the RTOS running.
1022:main.c        **** *
1023:main.c        **** * Parameters: None
1024:main.c        **** * Return: NEVER!
1025:main.c        **** *******************************************************************************/
1026:main.c        **** int main(void) {
1027:main.c        ****     
1028:main.c        ****     uint8 s;
1029:main.c        ****     setupFreeRTOS();
1030:main.c        ****         
1031:main.c        ****     /* Create LED task, which will control the intensity of the LEDs */
1032:main.c        ****     xTaskCreate(
1033:main.c        ****         PID_Task,       /* Task function */
1034:main.c        ****         "PID",          /* Task name (string) */
1035:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 24 bytes) */
1036:main.c        ****         0,              /* No param passed to task function */
1037:main.c        ****         2,              /* Medium priority */
1038:main.c        ****         0 );            /* Not using the task handle */    
1039:main.c        ****     
1040:main.c        ****     xTaskCreate(
1041:main.c        ****         Comm_Task,       /* Task function */
1042:main.c        ****         "Communications", /* Task name (string) */
1043:main.c        ****         100,            /* Task stack, allocated from heap (measured 12/27 to be 78 bytes)  */
1044:main.c        ****         0,              /* No param passed to task function */
1045:main.c        ****         3,              /* High priority */
1046:main.c        ****         0 );            /* Not using the task handle */    
1047:main.c        **** 
1048:main.c        ****     xTaskCreate(
1049:main.c        ****         Current_Read_Task, /* Task function */
1050:main.c        ****         "Read Current", /* Task name (string) */
1051:main.c        ****         64,             /* Task stack, allocated from heap (measured 12/27 to be 40 bytes) */
1052:main.c        ****         0,              /* No param passed to task function */
1053:main.c        ****         1,              /* Low priority */
1054:main.c        ****         0 );            /* Not using the task handle */    
1055:main.c        ****     
1056:main.c        ****     /********************************************************************** 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 20


1057:main.c        ****     * Message buffer mutex
1058:main.c        ****     **********************************************************************/
1059:main.c        ****     Lock = xSemaphoreCreateMutex();
1060:main.c        **** 
1061:main.c        ****     /* If we can't create the lock, flash the light and hold here */
1062:main.c        ****     if( Lock == NULL ) {
1063:main.c        ****         s = 1;
1064:main.c        ****         
1065:main.c        ****         while(1) {
1066:main.c        ****             s = !s;
1067:main.c        ****             LED_Write(s); 
1068:main.c        ****             CyDelay(1000u);                    
1069:main.c        ****         }
1070:main.c        ****     }
1071:main.c        ****     
1072:main.c        ****     
1073:main.c        ****     /********************************************************************** 
1074:main.c        ****     * Interrupts
1075:main.c        ****     **********************************************************************/
1076:main.c        ****     
1077:main.c        ****     /* Sets up the Index and Reset interrupt and enables them */
1078:main.c        ****     isr_home_StartEx(HomeIsrHandler);
1079:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
1080:main.c        ****     
1081:main.c        ****     /* Setup the SPI slave select interrupt ISR */
1082:main.c        ****     isr_spi_ss_StartEx(SPI_SS_IsrHandler);
1083:main.c        ****     
1084:main.c        ****     /* Changes initial priority for the interrupts */
1085:main.c        ****     isr_home_SetPriority(DEFAULT_PRIORITY);
1086:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
1087:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
1088:main.c        **** 
1089:main.c        ****     /* Enable the global interrupt */
1090:main.c        ****     CyGlobalIntEnable;
1091:main.c        ****     
1092:main.c        ****     
1093:main.c        ****     
1094:main.c        ****     /********************************************************************** 
1095:main.c        ****     * Watchdog timer.  Implements the WDT1 automatic CPU reset.
1096:main.c        ****     **********************************************************************/
1097:main.c        **** 
1098:main.c        ****     /* If you are using the JTAG debugging probe, turn off the watchdog by
1099:main.c        ****        defining DEBUG_PROBE_ATTACHED to something, or it will reset the CPU
1100:main.c        ****        when you hit a breakpoint. */
1101:main.c        **** 
1102:main.c        **** #ifndef DEBUG_PROBE_ATTACHED
1103:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
1104:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH_RESET);
1105:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
1106:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
1107:main.c        **** 	
1108:main.c        **** 	/* Enable WDT counter 1 */
1109:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER1_MASK);
1110:main.c        **** 	
1111:main.c        **** 	/* Lock WDT registers and try to disable WDT 1 */
1112:main.c        **** 	CySysWdtLock();
1113:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 21


1114:main.c        **** 	CySysWdtUnlock();        
1115:main.c        **** #endif    
1116:main.c        **** 
1117:main.c        ****     
1118:main.c        ****     /*********************************************************************** 
1119:main.c        ****     * Start the various subsystems.
1120:main.c        ****     ***********************************************************************/
1121:main.c        ****     I2C_Start();
1122:main.c        ****     CyDelay(100u);
1123:main.c        ****     SPI_1_Start();
1124:main.c        ****     
1125:main.c        ****     /* Setup the PWM at a base frequency of 15KHz, 50% duty cycle.  Clock_1 is set to
1126:main.c        ****        12MHz, so the desired period to get 15KHz is a count of 800. */
1127:main.c        ****     PWM_1_Start();
1128:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
1129:main.c        ****     PWM_Set(PWM_IDLE);   
1130:main.c        ****     
1131:main.c        ****     /* Default the jog value to neutral (no movement) */
1132:main.c        ****     Jog = 0;
1133:main.c        ****     PWM_Max_Fwd = PWM_JOG_NEUTRAL + PWM_MAX_MAGNITUDE;
1134:main.c        ****     PWM_Max_Rev = PWM_JOG_NEUTRAL - PWM_MAX_MAGNITUDE;
1135:main.c        ****    
1136:main.c        ****     /* Start counting the quadrature encoding */
1137:main.c        ****     Counter_1_Start();    
1138:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
1139:main.c        ****     PID_Last_Position = ENCODER_MAX;
1140:main.c        ****     
1141:main.c        ****     /* Clear and start the index mark counter */
1142:main.c        ****     Index_Counter_1_Start();
1143:main.c        ****     Index_Counter_1_WriteCounter(0);
1144:main.c        ****      
1145:main.c        ****     /* Set some initial values */
1146:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
1147:main.c        ****     
1148:main.c        ****     /* Start off unconfigured */
1149:main.c        ****     ConfigState = csUnconfig;  
1150:main.c        ****     ConfigSequence = 0;
1151:main.c        ****     ChecksumErrors = 0;
1152:main.c        ****    
1153:main.c        ****     /***********************************************************************
1154:main.c        ****     * Start the RTOS task scheduler
1155:main.c        ****     ***********************************************************************/
1156:main.c        ****     vTaskStartScheduler();
1157:main.c        ****    
1158:main.c        ****     /***********************************************************************
1159:main.c        ****     *  We should never reach this
1160:main.c        ****     ***********************************************************************/
1161:main.c        ****     return 1;       
1162:main.c        **** }
1163:main.c        **** 
1164:main.c        **** /*******************************************************************************
1165:main.c        **** * Function Name: RSTIsrHandler
1166:main.c        **** ********************************************************************************
1167:main.c        **** * Summary:
1168:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1169:main.c        **** *  Clears a pending Interrupt.
1170:main.c        **** *  Clears a pin Interrupt.
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 22


1171:main.c        **** *
1172:main.c        **** * Parameters: None
1173:main.c        **** * Return: None
1174:main.c        **** *******************************************************************************/
1175:main.c        **** CY_ISR(RSTIsrHandler) {
  28              		.loc 1 1175 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
1176:main.c        ****     
1177:main.c        ****     /* Clear pending Interrupt */
1178:main.c        ****     isr_rst_encoder_ClearPending(); 
  36              		.loc 1 1178 0
  37 0002 FFF7FEFF 		bl	isr_rst_encoder_ClearPending
  38              	.LVL0:
1179:main.c        ****     
1180:main.c        ****     /* Clear pin Interrupt */
1181:main.c        ****     Reset_Encoder_ClearInterrupt();
  39              		.loc 1 1181 0
  40 0006 FFF7FEFF 		bl	Reset_Encoder_ClearInterrupt
  41              	.LVL1:
1182:main.c        ****     
1183:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1184:main.c        ****     Counter_1_WriteCounter(0);
  42              		.loc 1 1184 0
  43 000a 0020     		movs	r0, #0
  44 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  45              	.LVL2:
1185:main.c        ****     
1186:main.c        ****     /* Clear the index counter */
1187:main.c        ****     Index_Counter_1_WriteCounter(0);  
  46              		.loc 1 1187 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
  49              	.LVL3:
1188:main.c        **** }
  50              		.loc 1 1188 0
  51              		@ sp needed
  52 0016 10BD     		pop	{r4, pc}
  53              		.cfi_endproc
  54              	.LFE46:
  55              		.size	RSTIsrHandler, .-RSTIsrHandler
  56              		.section	.text.HomeIsrHandler,"ax",%progbits
  57              		.align	2
  58              		.global	HomeIsrHandler
  59              		.code	16
  60              		.thumb_func
  61              		.type	HomeIsrHandler, %function
  62              	HomeIsrHandler:
  63              	.LFB47:
1189:main.c        **** 
1190:main.c        **** /*******************************************************************************
1191:main.c        **** * Function Name: HomeIsrHandler
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 23


1192:main.c        **** ********************************************************************************
1193:main.c        **** * Summary:
1194:main.c        **** *  The interrupt handler for resetting the encoder count interrupts.
1195:main.c        **** *  Clears a pending Interrupt.
1196:main.c        **** *  Clears a pin Interrupt.
1197:main.c        **** *
1198:main.c        **** * Parameters: None
1199:main.c        **** * Return: None
1200:main.c        **** *******************************************************************************/
1201:main.c        **** CY_ISR(HomeIsrHandler) {
  64              		.loc 1 1201 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
1202:main.c        ****     
1203:main.c        ****     /* Clear pending Interrupt */
1204:main.c        ****     isr_home_ClearPending(); 
  72              		.loc 1 1204 0
  73 0002 FFF7FEFF 		bl	isr_home_ClearPending
  74              	.LVL4:
1205:main.c        ****     
1206:main.c        ****     /* Clear pin Interrupt */
1207:main.c        ****     HOME_IN_ClearInterrupt();
  75              		.loc 1 1207 0
  76 0006 FFF7FEFF 		bl	HOME_IN_ClearInterrupt
  77              	.LVL5:
1208:main.c        **** 
1209:main.c        ****     /* Clear the 24b Encoder (Absolute Position Counter) */
1210:main.c        ****     Counter_1_WriteCounter(0);
  78              		.loc 1 1210 0
  79 000a 0020     		movs	r0, #0
  80 000c FFF7FEFF 		bl	Counter_1_WriteCounter
  81              	.LVL6:
1211:main.c        **** }
  82              		.loc 1 1211 0
  83              		@ sp needed
  84 0010 10BD     		pop	{r4, pc}
  85              		.cfi_endproc
  86              	.LFE47:
  87              		.size	HomeIsrHandler, .-HomeIsrHandler
  88 0012 C046     		.section	.text.SPI_SS_IsrHandler,"ax",%progbits
  89              		.align	2
  90              		.global	SPI_SS_IsrHandler
  91              		.code	16
  92              		.thumb_func
  93              		.type	SPI_SS_IsrHandler, %function
  94              	SPI_SS_IsrHandler:
  95              	.LFB48:
1212:main.c        **** 
1213:main.c        **** 
1214:main.c        **** /*******************************************************************************
1215:main.c        **** * Function Name: SPI_SS_IsrHandler
1216:main.c        **** ********************************************************************************
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 24


1217:main.c        **** * Summary:
1218:main.c        **** *  The interrupt handler for knowing when the SPI master deasserts the slave select.
1219:main.c        **** *  Clears a pin Interrupt.
1220:main.c        **** *
1221:main.c        **** * Parameters: None
1222:main.c        **** * Return: None
1223:main.c        **** *******************************************************************************/
1224:main.c        **** CY_ISR(SPI_SS_IsrHandler) {
  96              		.loc 1 1224 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 10B5     		push	{r4, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
1225:main.c        ****     
1226:main.c        ****     uint32 i;
1227:main.c        ****     
1228:main.c        ****     /* Clear SPI slave select pin Interrupt */
1229:main.c        ****     spi_ss_ClearInterrupt();
 104              		.loc 1 1229 0
 105 0002 FFF7FEFF 		bl	spi_ss_ClearInterrupt
 106              	.LVL7:
1230:main.c        ****     
1231:main.c        ****     /* Make sure the slave select is actually de-asserted before proceeding */
1232:main.c        ****     if (!spi_ss_Read()) 
 107              		.loc 1 1232 0
 108 0006 FFF7FEFF 		bl	spi_ss_Read
 109              	.LVL8:
 110 000a 0028     		cmp	r0, #0
 111 000c 1CD0     		beq	.L3
1233:main.c        ****         return;
1234:main.c        ****    
1235:main.c        ****     /* Update the last message tick timer */
1236:main.c        ****     LastMessageTimeTick = xTaskGetTickCount();
 112              		.loc 1 1236 0
 113 000e FFF7FEFF 		bl	xTaskGetTickCount
 114              	.LVL9:
 115 0012 0E4B     		ldr	r3, .L8
 116 0014 1860     		str	r0, [r3]
1237:main.c        **** 
1238:main.c        ****     /* It's possible the slave select has fired and returned without transmitting any data (glitche
1239:main.c        ****        check the messaging state before resetting the buffers */
1240:main.c        ****     switch (txMessageState) {
 117              		.loc 1 1240 0
 118 0016 0E4B     		ldr	r3, .L8+4
 119 0018 1B78     		ldrb	r3, [r3]
 120 001a 012B     		cmp	r3, #1
 121 001c 14D1     		bne	.L3
1241:main.c        ****      
1242:main.c        ****         /* FIFO is not yet loaded and slave select deasserted, this is a glitch */ 
1243:main.c        ****         case txmsClear:
1244:main.c        ****             break;
1245:main.c        ****      
1246:main.c        ****         /* A message was readied for transmission */
1247:main.c        ****         case txmsLoaded:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 25


1248:main.c        ****          
1249:main.c        ****             /* FIFO is clear and slave select deasserted, it's time to reset */ 
1250:main.c        ****             
1251:main.c        ****             /* Clear the transmit message buffer, the comm thread will fill it in again to make sur
1252:main.c        ****             bzero(txMessage.buf, sizeof(txMessage.buf)); 
 122              		.loc 1 1252 0
 123 001e 1E22     		movs	r2, #30
 124 0020 0021     		movs	r1, #0
 125 0022 0C48     		ldr	r0, .L8+8
 126 0024 FFF7FEFF 		bl	memset
 127              	.LVL10:
1253:main.c        **** 
1254:main.c        ****             /* Message from the master is completely clocked in by now */     
1255:main.c        ****             for (i = 0; i < sizeof(rxMessage.buf); i++) {
 128              		.loc 1 1255 0
 129 0028 0024     		movs	r4, #0
 130 002a 04E0     		b	.L6
 131              	.LVL11:
 132              	.L7:
1256:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 133              		.loc 1 1256 0 discriminator 3
 134 002c FFF7FEFF 		bl	SPI_1_SpiUartReadRxData
 135              	.LVL12:
 136 0030 094B     		ldr	r3, .L8+12
 137 0032 1855     		strb	r0, [r3, r4]
1255:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 138              		.loc 1 1255 0 discriminator 3
 139 0034 0134     		adds	r4, r4, #1
 140              	.LVL13:
 141              	.L6:
1255:main.c        ****                 rxMessage.buf[i] = (uint8) SPI_1_SpiUartReadRxData();            
 142              		.loc 1 1255 0 is_stmt 0 discriminator 1
 143 0036 1D2C     		cmp	r4, #29
 144 0038 F8D9     		bls	.L7
1257:main.c        ****             }
1258:main.c        ****             
1259:main.c        ****             /* Clear out all the bytes in the receive side so they can be filled in again */
1260:main.c        ****             SPI_1_SpiUartClearRxBuffer();  
 145              		.loc 1 1260 0 is_stmt 1
 146 003a FFF7FEFF 		bl	SPI_1_SpiUartClearRxBuffer
 147              	.LVL14:
1261:main.c        ****             
1262:main.c        ****             /* Clear out any remaining bytes in the transmit buffer, in case the message transfer w
1263:main.c        ****             SPI_1_SpiUartClearTxBuffer();
 148              		.loc 1 1263 0
 149 003e FFF7FEFF 		bl	SPI_1_SpiUartClearTxBuffer
 150              	.LVL15:
1264:main.c        ****             
1265:main.c        ****             /* Set the state to indicate to the messaging thread that it's time to load the TX buff
1266:main.c        ****             txMessageState = txmsClear;        
 151              		.loc 1 1266 0
 152 0042 0022     		movs	r2, #0
 153 0044 024B     		ldr	r3, .L8+4
 154 0046 1A70     		strb	r2, [r3]
 155              	.LVL16:
 156              	.L3:
1267:main.c        ****             break;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 26


1268:main.c        ****             
1269:main.c        ****     } 
1270:main.c        **** }
 157              		.loc 1 1270 0
 158              		@ sp needed
 159 0048 10BD     		pop	{r4, pc}
 160              	.L9:
 161 004a C046     		.align	2
 162              	.L8:
 163 004c 00000000 		.word	LastMessageTimeTick
 164 0050 00000000 		.word	txMessageState
 165 0054 00000000 		.word	txMessage
 166 0058 00000000 		.word	rxMessage
 167              		.cfi_endproc
 168              	.LFE48:
 169              		.size	SPI_SS_IsrHandler, .-SPI_SS_IsrHandler
 170              		.section	.text.setupFreeRTOS,"ax",%progbits
 171              		.align	2
 172              		.global	setupFreeRTOS
 173              		.code	16
 174              		.thumb_func
 175              		.type	setupFreeRTOS, %function
 176              	setupFreeRTOS:
 177              	.LFB32:
 317:main.c        **** #define CORTEX_INTERRUPT_BASE (16)
 178              		.loc 1 317 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 321:main.c        ****     
 186              		.loc 1 321 0
 187 0002 0649     		ldr	r1, .L11
 188 0004 0B20     		movs	r0, #11
 189 0006 FFF7FEFF 		bl	CyIntSetSysVector
 190              	.LVL17:
 324:main.c        ****     
 191              		.loc 1 324 0
 192 000a 0549     		ldr	r1, .L11+4
 193 000c 0E20     		movs	r0, #14
 194 000e FFF7FEFF 		bl	CyIntSetSysVector
 195              	.LVL18:
 327:main.c        **** }
 196              		.loc 1 327 0
 197 0012 0449     		ldr	r1, .L11+8
 198 0014 0F20     		movs	r0, #15
 199 0016 FFF7FEFF 		bl	CyIntSetSysVector
 200              	.LVL19:
 328:main.c        **** 
 201              		.loc 1 328 0
 202              		@ sp needed
 203 001a 10BD     		pop	{r4, pc}
 204              	.L12:
 205              		.align	2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 27


 206              	.L11:
 207 001c 00000000 		.word	vPortSVCHandler
 208 0020 00000000 		.word	xPortPendSVHandler
 209 0024 00000000 		.word	xPortSysTickHandler
 210              		.cfi_endproc
 211              	.LFE32:
 212              		.size	setupFreeRTOS, .-setupFreeRTOS
 213              		.section	.text.AssertFault,"ax",%progbits
 214              		.align	2
 215              		.global	AssertFault
 216              		.code	16
 217              		.thumb_func
 218              		.type	AssertFault, %function
 219              	AssertFault:
 220              	.LFB33:
 341:main.c        ****  
 221              		.loc 1 341 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL20:
 343:main.c        ****      
 227              		.loc 1 343 0
 228 0000 0028     		cmp	r0, #0
 229 0002 03D1     		bne	.L17
 347:main.c        ****             break;        
 230              		.loc 1 347 0
 231 0004 0022     		movs	r2, #0
 232 0006 044B     		ldr	r3, .L18
 233 0008 1A70     		strb	r2, [r3]
 348:main.c        ****         
 234              		.loc 1 348 0
 235 000a 03E0     		b	.L13
 236              	.L17:
 352:main.c        ****             break;        
 237              		.loc 1 352 0
 238 000c 024B     		ldr	r3, .L18
 239 000e 1A78     		ldrb	r2, [r3]
 240 0010 1043     		orrs	r0, r2
 241              	.LVL21:
 242 0012 1870     		strb	r0, [r3]
 243              	.L13:
 355:main.c        **** 
 244              		.loc 1 355 0
 245              		@ sp needed
 246 0014 7047     		bx	lr
 247              	.L19:
 248 0016 C046     		.align	2
 249              	.L18:
 250 0018 00000000 		.word	FaultState
 251              		.cfi_endproc
 252              	.LFE33:
 253              		.size	AssertFault, .-AssertFault
 254              		.section	.text.Current_Read_Task,"ax",%progbits
 255              		.align	2
 256              		.global	Current_Read_Task
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 28


 257              		.code	16
 258              		.thumb_func
 259              		.type	Current_Read_Task, %function
 260              	Current_Read_Task:
 261              	.LFB35:
 394:main.c        ****     
 262              		.loc 1 394 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL22:
 267 0000 10B5     		push	{r4, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              		.cfi_def_cfa_offset 16
 273              	.LVL23:
 406:main.c        ****     
 274              		.loc 1 406 0
 275 0004 0020     		movs	r0, #0
 276              	.LVL24:
 277 0006 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 278              	.LVL25:
 279 000a 364B     		ldr	r3, .L29
 280 000c 1860     		str	r0, [r3]
 403:main.c        ****     
 281              		.loc 1 403 0
 282 000e 0024     		movs	r4, #0
 283              	.LVL26:
 284              	.L27:
 411:main.c        ****         PROBE_Write(foo);
 285              		.loc 1 411 0
 286 0010 2000     		movs	r0, r4
 287 0012 FFF7FEFF 		bl	LED_Write
 288              	.LVL27:
 412:main.c        **** 
 289              		.loc 1 412 0
 290 0016 2000     		movs	r0, r4
 291 0018 FFF7FEFF 		bl	PROBE_Write
 292              	.LVL28:
 414:main.c        ****         
 293              		.loc 1 414 0
 294 001c 002C     		cmp	r4, #0
 295 001e 01D0     		beq	.L28
 296 0020 0024     		movs	r4, #0
 297              	.LVL29:
 298 0022 00E0     		b	.L21
 299              	.LVL30:
 300              	.L28:
 301 0024 0124     		movs	r4, #1
 302              	.LVL31:
 303              	.L21:
 420:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 304              		.loc 1 420 0
 305 0026 0A22     		movs	r2, #10
 306 0028 0021     		movs	r1, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 29


 307 002a 4020     		movs	r0, #64
 308 002c FFF7FEFF 		bl	I2C_I2CMasterSendStart
 309              	.LVL32:
 310 0030 0190     		str	r0, [sp, #4]
 421:main.c        ****             
 311              		.loc 1 421 0
 312 0032 019B     		ldr	r3, [sp, #4]
 313 0034 002B     		cmp	r3, #0
 314 0036 0FD1     		bne	.L22
 423:main.c        ****             
 315              		.loc 1 423 0
 316 0038 0A21     		movs	r1, #10
 317 003a 0520     		movs	r0, #5
 318 003c FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 319              	.LVL33:
 426:main.c        ****             
 320              		.loc 1 426 0
 321 0040 0A21     		movs	r1, #10
 322 0042 2020     		movs	r0, #32
 323 0044 FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 324              	.LVL34:
 429:main.c        ****             I2C_I2CMasterSendStop(10);
 325              		.loc 1 429 0
 326 0048 0A21     		movs	r1, #10
 327 004a 0020     		movs	r0, #0
 328 004c FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 329              	.LVL35:
 430:main.c        ****         } else {
 330              		.loc 1 430 0
 331 0050 0A20     		movs	r0, #10
 332 0052 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 333              	.LVL36:
 334 0056 05E0     		b	.L23
 335              	.LVL37:
 336              	.L22:
 432:main.c        ****             AssertFault(fsCurrentRead);
 337              		.loc 1 432 0
 338 0058 0022     		movs	r2, #0
 339 005a 234B     		ldr	r3, .L29+4
 340 005c 1A80     		strh	r2, [r3]
 433:main.c        ****         }
 341              		.loc 1 433 0
 342 005e 0820     		movs	r0, #8
 343 0060 FFF7FEFF 		bl	AssertFault
 344              	.LVL38:
 345              	.L23:
 436:main.c        ****         if (err == I2C_I2C_MSTR_NO_ERROR) {
 346              		.loc 1 436 0
 347 0064 0A22     		movs	r2, #10
 348 0066 0021     		movs	r1, #0
 349 0068 4020     		movs	r0, #64
 350 006a FFF7FEFF 		bl	I2C_I2CMasterSendStart
 351              	.LVL39:
 352 006e 0190     		str	r0, [sp, #4]
 437:main.c        ****             
 353              		.loc 1 437 0
 354 0070 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 30


 355 0072 002B     		cmp	r3, #0
 356 0074 20D1     		bne	.L24
 439:main.c        ****             I2C_I2CMasterSendStop(10);
 357              		.loc 1 439 0
 358 0076 0A21     		movs	r1, #10
 359 0078 0420     		movs	r0, #4
 360 007a FFF7FEFF 		bl	I2C_I2CMasterWriteByte
 361              	.LVL40:
 440:main.c        ****             
 362              		.loc 1 440 0
 363 007e 0A20     		movs	r0, #10
 364 0080 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 365              	.LVL41:
 443:main.c        ****             
 366              		.loc 1 443 0
 367 0084 0123     		movs	r3, #1
 368 0086 0522     		movs	r2, #5
 369 0088 1849     		ldr	r1, .L29+8
 370 008a 4020     		movs	r0, #64
 371 008c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 372              	.LVL42:
 373 0090 0190     		str	r0, [sp, #4]
 446:main.c        ****                 CurrentTemp = (uint16)(CurrentI2Cinbuf[0] << 8) + CurrentI2Cinbuf[1];
 374              		.loc 1 446 0
 375 0092 019B     		ldr	r3, [sp, #4]
 376 0094 002B     		cmp	r3, #0
 377 0096 08D1     		bne	.L25
 447:main.c        ****             } else {
 378              		.loc 1 447 0
 379 0098 144A     		ldr	r2, .L29+8
 380 009a 1378     		ldrb	r3, [r2]
 381 009c 1B02     		lsls	r3, r3, #8
 382 009e 5278     		ldrb	r2, [r2, #1]
 383 00a0 9B18     		adds	r3, r3, r2
 384 00a2 9BB2     		uxth	r3, r3
 385 00a4 6A46     		mov	r2, sp
 386 00a6 5380     		strh	r3, [r2, #2]
 387 00a8 0CE0     		b	.L26
 388              	.L25:
 449:main.c        ****                 AssertFault(fsCurrentRead);
 389              		.loc 1 449 0
 390 00aa 0022     		movs	r2, #0
 391 00ac 6B46     		mov	r3, sp
 392 00ae 5A80     		strh	r2, [r3, #2]
 450:main.c        ****             }
 393              		.loc 1 450 0
 394 00b0 0820     		movs	r0, #8
 395 00b2 FFF7FEFF 		bl	AssertFault
 396              	.LVL43:
 397 00b6 05E0     		b	.L26
 398              	.L24:
 453:main.c        ****             AssertFault(fsCurrentRead);
 399              		.loc 1 453 0
 400 00b8 0022     		movs	r2, #0
 401 00ba 6B46     		mov	r3, sp
 402 00bc 5A80     		strh	r2, [r3, #2]
 454:main.c        ****         }
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 31


 403              		.loc 1 454 0
 404 00be 0820     		movs	r0, #8
 405 00c0 FFF7FEFF 		bl	AssertFault
 406              	.LVL44:
 407              	.L26:
 460:main.c        **** 
 408              		.loc 1 460 0
 409 00c4 6B46     		mov	r3, sp
 410 00c6 0233     		adds	r3, r3, #2
 411 00c8 1B88     		ldrh	r3, [r3]
 412 00ca 9BB2     		uxth	r3, r3
 413 00cc 064A     		ldr	r2, .L29+4
 414 00ce 1380     		strh	r3, [r2]
 463:main.c        ****         
 415              		.loc 1 463 0
 416 00d0 FA20     		movs	r0, #250
 417 00d2 4000     		lsls	r0, r0, #1
 418 00d4 FFF7FEFF 		bl	vTaskDelay
 419              	.LVL45:
 466:main.c        ****     }
 420              		.loc 1 466 0
 421 00d8 0020     		movs	r0, #0
 422 00da FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 423              	.LVL46:
 424 00de 014B     		ldr	r3, .L29
 425 00e0 1860     		str	r0, [r3]
 467:main.c        ****    
 426              		.loc 1 467 0
 427 00e2 95E7     		b	.L27
 428              	.L30:
 429              		.align	2
 430              	.L29:
 431 00e4 00000000 		.word	uxHighWaterMark_Current
 432 00e8 00000000 		.word	Current
 433 00ec 00000000 		.word	CurrentI2Cinbuf
 434              		.cfi_endproc
 435              	.LFE35:
 436              		.size	Current_Read_Task, .-Current_Read_Task
 437              		.section	.text.ClearFault,"ax",%progbits
 438              		.align	2
 439              		.global	ClearFault
 440              		.code	16
 441              		.thumb_func
 442              		.type	ClearFault, %function
 443              	ClearFault:
 444              	.LFB34:
 368:main.c        ****  
 445              		.loc 1 368 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL47:
 370:main.c        ****      
 451              		.loc 1 370 0
 452 0000 0028     		cmp	r0, #0
 453 0002 03D1     		bne	.L35
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 32


 374:main.c        ****             break;        
 454              		.loc 1 374 0
 455 0004 0022     		movs	r2, #0
 456 0006 044B     		ldr	r3, .L36
 457 0008 1A70     		strb	r2, [r3]
 375:main.c        ****         
 458              		.loc 1 375 0
 459 000a 03E0     		b	.L31
 460              	.L35:
 379:main.c        ****             break;        
 461              		.loc 1 379 0
 462 000c 024A     		ldr	r2, .L36
 463 000e 1378     		ldrb	r3, [r2]
 464 0010 8343     		bics	r3, r0
 465 0012 1370     		strb	r3, [r2]
 466              	.L31:
 382:main.c        **** 
 467              		.loc 1 382 0
 468              		@ sp needed
 469 0014 7047     		bx	lr
 470              	.L37:
 471 0016 C046     		.align	2
 472              	.L36:
 473 0018 00000000 		.word	FaultState
 474              		.cfi_endproc
 475              	.LFE34:
 476              		.size	ClearFault, .-ClearFault
 477              		.section	.text.Comm_Task,"ax",%progbits
 478              		.align	2
 479              		.global	Comm_Task
 480              		.code	16
 481              		.thumb_func
 482              		.type	Comm_Task, %function
 483              	Comm_Task:
 484              	.LFB36:
 480:main.c        ****  
 485              		.loc 1 480 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              	.LVL48:
 490 0000 10B5     		push	{r4, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 488:main.c        ****     
 494              		.loc 1 488 0
 495 0002 0020     		movs	r0, #0
 496              	.LVL49:
 497 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 498              	.LVL50:
 499 0008 7F4B     		ldr	r3, .L54
 500 000a 1860     		str	r0, [r3]
 501              	.L52:
 493:main.c        ****         
 502              		.loc 1 493 0
 503 000c 7F4B     		ldr	r3, .L54+4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 33


 504 000e 1B68     		ldr	r3, [r3]
 505 0010 DB07     		lsls	r3, r3, #31
 506 0012 00D5     		bpl	.LCB408
 507 0014 EFE0     		b	.L39	@long jump
 508              	.LCB408:
 496:main.c        ****              
 509              		.loc 1 496 0
 510 0016 7E4B     		ldr	r3, .L54+8
 511 0018 1B78     		ldrb	r3, [r3]
 512 001a 002B     		cmp	r3, #0
 513 001c 00D0     		beq	.LCB413
 514 001e EAE0     		b	.L39	@long jump
 515              	.LCB413:
 506:main.c        ****                         
 516              		.loc 1 506 0
 517 0020 7C4B     		ldr	r3, .L54+12
 518 0022 1868     		ldr	r0, [r3]
 519 0024 0421     		movs	r1, #4
 520 0026 FFF7FEFF 		bl	xQueueSemaphoreTake
 521              	.LVL51:
 522 002a 0128     		cmp	r0, #1
 523 002c 00D0     		beq	.LCB420
 524 002e E2E0     		b	.L39	@long jump
 525              	.LCB420:
 509:main.c        ****                         opcode   = (rxMessage_opcodes_t) rxMessage.overlay.opcode;
 526              		.loc 1 509 0
 527 0030 794B     		ldr	r3, .L54+16
 528 0032 5878     		ldrb	r0, [r3, #1]
 529              	.LVL52:
 510:main.c        ****                         
 530              		.loc 1 510 0
 531 0034 9C78     		ldrb	r4, [r3, #2]
 532              	.LVL53:
 513:main.c        ****                             size = sizeof(txMessage.buf);                            
 533              		.loc 1 513 0
 534 0036 1E28     		cmp	r0, #30
 535 0038 00D9     		bls	.L41
 514:main.c        ****                     
 536              		.loc 1 514 0
 537 003a 1E20     		movs	r0, #30
 538              	.LVL54:
 539              	.L41:
 517:main.c        ****                             checksum += rxMessage.buf[i]; 
 540              		.loc 1 517 0
 541 003c 0022     		movs	r2, #0
 542 003e 0023     		movs	r3, #0
 543 0040 05E0     		b	.L42
 544              	.LVL55:
 545              	.L43:
 518:main.c        **** 
 546              		.loc 1 518 0 discriminator 3
 547 0042 7549     		ldr	r1, .L54+16
 548 0044 C95C     		ldrb	r1, [r1, r3]
 549 0046 5218     		adds	r2, r2, r1
 550              	.LVL56:
 551 0048 D2B2     		uxtb	r2, r2
 552              	.LVL57:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 34


 517:main.c        ****                             checksum += rxMessage.buf[i]; 
 553              		.loc 1 517 0 discriminator 3
 554 004a 0133     		adds	r3, r3, #1
 555              	.LVL58:
 556 004c DBB2     		uxtb	r3, r3
 557              	.LVL59:
 558              	.L42:
 517:main.c        ****                             checksum += rxMessage.buf[i]; 
 559              		.loc 1 517 0 is_stmt 0 discriminator 1
 560 004e 9842     		cmp	r0, r3
 561 0050 F7D8     		bhi	.L43
 521:main.c        ****                             
 562              		.loc 1 521 0 is_stmt 1
 563 0052 002A     		cmp	r2, #0
 564 0054 09D0     		beq	.L44
 523:main.c        ****                             txMessage.msg.size = sizeof(txMessage_t);
 565              		.loc 1 523 0
 566 0056 714B     		ldr	r3, .L54+20
 567              	.LVL60:
 568 0058 9C70     		strb	r4, [r3, #2]
 524:main.c        ****                             ChecksumErrors++;
 569              		.loc 1 524 0
 570 005a 1222     		movs	r2, #18
 571              	.LVL61:
 572 005c 5A70     		strb	r2, [r3, #1]
 525:main.c        ****                             
 573              		.loc 1 525 0
 574 005e 704A     		ldr	r2, .L54+24
 575 0060 1388     		ldrh	r3, [r2]
 576 0062 0133     		adds	r3, r3, #1
 577 0064 9BB2     		uxth	r3, r3
 578 0066 1380     		strh	r3, [r2]
 579 0068 75E0     		b	.L45
 580              	.LVL62:
 581              	.L44:
 531:main.c        ****                             
 582              		.loc 1 531 0
 583 006a 631E     		subs	r3, r4, #1
 584              	.LVL63:
 585 006c DBB2     		uxtb	r3, r3
 586 006e 022B     		cmp	r3, #2
 587 0070 71D8     		bhi	.L45
 533:main.c        ****                                 
 588              		.loc 1 533 0
 589 0072 012C     		cmp	r4, #1
 590 0074 02D0     		beq	.L46
 591 0076 022C     		cmp	r4, #2
 592 0078 3ED0     		beq	.L47
 593 007a 6CE0     		b	.L45
 594              	.L46:
 540:main.c        ****                                         refKi = rxMessage.config.Ki;
 595              		.loc 1 540 0
 596 007c 664B     		ldr	r3, .L54+16
 597 007e 1A79     		ldrb	r2, [r3, #4]
 598              	.LVL64:
 599 0080 5979     		ldrb	r1, [r3, #5]
 600 0082 0902     		lsls	r1, r1, #8
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 35


 601 0084 1143     		orrs	r1, r2
 602 0086 9A79     		ldrb	r2, [r3, #6]
 603 0088 1204     		lsls	r2, r2, #16
 604 008a 0A43     		orrs	r2, r1
 605 008c 1100     		movs	r1, r2
 606 008e DA79     		ldrb	r2, [r3, #7]
 607 0090 1206     		lsls	r2, r2, #24
 608 0092 0A43     		orrs	r2, r1
 609 0094 6349     		ldr	r1, .L54+28
 610 0096 0A60     		str	r2, [r1]
 541:main.c        ****                                         refKd = rxMessage.config.Kd;                               
 611              		.loc 1 541 0
 612 0098 1A7A     		ldrb	r2, [r3, #8]
 613 009a 597A     		ldrb	r1, [r3, #9]
 614 009c 0902     		lsls	r1, r1, #8
 615 009e 1143     		orrs	r1, r2
 616 00a0 9A7A     		ldrb	r2, [r3, #10]
 617 00a2 1204     		lsls	r2, r2, #16
 618 00a4 0A43     		orrs	r2, r1
 619 00a6 1100     		movs	r1, r2
 620 00a8 DA7A     		ldrb	r2, [r3, #11]
 621 00aa 1206     		lsls	r2, r2, #24
 622 00ac 0A43     		orrs	r2, r1
 623 00ae 5E49     		ldr	r1, .L54+32
 624 00b0 0A60     		str	r2, [r1]
 542:main.c        ****                                            
 625              		.loc 1 542 0
 626 00b2 1A7B     		ldrb	r2, [r3, #12]
 627 00b4 597B     		ldrb	r1, [r3, #13]
 628 00b6 0902     		lsls	r1, r1, #8
 629 00b8 1143     		orrs	r1, r2
 630 00ba 9A7B     		ldrb	r2, [r3, #14]
 631 00bc 1204     		lsls	r2, r2, #16
 632 00be 0A43     		orrs	r2, r1
 633 00c0 1100     		movs	r1, r2
 634 00c2 DA7B     		ldrb	r2, [r3, #15]
 635 00c4 1206     		lsls	r2, r2, #24
 636 00c6 0A43     		orrs	r2, r1
 637 00c8 5849     		ldr	r1, .L54+36
 638 00ca 0A60     		str	r2, [r1]
 545:main.c        ****                                         PWM_Max_Fwd = PWM_JOG_NEUTRAL + rxMessage.config.limit;
 639              		.loc 1 545 0
 640 00cc 0021     		movs	r1, #0
 641 00ce 584A     		ldr	r2, .L54+40
 642 00d0 1170     		strb	r1, [r2]
 546:main.c        ****                                         PWM_Max_Rev = PWM_JOG_NEUTRAL - rxMessage.config.limit;    
 643              		.loc 1 546 0
 644 00d2 197C     		ldrb	r1, [r3, #16]
 645 00d4 0800     		movs	r0, r1
 646              	.LVL65:
 647 00d6 3230     		adds	r0, r0, #50
 648 00d8 564A     		ldr	r2, .L54+44
 649 00da 1070     		strb	r0, [r2]
 547:main.c        ****                                     
 650              		.loc 1 547 0
 651 00dc 3222     		movs	r2, #50
 652 00de 521A     		subs	r2, r2, r1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 36


 653 00e0 5549     		ldr	r1, .L54+48
 654 00e2 0A70     		strb	r2, [r1]
 550:main.c        ****                                         ConfigSequence = rxMessage.config.sequence;
 655              		.loc 1 550 0
 656 00e4 0221     		movs	r1, #2
 657 00e6 554A     		ldr	r2, .L54+52
 658 00e8 1170     		strb	r1, [r2]
 551:main.c        ****                                     
 659              		.loc 1 551 0
 660 00ea DA78     		ldrb	r2, [r3, #3]
 661 00ec 544B     		ldr	r3, .L54+56
 662 00ee 1A70     		strb	r2, [r3]
 554:main.c        ****                                         break;
 663              		.loc 1 554 0
 664 00f0 0020     		movs	r0, #0
 665 00f2 FFF7FEFF 		bl	ClearFault
 666              	.LVL66:
 555:main.c        **** 
 667              		.loc 1 555 0
 668 00f6 2EE0     		b	.L45
 669              	.LVL67:
 670              	.L47:
 559:main.c        ****                                         
 671              		.loc 1 559 0
 672 00f8 4748     		ldr	r0, .L54+16
 673              	.LVL68:
 674 00fa C378     		ldrb	r3, [r0, #3]
 675 00fc 5A1E     		subs	r2, r3, #1
 676 00fe 9341     		sbcs	r3, r3, r2
 677              	.LVL69:
 678 0100 504A     		ldr	r2, .L54+60
 679 0102 1370     		strb	r3, [r2]
 562:main.c        ****                                             
 680              		.loc 1 562 0
 681 0104 0379     		ldrb	r3, [r0, #4]
 682 0106 4279     		ldrb	r2, [r0, #5]
 683 0108 1202     		lsls	r2, r2, #8
 684 010a 1A43     		orrs	r2, r3
 685 010c 8379     		ldrb	r3, [r0, #6]
 686 010e 1B04     		lsls	r3, r3, #16
 687 0110 1343     		orrs	r3, r2
 688 0112 1A00     		movs	r2, r3
 689 0114 C379     		ldrb	r3, [r0, #7]
 690 0116 1B06     		lsls	r3, r3, #24
 691 0118 1343     		orrs	r3, r2
 692 011a 4B4A     		ldr	r2, .L54+64
 693 011c 1268     		ldr	r2, [r2]
 694 011e 9342     		cmp	r3, r2
 695 0120 14D0     		beq	.L48
 565:main.c        ****                                             
 696              		.loc 1 565 0
 697 0122 FFF7FEFF 		bl	Counter_1_ReadCounter
 698              	.LVL70:
 699 0126 494B     		ldr	r3, .L54+68
 700 0128 1860     		str	r0, [r3]
 568:main.c        ****                                             
 701              		.loc 1 568 0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 37


 702 012a 3B48     		ldr	r0, .L54+16
 703 012c 0379     		ldrb	r3, [r0, #4]
 704 012e 4279     		ldrb	r2, [r0, #5]
 705 0130 1202     		lsls	r2, r2, #8
 706 0132 1A43     		orrs	r2, r3
 707 0134 8379     		ldrb	r3, [r0, #6]
 708 0136 1B04     		lsls	r3, r3, #16
 709 0138 1343     		orrs	r3, r2
 710 013a 1A00     		movs	r2, r3
 711 013c C379     		ldrb	r3, [r0, #7]
 712 013e 1B06     		lsls	r3, r3, #24
 713 0140 1343     		orrs	r3, r2
 714 0142 414A     		ldr	r2, .L54+64
 715 0144 1360     		str	r3, [r2]
 571:main.c        ****                                         }                                        
 716              		.loc 1 571 0
 717 0146 0020     		movs	r0, #0
 718 0148 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 719              	.LVL71:
 720              	.L48:
 575:main.c        ****                                         break;
 721              		.loc 1 575 0
 722 014c 324B     		ldr	r3, .L54+16
 723 014e 0822     		movs	r2, #8
 724 0150 9A56     		ldrsb	r2, [r3, r2]
 725 0152 374B     		ldr	r3, .L54+40
 726 0154 1A70     		strb	r2, [r3]
 727              	.L45:
 586:main.c        ****                         txMessage.msg.opcode   = opStatus;
 728              		.loc 1 586 0
 729 0156 314C     		ldr	r4, .L54+20
 730              	.LVL72:
 731 0158 0023     		movs	r3, #0
 732 015a 2370     		strb	r3, [r4]
 587:main.c        ****                         txMessage.msg.size     = sizeof(txMessage_t);
 733              		.loc 1 587 0
 734 015c 0233     		adds	r3, r3, #2
 735 015e A370     		strb	r3, [r4, #2]
 588:main.c        ****                         txMessage.msg.state    = (uint8) ConfigState;
 736              		.loc 1 588 0
 737 0160 1033     		adds	r3, r3, #16
 738 0162 6370     		strb	r3, [r4, #1]
 589:main.c        ****                         txMessage.msg.fault    = (uint8) FaultState;
 739              		.loc 1 589 0
 740 0164 354B     		ldr	r3, .L54+52
 741 0166 1B78     		ldrb	r3, [r3]
 742 0168 E370     		strb	r3, [r4, #3]
 590:main.c        ****                         txMessage.msg.checksum_errors = ChecksumErrors;
 743              		.loc 1 590 0
 744 016a 394B     		ldr	r3, .L54+72
 745 016c 1B78     		ldrb	r3, [r3]
 746 016e 2371     		strb	r3, [r4, #4]
 591:main.c        ****                         txMessage.msg.sequence = ConfigSequence;
 747              		.loc 1 591 0
 748 0170 2B4B     		ldr	r3, .L54+24
 749 0172 1B88     		ldrh	r3, [r3]
 750 0174 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 38


 751 0176 A371     		strb	r3, [r4, #6]
 752 0178 1B0A     		lsrs	r3, r3, #8
 753 017a E371     		strb	r3, [r4, #7]
 592:main.c        ****                         txMessage.msg.position = Counter_1_ReadCounter();
 754              		.loc 1 592 0
 755 017c 304B     		ldr	r3, .L54+56
 756 017e 1B78     		ldrb	r3, [r3]
 757 0180 6371     		strb	r3, [r4, #5]
 593:main.c        ****                         txMessage.msg.pwm      = PWM;
 758              		.loc 1 593 0
 759 0182 FFF7FEFF 		bl	Counter_1_ReadCounter
 760              	.LVL73:
 761 0186 A072     		strb	r0, [r4, #10]
 762 0188 020A     		lsrs	r2, r0, #8
 763 018a E272     		strb	r2, [r4, #11]
 764 018c 020C     		lsrs	r2, r0, #16
 765 018e 2273     		strb	r2, [r4, #12]
 766 0190 000E     		lsrs	r0, r0, #24
 767 0192 6073     		strb	r0, [r4, #13]
 594:main.c        ****                         txMessage.msg.current  = Current;                            
 768              		.loc 1 594 0
 769 0194 2F4B     		ldr	r3, .L54+76
 770 0196 1B68     		ldr	r3, [r3]
 771 0198 A373     		strb	r3, [r4, #14]
 772 019a 190A     		lsrs	r1, r3, #8
 773 019c E173     		strb	r1, [r4, #15]
 774 019e 190C     		lsrs	r1, r3, #16
 775 01a0 2174     		strb	r1, [r4, #16]
 776 01a2 1B0E     		lsrs	r3, r3, #24
 777 01a4 6374     		strb	r3, [r4, #17]
 595:main.c        ****                         
 778              		.loc 1 595 0
 779 01a6 2C4B     		ldr	r3, .L54+80
 780 01a8 1B88     		ldrh	r3, [r3]
 781 01aa 9BB2     		uxth	r3, r3
 782 01ac 2372     		strb	r3, [r4, #8]
 783 01ae 1B0A     		lsrs	r3, r3, #8
 784 01b0 6372     		strb	r3, [r4, #9]
 785              	.LVL74:
 598:main.c        ****                             checksum += txMessage.buf[i]; 
 786              		.loc 1 598 0
 787 01b2 0022     		movs	r2, #0
 788 01b4 0023     		movs	r3, #0
 789 01b6 05E0     		b	.L49
 790              	.LVL75:
 791              	.L50:
 599:main.c        ****                             
 792              		.loc 1 599 0 discriminator 3
 793 01b8 1849     		ldr	r1, .L54+20
 794 01ba C95C     		ldrb	r1, [r1, r3]
 795 01bc 5218     		adds	r2, r2, r1
 796              	.LVL76:
 797 01be D2B2     		uxtb	r2, r2
 798              	.LVL77:
 598:main.c        ****                             checksum += txMessage.buf[i]; 
 799              		.loc 1 598 0 discriminator 3
 800 01c0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 39


 801              	.LVL78:
 802 01c2 DBB2     		uxtb	r3, r3
 803              	.LVL79:
 804              	.L49:
 598:main.c        ****                             checksum += txMessage.buf[i]; 
 805              		.loc 1 598 0 is_stmt 0 discriminator 1
 806 01c4 112B     		cmp	r3, #17
 807 01c6 F7D9     		bls	.L50
 602:main.c        ****                             
 808              		.loc 1 602 0 is_stmt 1
 809 01c8 1448     		ldr	r0, .L54+20
 810 01ca 5242     		rsbs	r2, r2, #0
 811              	.LVL80:
 812 01cc 0270     		strb	r2, [r0]
 606:main.c        **** 
 813              		.loc 1 606 0
 814 01ce 1E21     		movs	r1, #30
 815 01d0 FFF7FEFF 		bl	SPI_1_SpiUartPutArray
 816              	.LVL81:
 609:main.c        ****                         
 817              		.loc 1 609 0
 818 01d4 0122     		movs	r2, #1
 819 01d6 0E4B     		ldr	r3, .L54+8
 820 01d8 1A70     		strb	r2, [r3]
 612:main.c        ****                             ClearFault(fsNONE);
 821              		.loc 1 612 0
 822 01da 0F4B     		ldr	r3, .L54+16
 823 01dc 5B7A     		ldrb	r3, [r3, #9]
 824 01de 002B     		cmp	r3, #0
 825 01e0 02D0     		beq	.L51
 613:main.c        ****                     
 826              		.loc 1 613 0
 827 01e2 0020     		movs	r0, #0
 828 01e4 FFF7FEFF 		bl	ClearFault
 829              	.LVL82:
 830              	.L51:
 616:main.c        ****                     }            
 831              		.loc 1 616 0
 832 01e8 0A4B     		ldr	r3, .L54+12
 833 01ea 1868     		ldr	r0, [r3]
 834 01ec 0023     		movs	r3, #0
 835 01ee 0022     		movs	r2, #0
 836 01f0 0021     		movs	r1, #0
 837 01f2 FFF7FEFF 		bl	xQueueGenericSend
 838              	.LVL83:
 839              	.L39:
 630:main.c        ****         
 840              		.loc 1 630 0
 841 01f6 0120     		movs	r0, #1
 842 01f8 FFF7FEFF 		bl	vTaskDelay
 843              	.LVL84:
 633:main.c        ****     }
 844              		.loc 1 633 0
 845 01fc 0020     		movs	r0, #0
 846 01fe FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 847              	.LVL85:
 848 0202 014B     		ldr	r3, .L54
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 40


 849 0204 1860     		str	r0, [r3]
 634:main.c        **** }
 850              		.loc 1 634 0
 851 0206 01E7     		b	.L52
 852              	.L55:
 853              		.align	2
 854              	.L54:
 855 0208 00000000 		.word	uxHighWaterMark_Comm
 856 020c 24000740 		.word	1074200612
 857 0210 00000000 		.word	txMessageState
 858 0214 00000000 		.word	Lock
 859 0218 00000000 		.word	rxMessage
 860 021c 00000000 		.word	txMessage
 861 0220 00000000 		.word	ChecksumErrors
 862 0224 00000000 		.word	refKp
 863 0228 00000000 		.word	refKi
 864 022c 00000000 		.word	refKd
 865 0230 00000000 		.word	Jog
 866 0234 00000000 		.word	PWM_Max_Fwd
 867 0238 00000000 		.word	PWM_Max_Rev
 868 023c 00000000 		.word	ConfigState
 869 0240 00000000 		.word	ConfigSequence
 870 0244 00000000 		.word	PID_Enabled
 871 0248 00000000 		.word	PID_Setpoint
 872 024c 00000000 		.word	PID_Last_Position
 873 0250 00000000 		.word	FaultState
 874 0254 00000000 		.word	PWM
 875 0258 00000000 		.word	Current
 876              		.cfi_endproc
 877              	.LFE36:
 878              		.size	Comm_Task, .-Comm_Task
 879              		.global	__aeabi_i2f
 880              		.global	__aeabi_fcmpgt
 881              		.global	__aeabi_fcmplt
 882              		.global	__aeabi_fmul
 883              		.global	__aeabi_f2uiz
 884              		.section	.text.PWM_Set,"ax",%progbits
 885              		.align	2
 886              		.global	PWM_Set
 887              		.code	16
 888              		.thumb_func
 889              		.type	PWM_Set, %function
 890              	PWM_Set:
 891              	.LFB37:
 649:main.c        ****     
 892              		.loc 1 649 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL86:
 897 0000 70B5     		push	{r4, r5, r6, lr}
 898              		.cfi_def_cfa_offset 16
 899              		.cfi_offset 4, -16
 900              		.cfi_offset 5, -12
 901              		.cfi_offset 6, -8
 902              		.cfi_offset 14, -4
 903 0002 051C     		adds	r5, r0, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 41


 904              	.LVL87:
 654:main.c        ****         drive = PWM_Max_Fwd;
 905              		.loc 1 654 0
 906 0004 194B     		ldr	r3, .L61
 907 0006 0020     		movs	r0, #0
 908              	.LVL88:
 909 0008 1856     		ldrsb	r0, [r3, r0]
 910 000a FFF7FEFF 		bl	__aeabi_i2f
 911              	.LVL89:
 912 000e 041C     		adds	r4, r0, #0
 913 0010 011C     		adds	r1, r0, #0
 914 0012 281C     		adds	r0, r5, #0
 915 0014 FFF7FEFF 		bl	__aeabi_fcmpgt
 916              	.LVL90:
 917 0018 0028     		cmp	r0, #0
 918 001a 0CD1     		bne	.L57
 656:main.c        ****         drive = PWM_Max_Rev;
 919              		.loc 1 656 0
 920 001c 144B     		ldr	r3, .L61+4
 921 001e 0020     		movs	r0, #0
 922 0020 1856     		ldrsb	r0, [r3, r0]
 923 0022 FFF7FEFF 		bl	__aeabi_i2f
 924              	.LVL91:
 925 0026 041C     		adds	r4, r0, #0
 926 0028 011C     		adds	r1, r0, #0
 927 002a 281C     		adds	r0, r5, #0
 928 002c FFF7FEFF 		bl	__aeabi_fcmplt
 929              	.LVL92:
 930 0030 0028     		cmp	r0, #0
 931 0032 00D1     		bne	.L57
 651:main.c        **** 
 932              		.loc 1 651 0
 933 0034 2C1C     		adds	r4, r5, #0
 934              	.L57:
 935              	.LVL93:
 661:main.c        ****         drive = 100;
 936              		.loc 1 661 0
 937 0036 0F49     		ldr	r1, .L61+8
 938 0038 201C     		adds	r0, r4, #0
 939 003a FFF7FEFF 		bl	__aeabi_fcmpgt
 940              	.LVL94:
 941 003e 0028     		cmp	r0, #0
 942 0040 06D1     		bne	.L59
 663:main.c        ****         drive = 0;
 943              		.loc 1 663 0
 944 0042 0021     		movs	r1, #0
 945 0044 201C     		adds	r0, r4, #0
 946 0046 FFF7FEFF 		bl	__aeabi_fcmplt
 947              	.LVL95:
 948 004a 0028     		cmp	r0, #0
 949 004c 03D0     		beq	.L58
 950 004e 01E0     		b	.L60
 951              	.L59:
 662:main.c        ****     } else if (drive < 0) {
 952              		.loc 1 662 0
 953 0050 084C     		ldr	r4, .L61+8
 954              	.LVL96:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 42


 955 0052 00E0     		b	.L58
 956              	.LVL97:
 957              	.L60:
 664:main.c        ****     }
 958              		.loc 1 664 0
 959 0054 0024     		movs	r4, #0
 960              	.LVL98:
 961              	.L58:
 667:main.c        **** }
 962              		.loc 1 667 0
 963 0056 8321     		movs	r1, #131
 964 0058 C905     		lsls	r1, r1, #23
 965 005a 201C     		adds	r0, r4, #0
 966 005c FFF7FEFF 		bl	__aeabi_fmul
 967              	.LVL99:
 968 0060 FFF7FEFF 		bl	__aeabi_f2uiz
 969              	.LVL100:
 970 0064 FFF7FEFF 		bl	PWM_1_WriteCompare
 971              	.LVL101:
 668:main.c        **** 
 972              		.loc 1 668 0
 973              		@ sp needed
 974              	.LVL102:
 975              	.LVL103:
 976 0068 70BD     		pop	{r4, r5, r6, pc}
 977              	.L62:
 978 006a C046     		.align	2
 979              	.L61:
 980 006c 00000000 		.word	PWM_Max_Fwd
 981 0070 00000000 		.word	PWM_Max_Rev
 982 0074 0000C842 		.word	1120403456
 983              		.cfi_endproc
 984              	.LFE37:
 985              		.size	PWM_Set, .-PWM_Set
 986              		.global	__aeabi_ui2f
 987              		.section	.text.PID_Initialize,"ax",%progbits
 988              		.align	2
 989              		.global	PID_Initialize
 990              		.code	16
 991              		.thumb_func
 992              		.type	PID_Initialize, %function
 993              	PID_Initialize:
 994              	.LFB38:
 680:main.c        ****     
 995              		.loc 1 680 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999 0000 70B5     		push	{r4, r5, r6, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 4, -16
 1002              		.cfi_offset 5, -12
 1003              		.cfi_offset 6, -8
 1004              		.cfi_offset 14, -4
 685:main.c        **** 
 1005              		.loc 1 685 0
 1006 0002 FFF7FEFF 		bl	Counter_1_ReadCounter
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 43


 1007              	.LVL104:
 687:main.c        ****     ITerm = Output;
 1008              		.loc 1 687 0
 1009 0006 FFF7FEFF 		bl	__aeabi_ui2f
 1010              	.LVL105:
 1011 000a 0E4B     		ldr	r3, .L71
 1012 000c 1860     		str	r0, [r3]
 688:main.c        ****     
 1013              		.loc 1 688 0
 1014 000e 0E4B     		ldr	r3, .L71+4
 1015 0010 1C68     		ldr	r4, [r3]
 1016 0012 0E4B     		ldr	r3, .L71+8
 1017 0014 1C60     		str	r4, [r3]
 690:main.c        ****         ITerm = outMax;
 1018              		.loc 1 690 0
 1019 0016 0E4B     		ldr	r3, .L71+12
 1020 0018 1D68     		ldr	r5, [r3]
 1021 001a 291C     		adds	r1, r5, #0
 1022 001c 201C     		adds	r0, r4, #0
 1023 001e FFF7FEFF 		bl	__aeabi_fcmpgt
 1024              	.LVL106:
 1025 0022 0028     		cmp	r0, #0
 1026 0024 02D0     		beq	.L70
 691:main.c        ****     } else if (ITerm < outMin) {
 1027              		.loc 1 691 0
 1028 0026 094B     		ldr	r3, .L71+8
 1029 0028 1D60     		str	r5, [r3]
 1030 002a 09E0     		b	.L63
 1031              	.L70:
 692:main.c        ****         ITerm = outMin;
 1032              		.loc 1 692 0
 1033 002c 094B     		ldr	r3, .L71+16
 1034 002e 1D68     		ldr	r5, [r3]
 1035 0030 291C     		adds	r1, r5, #0
 1036 0032 201C     		adds	r0, r4, #0
 1037 0034 FFF7FEFF 		bl	__aeabi_fcmplt
 1038              	.LVL107:
 1039 0038 0028     		cmp	r0, #0
 1040 003a 01D0     		beq	.L63
 693:main.c        ****     }
 1041              		.loc 1 693 0
 1042 003c 034B     		ldr	r3, .L71+8
 1043 003e 1D60     		str	r5, [r3]
 1044              	.L63:
 695:main.c        **** 
 1045              		.loc 1 695 0
 1046              		@ sp needed
 1047 0040 70BD     		pop	{r4, r5, r6, pc}
 1048              	.L72:
 1049 0042 C046     		.align	2
 1050              	.L71:
 1051 0044 00000000 		.word	lastPosition
 1052 0048 00000000 		.word	Output
 1053 004c 00000000 		.word	ITerm
 1054 0050 00000000 		.word	outMax
 1055 0054 00000000 		.word	outMin
 1056              		.cfi_endproc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 44


 1057              	.LFE38:
 1058              		.size	PID_Initialize, .-PID_Initialize
 1059              		.global	__aeabi_fdiv
 1060              		.section	.text.PID_SetTunings,"ax",%progbits
 1061              		.align	2
 1062              		.global	PID_SetTunings
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	PID_SetTunings, %function
 1066              	PID_SetTunings:
 1067              	.LFB39:
 707:main.c        ****     
 1068              		.loc 1 707 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              	.LVL108:
 1073 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1074              		.cfi_def_cfa_offset 24
 1075              		.cfi_offset 3, -24
 1076              		.cfi_offset 4, -20
 1077              		.cfi_offset 5, -16
 1078              		.cfi_offset 6, -12
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 0E1C     		adds	r6, r1, #0
 1082 0004 151C     		adds	r5, r2, #0
 1083 0006 1C1C     		adds	r4, r3, #0
 709:main.c        ****     
 1084              		.loc 1 709 0
 1085 0008 0028     		cmp	r0, #0
 1086 000a 12D0     		beq	.L73
 1087              	.LBB2:
 711:main.c        ****     
 1088              		.loc 1 711 0
 1089 000c FFF7FEFF 		bl	__aeabi_ui2f
 1090              	.LVL109:
 1091 0010 0849     		ldr	r1, .L75
 1092 0012 FFF7FEFF 		bl	__aeabi_fdiv
 1093              	.LVL110:
 1094 0016 071C     		adds	r7, r0, #0
 1095              	.LVL111:
 713:main.c        ****         ki = newKi * sampleTimeInSec;
 1096              		.loc 1 713 0
 1097 0018 074B     		ldr	r3, .L75+4
 1098 001a 1E60     		str	r6, [r3]
 714:main.c        ****         kd = newKd / sampleTimeInSec;        
 1099              		.loc 1 714 0
 1100 001c 291C     		adds	r1, r5, #0
 1101 001e FFF7FEFF 		bl	__aeabi_fmul
 1102              	.LVL112:
 1103 0022 064B     		ldr	r3, .L75+8
 1104 0024 1860     		str	r0, [r3]
 715:main.c        ****     }
 1105              		.loc 1 715 0
 1106 0026 391C     		adds	r1, r7, #0
 1107 0028 201C     		adds	r0, r4, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 45


 1108 002a FFF7FEFF 		bl	__aeabi_fdiv
 1109              	.LVL113:
 1110 002e 044B     		ldr	r3, .L75+12
 1111 0030 1860     		str	r0, [r3]
 1112              	.LVL114:
 1113              	.L73:
 1114              	.LBE2:
 717:main.c        **** 
 1115              		.loc 1 717 0
 1116              		@ sp needed
 1117              	.LVL115:
 1118              	.LVL116:
 1119              	.LVL117:
 1120 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1121              	.L76:
 1122              		.align	2
 1123              	.L75:
 1124 0034 00007A44 		.word	1148846080
 1125 0038 00000000 		.word	kp
 1126 003c 00000000 		.word	ki
 1127 0040 00000000 		.word	kd
 1128              		.cfi_endproc
 1129              	.LFE39:
 1130              		.size	PID_SetTunings, .-PID_SetTunings
 1131              		.global	__aeabi_fadd
 1132              		.global	__aeabi_fsub
 1133              		.global	__aeabi_f2iz
 1134              		.section	.text.PID_Compute,"ax",%progbits
 1135              		.align	2
 1136              		.global	PID_Compute
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	PID_Compute, %function
 1140              	PID_Compute:
 1141              	.LFB40:
 729:main.c        ****     
 1142              		.loc 1 729 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 8
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              	.LVL118:
 1147 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1148              		.cfi_def_cfa_offset 20
 1149              		.cfi_offset 4, -20
 1150              		.cfi_offset 5, -16
 1151              		.cfi_offset 6, -12
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154 0002 4F46     		mov	r7, r9
 1155 0004 80B4     		push	{r7}
 1156              		.cfi_def_cfa_offset 24
 1157              		.cfi_offset 9, -24
 1158 0006 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 32
 1160 0008 0400     		movs	r4, r0
 1161 000a 0D00     		movs	r5, r1
 735:main.c        ****         return 0;
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 46


 1162              		.loc 1 735 0
 1163 000c 3D4B     		ldr	r3, .L95
 1164 000e 1B78     		ldrb	r3, [r3]
 1165 0010 002B     		cmp	r3, #0
 1166 0012 72D0     		beq	.L88
 739:main.c        **** 
 1167              		.loc 1 739 0
 1168 0014 FFF7FEFF 		bl	Counter_1_ReadCounter
 1169              	.LVL119:
 1170 0018 0600     		movs	r6, r0
 1171              	.LVL120:
 742:main.c        ****     
 1172              		.loc 1 742 0
 1173 001a 3B4B     		ldr	r3, .L95+4
 1174 001c 1868     		ldr	r0, [r3]
 1175              	.LVL121:
 1176 001e 201A     		subs	r0, r4, r0
 1177              	.LVL122:
 745:main.c        **** 
 1178              		.loc 1 745 0
 1179 0020 3A4B     		ldr	r3, .L95+8
 1180 0022 1B68     		ldr	r3, [r3]
 1181 0024 9842     		cmp	r0, r3
 1182 0026 65D3     		bcc	.L79
 749:main.c        ****         
 1183              		.loc 1 749 0
 1184 0028 394B     		ldr	r3, .L95+12
 1185 002a 1B68     		ldr	r3, [r3]
 1186 002c 394A     		ldr	r2, .L95+16
 1187 002e 1268     		ldr	r2, [r2]
 1188 0030 3949     		ldr	r1, .L95+20
 1189 0032 0968     		ldr	r1, [r1]
 1190 0034 FFF7FEFF 		bl	PID_SetTunings
 1191              	.LVL123:
 752:main.c        ****         ITerm += (ki * error);
 1192              		.loc 1 752 0
 1193 0038 A81B     		subs	r0, r5, r6
 1194              	.LVL124:
 753:main.c        ****         
 1195              		.loc 1 753 0
 1196 003a FFF7FEFF 		bl	__aeabi_i2f
 1197              	.LVL125:
 1198 003e 0190     		str	r0, [sp, #4]
 1199 0040 364B     		ldr	r3, .L95+24
 1200 0042 1968     		ldr	r1, [r3]
 1201 0044 FFF7FEFF 		bl	__aeabi_fmul
 1202              	.LVL126:
 1203 0048 354F     		ldr	r7, .L95+28
 1204 004a 3968     		ldr	r1, [r7]
 1205 004c FFF7FEFF 		bl	__aeabi_fadd
 1206              	.LVL127:
 1207 0050 051C     		adds	r5, r0, #0
 1208              	.LVL128:
 1209 0052 3860     		str	r0, [r7]
 756:main.c        ****             ITerm = outMax;
 1210              		.loc 1 756 0
 1211 0054 334B     		ldr	r3, .L95+32
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 47


 1212 0056 1F68     		ldr	r7, [r3]
 1213 0058 391C     		adds	r1, r7, #0
 1214 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 1215              	.LVL129:
 1216 005e 0028     		cmp	r0, #0
 1217 0060 02D0     		beq	.L93
 757:main.c        ****         } else if (ITerm < outMin) {
 1218              		.loc 1 757 0
 1219 0062 2F4B     		ldr	r3, .L95+28
 1220 0064 1F60     		str	r7, [r3]
 1221 0066 0BE0     		b	.L82
 1222              	.L93:
 758:main.c        ****             ITerm = outMin;
 1223              		.loc 1 758 0
 1224 0068 2F4B     		ldr	r3, .L95+36
 1225 006a 1B68     		ldr	r3, [r3]
 1226 006c 9946     		mov	r9, r3
 1227 006e 191C     		adds	r1, r3, #0
 1228 0070 281C     		adds	r0, r5, #0
 1229 0072 FFF7FEFF 		bl	__aeabi_fcmplt
 1230              	.LVL130:
 1231 0076 0028     		cmp	r0, #0
 1232 0078 02D0     		beq	.L82
 759:main.c        ****         }
 1233              		.loc 1 759 0
 1234 007a 294B     		ldr	r3, .L95+28
 1235 007c 4A46     		mov	r2, r9
 1236 007e 1A60     		str	r2, [r3]
 1237              	.L82:
 763:main.c        **** 
 1238              		.loc 1 763 0
 1239 0080 3000     		movs	r0, r6
 1240 0082 FFF7FEFF 		bl	__aeabi_ui2f
 1241              	.LVL131:
 1242 0086 051C     		adds	r5, r0, #0
 1243 0088 284B     		ldr	r3, .L95+40
 1244 008a 1968     		ldr	r1, [r3]
 1245 008c FFF7FEFF 		bl	__aeabi_fsub
 1246              	.LVL132:
 1247 0090 FFF7FEFF 		bl	__aeabi_f2iz
 1248              	.LVL133:
 1249 0094 0600     		movs	r6, r0
 1250              	.LVL134:
 766:main.c        ****         
 1251              		.loc 1 766 0
 1252 0096 264B     		ldr	r3, .L95+44
 1253 0098 1968     		ldr	r1, [r3]
 1254 009a 0198     		ldr	r0, [sp, #4]
 1255              	.LVL135:
 1256 009c FFF7FEFF 		bl	__aeabi_fmul
 1257              	.LVL136:
 1258 00a0 1F4B     		ldr	r3, .L95+28
 1259 00a2 1968     		ldr	r1, [r3]
 1260 00a4 FFF7FEFF 		bl	__aeabi_fadd
 1261              	.LVL137:
 1262 00a8 0190     		str	r0, [sp, #4]
 1263 00aa 3000     		movs	r0, r6
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 48


 1264 00ac FFF7FEFF 		bl	__aeabi_i2f
 1265              	.LVL138:
 1266 00b0 204B     		ldr	r3, .L95+48
 1267 00b2 1968     		ldr	r1, [r3]
 1268 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1269              	.LVL139:
 1270 00b8 011C     		adds	r1, r0, #0
 1271 00ba 0198     		ldr	r0, [sp, #4]
 1272 00bc FFF7FEFF 		bl	__aeabi_fsub
 1273              	.LVL140:
 1274 00c0 061C     		adds	r6, r0, #0
 1275              	.LVL141:
 1276 00c2 1D4B     		ldr	r3, .L95+52
 1277 00c4 1860     		str	r0, [r3]
 769:main.c        ****             Output = outMax;
 1278              		.loc 1 769 0
 1279 00c6 011C     		adds	r1, r0, #0
 1280 00c8 381C     		adds	r0, r7, #0
 1281 00ca FFF7FEFF 		bl	__aeabi_fcmplt
 1282              	.LVL142:
 1283 00ce 0028     		cmp	r0, #0
 1284 00d0 02D0     		beq	.L94
 770:main.c        ****         } else if (Output < outMin) {
 1285              		.loc 1 770 0
 1286 00d2 194B     		ldr	r3, .L95+52
 1287 00d4 1F60     		str	r7, [r3]
 1288 00d6 09E0     		b	.L86
 1289              	.L94:
 771:main.c        ****             Output = outMin;
 1290              		.loc 1 771 0
 1291 00d8 134B     		ldr	r3, .L95+36
 1292 00da 1F68     		ldr	r7, [r3]
 1293 00dc 391C     		adds	r1, r7, #0
 1294 00de 301C     		adds	r0, r6, #0
 1295 00e0 FFF7FEFF 		bl	__aeabi_fcmplt
 1296              	.LVL143:
 1297 00e4 0028     		cmp	r0, #0
 1298 00e6 01D0     		beq	.L86
 772:main.c        ****         }
 1299              		.loc 1 772 0
 1300 00e8 134B     		ldr	r3, .L95+52
 1301 00ea 1F60     		str	r7, [r3]
 1302              	.L86:
 776:main.c        ****         lastTime = now;        
 1303              		.loc 1 776 0
 1304 00ec 0F4B     		ldr	r3, .L95+40
 1305 00ee 1D60     		str	r5, [r3]
 777:main.c        ****     }
 1306              		.loc 1 777 0
 1307 00f0 054B     		ldr	r3, .L95+4
 1308 00f2 1C60     		str	r4, [r3]
 1309              	.L79:
 780:main.c        **** }
 1310              		.loc 1 780 0
 1311 00f4 104B     		ldr	r3, .L95+52
 1312 00f6 1868     		ldr	r0, [r3]
 1313 00f8 00E0     		b	.L78
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 49


 1314              	.LVL144:
 1315              	.L88:
 736:main.c        ****     
 1316              		.loc 1 736 0
 1317 00fa 0020     		movs	r0, #0
 1318              	.LVL145:
 1319              	.L78:
 781:main.c        ****  
 1320              		.loc 1 781 0
 1321 00fc 02B0     		add	sp, sp, #8
 1322              		@ sp needed
 1323              	.LVL146:
 1324 00fe 04BC     		pop	{r2}
 1325 0100 9146     		mov	r9, r2
 1326 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 1327              	.L96:
 1328              		.align	2
 1329              	.L95:
 1330 0104 00000000 		.word	.LANCHOR0
 1331 0108 00000000 		.word	lastTime
 1332 010c 00000000 		.word	.LANCHOR1
 1333 0110 00000000 		.word	refKd
 1334 0114 00000000 		.word	refKi
 1335 0118 00000000 		.word	refKp
 1336 011c 00000000 		.word	ki
 1337 0120 00000000 		.word	ITerm
 1338 0124 00000000 		.word	outMax
 1339 0128 00000000 		.word	outMin
 1340 012c 00000000 		.word	lastPosition
 1341 0130 00000000 		.word	kp
 1342 0134 00000000 		.word	kd
 1343 0138 00000000 		.word	Output
 1344              		.cfi_endproc
 1345              	.LFE40:
 1346              		.size	PID_Compute, .-PID_Compute
 1347              		.section	.text.PID_SetOutputLimits,"ax",%progbits
 1348              		.align	2
 1349              		.global	PID_SetOutputLimits
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	PID_SetOutputLimits, %function
 1353              	PID_SetOutputLimits:
 1354              	.LFB41:
 795:main.c        ****     
 1355              		.loc 1 795 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              	.LVL147:
 1360 0000 70B5     		push	{r4, r5, r6, lr}
 1361              		.cfi_def_cfa_offset 16
 1362              		.cfi_offset 4, -16
 1363              		.cfi_offset 5, -12
 1364              		.cfi_offset 6, -8
 1365              		.cfi_offset 14, -4
 1366 0002 051C     		adds	r5, r0, #0
 1367 0004 0C1C     		adds	r4, r1, #0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 50


 797:main.c        ****         return;
 1368              		.loc 1 797 0
 1369 0006 FFF7FEFF 		bl	__aeabi_fcmpgt
 1370              	.LVL148:
 1371 000a 0028     		cmp	r0, #0
 1372 000c 29D1     		bne	.L97
 801:main.c        ****     outMax = Max;
 1373              		.loc 1 801 0
 1374 000e 154B     		ldr	r3, .L112
 1375 0010 1D60     		str	r5, [r3]
 802:main.c        **** 
 1376              		.loc 1 802 0
 1377 0012 154B     		ldr	r3, .L112+4
 1378 0014 1C60     		str	r4, [r3]
 805:main.c        ****         Output = outMax;
 1379              		.loc 1 805 0
 1380 0016 154B     		ldr	r3, .L112+8
 1381 0018 1E68     		ldr	r6, [r3]
 1382 001a 311C     		adds	r1, r6, #0
 1383 001c 201C     		adds	r0, r4, #0
 1384 001e FFF7FEFF 		bl	__aeabi_fcmplt
 1385              	.LVL149:
 1386 0022 0028     		cmp	r0, #0
 1387 0024 02D0     		beq	.L110
 806:main.c        ****     } else if (Output < outMin) {
 1388              		.loc 1 806 0
 1389 0026 114B     		ldr	r3, .L112+8
 1390 0028 1C60     		str	r4, [r3]
 1391 002a 07E0     		b	.L101
 1392              	.L110:
 807:main.c        ****         Output = outMin;
 1393              		.loc 1 807 0
 1394 002c 311C     		adds	r1, r6, #0
 1395 002e 281C     		adds	r0, r5, #0
 1396 0030 FFF7FEFF 		bl	__aeabi_fcmpgt
 1397              	.LVL150:
 1398 0034 0028     		cmp	r0, #0
 1399 0036 01D0     		beq	.L101
 808:main.c        ****     }
 1400              		.loc 1 808 0
 1401 0038 0C4B     		ldr	r3, .L112+8
 1402 003a 1D60     		str	r5, [r3]
 1403              	.L101:
 812:main.c        ****         ITerm = outMax;
 1404              		.loc 1 812 0
 1405 003c 0C4B     		ldr	r3, .L112+12
 1406 003e 1E68     		ldr	r6, [r3]
 1407 0040 311C     		adds	r1, r6, #0
 1408 0042 201C     		adds	r0, r4, #0
 1409 0044 FFF7FEFF 		bl	__aeabi_fcmplt
 1410              	.LVL151:
 1411 0048 0028     		cmp	r0, #0
 1412 004a 02D0     		beq	.L111
 813:main.c        ****     } else if (ITerm < outMin) {
 1413              		.loc 1 813 0
 1414 004c 084B     		ldr	r3, .L112+12
 1415 004e 1C60     		str	r4, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 51


 1416 0050 07E0     		b	.L97
 1417              	.L111:
 814:main.c        ****         ITerm = outMin;
 1418              		.loc 1 814 0
 1419 0052 311C     		adds	r1, r6, #0
 1420 0054 281C     		adds	r0, r5, #0
 1421 0056 FFF7FEFF 		bl	__aeabi_fcmpgt
 1422              	.LVL152:
 1423 005a 0028     		cmp	r0, #0
 1424 005c 01D0     		beq	.L97
 815:main.c        ****     }
 1425              		.loc 1 815 0
 1426 005e 044B     		ldr	r3, .L112+12
 1427 0060 1D60     		str	r5, [r3]
 1428              	.L97:
 817:main.c        ****  
 1429              		.loc 1 817 0
 1430              		@ sp needed
 1431              	.LVL153:
 1432              	.LVL154:
 1433 0062 70BD     		pop	{r4, r5, r6, pc}
 1434              	.L113:
 1435              		.align	2
 1436              	.L112:
 1437 0064 00000000 		.word	outMin
 1438 0068 00000000 		.word	outMax
 1439 006c 00000000 		.word	Output
 1440 0070 00000000 		.word	ITerm
 1441              		.cfi_endproc
 1442              	.LFE41:
 1443              		.size	PID_SetOutputLimits, .-PID_SetOutputLimits
 1444              		.section	.text.PID_SetMode,"ax",%progbits
 1445              		.align	2
 1446              		.global	PID_SetMode
 1447              		.code	16
 1448              		.thumb_func
 1449              		.type	PID_SetMode, %function
 1450              	PID_SetMode:
 1451              	.LFB42:
 828:main.c        ****     
 1452              		.loc 1 828 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL155:
 1457 0000 10B5     		push	{r4, lr}
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 4, -8
 1460              		.cfi_offset 14, -4
 830:main.c        ****     
 1461              		.loc 1 830 0
 1462 0002 441E     		subs	r4, r0, #1
 1463 0004 6342     		rsbs	r3, r4, #0
 1464 0006 5C41     		adcs	r4, r4, r3
 1465 0008 E4B2     		uxtb	r4, r4
 1466              	.LVL156:
 832:main.c        ****         /*we just went from manual to auto*/
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 52


 1467              		.loc 1 832 0
 1468 000a 0128     		cmp	r0, #1
 1469 000c 05D1     		bne	.L115
 832:main.c        ****         /*we just went from manual to auto*/
 1470              		.loc 1 832 0 is_stmt 0 discriminator 1
 1471 000e 044B     		ldr	r3, .L116
 1472 0010 1B78     		ldrb	r3, [r3]
 1473 0012 002B     		cmp	r3, #0
 1474 0014 01D1     		bne	.L115
 834:main.c        ****     }
 1475              		.loc 1 834 0 is_stmt 1
 1476 0016 FFF7FEFF 		bl	PID_Initialize
 1477              	.LVL157:
 1478              	.L115:
 837:main.c        **** } 
 1479              		.loc 1 837 0
 1480 001a 014B     		ldr	r3, .L116
 1481 001c 1C70     		strb	r4, [r3]
 838:main.c        ****     
 1482              		.loc 1 838 0
 1483              		@ sp needed
 1484              	.LVL158:
 1485 001e 10BD     		pop	{r4, pc}
 1486              	.L117:
 1487              		.align	2
 1488              	.L116:
 1489 0020 00000000 		.word	.LANCHOR0
 1490              		.cfi_endproc
 1491              	.LFE42:
 1492              		.size	PID_SetMode, .-PID_SetMode
 1493              		.section	.text.PID_SetDrive,"ax",%progbits
 1494              		.align	2
 1495              		.global	PID_SetDrive
 1496              		.code	16
 1497              		.thumb_func
 1498              		.type	PID_SetDrive, %function
 1499              	PID_SetDrive:
 1500              	.LFB43:
 849:main.c        ****     
 1501              		.loc 1 849 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505              	.LVL159:
 1506 0000 10B5     		push	{r4, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
 853:main.c        ****     
 1510              		.loc 1 853 0
 1511 0002 0549     		ldr	r1, .L119
 1512 0004 FFF7FEFF 		bl	__aeabi_fadd
 1513              	.LVL160:
 1514 0008 FC21     		movs	r1, #252
 1515 000a 8905     		lsls	r1, r1, #22
 1516 000c FFF7FEFF 		bl	__aeabi_fmul
 1517              	.LVL161:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 53


 856:main.c        **** }
 1518              		.loc 1 856 0
 1519 0010 FFF7FEFF 		bl	PWM_Set
 1520              	.LVL162:
 857:main.c        **** 
 1521              		.loc 1 857 0
 1522              		@ sp needed
 1523 0014 10BD     		pop	{r4, pc}
 1524              	.L120:
 1525 0016 C046     		.align	2
 1526              	.L119:
 1527 0018 0000C842 		.word	1120403456
 1528              		.cfi_endproc
 1529              	.LFE43:
 1530              		.size	PID_SetDrive, .-PID_SetDrive
 1531              		.section	.text.PID_Task,"ax",%progbits
 1532              		.align	2
 1533              		.global	PID_Task
 1534              		.code	16
 1535              		.thumb_func
 1536              		.type	PID_Task, %function
 1537              	PID_Task:
 1538              	.LFB44:
 871:main.c        ****     
 1539              		.loc 1 871 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              	.LVL163:
 1544 0000 70B5     		push	{r4, r5, r6, lr}
 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 4, -16
 1547              		.cfi_offset 5, -12
 1548              		.cfi_offset 6, -8
 1549              		.cfi_offset 14, -4
 1550              	.LVL164:
 881:main.c        ****     
 1551              		.loc 1 881 0
 1552 0002 0020     		movs	r0, #0
 1553              	.LVL165:
 1554 0004 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1555              	.LVL166:
 1556 0008 564B     		ldr	r3, .L132
 1557 000a 1860     		str	r0, [r3]
 887:main.c        ****     refKi = 0;
 1558              		.loc 1 887 0
 1559 000c 564C     		ldr	r4, .L132+4
 1560 000e 0023     		movs	r3, #0
 1561 0010 2360     		str	r3, [r4]
 888:main.c        ****     refKd = 0;
 1562              		.loc 1 888 0
 1563 0012 564D     		ldr	r5, .L132+8
 1564 0014 2B60     		str	r3, [r5]
 889:main.c        ****     
 1565              		.loc 1 889 0
 1566 0016 564E     		ldr	r6, .L132+12
 1567 0018 3360     		str	r3, [r6]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 54


 892:main.c        ****     PID_SetTunings(sleeptime, refKp, refKi, refKd);
 1568              		.loc 1 892 0
 1569 001a FFF7FEFF 		bl	PID_Initialize
 1570              	.LVL167:
 893:main.c        ****     PID_SetOutputLimits(-100.0, 100.0);
 1571              		.loc 1 893 0
 1572 001e 3368     		ldr	r3, [r6]
 1573 0020 2A68     		ldr	r2, [r5]
 1574 0022 2168     		ldr	r1, [r4]
 1575 0024 0520     		movs	r0, #5
 1576 0026 FFF7FEFF 		bl	PID_SetTunings
 1577              	.LVL168:
 894:main.c        ****     PID_SetMode(PID_MANUAL);
 1578              		.loc 1 894 0
 1579 002a 5249     		ldr	r1, .L132+16
 1580 002c 5248     		ldr	r0, .L132+20
 1581 002e FFF7FEFF 		bl	PID_SetOutputLimits
 1582              	.LVL169:
 895:main.c        **** 
 1583              		.loc 1 895 0
 1584 0032 0020     		movs	r0, #0
 1585 0034 FFF7FEFF 		bl	PID_SetMode
 1586              	.LVL170:
 900:main.c        ****     PID_Was_Enabled = false;
 1587              		.loc 1 900 0
 1588 0038 0023     		movs	r3, #0
 1589 003a 504A     		ldr	r2, .L132+24
 1590 003c 1360     		str	r3, [r2]
 901:main.c        ****     PID_Enabled = false;
 1591              		.loc 1 901 0
 1592 003e 504A     		ldr	r2, .L132+28
 1593 0040 1370     		strb	r3, [r2]
 902:main.c        ****     
 1594              		.loc 1 902 0
 1595 0042 504A     		ldr	r2, .L132+32
 1596 0044 1370     		strb	r3, [r2]
 1597              	.LVL171:
 1598              	.L131:
 910:main.c        ****         /* ------------------------------------------------------------------------------------ */
 1599              		.loc 1 910 0
 1600 0046 8020     		movs	r0, #128
 1601 0048 0001     		lsls	r0, r0, #4
 1602 004a FFF7FEFF 		bl	CySysWdtResetCounters
 1603              	.LVL172:
 918:main.c        ****         if ( (now > (LastMessageTimeTick + MAX_LAST_MESSAGE_TIME_TICKS)) ||
 1604              		.loc 1 918 0
 1605 004e FFF7FEFF 		bl	xTaskGetTickCount
 1606              	.LVL173:
 1607 0052 0400     		movs	r4, r0
 1608              	.LVL174:
 919:main.c        ****              (now < LastMessageTimeTick) ) {
 1609              		.loc 1 919 0
 1610 0054 4C4B     		ldr	r3, .L132+36
 1611 0056 1B68     		ldr	r3, [r3]
 1612 0058 FA22     		movs	r2, #250
 1613 005a 9200     		lsls	r2, r2, #2
 1614 005c 9A18     		adds	r2, r3, r2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 55


 1615 005e 9042     		cmp	r0, r2
 1616 0060 01D8     		bhi	.L122
 919:main.c        ****              (now < LastMessageTimeTick) ) {
 1617              		.loc 1 919 0 is_stmt 0 discriminator 1
 1618 0062 9842     		cmp	r0, r3
 1619 0064 08D2     		bcs	.L123
 1620              	.L122:
 923:main.c        ****             PID_Enabled = false;
 1621              		.loc 1 923 0 is_stmt 1
 1622 0066 4948     		ldr	r0, .L132+40
 1623              	.LVL175:
 1624 0068 FFF7FEFF 		bl	PWM_Set
 1625              	.LVL176:
 924:main.c        ****             
 1626              		.loc 1 924 0
 1627 006c 0023     		movs	r3, #0
 1628 006e 454A     		ldr	r2, .L132+32
 1629 0070 1370     		strb	r3, [r2]
 928:main.c        **** 
 1630              		.loc 1 928 0
 1631 0072 474A     		ldr	r2, .L132+44
 1632 0074 1370     		strb	r3, [r2]
 1633 0076 6CE0     		b	.L124
 1634              	.LVL177:
 1635              	.L123:
 931:main.c        ****         
 1636              		.loc 1 931 0
 1637 0078 464B     		ldr	r3, .L132+48
 1638 007a 1B78     		ldrb	r3, [r3]
 1639 007c 022B     		cmp	r3, #2
 1640 007e 68D1     		bne	.L124
 934:main.c        ****                 
 1641              		.loc 1 934 0
 1642 0080 404B     		ldr	r3, .L132+32
 1643 0082 1B78     		ldrb	r3, [r3]
 1644 0084 002B     		cmp	r3, #0
 1645 0086 3BD1     		bne	.L125
 938:main.c        ****                     
 1646              		.loc 1 938 0
 1647 0088 414B     		ldr	r3, .L132+44
 1648 008a 1A78     		ldrb	r2, [r3]
 1649 008c 52B2     		sxtb	r2, r2
 1650 008e 424B     		ldr	r3, .L132+52
 1651 0090 1B78     		ldrb	r3, [r3]
 1652 0092 5BB2     		sxtb	r3, r3
 1653 0094 9A42     		cmp	r2, r3
 1654 0096 0FD0     		beq	.L126
 938:main.c        ****                     
 1655              		.loc 1 938 0 is_stmt 0 discriminator 1
 1656 0098 3D4B     		ldr	r3, .L132+44
 1657 009a 1B78     		ldrb	r3, [r3]
 1658 009c 002B     		cmp	r3, #0
 1659 009e 0BD0     		beq	.L126
 941:main.c        ****                     
 1660              		.loc 1 941 0 is_stmt 1
 1661 00a0 3B4B     		ldr	r3, .L132+44
 1662 00a2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 56


 1663 00a4 5BB2     		sxtb	r3, r3
 1664 00a6 3C4A     		ldr	r2, .L132+52
 1665 00a8 1370     		strb	r3, [r2]
 944:main.c        ****                     
 1666              		.loc 1 944 0
 1667 00aa FFF7FEFF 		bl	Counter_1_ReadCounter
 1668              	.LVL178:
 1669 00ae 3B4B     		ldr	r3, .L132+56
 1670 00b0 1860     		str	r0, [r3]
 947:main.c        ****                 }                
 1671              		.loc 1 947 0
 1672 00b2 0020     		movs	r0, #0
 1673 00b4 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1674              	.LVL179:
 1675              	.L126:
 951:main.c        **** 
 1676              		.loc 1 951 0
 1677 00b8 354D     		ldr	r5, .L132+44
 1678 00ba 2878     		ldrb	r0, [r5]
 1679 00bc 40B2     		sxtb	r0, r0
 1680 00be 3230     		adds	r0, r0, #50
 1681 00c0 FFF7FEFF 		bl	__aeabi_i2f
 1682              	.LVL180:
 1683 00c4 FFF7FEFF 		bl	PWM_Set
 1684              	.LVL181:
 954:main.c        ****                 
 1685              		.loc 1 954 0
 1686 00c8 2B78     		ldrb	r3, [r5]
 1687 00ca 002B     		cmp	r3, #0
 1688 00cc 18D0     		beq	.L125
 958:main.c        ****                     DeltaPosition = labs( ((int32) CurrentPosition) - ((int32) PID_Last_Position) )
 1689              		.loc 1 958 0
 1690 00ce FFF7FEFF 		bl	Counter_1_ReadCounter
 1691              	.LVL182:
 959:main.c        ****                     CurrentIndexCount = Index_Counter_1_ReadCounter();
 1692              		.loc 1 959 0
 1693 00d2 324B     		ldr	r3, .L132+56
 1694 00d4 1D68     		ldr	r5, [r3]
 1695 00d6 451B     		subs	r5, r0, r5
 1696 00d8 EB17     		asrs	r3, r5, #31
 1697 00da ED18     		adds	r5, r5, r3
 1698 00dc 5D40     		eors	r5, r3
 1699              	.LVL183:
 960:main.c        ****                     
 1700              		.loc 1 960 0
 1701 00de FFF7FEFF 		bl	Index_Counter_1_ReadCounter
 1702              	.LVL184:
 1703 00e2 061E     		subs	r6, r0, #0
 1704              	.LVL185:
 963:main.c        ****                         if (DeltaPosition > 2*ENCODER_COUNTS_PER_INDEX) 
 1705              		.loc 1 963 0
 1706 00e4 05D1     		bne	.L127
 964:main.c        ****                             AssertFault(fsIndex);        
 1707              		.loc 1 964 0
 1708 00e6 2E4B     		ldr	r3, .L132+60
 1709 00e8 9D42     		cmp	r5, r3
 1710 00ea 02DD     		ble	.L127
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 57


 965:main.c        ****                     
 1711              		.loc 1 965 0
 1712 00ec 0420     		movs	r0, #4
 1713              	.LVL186:
 1714 00ee FFF7FEFF 		bl	AssertFault
 1715              	.LVL187:
 1716              	.L127:
 968:main.c        ****                         AssertFault(fsEncoder);
 1717              		.loc 1 968 0
 1718 00f2 002E     		cmp	r6, #0
 1719 00f4 04D0     		beq	.L125
 968:main.c        ****                         AssertFault(fsEncoder);
 1720              		.loc 1 968 0 is_stmt 0 discriminator 1
 1721 00f6 012D     		cmp	r5, #1
 1722 00f8 02DC     		bgt	.L125
 969:main.c        ****                 }
 1723              		.loc 1 969 0 is_stmt 1
 1724 00fa 0220     		movs	r0, #2
 1725 00fc FFF7FEFF 		bl	AssertFault
 1726              	.LVL188:
 1727              	.L125:
 975:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1728              		.loc 1 975 0
 1729 0100 1F4B     		ldr	r3, .L132+28
 1730 0102 1B78     		ldrb	r3, [r3]
 1731 0104 002B     		cmp	r3, #0
 1732 0106 07D1     		bne	.L128
 975:main.c        ****                 PID_SetMode(PID_AUTOMATIC);
 1733              		.loc 1 975 0 is_stmt 0 discriminator 1
 1734 0108 1E4A     		ldr	r2, .L132+32
 1735 010a 1278     		ldrb	r2, [r2]
 1736 010c 002A     		cmp	r2, #0
 1737 010e 03D0     		beq	.L128
 976:main.c        ****             } else if (!PID_Enabled && PID_Was_Enabled) {
 1738              		.loc 1 976 0 is_stmt 1
 1739 0110 0120     		movs	r0, #1
 1740 0112 FFF7FEFF 		bl	PID_SetMode
 1741              	.LVL189:
 1742 0116 08E0     		b	.L129
 1743              	.L128:
 977:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1744              		.loc 1 977 0
 1745 0118 1A4A     		ldr	r2, .L132+32
 1746 011a 1278     		ldrb	r2, [r2]
 1747 011c 002A     		cmp	r2, #0
 1748 011e 04D1     		bne	.L129
 977:main.c        ****                 PID_SetMode(PID_MANUAL);                
 1749              		.loc 1 977 0 is_stmt 0 discriminator 1
 1750 0120 002B     		cmp	r3, #0
 1751 0122 02D0     		beq	.L129
 978:main.c        ****             } else {
 1752              		.loc 1 978 0 is_stmt 1
 1753 0124 0020     		movs	r0, #0
 1754 0126 FFF7FEFF 		bl	PID_SetMode
 1755              	.LVL190:
 1756              	.L129:
 984:main.c        ****             
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 58


 1757              		.loc 1 984 0
 1758 012a 164D     		ldr	r5, .L132+32
 1759 012c 2A78     		ldrb	r2, [r5]
 1760 012e 144B     		ldr	r3, .L132+28
 1761 0130 1A70     		strb	r2, [r3]
 988:main.c        ****             
 1762              		.loc 1 988 0
 1763 0132 124B     		ldr	r3, .L132+24
 1764 0134 1968     		ldr	r1, [r3]
 1765 0136 2000     		movs	r0, r4
 1766 0138 FFF7FEFF 		bl	PID_Compute
 1767              	.LVL191:
 991:main.c        ****                 
 1768              		.loc 1 991 0
 1769 013c 2B78     		ldrb	r3, [r5]
 1770 013e 002B     		cmp	r3, #0
 1771 0140 04D0     		beq	.L130
 994:main.c        ****                 
 1772              		.loc 1 994 0
 1773 0142 184B     		ldr	r3, .L132+64
 1774 0144 1860     		str	r0, [r3]
 997:main.c        ****                 
 1775              		.loc 1 997 0
 1776 0146 FFF7FEFF 		bl	PID_SetDrive
 1777              	.LVL192:
 1778 014a 02E0     		b	.L124
 1779              	.LVL193:
 1780              	.L130:
1001:main.c        ****             }
 1781              		.loc 1 1001 0
 1782 014c 0022     		movs	r2, #0
 1783 014e 154B     		ldr	r3, .L132+64
 1784 0150 1A60     		str	r2, [r3]
 1785              	.LVL194:
 1786              	.L124:
1007:main.c        **** 
 1787              		.loc 1 1007 0
 1788 0152 0520     		movs	r0, #5
 1789 0154 FFF7FEFF 		bl	vTaskDelay
 1790              	.LVL195:
1010:main.c        ****     }
 1791              		.loc 1 1010 0
 1792 0158 0020     		movs	r0, #0
 1793 015a FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 1794              	.LVL196:
 1795 015e 014B     		ldr	r3, .L132
 1796 0160 1860     		str	r0, [r3]
1011:main.c        ****    
 1797              		.loc 1 1011 0
 1798 0162 70E7     		b	.L131
 1799              	.L133:
 1800              		.align	2
 1801              	.L132:
 1802 0164 00000000 		.word	uxHighWaterMark_PID
 1803 0168 00000000 		.word	refKp
 1804 016c 00000000 		.word	refKi
 1805 0170 00000000 		.word	refKd
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 59


 1806 0174 0000C842 		.word	1120403456
 1807 0178 0000C8C2 		.word	-1027080192
 1808 017c 00000000 		.word	PID_Setpoint
 1809 0180 00000000 		.word	PID_Was_Enabled
 1810 0184 00000000 		.word	PID_Enabled
 1811 0188 00000000 		.word	LastMessageTimeTick
 1812 018c 00004842 		.word	1112014848
 1813 0190 00000000 		.word	Jog
 1814 0194 00000000 		.word	ConfigState
 1815 0198 00000000 		.word	Last_Jog
 1816 019c 00000000 		.word	PID_Last_Position
 1817 01a0 204E0000 		.word	20000
 1818 01a4 00000000 		.word	PWM
 1819              		.cfi_endproc
 1820              	.LFE44:
 1821              		.size	PID_Task, .-PID_Task
 1822              		.section	.text.main,"ax",%progbits
 1823              		.align	2
 1824              		.global	main
 1825              		.code	16
 1826              		.thumb_func
 1827              		.type	main, %function
 1828              	main:
 1829              	.LFB45:
1026:main.c        ****     
 1830              		.loc 1 1026 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834 0000 30B5     		push	{r4, r5, lr}
 1835              		.cfi_def_cfa_offset 12
 1836              		.cfi_offset 4, -12
 1837              		.cfi_offset 5, -8
 1838              		.cfi_offset 14, -4
 1839 0002 83B0     		sub	sp, sp, #12
 1840              		.cfi_def_cfa_offset 24
1029:main.c        ****         
 1841              		.loc 1 1029 0
 1842 0004 FFF7FEFF 		bl	setupFreeRTOS
 1843              	.LVL197:
1032:main.c        ****         PID_Task,       /* Task function */
 1844              		.loc 1 1032 0
 1845 0008 0024     		movs	r4, #0
 1846 000a 0194     		str	r4, [sp, #4]
 1847 000c 0223     		movs	r3, #2
 1848 000e 0093     		str	r3, [sp]
 1849 0010 0023     		movs	r3, #0
 1850 0012 4022     		movs	r2, #64
 1851 0014 3849     		ldr	r1, .L137
 1852 0016 3948     		ldr	r0, .L137+4
 1853 0018 FFF7FEFF 		bl	xTaskCreate
 1854              	.LVL198:
1040:main.c        ****         Comm_Task,       /* Task function */
 1855              		.loc 1 1040 0
 1856 001c 0194     		str	r4, [sp, #4]
 1857 001e 0323     		movs	r3, #3
 1858 0020 0093     		str	r3, [sp]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 60


 1859 0022 0023     		movs	r3, #0
 1860 0024 6422     		movs	r2, #100
 1861 0026 3649     		ldr	r1, .L137+8
 1862 0028 3648     		ldr	r0, .L137+12
 1863 002a FFF7FEFF 		bl	xTaskCreate
 1864              	.LVL199:
1048:main.c        ****         Current_Read_Task, /* Task function */
 1865              		.loc 1 1048 0
 1866 002e 0194     		str	r4, [sp, #4]
 1867 0030 0123     		movs	r3, #1
 1868 0032 0093     		str	r3, [sp]
 1869 0034 0023     		movs	r3, #0
 1870 0036 4022     		movs	r2, #64
 1871 0038 3349     		ldr	r1, .L137+16
 1872 003a 3448     		ldr	r0, .L137+20
 1873 003c FFF7FEFF 		bl	xTaskCreate
 1874              	.LVL200:
1059:main.c        **** 
 1875              		.loc 1 1059 0
 1876 0040 0120     		movs	r0, #1
 1877 0042 FFF7FEFF 		bl	xQueueCreateMutex
 1878              	.LVL201:
 1879 0046 324B     		ldr	r3, .L137+24
 1880 0048 1860     		str	r0, [r3]
1062:main.c        ****         s = 1;
 1881              		.loc 1 1062 0
 1882 004a 0028     		cmp	r0, #0
 1883 004c 0BD1     		bne	.L135
 1884 004e 0134     		adds	r4, r4, #1
 1885              	.L136:
 1886              	.LVL202:
1066:main.c        ****             LED_Write(s); 
 1887              		.loc 1 1066 0 discriminator 1
 1888 0050 6342     		rsbs	r3, r4, #0
 1889 0052 5C41     		adcs	r4, r4, r3
 1890              	.LVL203:
 1891 0054 E4B2     		uxtb	r4, r4
 1892              	.LVL204:
1067:main.c        ****             CyDelay(1000u);                    
 1893              		.loc 1 1067 0 discriminator 1
 1894 0056 2000     		movs	r0, r4
 1895 0058 FFF7FEFF 		bl	LED_Write
 1896              	.LVL205:
1068:main.c        ****         }
 1897              		.loc 1 1068 0 discriminator 1
 1898 005c FA20     		movs	r0, #250
 1899 005e 8000     		lsls	r0, r0, #2
 1900 0060 FFF7FEFF 		bl	CyDelay
 1901              	.LVL206:
 1902 0064 F4E7     		b	.L136
 1903              	.LVL207:
 1904              	.L135:
1078:main.c        ****     isr_rst_encoder_StartEx(RSTIsrHandler);
 1905              		.loc 1 1078 0
 1906 0066 2B48     		ldr	r0, .L137+28
 1907 0068 FFF7FEFF 		bl	isr_home_StartEx
 1908              	.LVL208:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 61


1079:main.c        ****     
 1909              		.loc 1 1079 0
 1910 006c 2A48     		ldr	r0, .L137+32
 1911 006e FFF7FEFF 		bl	isr_rst_encoder_StartEx
 1912              	.LVL209:
1082:main.c        ****     
 1913              		.loc 1 1082 0
 1914 0072 2A48     		ldr	r0, .L137+36
 1915 0074 FFF7FEFF 		bl	isr_spi_ss_StartEx
 1916              	.LVL210:
1085:main.c        ****     isr_rst_encoder_SetPriority(HIGHER_PRIORITY);
 1917              		.loc 1 1085 0
 1918 0078 0320     		movs	r0, #3
 1919 007a FFF7FEFF 		bl	isr_home_SetPriority
 1920              	.LVL211:
1086:main.c        ****     isr_spi_ss_SetPriority(DEFAULT_PRIORITY);
 1921              		.loc 1 1086 0
 1922 007e 0220     		movs	r0, #2
 1923 0080 FFF7FEFF 		bl	isr_rst_encoder_SetPriority
 1924              	.LVL212:
1087:main.c        **** 
 1925              		.loc 1 1087 0
 1926 0084 0320     		movs	r0, #3
 1927 0086 FFF7FEFF 		bl	isr_spi_ss_SetPriority
 1928              	.LVL213:
1090:main.c        ****     
 1929              		.loc 1 1090 0
 1930              		.syntax divided
 1931              	@ 1090 "main.c" 1
 1932 008a 62B6     		CPSIE   i
 1933              	@ 0 "" 2
1121:main.c        ****     CyDelay(100u);
 1934              		.loc 1 1121 0
 1935              		.thumb
 1936              		.syntax unified
 1937 008c FFF7FEFF 		bl	I2C_Start
 1938              	.LVL214:
1122:main.c        ****     SPI_1_Start();
 1939              		.loc 1 1122 0
 1940 0090 6420     		movs	r0, #100
 1941 0092 FFF7FEFF 		bl	CyDelay
 1942              	.LVL215:
1123:main.c        ****     
 1943              		.loc 1 1123 0
 1944 0096 FFF7FEFF 		bl	SPI_1_Start
 1945              	.LVL216:
1127:main.c        ****     PWM_1_WritePeriod(PWM_15KHZ_PERIOD);
 1946              		.loc 1 1127 0
 1947 009a FFF7FEFF 		bl	PWM_1_Start
 1948              	.LVL217:
1128:main.c        ****     PWM_Set(PWM_IDLE);   
 1949              		.loc 1 1128 0
 1950 009e C820     		movs	r0, #200
 1951 00a0 C000     		lsls	r0, r0, #3
 1952 00a2 FFF7FEFF 		bl	PWM_1_WritePeriod
 1953              	.LVL218:
1129:main.c        ****     
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 62


 1954              		.loc 1 1129 0
 1955 00a6 1E48     		ldr	r0, .L137+40
 1956 00a8 FFF7FEFF 		bl	PWM_Set
 1957              	.LVL219:
1132:main.c        ****     PWM_Max_Fwd = PWM_JOG_NEUTRAL + PWM_MAX_MAGNITUDE;
 1958              		.loc 1 1132 0
 1959 00ac 0024     		movs	r4, #0
 1960 00ae 1D4B     		ldr	r3, .L137+44
 1961 00b0 1C70     		strb	r4, [r3]
1133:main.c        ****     PWM_Max_Rev = PWM_JOG_NEUTRAL - PWM_MAX_MAGNITUDE;
 1962              		.loc 1 1133 0
 1963 00b2 6422     		movs	r2, #100
 1964 00b4 1C4B     		ldr	r3, .L137+48
 1965 00b6 1A70     		strb	r2, [r3]
1134:main.c        ****    
 1966              		.loc 1 1134 0
 1967 00b8 1C4B     		ldr	r3, .L137+52
 1968 00ba 1C70     		strb	r4, [r3]
1137:main.c        ****     Counter_1_WriteCounter(ENCODER_MAX);  // Set the encoder initially to mid range
 1969              		.loc 1 1137 0
 1970 00bc FFF7FEFF 		bl	Counter_1_Start
 1971              	.LVL220:
1138:main.c        ****     PID_Last_Position = ENCODER_MAX;
 1972              		.loc 1 1138 0
 1973 00c0 8025     		movs	r5, #128
 1974 00c2 2D04     		lsls	r5, r5, #16
 1975 00c4 2800     		movs	r0, r5
 1976 00c6 FFF7FEFF 		bl	Counter_1_WriteCounter
 1977              	.LVL221:
1139:main.c        ****     
 1978              		.loc 1 1139 0
 1979 00ca 194B     		ldr	r3, .L137+56
 1980 00cc 1D60     		str	r5, [r3]
1142:main.c        ****     Index_Counter_1_WriteCounter(0);
 1981              		.loc 1 1142 0
 1982 00ce FFF7FEFF 		bl	Index_Counter_1_Start
 1983              	.LVL222:
1143:main.c        ****      
 1984              		.loc 1 1143 0
 1985 00d2 0020     		movs	r0, #0
 1986 00d4 FFF7FEFF 		bl	Index_Counter_1_WriteCounter
 1987              	.LVL223:
1146:main.c        ****     
 1988              		.loc 1 1146 0
 1989 00d8 FFF7FEFF 		bl	xTaskGetTickCount
 1990              	.LVL224:
 1991 00dc 154B     		ldr	r3, .L137+60
 1992 00de 1860     		str	r0, [r3]
1149:main.c        ****     ConfigSequence = 0;
 1993              		.loc 1 1149 0
 1994 00e0 0122     		movs	r2, #1
 1995 00e2 154B     		ldr	r3, .L137+64
 1996 00e4 1A70     		strb	r2, [r3]
1150:main.c        ****     ChecksumErrors = 0;
 1997              		.loc 1 1150 0
 1998 00e6 154B     		ldr	r3, .L137+68
 1999 00e8 1C70     		strb	r4, [r3]
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 63


1151:main.c        ****    
 2000              		.loc 1 1151 0
 2001 00ea 154B     		ldr	r3, .L137+72
 2002 00ec 1C80     		strh	r4, [r3]
1156:main.c        ****    
 2003              		.loc 1 1156 0
 2004 00ee FFF7FEFF 		bl	vTaskStartScheduler
 2005              	.LVL225:
1162:main.c        **** 
 2006              		.loc 1 1162 0
 2007 00f2 0120     		movs	r0, #1
 2008 00f4 03B0     		add	sp, sp, #12
 2009              		@ sp needed
 2010 00f6 30BD     		pop	{r4, r5, pc}
 2011              	.L138:
 2012              		.align	2
 2013              	.L137:
 2014 00f8 00000000 		.word	.LC76
 2015 00fc 00000000 		.word	PID_Task
 2016 0100 04000000 		.word	.LC79
 2017 0104 00000000 		.word	Comm_Task
 2018 0108 14000000 		.word	.LC82
 2019 010c 00000000 		.word	Current_Read_Task
 2020 0110 00000000 		.word	Lock
 2021 0114 00000000 		.word	HomeIsrHandler
 2022 0118 00000000 		.word	RSTIsrHandler
 2023 011c 00000000 		.word	SPI_SS_IsrHandler
 2024 0120 00004842 		.word	1112014848
 2025 0124 00000000 		.word	Jog
 2026 0128 00000000 		.word	PWM_Max_Fwd
 2027 012c 00000000 		.word	PWM_Max_Rev
 2028 0130 00000000 		.word	PID_Last_Position
 2029 0134 00000000 		.word	LastMessageTimeTick
 2030 0138 00000000 		.word	ConfigState
 2031 013c 00000000 		.word	ConfigSequence
 2032 0140 00000000 		.word	ChecksumErrors
 2033              		.cfi_endproc
 2034              	.LFE45:
 2035              		.size	main, .-main
 2036              		.comm	txMessageState,1,1
 2037              		.comm	txMessage,30,4
 2038              		.comm	rxMessage,30,4
 2039              		.comm	LastMessageTimeTick,4,4
 2040              		.comm	Lock,4,4
 2041              		.comm	uxHighWaterMark_Comm,4,4
 2042              		.comm	uxHighWaterMark_Current,4,4
 2043              		.comm	uxHighWaterMark_PID,4,4
 2044              		.comm	CurrentI2Cinbuf,20,4
 2045              		.comm	PID_Last_Position,4,4
 2046              		.comm	PWM,4,4
 2047              		.comm	Current,2,2
 2048              		.comm	ChecksumErrors,2,2
 2049              		.comm	ConfigSequence,1,1
 2050              		.comm	FaultState,1,1
 2051              		.comm	ConfigState,1,1
 2052              		.global	inAuto
 2053              		.comm	outMax,4,4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 64


 2054              		.comm	outMin,4,4
 2055              		.global	refSampleTime
 2056              		.comm	kd,4,4
 2057              		.comm	ki,4,4
 2058              		.comm	kp,4,4
 2059              		.comm	refKd,4,4
 2060              		.comm	refKi,4,4
 2061              		.comm	refKp,4,4
 2062              		.comm	lastPosition,4,4
 2063              		.comm	ITerm,4,4
 2064              		.comm	Output,4,4
 2065              		.comm	lastTime,4,4
 2066              		.comm	PID_Setpoint,4,4
 2067              		.comm	PID_Was_Enabled,1,1
 2068              		.comm	PID_Enabled,1,1
 2069              		.comm	PWM_Max_Rev,1,1
 2070              		.comm	PWM_Max_Fwd,1,1
 2071              		.comm	Last_Jog,1,1
 2072              		.comm	Jog,1,1
 2073              		.data
 2074              		.align	2
 2075              		.set	.LANCHOR1,. + 0
 2076              		.type	refSampleTime, %object
 2077              		.size	refSampleTime, 4
 2078              	refSampleTime:
 2079 0000 05000000 		.word	5
 2080              		.section	.rodata.str1.4,"aMS",%progbits,1
 2081              		.align	2
 2082              	.LC76:
 2083 0000 50494400 		.ascii	"PID\000"
 2084              	.LC79:
 2085 0004 436F6D6D 		.ascii	"Communications\000"
 2085      756E6963 
 2085      6174696F 
 2085      6E7300
 2086 0013 00       		.space	1
 2087              	.LC82:
 2088 0014 52656164 		.ascii	"Read Current\000"
 2088      20437572 
 2088      72656E74 
 2088      00
 2089              		.bss
 2090              		.set	.LANCHOR0,. + 0
 2091              		.type	inAuto, %object
 2092              		.size	inAuto, 1
 2093              	inAuto:
 2094 0000 00       		.space	1
 2095              		.text
 2096              	.Letext0:
 2097              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2098              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2099              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2100              		.file 5 ".\\FreeRTOS/portmacro.h"
 2101              		.file 6 ".\\FreeRTOS/queue.h"
 2102              		.file 7 ".\\FreeRTOS/semphr.h"
 2103              		.file 8 "Generated_Source\\PSoC4/isr_rst_encoder.h"
 2104              		.file 9 "Generated_Source\\PSoC4/Reset_Encoder.h"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 65


 2105              		.file 10 "Generated_Source\\PSoC4/Counter_1.h"
 2106              		.file 11 "Generated_Source\\PSoC4/Index_Counter_1.h"
 2107              		.file 12 "Generated_Source\\PSoC4/isr_home.h"
 2108              		.file 13 "Generated_Source\\PSoC4/HOME_IN.h"
 2109              		.file 14 "Generated_Source\\PSoC4/spi_ss.h"
 2110              		.file 15 ".\\FreeRTOS/task.h"
 2111              		.file 16 "Generated_Source\\PSoC4/SPI_1_SPI_UART.h"
 2112              		.file 17 "Generated_Source\\PSoC4/CyLib.h"
 2113              		.file 18 "Generated_Source\\PSoC4/LED.h"
 2114              		.file 19 "Generated_Source\\PSoC4/PROBE.h"
 2115              		.file 20 "Generated_Source\\PSoC4/I2C_I2C.h"
 2116              		.file 21 "Generated_Source\\PSoC4/PWM_1.h"
 2117              		.file 22 "Generated_Source\\PSoC4/CyLFClk.h"
 2118              		.file 23 "Generated_Source\\PSoC4/isr_spi_ss.h"
 2119              		.file 24 "Generated_Source\\PSoC4/I2C.h"
 2120              		.file 25 "Generated_Source\\PSoC4/SPI_1.h"
 2121              		.file 26 "Generated_Source\\PSoC4/core_cm0_psoc4.h"
 2122              		.section	.debug_info,"",%progbits
 2123              	.Ldebug_info0:
 2124 0000 E7130000 		.4byte	0x13e7
 2125 0004 0400     		.2byte	0x4
 2126 0006 00000000 		.4byte	.Ldebug_abbrev0
 2127 000a 04       		.byte	0x4
 2128 000b 01       		.uleb128 0x1
 2129 000c 6F020000 		.4byte	.LASF193
 2130 0010 0C       		.byte	0xc
 2131 0011 2C000000 		.4byte	.LASF194
 2132 0015 7D0A0000 		.4byte	.LASF195
 2133 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2134 001d 00000000 		.4byte	0
 2135 0021 00000000 		.4byte	.Ldebug_line0
 2136 0025 02       		.uleb128 0x2
 2137 0026 04       		.byte	0x4
 2138 0027 04       		.byte	0x4
 2139 0028 A1010000 		.4byte	.LASF0
 2140 002c 03       		.uleb128 0x3
 2141 002d 04       		.byte	0x4
 2142 002e 05       		.byte	0x5
 2143 002f 696E7400 		.ascii	"int\000"
 2144 0033 02       		.uleb128 0x2
 2145 0034 04       		.byte	0x4
 2146 0035 07       		.byte	0x7
 2147 0036 76000000 		.4byte	.LASF1
 2148 003a 02       		.uleb128 0x2
 2149 003b 08       		.byte	0x8
 2150 003c 05       		.byte	0x5
 2151 003d 2B050000 		.4byte	.LASF2
 2152 0041 02       		.uleb128 0x2
 2153 0042 08       		.byte	0x8
 2154 0043 04       		.byte	0x4
 2155 0044 64060000 		.4byte	.LASF3
 2156 0048 02       		.uleb128 0x2
 2157 0049 01       		.byte	0x1
 2158 004a 06       		.byte	0x6
 2159 004b 99090000 		.4byte	.LASF4
 2160 004f 04       		.uleb128 0x4
 2161 0050 B7070000 		.4byte	.LASF9
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 66


 2162 0054 02       		.byte	0x2
 2163 0055 1D       		.byte	0x1d
 2164 0056 5A000000 		.4byte	0x5a
 2165 005a 02       		.uleb128 0x2
 2166 005b 01       		.byte	0x1
 2167 005c 08       		.byte	0x8
 2168 005d B8080000 		.4byte	.LASF5
 2169 0061 02       		.uleb128 0x2
 2170 0062 02       		.byte	0x2
 2171 0063 05       		.byte	0x5
 2172 0064 C6060000 		.4byte	.LASF6
 2173 0068 02       		.uleb128 0x2
 2174 0069 02       		.byte	0x2
 2175 006a 07       		.byte	0x7
 2176 006b A5090000 		.4byte	.LASF7
 2177 006f 02       		.uleb128 0x2
 2178 0070 04       		.byte	0x4
 2179 0071 05       		.byte	0x5
 2180 0072 0E070000 		.4byte	.LASF8
 2181 0076 04       		.uleb128 0x4
 2182 0077 D6080000 		.4byte	.LASF10
 2183 007b 02       		.byte	0x2
 2184 007c 41       		.byte	0x41
 2185 007d 81000000 		.4byte	0x81
 2186 0081 02       		.uleb128 0x2
 2187 0082 04       		.byte	0x4
 2188 0083 07       		.byte	0x7
 2189 0084 3B080000 		.4byte	.LASF11
 2190 0088 02       		.uleb128 0x2
 2191 0089 08       		.byte	0x8
 2192 008a 07       		.byte	0x7
 2193 008b D5010000 		.4byte	.LASF12
 2194 008f 04       		.uleb128 0x4
 2195 0090 81040000 		.4byte	.LASF13
 2196 0094 03       		.byte	0x3
 2197 0095 18       		.byte	0x18
 2198 0096 4F000000 		.4byte	0x4f
 2199 009a 04       		.uleb128 0x4
 2200 009b 65010000 		.4byte	.LASF14
 2201 009f 03       		.byte	0x3
 2202 00a0 30       		.byte	0x30
 2203 00a1 76000000 		.4byte	0x76
 2204 00a5 05       		.uleb128 0x5
 2205 00a6 E3090000 		.4byte	.LASF15
 2206 00aa 04       		.byte	0x4
 2207 00ab E401     		.2byte	0x1e4
 2208 00ad 5A000000 		.4byte	0x5a
 2209 00b1 05       		.uleb128 0x5
 2210 00b2 54040000 		.4byte	.LASF16
 2211 00b6 04       		.byte	0x4
 2212 00b7 E501     		.2byte	0x1e5
 2213 00b9 68000000 		.4byte	0x68
 2214 00bd 05       		.uleb128 0x5
 2215 00be AC050000 		.4byte	.LASF17
 2216 00c2 04       		.byte	0x4
 2217 00c3 E601     		.2byte	0x1e6
 2218 00c5 81000000 		.4byte	0x81
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 67


 2219 00c9 05       		.uleb128 0x5
 2220 00ca 5B040000 		.4byte	.LASF18
 2221 00ce 04       		.byte	0x4
 2222 00cf E701     		.2byte	0x1e7
 2223 00d1 48000000 		.4byte	0x48
 2224 00d5 05       		.uleb128 0x5
 2225 00d6 C3010000 		.4byte	.LASF19
 2226 00da 04       		.byte	0x4
 2227 00db E901     		.2byte	0x1e9
 2228 00dd 6F000000 		.4byte	0x6f
 2229 00e1 02       		.uleb128 0x2
 2230 00e2 08       		.byte	0x8
 2231 00e3 04       		.byte	0x4
 2232 00e4 E9090000 		.4byte	.LASF20
 2233 00e8 02       		.uleb128 0x2
 2234 00e9 01       		.byte	0x1
 2235 00ea 08       		.byte	0x8
 2236 00eb FE030000 		.4byte	.LASF21
 2237 00ef 06       		.uleb128 0x6
 2238 00f0 A5000000 		.4byte	0xa5
 2239 00f4 06       		.uleb128 0x6
 2240 00f5 B1000000 		.4byte	0xb1
 2241 00f9 05       		.uleb128 0x5
 2242 00fa 75060000 		.4byte	.LASF22
 2243 00fe 04       		.byte	0x4
 2244 00ff 9002     		.2byte	0x290
 2245 0101 05010000 		.4byte	0x105
 2246 0105 06       		.uleb128 0x6
 2247 0106 BD000000 		.4byte	0xbd
 2248 010a 05       		.uleb128 0x5
 2249 010b 8A050000 		.4byte	.LASF23
 2250 010f 04       		.byte	0x4
 2251 0110 A002     		.2byte	0x2a0
 2252 0112 16010000 		.4byte	0x116
 2253 0116 07       		.uleb128 0x7
 2254 0117 04       		.byte	0x4
 2255 0118 1C010000 		.4byte	0x11c
 2256 011c 08       		.uleb128 0x8
 2257 011d 02       		.uleb128 0x2
 2258 011e 04       		.byte	0x4
 2259 011f 07       		.byte	0x7
 2260 0120 32080000 		.4byte	.LASF24
 2261 0124 09       		.uleb128 0x9
 2262 0125 04       		.byte	0x4
 2263 0126 0A       		.uleb128 0xa
 2264 0127 70060000 		.4byte	.LASF196
 2265 012b 01       		.byte	0x1
 2266 012c 48000000 		.4byte	0x48
 2267 0130 1A       		.byte	0x1a
 2268 0131 17       		.byte	0x17
 2269 0132 55010000 		.4byte	0x155
 2270 0136 0B       		.uleb128 0xb
 2271 0137 3F070000 		.4byte	.LASF25
 2272 013b 72       		.sleb128 -14
 2273 013c 0B       		.uleb128 0xb
 2274 013d CC090000 		.4byte	.LASF26
 2275 0141 73       		.sleb128 -13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 68


 2276 0142 0B       		.uleb128 0xb
 2277 0143 FF080000 		.4byte	.LASF27
 2278 0147 7B       		.sleb128 -5
 2279 0148 0B       		.uleb128 0xb
 2280 0149 2C010000 		.4byte	.LASF28
 2281 014d 7E       		.sleb128 -2
 2282 014e 0B       		.uleb128 0xb
 2283 014f 16080000 		.4byte	.LASF29
 2284 0153 7F       		.sleb128 -1
 2285 0154 00       		.byte	0
 2286 0155 04       		.uleb128 0x4
 2287 0156 44050000 		.4byte	.LASF30
 2288 015a 05       		.byte	0x5
 2289 015b 38       		.byte	0x38
 2290 015c 6F000000 		.4byte	0x6f
 2291 0160 04       		.uleb128 0x4
 2292 0161 09040000 		.4byte	.LASF31
 2293 0165 05       		.byte	0x5
 2294 0166 39       		.byte	0x39
 2295 0167 81000000 		.4byte	0x81
 2296 016b 04       		.uleb128 0x4
 2297 016c 3B060000 		.4byte	.LASF32
 2298 0170 05       		.byte	0x5
 2299 0171 3F       		.byte	0x3f
 2300 0172 9A000000 		.4byte	0x9a
 2301 0176 04       		.uleb128 0x4
 2302 0177 67040000 		.4byte	.LASF33
 2303 017b 06       		.byte	0x6
 2304 017c 2E       		.byte	0x2e
 2305 017d 24010000 		.4byte	0x124
 2306 0181 04       		.uleb128 0x4
 2307 0182 53070000 		.4byte	.LASF34
 2308 0186 07       		.byte	0x7
 2309 0187 25       		.byte	0x25
 2310 0188 76010000 		.4byte	0x176
 2311 018c 06       		.uleb128 0x6
 2312 018d 60010000 		.4byte	0x160
 2313 0191 0C       		.uleb128 0xc
 2314 0192 01       		.byte	0x1
 2315 0193 5A000000 		.4byte	0x5a
 2316 0197 01       		.byte	0x1
 2317 0198 A4       		.byte	0xa4
 2318 0199 B6010000 		.4byte	0x1b6
 2319 019d 0D       		.uleb128 0xd
 2320 019e 7B060000 		.4byte	.LASF35
 2321 01a2 00       		.byte	0
 2322 01a3 0D       		.uleb128 0xd
 2323 01a4 4C000000 		.4byte	.LASF36
 2324 01a8 01       		.byte	0x1
 2325 01a9 0D       		.uleb128 0xd
 2326 01aa 42010000 		.4byte	.LASF37
 2327 01ae 02       		.byte	0x2
 2328 01af 0D       		.uleb128 0xd
 2329 01b0 17070000 		.4byte	.LASF38
 2330 01b4 03       		.byte	0x3
 2331 01b5 00       		.byte	0
 2332 01b6 04       		.uleb128 0x4
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 69


 2333 01b7 46060000 		.4byte	.LASF39
 2334 01bb 01       		.byte	0x1
 2335 01bc A9       		.byte	0xa9
 2336 01bd 91010000 		.4byte	0x191
 2337 01c1 0C       		.uleb128 0xc
 2338 01c2 01       		.byte	0x1
 2339 01c3 5A000000 		.4byte	0x5a
 2340 01c7 01       		.byte	0x1
 2341 01c8 AE       		.byte	0xae
 2342 01c9 04020000 		.4byte	0x204
 2343 01cd 0D       		.uleb128 0xd
 2344 01ce AB040000 		.4byte	.LASF40
 2345 01d2 00       		.byte	0
 2346 01d3 0D       		.uleb128 0xd
 2347 01d4 25030000 		.4byte	.LASF41
 2348 01d8 01       		.byte	0x1
 2349 01d9 0D       		.uleb128 0xd
 2350 01da 42000000 		.4byte	.LASF42
 2351 01de 02       		.byte	0x2
 2352 01df 0D       		.uleb128 0xd
 2353 01e0 90040000 		.4byte	.LASF43
 2354 01e4 04       		.byte	0x4
 2355 01e5 0D       		.uleb128 0xd
 2356 01e6 B8060000 		.4byte	.LASF44
 2357 01ea 08       		.byte	0x8
 2358 01eb 0D       		.uleb128 0xd
 2359 01ec 39050000 		.4byte	.LASF45
 2360 01f0 10       		.byte	0x10
 2361 01f1 0D       		.uleb128 0xd
 2362 01f2 0B090000 		.4byte	.LASF46
 2363 01f6 20       		.byte	0x20
 2364 01f7 0D       		.uleb128 0xd
 2365 01f8 10090000 		.4byte	.LASF47
 2366 01fc 40       		.byte	0x40
 2367 01fd 0D       		.uleb128 0xd
 2368 01fe 15090000 		.4byte	.LASF48
 2369 0202 80       		.byte	0x80
 2370 0203 00       		.byte	0
 2371 0204 04       		.uleb128 0x4
 2372 0205 6F0A0000 		.4byte	.LASF49
 2373 0209 01       		.byte	0x1
 2374 020a B8       		.byte	0xb8
 2375 020b C1010000 		.4byte	0x1c1
 2376 020f 0C       		.uleb128 0xc
 2377 0210 01       		.byte	0x1
 2378 0211 5A000000 		.4byte	0x5a
 2379 0215 01       		.byte	0x1
 2380 0216 DF       		.byte	0xdf
 2381 0217 3A020000 		.4byte	0x23a
 2382 021b 0D       		.uleb128 0xd
 2383 021c E1080000 		.4byte	.LASF50
 2384 0220 00       		.byte	0
 2385 0221 0D       		.uleb128 0xd
 2386 0222 1B0A0000 		.4byte	.LASF51
 2387 0226 01       		.byte	0x1
 2388 0227 0D       		.uleb128 0xd
 2389 0228 CE070000 		.4byte	.LASF52
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 70


 2390 022c 02       		.byte	0x2
 2391 022d 0D       		.uleb128 0xd
 2392 022e 4F050000 		.4byte	.LASF53
 2393 0232 03       		.byte	0x3
 2394 0233 0D       		.uleb128 0xd
 2395 0234 06080000 		.4byte	.LASF54
 2396 0238 04       		.byte	0x4
 2397 0239 00       		.byte	0
 2398 023a 04       		.uleb128 0x4
 2399 023b 6E010000 		.4byte	.LASF55
 2400 023f 01       		.byte	0x1
 2401 0240 E5       		.byte	0xe5
 2402 0241 0F020000 		.4byte	0x20f
 2403 0245 0E       		.uleb128 0xe
 2404 0246 03       		.byte	0x3
 2405 0247 01       		.byte	0x1
 2406 0248 EA       		.byte	0xea
 2407 0249 72020000 		.4byte	0x272
 2408 024d 0F       		.uleb128 0xf
 2409 024e BA010000 		.4byte	.LASF56
 2410 0252 01       		.byte	0x1
 2411 0253 EB       		.byte	0xeb
 2412 0254 A5000000 		.4byte	0xa5
 2413 0258 00       		.byte	0
 2414 0259 0F       		.uleb128 0xf
 2415 025a A7050000 		.4byte	.LASF57
 2416 025e 01       		.byte	0x1
 2417 025f EC       		.byte	0xec
 2418 0260 A5000000 		.4byte	0xa5
 2419 0264 01       		.byte	0x1
 2420 0265 0F       		.uleb128 0xf
 2421 0266 60040000 		.4byte	.LASF58
 2422 026a 01       		.byte	0x1
 2423 026b ED       		.byte	0xed
 2424 026c A5000000 		.4byte	0xa5
 2425 0270 02       		.byte	0x2
 2426 0271 00       		.byte	0
 2427 0272 04       		.uleb128 0x4
 2428 0273 C7030000 		.4byte	.LASF59
 2429 0277 01       		.byte	0x1
 2430 0278 EE       		.byte	0xee
 2431 0279 45020000 		.4byte	0x245
 2432 027d 0E       		.uleb128 0xe
 2433 027e 11       		.byte	0x11
 2434 027f 01       		.byte	0x1
 2435 0280 F1       		.byte	0xf1
 2436 0281 E3020000 		.4byte	0x2e3
 2437 0285 0F       		.uleb128 0xf
 2438 0286 BA010000 		.4byte	.LASF56
 2439 028a 01       		.byte	0x1
 2440 028b F2       		.byte	0xf2
 2441 028c A5000000 		.4byte	0xa5
 2442 0290 00       		.byte	0
 2443 0291 0F       		.uleb128 0xf
 2444 0292 A7050000 		.4byte	.LASF57
 2445 0296 01       		.byte	0x1
 2446 0297 F3       		.byte	0xf3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 71


 2447 0298 A5000000 		.4byte	0xa5
 2448 029c 01       		.byte	0x1
 2449 029d 0F       		.uleb128 0xf
 2450 029e 60040000 		.4byte	.LASF58
 2451 02a2 01       		.byte	0x1
 2452 02a3 F4       		.byte	0xf4
 2453 02a4 A5000000 		.4byte	0xa5
 2454 02a8 02       		.byte	0x2
 2455 02a9 0F       		.uleb128 0xf
 2456 02aa A1060000 		.4byte	.LASF60
 2457 02ae 01       		.byte	0x1
 2458 02af F5       		.byte	0xf5
 2459 02b0 A5000000 		.4byte	0xa5
 2460 02b4 03       		.byte	0x3
 2461 02b5 10       		.uleb128 0x10
 2462 02b6 4B7000   		.ascii	"Kp\000"
 2463 02b9 01       		.byte	0x1
 2464 02ba F6       		.byte	0xf6
 2465 02bb 25000000 		.4byte	0x25
 2466 02bf 04       		.byte	0x4
 2467 02c0 10       		.uleb128 0x10
 2468 02c1 4B6900   		.ascii	"Ki\000"
 2469 02c4 01       		.byte	0x1
 2470 02c5 F7       		.byte	0xf7
 2471 02c6 25000000 		.4byte	0x25
 2472 02ca 08       		.byte	0x8
 2473 02cb 10       		.uleb128 0x10
 2474 02cc 4B6400   		.ascii	"Kd\000"
 2475 02cf 01       		.byte	0x1
 2476 02d0 F8       		.byte	0xf8
 2477 02d1 25000000 		.4byte	0x25
 2478 02d5 0C       		.byte	0xc
 2479 02d6 0F       		.uleb128 0xf
 2480 02d7 DE000000 		.4byte	.LASF61
 2481 02db 01       		.byte	0x1
 2482 02dc F9       		.byte	0xf9
 2483 02dd A5000000 		.4byte	0xa5
 2484 02e1 10       		.byte	0x10
 2485 02e2 00       		.byte	0
 2486 02e3 04       		.uleb128 0x4
 2487 02e4 DA060000 		.4byte	.LASF62
 2488 02e8 01       		.byte	0x1
 2489 02e9 FA       		.byte	0xfa
 2490 02ea 7D020000 		.4byte	0x27d
 2491 02ee 0E       		.uleb128 0xe
 2492 02ef 0A       		.byte	0xa
 2493 02f0 01       		.byte	0x1
 2494 02f1 FD       		.byte	0xfd
 2495 02f2 50030000 		.4byte	0x350
 2496 02f6 0F       		.uleb128 0xf
 2497 02f7 BA010000 		.4byte	.LASF56
 2498 02fb 01       		.byte	0x1
 2499 02fc FE       		.byte	0xfe
 2500 02fd A5000000 		.4byte	0xa5
 2501 0301 00       		.byte	0
 2502 0302 0F       		.uleb128 0xf
 2503 0303 A7050000 		.4byte	.LASF57
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 72


 2504 0307 01       		.byte	0x1
 2505 0308 FF       		.byte	0xff
 2506 0309 A5000000 		.4byte	0xa5
 2507 030d 01       		.byte	0x1
 2508 030e 11       		.uleb128 0x11
 2509 030f 60040000 		.4byte	.LASF58
 2510 0313 01       		.byte	0x1
 2511 0314 0001     		.2byte	0x100
 2512 0316 A5000000 		.4byte	0xa5
 2513 031a 02       		.byte	0x2
 2514 031b 11       		.uleb128 0x11
 2515 031c 2E020000 		.4byte	.LASF63
 2516 0320 01       		.byte	0x1
 2517 0321 0101     		.2byte	0x101
 2518 0323 A5000000 		.4byte	0xa5
 2519 0327 03       		.byte	0x3
 2520 0328 11       		.uleb128 0x11
 2521 0329 71070000 		.4byte	.LASF64
 2522 032d 01       		.byte	0x1
 2523 032e 0201     		.2byte	0x102
 2524 0330 BD000000 		.4byte	0xbd
 2525 0334 04       		.byte	0x4
 2526 0335 12       		.uleb128 0x12
 2527 0336 6A6F6700 		.ascii	"jog\000"
 2528 033a 01       		.byte	0x1
 2529 033b 0301     		.2byte	0x103
 2530 033d C9000000 		.4byte	0xc9
 2531 0341 08       		.byte	0x8
 2532 0342 11       		.uleb128 0x11
 2533 0343 97000000 		.4byte	.LASF65
 2534 0347 01       		.byte	0x1
 2535 0348 0401     		.2byte	0x104
 2536 034a A5000000 		.4byte	0xa5
 2537 034e 09       		.byte	0x9
 2538 034f 00       		.byte	0
 2539 0350 05       		.uleb128 0x5
 2540 0351 82010000 		.4byte	.LASF66
 2541 0355 01       		.byte	0x1
 2542 0356 0501     		.2byte	0x105
 2543 0358 EE020000 		.4byte	0x2ee
 2544 035c 13       		.uleb128 0x13
 2545 035d 1E       		.byte	0x1e
 2546 035e 01       		.byte	0x1
 2547 035f 0A01     		.2byte	0x10a
 2548 0361 96030000 		.4byte	0x396
 2549 0365 14       		.uleb128 0x14
 2550 0366 62756600 		.ascii	"buf\000"
 2551 036a 01       		.byte	0x1
 2552 036b 0B01     		.2byte	0x10b
 2553 036d 96030000 		.4byte	0x396
 2554 0371 15       		.uleb128 0x15
 2555 0372 15040000 		.4byte	.LASF67
 2556 0376 01       		.byte	0x1
 2557 0377 0C01     		.2byte	0x10c
 2558 0379 72020000 		.4byte	0x272
 2559 037d 15       		.uleb128 0x15
 2560 037e B1060000 		.4byte	.LASF68
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 73


 2561 0382 01       		.byte	0x1
 2562 0383 0D01     		.2byte	0x10d
 2563 0385 E3020000 		.4byte	0x2e3
 2564 0389 15       		.uleb128 0x15
 2565 038a 89040000 		.4byte	.LASF69
 2566 038e 01       		.byte	0x1
 2567 038f 0E01     		.2byte	0x10e
 2568 0391 50030000 		.4byte	0x350
 2569 0395 00       		.byte	0
 2570 0396 16       		.uleb128 0x16
 2571 0397 A5000000 		.4byte	0xa5
 2572 039b A6030000 		.4byte	0x3a6
 2573 039f 17       		.uleb128 0x17
 2574 03a0 1D010000 		.4byte	0x11d
 2575 03a4 1D       		.byte	0x1d
 2576 03a5 00       		.byte	0
 2577 03a6 18       		.uleb128 0x18
 2578 03a7 12       		.byte	0x12
 2579 03a8 01       		.byte	0x1
 2580 03a9 1201     		.2byte	0x112
 2581 03ab 32040000 		.4byte	0x432
 2582 03af 11       		.uleb128 0x11
 2583 03b0 BA010000 		.4byte	.LASF56
 2584 03b4 01       		.byte	0x1
 2585 03b5 1301     		.2byte	0x113
 2586 03b7 A5000000 		.4byte	0xa5
 2587 03bb 00       		.byte	0
 2588 03bc 11       		.uleb128 0x11
 2589 03bd A7050000 		.4byte	.LASF57
 2590 03c1 01       		.byte	0x1
 2591 03c2 1401     		.2byte	0x114
 2592 03c4 A5000000 		.4byte	0xa5
 2593 03c8 01       		.byte	0x1
 2594 03c9 11       		.uleb128 0x11
 2595 03ca 60040000 		.4byte	.LASF58
 2596 03ce 01       		.byte	0x1
 2597 03cf 1501     		.2byte	0x115
 2598 03d1 A5000000 		.4byte	0xa5
 2599 03d5 02       		.byte	0x2
 2600 03d6 11       		.uleb128 0x11
 2601 03d7 6E090000 		.4byte	.LASF70
 2602 03db 01       		.byte	0x1
 2603 03dc 1601     		.2byte	0x116
 2604 03de A5000000 		.4byte	0xa5
 2605 03e2 03       		.byte	0x3
 2606 03e3 11       		.uleb128 0x11
 2607 03e4 520A0000 		.4byte	.LASF71
 2608 03e8 01       		.byte	0x1
 2609 03e9 1701     		.2byte	0x117
 2610 03eb A5000000 		.4byte	0xa5
 2611 03ef 04       		.byte	0x4
 2612 03f0 11       		.uleb128 0x11
 2613 03f1 A1060000 		.4byte	.LASF60
 2614 03f5 01       		.byte	0x1
 2615 03f6 1801     		.2byte	0x118
 2616 03f8 A5000000 		.4byte	0xa5
 2617 03fc 05       		.byte	0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 74


 2618 03fd 11       		.uleb128 0x11
 2619 03fe 97050000 		.4byte	.LASF72
 2620 0402 01       		.byte	0x1
 2621 0403 1901     		.2byte	0x119
 2622 0405 B1000000 		.4byte	0xb1
 2623 0409 06       		.byte	0x6
 2624 040a 11       		.uleb128 0x11
 2625 040b DB090000 		.4byte	.LASF73
 2626 040f 01       		.byte	0x1
 2627 0410 1A01     		.2byte	0x11a
 2628 0412 B1000000 		.4byte	0xb1
 2629 0416 08       		.byte	0x8
 2630 0417 11       		.uleb128 0x11
 2631 0418 660A0000 		.4byte	.LASF74
 2632 041c 01       		.byte	0x1
 2633 041d 1B01     		.2byte	0x11b
 2634 041f BD000000 		.4byte	0xbd
 2635 0423 0A       		.byte	0xa
 2636 0424 12       		.uleb128 0x12
 2637 0425 70776D00 		.ascii	"pwm\000"
 2638 0429 01       		.byte	0x1
 2639 042a 1C01     		.2byte	0x11c
 2640 042c 25000000 		.4byte	0x25
 2641 0430 0E       		.byte	0xe
 2642 0431 00       		.byte	0
 2643 0432 05       		.uleb128 0x5
 2644 0433 65070000 		.4byte	.LASF75
 2645 0437 01       		.byte	0x1
 2646 0438 1D01     		.2byte	0x11d
 2647 043a A6030000 		.4byte	0x3a6
 2648 043e 13       		.uleb128 0x13
 2649 043f 1E       		.byte	0x1e
 2650 0440 01       		.byte	0x1
 2651 0441 2001     		.2byte	0x120
 2652 0443 60040000 		.4byte	0x460
 2653 0447 14       		.uleb128 0x14
 2654 0448 62756600 		.ascii	"buf\000"
 2655 044c 01       		.byte	0x1
 2656 044d 2101     		.2byte	0x121
 2657 044f 96030000 		.4byte	0x396
 2658 0453 14       		.uleb128 0x14
 2659 0454 6D736700 		.ascii	"msg\000"
 2660 0458 01       		.byte	0x1
 2661 0459 2201     		.2byte	0x122
 2662 045b 32040000 		.4byte	0x432
 2663 045f 00       		.byte	0
 2664 0460 19       		.uleb128 0x19
 2665 0461 01       		.byte	0x1
 2666 0462 5A000000 		.4byte	0x5a
 2667 0466 01       		.byte	0x1
 2668 0467 2601     		.2byte	0x126
 2669 0469 7A040000 		.4byte	0x47a
 2670 046d 0D       		.uleb128 0xd
 2671 046e 33000000 		.4byte	.LASF76
 2672 0472 00       		.byte	0
 2673 0473 0D       		.uleb128 0xd
 2674 0474 B3050000 		.4byte	.LASF77
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 75


 2675 0478 01       		.byte	0x1
 2676 0479 00       		.byte	0
 2677 047a 05       		.uleb128 0x5
 2678 047b FD000000 		.4byte	.LASF78
 2679 047f 01       		.byte	0x1
 2680 0480 2901     		.2byte	0x129
 2681 0482 60040000 		.4byte	0x460
 2682 0486 1A       		.uleb128 0x1a
 2683 0487 580A0000 		.4byte	.LASF79
 2684 048b 01       		.byte	0x1
 2685 048c 9704     		.2byte	0x497
 2686 048e 00000000 		.4byte	.LFB46
 2687 0492 18000000 		.4byte	.LFE46-.LFB46
 2688 0496 01       		.uleb128 0x1
 2689 0497 9C       		.byte	0x9c
 2690 0498 D1040000 		.4byte	0x4d1
 2691 049c 1B       		.uleb128 0x1b
 2692 049d 06000000 		.4byte	.LVL0
 2693 04a1 EA110000 		.4byte	0x11ea
 2694 04a5 1B       		.uleb128 0x1b
 2695 04a6 0A000000 		.4byte	.LVL1
 2696 04aa F5110000 		.4byte	0x11f5
 2697 04ae 1C       		.uleb128 0x1c
 2698 04af 10000000 		.4byte	.LVL2
 2699 04b3 00120000 		.4byte	0x1200
 2700 04b7 C1040000 		.4byte	0x4c1
 2701 04bb 1D       		.uleb128 0x1d
 2702 04bc 01       		.uleb128 0x1
 2703 04bd 50       		.byte	0x50
 2704 04be 01       		.uleb128 0x1
 2705 04bf 30       		.byte	0x30
 2706 04c0 00       		.byte	0
 2707 04c1 1E       		.uleb128 0x1e
 2708 04c2 16000000 		.4byte	.LVL3
 2709 04c6 0B120000 		.4byte	0x120b
 2710 04ca 1D       		.uleb128 0x1d
 2711 04cb 01       		.uleb128 0x1
 2712 04cc 50       		.byte	0x50
 2713 04cd 01       		.uleb128 0x1
 2714 04ce 30       		.byte	0x30
 2715 04cf 00       		.byte	0
 2716 04d0 00       		.byte	0
 2717 04d1 1A       		.uleb128 0x1a
 2718 04d2 EE000000 		.4byte	.LASF80
 2719 04d6 01       		.byte	0x1
 2720 04d7 B104     		.2byte	0x4b1
 2721 04d9 00000000 		.4byte	.LFB47
 2722 04dd 12000000 		.4byte	.LFE47-.LFB47
 2723 04e1 01       		.uleb128 0x1
 2724 04e2 9C       		.byte	0x9c
 2725 04e3 09050000 		.4byte	0x509
 2726 04e7 1B       		.uleb128 0x1b
 2727 04e8 06000000 		.4byte	.LVL4
 2728 04ec 16120000 		.4byte	0x1216
 2729 04f0 1B       		.uleb128 0x1b
 2730 04f1 0A000000 		.4byte	.LVL5
 2731 04f5 21120000 		.4byte	0x1221
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 76


 2732 04f9 1E       		.uleb128 0x1e
 2733 04fa 10000000 		.4byte	.LVL6
 2734 04fe 00120000 		.4byte	0x1200
 2735 0502 1D       		.uleb128 0x1d
 2736 0503 01       		.uleb128 0x1
 2737 0504 50       		.byte	0x50
 2738 0505 01       		.uleb128 0x1
 2739 0506 30       		.byte	0x30
 2740 0507 00       		.byte	0
 2741 0508 00       		.byte	0
 2742 0509 1A       		.uleb128 0x1a
 2743 050a 11060000 		.4byte	.LASF81
 2744 050e 01       		.byte	0x1
 2745 050f C804     		.2byte	0x4c8
 2746 0511 00000000 		.4byte	.LFB48
 2747 0515 5C000000 		.4byte	.LFE48-.LFB48
 2748 0519 01       		.uleb128 0x1
 2749 051a 9C       		.byte	0x9c
 2750 051b 85050000 		.4byte	0x585
 2751 051f 1F       		.uleb128 0x1f
 2752 0520 6900     		.ascii	"i\000"
 2753 0522 01       		.byte	0x1
 2754 0523 CA04     		.2byte	0x4ca
 2755 0525 BD000000 		.4byte	0xbd
 2756 0529 00000000 		.4byte	.LLST0
 2757 052d 1B       		.uleb128 0x1b
 2758 052e 06000000 		.4byte	.LVL7
 2759 0532 2C120000 		.4byte	0x122c
 2760 0536 1B       		.uleb128 0x1b
 2761 0537 0A000000 		.4byte	.LVL8
 2762 053b 37120000 		.4byte	0x1237
 2763 053f 1B       		.uleb128 0x1b
 2764 0540 12000000 		.4byte	.LVL9
 2765 0544 42120000 		.4byte	0x1242
 2766 0548 1C       		.uleb128 0x1c
 2767 0549 28000000 		.4byte	.LVL10
 2768 054d 4E120000 		.4byte	0x124e
 2769 0551 69050000 		.4byte	0x569
 2770 0555 1D       		.uleb128 0x1d
 2771 0556 01       		.uleb128 0x1
 2772 0557 50       		.byte	0x50
 2773 0558 05       		.uleb128 0x5
 2774 0559 03       		.byte	0x3
 2775 055a 00000000 		.4byte	txMessage
 2776 055e 1D       		.uleb128 0x1d
 2777 055f 01       		.uleb128 0x1
 2778 0560 51       		.byte	0x51
 2779 0561 01       		.uleb128 0x1
 2780 0562 30       		.byte	0x30
 2781 0563 1D       		.uleb128 0x1d
 2782 0564 01       		.uleb128 0x1
 2783 0565 52       		.byte	0x52
 2784 0566 01       		.uleb128 0x1
 2785 0567 4E       		.byte	0x4e
 2786 0568 00       		.byte	0
 2787 0569 1B       		.uleb128 0x1b
 2788 056a 30000000 		.4byte	.LVL12
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 77


 2789 056e 57120000 		.4byte	0x1257
 2790 0572 1B       		.uleb128 0x1b
 2791 0573 3E000000 		.4byte	.LVL14
 2792 0577 63120000 		.4byte	0x1263
 2793 057b 1B       		.uleb128 0x1b
 2794 057c 42000000 		.4byte	.LVL15
 2795 0580 6F120000 		.4byte	0x126f
 2796 0584 00       		.byte	0
 2797 0585 1A       		.uleb128 0x1a
 2798 0586 EC010000 		.4byte	.LASF82
 2799 058a 01       		.byte	0x1
 2800 058b 3D01     		.2byte	0x13d
 2801 058d 00000000 		.4byte	.LFB32
 2802 0591 28000000 		.4byte	.LFE32-.LFB32
 2803 0595 01       		.uleb128 0x1
 2804 0596 9C       		.byte	0x9c
 2805 0597 D1050000 		.4byte	0x5d1
 2806 059b 1C       		.uleb128 0x1c
 2807 059c 0A000000 		.4byte	.LVL17
 2808 05a0 7B120000 		.4byte	0x127b
 2809 05a4 AE050000 		.4byte	0x5ae
 2810 05a8 1D       		.uleb128 0x1d
 2811 05a9 01       		.uleb128 0x1
 2812 05aa 50       		.byte	0x50
 2813 05ab 01       		.uleb128 0x1
 2814 05ac 3B       		.byte	0x3b
 2815 05ad 00       		.byte	0
 2816 05ae 1C       		.uleb128 0x1c
 2817 05af 12000000 		.4byte	.LVL18
 2818 05b3 7B120000 		.4byte	0x127b
 2819 05b7 C1050000 		.4byte	0x5c1
 2820 05bb 1D       		.uleb128 0x1d
 2821 05bc 01       		.uleb128 0x1
 2822 05bd 50       		.byte	0x50
 2823 05be 01       		.uleb128 0x1
 2824 05bf 3E       		.byte	0x3e
 2825 05c0 00       		.byte	0
 2826 05c1 1E       		.uleb128 0x1e
 2827 05c2 1A000000 		.4byte	.LVL19
 2828 05c6 7B120000 		.4byte	0x127b
 2829 05ca 1D       		.uleb128 0x1d
 2830 05cb 01       		.uleb128 0x1
 2831 05cc 50       		.byte	0x50
 2832 05cd 01       		.uleb128 0x1
 2833 05ce 3F       		.byte	0x3f
 2834 05cf 00       		.byte	0
 2835 05d0 00       		.byte	0
 2836 05d1 1A       		.uleb128 0x1a
 2837 05d2 95010000 		.4byte	.LASF83
 2838 05d6 01       		.byte	0x1
 2839 05d7 5501     		.2byte	0x155
 2840 05d9 00000000 		.4byte	.LFB33
 2841 05dd 1C000000 		.4byte	.LFE33-.LFB33
 2842 05e1 01       		.uleb128 0x1
 2843 05e2 9C       		.byte	0x9c
 2844 05e3 F8050000 		.4byte	0x5f8
 2845 05e7 20       		.uleb128 0x20
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 78


 2846 05e8 520A0000 		.4byte	.LASF71
 2847 05ec 01       		.byte	0x1
 2848 05ed 5501     		.2byte	0x155
 2849 05ef 04020000 		.4byte	0x204
 2850 05f3 1F000000 		.4byte	.LLST1
 2851 05f7 00       		.byte	0
 2852 05f8 21       		.uleb128 0x21
 2853 05f9 00000000 		.4byte	.LASF88
 2854 05fd 01       		.byte	0x1
 2855 05fe 8A01     		.2byte	0x18a
 2856 0600 00000000 		.4byte	.LFB35
 2857 0604 F0000000 		.4byte	.LFE35-.LFB35
 2858 0608 01       		.uleb128 0x1
 2859 0609 9C       		.byte	0x9c
 2860 060a EF070000 		.4byte	0x7ef
 2861 060e 22       		.uleb128 0x22
 2862 060f 61726700 		.ascii	"arg\000"
 2863 0613 01       		.byte	0x1
 2864 0614 8A01     		.2byte	0x18a
 2865 0616 24010000 		.4byte	0x124
 2866 061a 40000000 		.4byte	.LLST2
 2867 061e 23       		.uleb128 0x23
 2868 061f 65727200 		.ascii	"err\000"
 2869 0623 01       		.byte	0x1
 2870 0624 8D01     		.2byte	0x18d
 2871 0626 05010000 		.4byte	0x105
 2872 062a 02       		.uleb128 0x2
 2873 062b 91       		.byte	0x91
 2874 062c 74       		.sleb128 -12
 2875 062d 24       		.uleb128 0x24
 2876 062e 26020000 		.4byte	.LASF84
 2877 0632 01       		.byte	0x1
 2878 0633 8E01     		.2byte	0x18e
 2879 0635 A5000000 		.4byte	0xa5
 2880 0639 61000000 		.4byte	.LLST3
 2881 063d 24       		.uleb128 0x24
 2882 063e 74090000 		.4byte	.LASF85
 2883 0642 01       		.byte	0x1
 2884 0643 8F01     		.2byte	0x18f
 2885 0645 A5000000 		.4byte	0xa5
 2886 0649 76000000 		.4byte	.LLST4
 2887 064d 25       		.uleb128 0x25
 2888 064e 88030000 		.4byte	.LASF86
 2889 0652 01       		.byte	0x1
 2890 0653 9201     		.2byte	0x192
 2891 0655 F4000000 		.4byte	0xf4
 2892 0659 02       		.uleb128 0x2
 2893 065a 91       		.byte	0x91
 2894 065b 72       		.sleb128 -14
 2895 065c 1F       		.uleb128 0x1f
 2896 065d 666F6F00 		.ascii	"foo\000"
 2897 0661 01       		.byte	0x1
 2898 0662 9301     		.2byte	0x193
 2899 0664 A5000000 		.4byte	0xa5
 2900 0668 8A000000 		.4byte	.LLST5
 2901 066c 1C       		.uleb128 0x1c
 2902 066d 0A000000 		.4byte	.LVL25
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 79


 2903 0671 86120000 		.4byte	0x1286
 2904 0675 7F060000 		.4byte	0x67f
 2905 0679 1D       		.uleb128 0x1d
 2906 067a 01       		.uleb128 0x1
 2907 067b 50       		.byte	0x50
 2908 067c 01       		.uleb128 0x1
 2909 067d 30       		.byte	0x30
 2910 067e 00       		.byte	0
 2911 067f 1C       		.uleb128 0x1c
 2912 0680 16000000 		.4byte	.LVL27
 2913 0684 92120000 		.4byte	0x1292
 2914 0688 93060000 		.4byte	0x693
 2915 068c 1D       		.uleb128 0x1d
 2916 068d 01       		.uleb128 0x1
 2917 068e 50       		.byte	0x50
 2918 068f 02       		.uleb128 0x2
 2919 0690 74       		.byte	0x74
 2920 0691 00       		.sleb128 0
 2921 0692 00       		.byte	0
 2922 0693 1C       		.uleb128 0x1c
 2923 0694 1C000000 		.4byte	.LVL28
 2924 0698 9D120000 		.4byte	0x129d
 2925 069c A7060000 		.4byte	0x6a7
 2926 06a0 1D       		.uleb128 0x1d
 2927 06a1 01       		.uleb128 0x1
 2928 06a2 50       		.byte	0x50
 2929 06a3 02       		.uleb128 0x2
 2930 06a4 74       		.byte	0x74
 2931 06a5 00       		.sleb128 0
 2932 06a6 00       		.byte	0
 2933 06a7 1C       		.uleb128 0x1c
 2934 06a8 30000000 		.4byte	.LVL32
 2935 06ac A8120000 		.4byte	0x12a8
 2936 06b0 C5060000 		.4byte	0x6c5
 2937 06b4 1D       		.uleb128 0x1d
 2938 06b5 01       		.uleb128 0x1
 2939 06b6 50       		.byte	0x50
 2940 06b7 02       		.uleb128 0x2
 2941 06b8 08       		.byte	0x8
 2942 06b9 40       		.byte	0x40
 2943 06ba 1D       		.uleb128 0x1d
 2944 06bb 01       		.uleb128 0x1
 2945 06bc 51       		.byte	0x51
 2946 06bd 01       		.uleb128 0x1
 2947 06be 30       		.byte	0x30
 2948 06bf 1D       		.uleb128 0x1d
 2949 06c0 01       		.uleb128 0x1
 2950 06c1 52       		.byte	0x52
 2951 06c2 01       		.uleb128 0x1
 2952 06c3 3A       		.byte	0x3a
 2953 06c4 00       		.byte	0
 2954 06c5 1C       		.uleb128 0x1c
 2955 06c6 40000000 		.4byte	.LVL33
 2956 06ca B4120000 		.4byte	0x12b4
 2957 06ce DD060000 		.4byte	0x6dd
 2958 06d2 1D       		.uleb128 0x1d
 2959 06d3 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 80


 2960 06d4 50       		.byte	0x50
 2961 06d5 01       		.uleb128 0x1
 2962 06d6 35       		.byte	0x35
 2963 06d7 1D       		.uleb128 0x1d
 2964 06d8 01       		.uleb128 0x1
 2965 06d9 51       		.byte	0x51
 2966 06da 01       		.uleb128 0x1
 2967 06db 3A       		.byte	0x3a
 2968 06dc 00       		.byte	0
 2969 06dd 1C       		.uleb128 0x1c
 2970 06de 48000000 		.4byte	.LVL34
 2971 06e2 B4120000 		.4byte	0x12b4
 2972 06e6 F6060000 		.4byte	0x6f6
 2973 06ea 1D       		.uleb128 0x1d
 2974 06eb 01       		.uleb128 0x1
 2975 06ec 50       		.byte	0x50
 2976 06ed 02       		.uleb128 0x2
 2977 06ee 08       		.byte	0x8
 2978 06ef 20       		.byte	0x20
 2979 06f0 1D       		.uleb128 0x1d
 2980 06f1 01       		.uleb128 0x1
 2981 06f2 51       		.byte	0x51
 2982 06f3 01       		.uleb128 0x1
 2983 06f4 3A       		.byte	0x3a
 2984 06f5 00       		.byte	0
 2985 06f6 1C       		.uleb128 0x1c
 2986 06f7 50000000 		.4byte	.LVL35
 2987 06fb B4120000 		.4byte	0x12b4
 2988 06ff 0E070000 		.4byte	0x70e
 2989 0703 1D       		.uleb128 0x1d
 2990 0704 01       		.uleb128 0x1
 2991 0705 50       		.byte	0x50
 2992 0706 01       		.uleb128 0x1
 2993 0707 30       		.byte	0x30
 2994 0708 1D       		.uleb128 0x1d
 2995 0709 01       		.uleb128 0x1
 2996 070a 51       		.byte	0x51
 2997 070b 01       		.uleb128 0x1
 2998 070c 3A       		.byte	0x3a
 2999 070d 00       		.byte	0
 3000 070e 1C       		.uleb128 0x1c
 3001 070f 56000000 		.4byte	.LVL36
 3002 0713 C0120000 		.4byte	0x12c0
 3003 0717 21070000 		.4byte	0x721
 3004 071b 1D       		.uleb128 0x1d
 3005 071c 01       		.uleb128 0x1
 3006 071d 50       		.byte	0x50
 3007 071e 01       		.uleb128 0x1
 3008 071f 3A       		.byte	0x3a
 3009 0720 00       		.byte	0
 3010 0721 1C       		.uleb128 0x1c
 3011 0722 64000000 		.4byte	.LVL38
 3012 0726 D1050000 		.4byte	0x5d1
 3013 072a 34070000 		.4byte	0x734
 3014 072e 1D       		.uleb128 0x1d
 3015 072f 01       		.uleb128 0x1
 3016 0730 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 81


 3017 0731 01       		.uleb128 0x1
 3018 0732 38       		.byte	0x38
 3019 0733 00       		.byte	0
 3020 0734 1C       		.uleb128 0x1c
 3021 0735 6E000000 		.4byte	.LVL39
 3022 0739 A8120000 		.4byte	0x12a8
 3023 073d 52070000 		.4byte	0x752
 3024 0741 1D       		.uleb128 0x1d
 3025 0742 01       		.uleb128 0x1
 3026 0743 50       		.byte	0x50
 3027 0744 02       		.uleb128 0x2
 3028 0745 08       		.byte	0x8
 3029 0746 40       		.byte	0x40
 3030 0747 1D       		.uleb128 0x1d
 3031 0748 01       		.uleb128 0x1
 3032 0749 51       		.byte	0x51
 3033 074a 01       		.uleb128 0x1
 3034 074b 30       		.byte	0x30
 3035 074c 1D       		.uleb128 0x1d
 3036 074d 01       		.uleb128 0x1
 3037 074e 52       		.byte	0x52
 3038 074f 01       		.uleb128 0x1
 3039 0750 3A       		.byte	0x3a
 3040 0751 00       		.byte	0
 3041 0752 1C       		.uleb128 0x1c
 3042 0753 7E000000 		.4byte	.LVL40
 3043 0757 B4120000 		.4byte	0x12b4
 3044 075b 6A070000 		.4byte	0x76a
 3045 075f 1D       		.uleb128 0x1d
 3046 0760 01       		.uleb128 0x1
 3047 0761 50       		.byte	0x50
 3048 0762 01       		.uleb128 0x1
 3049 0763 34       		.byte	0x34
 3050 0764 1D       		.uleb128 0x1d
 3051 0765 01       		.uleb128 0x1
 3052 0766 51       		.byte	0x51
 3053 0767 01       		.uleb128 0x1
 3054 0768 3A       		.byte	0x3a
 3055 0769 00       		.byte	0
 3056 076a 1C       		.uleb128 0x1c
 3057 076b 84000000 		.4byte	.LVL41
 3058 076f C0120000 		.4byte	0x12c0
 3059 0773 7D070000 		.4byte	0x77d
 3060 0777 1D       		.uleb128 0x1d
 3061 0778 01       		.uleb128 0x1
 3062 0779 50       		.byte	0x50
 3063 077a 01       		.uleb128 0x1
 3064 077b 3A       		.byte	0x3a
 3065 077c 00       		.byte	0
 3066 077d 1C       		.uleb128 0x1c
 3067 077e 90000000 		.4byte	.LVL42
 3068 0782 CC120000 		.4byte	0x12cc
 3069 0786 A4070000 		.4byte	0x7a4
 3070 078a 1D       		.uleb128 0x1d
 3071 078b 01       		.uleb128 0x1
 3072 078c 50       		.byte	0x50
 3073 078d 02       		.uleb128 0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 82


 3074 078e 08       		.byte	0x8
 3075 078f 40       		.byte	0x40
 3076 0790 1D       		.uleb128 0x1d
 3077 0791 01       		.uleb128 0x1
 3078 0792 51       		.byte	0x51
 3079 0793 05       		.uleb128 0x5
 3080 0794 03       		.byte	0x3
 3081 0795 00000000 		.4byte	CurrentI2Cinbuf
 3082 0799 1D       		.uleb128 0x1d
 3083 079a 01       		.uleb128 0x1
 3084 079b 52       		.byte	0x52
 3085 079c 01       		.uleb128 0x1
 3086 079d 35       		.byte	0x35
 3087 079e 1D       		.uleb128 0x1d
 3088 079f 01       		.uleb128 0x1
 3089 07a0 53       		.byte	0x53
 3090 07a1 01       		.uleb128 0x1
 3091 07a2 31       		.byte	0x31
 3092 07a3 00       		.byte	0
 3093 07a4 1C       		.uleb128 0x1c
 3094 07a5 B6000000 		.4byte	.LVL43
 3095 07a9 D1050000 		.4byte	0x5d1
 3096 07ad B7070000 		.4byte	0x7b7
 3097 07b1 1D       		.uleb128 0x1d
 3098 07b2 01       		.uleb128 0x1
 3099 07b3 50       		.byte	0x50
 3100 07b4 01       		.uleb128 0x1
 3101 07b5 38       		.byte	0x38
 3102 07b6 00       		.byte	0
 3103 07b7 1C       		.uleb128 0x1c
 3104 07b8 C4000000 		.4byte	.LVL44
 3105 07bc D1050000 		.4byte	0x5d1
 3106 07c0 CA070000 		.4byte	0x7ca
 3107 07c4 1D       		.uleb128 0x1d
 3108 07c5 01       		.uleb128 0x1
 3109 07c6 50       		.byte	0x50
 3110 07c7 01       		.uleb128 0x1
 3111 07c8 38       		.byte	0x38
 3112 07c9 00       		.byte	0
 3113 07ca 1C       		.uleb128 0x1c
 3114 07cb D8000000 		.4byte	.LVL45
 3115 07cf D8120000 		.4byte	0x12d8
 3116 07d3 DF070000 		.4byte	0x7df
 3117 07d7 1D       		.uleb128 0x1d
 3118 07d8 01       		.uleb128 0x1
 3119 07d9 50       		.byte	0x50
 3120 07da 03       		.uleb128 0x3
 3121 07db 0A       		.byte	0xa
 3122 07dc F401     		.2byte	0x1f4
 3123 07de 00       		.byte	0
 3124 07df 1E       		.uleb128 0x1e
 3125 07e0 DE000000 		.4byte	.LVL46
 3126 07e4 86120000 		.4byte	0x1286
 3127 07e8 1D       		.uleb128 0x1d
 3128 07e9 01       		.uleb128 0x1
 3129 07ea 50       		.byte	0x50
 3130 07eb 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 83


 3131 07ec 30       		.byte	0x30
 3132 07ed 00       		.byte	0
 3133 07ee 00       		.byte	0
 3134 07ef 1A       		.uleb128 0x1a
 3135 07f0 21010000 		.4byte	.LASF87
 3136 07f4 01       		.byte	0x1
 3137 07f5 7001     		.2byte	0x170
 3138 07f7 00000000 		.4byte	.LFB34
 3139 07fb 1C000000 		.4byte	.LFE34-.LFB34
 3140 07ff 01       		.uleb128 0x1
 3141 0800 9C       		.byte	0x9c
 3142 0801 14080000 		.4byte	0x814
 3143 0805 26       		.uleb128 0x26
 3144 0806 520A0000 		.4byte	.LASF71
 3145 080a 01       		.byte	0x1
 3146 080b 7001     		.2byte	0x170
 3147 080d 04020000 		.4byte	0x204
 3148 0811 01       		.uleb128 0x1
 3149 0812 50       		.byte	0x50
 3150 0813 00       		.byte	0
 3151 0814 21       		.uleb128 0x21
 3152 0815 0C080000 		.4byte	.LASF89
 3153 0819 01       		.byte	0x1
 3154 081a E001     		.2byte	0x1e0
 3155 081c 00000000 		.4byte	.LFB36
 3156 0820 5C020000 		.4byte	.LFE36-.LFB36
 3157 0824 01       		.uleb128 0x1
 3158 0825 9C       		.byte	0x9c
 3159 0826 42090000 		.4byte	0x942
 3160 082a 22       		.uleb128 0x22
 3161 082b 61726700 		.ascii	"arg\000"
 3162 082f 01       		.byte	0x1
 3163 0830 E001     		.2byte	0x1e0
 3164 0832 24010000 		.4byte	0x124
 3165 0836 B4000000 		.4byte	.LLST6
 3166 083a 24       		.uleb128 0x24
 3167 083b 60040000 		.4byte	.LASF58
 3168 083f 01       		.byte	0x1
 3169 0840 E201     		.2byte	0x1e2
 3170 0842 3A020000 		.4byte	0x23a
 3171 0846 D5000000 		.4byte	.LLST7
 3172 084a 24       		.uleb128 0x24
 3173 084b A7050000 		.4byte	.LASF57
 3174 084f 01       		.byte	0x1
 3175 0850 E301     		.2byte	0x1e3
 3176 0852 A5000000 		.4byte	0xa5
 3177 0856 E8000000 		.4byte	.LLST8
 3178 085a 1F       		.uleb128 0x1f
 3179 085b 6900     		.ascii	"i\000"
 3180 085d 01       		.byte	0x1
 3181 085e E401     		.2byte	0x1e4
 3182 0860 A5000000 		.4byte	0xa5
 3183 0864 06010000 		.4byte	.LLST9
 3184 0868 24       		.uleb128 0x24
 3185 0869 BA010000 		.4byte	.LASF56
 3186 086d 01       		.byte	0x1
 3187 086e E501     		.2byte	0x1e5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 84


 3188 0870 A5000000 		.4byte	0xa5
 3189 0874 5D010000 		.4byte	.LLST10
 3190 0878 1C       		.uleb128 0x1c
 3191 0879 08000000 		.4byte	.LVL50
 3192 087d 86120000 		.4byte	0x1286
 3193 0881 8B080000 		.4byte	0x88b
 3194 0885 1D       		.uleb128 0x1d
 3195 0886 01       		.uleb128 0x1
 3196 0887 50       		.byte	0x50
 3197 0888 01       		.uleb128 0x1
 3198 0889 30       		.byte	0x30
 3199 088a 00       		.byte	0
 3200 088b 1C       		.uleb128 0x1c
 3201 088c 2A000000 		.4byte	.LVL51
 3202 0890 E4120000 		.4byte	0x12e4
 3203 0894 9E080000 		.4byte	0x89e
 3204 0898 1D       		.uleb128 0x1d
 3205 0899 01       		.uleb128 0x1
 3206 089a 51       		.byte	0x51
 3207 089b 01       		.uleb128 0x1
 3208 089c 34       		.byte	0x34
 3209 089d 00       		.byte	0
 3210 089e 1C       		.uleb128 0x1c
 3211 089f F6000000 		.4byte	.LVL66
 3212 08a3 EF070000 		.4byte	0x7ef
 3213 08a7 B1080000 		.4byte	0x8b1
 3214 08ab 1D       		.uleb128 0x1d
 3215 08ac 01       		.uleb128 0x1
 3216 08ad 50       		.byte	0x50
 3217 08ae 01       		.uleb128 0x1
 3218 08af 30       		.byte	0x30
 3219 08b0 00       		.byte	0
 3220 08b1 1B       		.uleb128 0x1b
 3221 08b2 26010000 		.4byte	.LVL70
 3222 08b6 F0120000 		.4byte	0x12f0
 3223 08ba 1C       		.uleb128 0x1c
 3224 08bb 4C010000 		.4byte	.LVL71
 3225 08bf 0B120000 		.4byte	0x120b
 3226 08c3 CD080000 		.4byte	0x8cd
 3227 08c7 1D       		.uleb128 0x1d
 3228 08c8 01       		.uleb128 0x1
 3229 08c9 50       		.byte	0x50
 3230 08ca 01       		.uleb128 0x1
 3231 08cb 30       		.byte	0x30
 3232 08cc 00       		.byte	0
 3233 08cd 1B       		.uleb128 0x1b
 3234 08ce 86010000 		.4byte	.LVL73
 3235 08d2 F0120000 		.4byte	0x12f0
 3236 08d6 1C       		.uleb128 0x1c
 3237 08d7 D4010000 		.4byte	.LVL81
 3238 08db FB120000 		.4byte	0x12fb
 3239 08df EF080000 		.4byte	0x8ef
 3240 08e3 1D       		.uleb128 0x1d
 3241 08e4 01       		.uleb128 0x1
 3242 08e5 50       		.byte	0x50
 3243 08e6 02       		.uleb128 0x2
 3244 08e7 74       		.byte	0x74
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 85


 3245 08e8 00       		.sleb128 0
 3246 08e9 1D       		.uleb128 0x1d
 3247 08ea 01       		.uleb128 0x1
 3248 08eb 51       		.byte	0x51
 3249 08ec 01       		.uleb128 0x1
 3250 08ed 4E       		.byte	0x4e
 3251 08ee 00       		.byte	0
 3252 08ef 1C       		.uleb128 0x1c
 3253 08f0 E8010000 		.4byte	.LVL82
 3254 08f4 EF070000 		.4byte	0x7ef
 3255 08f8 02090000 		.4byte	0x902
 3256 08fc 1D       		.uleb128 0x1d
 3257 08fd 01       		.uleb128 0x1
 3258 08fe 50       		.byte	0x50
 3259 08ff 01       		.uleb128 0x1
 3260 0900 30       		.byte	0x30
 3261 0901 00       		.byte	0
 3262 0902 1C       		.uleb128 0x1c
 3263 0903 F6010000 		.4byte	.LVL83
 3264 0907 07130000 		.4byte	0x1307
 3265 090b 1F090000 		.4byte	0x91f
 3266 090f 1D       		.uleb128 0x1d
 3267 0910 01       		.uleb128 0x1
 3268 0911 51       		.byte	0x51
 3269 0912 01       		.uleb128 0x1
 3270 0913 30       		.byte	0x30
 3271 0914 1D       		.uleb128 0x1d
 3272 0915 01       		.uleb128 0x1
 3273 0916 52       		.byte	0x52
 3274 0917 01       		.uleb128 0x1
 3275 0918 30       		.byte	0x30
 3276 0919 1D       		.uleb128 0x1d
 3277 091a 01       		.uleb128 0x1
 3278 091b 53       		.byte	0x53
 3279 091c 01       		.uleb128 0x1
 3280 091d 30       		.byte	0x30
 3281 091e 00       		.byte	0
 3282 091f 1C       		.uleb128 0x1c
 3283 0920 FC010000 		.4byte	.LVL84
 3284 0924 D8120000 		.4byte	0x12d8
 3285 0928 32090000 		.4byte	0x932
 3286 092c 1D       		.uleb128 0x1d
 3287 092d 01       		.uleb128 0x1
 3288 092e 50       		.byte	0x50
 3289 092f 01       		.uleb128 0x1
 3290 0930 31       		.byte	0x31
 3291 0931 00       		.byte	0
 3292 0932 1E       		.uleb128 0x1e
 3293 0933 02020000 		.4byte	.LVL85
 3294 0937 86120000 		.4byte	0x1286
 3295 093b 1D       		.uleb128 0x1d
 3296 093c 01       		.uleb128 0x1
 3297 093d 50       		.byte	0x50
 3298 093e 01       		.uleb128 0x1
 3299 093f 30       		.byte	0x30
 3300 0940 00       		.byte	0
 3301 0941 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 86


 3302 0942 27       		.uleb128 0x27
 3303 0943 29040000 		.4byte	.LASF90
 3304 0947 01       		.byte	0x1
 3305 0948 8902     		.2byte	0x289
 3306 094a 00000000 		.4byte	.LFB37
 3307 094e 78000000 		.4byte	.LFE37-.LFB37
 3308 0952 01       		.uleb128 0x1
 3309 0953 9C       		.byte	0x9c
 3310 0954 82090000 		.4byte	0x982
 3311 0958 20       		.uleb128 0x20
 3312 0959 29090000 		.4byte	.LASF91
 3313 095d 01       		.byte	0x1
 3314 095e 8902     		.2byte	0x289
 3315 0960 25000000 		.4byte	0x25
 3316 0964 BF010000 		.4byte	.LLST11
 3317 0968 24       		.uleb128 0x24
 3318 0969 42030000 		.4byte	.LASF92
 3319 096d 01       		.byte	0x1
 3320 096e 8B02     		.2byte	0x28b
 3321 0970 25000000 		.4byte	0x25
 3322 0974 ED010000 		.4byte	.LLST12
 3323 0978 1B       		.uleb128 0x1b
 3324 0979 68000000 		.4byte	.LVL101
 3325 097d 13130000 		.4byte	0x1313
 3326 0981 00       		.byte	0
 3327 0982 27       		.uleb128 0x27
 3328 0983 B8090000 		.4byte	.LASF93
 3329 0987 01       		.byte	0x1
 3330 0988 A802     		.2byte	0x2a8
 3331 098a 00000000 		.4byte	.LFB38
 3332 098e 58000000 		.4byte	.LFE38-.LFB38
 3333 0992 01       		.uleb128 0x1
 3334 0993 9C       		.byte	0x9c
 3335 0994 B2090000 		.4byte	0x9b2
 3336 0998 24       		.uleb128 0x24
 3337 0999 660A0000 		.4byte	.LASF74
 3338 099d 01       		.byte	0x1
 3339 099e AA02     		.2byte	0x2aa
 3340 09a0 BD000000 		.4byte	0xbd
 3341 09a4 21020000 		.4byte	.LLST13
 3342 09a8 1B       		.uleb128 0x1b
 3343 09a9 06000000 		.4byte	.LVL104
 3344 09ad F0120000 		.4byte	0x12f0
 3345 09b1 00       		.byte	0
 3346 09b2 27       		.uleb128 0x27
 3347 09b3 55060000 		.4byte	.LASF94
 3348 09b7 01       		.byte	0x1
 3349 09b8 C302     		.2byte	0x2c3
 3350 09ba 00000000 		.4byte	.LFB39
 3351 09be 44000000 		.4byte	.LFE39-.LFB39
 3352 09c2 01       		.uleb128 0x1
 3353 09c3 9C       		.byte	0x9c
 3354 09c4 230A0000 		.4byte	0xa23
 3355 09c8 20       		.uleb128 0x20
 3356 09c9 93060000 		.4byte	.LASF95
 3357 09cd 01       		.byte	0x1
 3358 09ce C302     		.2byte	0x2c3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 87


 3359 09d0 BD000000 		.4byte	0xbd
 3360 09d4 34020000 		.4byte	.LLST14
 3361 09d8 20       		.uleb128 0x20
 3362 09d9 AF000000 		.4byte	.LASF96
 3363 09dd 01       		.byte	0x1
 3364 09de C302     		.2byte	0x2c3
 3365 09e0 25000000 		.4byte	0x25
 3366 09e4 55020000 		.4byte	.LLST15
 3367 09e8 20       		.uleb128 0x20
 3368 09e9 A9000000 		.4byte	.LASF97
 3369 09ed 01       		.byte	0x1
 3370 09ee C302     		.2byte	0x2c3
 3371 09f0 25000000 		.4byte	0x25
 3372 09f4 83020000 		.4byte	.LLST16
 3373 09f8 20       		.uleb128 0x20
 3374 09f9 A3000000 		.4byte	.LASF98
 3375 09fd 01       		.byte	0x1
 3376 09fe C302     		.2byte	0x2c3
 3377 0a00 25000000 		.4byte	0x25
 3378 0a04 B1020000 		.4byte	.LLST17
 3379 0a08 28       		.uleb128 0x28
 3380 0a09 0C000000 		.4byte	.LBB2
 3381 0a0d 26000000 		.4byte	.LBE2-.LBB2
 3382 0a11 24       		.uleb128 0x24
 3383 0a12 1D070000 		.4byte	.LASF99
 3384 0a16 01       		.byte	0x1
 3385 0a17 C702     		.2byte	0x2c7
 3386 0a19 25000000 		.4byte	0x25
 3387 0a1d DF020000 		.4byte	.LLST18
 3388 0a21 00       		.byte	0
 3389 0a22 00       		.byte	0
 3390 0a23 29       		.uleb128 0x29
 3391 0a24 87060000 		.4byte	.LASF100
 3392 0a28 01       		.byte	0x1
 3393 0a29 D902     		.2byte	0x2d9
 3394 0a2b 25000000 		.4byte	0x25
 3395 0a2f 00000000 		.4byte	.LFB40
 3396 0a33 3C010000 		.4byte	.LFE40-.LFB40
 3397 0a37 01       		.uleb128 0x1
 3398 0a38 9C       		.byte	0x9c
 3399 0a39 B00A0000 		.4byte	0xab0
 3400 0a3d 22       		.uleb128 0x22
 3401 0a3e 6E6F7700 		.ascii	"now\000"
 3402 0a42 01       		.byte	0x1
 3403 0a43 D902     		.2byte	0x2d9
 3404 0a45 BD000000 		.4byte	0xbd
 3405 0a49 FD020000 		.4byte	.LLST19
 3406 0a4d 20       		.uleb128 0x20
 3407 0a4e 71070000 		.4byte	.LASF64
 3408 0a52 01       		.byte	0x1
 3409 0a53 D902     		.2byte	0x2d9
 3410 0a55 BD000000 		.4byte	0xbd
 3411 0a59 3F030000 		.4byte	.LLST20
 3412 0a5d 24       		.uleb128 0x24
 3413 0a5e 0F010000 		.4byte	.LASF101
 3414 0a62 01       		.byte	0x1
 3415 0a63 DB02     		.2byte	0x2db
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 88


 3416 0a65 D5000000 		.4byte	0xd5
 3417 0a69 84030000 		.4byte	.LLST21
 3418 0a6d 24       		.uleb128 0x24
 3419 0a6e D0060000 		.4byte	.LASF102
 3420 0a72 01       		.byte	0x1
 3421 0a73 DB02     		.2byte	0x2db
 3422 0a75 D5000000 		.4byte	0xd5
 3423 0a79 B8030000 		.4byte	.LLST22
 3424 0a7d 24       		.uleb128 0x24
 3425 0a7e 20050000 		.4byte	.LASF103
 3426 0a82 01       		.byte	0x1
 3427 0a83 DC02     		.2byte	0x2dc
 3428 0a85 BD000000 		.4byte	0xbd
 3429 0a89 D6030000 		.4byte	.LLST23
 3430 0a8d 24       		.uleb128 0x24
 3431 0a8e 660A0000 		.4byte	.LASF74
 3432 0a92 01       		.byte	0x1
 3433 0a93 DD02     		.2byte	0x2dd
 3434 0a95 BD000000 		.4byte	0xbd
 3435 0a99 E9030000 		.4byte	.LLST24
 3436 0a9d 1B       		.uleb128 0x1b
 3437 0a9e 18000000 		.4byte	.LVL119
 3438 0aa2 F0120000 		.4byte	0x12f0
 3439 0aa6 1B       		.uleb128 0x1b
 3440 0aa7 38000000 		.4byte	.LVL123
 3441 0aab B2090000 		.4byte	0x9b2
 3442 0aaf 00       		.byte	0
 3443 0ab0 27       		.uleb128 0x27
 3444 0ab1 DB030000 		.4byte	.LASF104
 3445 0ab5 01       		.byte	0x1
 3446 0ab6 1B03     		.2byte	0x31b
 3447 0ab8 00000000 		.4byte	.LFB41
 3448 0abc 74000000 		.4byte	.LFE41-.LFB41
 3449 0ac0 01       		.uleb128 0x1
 3450 0ac1 9C       		.byte	0x9c
 3451 0ac2 E70A0000 		.4byte	0xae7
 3452 0ac6 22       		.uleb128 0x22
 3453 0ac7 4D696E00 		.ascii	"Min\000"
 3454 0acb 01       		.byte	0x1
 3455 0acc 1B03     		.2byte	0x31b
 3456 0ace 25000000 		.4byte	0x25
 3457 0ad2 07040000 		.4byte	.LLST25
 3458 0ad6 22       		.uleb128 0x22
 3459 0ad7 4D617800 		.ascii	"Max\000"
 3460 0adb 01       		.byte	0x1
 3461 0adc 1B03     		.2byte	0x31b
 3462 0ade 25000000 		.4byte	0x25
 3463 0ae2 35040000 		.4byte	.LLST26
 3464 0ae6 00       		.byte	0
 3465 0ae7 1A       		.uleb128 0x1a
 3466 0ae8 1D040000 		.4byte	.LASF105
 3467 0aec 01       		.byte	0x1
 3468 0aed 3C03     		.2byte	0x33c
 3469 0aef 00000000 		.4byte	.LFB42
 3470 0af3 24000000 		.4byte	.LFE42-.LFB42
 3471 0af7 01       		.uleb128 0x1
 3472 0af8 9C       		.byte	0x9c
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 89


 3473 0af9 270B0000 		.4byte	0xb27
 3474 0afd 20       		.uleb128 0x20
 3475 0afe 09070000 		.4byte	.LASF106
 3476 0b02 01       		.byte	0x1
 3477 0b03 3C03     		.2byte	0x33c
 3478 0b05 BD000000 		.4byte	0xbd
 3479 0b09 63040000 		.4byte	.LLST27
 3480 0b0d 24       		.uleb128 0x24
 3481 0b0e 57000000 		.4byte	.LASF107
 3482 0b12 01       		.byte	0x1
 3483 0b13 3E03     		.2byte	0x33e
 3484 0b15 270B0000 		.4byte	0xb27
 3485 0b19 84040000 		.4byte	.LLST28
 3486 0b1d 1B       		.uleb128 0x1b
 3487 0b1e 1A000000 		.4byte	.LVL157
 3488 0b22 82090000 		.4byte	0x982
 3489 0b26 00       		.byte	0
 3490 0b27 02       		.uleb128 0x2
 3491 0b28 01       		.byte	0x1
 3492 0b29 02       		.byte	0x2
 3493 0b2a 1F030000 		.4byte	.LASF108
 3494 0b2e 27       		.uleb128 0x27
 3495 0b2f 12030000 		.4byte	.LASF109
 3496 0b33 01       		.byte	0x1
 3497 0b34 5103     		.2byte	0x351
 3498 0b36 00000000 		.4byte	.LFB43
 3499 0b3a 1C000000 		.4byte	.LFE43-.LFB43
 3500 0b3e 01       		.uleb128 0x1
 3501 0b3f 9C       		.byte	0x9c
 3502 0b40 6E0B0000 		.4byte	0xb6e
 3503 0b44 20       		.uleb128 0x20
 3504 0b45 8F080000 		.4byte	.LASF110
 3505 0b49 01       		.byte	0x1
 3506 0b4a 5103     		.2byte	0x351
 3507 0b4c 25000000 		.4byte	0x25
 3508 0b50 A6040000 		.4byte	.LLST29
 3509 0b54 24       		.uleb128 0x24
 3510 0b55 29090000 		.4byte	.LASF91
 3511 0b59 01       		.byte	0x1
 3512 0b5a 5503     		.2byte	0x355
 3513 0b5c 25000000 		.4byte	0x25
 3514 0b60 C9040000 		.4byte	.LLST30
 3515 0b64 1B       		.uleb128 0x1b
 3516 0b65 14000000 		.4byte	.LVL162
 3517 0b69 42090000 		.4byte	0x942
 3518 0b6d 00       		.byte	0
 3519 0b6e 2A       		.uleb128 0x2a
 3520 0b6f 42090000 		.4byte	.LASF111
 3521 0b73 01       		.byte	0x1
 3522 0b74 6703     		.2byte	0x367
 3523 0b76 00000000 		.4byte	.LFB44
 3524 0b7a A8010000 		.4byte	.LFE44-.LFB44
 3525 0b7e 01       		.uleb128 0x1
 3526 0b7f 9C       		.byte	0x9c
 3527 0b80 260D0000 		.4byte	0xd26
 3528 0b84 22       		.uleb128 0x22
 3529 0b85 61726700 		.ascii	"arg\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 90


 3530 0b89 01       		.byte	0x1
 3531 0b8a 6703     		.2byte	0x367
 3532 0b8c 24010000 		.4byte	0x124
 3533 0b90 DC040000 		.4byte	.LLST31
 3534 0b94 2B       		.uleb128 0x2b
 3535 0b95 57050000 		.4byte	.LASF112
 3536 0b99 01       		.byte	0x1
 3537 0b9a 6A03     		.2byte	0x36a
 3538 0b9c BD000000 		.4byte	0xbd
 3539 0ba0 05       		.byte	0x5
 3540 0ba1 1F       		.uleb128 0x1f
 3541 0ba2 6E6F7700 		.ascii	"now\000"
 3542 0ba6 01       		.byte	0x1
 3543 0ba7 6B03     		.2byte	0x36b
 3544 0ba9 BD000000 		.4byte	0xbd
 3545 0bad FD040000 		.4byte	.LLST32
 3546 0bb1 24       		.uleb128 0x24
 3547 0bb2 8F080000 		.4byte	.LASF110
 3548 0bb6 01       		.byte	0x1
 3549 0bb7 6C03     		.2byte	0x36c
 3550 0bb9 25000000 		.4byte	0x25
 3551 0bbd 3D050000 		.4byte	.LLST33
 3552 0bc1 24       		.uleb128 0x24
 3553 0bc2 12000000 		.4byte	.LASF113
 3554 0bc6 01       		.byte	0x1
 3555 0bc7 6D03     		.2byte	0x36d
 3556 0bc9 D5000000 		.4byte	0xd5
 3557 0bcd 5B050000 		.4byte	.LLST34
 3558 0bd1 24       		.uleb128 0x24
 3559 0bd2 AF0A0000 		.4byte	.LASF114
 3560 0bd6 01       		.byte	0x1
 3561 0bd7 6D03     		.2byte	0x36d
 3562 0bd9 D5000000 		.4byte	0xd5
 3563 0bdd 6E050000 		.4byte	.LLST35
 3564 0be1 24       		.uleb128 0x24
 3565 0be2 69080000 		.4byte	.LASF115
 3566 0be6 01       		.byte	0x1
 3567 0be7 6E03     		.2byte	0x36e
 3568 0be9 BD000000 		.4byte	0xbd
 3569 0bed 81050000 		.4byte	.LLST36
 3570 0bf1 1C       		.uleb128 0x1c
 3571 0bf2 08000000 		.4byte	.LVL166
 3572 0bf6 86120000 		.4byte	0x1286
 3573 0bfa 040C0000 		.4byte	0xc04
 3574 0bfe 1D       		.uleb128 0x1d
 3575 0bff 01       		.uleb128 0x1
 3576 0c00 50       		.byte	0x50
 3577 0c01 01       		.uleb128 0x1
 3578 0c02 30       		.byte	0x30
 3579 0c03 00       		.byte	0
 3580 0c04 1B       		.uleb128 0x1b
 3581 0c05 1E000000 		.4byte	.LVL167
 3582 0c09 82090000 		.4byte	0x982
 3583 0c0d 1C       		.uleb128 0x1c
 3584 0c0e 2A000000 		.4byte	.LVL168
 3585 0c12 B2090000 		.4byte	0x9b2
 3586 0c16 200C0000 		.4byte	0xc20
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 91


 3587 0c1a 1D       		.uleb128 0x1d
 3588 0c1b 01       		.uleb128 0x1
 3589 0c1c 50       		.byte	0x50
 3590 0c1d 01       		.uleb128 0x1
 3591 0c1e 35       		.byte	0x35
 3592 0c1f 00       		.byte	0
 3593 0c20 1B       		.uleb128 0x1b
 3594 0c21 32000000 		.4byte	.LVL169
 3595 0c25 B00A0000 		.4byte	0xab0
 3596 0c29 1C       		.uleb128 0x1c
 3597 0c2a 38000000 		.4byte	.LVL170
 3598 0c2e E70A0000 		.4byte	0xae7
 3599 0c32 3C0C0000 		.4byte	0xc3c
 3600 0c36 1D       		.uleb128 0x1d
 3601 0c37 01       		.uleb128 0x1
 3602 0c38 50       		.byte	0x50
 3603 0c39 01       		.uleb128 0x1
 3604 0c3a 30       		.byte	0x30
 3605 0c3b 00       		.byte	0
 3606 0c3c 1C       		.uleb128 0x1c
 3607 0c3d 4E000000 		.4byte	.LVL172
 3608 0c41 1F130000 		.4byte	0x131f
 3609 0c45 510C0000 		.4byte	0xc51
 3610 0c49 1D       		.uleb128 0x1d
 3611 0c4a 01       		.uleb128 0x1
 3612 0c4b 50       		.byte	0x50
 3613 0c4c 03       		.uleb128 0x3
 3614 0c4d 0A       		.byte	0xa
 3615 0c4e 0008     		.2byte	0x800
 3616 0c50 00       		.byte	0
 3617 0c51 1B       		.uleb128 0x1b
 3618 0c52 52000000 		.4byte	.LVL173
 3619 0c56 42120000 		.4byte	0x1242
 3620 0c5a 1B       		.uleb128 0x1b
 3621 0c5b 6C000000 		.4byte	.LVL176
 3622 0c5f 42090000 		.4byte	0x942
 3623 0c63 1B       		.uleb128 0x1b
 3624 0c64 AE000000 		.4byte	.LVL178
 3625 0c68 F0120000 		.4byte	0x12f0
 3626 0c6c 1C       		.uleb128 0x1c
 3627 0c6d B8000000 		.4byte	.LVL179
 3628 0c71 0B120000 		.4byte	0x120b
 3629 0c75 7F0C0000 		.4byte	0xc7f
 3630 0c79 1D       		.uleb128 0x1d
 3631 0c7a 01       		.uleb128 0x1
 3632 0c7b 50       		.byte	0x50
 3633 0c7c 01       		.uleb128 0x1
 3634 0c7d 30       		.byte	0x30
 3635 0c7e 00       		.byte	0
 3636 0c7f 1B       		.uleb128 0x1b
 3637 0c80 C8000000 		.4byte	.LVL181
 3638 0c84 42090000 		.4byte	0x942
 3639 0c88 1B       		.uleb128 0x1b
 3640 0c89 D2000000 		.4byte	.LVL182
 3641 0c8d F0120000 		.4byte	0x12f0
 3642 0c91 1B       		.uleb128 0x1b
 3643 0c92 E2000000 		.4byte	.LVL184
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 92


 3644 0c96 2A130000 		.4byte	0x132a
 3645 0c9a 1C       		.uleb128 0x1c
 3646 0c9b F2000000 		.4byte	.LVL187
 3647 0c9f D1050000 		.4byte	0x5d1
 3648 0ca3 AD0C0000 		.4byte	0xcad
 3649 0ca7 1D       		.uleb128 0x1d
 3650 0ca8 01       		.uleb128 0x1
 3651 0ca9 50       		.byte	0x50
 3652 0caa 01       		.uleb128 0x1
 3653 0cab 34       		.byte	0x34
 3654 0cac 00       		.byte	0
 3655 0cad 1C       		.uleb128 0x1c
 3656 0cae 00010000 		.4byte	.LVL188
 3657 0cb2 D1050000 		.4byte	0x5d1
 3658 0cb6 C00C0000 		.4byte	0xcc0
 3659 0cba 1D       		.uleb128 0x1d
 3660 0cbb 01       		.uleb128 0x1
 3661 0cbc 50       		.byte	0x50
 3662 0cbd 01       		.uleb128 0x1
 3663 0cbe 32       		.byte	0x32
 3664 0cbf 00       		.byte	0
 3665 0cc0 1C       		.uleb128 0x1c
 3666 0cc1 16010000 		.4byte	.LVL189
 3667 0cc5 E70A0000 		.4byte	0xae7
 3668 0cc9 D30C0000 		.4byte	0xcd3
 3669 0ccd 1D       		.uleb128 0x1d
 3670 0cce 01       		.uleb128 0x1
 3671 0ccf 50       		.byte	0x50
 3672 0cd0 01       		.uleb128 0x1
 3673 0cd1 31       		.byte	0x31
 3674 0cd2 00       		.byte	0
 3675 0cd3 1C       		.uleb128 0x1c
 3676 0cd4 2A010000 		.4byte	.LVL190
 3677 0cd8 E70A0000 		.4byte	0xae7
 3678 0cdc E60C0000 		.4byte	0xce6
 3679 0ce0 1D       		.uleb128 0x1d
 3680 0ce1 01       		.uleb128 0x1
 3681 0ce2 50       		.byte	0x50
 3682 0ce3 01       		.uleb128 0x1
 3683 0ce4 30       		.byte	0x30
 3684 0ce5 00       		.byte	0
 3685 0ce6 1C       		.uleb128 0x1c
 3686 0ce7 3C010000 		.4byte	.LVL191
 3687 0ceb 230A0000 		.4byte	0xa23
 3688 0cef FA0C0000 		.4byte	0xcfa
 3689 0cf3 1D       		.uleb128 0x1d
 3690 0cf4 01       		.uleb128 0x1
 3691 0cf5 50       		.byte	0x50
 3692 0cf6 02       		.uleb128 0x2
 3693 0cf7 74       		.byte	0x74
 3694 0cf8 00       		.sleb128 0
 3695 0cf9 00       		.byte	0
 3696 0cfa 1B       		.uleb128 0x1b
 3697 0cfb 4A010000 		.4byte	.LVL192
 3698 0cff 2E0B0000 		.4byte	0xb2e
 3699 0d03 1C       		.uleb128 0x1c
 3700 0d04 58010000 		.4byte	.LVL195
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 93


 3701 0d08 D8120000 		.4byte	0x12d8
 3702 0d0c 160D0000 		.4byte	0xd16
 3703 0d10 1D       		.uleb128 0x1d
 3704 0d11 01       		.uleb128 0x1
 3705 0d12 50       		.byte	0x50
 3706 0d13 01       		.uleb128 0x1
 3707 0d14 35       		.byte	0x35
 3708 0d15 00       		.byte	0
 3709 0d16 1E       		.uleb128 0x1e
 3710 0d17 5E010000 		.4byte	.LVL196
 3711 0d1b 86120000 		.4byte	0x1286
 3712 0d1f 1D       		.uleb128 0x1d
 3713 0d20 01       		.uleb128 0x1
 3714 0d21 50       		.byte	0x50
 3715 0d22 01       		.uleb128 0x1
 3716 0d23 30       		.byte	0x30
 3717 0d24 00       		.byte	0
 3718 0d25 00       		.byte	0
 3719 0d26 2C       		.uleb128 0x2c
 3720 0d27 C7090000 		.4byte	.LASF116
 3721 0d2b 01       		.byte	0x1
 3722 0d2c 0204     		.2byte	0x402
 3723 0d2e 2C000000 		.4byte	0x2c
 3724 0d32 00000000 		.4byte	.LFB45
 3725 0d36 44010000 		.4byte	.LFE45-.LFB45
 3726 0d3a 01       		.uleb128 0x1
 3727 0d3b 9C       		.byte	0x9c
 3728 0d3c 560F0000 		.4byte	0xf56
 3729 0d40 1F       		.uleb128 0x1f
 3730 0d41 7300     		.ascii	"s\000"
 3731 0d43 01       		.byte	0x1
 3732 0d44 0404     		.2byte	0x404
 3733 0d46 A5000000 		.4byte	0xa5
 3734 0d4a 9F050000 		.4byte	.LLST37
 3735 0d4e 1B       		.uleb128 0x1b
 3736 0d4f 08000000 		.4byte	.LVL197
 3737 0d53 85050000 		.4byte	0x585
 3738 0d57 1C       		.uleb128 0x1c
 3739 0d58 1C000000 		.4byte	.LVL198
 3740 0d5c 35130000 		.4byte	0x1335
 3741 0d60 900D0000 		.4byte	0xd90
 3742 0d64 1D       		.uleb128 0x1d
 3743 0d65 01       		.uleb128 0x1
 3744 0d66 50       		.byte	0x50
 3745 0d67 05       		.uleb128 0x5
 3746 0d68 03       		.byte	0x3
 3747 0d69 00000000 		.4byte	PID_Task
 3748 0d6d 1D       		.uleb128 0x1d
 3749 0d6e 01       		.uleb128 0x1
 3750 0d6f 51       		.byte	0x51
 3751 0d70 05       		.uleb128 0x5
 3752 0d71 03       		.byte	0x3
 3753 0d72 00000000 		.4byte	.LC76
 3754 0d76 1D       		.uleb128 0x1d
 3755 0d77 01       		.uleb128 0x1
 3756 0d78 52       		.byte	0x52
 3757 0d79 02       		.uleb128 0x2
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 94


 3758 0d7a 08       		.byte	0x8
 3759 0d7b 40       		.byte	0x40
 3760 0d7c 1D       		.uleb128 0x1d
 3761 0d7d 01       		.uleb128 0x1
 3762 0d7e 53       		.byte	0x53
 3763 0d7f 02       		.uleb128 0x2
 3764 0d80 74       		.byte	0x74
 3765 0d81 00       		.sleb128 0
 3766 0d82 1D       		.uleb128 0x1d
 3767 0d83 02       		.uleb128 0x2
 3768 0d84 7D       		.byte	0x7d
 3769 0d85 00       		.sleb128 0
 3770 0d86 01       		.uleb128 0x1
 3771 0d87 32       		.byte	0x32
 3772 0d88 1D       		.uleb128 0x1d
 3773 0d89 02       		.uleb128 0x2
 3774 0d8a 7D       		.byte	0x7d
 3775 0d8b 04       		.sleb128 4
 3776 0d8c 02       		.uleb128 0x2
 3777 0d8d 74       		.byte	0x74
 3778 0d8e 00       		.sleb128 0
 3779 0d8f 00       		.byte	0
 3780 0d90 1C       		.uleb128 0x1c
 3781 0d91 2E000000 		.4byte	.LVL199
 3782 0d95 35130000 		.4byte	0x1335
 3783 0d99 C90D0000 		.4byte	0xdc9
 3784 0d9d 1D       		.uleb128 0x1d
 3785 0d9e 01       		.uleb128 0x1
 3786 0d9f 50       		.byte	0x50
 3787 0da0 05       		.uleb128 0x5
 3788 0da1 03       		.byte	0x3
 3789 0da2 00000000 		.4byte	Comm_Task
 3790 0da6 1D       		.uleb128 0x1d
 3791 0da7 01       		.uleb128 0x1
 3792 0da8 51       		.byte	0x51
 3793 0da9 05       		.uleb128 0x5
 3794 0daa 03       		.byte	0x3
 3795 0dab 04000000 		.4byte	.LC79
 3796 0daf 1D       		.uleb128 0x1d
 3797 0db0 01       		.uleb128 0x1
 3798 0db1 52       		.byte	0x52
 3799 0db2 02       		.uleb128 0x2
 3800 0db3 08       		.byte	0x8
 3801 0db4 64       		.byte	0x64
 3802 0db5 1D       		.uleb128 0x1d
 3803 0db6 01       		.uleb128 0x1
 3804 0db7 53       		.byte	0x53
 3805 0db8 02       		.uleb128 0x2
 3806 0db9 74       		.byte	0x74
 3807 0dba 00       		.sleb128 0
 3808 0dbb 1D       		.uleb128 0x1d
 3809 0dbc 02       		.uleb128 0x2
 3810 0dbd 7D       		.byte	0x7d
 3811 0dbe 00       		.sleb128 0
 3812 0dbf 01       		.uleb128 0x1
 3813 0dc0 33       		.byte	0x33
 3814 0dc1 1D       		.uleb128 0x1d
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 95


 3815 0dc2 02       		.uleb128 0x2
 3816 0dc3 7D       		.byte	0x7d
 3817 0dc4 04       		.sleb128 4
 3818 0dc5 02       		.uleb128 0x2
 3819 0dc6 74       		.byte	0x74
 3820 0dc7 00       		.sleb128 0
 3821 0dc8 00       		.byte	0
 3822 0dc9 1C       		.uleb128 0x1c
 3823 0dca 40000000 		.4byte	.LVL200
 3824 0dce 35130000 		.4byte	0x1335
 3825 0dd2 020E0000 		.4byte	0xe02
 3826 0dd6 1D       		.uleb128 0x1d
 3827 0dd7 01       		.uleb128 0x1
 3828 0dd8 50       		.byte	0x50
 3829 0dd9 05       		.uleb128 0x5
 3830 0dda 03       		.byte	0x3
 3831 0ddb 00000000 		.4byte	Current_Read_Task
 3832 0ddf 1D       		.uleb128 0x1d
 3833 0de0 01       		.uleb128 0x1
 3834 0de1 51       		.byte	0x51
 3835 0de2 05       		.uleb128 0x5
 3836 0de3 03       		.byte	0x3
 3837 0de4 14000000 		.4byte	.LC82
 3838 0de8 1D       		.uleb128 0x1d
 3839 0de9 01       		.uleb128 0x1
 3840 0dea 52       		.byte	0x52
 3841 0deb 02       		.uleb128 0x2
 3842 0dec 08       		.byte	0x8
 3843 0ded 40       		.byte	0x40
 3844 0dee 1D       		.uleb128 0x1d
 3845 0def 01       		.uleb128 0x1
 3846 0df0 53       		.byte	0x53
 3847 0df1 02       		.uleb128 0x2
 3848 0df2 74       		.byte	0x74
 3849 0df3 00       		.sleb128 0
 3850 0df4 1D       		.uleb128 0x1d
 3851 0df5 02       		.uleb128 0x2
 3852 0df6 7D       		.byte	0x7d
 3853 0df7 00       		.sleb128 0
 3854 0df8 01       		.uleb128 0x1
 3855 0df9 31       		.byte	0x31
 3856 0dfa 1D       		.uleb128 0x1d
 3857 0dfb 02       		.uleb128 0x2
 3858 0dfc 7D       		.byte	0x7d
 3859 0dfd 04       		.sleb128 4
 3860 0dfe 02       		.uleb128 0x2
 3861 0dff 74       		.byte	0x74
 3862 0e00 00       		.sleb128 0
 3863 0e01 00       		.byte	0
 3864 0e02 1C       		.uleb128 0x1c
 3865 0e03 46000000 		.4byte	.LVL201
 3866 0e07 41130000 		.4byte	0x1341
 3867 0e0b 150E0000 		.4byte	0xe15
 3868 0e0f 1D       		.uleb128 0x1d
 3869 0e10 01       		.uleb128 0x1
 3870 0e11 50       		.byte	0x50
 3871 0e12 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 96


 3872 0e13 31       		.byte	0x31
 3873 0e14 00       		.byte	0
 3874 0e15 1C       		.uleb128 0x1c
 3875 0e16 5C000000 		.4byte	.LVL205
 3876 0e1a 92120000 		.4byte	0x1292
 3877 0e1e 290E0000 		.4byte	0xe29
 3878 0e22 1D       		.uleb128 0x1d
 3879 0e23 01       		.uleb128 0x1
 3880 0e24 50       		.byte	0x50
 3881 0e25 02       		.uleb128 0x2
 3882 0e26 74       		.byte	0x74
 3883 0e27 00       		.sleb128 0
 3884 0e28 00       		.byte	0
 3885 0e29 1C       		.uleb128 0x1c
 3886 0e2a 64000000 		.4byte	.LVL206
 3887 0e2e 4D130000 		.4byte	0x134d
 3888 0e32 3E0E0000 		.4byte	0xe3e
 3889 0e36 1D       		.uleb128 0x1d
 3890 0e37 01       		.uleb128 0x1
 3891 0e38 50       		.byte	0x50
 3892 0e39 03       		.uleb128 0x3
 3893 0e3a 0A       		.byte	0xa
 3894 0e3b E803     		.2byte	0x3e8
 3895 0e3d 00       		.byte	0
 3896 0e3e 1C       		.uleb128 0x1c
 3897 0e3f 6C000000 		.4byte	.LVL208
 3898 0e43 58130000 		.4byte	0x1358
 3899 0e47 550E0000 		.4byte	0xe55
 3900 0e4b 1D       		.uleb128 0x1d
 3901 0e4c 01       		.uleb128 0x1
 3902 0e4d 50       		.byte	0x50
 3903 0e4e 05       		.uleb128 0x5
 3904 0e4f 03       		.byte	0x3
 3905 0e50 00000000 		.4byte	HomeIsrHandler
 3906 0e54 00       		.byte	0
 3907 0e55 1C       		.uleb128 0x1c
 3908 0e56 72000000 		.4byte	.LVL209
 3909 0e5a 63130000 		.4byte	0x1363
 3910 0e5e 6C0E0000 		.4byte	0xe6c
 3911 0e62 1D       		.uleb128 0x1d
 3912 0e63 01       		.uleb128 0x1
 3913 0e64 50       		.byte	0x50
 3914 0e65 05       		.uleb128 0x5
 3915 0e66 03       		.byte	0x3
 3916 0e67 00000000 		.4byte	RSTIsrHandler
 3917 0e6b 00       		.byte	0
 3918 0e6c 1C       		.uleb128 0x1c
 3919 0e6d 78000000 		.4byte	.LVL210
 3920 0e71 6E130000 		.4byte	0x136e
 3921 0e75 830E0000 		.4byte	0xe83
 3922 0e79 1D       		.uleb128 0x1d
 3923 0e7a 01       		.uleb128 0x1
 3924 0e7b 50       		.byte	0x50
 3925 0e7c 05       		.uleb128 0x5
 3926 0e7d 03       		.byte	0x3
 3927 0e7e 00000000 		.4byte	SPI_SS_IsrHandler
 3928 0e82 00       		.byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 97


 3929 0e83 1C       		.uleb128 0x1c
 3930 0e84 7E000000 		.4byte	.LVL211
 3931 0e88 79130000 		.4byte	0x1379
 3932 0e8c 960E0000 		.4byte	0xe96
 3933 0e90 1D       		.uleb128 0x1d
 3934 0e91 01       		.uleb128 0x1
 3935 0e92 50       		.byte	0x50
 3936 0e93 01       		.uleb128 0x1
 3937 0e94 33       		.byte	0x33
 3938 0e95 00       		.byte	0
 3939 0e96 1C       		.uleb128 0x1c
 3940 0e97 84000000 		.4byte	.LVL212
 3941 0e9b 84130000 		.4byte	0x1384
 3942 0e9f A90E0000 		.4byte	0xea9
 3943 0ea3 1D       		.uleb128 0x1d
 3944 0ea4 01       		.uleb128 0x1
 3945 0ea5 50       		.byte	0x50
 3946 0ea6 01       		.uleb128 0x1
 3947 0ea7 32       		.byte	0x32
 3948 0ea8 00       		.byte	0
 3949 0ea9 1C       		.uleb128 0x1c
 3950 0eaa 8A000000 		.4byte	.LVL213
 3951 0eae 8F130000 		.4byte	0x138f
 3952 0eb2 BC0E0000 		.4byte	0xebc
 3953 0eb6 1D       		.uleb128 0x1d
 3954 0eb7 01       		.uleb128 0x1
 3955 0eb8 50       		.byte	0x50
 3956 0eb9 01       		.uleb128 0x1
 3957 0eba 33       		.byte	0x33
 3958 0ebb 00       		.byte	0
 3959 0ebc 1B       		.uleb128 0x1b
 3960 0ebd 90000000 		.4byte	.LVL214
 3961 0ec1 9A130000 		.4byte	0x139a
 3962 0ec5 1C       		.uleb128 0x1c
 3963 0ec6 96000000 		.4byte	.LVL215
 3964 0eca 4D130000 		.4byte	0x134d
 3965 0ece D90E0000 		.4byte	0xed9
 3966 0ed2 1D       		.uleb128 0x1d
 3967 0ed3 01       		.uleb128 0x1
 3968 0ed4 50       		.byte	0x50
 3969 0ed5 02       		.uleb128 0x2
 3970 0ed6 08       		.byte	0x8
 3971 0ed7 64       		.byte	0x64
 3972 0ed8 00       		.byte	0
 3973 0ed9 1B       		.uleb128 0x1b
 3974 0eda 9A000000 		.4byte	.LVL216
 3975 0ede A5130000 		.4byte	0x13a5
 3976 0ee2 1B       		.uleb128 0x1b
 3977 0ee3 9E000000 		.4byte	.LVL217
 3978 0ee7 B0130000 		.4byte	0x13b0
 3979 0eeb 1C       		.uleb128 0x1c
 3980 0eec A6000000 		.4byte	.LVL218
 3981 0ef0 BC130000 		.4byte	0x13bc
 3982 0ef4 000F0000 		.4byte	0xf00
 3983 0ef8 1D       		.uleb128 0x1d
 3984 0ef9 01       		.uleb128 0x1
 3985 0efa 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 98


 3986 0efb 03       		.uleb128 0x3
 3987 0efc 0A       		.byte	0xa
 3988 0efd 4006     		.2byte	0x640
 3989 0eff 00       		.byte	0
 3990 0f00 1B       		.uleb128 0x1b
 3991 0f01 AC000000 		.4byte	.LVL219
 3992 0f05 42090000 		.4byte	0x942
 3993 0f09 1B       		.uleb128 0x1b
 3994 0f0a C0000000 		.4byte	.LVL220
 3995 0f0e C8130000 		.4byte	0x13c8
 3996 0f12 1C       		.uleb128 0x1c
 3997 0f13 CA000000 		.4byte	.LVL221
 3998 0f17 00120000 		.4byte	0x1200
 3999 0f1b 260F0000 		.4byte	0xf26
 4000 0f1f 1D       		.uleb128 0x1d
 4001 0f20 01       		.uleb128 0x1
 4002 0f21 50       		.byte	0x50
 4003 0f22 02       		.uleb128 0x2
 4004 0f23 75       		.byte	0x75
 4005 0f24 00       		.sleb128 0
 4006 0f25 00       		.byte	0
 4007 0f26 1B       		.uleb128 0x1b
 4008 0f27 D2000000 		.4byte	.LVL222
 4009 0f2b D3130000 		.4byte	0x13d3
 4010 0f2f 1C       		.uleb128 0x1c
 4011 0f30 D8000000 		.4byte	.LVL223
 4012 0f34 0B120000 		.4byte	0x120b
 4013 0f38 430F0000 		.4byte	0xf43
 4014 0f3c 1D       		.uleb128 0x1d
 4015 0f3d 01       		.uleb128 0x1
 4016 0f3e 50       		.byte	0x50
 4017 0f3f 02       		.uleb128 0x2
 4018 0f40 74       		.byte	0x74
 4019 0f41 00       		.sleb128 0
 4020 0f42 00       		.byte	0
 4021 0f43 1B       		.uleb128 0x1b
 4022 0f44 DC000000 		.4byte	.LVL224
 4023 0f48 42120000 		.4byte	0x1242
 4024 0f4c 1B       		.uleb128 0x1b
 4025 0f4d F2000000 		.4byte	.LVL225
 4026 0f51 DE130000 		.4byte	0x13de
 4027 0f55 00       		.byte	0
 4028 0f56 2D       		.uleb128 0x2d
 4029 0f57 4A6F6700 		.ascii	"Jog\000"
 4030 0f5b 01       		.byte	0x1
 4031 0f5c 3F       		.byte	0x3f
 4032 0f5d 670F0000 		.4byte	0xf67
 4033 0f61 05       		.uleb128 0x5
 4034 0f62 03       		.byte	0x3
 4035 0f63 00000000 		.4byte	Jog
 4036 0f67 06       		.uleb128 0x6
 4037 0f68 C9000000 		.4byte	0xc9
 4038 0f6c 2E       		.uleb128 0x2e
 4039 0f6d 33090000 		.4byte	.LASF117
 4040 0f71 01       		.byte	0x1
 4041 0f72 3F       		.byte	0x3f
 4042 0f73 670F0000 		.4byte	0xf67
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 99


 4043 0f77 05       		.uleb128 0x5
 4044 0f78 03       		.byte	0x3
 4045 0f79 00000000 		.4byte	Last_Jog
 4046 0f7d 2E       		.uleb128 0x2e
 4047 0f7e 77050000 		.4byte	.LASF118
 4048 0f82 01       		.byte	0x1
 4049 0f83 40       		.byte	0x40
 4050 0f84 C9000000 		.4byte	0xc9
 4051 0f88 05       		.uleb128 0x5
 4052 0f89 03       		.byte	0x3
 4053 0f8a 00000000 		.4byte	PWM_Max_Fwd
 4054 0f8e 2E       		.uleb128 0x2e
 4055 0f8f 15010000 		.4byte	.LASF119
 4056 0f93 01       		.byte	0x1
 4057 0f94 40       		.byte	0x40
 4058 0f95 C9000000 		.4byte	0xc9
 4059 0f99 05       		.uleb128 0x5
 4060 0f9a 03       		.byte	0x3
 4061 0f9b 00000000 		.4byte	PWM_Max_Rev
 4062 0f9f 2E       		.uleb128 0x2e
 4063 0fa0 FD060000 		.4byte	.LASF120
 4064 0fa4 01       		.byte	0x1
 4065 0fa5 4B       		.byte	0x4b
 4066 0fa6 270B0000 		.4byte	0xb27
 4067 0faa 05       		.uleb128 0x5
 4068 0fab 03       		.byte	0x3
 4069 0fac 00000000 		.4byte	PID_Enabled
 4070 0fb0 2E       		.uleb128 0x2e
 4071 0fb1 ED060000 		.4byte	.LASF121
 4072 0fb5 01       		.byte	0x1
 4073 0fb6 4B       		.byte	0x4b
 4074 0fb7 270B0000 		.4byte	0xb27
 4075 0fbb 05       		.uleb128 0x5
 4076 0fbc 03       		.byte	0x3
 4077 0fbd 00000000 		.4byte	PID_Was_Enabled
 4078 0fc1 2E       		.uleb128 0x2e
 4079 0fc2 AA070000 		.4byte	.LASF122
 4080 0fc6 01       		.byte	0x1
 4081 0fc7 4C       		.byte	0x4c
 4082 0fc8 BD000000 		.4byte	0xbd
 4083 0fcc 05       		.uleb128 0x5
 4084 0fcd 03       		.byte	0x3
 4085 0fce 00000000 		.4byte	PID_Setpoint
 4086 0fd2 2E       		.uleb128 0x2e
 4087 0fd3 FA010000 		.4byte	.LASF123
 4088 0fd7 01       		.byte	0x1
 4089 0fd8 4E       		.byte	0x4e
 4090 0fd9 BD000000 		.4byte	0xbd
 4091 0fdd 05       		.uleb128 0x5
 4092 0fde 03       		.byte	0x3
 4093 0fdf 00000000 		.4byte	lastTime
 4094 0fe3 2E       		.uleb128 0x2e
 4095 0fe4 AA060000 		.4byte	.LASF124
 4096 0fe8 01       		.byte	0x1
 4097 0fe9 4F       		.byte	0x4f
 4098 0fea 25000000 		.4byte	0x25
 4099 0fee 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 100


 4100 0fef 03       		.byte	0x3
 4101 0ff0 00000000 		.4byte	Output
 4102 0ff4 2E       		.uleb128 0x2e
 4103 0ff5 20020000 		.4byte	.LASF125
 4104 0ff9 01       		.byte	0x1
 4105 0ffa 50       		.byte	0x50
 4106 0ffb 25000000 		.4byte	0x25
 4107 0fff 05       		.uleb128 0x5
 4108 1000 03       		.byte	0x3
 4109 1001 00000000 		.4byte	ITerm
 4110 1005 2E       		.uleb128 0x2e
 4111 1006 C1070000 		.4byte	.LASF126
 4112 100a 01       		.byte	0x1
 4113 100b 50       		.byte	0x50
 4114 100c 25000000 		.4byte	0x25
 4115 1010 05       		.uleb128 0x5
 4116 1011 03       		.byte	0x3
 4117 1012 00000000 		.4byte	lastPosition
 4118 1016 2E       		.uleb128 0x2e
 4119 1017 68090000 		.4byte	.LASF127
 4120 101b 01       		.byte	0x1
 4121 101c 51       		.byte	0x51
 4122 101d 25000000 		.4byte	0x25
 4123 1021 05       		.uleb128 0x5
 4124 1022 03       		.byte	0x3
 4125 1023 00000000 		.4byte	refKp
 4126 1027 2E       		.uleb128 0x2e
 4127 1028 3C090000 		.4byte	.LASF128
 4128 102c 01       		.byte	0x1
 4129 102d 51       		.byte	0x51
 4130 102e 25000000 		.4byte	0x25
 4131 1032 05       		.uleb128 0x5
 4132 1033 03       		.byte	0x3
 4133 1034 00000000 		.4byte	refKi
 4134 1038 2E       		.uleb128 0x2e
 4135 1039 03040000 		.4byte	.LASF129
 4136 103d 01       		.byte	0x1
 4137 103e 51       		.byte	0x51
 4138 103f 25000000 		.4byte	0x25
 4139 1043 05       		.uleb128 0x5
 4140 1044 03       		.byte	0x3
 4141 1045 00000000 		.4byte	refKd
 4142 1049 2D       		.uleb128 0x2d
 4143 104a 6B7000   		.ascii	"kp\000"
 4144 104d 01       		.byte	0x1
 4145 104e 52       		.byte	0x52
 4146 104f 25000000 		.4byte	0x25
 4147 1053 05       		.uleb128 0x5
 4148 1054 03       		.byte	0x3
 4149 1055 00000000 		.4byte	kp
 4150 1059 2D       		.uleb128 0x2d
 4151 105a 6B6900   		.ascii	"ki\000"
 4152 105d 01       		.byte	0x1
 4153 105e 52       		.byte	0x52
 4154 105f 25000000 		.4byte	0x25
 4155 1063 05       		.uleb128 0x5
 4156 1064 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 101


 4157 1065 00000000 		.4byte	ki
 4158 1069 2D       		.uleb128 0x2d
 4159 106a 6B6400   		.ascii	"kd\000"
 4160 106d 01       		.byte	0x1
 4161 106e 52       		.byte	0x52
 4162 106f 25000000 		.4byte	0x25
 4163 1073 05       		.uleb128 0x5
 4164 1074 03       		.byte	0x3
 4165 1075 00000000 		.4byte	kd
 4166 1079 2E       		.uleb128 0x2e
 4167 107a CE050000 		.4byte	.LASF130
 4168 107e 01       		.byte	0x1
 4169 107f 53       		.byte	0x53
 4170 1080 BD000000 		.4byte	0xbd
 4171 1084 05       		.uleb128 0x5
 4172 1085 03       		.byte	0x3
 4173 1086 00000000 		.4byte	refSampleTime
 4174 108a 2E       		.uleb128 0x2e
 4175 108b 3B030000 		.4byte	.LASF131
 4176 108f 01       		.byte	0x1
 4177 1090 54       		.byte	0x54
 4178 1091 25000000 		.4byte	0x25
 4179 1095 05       		.uleb128 0x5
 4180 1096 03       		.byte	0x3
 4181 1097 00000000 		.4byte	outMin
 4182 109b 2E       		.uleb128 0x2e
 4183 109c F8080000 		.4byte	.LASF132
 4184 10a0 01       		.byte	0x1
 4185 10a1 54       		.byte	0x54
 4186 10a2 25000000 		.4byte	0x25
 4187 10a6 05       		.uleb128 0x5
 4188 10a7 03       		.byte	0x3
 4189 10a8 00000000 		.4byte	outMax
 4190 10ac 2E       		.uleb128 0x2e
 4191 10ad 34030000 		.4byte	.LASF133
 4192 10b1 01       		.byte	0x1
 4193 10b2 55       		.byte	0x55
 4194 10b3 270B0000 		.4byte	0xb27
 4195 10b7 05       		.uleb128 0x5
 4196 10b8 03       		.byte	0x3
 4197 10b9 00000000 		.4byte	inAuto
 4198 10bd 2E       		.uleb128 0x2e
 4199 10be 63020000 		.4byte	.LASF134
 4200 10c2 01       		.byte	0x1
 4201 10c3 BA       		.byte	0xba
 4202 10c4 CE100000 		.4byte	0x10ce
 4203 10c8 05       		.uleb128 0x5
 4204 10c9 03       		.byte	0x3
 4205 10ca 00000000 		.4byte	ConfigState
 4206 10ce 06       		.uleb128 0x6
 4207 10cf B6010000 		.4byte	0x1b6
 4208 10d3 2E       		.uleb128 0x2e
 4209 10d4 ED080000 		.4byte	.LASF135
 4210 10d8 01       		.byte	0x1
 4211 10d9 BB       		.byte	0xbb
 4212 10da EF000000 		.4byte	0xef
 4213 10de 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 102


 4214 10df 03       		.byte	0x3
 4215 10e0 00000000 		.4byte	FaultState
 4216 10e4 2E       		.uleb128 0x2e
 4217 10e5 1A090000 		.4byte	.LASF136
 4218 10e9 01       		.byte	0x1
 4219 10ea BC       		.byte	0xbc
 4220 10eb EF000000 		.4byte	0xef
 4221 10ef 05       		.uleb128 0x5
 4222 10f0 03       		.byte	0x3
 4223 10f1 00000000 		.4byte	ConfigSequence
 4224 10f5 2E       		.uleb128 0x2e
 4225 10f6 23080000 		.4byte	.LASF137
 4226 10fa 01       		.byte	0x1
 4227 10fb BD       		.byte	0xbd
 4228 10fc F4000000 		.4byte	0xf4
 4229 1100 05       		.uleb128 0x5
 4230 1101 03       		.byte	0x3
 4231 1102 00000000 		.4byte	ChecksumErrors
 4232 1106 2E       		.uleb128 0x2e
 4233 1107 83000000 		.4byte	.LASF138
 4234 110b 01       		.byte	0x1
 4235 110c BE       		.byte	0xbe
 4236 110d F4000000 		.4byte	0xf4
 4237 1111 05       		.uleb128 0x5
 4238 1112 03       		.byte	0x3
 4239 1113 00000000 		.4byte	Current
 4240 1117 2D       		.uleb128 0x2d
 4241 1118 50574D00 		.ascii	"PWM\000"
 4242 111c 01       		.byte	0x1
 4243 111d BF       		.byte	0xbf
 4244 111e 28110000 		.4byte	0x1128
 4245 1122 05       		.uleb128 0x5
 4246 1123 03       		.byte	0x3
 4247 1124 00000000 		.4byte	PWM
 4248 1128 06       		.uleb128 0x6
 4249 1129 25000000 		.4byte	0x25
 4250 112d 2E       		.uleb128 0x2e
 4251 112e CC000000 		.4byte	.LASF139
 4252 1132 01       		.byte	0x1
 4253 1133 C0       		.byte	0xc0
 4254 1134 05010000 		.4byte	0x105
 4255 1138 05       		.uleb128 0x5
 4256 1139 03       		.byte	0x3
 4257 113a 00000000 		.4byte	PID_Last_Position
 4258 113e 16       		.uleb128 0x16
 4259 113f A5000000 		.4byte	0xa5
 4260 1143 4E110000 		.4byte	0x114e
 4261 1147 17       		.uleb128 0x17
 4262 1148 1D010000 		.4byte	0x11d
 4263 114c 13       		.byte	0x13
 4264 114d 00       		.byte	0
 4265 114e 2E       		.uleb128 0x2e
 4266 114f BE050000 		.4byte	.LASF140
 4267 1153 01       		.byte	0x1
 4268 1154 C1       		.byte	0xc1
 4269 1155 3E110000 		.4byte	0x113e
 4270 1159 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 103


 4271 115a 03       		.byte	0x3
 4272 115b 00000000 		.4byte	CurrentI2Cinbuf
 4273 115f 2E       		.uleb128 0x2e
 4274 1160 7A070000 		.4byte	.LASF141
 4275 1164 01       		.byte	0x1
 4276 1165 C4       		.byte	0xc4
 4277 1166 8C010000 		.4byte	0x18c
 4278 116a 05       		.uleb128 0x5
 4279 116b 03       		.byte	0x3
 4280 116c 00000000 		.4byte	uxHighWaterMark_PID
 4281 1170 2E       		.uleb128 0x2e
 4282 1171 23060000 		.4byte	.LASF142
 4283 1175 01       		.byte	0x1
 4284 1176 C5       		.byte	0xc5
 4285 1177 8C010000 		.4byte	0x18c
 4286 117b 05       		.uleb128 0x5
 4287 117c 03       		.byte	0x3
 4288 117d 00000000 		.4byte	uxHighWaterMark_Current
 4289 1181 2E       		.uleb128 0x2e
 4290 1182 060A0000 		.4byte	.LASF143
 4291 1186 01       		.byte	0x1
 4292 1187 C6       		.byte	0xc6
 4293 1188 8C010000 		.4byte	0x18c
 4294 118c 05       		.uleb128 0x5
 4295 118d 03       		.byte	0x3
 4296 118e 00000000 		.4byte	uxHighWaterMark_Comm
 4297 1192 2E       		.uleb128 0x2e
 4298 1193 3D000000 		.4byte	.LASF144
 4299 1197 01       		.byte	0x1
 4300 1198 C9       		.byte	0xc9
 4301 1199 81010000 		.4byte	0x181
 4302 119d 05       		.uleb128 0x5
 4303 119e 03       		.byte	0x3
 4304 119f 00000000 		.4byte	Lock
 4305 11a3 2E       		.uleb128 0x2e
 4306 11a4 FD050000 		.4byte	.LASF145
 4307 11a8 01       		.byte	0x1
 4308 11a9 DC       		.byte	0xdc
 4309 11aa BD000000 		.4byte	0xbd
 4310 11ae 05       		.uleb128 0x5
 4311 11af 03       		.byte	0x3
 4312 11b0 00000000 		.4byte	LastMessageTimeTick
 4313 11b4 2F       		.uleb128 0x2f
 4314 11b5 22000000 		.4byte	.LASF146
 4315 11b9 01       		.byte	0x1
 4316 11ba 0F01     		.2byte	0x10f
 4317 11bc 5C030000 		.4byte	0x35c
 4318 11c0 05       		.uleb128 0x5
 4319 11c1 03       		.byte	0x3
 4320 11c2 00000000 		.4byte	rxMessage
 4321 11c6 2F       		.uleb128 0x2f
 4322 11c7 DC050000 		.4byte	.LASF147
 4323 11cb 01       		.byte	0x1
 4324 11cc 2301     		.2byte	0x123
 4325 11ce 3E040000 		.4byte	0x43e
 4326 11d2 05       		.uleb128 0x5
 4327 11d3 03       		.byte	0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 104


 4328 11d4 00000000 		.4byte	txMessage
 4329 11d8 2F       		.uleb128 0x2f
 4330 11d9 EF030000 		.4byte	.LASF148
 4331 11dd 01       		.byte	0x1
 4332 11de 2B01     		.2byte	0x12b
 4333 11e0 7A040000 		.4byte	0x47a
 4334 11e4 05       		.uleb128 0x5
 4335 11e5 03       		.byte	0x3
 4336 11e6 00000000 		.4byte	txMessageState
 4337 11ea 30       		.uleb128 0x30
 4338 11eb B2040000 		.4byte	.LASF149
 4339 11ef B2040000 		.4byte	.LASF149
 4340 11f3 08       		.byte	0x8
 4341 11f4 28       		.byte	0x28
 4342 11f5 30       		.uleb128 0x30
 4343 11f6 4B090000 		.4byte	.LASF150
 4344 11fa 4B090000 		.4byte	.LASF150
 4345 11fe 09       		.byte	0x9
 4346 11ff 39       		.byte	0x39
 4347 1200 30       		.uleb128 0x30
 4348 1201 E6050000 		.4byte	.LASF151
 4349 1205 E6050000 		.4byte	.LASF151
 4350 1209 0A       		.byte	0xa
 4351 120a 5A       		.byte	0x5a
 4352 120b 30       		.uleb128 0x30
 4353 120c 03020000 		.4byte	.LASF152
 4354 1210 03020000 		.4byte	.LASF152
 4355 1214 0B       		.byte	0xb
 4356 1215 5A       		.byte	0x5a
 4357 1216 30       		.uleb128 0x30
 4358 1217 3C0A0000 		.4byte	.LASF153
 4359 121b 3C0A0000 		.4byte	.LASF153
 4360 121f 0C       		.byte	0xc
 4361 1220 28       		.byte	0x28
 4362 1221 30       		.uleb128 0x30
 4363 1222 B5000000 		.4byte	.LASF154
 4364 1226 B5000000 		.4byte	.LASF154
 4365 122a 0D       		.byte	0xd
 4366 122b 39       		.byte	0x39
 4367 122c 30       		.uleb128 0x30
 4368 122d 72030000 		.4byte	.LASF155
 4369 1231 72030000 		.4byte	.LASF155
 4370 1235 0E       		.byte	0xe
 4371 1236 39       		.byte	0x39
 4372 1237 30       		.uleb128 0x30
 4373 1238 C9010000 		.4byte	.LASF156
 4374 123c C9010000 		.4byte	.LASF156
 4375 1240 0E       		.byte	0xe
 4376 1241 32       		.byte	0x32
 4377 1242 31       		.uleb128 0x31
 4378 1243 0E050000 		.4byte	.LASF157
 4379 1247 0E050000 		.4byte	.LASF157
 4380 124b 0F       		.byte	0xf
 4381 124c 3E05     		.2byte	0x53e
 4382 124e 32       		.uleb128 0x32
 4383 124f 83050000 		.4byte	.LASF197
 4384 1253 83050000 		.4byte	.LASF197
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 105


 4385 1257 31       		.uleb128 0x31
 4386 1258 D7070000 		.4byte	.LASF158
 4387 125c D7070000 		.4byte	.LASF158
 4388 1260 10       		.byte	0x10
 4389 1261 3D03     		.2byte	0x33d
 4390 1263 31       		.uleb128 0x31
 4391 1264 31040000 		.4byte	.LASF159
 4392 1268 31040000 		.4byte	.LASF159
 4393 126c 10       		.byte	0x10
 4394 126d 3F03     		.2byte	0x33f
 4395 126f 31       		.uleb128 0x31
 4396 1270 4A010000 		.4byte	.LASF160
 4397 1274 4A010000 		.4byte	.LASF160
 4398 1278 10       		.byte	0x10
 4399 1279 4703     		.2byte	0x347
 4400 127b 30       		.uleb128 0x30
 4401 127c 2D070000 		.4byte	.LASF161
 4402 1280 2D070000 		.4byte	.LASF161
 4403 1284 11       		.byte	0x11
 4404 1285 BA       		.byte	0xba
 4405 1286 31       		.uleb128 0x31
 4406 1287 35020000 		.4byte	.LASF162
 4407 128b 35020000 		.4byte	.LASF162
 4408 128f 0F       		.byte	0xf
 4409 1290 8E05     		.2byte	0x58e
 4410 1292 30       		.uleb128 0x30
 4411 1293 E4000000 		.4byte	.LASF163
 4412 1297 E4000000 		.4byte	.LASF163
 4413 129b 12       		.byte	0x12
 4414 129c 33       		.byte	0x33
 4415 129d 30       		.uleb128 0x30
 4416 129e 7C090000 		.4byte	.LASF164
 4417 12a2 7C090000 		.4byte	.LASF164
 4418 12a6 13       		.byte	0x13
 4419 12a7 33       		.byte	0x33
 4420 12a8 31       		.uleb128 0x31
 4421 12a9 EF070000 		.4byte	.LASF165
 4422 12ad EF070000 		.4byte	.LASF165
 4423 12b1 14       		.byte	0x14
 4424 12b2 1B01     		.2byte	0x11b
 4425 12b4 31       		.uleb128 0x31
 4426 12b5 5F000000 		.4byte	.LASF166
 4427 12b9 5F000000 		.4byte	.LASF166
 4428 12bd 14       		.byte	0x14
 4429 12be 1E01     		.2byte	0x11e
 4430 12c0 31       		.uleb128 0x31
 4431 12c1 CF040000 		.4byte	.LASF167
 4432 12c5 CF040000 		.4byte	.LASF167
 4433 12c9 14       		.byte	0x14
 4434 12ca 1D01     		.2byte	0x11d
 4435 12cc 31       		.uleb128 0x31
 4436 12cd 97080000 		.4byte	.LASF168
 4437 12d1 97080000 		.4byte	.LASF168
 4438 12d5 14       		.byte	0x14
 4439 12d6 1401     		.2byte	0x114
 4440 12d8 31       		.uleb128 0x31
 4441 12d9 BC030000 		.4byte	.LASF169
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 106


 4442 12dd BC030000 		.4byte	.LASF169
 4443 12e1 0F       		.byte	0xf
 4444 12e2 ED02     		.2byte	0x2ed
 4445 12e4 31       		.uleb128 0x31
 4446 12e5 48030000 		.4byte	.LASF170
 4447 12e9 48030000 		.4byte	.LASF170
 4448 12ed 06       		.byte	0x6
 4449 12ee 8805     		.2byte	0x588
 4450 12f0 30       		.uleb128 0x30
 4451 12f1 94030000 		.4byte	.LASF171
 4452 12f5 94030000 		.4byte	.LASF171
 4453 12f9 0A       		.byte	0xa
 4454 12fa 5D       		.byte	0x5d
 4455 12fb 31       		.uleb128 0x31
 4456 12fc 5C030000 		.4byte	.LASF172
 4457 1300 5C030000 		.4byte	.LASF172
 4458 1304 10       		.byte	0x10
 4459 1305 4503     		.2byte	0x345
 4460 1307 31       		.uleb128 0x31
 4461 1308 AA030000 		.4byte	.LASF173
 4462 130c AA030000 		.4byte	.LASF173
 4463 1310 06       		.byte	0x6
 4464 1311 8802     		.2byte	0x288
 4465 1313 31       		.uleb128 0x31
 4466 1314 98040000 		.4byte	.LASF174
 4467 1318 98040000 		.4byte	.LASF174
 4468 131c 15       		.byte	0x15
 4469 131d 5501     		.2byte	0x155
 4470 131f 30       		.uleb128 0x30
 4471 1320 61050000 		.4byte	.LASF175
 4472 1324 61050000 		.4byte	.LASF175
 4473 1328 16       		.byte	0x16
 4474 1329 77       		.byte	0x77
 4475 132a 30       		.uleb128 0x30
 4476 132b 4D080000 		.4byte	.LASF176
 4477 132f 4D080000 		.4byte	.LASF176
 4478 1333 0B       		.byte	0xb
 4479 1334 5D       		.byte	0x5d
 4480 1335 31       		.uleb128 0x31
 4481 1336 75040000 		.4byte	.LASF177
 4482 133a 75040000 		.4byte	.LASF177
 4483 133e 0F       		.byte	0xf
 4484 133f 4101     		.2byte	0x141
 4485 1341 31       		.uleb128 0x31
 4486 1342 E5040000 		.4byte	.LASF178
 4487 1346 E5040000 		.4byte	.LASF178
 4488 134a 06       		.byte	0x6
 4489 134b 8405     		.2byte	0x584
 4490 134d 30       		.uleb128 0x30
 4491 134e 4C040000 		.4byte	.LASF179
 4492 1352 4C040000 		.4byte	.LASF179
 4493 1356 11       		.byte	0x11
 4494 1357 D9       		.byte	0xd9
 4495 1358 30       		.uleb128 0x30
 4496 1359 88090000 		.4byte	.LASF180
 4497 135d 88090000 		.4byte	.LASF180
 4498 1361 0C       		.byte	0xc
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 107


 4499 1362 18       		.byte	0x18
 4500 1363 30       		.uleb128 0x30
 4501 1364 240A0000 		.4byte	.LASF181
 4502 1368 240A0000 		.4byte	.LASF181
 4503 136c 08       		.byte	0x8
 4504 136d 18       		.byte	0x18
 4505 136e 30       		.uleb128 0x30
 4506 136f A7010000 		.4byte	.LASF182
 4507 1373 A7010000 		.4byte	.LASF182
 4508 1377 17       		.byte	0x17
 4509 1378 18       		.byte	0x18
 4510 1379 30       		.uleb128 0x30
 4511 137a FD020000 		.4byte	.LASF183
 4512 137e FD020000 		.4byte	.LASF183
 4513 1382 0C       		.byte	0xc
 4514 1383 20       		.byte	0x20
 4515 1384 30       		.uleb128 0x30
 4516 1385 8E070000 		.4byte	.LASF184
 4517 1389 8E070000 		.4byte	.LASF184
 4518 138d 08       		.byte	0x8
 4519 138e 20       		.byte	0x20
 4520 138f 30       		.uleb128 0x30
 4521 1390 F7040000 		.4byte	.LASF185
 4522 1394 F7040000 		.4byte	.LASF185
 4523 1398 17       		.byte	0x17
 4524 1399 20       		.byte	0x20
 4525 139a 30       		.uleb128 0x30
 4526 139b 38010000 		.4byte	.LASF186
 4527 139f 38010000 		.4byte	.LASF186
 4528 13a3 18       		.byte	0x18
 4529 13a4 72       		.byte	0x72
 4530 13a5 30       		.uleb128 0x30
 4531 13a6 AC080000 		.4byte	.LASF187
 4532 13aa AC080000 		.4byte	.LASF187
 4533 13ae 19       		.byte	0x19
 4534 13af 72       		.byte	0x72
 4535 13b0 31       		.uleb128 0x31
 4536 13b1 8B000000 		.4byte	.LASF188
 4537 13b5 8B000000 		.4byte	.LASF188
 4538 13b9 15       		.byte	0x15
 4539 13ba 3201     		.2byte	0x132
 4540 13bc 31       		.uleb128 0x31
 4541 13bd 51020000 		.4byte	.LASF189
 4542 13c1 51020000 		.4byte	.LASF189
 4543 13c5 15       		.byte	0x15
 4544 13c6 5001     		.2byte	0x150
 4545 13c8 30       		.uleb128 0x30
 4546 13c9 C6080000 		.4byte	.LASF190
 4547 13cd C6080000 		.4byte	.LASF190
 4548 13d1 0A       		.byte	0xa
 4549 13d2 4F       		.byte	0x4f
 4550 13d3 30       		.uleb128 0x30
 4551 13d4 F0090000 		.4byte	.LASF191
 4552 13d8 F0090000 		.4byte	.LASF191
 4553 13dc 0B       		.byte	0xb
 4554 13dd 4F       		.byte	0x4f
 4555 13de 31       		.uleb128 0x31
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 108


 4556 13df 7B080000 		.4byte	.LASF192
 4557 13e3 7B080000 		.4byte	.LASF192
 4558 13e7 0F       		.byte	0xf
 4559 13e8 8E04     		.2byte	0x48e
 4560 13ea 00       		.byte	0
 4561              		.section	.debug_abbrev,"",%progbits
 4562              	.Ldebug_abbrev0:
 4563 0000 01       		.uleb128 0x1
 4564 0001 11       		.uleb128 0x11
 4565 0002 01       		.byte	0x1
 4566 0003 25       		.uleb128 0x25
 4567 0004 0E       		.uleb128 0xe
 4568 0005 13       		.uleb128 0x13
 4569 0006 0B       		.uleb128 0xb
 4570 0007 03       		.uleb128 0x3
 4571 0008 0E       		.uleb128 0xe
 4572 0009 1B       		.uleb128 0x1b
 4573 000a 0E       		.uleb128 0xe
 4574 000b 55       		.uleb128 0x55
 4575 000c 17       		.uleb128 0x17
 4576 000d 11       		.uleb128 0x11
 4577 000e 01       		.uleb128 0x1
 4578 000f 10       		.uleb128 0x10
 4579 0010 17       		.uleb128 0x17
 4580 0011 00       		.byte	0
 4581 0012 00       		.byte	0
 4582 0013 02       		.uleb128 0x2
 4583 0014 24       		.uleb128 0x24
 4584 0015 00       		.byte	0
 4585 0016 0B       		.uleb128 0xb
 4586 0017 0B       		.uleb128 0xb
 4587 0018 3E       		.uleb128 0x3e
 4588 0019 0B       		.uleb128 0xb
 4589 001a 03       		.uleb128 0x3
 4590 001b 0E       		.uleb128 0xe
 4591 001c 00       		.byte	0
 4592 001d 00       		.byte	0
 4593 001e 03       		.uleb128 0x3
 4594 001f 24       		.uleb128 0x24
 4595 0020 00       		.byte	0
 4596 0021 0B       		.uleb128 0xb
 4597 0022 0B       		.uleb128 0xb
 4598 0023 3E       		.uleb128 0x3e
 4599 0024 0B       		.uleb128 0xb
 4600 0025 03       		.uleb128 0x3
 4601 0026 08       		.uleb128 0x8
 4602 0027 00       		.byte	0
 4603 0028 00       		.byte	0
 4604 0029 04       		.uleb128 0x4
 4605 002a 16       		.uleb128 0x16
 4606 002b 00       		.byte	0
 4607 002c 03       		.uleb128 0x3
 4608 002d 0E       		.uleb128 0xe
 4609 002e 3A       		.uleb128 0x3a
 4610 002f 0B       		.uleb128 0xb
 4611 0030 3B       		.uleb128 0x3b
 4612 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 109


 4613 0032 49       		.uleb128 0x49
 4614 0033 13       		.uleb128 0x13
 4615 0034 00       		.byte	0
 4616 0035 00       		.byte	0
 4617 0036 05       		.uleb128 0x5
 4618 0037 16       		.uleb128 0x16
 4619 0038 00       		.byte	0
 4620 0039 03       		.uleb128 0x3
 4621 003a 0E       		.uleb128 0xe
 4622 003b 3A       		.uleb128 0x3a
 4623 003c 0B       		.uleb128 0xb
 4624 003d 3B       		.uleb128 0x3b
 4625 003e 05       		.uleb128 0x5
 4626 003f 49       		.uleb128 0x49
 4627 0040 13       		.uleb128 0x13
 4628 0041 00       		.byte	0
 4629 0042 00       		.byte	0
 4630 0043 06       		.uleb128 0x6
 4631 0044 35       		.uleb128 0x35
 4632 0045 00       		.byte	0
 4633 0046 49       		.uleb128 0x49
 4634 0047 13       		.uleb128 0x13
 4635 0048 00       		.byte	0
 4636 0049 00       		.byte	0
 4637 004a 07       		.uleb128 0x7
 4638 004b 0F       		.uleb128 0xf
 4639 004c 00       		.byte	0
 4640 004d 0B       		.uleb128 0xb
 4641 004e 0B       		.uleb128 0xb
 4642 004f 49       		.uleb128 0x49
 4643 0050 13       		.uleb128 0x13
 4644 0051 00       		.byte	0
 4645 0052 00       		.byte	0
 4646 0053 08       		.uleb128 0x8
 4647 0054 15       		.uleb128 0x15
 4648 0055 00       		.byte	0
 4649 0056 27       		.uleb128 0x27
 4650 0057 19       		.uleb128 0x19
 4651 0058 00       		.byte	0
 4652 0059 00       		.byte	0
 4653 005a 09       		.uleb128 0x9
 4654 005b 0F       		.uleb128 0xf
 4655 005c 00       		.byte	0
 4656 005d 0B       		.uleb128 0xb
 4657 005e 0B       		.uleb128 0xb
 4658 005f 00       		.byte	0
 4659 0060 00       		.byte	0
 4660 0061 0A       		.uleb128 0xa
 4661 0062 04       		.uleb128 0x4
 4662 0063 01       		.byte	0x1
 4663 0064 03       		.uleb128 0x3
 4664 0065 0E       		.uleb128 0xe
 4665 0066 0B       		.uleb128 0xb
 4666 0067 0B       		.uleb128 0xb
 4667 0068 49       		.uleb128 0x49
 4668 0069 13       		.uleb128 0x13
 4669 006a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 110


 4670 006b 0B       		.uleb128 0xb
 4671 006c 3B       		.uleb128 0x3b
 4672 006d 0B       		.uleb128 0xb
 4673 006e 01       		.uleb128 0x1
 4674 006f 13       		.uleb128 0x13
 4675 0070 00       		.byte	0
 4676 0071 00       		.byte	0
 4677 0072 0B       		.uleb128 0xb
 4678 0073 28       		.uleb128 0x28
 4679 0074 00       		.byte	0
 4680 0075 03       		.uleb128 0x3
 4681 0076 0E       		.uleb128 0xe
 4682 0077 1C       		.uleb128 0x1c
 4683 0078 0D       		.uleb128 0xd
 4684 0079 00       		.byte	0
 4685 007a 00       		.byte	0
 4686 007b 0C       		.uleb128 0xc
 4687 007c 04       		.uleb128 0x4
 4688 007d 01       		.byte	0x1
 4689 007e 0B       		.uleb128 0xb
 4690 007f 0B       		.uleb128 0xb
 4691 0080 49       		.uleb128 0x49
 4692 0081 13       		.uleb128 0x13
 4693 0082 3A       		.uleb128 0x3a
 4694 0083 0B       		.uleb128 0xb
 4695 0084 3B       		.uleb128 0x3b
 4696 0085 0B       		.uleb128 0xb
 4697 0086 01       		.uleb128 0x1
 4698 0087 13       		.uleb128 0x13
 4699 0088 00       		.byte	0
 4700 0089 00       		.byte	0
 4701 008a 0D       		.uleb128 0xd
 4702 008b 28       		.uleb128 0x28
 4703 008c 00       		.byte	0
 4704 008d 03       		.uleb128 0x3
 4705 008e 0E       		.uleb128 0xe
 4706 008f 1C       		.uleb128 0x1c
 4707 0090 0B       		.uleb128 0xb
 4708 0091 00       		.byte	0
 4709 0092 00       		.byte	0
 4710 0093 0E       		.uleb128 0xe
 4711 0094 13       		.uleb128 0x13
 4712 0095 01       		.byte	0x1
 4713 0096 0B       		.uleb128 0xb
 4714 0097 0B       		.uleb128 0xb
 4715 0098 3A       		.uleb128 0x3a
 4716 0099 0B       		.uleb128 0xb
 4717 009a 3B       		.uleb128 0x3b
 4718 009b 0B       		.uleb128 0xb
 4719 009c 01       		.uleb128 0x1
 4720 009d 13       		.uleb128 0x13
 4721 009e 00       		.byte	0
 4722 009f 00       		.byte	0
 4723 00a0 0F       		.uleb128 0xf
 4724 00a1 0D       		.uleb128 0xd
 4725 00a2 00       		.byte	0
 4726 00a3 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 111


 4727 00a4 0E       		.uleb128 0xe
 4728 00a5 3A       		.uleb128 0x3a
 4729 00a6 0B       		.uleb128 0xb
 4730 00a7 3B       		.uleb128 0x3b
 4731 00a8 0B       		.uleb128 0xb
 4732 00a9 49       		.uleb128 0x49
 4733 00aa 13       		.uleb128 0x13
 4734 00ab 38       		.uleb128 0x38
 4735 00ac 0B       		.uleb128 0xb
 4736 00ad 00       		.byte	0
 4737 00ae 00       		.byte	0
 4738 00af 10       		.uleb128 0x10
 4739 00b0 0D       		.uleb128 0xd
 4740 00b1 00       		.byte	0
 4741 00b2 03       		.uleb128 0x3
 4742 00b3 08       		.uleb128 0x8
 4743 00b4 3A       		.uleb128 0x3a
 4744 00b5 0B       		.uleb128 0xb
 4745 00b6 3B       		.uleb128 0x3b
 4746 00b7 0B       		.uleb128 0xb
 4747 00b8 49       		.uleb128 0x49
 4748 00b9 13       		.uleb128 0x13
 4749 00ba 38       		.uleb128 0x38
 4750 00bb 0B       		.uleb128 0xb
 4751 00bc 00       		.byte	0
 4752 00bd 00       		.byte	0
 4753 00be 11       		.uleb128 0x11
 4754 00bf 0D       		.uleb128 0xd
 4755 00c0 00       		.byte	0
 4756 00c1 03       		.uleb128 0x3
 4757 00c2 0E       		.uleb128 0xe
 4758 00c3 3A       		.uleb128 0x3a
 4759 00c4 0B       		.uleb128 0xb
 4760 00c5 3B       		.uleb128 0x3b
 4761 00c6 05       		.uleb128 0x5
 4762 00c7 49       		.uleb128 0x49
 4763 00c8 13       		.uleb128 0x13
 4764 00c9 38       		.uleb128 0x38
 4765 00ca 0B       		.uleb128 0xb
 4766 00cb 00       		.byte	0
 4767 00cc 00       		.byte	0
 4768 00cd 12       		.uleb128 0x12
 4769 00ce 0D       		.uleb128 0xd
 4770 00cf 00       		.byte	0
 4771 00d0 03       		.uleb128 0x3
 4772 00d1 08       		.uleb128 0x8
 4773 00d2 3A       		.uleb128 0x3a
 4774 00d3 0B       		.uleb128 0xb
 4775 00d4 3B       		.uleb128 0x3b
 4776 00d5 05       		.uleb128 0x5
 4777 00d6 49       		.uleb128 0x49
 4778 00d7 13       		.uleb128 0x13
 4779 00d8 38       		.uleb128 0x38
 4780 00d9 0B       		.uleb128 0xb
 4781 00da 00       		.byte	0
 4782 00db 00       		.byte	0
 4783 00dc 13       		.uleb128 0x13
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 112


 4784 00dd 17       		.uleb128 0x17
 4785 00de 01       		.byte	0x1
 4786 00df 0B       		.uleb128 0xb
 4787 00e0 0B       		.uleb128 0xb
 4788 00e1 3A       		.uleb128 0x3a
 4789 00e2 0B       		.uleb128 0xb
 4790 00e3 3B       		.uleb128 0x3b
 4791 00e4 05       		.uleb128 0x5
 4792 00e5 01       		.uleb128 0x1
 4793 00e6 13       		.uleb128 0x13
 4794 00e7 00       		.byte	0
 4795 00e8 00       		.byte	0
 4796 00e9 14       		.uleb128 0x14
 4797 00ea 0D       		.uleb128 0xd
 4798 00eb 00       		.byte	0
 4799 00ec 03       		.uleb128 0x3
 4800 00ed 08       		.uleb128 0x8
 4801 00ee 3A       		.uleb128 0x3a
 4802 00ef 0B       		.uleb128 0xb
 4803 00f0 3B       		.uleb128 0x3b
 4804 00f1 05       		.uleb128 0x5
 4805 00f2 49       		.uleb128 0x49
 4806 00f3 13       		.uleb128 0x13
 4807 00f4 00       		.byte	0
 4808 00f5 00       		.byte	0
 4809 00f6 15       		.uleb128 0x15
 4810 00f7 0D       		.uleb128 0xd
 4811 00f8 00       		.byte	0
 4812 00f9 03       		.uleb128 0x3
 4813 00fa 0E       		.uleb128 0xe
 4814 00fb 3A       		.uleb128 0x3a
 4815 00fc 0B       		.uleb128 0xb
 4816 00fd 3B       		.uleb128 0x3b
 4817 00fe 05       		.uleb128 0x5
 4818 00ff 49       		.uleb128 0x49
 4819 0100 13       		.uleb128 0x13
 4820 0101 00       		.byte	0
 4821 0102 00       		.byte	0
 4822 0103 16       		.uleb128 0x16
 4823 0104 01       		.uleb128 0x1
 4824 0105 01       		.byte	0x1
 4825 0106 49       		.uleb128 0x49
 4826 0107 13       		.uleb128 0x13
 4827 0108 01       		.uleb128 0x1
 4828 0109 13       		.uleb128 0x13
 4829 010a 00       		.byte	0
 4830 010b 00       		.byte	0
 4831 010c 17       		.uleb128 0x17
 4832 010d 21       		.uleb128 0x21
 4833 010e 00       		.byte	0
 4834 010f 49       		.uleb128 0x49
 4835 0110 13       		.uleb128 0x13
 4836 0111 2F       		.uleb128 0x2f
 4837 0112 0B       		.uleb128 0xb
 4838 0113 00       		.byte	0
 4839 0114 00       		.byte	0
 4840 0115 18       		.uleb128 0x18
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 113


 4841 0116 13       		.uleb128 0x13
 4842 0117 01       		.byte	0x1
 4843 0118 0B       		.uleb128 0xb
 4844 0119 0B       		.uleb128 0xb
 4845 011a 3A       		.uleb128 0x3a
 4846 011b 0B       		.uleb128 0xb
 4847 011c 3B       		.uleb128 0x3b
 4848 011d 05       		.uleb128 0x5
 4849 011e 01       		.uleb128 0x1
 4850 011f 13       		.uleb128 0x13
 4851 0120 00       		.byte	0
 4852 0121 00       		.byte	0
 4853 0122 19       		.uleb128 0x19
 4854 0123 04       		.uleb128 0x4
 4855 0124 01       		.byte	0x1
 4856 0125 0B       		.uleb128 0xb
 4857 0126 0B       		.uleb128 0xb
 4858 0127 49       		.uleb128 0x49
 4859 0128 13       		.uleb128 0x13
 4860 0129 3A       		.uleb128 0x3a
 4861 012a 0B       		.uleb128 0xb
 4862 012b 3B       		.uleb128 0x3b
 4863 012c 05       		.uleb128 0x5
 4864 012d 01       		.uleb128 0x1
 4865 012e 13       		.uleb128 0x13
 4866 012f 00       		.byte	0
 4867 0130 00       		.byte	0
 4868 0131 1A       		.uleb128 0x1a
 4869 0132 2E       		.uleb128 0x2e
 4870 0133 01       		.byte	0x1
 4871 0134 3F       		.uleb128 0x3f
 4872 0135 19       		.uleb128 0x19
 4873 0136 03       		.uleb128 0x3
 4874 0137 0E       		.uleb128 0xe
 4875 0138 3A       		.uleb128 0x3a
 4876 0139 0B       		.uleb128 0xb
 4877 013a 3B       		.uleb128 0x3b
 4878 013b 05       		.uleb128 0x5
 4879 013c 27       		.uleb128 0x27
 4880 013d 19       		.uleb128 0x19
 4881 013e 11       		.uleb128 0x11
 4882 013f 01       		.uleb128 0x1
 4883 0140 12       		.uleb128 0x12
 4884 0141 06       		.uleb128 0x6
 4885 0142 40       		.uleb128 0x40
 4886 0143 18       		.uleb128 0x18
 4887 0144 9742     		.uleb128 0x2117
 4888 0146 19       		.uleb128 0x19
 4889 0147 01       		.uleb128 0x1
 4890 0148 13       		.uleb128 0x13
 4891 0149 00       		.byte	0
 4892 014a 00       		.byte	0
 4893 014b 1B       		.uleb128 0x1b
 4894 014c 898201   		.uleb128 0x4109
 4895 014f 00       		.byte	0
 4896 0150 11       		.uleb128 0x11
 4897 0151 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 114


 4898 0152 31       		.uleb128 0x31
 4899 0153 13       		.uleb128 0x13
 4900 0154 00       		.byte	0
 4901 0155 00       		.byte	0
 4902 0156 1C       		.uleb128 0x1c
 4903 0157 898201   		.uleb128 0x4109
 4904 015a 01       		.byte	0x1
 4905 015b 11       		.uleb128 0x11
 4906 015c 01       		.uleb128 0x1
 4907 015d 31       		.uleb128 0x31
 4908 015e 13       		.uleb128 0x13
 4909 015f 01       		.uleb128 0x1
 4910 0160 13       		.uleb128 0x13
 4911 0161 00       		.byte	0
 4912 0162 00       		.byte	0
 4913 0163 1D       		.uleb128 0x1d
 4914 0164 8A8201   		.uleb128 0x410a
 4915 0167 00       		.byte	0
 4916 0168 02       		.uleb128 0x2
 4917 0169 18       		.uleb128 0x18
 4918 016a 9142     		.uleb128 0x2111
 4919 016c 18       		.uleb128 0x18
 4920 016d 00       		.byte	0
 4921 016e 00       		.byte	0
 4922 016f 1E       		.uleb128 0x1e
 4923 0170 898201   		.uleb128 0x4109
 4924 0173 01       		.byte	0x1
 4925 0174 11       		.uleb128 0x11
 4926 0175 01       		.uleb128 0x1
 4927 0176 31       		.uleb128 0x31
 4928 0177 13       		.uleb128 0x13
 4929 0178 00       		.byte	0
 4930 0179 00       		.byte	0
 4931 017a 1F       		.uleb128 0x1f
 4932 017b 34       		.uleb128 0x34
 4933 017c 00       		.byte	0
 4934 017d 03       		.uleb128 0x3
 4935 017e 08       		.uleb128 0x8
 4936 017f 3A       		.uleb128 0x3a
 4937 0180 0B       		.uleb128 0xb
 4938 0181 3B       		.uleb128 0x3b
 4939 0182 05       		.uleb128 0x5
 4940 0183 49       		.uleb128 0x49
 4941 0184 13       		.uleb128 0x13
 4942 0185 02       		.uleb128 0x2
 4943 0186 17       		.uleb128 0x17
 4944 0187 00       		.byte	0
 4945 0188 00       		.byte	0
 4946 0189 20       		.uleb128 0x20
 4947 018a 05       		.uleb128 0x5
 4948 018b 00       		.byte	0
 4949 018c 03       		.uleb128 0x3
 4950 018d 0E       		.uleb128 0xe
 4951 018e 3A       		.uleb128 0x3a
 4952 018f 0B       		.uleb128 0xb
 4953 0190 3B       		.uleb128 0x3b
 4954 0191 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 115


 4955 0192 49       		.uleb128 0x49
 4956 0193 13       		.uleb128 0x13
 4957 0194 02       		.uleb128 0x2
 4958 0195 17       		.uleb128 0x17
 4959 0196 00       		.byte	0
 4960 0197 00       		.byte	0
 4961 0198 21       		.uleb128 0x21
 4962 0199 2E       		.uleb128 0x2e
 4963 019a 01       		.byte	0x1
 4964 019b 3F       		.uleb128 0x3f
 4965 019c 19       		.uleb128 0x19
 4966 019d 03       		.uleb128 0x3
 4967 019e 0E       		.uleb128 0xe
 4968 019f 3A       		.uleb128 0x3a
 4969 01a0 0B       		.uleb128 0xb
 4970 01a1 3B       		.uleb128 0x3b
 4971 01a2 05       		.uleb128 0x5
 4972 01a3 27       		.uleb128 0x27
 4973 01a4 19       		.uleb128 0x19
 4974 01a5 8701     		.uleb128 0x87
 4975 01a7 19       		.uleb128 0x19
 4976 01a8 11       		.uleb128 0x11
 4977 01a9 01       		.uleb128 0x1
 4978 01aa 12       		.uleb128 0x12
 4979 01ab 06       		.uleb128 0x6
 4980 01ac 40       		.uleb128 0x40
 4981 01ad 18       		.uleb128 0x18
 4982 01ae 9742     		.uleb128 0x2117
 4983 01b0 19       		.uleb128 0x19
 4984 01b1 01       		.uleb128 0x1
 4985 01b2 13       		.uleb128 0x13
 4986 01b3 00       		.byte	0
 4987 01b4 00       		.byte	0
 4988 01b5 22       		.uleb128 0x22
 4989 01b6 05       		.uleb128 0x5
 4990 01b7 00       		.byte	0
 4991 01b8 03       		.uleb128 0x3
 4992 01b9 08       		.uleb128 0x8
 4993 01ba 3A       		.uleb128 0x3a
 4994 01bb 0B       		.uleb128 0xb
 4995 01bc 3B       		.uleb128 0x3b
 4996 01bd 05       		.uleb128 0x5
 4997 01be 49       		.uleb128 0x49
 4998 01bf 13       		.uleb128 0x13
 4999 01c0 02       		.uleb128 0x2
 5000 01c1 17       		.uleb128 0x17
 5001 01c2 00       		.byte	0
 5002 01c3 00       		.byte	0
 5003 01c4 23       		.uleb128 0x23
 5004 01c5 34       		.uleb128 0x34
 5005 01c6 00       		.byte	0
 5006 01c7 03       		.uleb128 0x3
 5007 01c8 08       		.uleb128 0x8
 5008 01c9 3A       		.uleb128 0x3a
 5009 01ca 0B       		.uleb128 0xb
 5010 01cb 3B       		.uleb128 0x3b
 5011 01cc 05       		.uleb128 0x5
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 116


 5012 01cd 49       		.uleb128 0x49
 5013 01ce 13       		.uleb128 0x13
 5014 01cf 02       		.uleb128 0x2
 5015 01d0 18       		.uleb128 0x18
 5016 01d1 00       		.byte	0
 5017 01d2 00       		.byte	0
 5018 01d3 24       		.uleb128 0x24
 5019 01d4 34       		.uleb128 0x34
 5020 01d5 00       		.byte	0
 5021 01d6 03       		.uleb128 0x3
 5022 01d7 0E       		.uleb128 0xe
 5023 01d8 3A       		.uleb128 0x3a
 5024 01d9 0B       		.uleb128 0xb
 5025 01da 3B       		.uleb128 0x3b
 5026 01db 05       		.uleb128 0x5
 5027 01dc 49       		.uleb128 0x49
 5028 01dd 13       		.uleb128 0x13
 5029 01de 02       		.uleb128 0x2
 5030 01df 17       		.uleb128 0x17
 5031 01e0 00       		.byte	0
 5032 01e1 00       		.byte	0
 5033 01e2 25       		.uleb128 0x25
 5034 01e3 34       		.uleb128 0x34
 5035 01e4 00       		.byte	0
 5036 01e5 03       		.uleb128 0x3
 5037 01e6 0E       		.uleb128 0xe
 5038 01e7 3A       		.uleb128 0x3a
 5039 01e8 0B       		.uleb128 0xb
 5040 01e9 3B       		.uleb128 0x3b
 5041 01ea 05       		.uleb128 0x5
 5042 01eb 49       		.uleb128 0x49
 5043 01ec 13       		.uleb128 0x13
 5044 01ed 02       		.uleb128 0x2
 5045 01ee 18       		.uleb128 0x18
 5046 01ef 00       		.byte	0
 5047 01f0 00       		.byte	0
 5048 01f1 26       		.uleb128 0x26
 5049 01f2 05       		.uleb128 0x5
 5050 01f3 00       		.byte	0
 5051 01f4 03       		.uleb128 0x3
 5052 01f5 0E       		.uleb128 0xe
 5053 01f6 3A       		.uleb128 0x3a
 5054 01f7 0B       		.uleb128 0xb
 5055 01f8 3B       		.uleb128 0x3b
 5056 01f9 05       		.uleb128 0x5
 5057 01fa 49       		.uleb128 0x49
 5058 01fb 13       		.uleb128 0x13
 5059 01fc 02       		.uleb128 0x2
 5060 01fd 18       		.uleb128 0x18
 5061 01fe 00       		.byte	0
 5062 01ff 00       		.byte	0
 5063 0200 27       		.uleb128 0x27
 5064 0201 2E       		.uleb128 0x2e
 5065 0202 01       		.byte	0x1
 5066 0203 3F       		.uleb128 0x3f
 5067 0204 19       		.uleb128 0x19
 5068 0205 03       		.uleb128 0x3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 117


 5069 0206 0E       		.uleb128 0xe
 5070 0207 3A       		.uleb128 0x3a
 5071 0208 0B       		.uleb128 0xb
 5072 0209 3B       		.uleb128 0x3b
 5073 020a 05       		.uleb128 0x5
 5074 020b 27       		.uleb128 0x27
 5075 020c 19       		.uleb128 0x19
 5076 020d 11       		.uleb128 0x11
 5077 020e 01       		.uleb128 0x1
 5078 020f 12       		.uleb128 0x12
 5079 0210 06       		.uleb128 0x6
 5080 0211 40       		.uleb128 0x40
 5081 0212 18       		.uleb128 0x18
 5082 0213 9642     		.uleb128 0x2116
 5083 0215 19       		.uleb128 0x19
 5084 0216 01       		.uleb128 0x1
 5085 0217 13       		.uleb128 0x13
 5086 0218 00       		.byte	0
 5087 0219 00       		.byte	0
 5088 021a 28       		.uleb128 0x28
 5089 021b 0B       		.uleb128 0xb
 5090 021c 01       		.byte	0x1
 5091 021d 11       		.uleb128 0x11
 5092 021e 01       		.uleb128 0x1
 5093 021f 12       		.uleb128 0x12
 5094 0220 06       		.uleb128 0x6
 5095 0221 00       		.byte	0
 5096 0222 00       		.byte	0
 5097 0223 29       		.uleb128 0x29
 5098 0224 2E       		.uleb128 0x2e
 5099 0225 01       		.byte	0x1
 5100 0226 3F       		.uleb128 0x3f
 5101 0227 19       		.uleb128 0x19
 5102 0228 03       		.uleb128 0x3
 5103 0229 0E       		.uleb128 0xe
 5104 022a 3A       		.uleb128 0x3a
 5105 022b 0B       		.uleb128 0xb
 5106 022c 3B       		.uleb128 0x3b
 5107 022d 05       		.uleb128 0x5
 5108 022e 27       		.uleb128 0x27
 5109 022f 19       		.uleb128 0x19
 5110 0230 49       		.uleb128 0x49
 5111 0231 13       		.uleb128 0x13
 5112 0232 11       		.uleb128 0x11
 5113 0233 01       		.uleb128 0x1
 5114 0234 12       		.uleb128 0x12
 5115 0235 06       		.uleb128 0x6
 5116 0236 40       		.uleb128 0x40
 5117 0237 18       		.uleb128 0x18
 5118 0238 9642     		.uleb128 0x2116
 5119 023a 19       		.uleb128 0x19
 5120 023b 01       		.uleb128 0x1
 5121 023c 13       		.uleb128 0x13
 5122 023d 00       		.byte	0
 5123 023e 00       		.byte	0
 5124 023f 2A       		.uleb128 0x2a
 5125 0240 2E       		.uleb128 0x2e
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 118


 5126 0241 01       		.byte	0x1
 5127 0242 3F       		.uleb128 0x3f
 5128 0243 19       		.uleb128 0x19
 5129 0244 03       		.uleb128 0x3
 5130 0245 0E       		.uleb128 0xe
 5131 0246 3A       		.uleb128 0x3a
 5132 0247 0B       		.uleb128 0xb
 5133 0248 3B       		.uleb128 0x3b
 5134 0249 05       		.uleb128 0x5
 5135 024a 27       		.uleb128 0x27
 5136 024b 19       		.uleb128 0x19
 5137 024c 8701     		.uleb128 0x87
 5138 024e 19       		.uleb128 0x19
 5139 024f 11       		.uleb128 0x11
 5140 0250 01       		.uleb128 0x1
 5141 0251 12       		.uleb128 0x12
 5142 0252 06       		.uleb128 0x6
 5143 0253 40       		.uleb128 0x40
 5144 0254 18       		.uleb128 0x18
 5145 0255 9642     		.uleb128 0x2116
 5146 0257 19       		.uleb128 0x19
 5147 0258 01       		.uleb128 0x1
 5148 0259 13       		.uleb128 0x13
 5149 025a 00       		.byte	0
 5150 025b 00       		.byte	0
 5151 025c 2B       		.uleb128 0x2b
 5152 025d 34       		.uleb128 0x34
 5153 025e 00       		.byte	0
 5154 025f 03       		.uleb128 0x3
 5155 0260 0E       		.uleb128 0xe
 5156 0261 3A       		.uleb128 0x3a
 5157 0262 0B       		.uleb128 0xb
 5158 0263 3B       		.uleb128 0x3b
 5159 0264 05       		.uleb128 0x5
 5160 0265 49       		.uleb128 0x49
 5161 0266 13       		.uleb128 0x13
 5162 0267 1C       		.uleb128 0x1c
 5163 0268 0B       		.uleb128 0xb
 5164 0269 00       		.byte	0
 5165 026a 00       		.byte	0
 5166 026b 2C       		.uleb128 0x2c
 5167 026c 2E       		.uleb128 0x2e
 5168 026d 01       		.byte	0x1
 5169 026e 3F       		.uleb128 0x3f
 5170 026f 19       		.uleb128 0x19
 5171 0270 03       		.uleb128 0x3
 5172 0271 0E       		.uleb128 0xe
 5173 0272 3A       		.uleb128 0x3a
 5174 0273 0B       		.uleb128 0xb
 5175 0274 3B       		.uleb128 0x3b
 5176 0275 05       		.uleb128 0x5
 5177 0276 27       		.uleb128 0x27
 5178 0277 19       		.uleb128 0x19
 5179 0278 49       		.uleb128 0x49
 5180 0279 13       		.uleb128 0x13
 5181 027a 11       		.uleb128 0x11
 5182 027b 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 119


 5183 027c 12       		.uleb128 0x12
 5184 027d 06       		.uleb128 0x6
 5185 027e 40       		.uleb128 0x40
 5186 027f 18       		.uleb128 0x18
 5187 0280 9742     		.uleb128 0x2117
 5188 0282 19       		.uleb128 0x19
 5189 0283 01       		.uleb128 0x1
 5190 0284 13       		.uleb128 0x13
 5191 0285 00       		.byte	0
 5192 0286 00       		.byte	0
 5193 0287 2D       		.uleb128 0x2d
 5194 0288 34       		.uleb128 0x34
 5195 0289 00       		.byte	0
 5196 028a 03       		.uleb128 0x3
 5197 028b 08       		.uleb128 0x8
 5198 028c 3A       		.uleb128 0x3a
 5199 028d 0B       		.uleb128 0xb
 5200 028e 3B       		.uleb128 0x3b
 5201 028f 0B       		.uleb128 0xb
 5202 0290 49       		.uleb128 0x49
 5203 0291 13       		.uleb128 0x13
 5204 0292 3F       		.uleb128 0x3f
 5205 0293 19       		.uleb128 0x19
 5206 0294 02       		.uleb128 0x2
 5207 0295 18       		.uleb128 0x18
 5208 0296 00       		.byte	0
 5209 0297 00       		.byte	0
 5210 0298 2E       		.uleb128 0x2e
 5211 0299 34       		.uleb128 0x34
 5212 029a 00       		.byte	0
 5213 029b 03       		.uleb128 0x3
 5214 029c 0E       		.uleb128 0xe
 5215 029d 3A       		.uleb128 0x3a
 5216 029e 0B       		.uleb128 0xb
 5217 029f 3B       		.uleb128 0x3b
 5218 02a0 0B       		.uleb128 0xb
 5219 02a1 49       		.uleb128 0x49
 5220 02a2 13       		.uleb128 0x13
 5221 02a3 3F       		.uleb128 0x3f
 5222 02a4 19       		.uleb128 0x19
 5223 02a5 02       		.uleb128 0x2
 5224 02a6 18       		.uleb128 0x18
 5225 02a7 00       		.byte	0
 5226 02a8 00       		.byte	0
 5227 02a9 2F       		.uleb128 0x2f
 5228 02aa 34       		.uleb128 0x34
 5229 02ab 00       		.byte	0
 5230 02ac 03       		.uleb128 0x3
 5231 02ad 0E       		.uleb128 0xe
 5232 02ae 3A       		.uleb128 0x3a
 5233 02af 0B       		.uleb128 0xb
 5234 02b0 3B       		.uleb128 0x3b
 5235 02b1 05       		.uleb128 0x5
 5236 02b2 49       		.uleb128 0x49
 5237 02b3 13       		.uleb128 0x13
 5238 02b4 3F       		.uleb128 0x3f
 5239 02b5 19       		.uleb128 0x19
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 120


 5240 02b6 02       		.uleb128 0x2
 5241 02b7 18       		.uleb128 0x18
 5242 02b8 00       		.byte	0
 5243 02b9 00       		.byte	0
 5244 02ba 30       		.uleb128 0x30
 5245 02bb 2E       		.uleb128 0x2e
 5246 02bc 00       		.byte	0
 5247 02bd 3F       		.uleb128 0x3f
 5248 02be 19       		.uleb128 0x19
 5249 02bf 3C       		.uleb128 0x3c
 5250 02c0 19       		.uleb128 0x19
 5251 02c1 6E       		.uleb128 0x6e
 5252 02c2 0E       		.uleb128 0xe
 5253 02c3 03       		.uleb128 0x3
 5254 02c4 0E       		.uleb128 0xe
 5255 02c5 3A       		.uleb128 0x3a
 5256 02c6 0B       		.uleb128 0xb
 5257 02c7 3B       		.uleb128 0x3b
 5258 02c8 0B       		.uleb128 0xb
 5259 02c9 00       		.byte	0
 5260 02ca 00       		.byte	0
 5261 02cb 31       		.uleb128 0x31
 5262 02cc 2E       		.uleb128 0x2e
 5263 02cd 00       		.byte	0
 5264 02ce 3F       		.uleb128 0x3f
 5265 02cf 19       		.uleb128 0x19
 5266 02d0 3C       		.uleb128 0x3c
 5267 02d1 19       		.uleb128 0x19
 5268 02d2 6E       		.uleb128 0x6e
 5269 02d3 0E       		.uleb128 0xe
 5270 02d4 03       		.uleb128 0x3
 5271 02d5 0E       		.uleb128 0xe
 5272 02d6 3A       		.uleb128 0x3a
 5273 02d7 0B       		.uleb128 0xb
 5274 02d8 3B       		.uleb128 0x3b
 5275 02d9 05       		.uleb128 0x5
 5276 02da 00       		.byte	0
 5277 02db 00       		.byte	0
 5278 02dc 32       		.uleb128 0x32
 5279 02dd 2E       		.uleb128 0x2e
 5280 02de 00       		.byte	0
 5281 02df 3F       		.uleb128 0x3f
 5282 02e0 19       		.uleb128 0x19
 5283 02e1 3C       		.uleb128 0x3c
 5284 02e2 19       		.uleb128 0x19
 5285 02e3 6E       		.uleb128 0x6e
 5286 02e4 0E       		.uleb128 0xe
 5287 02e5 03       		.uleb128 0x3
 5288 02e6 0E       		.uleb128 0xe
 5289 02e7 00       		.byte	0
 5290 02e8 00       		.byte	0
 5291 02e9 00       		.byte	0
 5292              		.section	.debug_loc,"",%progbits
 5293              	.Ldebug_loc0:
 5294              	.LLST0:
 5295 0000 28000000 		.4byte	.LVL10
 5296 0004 2C000000 		.4byte	.LVL11
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 121


 5297 0008 0200     		.2byte	0x2
 5298 000a 30       		.byte	0x30
 5299 000b 9F       		.byte	0x9f
 5300 000c 2C000000 		.4byte	.LVL11
 5301 0010 48000000 		.4byte	.LVL16
 5302 0014 0100     		.2byte	0x1
 5303 0016 54       		.byte	0x54
 5304 0017 00000000 		.4byte	0
 5305 001b 00000000 		.4byte	0
 5306              	.LLST1:
 5307 001f 00000000 		.4byte	.LVL20
 5308 0023 12000000 		.4byte	.LVL21
 5309 0027 0100     		.2byte	0x1
 5310 0029 50       		.byte	0x50
 5311 002a 12000000 		.4byte	.LVL21
 5312 002e 1C000000 		.4byte	.LFE33
 5313 0032 0400     		.2byte	0x4
 5314 0034 F3       		.byte	0xf3
 5315 0035 01       		.uleb128 0x1
 5316 0036 50       		.byte	0x50
 5317 0037 9F       		.byte	0x9f
 5318 0038 00000000 		.4byte	0
 5319 003c 00000000 		.4byte	0
 5320              	.LLST2:
 5321 0040 00000000 		.4byte	.LVL22
 5322 0044 06000000 		.4byte	.LVL24
 5323 0048 0100     		.2byte	0x1
 5324 004a 50       		.byte	0x50
 5325 004b 06000000 		.4byte	.LVL24
 5326 004f F0000000 		.4byte	.LFE35
 5327 0053 0400     		.2byte	0x4
 5328 0055 F3       		.byte	0xf3
 5329 0056 01       		.uleb128 0x1
 5330 0057 50       		.byte	0x50
 5331 0058 9F       		.byte	0x9f
 5332 0059 00000000 		.4byte	0
 5333 005d 00000000 		.4byte	0
 5334              	.LLST3:
 5335 0061 40000000 		.4byte	.LVL33
 5336 0065 58000000 		.4byte	.LVL37
 5337 0069 0300     		.2byte	0x3
 5338 006b 08       		.byte	0x8
 5339 006c 20       		.byte	0x20
 5340 006d 9F       		.byte	0x9f
 5341 006e 00000000 		.4byte	0
 5342 0072 00000000 		.4byte	0
 5343              	.LLST4:
 5344 0076 48000000 		.4byte	.LVL34
 5345 007a 58000000 		.4byte	.LVL37
 5346 007e 0200     		.2byte	0x2
 5347 0080 30       		.byte	0x30
 5348 0081 9F       		.byte	0x9f
 5349 0082 00000000 		.4byte	0
 5350 0086 00000000 		.4byte	0
 5351              	.LLST5:
 5352 008a 04000000 		.4byte	.LVL23
 5353 008e 10000000 		.4byte	.LVL26
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 122


 5354 0092 0200     		.2byte	0x2
 5355 0094 30       		.byte	0x30
 5356 0095 9F       		.byte	0x9f
 5357 0096 10000000 		.4byte	.LVL26
 5358 009a 22000000 		.4byte	.LVL29
 5359 009e 0100     		.2byte	0x1
 5360 00a0 54       		.byte	0x54
 5361 00a1 24000000 		.4byte	.LVL30
 5362 00a5 F0000000 		.4byte	.LFE35
 5363 00a9 0100     		.2byte	0x1
 5364 00ab 54       		.byte	0x54
 5365 00ac 00000000 		.4byte	0
 5366 00b0 00000000 		.4byte	0
 5367              	.LLST6:
 5368 00b4 00000000 		.4byte	.LVL48
 5369 00b8 04000000 		.4byte	.LVL49
 5370 00bc 0100     		.2byte	0x1
 5371 00be 50       		.byte	0x50
 5372 00bf 04000000 		.4byte	.LVL49
 5373 00c3 5C020000 		.4byte	.LFE36
 5374 00c7 0400     		.2byte	0x4
 5375 00c9 F3       		.byte	0xf3
 5376 00ca 01       		.uleb128 0x1
 5377 00cb 50       		.byte	0x50
 5378 00cc 9F       		.byte	0x9f
 5379 00cd 00000000 		.4byte	0
 5380 00d1 00000000 		.4byte	0
 5381              	.LLST7:
 5382 00d5 36000000 		.4byte	.LVL53
 5383 00d9 58010000 		.4byte	.LVL72
 5384 00dd 0100     		.2byte	0x1
 5385 00df 54       		.byte	0x54
 5386 00e0 00000000 		.4byte	0
 5387 00e4 00000000 		.4byte	0
 5388              	.LLST8:
 5389 00e8 34000000 		.4byte	.LVL52
 5390 00ec D6000000 		.4byte	.LVL65
 5391 00f0 0100     		.2byte	0x1
 5392 00f2 50       		.byte	0x50
 5393 00f3 F8000000 		.4byte	.LVL67
 5394 00f7 FA000000 		.4byte	.LVL68
 5395 00fb 0100     		.2byte	0x1
 5396 00fd 50       		.byte	0x50
 5397 00fe 00000000 		.4byte	0
 5398 0102 00000000 		.4byte	0
 5399              	.LLST9:
 5400 0106 3C000000 		.4byte	.LVL54
 5401 010a 42000000 		.4byte	.LVL55
 5402 010e 0200     		.2byte	0x2
 5403 0110 30       		.byte	0x30
 5404 0111 9F       		.byte	0x9f
 5405 0112 42000000 		.4byte	.LVL55
 5406 0116 4C000000 		.4byte	.LVL58
 5407 011a 0100     		.2byte	0x1
 5408 011c 53       		.byte	0x53
 5409 011d 4E000000 		.4byte	.LVL59
 5410 0121 58000000 		.4byte	.LVL60
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 123


 5411 0125 0100     		.2byte	0x1
 5412 0127 53       		.byte	0x53
 5413 0128 6A000000 		.4byte	.LVL62
 5414 012c 6C000000 		.4byte	.LVL63
 5415 0130 0100     		.2byte	0x1
 5416 0132 53       		.byte	0x53
 5417 0133 B2010000 		.4byte	.LVL74
 5418 0137 B8010000 		.4byte	.LVL75
 5419 013b 0200     		.2byte	0x2
 5420 013d 30       		.byte	0x30
 5421 013e 9F       		.byte	0x9f
 5422 013f B8010000 		.4byte	.LVL75
 5423 0143 C2010000 		.4byte	.LVL78
 5424 0147 0100     		.2byte	0x1
 5425 0149 53       		.byte	0x53
 5426 014a C4010000 		.4byte	.LVL79
 5427 014e D3010000 		.4byte	.LVL81-1
 5428 0152 0100     		.2byte	0x1
 5429 0154 53       		.byte	0x53
 5430 0155 00000000 		.4byte	0
 5431 0159 00000000 		.4byte	0
 5432              	.LLST10:
 5433 015d 3C000000 		.4byte	.LVL54
 5434 0161 42000000 		.4byte	.LVL55
 5435 0165 0200     		.2byte	0x2
 5436 0167 30       		.byte	0x30
 5437 0168 9F       		.byte	0x9f
 5438 0169 42000000 		.4byte	.LVL55
 5439 016d 48000000 		.4byte	.LVL56
 5440 0171 0100     		.2byte	0x1
 5441 0173 52       		.byte	0x52
 5442 0174 4A000000 		.4byte	.LVL57
 5443 0178 5C000000 		.4byte	.LVL61
 5444 017c 0100     		.2byte	0x1
 5445 017e 52       		.byte	0x52
 5446 017f 6A000000 		.4byte	.LVL62
 5447 0183 80000000 		.4byte	.LVL64
 5448 0187 0100     		.2byte	0x1
 5449 0189 52       		.byte	0x52
 5450 018a F8000000 		.4byte	.LVL67
 5451 018e 00010000 		.4byte	.LVL69
 5452 0192 0100     		.2byte	0x1
 5453 0194 52       		.byte	0x52
 5454 0195 B2010000 		.4byte	.LVL74
 5455 0199 B8010000 		.4byte	.LVL75
 5456 019d 0200     		.2byte	0x2
 5457 019f 30       		.byte	0x30
 5458 01a0 9F       		.byte	0x9f
 5459 01a1 B8010000 		.4byte	.LVL75
 5460 01a5 BE010000 		.4byte	.LVL76
 5461 01a9 0100     		.2byte	0x1
 5462 01ab 52       		.byte	0x52
 5463 01ac C0010000 		.4byte	.LVL77
 5464 01b0 CC010000 		.4byte	.LVL80
 5465 01b4 0100     		.2byte	0x1
 5466 01b6 52       		.byte	0x52
 5467 01b7 00000000 		.4byte	0
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 124


 5468 01bb 00000000 		.4byte	0
 5469              	.LLST11:
 5470 01bf 00000000 		.4byte	.LVL86
 5471 01c3 08000000 		.4byte	.LVL88
 5472 01c7 0100     		.2byte	0x1
 5473 01c9 50       		.byte	0x50
 5474 01ca 08000000 		.4byte	.LVL88
 5475 01ce 68000000 		.4byte	.LVL103
 5476 01d2 0100     		.2byte	0x1
 5477 01d4 55       		.byte	0x55
 5478 01d5 68000000 		.4byte	.LVL103
 5479 01d9 78000000 		.4byte	.LFE37
 5480 01dd 0600     		.2byte	0x6
 5481 01df F3       		.byte	0xf3
 5482 01e0 03       		.uleb128 0x3
 5483 01e1 F5       		.byte	0xf5
 5484 01e2 00       		.uleb128 0
 5485 01e3 25       		.uleb128 0x25
 5486 01e4 9F       		.byte	0x9f
 5487 01e5 00000000 		.4byte	0
 5488 01e9 00000000 		.4byte	0
 5489              	.LLST12:
 5490 01ed 04000000 		.4byte	.LVL87
 5491 01f1 08000000 		.4byte	.LVL88
 5492 01f5 0100     		.2byte	0x1
 5493 01f7 50       		.byte	0x50
 5494 01f8 08000000 		.4byte	.LVL88
 5495 01fc 36000000 		.4byte	.LVL93
 5496 0200 0100     		.2byte	0x1
 5497 0202 55       		.byte	0x55
 5498 0203 36000000 		.4byte	.LVL93
 5499 0207 52000000 		.4byte	.LVL96
 5500 020b 0100     		.2byte	0x1
 5501 020d 54       		.byte	0x54
 5502 020e 54000000 		.4byte	.LVL97
 5503 0212 68000000 		.4byte	.LVL102
 5504 0216 0100     		.2byte	0x1
 5505 0218 54       		.byte	0x54
 5506 0219 00000000 		.4byte	0
 5507 021d 00000000 		.4byte	0
 5508              	.LLST13:
 5509 0221 06000000 		.4byte	.LVL104
 5510 0225 09000000 		.4byte	.LVL105-1
 5511 0229 0100     		.2byte	0x1
 5512 022b 50       		.byte	0x50
 5513 022c 00000000 		.4byte	0
 5514 0230 00000000 		.4byte	0
 5515              	.LLST14:
 5516 0234 00000000 		.4byte	.LVL108
 5517 0238 0F000000 		.4byte	.LVL109-1
 5518 023c 0100     		.2byte	0x1
 5519 023e 50       		.byte	0x50
 5520 023f 0F000000 		.4byte	.LVL109-1
 5521 0243 44000000 		.4byte	.LFE39
 5522 0247 0400     		.2byte	0x4
 5523 0249 F3       		.byte	0xf3
 5524 024a 01       		.uleb128 0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 125


 5525 024b 50       		.byte	0x50
 5526 024c 9F       		.byte	0x9f
 5527 024d 00000000 		.4byte	0
 5528 0251 00000000 		.4byte	0
 5529              	.LLST15:
 5530 0255 00000000 		.4byte	.LVL108
 5531 0259 0F000000 		.4byte	.LVL109-1
 5532 025d 0100     		.2byte	0x1
 5533 025f 51       		.byte	0x51
 5534 0260 0F000000 		.4byte	.LVL109-1
 5535 0264 32000000 		.4byte	.LVL117
 5536 0268 0100     		.2byte	0x1
 5537 026a 56       		.byte	0x56
 5538 026b 32000000 		.4byte	.LVL117
 5539 026f 44000000 		.4byte	.LFE39
 5540 0273 0600     		.2byte	0x6
 5541 0275 F3       		.byte	0xf3
 5542 0276 03       		.uleb128 0x3
 5543 0277 F5       		.byte	0xf5
 5544 0278 01       		.uleb128 0x1
 5545 0279 25       		.uleb128 0x25
 5546 027a 9F       		.byte	0x9f
 5547 027b 00000000 		.4byte	0
 5548 027f 00000000 		.4byte	0
 5549              	.LLST16:
 5550 0283 00000000 		.4byte	.LVL108
 5551 0287 0F000000 		.4byte	.LVL109-1
 5552 028b 0100     		.2byte	0x1
 5553 028d 52       		.byte	0x52
 5554 028e 0F000000 		.4byte	.LVL109-1
 5555 0292 32000000 		.4byte	.LVL116
 5556 0296 0100     		.2byte	0x1
 5557 0298 55       		.byte	0x55
 5558 0299 32000000 		.4byte	.LVL116
 5559 029d 44000000 		.4byte	.LFE39
 5560 02a1 0600     		.2byte	0x6
 5561 02a3 F3       		.byte	0xf3
 5562 02a4 03       		.uleb128 0x3
 5563 02a5 F5       		.byte	0xf5
 5564 02a6 02       		.uleb128 0x2
 5565 02a7 25       		.uleb128 0x25
 5566 02a8 9F       		.byte	0x9f
 5567 02a9 00000000 		.4byte	0
 5568 02ad 00000000 		.4byte	0
 5569              	.LLST17:
 5570 02b1 00000000 		.4byte	.LVL108
 5571 02b5 0F000000 		.4byte	.LVL109-1
 5572 02b9 0100     		.2byte	0x1
 5573 02bb 53       		.byte	0x53
 5574 02bc 0F000000 		.4byte	.LVL109-1
 5575 02c0 32000000 		.4byte	.LVL115
 5576 02c4 0100     		.2byte	0x1
 5577 02c6 54       		.byte	0x54
 5578 02c7 32000000 		.4byte	.LVL115
 5579 02cb 44000000 		.4byte	.LFE39
 5580 02cf 0600     		.2byte	0x6
 5581 02d1 F3       		.byte	0xf3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 126


 5582 02d2 03       		.uleb128 0x3
 5583 02d3 F5       		.byte	0xf5
 5584 02d4 03       		.uleb128 0x3
 5585 02d5 25       		.uleb128 0x25
 5586 02d6 9F       		.byte	0x9f
 5587 02d7 00000000 		.4byte	0
 5588 02db 00000000 		.4byte	0
 5589              	.LLST18:
 5590 02df 18000000 		.4byte	.LVL111
 5591 02e3 21000000 		.4byte	.LVL112-1
 5592 02e7 0100     		.2byte	0x1
 5593 02e9 50       		.byte	0x50
 5594 02ea 21000000 		.4byte	.LVL112-1
 5595 02ee 32000000 		.4byte	.LVL114
 5596 02f2 0100     		.2byte	0x1
 5597 02f4 57       		.byte	0x57
 5598 02f5 00000000 		.4byte	0
 5599 02f9 00000000 		.4byte	0
 5600              	.LLST19:
 5601 02fd 00000000 		.4byte	.LVL118
 5602 0301 17000000 		.4byte	.LVL119-1
 5603 0305 0100     		.2byte	0x1
 5604 0307 50       		.byte	0x50
 5605 0308 17000000 		.4byte	.LVL119-1
 5606 030c FA000000 		.4byte	.LVL144
 5607 0310 0100     		.2byte	0x1
 5608 0312 54       		.byte	0x54
 5609 0313 FA000000 		.4byte	.LVL144
 5610 0317 FC000000 		.4byte	.LVL145
 5611 031b 0100     		.2byte	0x1
 5612 031d 50       		.byte	0x50
 5613 031e FC000000 		.4byte	.LVL145
 5614 0322 FE000000 		.4byte	.LVL146
 5615 0326 0100     		.2byte	0x1
 5616 0328 54       		.byte	0x54
 5617 0329 FE000000 		.4byte	.LVL146
 5618 032d 3C010000 		.4byte	.LFE40
 5619 0331 0400     		.2byte	0x4
 5620 0333 F3       		.byte	0xf3
 5621 0334 01       		.uleb128 0x1
 5622 0335 50       		.byte	0x50
 5623 0336 9F       		.byte	0x9f
 5624 0337 00000000 		.4byte	0
 5625 033b 00000000 		.4byte	0
 5626              	.LLST20:
 5627 033f 00000000 		.4byte	.LVL118
 5628 0343 17000000 		.4byte	.LVL119-1
 5629 0347 0100     		.2byte	0x1
 5630 0349 51       		.byte	0x51
 5631 034a 17000000 		.4byte	.LVL119-1
 5632 034e 52000000 		.4byte	.LVL128
 5633 0352 0100     		.2byte	0x1
 5634 0354 55       		.byte	0x55
 5635 0355 52000000 		.4byte	.LVL128
 5636 0359 FA000000 		.4byte	.LVL144
 5637 035d 0400     		.2byte	0x4
 5638 035f F3       		.byte	0xf3
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 127


 5639 0360 01       		.uleb128 0x1
 5640 0361 51       		.byte	0x51
 5641 0362 9F       		.byte	0x9f
 5642 0363 FA000000 		.4byte	.LVL144
 5643 0367 FC000000 		.4byte	.LVL145
 5644 036b 0100     		.2byte	0x1
 5645 036d 51       		.byte	0x51
 5646 036e FC000000 		.4byte	.LVL145
 5647 0372 3C010000 		.4byte	.LFE40
 5648 0376 0400     		.2byte	0x4
 5649 0378 F3       		.byte	0xf3
 5650 0379 01       		.uleb128 0x1
 5651 037a 51       		.byte	0x51
 5652 037b 9F       		.byte	0x9f
 5653 037c 00000000 		.4byte	0
 5654 0380 00000000 		.4byte	0
 5655              	.LLST21:
 5656 0384 3A000000 		.4byte	.LVL124
 5657 0388 3D000000 		.4byte	.LVL125-1
 5658 038c 0100     		.2byte	0x1
 5659 038e 50       		.byte	0x50
 5660 038f 3D000000 		.4byte	.LVL125-1
 5661 0393 52000000 		.4byte	.LVL128
 5662 0397 0600     		.2byte	0x6
 5663 0399 75       		.byte	0x75
 5664 039a 00       		.sleb128 0
 5665 039b 76       		.byte	0x76
 5666 039c 00       		.sleb128 0
 5667 039d 1C       		.byte	0x1c
 5668 039e 9F       		.byte	0x9f
 5669 039f 52000000 		.4byte	.LVL128
 5670 03a3 96000000 		.4byte	.LVL134
 5671 03a7 0700     		.2byte	0x7
 5672 03a9 F3       		.byte	0xf3
 5673 03aa 01       		.uleb128 0x1
 5674 03ab 51       		.byte	0x51
 5675 03ac 76       		.byte	0x76
 5676 03ad 00       		.sleb128 0
 5677 03ae 1C       		.byte	0x1c
 5678 03af 9F       		.byte	0x9f
 5679 03b0 00000000 		.4byte	0
 5680 03b4 00000000 		.4byte	0
 5681              	.LLST22:
 5682 03b8 96000000 		.4byte	.LVL134
 5683 03bc 9C000000 		.4byte	.LVL135
 5684 03c0 0100     		.2byte	0x1
 5685 03c2 50       		.byte	0x50
 5686 03c3 9C000000 		.4byte	.LVL135
 5687 03c7 C2000000 		.4byte	.LVL141
 5688 03cb 0100     		.2byte	0x1
 5689 03cd 56       		.byte	0x56
 5690 03ce 00000000 		.4byte	0
 5691 03d2 00000000 		.4byte	0
 5692              	.LLST23:
 5693 03d6 20000000 		.4byte	.LVL122
 5694 03da 37000000 		.4byte	.LVL123-1
 5695 03de 0100     		.2byte	0x1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 128


 5696 03e0 50       		.byte	0x50
 5697 03e1 00000000 		.4byte	0
 5698 03e5 00000000 		.4byte	0
 5699              	.LLST24:
 5700 03e9 1A000000 		.4byte	.LVL120
 5701 03ed 1E000000 		.4byte	.LVL121
 5702 03f1 0100     		.2byte	0x1
 5703 03f3 50       		.byte	0x50
 5704 03f4 1E000000 		.4byte	.LVL121
 5705 03f8 96000000 		.4byte	.LVL134
 5706 03fc 0100     		.2byte	0x1
 5707 03fe 56       		.byte	0x56
 5708 03ff 00000000 		.4byte	0
 5709 0403 00000000 		.4byte	0
 5710              	.LLST25:
 5711 0407 00000000 		.4byte	.LVL147
 5712 040b 09000000 		.4byte	.LVL148-1
 5713 040f 0100     		.2byte	0x1
 5714 0411 50       		.byte	0x50
 5715 0412 09000000 		.4byte	.LVL148-1
 5716 0416 62000000 		.4byte	.LVL154
 5717 041a 0100     		.2byte	0x1
 5718 041c 55       		.byte	0x55
 5719 041d 62000000 		.4byte	.LVL154
 5720 0421 74000000 		.4byte	.LFE41
 5721 0425 0600     		.2byte	0x6
 5722 0427 F3       		.byte	0xf3
 5723 0428 03       		.uleb128 0x3
 5724 0429 F5       		.byte	0xf5
 5725 042a 00       		.uleb128 0
 5726 042b 25       		.uleb128 0x25
 5727 042c 9F       		.byte	0x9f
 5728 042d 00000000 		.4byte	0
 5729 0431 00000000 		.4byte	0
 5730              	.LLST26:
 5731 0435 00000000 		.4byte	.LVL147
 5732 0439 09000000 		.4byte	.LVL148-1
 5733 043d 0100     		.2byte	0x1
 5734 043f 51       		.byte	0x51
 5735 0440 09000000 		.4byte	.LVL148-1
 5736 0444 62000000 		.4byte	.LVL153
 5737 0448 0100     		.2byte	0x1
 5738 044a 54       		.byte	0x54
 5739 044b 62000000 		.4byte	.LVL153
 5740 044f 74000000 		.4byte	.LFE41
 5741 0453 0600     		.2byte	0x6
 5742 0455 F3       		.byte	0xf3
 5743 0456 03       		.uleb128 0x3
 5744 0457 F5       		.byte	0xf5
 5745 0458 01       		.uleb128 0x1
 5746 0459 25       		.uleb128 0x25
 5747 045a 9F       		.byte	0x9f
 5748 045b 00000000 		.4byte	0
 5749 045f 00000000 		.4byte	0
 5750              	.LLST27:
 5751 0463 00000000 		.4byte	.LVL155
 5752 0467 19000000 		.4byte	.LVL157-1
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 129


 5753 046b 0100     		.2byte	0x1
 5754 046d 50       		.byte	0x50
 5755 046e 19000000 		.4byte	.LVL157-1
 5756 0472 24000000 		.4byte	.LFE42
 5757 0476 0400     		.2byte	0x4
 5758 0478 F3       		.byte	0xf3
 5759 0479 01       		.uleb128 0x1
 5760 047a 50       		.byte	0x50
 5761 047b 9F       		.byte	0x9f
 5762 047c 00000000 		.4byte	0
 5763 0480 00000000 		.4byte	0
 5764              	.LLST28:
 5765 0484 0A000000 		.4byte	.LVL156
 5766 0488 1E000000 		.4byte	.LVL158
 5767 048c 0100     		.2byte	0x1
 5768 048e 54       		.byte	0x54
 5769 048f 1E000000 		.4byte	.LVL158
 5770 0493 24000000 		.4byte	.LFE42
 5771 0497 0500     		.2byte	0x5
 5772 0499 03       		.byte	0x3
 5773 049a 00000000 		.4byte	inAuto
 5774 049e 00000000 		.4byte	0
 5775 04a2 00000000 		.4byte	0
 5776              	.LLST29:
 5777 04a6 00000000 		.4byte	.LVL159
 5778 04aa 07000000 		.4byte	.LVL160-1
 5779 04ae 0100     		.2byte	0x1
 5780 04b0 50       		.byte	0x50
 5781 04b1 07000000 		.4byte	.LVL160-1
 5782 04b5 1C000000 		.4byte	.LFE43
 5783 04b9 0600     		.2byte	0x6
 5784 04bb F3       		.byte	0xf3
 5785 04bc 03       		.uleb128 0x3
 5786 04bd F5       		.byte	0xf5
 5787 04be 00       		.uleb128 0
 5788 04bf 25       		.uleb128 0x25
 5789 04c0 9F       		.byte	0x9f
 5790 04c1 00000000 		.4byte	0
 5791 04c5 00000000 		.4byte	0
 5792              	.LLST30:
 5793 04c9 10000000 		.4byte	.LVL161
 5794 04cd 13000000 		.4byte	.LVL162-1
 5795 04d1 0100     		.2byte	0x1
 5796 04d3 50       		.byte	0x50
 5797 04d4 00000000 		.4byte	0
 5798 04d8 00000000 		.4byte	0
 5799              	.LLST31:
 5800 04dc 00000000 		.4byte	.LVL163
 5801 04e0 04000000 		.4byte	.LVL165
 5802 04e4 0100     		.2byte	0x1
 5803 04e6 50       		.byte	0x50
 5804 04e7 04000000 		.4byte	.LVL165
 5805 04eb A8010000 		.4byte	.LFE44
 5806 04ef 0400     		.2byte	0x4
 5807 04f1 F3       		.byte	0xf3
 5808 04f2 01       		.uleb128 0x1
 5809 04f3 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 130


 5810 04f4 9F       		.byte	0x9f
 5811 04f5 00000000 		.4byte	0
 5812 04f9 00000000 		.4byte	0
 5813              	.LLST32:
 5814 04fd 38000000 		.4byte	.LVL170
 5815 0501 46000000 		.4byte	.LVL171
 5816 0505 0200     		.2byte	0x2
 5817 0507 30       		.byte	0x30
 5818 0508 9F       		.byte	0x9f
 5819 0509 54000000 		.4byte	.LVL174
 5820 050d 68000000 		.4byte	.LVL175
 5821 0511 0100     		.2byte	0x1
 5822 0513 50       		.byte	0x50
 5823 0514 68000000 		.4byte	.LVL175
 5824 0518 78000000 		.4byte	.LVL177
 5825 051c 0100     		.2byte	0x1
 5826 051e 54       		.byte	0x54
 5827 051f 78000000 		.4byte	.LVL177
 5828 0523 AD000000 		.4byte	.LVL178-1
 5829 0527 0100     		.2byte	0x1
 5830 0529 50       		.byte	0x50
 5831 052a AD000000 		.4byte	.LVL178-1
 5832 052e A8010000 		.4byte	.LFE44
 5833 0532 0100     		.2byte	0x1
 5834 0534 54       		.byte	0x54
 5835 0535 00000000 		.4byte	0
 5836 0539 00000000 		.4byte	0
 5837              	.LLST33:
 5838 053d 3C010000 		.4byte	.LVL191
 5839 0541 49010000 		.4byte	.LVL192-1
 5840 0545 0100     		.2byte	0x1
 5841 0547 50       		.byte	0x50
 5842 0548 4C010000 		.4byte	.LVL193
 5843 054c 52010000 		.4byte	.LVL194
 5844 0550 0100     		.2byte	0x1
 5845 0552 50       		.byte	0x50
 5846 0553 00000000 		.4byte	0
 5847 0557 00000000 		.4byte	0
 5848              	.LLST34:
 5849 055b D2000000 		.4byte	.LVL182
 5850 055f E1000000 		.4byte	.LVL184-1
 5851 0563 0100     		.2byte	0x1
 5852 0565 50       		.byte	0x50
 5853 0566 00000000 		.4byte	0
 5854 056a 00000000 		.4byte	0
 5855              	.LLST35:
 5856 056e DE000000 		.4byte	.LVL183
 5857 0572 00010000 		.4byte	.LVL188
 5858 0576 0100     		.2byte	0x1
 5859 0578 55       		.byte	0x55
 5860 0579 00000000 		.4byte	0
 5861 057d 00000000 		.4byte	0
 5862              	.LLST36:
 5863 0581 E4000000 		.4byte	.LVL185
 5864 0585 EE000000 		.4byte	.LVL186
 5865 0589 0100     		.2byte	0x1
 5866 058b 50       		.byte	0x50
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 131


 5867 058c EE000000 		.4byte	.LVL186
 5868 0590 00010000 		.4byte	.LVL188
 5869 0594 0100     		.2byte	0x1
 5870 0596 56       		.byte	0x56
 5871 0597 00000000 		.4byte	0
 5872 059b 00000000 		.4byte	0
 5873              	.LLST37:
 5874 059f 50000000 		.4byte	.LVL202
 5875 05a3 54000000 		.4byte	.LVL203
 5876 05a7 0100     		.2byte	0x1
 5877 05a9 54       		.byte	0x54
 5878 05aa 56000000 		.4byte	.LVL204
 5879 05ae 66000000 		.4byte	.LVL207
 5880 05b2 0100     		.2byte	0x1
 5881 05b4 54       		.byte	0x54
 5882 05b5 00000000 		.4byte	0
 5883 05b9 00000000 		.4byte	0
 5884              		.section	.debug_aranges,"",%progbits
 5885 0000 9C000000 		.4byte	0x9c
 5886 0004 0200     		.2byte	0x2
 5887 0006 00000000 		.4byte	.Ldebug_info0
 5888 000a 04       		.byte	0x4
 5889 000b 00       		.byte	0
 5890 000c 0000     		.2byte	0
 5891 000e 0000     		.2byte	0
 5892 0010 00000000 		.4byte	.LFB46
 5893 0014 18000000 		.4byte	.LFE46-.LFB46
 5894 0018 00000000 		.4byte	.LFB47
 5895 001c 12000000 		.4byte	.LFE47-.LFB47
 5896 0020 00000000 		.4byte	.LFB48
 5897 0024 5C000000 		.4byte	.LFE48-.LFB48
 5898 0028 00000000 		.4byte	.LFB32
 5899 002c 28000000 		.4byte	.LFE32-.LFB32
 5900 0030 00000000 		.4byte	.LFB33
 5901 0034 1C000000 		.4byte	.LFE33-.LFB33
 5902 0038 00000000 		.4byte	.LFB35
 5903 003c F0000000 		.4byte	.LFE35-.LFB35
 5904 0040 00000000 		.4byte	.LFB34
 5905 0044 1C000000 		.4byte	.LFE34-.LFB34
 5906 0048 00000000 		.4byte	.LFB36
 5907 004c 5C020000 		.4byte	.LFE36-.LFB36
 5908 0050 00000000 		.4byte	.LFB37
 5909 0054 78000000 		.4byte	.LFE37-.LFB37
 5910 0058 00000000 		.4byte	.LFB38
 5911 005c 58000000 		.4byte	.LFE38-.LFB38
 5912 0060 00000000 		.4byte	.LFB39
 5913 0064 44000000 		.4byte	.LFE39-.LFB39
 5914 0068 00000000 		.4byte	.LFB40
 5915 006c 3C010000 		.4byte	.LFE40-.LFB40
 5916 0070 00000000 		.4byte	.LFB41
 5917 0074 74000000 		.4byte	.LFE41-.LFB41
 5918 0078 00000000 		.4byte	.LFB42
 5919 007c 24000000 		.4byte	.LFE42-.LFB42
 5920 0080 00000000 		.4byte	.LFB43
 5921 0084 1C000000 		.4byte	.LFE43-.LFB43
 5922 0088 00000000 		.4byte	.LFB44
 5923 008c A8010000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 132


 5924 0090 00000000 		.4byte	.LFB45
 5925 0094 44010000 		.4byte	.LFE45-.LFB45
 5926 0098 00000000 		.4byte	0
 5927 009c 00000000 		.4byte	0
 5928              		.section	.debug_ranges,"",%progbits
 5929              	.Ldebug_ranges0:
 5930 0000 00000000 		.4byte	.LFB46
 5931 0004 18000000 		.4byte	.LFE46
 5932 0008 00000000 		.4byte	.LFB47
 5933 000c 12000000 		.4byte	.LFE47
 5934 0010 00000000 		.4byte	.LFB48
 5935 0014 5C000000 		.4byte	.LFE48
 5936 0018 00000000 		.4byte	.LFB32
 5937 001c 28000000 		.4byte	.LFE32
 5938 0020 00000000 		.4byte	.LFB33
 5939 0024 1C000000 		.4byte	.LFE33
 5940 0028 00000000 		.4byte	.LFB35
 5941 002c F0000000 		.4byte	.LFE35
 5942 0030 00000000 		.4byte	.LFB34
 5943 0034 1C000000 		.4byte	.LFE34
 5944 0038 00000000 		.4byte	.LFB36
 5945 003c 5C020000 		.4byte	.LFE36
 5946 0040 00000000 		.4byte	.LFB37
 5947 0044 78000000 		.4byte	.LFE37
 5948 0048 00000000 		.4byte	.LFB38
 5949 004c 58000000 		.4byte	.LFE38
 5950 0050 00000000 		.4byte	.LFB39
 5951 0054 44000000 		.4byte	.LFE39
 5952 0058 00000000 		.4byte	.LFB40
 5953 005c 3C010000 		.4byte	.LFE40
 5954 0060 00000000 		.4byte	.LFB41
 5955 0064 74000000 		.4byte	.LFE41
 5956 0068 00000000 		.4byte	.LFB42
 5957 006c 24000000 		.4byte	.LFE42
 5958 0070 00000000 		.4byte	.LFB43
 5959 0074 1C000000 		.4byte	.LFE43
 5960 0078 00000000 		.4byte	.LFB44
 5961 007c A8010000 		.4byte	.LFE44
 5962 0080 00000000 		.4byte	.LFB45
 5963 0084 44010000 		.4byte	.LFE45
 5964 0088 00000000 		.4byte	0
 5965 008c 00000000 		.4byte	0
 5966              		.section	.debug_line,"",%progbits
 5967              	.Ldebug_line0:
 5968 0000 17050000 		.section	.debug_str,"MS",%progbits,1
 5968      02007C02 
 5968      00000201 
 5968      FB0E0D00 
 5968      01010101 
 5969              	.LASF88:
 5970 0000 43757272 		.ascii	"Current_Read_Task\000"
 5970      656E745F 
 5970      52656164 
 5970      5F546173 
 5970      6B00
 5971              	.LASF113:
 5972 0012 43757272 		.ascii	"CurrentPosition\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 133


 5972      656E7450 
 5972      6F736974 
 5972      696F6E00 
 5973              	.LASF146:
 5974 0022 72784D65 		.ascii	"rxMessage\000"
 5974      73736167 
 5974      6500
 5975              	.LASF194:
 5976 002c 6D61696E 		.ascii	"main.c\000"
 5976      2E6300
 5977              	.LASF76:
 5978 0033 74786D73 		.ascii	"txmsClear\000"
 5978      436C6561 
 5978      7200
 5979              	.LASF144:
 5980 003d 4C6F636B 		.ascii	"Lock\000"
 5980      00
 5981              	.LASF42:
 5982 0042 6673456E 		.ascii	"fsEncoder\000"
 5982      636F6465 
 5982      7200
 5983              	.LASF36:
 5984 004c 6373556E 		.ascii	"csUnconfig\000"
 5984      636F6E66 
 5984      696700
 5985              	.LASF107:
 5986 0057 6E657741 		.ascii	"newAuto\000"
 5986      75746F00 
 5987              	.LASF166:
 5988 005f 4932435F 		.ascii	"I2C_I2CMasterWriteByte\000"
 5988      4932434D 
 5988      61737465 
 5988      72577269 
 5988      74654279 
 5989              	.LASF1:
 5990 0076 756E7369 		.ascii	"unsigned int\000"
 5990      676E6564 
 5990      20696E74 
 5990      00
 5991              	.LASF138:
 5992 0083 43757272 		.ascii	"Current\000"
 5992      656E7400 
 5993              	.LASF188:
 5994 008b 50574D5F 		.ascii	"PWM_1_Start\000"
 5994      315F5374 
 5994      61727400 
 5995              	.LASF65:
 5996 0097 636C6561 		.ascii	"clearfaults\000"
 5996      72666175 
 5996      6C747300 
 5997              	.LASF98:
 5998 00a3 6E65774B 		.ascii	"newKd\000"
 5998      6400
 5999              	.LASF97:
 6000 00a9 6E65774B 		.ascii	"newKi\000"
 6000      6900
 6001              	.LASF96:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 134


 6002 00af 6E65774B 		.ascii	"newKp\000"
 6002      7000
 6003              	.LASF154:
 6004 00b5 484F4D45 		.ascii	"HOME_IN_ClearInterrupt\000"
 6004      5F494E5F 
 6004      436C6561 
 6004      72496E74 
 6004      65727275 
 6005              	.LASF139:
 6006 00cc 5049445F 		.ascii	"PID_Last_Position\000"
 6006      4C617374 
 6006      5F506F73 
 6006      6974696F 
 6006      6E00
 6007              	.LASF61:
 6008 00de 6C696D69 		.ascii	"limit\000"
 6008      7400
 6009              	.LASF163:
 6010 00e4 4C45445F 		.ascii	"LED_Write\000"
 6010      57726974 
 6010      6500
 6011              	.LASF80:
 6012 00ee 486F6D65 		.ascii	"HomeIsrHandler\000"
 6012      49737248 
 6012      616E646C 
 6012      657200
 6013              	.LASF78:
 6014 00fd 74784D65 		.ascii	"txMessageStates_t\000"
 6014      73736167 
 6014      65537461 
 6014      7465735F 
 6014      7400
 6015              	.LASF101:
 6016 010f 6572726F 		.ascii	"error\000"
 6016      7200
 6017              	.LASF119:
 6018 0115 50574D5F 		.ascii	"PWM_Max_Rev\000"
 6018      4D61785F 
 6018      52657600 
 6019              	.LASF87:
 6020 0121 436C6561 		.ascii	"ClearFault\000"
 6020      72466175 
 6020      6C7400
 6021              	.LASF28:
 6022 012c 50656E64 		.ascii	"PendSV_IRQn\000"
 6022      53565F49 
 6022      52516E00 
 6023              	.LASF186:
 6024 0138 4932435F 		.ascii	"I2C_Start\000"
 6024      53746172 
 6024      7400
 6025              	.LASF37:
 6026 0142 63735265 		.ascii	"csReady\000"
 6026      61647900 
 6027              	.LASF160:
 6028 014a 5350495F 		.ascii	"SPI_1_SpiUartClearTxBuffer\000"
 6028      315F5370 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 135


 6028      69556172 
 6028      74436C65 
 6028      61725478 
 6029              	.LASF14:
 6030 0165 75696E74 		.ascii	"uint32_t\000"
 6030      33325F74 
 6030      00
 6031              	.LASF55:
 6032 016e 72784D65 		.ascii	"rxMessage_opcodes_t\000"
 6032      73736167 
 6032      655F6F70 
 6032      636F6465 
 6032      735F7400 
 6033              	.LASF66:
 6034 0182 72784D65 		.ascii	"rxMessage_status_t\000"
 6034      73736167 
 6034      655F7374 
 6034      61747573 
 6034      5F7400
 6035              	.LASF83:
 6036 0195 41737365 		.ascii	"AssertFault\000"
 6036      72744661 
 6036      756C7400 
 6037              	.LASF0:
 6038 01a1 666C6F61 		.ascii	"float\000"
 6038      7400
 6039              	.LASF182:
 6040 01a7 6973725F 		.ascii	"isr_spi_ss_StartEx\000"
 6040      7370695F 
 6040      73735F53 
 6040      74617274 
 6040      457800
 6041              	.LASF56:
 6042 01ba 63686563 		.ascii	"checksum\000"
 6042      6B73756D 
 6042      00
 6043              	.LASF19:
 6044 01c3 696E7433 		.ascii	"int32\000"
 6044      3200
 6045              	.LASF156:
 6046 01c9 7370695F 		.ascii	"spi_ss_Read\000"
 6046      73735F52 
 6046      65616400 
 6047              	.LASF12:
 6048 01d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 6048      206C6F6E 
 6048      6720756E 
 6048      7369676E 
 6048      65642069 
 6049              	.LASF82:
 6050 01ec 73657475 		.ascii	"setupFreeRTOS\000"
 6050      70467265 
 6050      6552544F 
 6050      5300
 6051              	.LASF123:
 6052 01fa 6C617374 		.ascii	"lastTime\000"
 6052      54696D65 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 136


 6052      00
 6053              	.LASF152:
 6054 0203 496E6465 		.ascii	"Index_Counter_1_WriteCounter\000"
 6054      785F436F 
 6054      756E7465 
 6054      725F315F 
 6054      57726974 
 6055              	.LASF125:
 6056 0220 49546572 		.ascii	"ITerm\000"
 6056      6D00
 6057              	.LASF84:
 6058 0226 62797465 		.ascii	"byteMSB\000"
 6058      4D534200 
 6059              	.LASF63:
 6060 022e 656E6162 		.ascii	"enable\000"
 6060      6C6500
 6061              	.LASF162:
 6062 0235 75785461 		.ascii	"uxTaskGetStackHighWaterMark\000"
 6062      736B4765 
 6062      74537461 
 6062      636B4869 
 6062      67685761 
 6063              	.LASF189:
 6064 0251 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 6064      315F5772 
 6064      69746550 
 6064      6572696F 
 6064      6400
 6065              	.LASF134:
 6066 0263 436F6E66 		.ascii	"ConfigState\000"
 6066      69675374 
 6066      61746500 
 6067              	.LASF193:
 6068 026f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6068      43313120 
 6068      352E342E 
 6068      31203230 
 6068      31363036 
 6069 02a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6069      20726576 
 6069      6973696F 
 6069      6E203233 
 6069      37373135 
 6070 02d5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6070      66756E63 
 6070      74696F6E 
 6070      2D736563 
 6070      74696F6E 
 6071              	.LASF183:
 6072 02fd 6973725F 		.ascii	"isr_home_SetPriority\000"
 6072      686F6D65 
 6072      5F536574 
 6072      5072696F 
 6072      72697479 
 6073              	.LASF109:
 6074 0312 5049445F 		.ascii	"PID_SetDrive\000"
 6074      53657444 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 137


 6074      72697665 
 6074      00
 6075              	.LASF108:
 6076 031f 5F426F6F 		.ascii	"_Bool\000"
 6076      6C00
 6077              	.LASF41:
 6078 0325 6673556E 		.ascii	"fsUnconfigured\000"
 6078      636F6E66 
 6078      69677572 
 6078      656400
 6079              	.LASF133:
 6080 0334 696E4175 		.ascii	"inAuto\000"
 6080      746F00
 6081              	.LASF131:
 6082 033b 6F75744D 		.ascii	"outMin\000"
 6082      696E00
 6083              	.LASF92:
 6084 0342 64726976 		.ascii	"drive\000"
 6084      6500
 6085              	.LASF170:
 6086 0348 78517565 		.ascii	"xQueueSemaphoreTake\000"
 6086      75655365 
 6086      6D617068 
 6086      6F726554 
 6086      616B6500 
 6087              	.LASF172:
 6088 035c 5350495F 		.ascii	"SPI_1_SpiUartPutArray\000"
 6088      315F5370 
 6088      69556172 
 6088      74507574 
 6088      41727261 
 6089              	.LASF155:
 6090 0372 7370695F 		.ascii	"spi_ss_ClearInterrupt\000"
 6090      73735F43 
 6090      6C656172 
 6090      496E7465 
 6090      72727570 
 6091              	.LASF86:
 6092 0388 43757272 		.ascii	"CurrentTemp\000"
 6092      656E7454 
 6092      656D7000 
 6093              	.LASF171:
 6094 0394 436F756E 		.ascii	"Counter_1_ReadCounter\000"
 6094      7465725F 
 6094      315F5265 
 6094      6164436F 
 6094      756E7465 
 6095              	.LASF173:
 6096 03aa 78517565 		.ascii	"xQueueGenericSend\000"
 6096      75654765 
 6096      6E657269 
 6096      6353656E 
 6096      6400
 6097              	.LASF169:
 6098 03bc 76546173 		.ascii	"vTaskDelay\000"
 6098      6B44656C 
 6098      617900
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 138


 6099              	.LASF59:
 6100 03c7 72784D65 		.ascii	"rxMessage_overlay_t\000"
 6100      73736167 
 6100      655F6F76 
 6100      65726C61 
 6100      795F7400 
 6101              	.LASF104:
 6102 03db 5049445F 		.ascii	"PID_SetOutputLimits\000"
 6102      5365744F 
 6102      75747075 
 6102      744C696D 
 6102      69747300 
 6103              	.LASF148:
 6104 03ef 74784D65 		.ascii	"txMessageState\000"
 6104      73736167 
 6104      65537461 
 6104      746500
 6105              	.LASF21:
 6106 03fe 63686172 		.ascii	"char\000"
 6106      00
 6107              	.LASF129:
 6108 0403 7265664B 		.ascii	"refKd\000"
 6108      6400
 6109              	.LASF31:
 6110 0409 55426173 		.ascii	"UBaseType_t\000"
 6110      65547970 
 6110      655F7400 
 6111              	.LASF67:
 6112 0415 6F766572 		.ascii	"overlay\000"
 6112      6C617900 
 6113              	.LASF105:
 6114 041d 5049445F 		.ascii	"PID_SetMode\000"
 6114      5365744D 
 6114      6F646500 
 6115              	.LASF90:
 6116 0429 50574D5F 		.ascii	"PWM_Set\000"
 6116      53657400 
 6117              	.LASF159:
 6118 0431 5350495F 		.ascii	"SPI_1_SpiUartClearRxBuffer\000"
 6118      315F5370 
 6118      69556172 
 6118      74436C65 
 6118      61725278 
 6119              	.LASF179:
 6120 044c 43794465 		.ascii	"CyDelay\000"
 6120      6C617900 
 6121              	.LASF16:
 6122 0454 75696E74 		.ascii	"uint16\000"
 6122      313600
 6123              	.LASF18:
 6124 045b 696E7438 		.ascii	"int8\000"
 6124      00
 6125              	.LASF58:
 6126 0460 6F70636F 		.ascii	"opcode\000"
 6126      646500
 6127              	.LASF33:
 6128 0467 51756575 		.ascii	"QueueHandle_t\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 139


 6128      6548616E 
 6128      646C655F 
 6128      7400
 6129              	.LASF177:
 6130 0475 78546173 		.ascii	"xTaskCreate\000"
 6130      6B437265 
 6130      61746500 
 6131              	.LASF13:
 6132 0481 75696E74 		.ascii	"uint8_t\000"
 6132      385F7400 
 6133              	.LASF69:
 6134 0489 73746174 		.ascii	"status\000"
 6134      757300
 6135              	.LASF43:
 6136 0490 6673496E 		.ascii	"fsIndex\000"
 6136      64657800 
 6137              	.LASF174:
 6138 0498 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 6138      315F5772 
 6138      69746543 
 6138      6F6D7061 
 6138      726500
 6139              	.LASF40:
 6140 04ab 66734E4F 		.ascii	"fsNONE\000"
 6140      4E4500
 6141              	.LASF149:
 6142 04b2 6973725F 		.ascii	"isr_rst_encoder_ClearPending\000"
 6142      7273745F 
 6142      656E636F 
 6142      6465725F 
 6142      436C6561 
 6143              	.LASF167:
 6144 04cf 4932435F 		.ascii	"I2C_I2CMasterSendStop\000"
 6144      4932434D 
 6144      61737465 
 6144      7253656E 
 6144      6453746F 
 6145              	.LASF178:
 6146 04e5 78517565 		.ascii	"xQueueCreateMutex\000"
 6146      75654372 
 6146      65617465 
 6146      4D757465 
 6146      7800
 6147              	.LASF185:
 6148 04f7 6973725F 		.ascii	"isr_spi_ss_SetPriority\000"
 6148      7370695F 
 6148      73735F53 
 6148      65745072 
 6148      696F7269 
 6149              	.LASF157:
 6150 050e 78546173 		.ascii	"xTaskGetTickCount\000"
 6150      6B476574 
 6150      5469636B 
 6150      436F756E 
 6150      7400
 6151              	.LASF103:
 6152 0520 74696D65 		.ascii	"timeChange\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 140


 6152      4368616E 
 6152      676500
 6153              	.LASF2:
 6154 052b 6C6F6E67 		.ascii	"long long int\000"
 6154      206C6F6E 
 6154      6720696E 
 6154      7400
 6155              	.LASF45:
 6156 0539 66734368 		.ascii	"fsChecksum\000"
 6156      65636B73 
 6156      756D00
 6157              	.LASF30:
 6158 0544 42617365 		.ascii	"BaseType_t\000"
 6158      54797065 
 6158      5F7400
 6159              	.LASF53:
 6160 054f 6F704572 		.ascii	"opError\000"
 6160      726F7200 
 6161              	.LASF112:
 6162 0557 736C6565 		.ascii	"sleeptime\000"
 6162      7074696D 
 6162      6500
 6163              	.LASF175:
 6164 0561 43795379 		.ascii	"CySysWdtResetCounters\000"
 6164      73576474 
 6164      52657365 
 6164      74436F75 
 6164      6E746572 
 6165              	.LASF118:
 6166 0577 50574D5F 		.ascii	"PWM_Max_Fwd\000"
 6166      4D61785F 
 6166      46776400 
 6167              	.LASF197:
 6168 0583 6D656D73 		.ascii	"memset\000"
 6168      657400
 6169              	.LASF23:
 6170 058a 63796973 		.ascii	"cyisraddress\000"
 6170      72616464 
 6170      72657373 
 6170      00
 6171              	.LASF72:
 6172 0597 63686563 		.ascii	"checksum_errors\000"
 6172      6B73756D 
 6172      5F657272 
 6172      6F727300 
 6173              	.LASF57:
 6174 05a7 73697A65 		.ascii	"size\000"
 6174      00
 6175              	.LASF17:
 6176 05ac 75696E74 		.ascii	"uint32\000"
 6176      333200
 6177              	.LASF77:
 6178 05b3 74786D73 		.ascii	"txmsLoaded\000"
 6178      4C6F6164 
 6178      656400
 6179              	.LASF140:
 6180 05be 43757272 		.ascii	"CurrentI2Cinbuf\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 141


 6180      656E7449 
 6180      3243696E 
 6180      62756600 
 6181              	.LASF130:
 6182 05ce 72656653 		.ascii	"refSampleTime\000"
 6182      616D706C 
 6182      6554696D 
 6182      6500
 6183              	.LASF147:
 6184 05dc 74784D65 		.ascii	"txMessage\000"
 6184      73736167 
 6184      6500
 6185              	.LASF151:
 6186 05e6 436F756E 		.ascii	"Counter_1_WriteCounter\000"
 6186      7465725F 
 6186      315F5772 
 6186      69746543 
 6186      6F756E74 
 6187              	.LASF145:
 6188 05fd 4C617374 		.ascii	"LastMessageTimeTick\000"
 6188      4D657373 
 6188      61676554 
 6188      696D6554 
 6188      69636B00 
 6189              	.LASF81:
 6190 0611 5350495F 		.ascii	"SPI_SS_IsrHandler\000"
 6190      53535F49 
 6190      73724861 
 6190      6E646C65 
 6190      7200
 6191              	.LASF142:
 6192 0623 75784869 		.ascii	"uxHighWaterMark_Current\000"
 6192      67685761 
 6192      7465724D 
 6192      61726B5F 
 6192      43757272 
 6193              	.LASF32:
 6194 063b 5469636B 		.ascii	"TickType_t\000"
 6194      54797065 
 6194      5F7400
 6195              	.LASF39:
 6196 0646 436F6E66 		.ascii	"ConfigStates_t\000"
 6196      69675374 
 6196      61746573 
 6196      5F7400
 6197              	.LASF94:
 6198 0655 5049445F 		.ascii	"PID_SetTunings\000"
 6198      53657454 
 6198      756E696E 
 6198      677300
 6199              	.LASF3:
 6200 0664 6C6F6E67 		.ascii	"long double\000"
 6200      20646F75 
 6200      626C6500 
 6201              	.LASF196:
 6202 0670 4952516E 		.ascii	"IRQn\000"
 6202      00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 142


 6203              	.LASF22:
 6204 0675 72656733 		.ascii	"reg32\000"
 6204      3200
 6205              	.LASF35:
 6206 067b 6373554E 		.ascii	"csUNDEFINED\000"
 6206      44454649 
 6206      4E454400 
 6207              	.LASF100:
 6208 0687 5049445F 		.ascii	"PID_Compute\000"
 6208      436F6D70 
 6208      75746500 
 6209              	.LASF95:
 6210 0693 6E657753 		.ascii	"newSampleTime\000"
 6210      616D706C 
 6210      6554696D 
 6210      6500
 6211              	.LASF60:
 6212 06a1 73657175 		.ascii	"sequence\000"
 6212      656E6365 
 6212      00
 6213              	.LASF124:
 6214 06aa 4F757470 		.ascii	"Output\000"
 6214      757400
 6215              	.LASF68:
 6216 06b1 636F6E66 		.ascii	"config\000"
 6216      696700
 6217              	.LASF44:
 6218 06b8 66734375 		.ascii	"fsCurrentRead\000"
 6218      7272656E 
 6218      74526561 
 6218      6400
 6219              	.LASF6:
 6220 06c6 73686F72 		.ascii	"short int\000"
 6220      7420696E 
 6220      7400
 6221              	.LASF102:
 6222 06d0 64506F73 		.ascii	"dPosition\000"
 6222      6974696F 
 6222      6E00
 6223              	.LASF62:
 6224 06da 72784D65 		.ascii	"rxMessage_config_t\000"
 6224      73736167 
 6224      655F636F 
 6224      6E666967 
 6224      5F7400
 6225              	.LASF121:
 6226 06ed 5049445F 		.ascii	"PID_Was_Enabled\000"
 6226      5761735F 
 6226      456E6162 
 6226      6C656400 
 6227              	.LASF120:
 6228 06fd 5049445F 		.ascii	"PID_Enabled\000"
 6228      456E6162 
 6228      6C656400 
 6229              	.LASF106:
 6230 0709 4D6F6465 		.ascii	"Mode\000"
 6230      00
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 143


 6231              	.LASF8:
 6232 070e 6C6F6E67 		.ascii	"long int\000"
 6232      20696E74 
 6232      00
 6233              	.LASF38:
 6234 0717 63734D41 		.ascii	"csMAX\000"
 6234      5800
 6235              	.LASF99:
 6236 071d 73616D70 		.ascii	"sampleTimeInSec\000"
 6236      6C655469 
 6236      6D65496E 
 6236      53656300 
 6237              	.LASF161:
 6238 072d 4379496E 		.ascii	"CyIntSetSysVector\000"
 6238      74536574 
 6238      53797356 
 6238      6563746F 
 6238      7200
 6239              	.LASF25:
 6240 073f 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6240      61736B61 
 6240      626C6549 
 6240      6E745F49 
 6240      52516E00 
 6241              	.LASF34:
 6242 0753 53656D61 		.ascii	"SemaphoreHandle_t\000"
 6242      70686F72 
 6242      6548616E 
 6242      646C655F 
 6242      7400
 6243              	.LASF75:
 6244 0765 74784D65 		.ascii	"txMessage_t\000"
 6244      73736167 
 6244      655F7400 
 6245              	.LASF64:
 6246 0771 73657470 		.ascii	"setpoint\000"
 6246      6F696E74 
 6246      00
 6247              	.LASF141:
 6248 077a 75784869 		.ascii	"uxHighWaterMark_PID\000"
 6248      67685761 
 6248      7465724D 
 6248      61726B5F 
 6248      50494400 
 6249              	.LASF184:
 6250 078e 6973725F 		.ascii	"isr_rst_encoder_SetPriority\000"
 6250      7273745F 
 6250      656E636F 
 6250      6465725F 
 6250      53657450 
 6251              	.LASF122:
 6252 07aa 5049445F 		.ascii	"PID_Setpoint\000"
 6252      53657470 
 6252      6F696E74 
 6252      00
 6253              	.LASF9:
 6254 07b7 5F5F7569 		.ascii	"__uint8_t\000"
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 144


 6254      6E74385F 
 6254      7400
 6255              	.LASF126:
 6256 07c1 6C617374 		.ascii	"lastPosition\000"
 6256      506F7369 
 6256      74696F6E 
 6256      00
 6257              	.LASF52:
 6258 07ce 6F705374 		.ascii	"opStatus\000"
 6258      61747573 
 6258      00
 6259              	.LASF158:
 6260 07d7 5350495F 		.ascii	"SPI_1_SpiUartReadRxData\000"
 6260      315F5370 
 6260      69556172 
 6260      74526561 
 6260      64527844 
 6261              	.LASF165:
 6262 07ef 4932435F 		.ascii	"I2C_I2CMasterSendStart\000"
 6262      4932434D 
 6262      61737465 
 6262      7253656E 
 6262      64537461 
 6263              	.LASF54:
 6264 0806 6F704D41 		.ascii	"opMAX\000"
 6264      5800
 6265              	.LASF89:
 6266 080c 436F6D6D 		.ascii	"Comm_Task\000"
 6266      5F546173 
 6266      6B00
 6267              	.LASF29:
 6268 0816 53797354 		.ascii	"SysTick_IRQn\000"
 6268      69636B5F 
 6268      4952516E 
 6268      00
 6269              	.LASF137:
 6270 0823 43686563 		.ascii	"ChecksumErrors\000"
 6270      6B73756D 
 6270      4572726F 
 6270      727300
 6271              	.LASF24:
 6272 0832 73697A65 		.ascii	"sizetype\000"
 6272      74797065 
 6272      00
 6273              	.LASF11:
 6274 083b 6C6F6E67 		.ascii	"long unsigned int\000"
 6274      20756E73 
 6274      69676E65 
 6274      6420696E 
 6274      7400
 6275              	.LASF176:
 6276 084d 496E6465 		.ascii	"Index_Counter_1_ReadCounter\000"
 6276      785F436F 
 6276      756E7465 
 6276      725F315F 
 6276      52656164 
 6277              	.LASF115:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 145


 6278 0869 43757272 		.ascii	"CurrentIndexCount\000"
 6278      656E7449 
 6278      6E646578 
 6278      436F756E 
 6278      7400
 6279              	.LASF192:
 6280 087b 76546173 		.ascii	"vTaskStartScheduler\000"
 6280      6B537461 
 6280      72745363 
 6280      68656475 
 6280      6C657200 
 6281              	.LASF110:
 6282 088f 70657263 		.ascii	"percent\000"
 6282      656E7400 
 6283              	.LASF168:
 6284 0897 4932435F 		.ascii	"I2C_I2CMasterReadBuf\000"
 6284      4932434D 
 6284      61737465 
 6284      72526561 
 6284      64427566 
 6285              	.LASF187:
 6286 08ac 5350495F 		.ascii	"SPI_1_Start\000"
 6286      315F5374 
 6286      61727400 
 6287              	.LASF5:
 6288 08b8 756E7369 		.ascii	"unsigned char\000"
 6288      676E6564 
 6288      20636861 
 6288      7200
 6289              	.LASF190:
 6290 08c6 436F756E 		.ascii	"Counter_1_Start\000"
 6290      7465725F 
 6290      315F5374 
 6290      61727400 
 6291              	.LASF10:
 6292 08d6 5F5F7569 		.ascii	"__uint32_t\000"
 6292      6E743332 
 6292      5F7400
 6293              	.LASF50:
 6294 08e1 6F70554E 		.ascii	"opUNDEFINED\000"
 6294      44454649 
 6294      4E454400 
 6295              	.LASF135:
 6296 08ed 4661756C 		.ascii	"FaultState\000"
 6296      74537461 
 6296      746500
 6297              	.LASF132:
 6298 08f8 6F75744D 		.ascii	"outMax\000"
 6298      617800
 6299              	.LASF27:
 6300 08ff 53564361 		.ascii	"SVCall_IRQn\000"
 6300      6C6C5F49 
 6300      52516E00 
 6301              	.LASF46:
 6302 090b 66735832 		.ascii	"fsX2\000"
 6302      00
 6303              	.LASF47:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 146


 6304 0910 66735833 		.ascii	"fsX3\000"
 6304      00
 6305              	.LASF48:
 6306 0915 66735834 		.ascii	"fsX4\000"
 6306      00
 6307              	.LASF136:
 6308 091a 436F6E66 		.ascii	"ConfigSequence\000"
 6308      69675365 
 6308      7175656E 
 6308      636500
 6309              	.LASF91:
 6310 0929 64757479 		.ascii	"dutycycle\000"
 6310      6379636C 
 6310      6500
 6311              	.LASF117:
 6312 0933 4C617374 		.ascii	"Last_Jog\000"
 6312      5F4A6F67 
 6312      00
 6313              	.LASF128:
 6314 093c 7265664B 		.ascii	"refKi\000"
 6314      6900
 6315              	.LASF111:
 6316 0942 5049445F 		.ascii	"PID_Task\000"
 6316      5461736B 
 6316      00
 6317              	.LASF150:
 6318 094b 52657365 		.ascii	"Reset_Encoder_ClearInterrupt\000"
 6318      745F456E 
 6318      636F6465 
 6318      725F436C 
 6318      65617249 
 6319              	.LASF127:
 6320 0968 7265664B 		.ascii	"refKp\000"
 6320      7000
 6321              	.LASF70:
 6322 096e 73746174 		.ascii	"state\000"
 6322      6500
 6323              	.LASF85:
 6324 0974 62797465 		.ascii	"byteLSB\000"
 6324      4C534200 
 6325              	.LASF164:
 6326 097c 50524F42 		.ascii	"PROBE_Write\000"
 6326      455F5772 
 6326      69746500 
 6327              	.LASF180:
 6328 0988 6973725F 		.ascii	"isr_home_StartEx\000"
 6328      686F6D65 
 6328      5F537461 
 6328      72744578 
 6328      00
 6329              	.LASF4:
 6330 0999 7369676E 		.ascii	"signed char\000"
 6330      65642063 
 6330      68617200 
 6331              	.LASF7:
 6332 09a5 73686F72 		.ascii	"short unsigned int\000"
 6332      7420756E 
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 147


 6332      7369676E 
 6332      65642069 
 6332      6E7400
 6333              	.LASF93:
 6334 09b8 5049445F 		.ascii	"PID_Initialize\000"
 6334      496E6974 
 6334      69616C69 
 6334      7A6500
 6335              	.LASF116:
 6336 09c7 6D61696E 		.ascii	"main\000"
 6336      00
 6337              	.LASF26:
 6338 09cc 48617264 		.ascii	"HardFault_IRQn\000"
 6338      4661756C 
 6338      745F4952 
 6338      516E00
 6339              	.LASF73:
 6340 09db 63757272 		.ascii	"current\000"
 6340      656E7400 
 6341              	.LASF15:
 6342 09e3 75696E74 		.ascii	"uint8\000"
 6342      3800
 6343              	.LASF20:
 6344 09e9 646F7562 		.ascii	"double\000"
 6344      6C6500
 6345              	.LASF191:
 6346 09f0 496E6465 		.ascii	"Index_Counter_1_Start\000"
 6346      785F436F 
 6346      756E7465 
 6346      725F315F 
 6346      53746172 
 6347              	.LASF143:
 6348 0a06 75784869 		.ascii	"uxHighWaterMark_Comm\000"
 6348      67685761 
 6348      7465724D 
 6348      61726B5F 
 6348      436F6D6D 
 6349              	.LASF51:
 6350 0a1b 6F70436F 		.ascii	"opConfig\000"
 6350      6E666967 
 6350      00
 6351              	.LASF181:
 6352 0a24 6973725F 		.ascii	"isr_rst_encoder_StartEx\000"
 6352      7273745F 
 6352      656E636F 
 6352      6465725F 
 6352      53746172 
 6353              	.LASF153:
 6354 0a3c 6973725F 		.ascii	"isr_home_ClearPending\000"
 6354      686F6D65 
 6354      5F436C65 
 6354      61725065 
 6354      6E64696E 
 6355              	.LASF71:
 6356 0a52 6661756C 		.ascii	"fault\000"
 6356      7400
 6357              	.LASF79:
ARM GAS  C:\Users\PRICHA~1\AppData\Local\Temp\ccaxNeVI.s 			page 148


 6358 0a58 52535449 		.ascii	"RSTIsrHandler\000"
 6358      73724861 
 6358      6E646C65 
 6358      7200
 6359              	.LASF74:
 6360 0a66 706F7369 		.ascii	"position\000"
 6360      74696F6E 
 6360      00
 6361              	.LASF49:
 6362 0a6f 4661756C 		.ascii	"FaultStates_t\000"
 6362      74537461 
 6362      7465735F 
 6362      7400
 6363              	.LASF195:
 6364 0a7d 433A5C70 		.ascii	"C:\\proj\\acsnb-motor-cypress\\QuadEncoderRTOS.cyds"
 6364      726F6A5C 
 6364      6163736E 
 6364      622D6D6F 
 6364      746F722D 
 6365 0aad 6E00     		.ascii	"n\000"
 6366              	.LASF114:
 6367 0aaf 44656C74 		.ascii	"DeltaPosition\000"
 6367      61506F73 
 6367      6974696F 
 6367      6E00
 6368              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
